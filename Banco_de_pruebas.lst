# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD E8 8A     	call Frame
  15  A104
  16  A104 3A 0E 8A     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 10 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110
  23  A110 ED 4D        	reti
  24  A112
  25  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  26  A112
  27  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
# file closed: Sprites_e_indices.asm
  28  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C
  95+ 856C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 856C
  97+ 856C C7 85        	defw Caja_1
  98+ 856E 0A 86        	defw Caja_2
  99+ 8570 4D 86        	defw Caja_3
 100+ 8572 90 86        	defw Caja_4
 101+ 8574 D3 86        	defw Caja_5
 102+ 8576 16 87        	defw Caja_6
 103+ 8578 59 87        	defw Caja_7
 104+ 857A 9C 87        	defw Caja_8
 105+ 857C DF 87        	defw Caja_9
 106+ 857E 22 88        	defw Caja_10
 107+ 8580              ;	...
 108+ 8580              ;	...
 109+ 8580              ;	+ entidades ...
 110+ 8580 00 00        	defw 0
 111+ 8582 00 00        	defw 0
 112+ 8584
 113+ 8584              ; ---------- ---------- ---------- ---------- ----------
 114+ 8584
 115+ 8584 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8586 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8588 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 858A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 858D
 120+ 858D 05           	db %00000101									; (Attr).
 121+ 858E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8590 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8592
 124+ 8592 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8594 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8596
 127+ 8596 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8598 04           	db 4 											; (Cuad_objeto).
 129+ 8599 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 859D
 131+ 859D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 859E
 133+ 859E 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A0 00 00        	defw 0											;	" " " " " " "
 135+ 85A2 00 00        	defw 0											;	" " " " " " "
 136+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A8
 138+ 85A8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85AA 00 00        	defw 0											;	" " " " " " "
 140+ 85AC 00 00        	defw 0											;	" " " " " " "
 141+ 85AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85B2
 143+ 85B2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85B4
 145+ 85B4 00           	db 0											; (Autoriza_movimiento).
 146+ 85B5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B9 00 00
 147+ 85BB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85BE
 149+ 85BE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85C0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85C1
 152+ 85C1 00           	db 0 											; (Columnas).
 153+ 85C2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85C4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85C7
 156+ 85C7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85C7
 158+ 85C7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85C9 00 00        	defw 0											; (Posicion_actual).
 160+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85D0
 163+ 85D0 00           	db %00000000 									; (Attr).
 164+ 85D1
 165+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85D9
 170+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85DB 00           	db 0											; (Cuad_objeto).
 172+ 85DC
 173+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 85E0
 175+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 85E1
 177+ 85E1 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 85E3 00 00        	defw 0											;	" " " " " " "
 179+ 85E5 00 00        	defw 0											;	" " " " " " "
 180+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85EB
 182+ 85EB 00 00        	db 0,0											; Variables_de_pintado
 183+ 85ED 00 00        	defw 0											;	" " " " " " "
 184+ 85EF 00 00        	defw 0											;	" " " " " " "
 185+ 85F1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85F5
 187+ 85F5 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 85F7
 189+ 85F7 00           	db 0											; (Autoriza_movimiento).
 190+ 85F8 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 85FC 00 00
 191+ 85FE 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8601
 193+ 8601 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8603 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8604
 196+ 8604 00           	db 0 											; (Columnas).
 197+ 8605 00 00        	defw 0											; (Limite_horizontal).
 198+ 8607 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 860A
 200+ 860A              ; ---------- ---------- ---------- ---------- ----------
 201+ 860A
 202+ 860A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 860C 00 00        	defw 0											; (Posicion_actual).
 204+ 860E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8610 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8613
 207+ 8613 00           	db %00000000 									; (Attr).
 208+ 8614
 209+ 8614 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8616 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 861A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 861C
 214+ 861C 00 00        	defw 0											; (Posicion_inicio).
 215+ 861E 00           	db 0											; (Cuad_objeto).
 216+ 861F
 217+ 861F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8623
 219+ 8623 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8624
 221+ 8624 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8626 00 00        	defw 0											;	" " " " " " "
 223+ 8628 00 00        	defw 0											;	" " " " " " "
 224+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 862E
 226+ 862E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8630 00 00        	defw 0											;	" " " " " " "
 228+ 8632 00 00        	defw 0											;	" " " " " " "
 229+ 8634 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8638
 231+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 863A
 233+ 863A 00           	db 0											; (Autoriza_movimiento).
 234+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 863F 00 00
 235+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8644
 237+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8647
 240+ 8647 00           	db 0 											; (Columnas).
 241+ 8648 00 00        	defw 0											; (Limite_horizontal).
 242+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 864D
 244+ 864D              ; ---------- ---------- ---------- ---------- ----------
 245+ 864D
 246+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 864F 00 00        	defw 0											; (Posicion_actual).
 248+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8656
 251+ 8656 00           	db %00000000 									; (Attr).
 252+ 8657
 253+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 865F
 258+ 865F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8661 00           	db 0											; (Cuad_objeto).
 260+ 8662
 261+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8666
 263+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8667
 265+ 8667 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8669 00 00        	defw 0											;	" " " " " " "
 267+ 866B 00 00        	defw 0											;	" " " " " " "
 268+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8671
 270+ 8671 00 00        	db 0,0											; Variables_de_pintado
 271+ 8673 00 00        	defw 0											;	" " " " " " "
 272+ 8675 00 00        	defw 0											;	" " " " " " "
 273+ 8677 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 867B
 275+ 867B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 867D
 277+ 867D 00           	db 0											; (Autoriza_movimiento).
 278+ 867E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 8682 00 00
 279+ 8684 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 8687
 281+ 8687 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 8689 00           	db 0											; (Cola_de_desplazamiento).
 283+ 868A
 284+ 868A 00           	db 0 											; (Columnas).
 285+ 868B 00 00        	defw 0											; (Limite_horizontal).
 286+ 868D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 8690
 288+ 8690              ; ---------- ---------- ---------- ---------- ----------
 289+ 8690
 290+ 8690 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 8692 00 00        	defw 0											; (Posicion_actual).
 292+ 8694 00 00        	defw 0 											; (Puntero_objeto).
 293+ 8696 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 8699
 295+ 8699 00           	db %00000000 									; (Attr).
 296+ 869A
 297+ 869A 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 869C 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 869E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86A2
 302+ 86A2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86A4 00           	db 0											; (Cuad_objeto).
 304+ 86A5
 305+ 86A5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86A9
 307+ 86A9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86AA
 309+ 86AA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86AC 00 00        	defw 0											;	" " " " " " "
 311+ 86AE 00 00        	defw 0											;	" " " " " " "
 312+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86B4
 314+ 86B4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86B6 00 00        	defw 0											;	" " " " " " "
 316+ 86B8 00 00        	defw 0											;	" " " " " " "
 317+ 86BA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86BE
 319+ 86BE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86C0
 321+ 86C0 00           	db 0											; (Autoriza_movimiento).
 322+ 86C1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86C5 00 00
 323+ 86C7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86CA
 325+ 86CA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86CC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86CD
 328+ 86CD 00           	db 0 											; (Columnas).
 329+ 86CE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86D0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86D3
 332+ 86D3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86D3
 334+ 86D3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86D5 00 00        	defw 0											; (Posicion_actual).
 336+ 86D7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86D9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86DC
 339+ 86DC 00           	db %00000000 									; (Attr).
 340+ 86DD
 341+ 86DD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86DF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 86E1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 86E3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 86E5
 346+ 86E5 00 00        	defw 0											; (Posicion_inicio).
 347+ 86E7 00           	db 0											; (Cuad_objeto).
 348+ 86E8
 349+ 86E8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 86EC
 351+ 86EC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 86ED
 353+ 86ED 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 86EF 00 00        	defw 0											;	" " " " " " "
 355+ 86F1 00 00        	defw 0											;	" " " " " " "
 356+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86F7
 358+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 359+ 86F9 00 00        	defw 0											;	" " " " " " "
 360+ 86FB 00 00        	defw 0											;	" " " " " " "
 361+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8701
 363+ 8701 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8703
 365+ 8703 00           	db 0											; (Autoriza_movimiento).
 366+ 8704 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8708 00 00
 367+ 870A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 870D
 369+ 870D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 870F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8710
 372+ 8710 00           	db 0 											; (Columnas).
 373+ 8711 00 00        	defw 0											; (Limite_horizontal).
 374+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8716
 376+ 8716              ; ---------- ---------- ---------- ---------- ----------
 377+ 8716
 378+ 8716 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8718 00 00        	defw 0											; (Posicion_actual).
 380+ 871A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 871C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 871F
 383+ 871F 00           	db %00000000 									; (Attr).
 384+ 8720
 385+ 8720 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8722 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8724 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8728
 390+ 8728 00 00        	defw 0											; (Posicion_inicio).
 391+ 872A 00           	db 0											; (Cuad_objeto).
 392+ 872B
 393+ 872B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 872F
 395+ 872F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8730
 397+ 8730 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8732 00 00        	defw 0											;	" " " " " " "
 399+ 8734 00 00        	defw 0											;	" " " " " " "
 400+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 873A
 402+ 873A 00 00        	db 0,0											; Variables_de_pintado
 403+ 873C 00 00        	defw 0											;	" " " " " " "
 404+ 873E 00 00        	defw 0											;	" " " " " " "
 405+ 8740 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8744
 407+ 8744 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8746
 409+ 8746 00           	db 0											; (Autoriza_movimiento).
 410+ 8747 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 874B 00 00
 411+ 874D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8750
 413+ 8750 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8752 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8753
 416+ 8753 00           	db 0 											; (Columnas).
 417+ 8754 00 00        	defw 0											; (Limite_horizontal).
 418+ 8756 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8759
 420+ 8759              ; ---------- ---------- ---------- ---------- ----------
 421+ 8759
 422+ 8759 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 875B 00 00        	defw 0											; (Posicion_actual).
 424+ 875D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 875F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8762
 427+ 8762 00           	db %00000000 									; (Attr).
 428+ 8763
 429+ 8763 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8765 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8769 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 876B
 434+ 876B 00 00        	defw 0											; (Posicion_inicio).
 435+ 876D 00           	db 0											; (Cuad_objeto).
 436+ 876E
 437+ 876E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8772
 439+ 8772 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8773
 441+ 8773 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8775 00 00        	defw 0											;	" " " " " " "
 443+ 8777 00 00        	defw 0											;	" " " " " " "
 444+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 877D
 446+ 877D 00 00        	db 0,0											; Variables_de_pintado
 447+ 877F 00 00        	defw 0											;	" " " " " " "
 448+ 8781 00 00        	defw 0											;	" " " " " " "
 449+ 8783 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 8787
 451+ 8787 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 8789
 453+ 8789 00           	db 0											; (Autoriza_movimiento).
 454+ 878A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 878E 00 00
 455+ 8790 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 8793
 457+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 459+ 8796
 460+ 8796 00           	db 0 											; (Columnas).
 461+ 8797 00 00        	defw 0											; (Limite_horizontal).
 462+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 879C
 464+ 879C              ; ---------- ---------- ---------- ---------- ----------
 465+ 879C
 466+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 879E 00 00        	defw 0											; (Posicion_actual).
 468+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87A5
 471+ 87A5 00           	db %00000000 									; (Attr).
 472+ 87A6
 473+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87AE
 478+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87B0 00           	db 0											; (Cuad_objeto).
 480+ 87B1
 481+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87B5
 483+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87B6
 485+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87B8 00 00        	defw 0											;	" " " " " " "
 487+ 87BA 00 00        	defw 0											;	" " " " " " "
 488+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87C0
 490+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87C2 00 00        	defw 0											;	" " " " " " "
 492+ 87C4 00 00        	defw 0											;	" " " " " " "
 493+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87CA
 495+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87CC
 497+ 87CC 00           	db 0											; (Autoriza_movimiento).
 498+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87D1 00 00
 499+ 87D3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87D6
 501+ 87D6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87D8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87D9
 504+ 87D9 00           	db 0 											; (Columnas).
 505+ 87DA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87DC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87DF
 508+ 87DF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87DF
 510+ 87DF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 87E1 00 00        	defw 0											; (Posicion_actual).
 512+ 87E3 00 00        	defw 0 											; (Puntero_objeto).
 513+ 87E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 87E8
 515+ 87E8 00           	db %00000000 									; (Attr).
 516+ 87E9
 517+ 87E9 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 87EB 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 87ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 87EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 87F1
 522+ 87F1 00 00        	defw 0											; (Posicion_inicio).
 523+ 87F3 00           	db 0											; (Cuad_objeto).
 524+ 87F4
 525+ 87F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 87F8
 527+ 87F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 87F9
 529+ 87F9 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 87FB 00 00        	defw 0											;	" " " " " " "
 531+ 87FD 00 00        	defw 0											;	" " " " " " "
 532+ 87FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8803
 534+ 8803 00 00        	db 0,0											; Variables_de_pintado
 535+ 8805 00 00        	defw 0											;	" " " " " " "
 536+ 8807 00 00        	defw 0											;	" " " " " " "
 537+ 8809 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 880D
 539+ 880D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 880F
 541+ 880F 00           	db 0											; (Autoriza_movimiento).
 542+ 8810 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8814 00 00
 543+ 8816 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8819
 545+ 8819 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 881B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 881C
 548+ 881C 00           	db 0 											; (Columnas).
 549+ 881D 00 00        	defw 0											; (Limite_horizontal).
 550+ 881F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8822
 552+ 8822              ; ---------- ---------- ---------- ---------- ----------
 553+ 8822
 554+ 8822 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8824 00 00        	defw 0											; (Posicion_actual).
 556+ 8826 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8828 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 882B
 559+ 882B 00           	db %00000000 									; (Attr).
 560+ 882C
 561+ 882C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 882E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8832 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8834
 566+ 8834 00 00        	defw 0											; (Posicion_inicio).
 567+ 8836 00           	db 0											; (Cuad_objeto).
 568+ 8837
 569+ 8837 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 883B
 571+ 883B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 883C
 573+ 883C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 883E 00 00        	defw 0											;	" " " " " " "
 575+ 8840 00 00        	defw 0											;	" " " " " " "
 576+ 8842 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8846
 578+ 8846 00 00        	db 0,0											; Variables_de_pintado
 579+ 8848 00 00        	defw 0											;	" " " " " " "
 580+ 884A 00 00        	defw 0											;	" " " " " " "
 581+ 884C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8850
 583+ 8850 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8852
 585+ 8852 00           	db 0											; (Autoriza_movimiento).
 586+ 8853 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8857 00 00
 587+ 8859 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 885C
 589+ 885C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 885E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 885F
 592+ 885F 00           	db 0 											; (Columnas).
 593+ 8860 00 00        	defw 0											; (Limite_horizontal).
 594+ 8862 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8865
 596+ 8865              ; -------------------------------------------------------------------------------------
 597+ 8865              ;
 598+ 8865              ;	20/05/23
 599+ 8865              ;
 600+ 8865              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8865              ;
 602+ 8865              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8865              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8865              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8865              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8865
 607+ 8865              Indice_de_entidades
 608+ 8865
 609+ 8865 6F 88        	defw Entidad_1
 610+ 8867 7F 88        	defw Entidad_2
 611+ 8869 8F 88        	defw Entidad_3
 612+ 886B 9F 88        	defw Entidad_4
 613+ 886D AF 88        	defw Entidad_5
 614+ 886F
 615+ 886F              ;	BADSAT, (Satélite malvado).
 616+ 886F
 617+ 886F 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 618+ 8871 04           	db %00000100									; (Attr).
 619+ 8872 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 620+ 8874 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 621+ 8876 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 622+ 8878 01           	db 1											; (Cuad_objeto).
 623+ 8879 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 624+ 887D F8 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 625+ 887F
 626+ 887F 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 627+ 8881 02           	db %00000010									; (Attr).
 628+ 8882 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 629+ 8884 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 630+ 8886 40 50        	defw $5040                                      ; (Posicion_inicio).
 631+ 8888 01           	db 1											; (Cuad_objeto).
 632+ 8889 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 633+ 888D F8 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 634+ 888F
 635+ 888F 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 636+ 8891 04           	db %00000100									; (Attr).
 637+ 8892 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 638+ 8894 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 639+ 8896 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 640+ 8898 01           	db 1											; (Cuad_objeto).
 641+ 8899 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 642+ 889D F8 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 643+ 889F
 644+ 889F 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 645+ 88A1 01           	db %00000001									; (Attr).
 646+ 88A2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 647+ 88A4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 648+ 88A6 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 649+ 88A8 01           	db 1											; (Cuad_objeto).
 650+ 88A9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 651+ 88AD F8 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 652+ 88AF
 653+ 88AF 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 654+ 88B1 01           	db %00000001									; (Attr).
 655+ 88B2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 656+ 88B4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 657+ 88B6 07 40        	defw $4007                                      ; (Posicion_inicio).
 658+ 88B8 01           	db 1											; (Cuad_objeto).
 659+ 88B9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 660+ 88BD F8 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 661+ 88BF
# file closed: Cajas_y_disparos.asm
  29  88BF              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BF              ; 13/05/23
   2+ 88BF
   3+ 88BF              Indice_de_niveles
   4+ 88BF
   5+ 88BF CD 88        	defw Nivel_1
   6+ 88C1 D3 88        	defw Nivel_2
   7+ 88C3 E0 88        	defw Nivel_3
   8+ 88C5 F0 88        	defw Nivel_4
   9+ 88C7 02 89        	defw Nivel_5
  10+ 88C9
  11+ 88C9              ;	...
  12+ 88C9              ;	...
  13+ 88C9              ;	+ Niveles ...
  14+ 88C9
  15+ 88C9 00 00        	defw 0
  16+ 88CB 00 00        	defw 0
  17+ 88CD
  18+ 88CD 05           Nivel_1 db 5	                                ; Nº de entidades.
  19+ 88CE 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 88D2 01
  20+ 88D3 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88D4 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D8 01 02
  22+ 88DA 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88DE 01 02
  23+ 88E0 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88E1 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88E5 01
  25+ 88E6 03 01 01 01  	db 3,1,1,1,1
  25+ 88EA 01
  26+ 88EB 03 01 01 01  	db 3,1,1,1,1
  26+ 88EF 01
  27+ 88F0 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88F1 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88F5 01
  29+ 88F6 04 01 01 01  	db 4,1,1,1,1
  29+ 88FA 01
  30+ 88FB 04 01 01 01  	db 4,1,1,1,1
  30+ 88FF 01
  31+ 8900 02 03        	db 2,3
  32+ 8902 14           Nivel_5 db 20									; Nº de entidades.
  33+ 8903 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8907 01
  34+ 8908 05 01 01 01  	db 5,1,1,1,1
  34+ 890C 01
  35+ 890D 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 8911 01
  36+ 8912 05 01 01 01  	db 5,1,1,1,1
  36+ 8916 01
  37+ 8917
  38+ 8917              ;---------------------------------------------------------------------------------------------------------------
  39+ 8917              ;
  40+ 8917              ;   21/5/23
  41+ 8917              ;
  42+ 8917              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8917              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8917              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8917              ;	_en la caja DRAW correspondiente.
  46+ 8917              ;
  47+ 8917              ;	MODIFICA: HL,DE y A.
  48+ 8917              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8917
  50+ 8917              Inicializa_Punteros_de_nivel
  51+ 8917
  52+ 8917 21 BF 88     	ld hl,Indice_de_niveles
  53+ 891A 22 53 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 891D CD 4B 8D     	call Extrae_address
  55+ 8920 7E           	ld a,(hl)
  56+ 8921 32 19 8A     	ld (Numero_de_entidades),a
  57+ 8924 23           	inc hl
  58+ 8925 22 55 8A     	ld (Datos_de_nivel),hl
  59+ 8928 C9           	ret
  60+ 8929
  61+ 8929              ;---------------------------------------------------------------------------------------------------------------
  62+ 8929              ;
  63+ 8929              ;   13/5/23
  64+ 8929              ;
  65+ 8929              ;	Destruye A,BC,HL,DE
  66+ 8929
  67+ 8929              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8929              ;	_del juego.
  69+ 8929
  70+ 8929              Prepara_cajas
  71+ 8929
  72+ 8929              ; Preparamos los punteros de las cajas.
  73+ 8929
  74+ 8929 21 6C 85     	ld hl,Indice_de_cajas
  75+ 892C CD 4B 8D     	call Extrae_address
  76+ 892F CD 6C 89     	call Avanza_caja
  77+ 8932
  78+ 8932 CD B0 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8935
  80+ 8935 2A 55 8A     	ld hl,(Datos_de_nivel)
  81+ 8938
  82+ 8938              ; HL está en los datos del nivel correspondiente.
  83+ 8938              ; B actuará como contador de cajas.
  84+ 8938
  85+ 8938 C5           1 push bc
  86+ 8939
  87+ 8939 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 893A CD 5D 89     	call PreparaBC
  89+ 893D
  90+ 893D 21 65 88     	ld hl,Indice_de_entidades
  91+ 8940 CD 65 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8943 22 1F 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8946
  94+ 8946 CD 76 89     	call Datos_de_entidad_a_caja
  95+ 8949
  96+ 8949 2A 17 8A     	ld hl,(Indice_restore_caja)
  97+ 894C CD 4B 8D     	call Extrae_address
  98+ 894F CD 6C 89     	call Avanza_caja
  99+ 8952
 100+ 8952 2A 55 8A     	ld hl,(Datos_de_nivel)
 101+ 8955 23           	inc hl
 102+ 8956 22 55 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8959
 104+ 8959 C1           	pop bc
 105+ 895A 10 DC        	djnz 1B
 106+ 895C C9           	ret
 107+ 895D
 108+ 895D CB 27        PreparaBC sla a
 109+ 895F D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8961 4F           	ld c,a
 111+ 8962 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8964 C9           	ret
 113+ 8965
 114+ 8965 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8966 ED 4A        	adc hl,bc
 116+ 8968 CD 4B 8D     	call Extrae_address
 117+ 896B C9           	ret
 118+ 896C
 119+ 896C 22 13 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 896F 13           	inc de
 121+ 8970 13           	inc de
 122+ 8971 EB           	ex de,hl
 123+ 8972 22 17 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8975 C9           	ret
 125+ 8976
 126+ 8976              Datos_de_entidad_a_caja
 127+ 8976
 128+ 8976              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8976
 130+ 8976
 131+ 8976 ED 5B 13 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 897A
 133+ 897A 01 02 00     	ld bc,2
 134+ 897D ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 897F
 136+ 897F 01 07 00     	ld bc,7
 137+ 8982 CD AA 89     	call Situa_DE
 138+ 8985
 139+ 8985 01 05 00     	ld bc,5
 140+ 8988 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 898A
 142+ 898A 01 04 00     	ld bc,4
 143+ 898D CD AA 89     	call Situa_DE
 144+ 8990
 145+ 8990 01 07 00     	ld bc,7
 146+ 8993 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8995
 148+ 8995 01 18 00     	ld bc,24
 149+ 8998 CD AA 89     	call Situa_DE
 150+ 899B
 151+ 899B 01 02 00     	ld bc,2
 152+ 899E ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 89A0
 154+ 89A0              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 89A0              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 89A0
 157+ 89A0 01 0F 00     	ld bc,15									; *****
 158+ 89A3 CD AA 89     	call Situa_DE
 159+ 89A6
 160+ 89A6 3E 03        	ld a,3
 161+ 89A8 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A9
 163+ 89A9 C9           	ret
 164+ 89AA
 165+ 89AA EB           Situa_DE ex de,hl
 166+ 89AB A7           	and a
 167+ 89AC ED 4A        	adc hl,bc
 168+ 89AE EB           	ex de,hl
 169+ 89AF C9           	ret
 170+ 89B0
 171+ 89B0              ;---------------------------------------------------------------------------------------------------------------
 172+ 89B0              ;
 173+ 89B0              ;	21/5/23
 174+ 89B0              ;
 175+ 89B0              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89B0              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89B0              ;
 178+ 89B0              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89B0              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89B0              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89B0              ;
 182+ 89B0              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89B0              ;	MODIFICA: A y B.
 184+ 89B0              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89B0
 186+ 89B0              Admin_num_entidades
 187+ 89B0
 188+ 89B0              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89B0
 190+ 89B0 3A 19 8A     	ld a,(Numero_de_entidades)
 191+ 89B3 A7           	and a
 192+ 89B4              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89B4              ;	jr z,$
 194+ 89B4              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89B4
 196+ 89B4 20 03        	jr nz,3F
 197+ 89B6
 198+ 89B6              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89B6
 200+ 89B6 CD 17 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B9
 202+ 89B9
 203+ 89B9 3A 19 8A     3 ld a,(Numero_de_entidades)
 204+ 89BC FE 0A        	cp 10
 205+ 89BE 38 08        	jr c,1F
 206+ 89C0
 207+ 89C0              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89C0              ; Actualizamos variables.
 209+ 89C0
 210+ 89C0 3E 0A        	ld a,10
 211+ 89C2 32 1A 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89C5 47           	ld b,a
 213+ 89C6 18 04        	jr 2F
 214+ 89C8
 215+ 89C8              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C8              ; (Numero_de_entidades)="0".
 217+ 89C8
 218+ 89C8 32 1A 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89CB 47           	ld b,a
 220+ 89CC C9           2 ret
# file closed: Niveles.asm
  30  89CD
  31  89CD              ; ******************************************************************************************************************************************************************************************
  32  89CD              ; Constantes.
  33  89CD              ; ******************************************************************************************************************************************************************************************
  34  89CD              ;
  35  89CD              ; 25/05/23
  36  89CD              ;
  37  89CD              ; Constantes generales.
  38  89CD              ;
  39  89CD
  40  89CD              Sprite_vacio equ $f000
  41  89CD              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  42  89CD              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  43  89CD              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  44  89CD              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  45  89CD
  46  89CD              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  47  89CD              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  48  89CD              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  49  89CD              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  50  89CD              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  51  89CD              ;                               				        ; De momento situamos este almacén en $7060.
  52  89CD              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  53  89CD              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  54  89CD              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  55  89CD              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  56  89CD              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  57  89CD              Album_de_fotos_disparos_3 equ $739d	; (7396h - 7418h).
  58  89CD
  59  89CD              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  60  89CD
  61  89CD              ; ******************************************************************************************************************************************************************************************
  62  89CD              ; Variables.
  63  89CD              ; ******************************************************************************************************************************************************************************************
  64  89CD              ;
  65  89CD              ; 28/07/23
  66  89CD              ;
  67  89CD              ; Variables de DRAW. (Motor principal).
  68  89CD              ;
  69  89CD              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  70  89CD
  71  89CD 00           Filas db 0												; Filas. [DRAW]
  72  89CE 00           Columns db 0  											; Nº de columnas. [DRAW]
  73  89CF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  74  89D1 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  75  89D3 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  76  89D4 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  77  89D5
  78  89D5              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  79  89D5
  80  89D5 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  81  89D6              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  82  89D6              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  83  89D6 00           Attr db 0												; Atributos de la entidad:
  84  89D7
  85  89D7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  86  89D7              ;
  87  89D7              ;	COLORES: 0 ..... NEGRO
  88  89D7              ;    		 1 ..... AZUL
  89  89D7              ; 			 2 ..... ROJO
  90  89D7              ;			 3 ..... MAGENTA
  91  89D7              ; 			 4 ..... VERDE
  92  89D7              ; 			 5 ..... CIAN
  93  89D7              ;			 6 ..... AMARILLO
  94  89D7              ; 			 7 ..... BLANCO
  95  89D7
  96  89D7 00 00        Indice_Sprite_der defw 0
  97  89D9 00 00        Indice_Sprite_izq defw 0
  98  89DB 00 00        Puntero_DESPLZ_der defw 0
  99  89DD 00 00        Puntero_DESPLZ_izq defw 0
 100  89DF
 101  89DF 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 102  89E1 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 103  89E2
 104  89E2              ; Variables de objeto. (Características).
 105  89E2
 106  89E2 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 107  89E3 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 108  89E4 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 109  89E5 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 110  89E6
 111  89E6 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 112  89E7              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 113  89E7              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 114  89E7
 115  89E7 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 116  89E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 117  89EB 00 00        	defw 0
 118  89ED 00 00 00 00  	db 0,0,0,0
 119  89F1
 120  89F1 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 121  89F3 00 00        	defw 0
 122  89F5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 123  89F7 00 00 00 00  	db 0,0,0,0
 124  89FB
 125  89FB              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 126  89FB
 127  89FB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 128  89FC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 129  89FC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 130  89FC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 131  89FC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 132  89FC              ;
 133  89FC              ; 														DESCRIPCIÖN:
 134  89FC              ;
 135  89FC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 136  89FC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 137  89FC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 138  89FC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 139  89FC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 140  89FC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 141  89FC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 142  89FC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 143  89FC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 144  89FC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 145  89FC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 146  89FC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 147  89FC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 148  89FC              ;
 149  89FC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 150  89FC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 151  89FC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 152  89FC
 153  89FC 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 154  89FD
 155  89FD              ; Movimiento. ------------------------------------------------------------------------------------------------------
 156  89FD
 157  89FD 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 158  89FE 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 159  8A00 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 160  8A02 00 00        Puntero_indice_mov_bucle defw 0							;
 161  8A04              ;
 162  8A04              ;
 163  8A04 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 164  8A05              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 165  8A05              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 166  8A05 00           Incrementa_puntero_backup db 0
 167  8A06 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 168  8A07              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 169  8A07 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 170  8A08 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 171  8A09 00           Cola_de_desplazamiento db 0								; Este byte indica:
 172  8A0A              ;
 173  8A0A              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 174  8A0A              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 175  8A0A              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 176  8A0A              ;
 177  8A0A              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 178  8A0A              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 179  8A0A              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 180  8A0A              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 181  8A0A              ;
 182  8A0A              ;														;	"$ff" ..... Bucle infinito de repetición.
 183  8A0A              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 184  8A0A              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 185  8A0A
 186  8A0A
 187  8A0A              ; Variables de funcionamiento. [DRAW].
 188  8A0A
 189  8A0A 00           Columnas db 0
 190  8A0B 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 191  8A0D              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 192  8A0D 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 193  8A0E
 194  8A0E              ; variables de control general.
 195  8A0E
 196  8A0E 00           Ctrl_2 db 0
 197  8A0F              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 198  8A0F              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 199  8A0F              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 200  8A0F              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 201  8A0F              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 202  8A0F              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 203  8A0F              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 204  8A0F              ;
 205  8A0F              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 206  8A0F              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 207  8A0F              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 208  8A0F              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 209  8A0F              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 210  8A0F
 211  8A0F 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 212  8A10
 213  8A10              ;! 67 Bytes por entidad.
 214  8A10
 215  8A10              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 216  8A10              ;					         		---------;      ;---------
 217  8A10
 218  8A10
 219  8A10              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 220  8A10
 221  8A10 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 222  8A11
 223  8A11              ;														DESCRIPCIÓN:
 224  8A11              ;
 225  8A11              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 226  8A11              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 227  8A11              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 228  8A11              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 229  8A11              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 230  8A11              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 231  8A11              ;														BIT 3, Recarga de nueva oleada.
 232  8A11              ;														BIT 4, Recarga de nueva oleada.
 233  8A11
 234  8A11 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 235  8A13              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 236  8A13              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 237  8A13              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 238  8A13
 239  8A13
 240  8A13
 241  8A13              ; Gestión de ENTIDADES y CAJAS.
 242  8A13
 243  8A13 00 00        Puntero_store_caja defw 0
 244  8A15 00 00        Puntero_restore_caja defw 0
 245  8A17 00 00        Indice_restore_caja defw 0
 246  8A19 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 247  8A1A 00           Numero_parcial_de_entidades db 0
 248  8A1B 00           Entidades_en_curso db 0									; ..... ..... .....
 249  8A1C 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 250  8A1D              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 251  8A1D              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 252  8A1D              ;														; _ (Numero_de_malotes)="0".
 253  8A1D 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 254  8A1F 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 255  8A21              ;														; _ puntero (Indice_entidades).
 256  8A21
 257  8A21
 258  8A21              ;---------------------------------------------------------------------------------------------------------------
 259  8A21              ;
 260  8A21              ; Sirven para PINTAR.
 261  8A21
 262  8A21 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 263  8A23              ;															; _variable para almacenar lo posición del puntero_
 264  8A23              ; 															; _de pila, SP.
 265  8A23 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 266  8A25              ;															; La utiliza la rutina [Extrae_foto_registros].
 267  8A25 00 70        Stack_snapshot defw Album_de_fotos							; Puntero que indica la posición de memoria donde vamos a guardar_
 268  8A27              ;															; _el snapshot de los registros de la siguiente entidad.
 269  8A27              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 270  8A27 0D 72        Stack_snapshot_disparos defw Album_de_fotos_disparos		; Puntero que indica la posición de memoria donde vamos a guardar_
 271  8A29              ;															; _el snapshot de los registros del siguiente disparo.
 272  8A29              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 273  8A29 84 70        Stack_snapshot_1 defw Album_de_fotos_1
 274  8A2B 90 72        Stack_snapshot_disparos_1 defw Album_de_fotos_disparos_1
 275  8A2D 07 71        Stack_snapshot_2 defw Album_de_fotos_2
 276  8A2F 19 73        Stack_snapshot_disparos_2 defw Album_de_fotos_disparos_2
 277  8A31 8A 71        Stack_snapshot_3 defw Album_de_fotos_3
 278  8A33 9D 73        Stack_snapshot_disparos_3 defw Album_de_fotos_disparos_3
 279  8A35
 280  8A35              ;---------------------------------------------------------------------------------------------------------------
 281  8A35
 282  8A35              ; Gestión de Disparos.
 283  8A35
 284  8A35 00           Numero_de_disparotes db 0
 285  8A36 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 286  8A38 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 287  8A3A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 288  8A3B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 289  8A3B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 290  8A3B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 291  8A3D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 292  8A3D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 293  8A3D              ;														; _produzca colisión.
 294  8A3D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 295  8A3F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 296  8A3F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 297  8A42              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 298  8A42 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 299  8A45              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 300  8A45 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 301  8A47 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 302  8A48
 303  8A48              ;---------------------------------------------------------------------------------------------------------------
 304  8A48
 305  8A48              ; Relojes y temporizaciones.
 306  8A48
 307  8A48 00           Contador_de_frames db 0
 308  8A49 04           Clock_explosion db 4
 309  8A4A 1E           Clock_Entidades_en_curso db 30
 310  8A4B 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 311  8A4C              ;														; Repite la oleada de entidades.
 312  8A4C 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 313  8A4D 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 314  8A4E 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 315  8A4F
 316  8A4F 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 317  8A50 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 318  8A51 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 319  8A52
 320  8A52              ;---------------------------------------------------------------------------------------------------------------
 321  8A52
 322  8A52              ; Gestión de NIVELES.
 323  8A52
 324  8A52 00           Nivel db 0												; Nivel actual del juego.
 325  8A53 00 00        Puntero_indice_NIVELES defw 0
 326  8A55 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 327  8A57              ; 														; _ que definen el NIVEL.
 328  8A57              ; Y todo comienza aquí .....
 329  8A57              ;
 330  8A57              ; Rutina principal *************************************************************************************************************************************************************************
 331  8A57              ;
 332  8A57              ;	14/11/22
 333  8A57
 334  8A57              START
 335  8A57
 336  8A57 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 337  8A5A 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 338  8A5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 339  8A5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 340  8A60 F3           	DI
 341  8A61
 342  8A61 3E 07        	ld a,%00000111
 343  8A63 CD 34 99     	call Cls
 344  8A66
 345  8A66              ;	call Pinta_marco
 346  8A66
 347  8A66
 348  8A66 CD 17 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 349  8A69
 350  8A69 CD 24 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 351  8A6C
 352  8A6C CD 29 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 353  8A6F
 354  8A6F CD F7 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 355  8A72              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 356  8A72 CD D4 8D     	call Restore_entidad
 357  8A75
 358  8A75 21 1A 8A     	ld hl,Numero_parcial_de_entidades
 359  8A78 46           	ld b,(hl)
 360  8A79 04           	inc b
 361  8A7A 05           	dec b
 362  8A7B 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 363  8A7D
 364  8A7D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 365  8A7D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 366  8A7D              ;	Pintamos el resto de entidades:
 367  8A7D
 368  8A7D              ;	INICIA ENTIDADES !!!!!
 369  8A7D
 370  8A7D C5           1 push bc  												; Guardo el contador de entidades.
 371  8A7E
 372  8A7E CD 9E 8C     	call Inicia_entidad
 373  8A81
 374  8A81 C1           	pop bc
 375  8A82 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 376  8A84
 377  8A84              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 378  8A84              ; (Esto se dá cuando se inicia una nueva oleada).
 379  8A84
 380  8A84 3A 10 8A     	ld a,(Ctrl_1)
 381  8A87 CB 5F        	bit 3,a
 382  8A89 20 18        	jr nz,5F											; Loop
 383  8A8B
 384  8A8B              ; 	INICIA AMADEUS !!!!!
 385  8A8B
 386  8A8B CD FB 8D     3 call Restore_Amadeus
 387  8A8E CD 51 8D     	call Inicia_Puntero_objeto
 388  8A91 CD 6E 93     	call Draw
 389  8A94 CD A0 7F     	call Guarda_foto_registros
 390  8A97 11 84 85     	ld de,Amadeus_db
 391  8A9A CD 0D 8E     	call Store_Amadeus
 392  8A9D
 393  8A9D              ; 	INICIA DISPAROS !!!!!
 394  8A9D
 395  8A9D CD 0D 8D     	call Inicia_Puntero_Disparo_Entidades
 396  8AA0 CD 14 8D     	call Inicia_Puntero_Disparo_Amadeus
 397  8AA3
 398  8AA3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 399  8AA3
 400  8AA3 CD F7 8C     5 call Inicia_punteros_de_cajas
 401  8AA6 CD D4 8D     	call Restore_entidad
 402  8AA9
 403  8AA9 3A 10 8A     	ld a,(Ctrl_1)
 404  8AAC CB 5F        	bit 3,a
 405  8AAE 28 0A        	jr z,6F
 406  8AB0
 407  8AB0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 408  8AB0
 409  8AB0 21 10 8A     	ld hl,Ctrl_1
 410  8AB3 CB 9E        	res 3,(hl)
 411  8AB5 CD 1B 8D     	call Calcula_numero_de_malotes
 412  8AB8 18 07        	jr 7F
 413  8ABA
 414  8ABA              ; ----------
 415  8ABA
 416  8ABA 3A 1A 8A     6 ld a,(Numero_parcial_de_entidades)
 417  8ABD 3C           	inc a
 418  8ABE 32 1C 8A     	ld (Numero_de_malotes),a
 419  8AC1
 420  8AC1              ; --- el 1er FRAME, (inicio).
 421  8AC1
 422  8AC1              7
 423  8AC1              ;	ld de,Album_de_fotos									; Vamos a imprimir el 1er FRAME. Volcamos los datos_
 424  8AC1              ;	call Imprime_inicio 									; _ de Album_de_fotos_3 a Album_de_fotos.
 425  8AC1
 426  8AC1              ;	ld hl,(Stack_snapshot_2)
 427  8AC1              ;	ld (Stack_snapshot),hl
 428  8AC1
 429  8AC1              ;	ld hl,Album_de_fotos_2
 430  8AC1              ;	ld (Stack_snapshot_2),hl
 431  8AC1              ; ------------------
 432  8AC1
 433  8AC1              ; ------------------------------------
 434  8AC1 AF           	xor a
 435  8AC2 FB           2 ei ; Interrupciones habilitadas.
 436  8AC3 28 FD        	jr z,2B
 437  8AC5              ; ------------------------------------
 438  8AC5
 439  8AC5 3A 48 8A     	ld a,(Contador_de_frames)
 440  8AC8 47           	ld b,a
 441  8AC9 3A 4B 8A     	ld a,(Activa_recarga_cajas)
 442  8ACC B8           	cp b
 443  8ACD 28 08        	jr z,8F
 444  8ACF
 445  8ACF 21 10 8A     	ld hl,Ctrl_1
 446  8AD2 CB E6        	set 4,(hl)
 447  8AD4 AF           	xor a
 448  8AD5 18 EB        	jr 2B
 449  8AD7
 450  8AD7 21 10 8A     8 ld hl,Ctrl_1
 451  8ADA CB A6        	res 4,(hl)
 452  8ADC F3           	di
 453  8ADD
 454  8ADD 3A 48 8A     	ld a,(Contador_de_frames)
 455  8AE0
 456  8AE0              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 457  8AE0              ;! _ IMPREDECIBLE !!!!
 458  8AE0
 459  8AE0 C6 0A        	add 10
 460  8AE2 32 4A 8A     	ld (Clock_Entidades_en_curso),a
 461  8AE5
 462  8AE5 C3 6C 8A     	jp 4B
 463  8AE8
 464  8AE8
 465  8AE8              ; ----------------------------------------------------------------------
 466  8AE8
 467  8AE8              Frame
 468  8AE8
 469  8AE8              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 470  8AE8              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 471  8AE8
 472  8AE8              ; PINTAMOS.
 473  8AE8
 474  8AE8 3E 02            ld a,2
 475  8AEA D3 FE            out ($fe),a											; Rojo.
 476  8AEC CD 7C 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 477  8AEF CD BB 96     	call Extrae_foto_disparos
 478  8AF2 3E 01            ld a,1
 479  8AF4 D3 FE            out ($fe),a											; Azul.
 480  8AF6
 481  8AF6              ; ----------------------------------------------------------------------
 482  8AF6
 483  8AF6 CD C6 90     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 484  8AF9
 485  8AF9 21 00 70     	ld hl,Album_de_fotos
 486  8AFC 22 25 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 487  8AFF              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 488  8AFF              ; Gestiona los álbumes de fotos.
 489  8AFF
 490  8AFF CD 1A 74     	call Gestiona_albumes_de_fotos
 491  8B02 CD 06 75     	call Gestiona_albumes_de_fotos_disparos
 492  8B05
 493  8B05              ; RELOJES.
 494  8B05
 495  8B05 21 48 8A     	ld hl,Contador_de_frames
 496  8B08 34           	inc (hl)											; 0 - 255
 497  8B09
 498  8B09 3A 4A 8A     	ld a,(Clock_Entidades_en_curso)
 499  8B0C 47           	ld b,a
 500  8B0D 3A 48 8A     	ld a,(Contador_de_frames)
 501  8B10 B8           	cp b
 502  8B11 20 18        	jr nz,13F
 503  8B13
 504  8B13 3A 1A 8A     	ld a,(Numero_parcial_de_entidades)
 505  8B16 47           	ld b,a
 506  8B17 3A 1B 8A     	ld a,(Entidades_en_curso)
 507  8B1A B8           	cp b
 508  8B1B 28 0E        	jr z,13F
 509  8B1D 30 0C        	jr nc,13F
 510  8B1F
 511  8B1F 3C           	inc a
 512  8B20 32 1B 8A     	ld (Entidades_en_curso),a
 513  8B23
 514  8B23 3A 4A 8A     	ld a,(Clock_Entidades_en_curso)
 515  8B26
 516  8B26              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 517  8B26              ;! _ IMPREDECIBLE !!!!
 518  8B26
 519  8B26 C6 64        	add 100
 520  8B28 32 4A 8A     	ld (Clock_Entidades_en_curso),a
 521  8B2B
 522  8B2B              ; Habilita disparos.
 523  8B2B
 524  8B2B 21 4C 8A     13 ld hl,Disparo_Amadeus
 525  8B2E 11 4E 8A     	ld de,CLOCK_repone_disparo_Amadeus
 526  8B31 CD F9 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 527  8B34
 528  8B34 21 4F 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 529  8B37 11 51 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 530  8B3A CD F9 9F     	call Habilita_disparos
 531  8B3D
 532  8B3D              ; COLISIONES.
 533  8B3D
 534  8B3D CD 50 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 535  8B40
 536  8B40              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 537  8B40              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 538  8B40              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 539  8B40
 540  8B40 AF           	xor a
 541  8B41 32 3A 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 542  8B44
 543  8B44 CD F7 8C     	call Inicia_punteros_de_cajas
 544  8B47 CD D4 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 545  8B4A              ; 														; _ en DRAW.
 546  8B4A 3A CD 89     	ld a,(Filas)
 547  8B4D A7           	and a
 548  8B4E 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 549  8B50 CD E6 8D     	call Incrementa_punteros_de_cajas
 550  8B53 18 F2        	jr 12B
 551  8B55
 552  8B55              ; ---------------------------------------------------------------------------------------
 553  8B55
 554  8B55 3A 1A 8A     10 ld a,(Numero_parcial_de_entidades)
 555  8B58 47               ld b,a
 556  8B59 A7           	and a
 557  8B5A 20 14        	jr nz,2F
 558  8B5C
 559  8B5C 21 10 8A     	ld hl,Ctrl_1
 560  8B5F CB 66        	bit 4,(hl)
 561  8B61 C2 ED 8B     	jp nz,4F
 562  8B64
 563  8B64 21 10 8A     	ld hl,Ctrl_1
 564  8B67 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 565  8B69
 566  8B69 3A 48 8A     	ld a,(Contador_de_frames)
 567  8B6C 3C           	inc a
 568  8B6D 32 4B 8A     	ld (Activa_recarga_cajas),a
 569  8B70
 570  8B70              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 571  8B70
 572  8B70 3A 1B 8A     2 ld a,(Entidades_en_curso)
 573  8B73 A7           	and a
 574  8B74 CA ED 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 575  8B77 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 576  8B78
 577  8B78              ; Código que ejecutamos con cada entidad:
 578  8B78              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 579  8B78
 580  8B78 C5           15 push bc 												; Nº de entidades en curso.
 581  8B79
 582  8B79              ; Impacto ???
 583  8B79
 584  8B79 3A E6 89     33 ld a,(Impacto)
 585  8B7C A7           	and a
 586  8B7D 28 2D        	jr z,8F
 587  8B7F
 588  8B7F              ; Hay Impacto en esta entidad.
 589  8B7F
 590  8B7F 21 49 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 591  8B82 35           	dec (hl)
 592  8B83 20 62        	jr nz,6F
 593  8B85
 594  8B85              ;! Velocidad de la animación de la explosión.
 595  8B85
 596  8B85 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 597  8B87              ;														; _,(velocidad de la explosión).
 598  8B87 CD AE 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 599  8B8A
 600  8B8A              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 601  8B8A
 602  8B8A 3A 0E 8A     	ld a,(Ctrl_2)
 603  8B8D CB 4F        	bit 1,a
 604  8B8F 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 605  8B91
 606  8B91              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 607  8B91
 608  8B91 3A D5 89     	ld a,(CTRL_DESPLZ)
 609  8B94 A7           	and a
 610  8B95 20 08        	jr nz,21F
 611  8B97
 612  8B97 21 84 84     	ld hl,Indice_Explosion_2x2-2
 613  8B9A 22 DB 89     	ld (Puntero_DESPLZ_der),hl
 614  8B9D 18 06        	jr 22F
 615  8B9F
 616  8B9F 21 EE 83     21 ld hl,Indice_Explosion_2x3-2
 617  8BA2 22 DB 89     	ld (Puntero_DESPLZ_der),hl
 618  8BA5
 619  8BA5 21 0E 8A     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 620  8BA8 CB CE        	set 1,(hl)
 621  8BAA 18 22        	jr 7F
 622  8BAC
 623  8BAC              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 624  8BAC              ; _con las coordenadas de la entidad almacenada en DRAW.
 625  8BAC
 626  8BAC 3A 10 8A     8 ld a,(Ctrl_1)
 627  8BAF CB 57        	bit 2,a
 628  8BB1 28 1B        	jr z,7F
 629  8BB3
 630  8BB3 2A 3D 8A     	ld hl,(Coordenadas_disparo_certero)
 631  8BB6 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 632  8BB7              ;														; E contiene la coordenada_X del disparo.
 633  8BB7 2A D3 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 634  8BBA              ;														; H FILA, (Coordenada_y de la entidad).
 635  8BBA A7           	and a
 636  8BBB ED 52        	sbc hl,de
 637  8BBD
 638  8BBD CD 87 92     	call Determina_resultado_comparativa
 639  8BC0
 640  8BC0 78           	ld a,b
 641  8BC1 A7           	and a
 642  8BC2 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 643  8BC4
 644  8BC4              ; ----- ----- -----
 645  8BC4
 646  8BC4 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 647  8BC6 32 E6 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 648  8BC9
 649  8BC9 21 10 8A     	ld hl,Ctrl_1
 650  8BCC CB 96        	res 2,(hl)
 651  8BCE
 652  8BCE CD 20 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 653  8BD1
 654  8BD1 3A FB 89     	ld a,(Ctrl_0)
 655  8BD4 CB 67        	bit 4,a
 656  8BD6 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 657  8BD8
 658  8BD8              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 659  8BD8              ; [[[
 660  8BD8 CD 6F 8E     	call Detecta_disparo_entidad
 661  8BDB              ; ]]]
 662  8BDB CD BE 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 663  8BDE
 664  8BDE 21 FB 89     	ld hl,Ctrl_0
 665  8BE1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 666  8BE3 AF           	xor a
 667  8BE4 32 FC 89     	ld (Obj_dibujado),a
 668  8BE7
 669  8BE7 CD 99 8D     6 call Store_Restore_cajas
 670  8BEA
 671  8BEA C1           	pop bc
 672  8BEB 10 8B        	djnz 15B
 673  8BED
 674  8BED              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 675  8BED
 676  8BED              ;	ld a,2
 677  8BED              ;	ld (Limitador_de_entidades_x_frame),a
 678  8BED
 679  8BED              ; ------------------------------------
 680  8BED              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 681  8BED              ; Hemos gestionado todas las unidades.
 682  8BED              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 683  8BED
 684  8BED              ;	ld hl,Ctrl_1
 685  8BED              ;	res 2,(hl)
 686  8BED
 687  8BED              ; ------------------------------------
 688  8BED
 689  8BED              ; Tras la gestión de las entidades, ... AMADEUS.
 690  8BED
 691  8BED CD FB 8D     4 call Restore_Amadeus
 692  8BF0
 693  8BF0 3A E6 89     	ld a,(Impacto)
 694  8BF3 A7           	and a
 695  8BF4 20 FE        	jr nz,$
 696  8BF6
 697  8BF6 CD 7F 8C     	call Mov_Amadeus
 698  8BF9
 699  8BF9 3A FB 89     	ld a,(Ctrl_0)
 700  8BFC CB 67        	bit 4,a
 701  8BFE 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 702  8C00
 703  8C00 CD BE 8C     	call Guarda_foto_entidad_a_pintar
 704  8C03
 705  8C03 21 FB 89     3 ld hl,Ctrl_0
 706  8C06 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 707  8C08 AF           	xor a
 708  8C09 32 FC 89     	ld (Obj_dibujado),a
 709  8C0C
 710  8C0C 11 84 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 711  8C0F CD 0D 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 712  8C12
 713  8C12 CD E4 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 714  8C15
 715  8C15              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 716  8C15
 717  8C15 CD 33 8D     	call Calcula_numero_de_disparotes
 718  8C18 CD 1B 8D     9 call Calcula_numero_de_malotes
 719  8C1B
 720  8C1B 3E 04        	ld a,4
 721  8C1D D3 FE        	out ($fe),a
 722  8C1F
 723  8C1F C9           	ret
 724  8C20
 725  8C20              ; -----------------------------------------------------------------------------------
 726  8C20
 727  8C20              ; --------------------------------------------------------------------------------------------------------------
 728  8C20              ;
 729  8C20              ;	27/05/23
 730  8C20
 731  8C20              Mov_obj
 732  8C20
 733  8C20              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 734  8C20
 735  8C20 3A 0E 8A     	ld a,(Ctrl_2)
 736  8C23 CB 4F        	bit 1,a
 737  8C25 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 738  8C27
 739  8C27              ; Explosión:
 740  8C27
 741  8C27 3A 0F 8A     	ld a,(Frames_explosion)
 742  8C2A A7           	and a
 743  8C2B 20 11        	jr nz,4F
 744  8C2D
 745  8C2D              ; Una alimaña menos!!!!!!!!!1
 746  8C2D
 747  8C2D CD 16 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 748  8C30 21 1A 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 749  8C33 35           	dec (hl)
 750  8C34 21 1B 8A     	ld hl,Entidades_en_curso
 751  8C37 35           	dec (hl)
 752  8C38 21 19 8A     	ld hl,Numero_de_entidades
 753  8C3B 35           	dec (hl)
 754  8C3C 18 40        	jr 3F
 755  8C3E
 756  8C3E              ; -----
 757  8C3E
 758  8C3E              ;	`Movemos´ la explosión.
 759  8C3E
 760  8C3E 2A DB 89     4 ld hl,(Puntero_DESPLZ_der)
 761  8C41 23           	inc hl
 762  8C42 23           	inc hl
 763  8C43 22 DB 89     	ld (Puntero_DESPLZ_der),hl
 764  8C46 CD 4B 8D     	call Extrae_address
 765  8C49 22 D1 89     	ld (Puntero_objeto),hl
 766  8C4C
 767  8C4C 21 0F 8A     	ld hl,Frames_explosion
 768  8C4F 35           	dec (hl)
 769  8C50
 770  8C50 CD AE 8C     	call Guarda_foto_entidad_a_borrar
 771  8C53 18 29        	jr 3F
 772  8C55
 773  8C55 AF           2 xor a
 774  8C56 32 FC 89     	ld (Obj_dibujado),a
 775  8C59 32 FB 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 776  8C5C              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 777  8C5C              ; 														; _de la entidad.
 778  8C5C CD C8 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 779  8C5F              ;														; Obj_dibujado="0".
 780  8C5F              ; Movemos Entidades malignas.
 781  8C5F
 782  8C5F              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 783  8C5F              ;	and a 												; _a movernos. (Limitador_de_entidades).
 784  8C5F              ;	ret z
 785  8C5F
 786  8C5F CD 94 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 787  8C62
 788  8C62 3A FB 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 789  8C65 CB 67        	bit 4,a
 790  8C67 C8           	ret z
 791  8C68
 792  8C68              ; Ha habido desplazamiento de la entidad maligna.
 793  8C68              ; Ha llegado a zona de AMADEUS ???
 794  8C68
 795  8C68 3A D4 89     	ld a,(Coordenada_y)
 796  8C6B FE 14        	cp $14
 797  8C6D D4 15 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 798  8C70              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 799  8C70              ; ---------
 800  8C70
 801  8C70 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 802  8C72 32 FC 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 803  8C75 CD C8 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 804  8C78 CD DF 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 805  8C7B CD AE 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 806  8C7E C9           3 ret													; _de la misma.
 807  8C7F
 808  8C7F              ; --------------------------------------------------------------------------------------------------------------
 809  8C7F              ;
 810  8C7F              ;	29/1/23
 811  8C7F
 812  8C7F              Mov_Amadeus
 813  8C7F
 814  8C7F AF           	xor a
 815  8C80 32 FC 89     	ld (Obj_dibujado),a
 816  8C83 CD C8 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 817  8C86              ;														; Obj_dibujado="0".
 818  8C86              ; Movemos Amadeus.
 819  8C86
 820  8C86 CD 38 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 821  8C89 3A FB 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 822  8C8C CB 67        	bit 4,a
 823  8C8E C8           	ret z
 824  8C8F
 825  8C8F              ; ---------
 826  8C8F
 827  8C8F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 828  8C91 32 FC 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 829  8C94 CD C8 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 830  8C97 CD DF 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 831  8C9A CD AE 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 832  8C9D C9           	ret													; _de la nave.
 833  8C9E
 834  8C9E              ; -----------------------------------------------------------------------------------
 835  8C9E
 836  8C9E CD 51 8D     Inicia_entidad	call Inicia_Puntero_objeto
 837  8CA1 CD 48 99     	call Recompone_posicion_inicio
 838  8CA4 CD 6E 93     	call Draw
 839  8CA7 CD A0 7F     	call Guarda_foto_registros
 840  8CAA CD 99 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 841  8CAD C9           	ret
 842  8CAE
 843  8CAE              ; --------------------------------------------------------------------------------------------------------------
 844  8CAE              ;
 845  8CAE              ;	31/01/23
 846  8CAE              ;
 847  8CAE              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 848  8CAE
 849  8CAE              Guarda_foto_entidad_a_borrar
 850  8CAE
 851  8CAE CD 52 96     	call Prepara_draw
 852  8CB1 CD 82 95     	call calcula_CColumnass
 853  8CB4 CD B9 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 854  8CB7 CD 18 96     	call Define_rutina_de_impresion
 855  8CBA CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 856  8CBD C9           	ret
 857  8CBE
 858  8CBE              ; --------------------------------------------------------------------------------------------------------------
 859  8CBE              ;
 860  8CBE              ;	31/01/23
 861  8CBE              ;
 862  8CBE              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 863  8CBE              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 864  8CBE
 865  8CBE              Guarda_foto_entidad_a_pintar
 866  8CBE
 867  8CBE CD EB 8C     	call Repone_pintar
 868  8CC1 CD 6E 93     	call Draw
 869  8CC4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 870  8CC7 C9           	ret
 871  8CC8
 872  8CC8              ; --------------------------------------------------------------------------------------------------------------
 873  8CC8              ;
 874  8CC8              ;
 875  8CC8
 876  8CC8 21 CD 89     Prepara_var_pintado_borrado	ld hl,Filas
 877  8CCB 3A FC 89     	ld a,(Obj_dibujado)
 878  8CCE A7           	and a
 879  8CCF 28 05        	jr z,1F
 880  8CD1 11 F1 89     	ld de,Variables_de_pintado
 881  8CD4 18 03        	jr 2F
 882  8CD6 11 E7 89     1 ld de,Variables_de_borrado
 883  8CD9 01 08 00     2 ld bc,8
 884  8CDC ED B0        	ldir
 885  8CDE C9           	ret
 886  8CDF
 887  8CDF              ; --------------------------------------------------------------------------------------------------------------
 888  8CDF
 889  8CDF 21 E7 89     Repone_borrar ld hl,Variables_de_borrado
 890  8CE2 11 CD 89     	ld de,Filas
 891  8CE5 01 08 00     	ld bc,8
 892  8CE8 ED B0        	ldir
 893  8CEA C9           	ret
 894  8CEB
 895  8CEB 21 F1 89     Repone_pintar ld hl,Variables_de_pintado
 896  8CEE 11 CD 89     	ld de,Filas
 897  8CF1 01 08 00     	ld bc,8
 898  8CF4 ED B0        	ldir
 899  8CF6 C9           	ret
 900  8CF7
 901  8CF7              ; *************************************************************************************************************************************************************
 902  8CF7              ;
 903  8CF7              ; 8/1/23
 904  8CF7              ;
 905  8CF7              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 906  8CF7              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 907  8CF7              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 908  8CF7
 909  8CF7              ; Destruye HL y DE !!!!!
 910  8CF7
 911  8CF7              Inicia_punteros_de_cajas
 912  8CF7
 913  8CF7 21 6C 85     	ld hl,Indice_de_cajas
 914  8CFA CD 4B 8D         call Extrae_address
 915  8CFD 22 13 8A         ld (Puntero_store_caja),hl
 916  8D00 21 6E 85     	ld hl,Indice_de_cajas+2
 917  8D03 22 17 8A     	ld (Indice_restore_caja),hl
 918  8D06 CD 4B 8D     	call Extrae_address
 919  8D09 22 15 8A     	ld (Puntero_restore_caja),hl
 920  8D0C C9               ret
 921  8D0D
 922  8D0D              ; *************************************************************************************************************************************************************
 923  8D0D              ;
 924  8D0D              ; 8/1/23
 925  8D0D              ;
 926  8D0D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 927  8D0D
 928  8D0D 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 929  8D10 22 36 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 930  8D13 C9           	ret
 931  8D14 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 932  8D17 22 38 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 933  8D1A C9           	ret
 934  8D1B
 935  8D1B              ; -------------------------------------------------------------------------------------------------------------
 936  8D1B              ;
 937  8D1B              ; 28/2/23
 938  8D1B              ;
 939  8D1B
 940  8D1B              Calcula_numero_de_malotes
 941  8D1B
 942  8D1B 21 00 70     	ld hl,Album_de_fotos
 943  8D1E EB           	ex de,hl
 944  8D1F 2A 25 8A     	ld hl,(Stack_snapshot)
 945  8D22
 946  8D22 06 00        	ld b,0
 947  8D24 7D           	ld a,l
 948  8D25 93           	sub e
 949  8D26 28 07        	jr z,1F
 950  8D28
 951  8D28              ; Nº de malotes no es "0".
 952  8D28
 953  8D28 D6 06        2 sub 6
 954  8D2A 04           	inc b
 955  8D2B A7           	and a
 956  8D2C 20 FA        	jr nz,2B
 957  8D2E 78           	ld a,b
 958  8D2F
 959  8D2F 32 1C 8A     1 ld (Numero_de_malotes),a
 960  8D32 C9           	ret
 961  8D33
 962  8D33              ; -------------------------------------------------------------------------------------------------------------
 963  8D33              ;
 964  8D33              ; 28/2/23
 965  8D33              ;
 966  8D33
 967  8D33              Calcula_numero_de_disparotes
 968  8D33
 969  8D33 21 0D 72     	ld hl,Album_de_fotos_disparos
 970  8D36 EB           	ex de,hl
 971  8D37 2A 27 8A     	ld hl,(Stack_snapshot_disparos)
 972  8D3A
 973  8D3A 06 00        	ld b,0
 974  8D3C 7D           	ld a,l
 975  8D3D 93           	sub e
 976  8D3E 28 07        	jr z,1F
 977  8D40
 978  8D40              ; Nº de malotes no es "0".
 979  8D40
 980  8D40 D6 06        2 sub 6
 981  8D42 04           	inc b
 982  8D43 A7           	and a
 983  8D44 20 FA        	jr nz,2B
 984  8D46 78           	ld a,b
 985  8D47
 986  8D47 32 35 8A     1 ld (Numero_de_disparotes),a
 987  8D4A C9           	ret
 988  8D4B              ; *************************************************************************************************************************************************************
 989  8D4B              ;
 990  8D4B              ; 20/10/22
 991  8D4B              ;
 992  8D4B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 993  8D4B              ;
 994  8D4B              ; Destruye el puntero y DE !!!!!
 995  8D4B
 996  8D4B 5E           Extrae_address ld e,(hl)
 997  8D4C 23           	inc hl
 998  8D4D 56           	ld d,(hl)
 999  8D4E 2B           	dec hl
1000  8D4F EB           	ex de,hl
1001  8D50 C9           	ret
1002  8D51
1003  8D51              ; *************************************************************************************************************************************************************
1004  8D51              ;
1005  8D51              ;	7/2/23
1006  8D51              ;
1007  8D51              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1008  8D51              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1009  8D51              ;
1010  8D51              ;   Destruye HL y BC !!!!!,
1011  8D51              ;
1012  8D51              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1013  8D51              ;					"0" ..... Izquierda.
1014  8D51
1015  8D51              Inicia_Puntero_objeto
1016  8D51
1017  8D51 3A E1 89     	ld a,(Cuad_objeto)
1018  8D54 E6 01        	and 1
1019  8D56 F5           	push af
1020  8D57 CC 75 8D     	call z,Inicia_puntero_objeto_izq
1021  8D5A F1           	pop af
1022  8D5B 28 2B        	jr z,1F
1023  8D5D CD 62 8D     	call Inicia_puntero_objeto_der
1024  8D60 18 26        	jr 1F
1025  8D62
1026  8D62              ; Arrancamos desde la parte izquierda de la pantalla.
1027  8D62              ; Iniciamos (Indice_Sprite_der).
1028  8D62
1029  8D62 2A D7 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1030  8D65 22 DB 89     	ld (Puntero_DESPLZ_der),hl
1031  8D68 CD 4B 8D     	call Extrae_address
1032  8D6B 22 D1 89     	ld (Puntero_objeto),hl
1033  8D6E
1034  8D6E 2A D9 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1035  8D71 22 DD 89     	ld (Puntero_DESPLZ_izq),hl
1036  8D74 C9           	ret
1037  8D75
1038  8D75              ; Arrancamos desde la parte derecha de la pantalla.
1039  8D75              ; Iniciamos (Indice_Sprite_izq).
1040  8D75
1041  8D75 2A D9 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1042  8D78 22 DD 89     	ld (Puntero_DESPLZ_izq),hl
1043  8D7B CD 4B 8D     	call Extrae_address
1044  8D7E 22 D1 89     	ld (Puntero_objeto),hl
1045  8D81
1046  8D81 2A D7 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1047  8D84 22 DB 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1048  8D87 C9           	ret
1049  8D88
1050  8D88              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1051  8D88
1052  8D88 21 40 83     1 ld hl,Amadeus
1053  8D8B ED 4B D1 89  	ld bc,(Puntero_objeto)
1054  8D8F B7 ED 42     	sub hl,bc
1055  8D92 C0           	ret nz
1056  8D93 21 FB 89     	ld hl,Ctrl_0
1057  8D96 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1058  8D98 C9           	ret 												; _de nuestra nave en los extremos.
1059  8D99
1060  8D99              ; *************************************************************************************************************************************************************
1061  8D99              ;
1062  8D99              ;	14/5/23
1063  8D99              ;
1064  8D99              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1065  8D99              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1066  8D99
1067  8D99              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1068  8D99              ;	_de la 2ª y 3ª entidad respectivamente.
1069  8D99
1070  8D99              Store_Restore_cajas
1071  8D99
1072  8D99 E5           	push hl
1073  8D9A D5           	push de
1074  8D9B C5            	push bc
1075  8D9C
1076  8D9C              ;	STORE !!!!!
1077  8D9C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1078  8D9C
1079  8D9C 21 CD 89     	ld hl,Filas
1080  8D9F ED 5B 13 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1081  8DA3 01 43 00     	ld bc,67
1082  8DA6 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1083  8DA8
1084  8DA8              ; 	Entidad_sospechosa. 20/4/23
1085  8DA8
1086  8DA8 3A E6 89     	ld a,(Impacto)
1087  8DAB A7           	and a
1088  8DAC 28 0C        	jr z,1F
1089  8DAE
1090  8DAE 2A 13 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1091  8DB1 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1092  8DB4 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1093  8DB5 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1094  8DB7 22 3B 8A     	ld (Entidad_sospechosa_de_colision),hl
1095  8DBA
1096  8DBA              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1097  8DBA
1098  8DBA 2A 15 8A     1 ld hl,(Puntero_restore_caja)
1099  8DBD 7E           	ld a,(hl)
1100  8DBE A7           	and a
1101  8DBF F5           	push af
1102  8DC0 28 08        	jr z,2F
1103  8DC2
1104  8DC2 11 CD 89     	ld de,Filas
1105  8DC5 01 43 00     	ld bc,67
1106  8DC8 ED B0        	ldir
1107  8DCA
1108  8DCA CD E6 8D     2 call Incrementa_punteros_de_cajas
1109  8DCD F1           	pop af
1110  8DCE 28 EA        	jr z,1B
1111  8DD0
1112  8DD0 C1           	pop bc
1113  8DD1 D1           	pop de
1114  8DD2 E1           	pop hl
1115  8DD3
1116  8DD3 C9           	ret
1117  8DD4
1118  8DD4              ; **************************************************************************************************
1119  8DD4              ;
1120  8DD4              ;	12/05/23
1121  8DD4              ;
1122  8DD4              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1123  8DD4
1124  8DD4 E5           Restore_entidad push hl
1125  8DD5 D5           	push de
1126  8DD6 C5            	push bc
1127  8DD7
1128  8DD7 2A 13 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1129  8DDA 11 CD 89     	ld de,Filas
1130  8DDD 01 43 00     	ld bc,67
1131  8DE0 ED B0        	ldir
1132  8DE2
1133  8DE2 C1           	pop bc
1134  8DE3 D1           	pop de
1135  8DE4 E1           	pop hl
1136  8DE5 C9           	ret
1137  8DE6
1138  8DE6
1139  8DE6              ; **************************************************************************************************
1140  8DE6              ;
1141  8DE6              ;	08/05/23
1142  8DE6              ;
1143  8DE6              ;	Incrementamos los dos punteros de entidades. (+1).
1144  8DE6
1145  8DE6 2A 15 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1146  8DE9 22 13 8A     	ld (Puntero_store_caja),hl
1147  8DEC 2A 17 8A     	ld hl,(Indice_restore_caja)
1148  8DEF 23           	inc hl
1149  8DF0 23           	inc hl
1150  8DF1 22 17 8A     	ld (Indice_restore_caja),hl
1151  8DF4 CD 4B 8D         call Extrae_address
1152  8DF7 22 15 8A         ld (Puntero_restore_caja),hl
1153  8DFA C9               ret
1154  8DFB
1155  8DFB              ; **************************************************************************************************
1156  8DFB              ;
1157  8DFB              ;	25/01/23
1158  8DFB              ;
1159  8DFB              ;	Restore_Amadeus
1160  8DFB              ;
1161  8DFB              ;	Cargamos en DRAW los parámetros de Amadeus.
1162  8DFB              ;
1163  8DFB
1164  8DFB E5           Restore_Amadeus	push hl
1165  8DFC D5           	push de
1166  8DFD C5            	push bc
1167  8DFE 21 84 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1168  8E01 11 CD 89     	ld de,Filas
1169  8E04 01 43 00     	ld bc,67
1170  8E07 ED B0        	ldir
1171  8E09 C1           	pop bc
1172  8E0A D1           	pop de
1173  8E0B E1           	pop hl
1174  8E0C C9           	ret
1175  8E0D
1176  8E0D              ; *************************************************************************************************************************************************************
1177  8E0D              ;
1178  8E0D              ;	29/04/23
1179  8E0D              ;
1180  8E0D              ;	Store_Amadeus
1181  8E0D              ;
1182  8E0D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1183  8E0D              ;
1184  8E0D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1185  8E0D              ;
1186  8E0D              ;	DESTRUYE: HL y BC y DE.
1187  8E0D
1188  8E0D 21 CD 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1189  8E10 01 43 00     	ld bc,67
1190  8E13 ED B0        	ldir
1191  8E15 C9           	ret
1192  8E16
1193  8E16              ; -----------------------------------------------------------
1194  8E16              ;
1195  8E16              ;	27/04/23
1196  8E16              ;
1197  8E16              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1198  8E16              ;
1199  8E16              ;	Destruye: HL,BC,DE,A
1200  8E16
1201  8E16 21 CD 89     Borra_datos_entidad ld hl,Filas
1202  8E19 01 42 00     	ld bc,66
1203  8E1C AF           	xor a
1204  8E1D 77           	ld (hl),a
1205  8E1E 11 CE 89     	ld de,Filas+1
1206  8E21 ED B0        	ldir
1207  8E23 C9           	ret
1208  8E24
1209  8E24              ; -----------------------------------------------------------
1210  8E24
1211  8E24              ; Teclado.
1212  8E24
1213  8E24 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1214  8E26 DB FE        	in a,($fe)
1215  8E28 E6 01        	and $01
1216  8E2A 28 02        	jr z,1f
1217  8E2C 18 F6        	jr Pulsa_ENTER
1218  8E2E C9           1 ret
1219  8E2F
1220  8E2F              ; **************************************************************************************************
1221  8E2F              ;
1222  8E2F              ; Temporización.
1223  8E2F
1224  8E2F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1225  8E2F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1226  8E2F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1227  8E2F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1228  8E2F
1229  8E2F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1230  8E2F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1231  8E2F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1232  8E2F
1233  8E2F              ; A partir de $4f61 no hace falta DELAY.
1234  8E2F
1235  8E2F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1236  8E2F
1237  8E2F 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1238  8E32 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1239  8E33 78           	LD A,B
1240  8E34 A7           	AND A
1241  8E35 20 FB        	JR NZ,wait
1242  8E37 C9           	RET
1243  8E38
1244  8E38              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1245  8E38              ;
1246  8E38              ;	5/3/23
1247  8E38              ;
1248  8E38              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1249  8E38
1250  8E38              Movimiento_Amadeus
1251  8E38
1252  8E38              ; Disparo.
1253  8E38
1254  8E38 3A 4C 8A     	ld a,(Disparo_Amadeus)
1255  8E3B A7           	and a
1256  8E3C 20 02        	jr nz,1F
1257  8E3E 18 15        	jr 2F
1258  8E40
1259  8E40 3E F7        1 ld a,$f7													; "5" para disparar.
1260  8E42 DB FE        	in a,($fe)
1261  8E44 E6 10        	and $10
1262  8E46
1263  8E46 F5           	push af
1264  8E47 CC 78 8E     	call z,Genera_disparo
1265  8E4A F1           	pop af
1266  8E4B 20 08        	jr nz,2F
1267  8E4D
1268  8E4D 3A 4C 8A     	ld a,(Disparo_Amadeus)
1269  8E50 EE 01        	xor 1
1270  8E52 32 4C 8A     	ld (Disparo_Amadeus),a
1271  8E55
1272  8E55 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1273  8E57 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1274  8E59 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1275  8E5B CC 02 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1276  8E5E 3E F7        	ld a,$f7
1277  8E60 DB FE        	in a,($fe)
1278  8E62 E6 01        	and $01
1279  8E64 C8           	ret z
1280  8E65
1281  8E65 3E F7        	ld a,$f7
1282  8E67 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1283  8E69 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1284  8E6B CC E4 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1285  8E6E C9           	ret
1286  8E6F
1287  8E6F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1288  8E6F              ;
1289  8E6F              ;	Rutina provisional para que los malotes cagen balas.
1290  8E6F
1291  8E6F              Detecta_disparo_entidad
1292  8E6F
1293  8E6F 3A 4F 8A     	ld a,(Disparo_entidad)
1294  8E72 A7           	and a
1295  8E73 C8           	ret z
1296  8E74
1297  8E74              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1298  8E74
1299  8E74              ;	ld a,$7f				; Detecta SPACE.
1300  8E74              ;	in a,($fe)
1301  8E74              ;	and 1
1302  8E74              ;	ret nz
1303  8E74
1304  8E74 CD 78 8E     	call Genera_disparo
1305  8E77 C9           	ret
1306  8E78
1307  8E78              ; ---------------------------------------------------------------
1308  8E78
1309  8E78              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E78              ; ******************************************************************************************************************************************************************************************
   2+ 8E78              ;
   3+ 8E78              ;   21/07/23
   4+ 8E78              ;
   5+ 8E78              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E78              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E78              ;
   8+ 8E78              ;
   9+ 8E78              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E78              ;
  11+ 8E78              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E78              ;               _ hacen las entidades hacia abajo.
  13+ 8E78              ;
  14+ 8E78              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E78              ;
  16+ 8E78              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E78              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E78              ;
  19+ 8E78              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E78              ;           _ la bala.
  21+ 8E78              ;
  22+ 8E78              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E78              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E78              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E78              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E78              ;           _ en el momento de generarse la bala)).
  27+ 8E78
  28+ 8E78              Genera_disparo
  29+ 8E78
  30+ 8E78              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E78              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E78              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E78              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E78              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E78              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E78              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E78
  38+ 8E78              ; Exclusiones:
  39+ 8E78
  40+ 8E78 3A E5 89         ld a,(Vel_down)
  41+ 8E7B 47               ld b,a
  42+ 8E7C 3A 47 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E7F B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E80 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E81 3A 0A 8A         ld a,(Columnas)
  46+ 8E84 47               ld b,a
  47+ 8E85 3A CE 89         ld a,(Columns)
  48+ 8E88 B8               cp b
  49+ 8E89 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E8A
  51+ 8E8A              ; ----- ----- -----
  52+ 8E8A
  53+ 8E8A 3A FB 89         ld a,(Ctrl_0)
  54+ 8E8D CB 77            bit 6,a
  55+ 8E8F 20 06            jr nz,14F
  56+ 8E91
  57+ 8E91 3A D4 89         ld a,(Coordenada_y)
  58+ 8E94 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E96 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E97
  61+ 8E97 21 00 80     14 ld hl,Indice_disparo
  62+ 8E9A 3A D5 89         ld a,(CTRL_DESPLZ)
  63+ 8E9D 4F               ld c,a
  64+ 8E9E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EA0              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EA0              ;                                            ""        ""       "f9", B="1"
  67+ 8EA0              ;                                            ""        ""       "fb", B="2"
  68+ 8EA0              ;                                            ""        ""       "fb", B="3"
  69+ 8EA0 A7               and a
  70+ 8EA1 28 10            jr z,1F
  71+ 8EA3 E6 01            and 1
  72+ 8EA5 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EA6
  74+ 8EA6 79               ld a,c
  75+ 8EA7 16 F9            ld d,$f9
  76+ 8EA9 23           2 inc hl
  77+ 8EAA 23               inc hl
  78+ 8EAB 04               inc b
  79+ 8EAC BA               cp d
  80+ 8EAD 28 04            jr z,1F
  81+ 8EAF 14               inc d
  82+ 8EB0 14               inc d
  83+ 8EB1 18 F6            jr 2B
  84+ 8EB3
  85+ 8EB3 CD 4B 8D     1 call Extrae_address
  86+ 8EB6 E5               push hl
  87+ 8EB7 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EB9 DD 21 FD 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EBD
  90+ 8EBD              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EBD              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EBD
  93+ 8EBD 3A FB 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EC0 CB 77            bit 6,a
  95+ 8EC2 20 04            jr nz,19F
  96+ 8EC4
  97+ 8EC4 AF               xor a
  98+ 8EC5 32 4F 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EC8
 100+ 8EC8 3A E1 89     19 ld a,(Cuad_objeto)
 101+ 8ECB FE 02            cp 2
 102+ 8ECD 38 66            jr c,3F
 103+ 8ECF 28 64            jr z,3F
 104+ 8ED1
 105+ 8ED1              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8ED1
 107+ 8ED1 E6 01            and 1
 108+ 8ED3 28 30            jr z,4F
 109+ 8ED5
 110+ 8ED5              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8ED5              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8ED5              ;
 113+ 8ED5              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8ED5              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8ED5              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8ED5
 117+ 8ED5 2A CF 89     	ld hl,(Posicion_actual)
 118+ 8ED8
 119+ 8ED8              ;   Amadeus o entidad ???.
 120+ 8ED8
 121+ 8ED8 3A FB 89         ld a,(Ctrl_0)
 122+ 8EDB CB 77            bit 6,a
 123+ 8EDD 28 0A            jr z,8F
 124+ 8EDF
 125+ 8EDF              ; 	Dispara Amadeus.
 126+ 8EDF
 127+ 8EDF 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EE1 CD 6D 96         call PreviousScan
 129+ 8EE4 CD 6D 96         call PreviousScan
 130+ 8EE7
 131+ 8EE7              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EE7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EE7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EE7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EE7
 136+ 8EE7 18 11            jr 10F
 137+ 8EE9
 138+ 8EE9              ; 	Dispara Entidad.
 139+ 8EE9
 140+ 8EE9 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EEC              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EEC
 143+ 8EEC              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EEC              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EEC
 146+ 8EEC C5               push bc
 147+ 8EED 06 10            ld b,16
 148+ 8EEF CD 5E 96     9 call NextScan
 149+ 8EF2 10 FB            djnz 9B
 150+ 8EF4 C1               pop bc
 151+ 8EF5 CD 5F 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EF8 18 06            jr 17F
 153+ 8EFA
 154+ 8EFA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EFA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EFA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EFA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EFA
 159+ 8EFA CD 5F 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EFD CD D4 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F00              ;                                                      ; _al generar el disparo.
 162+ 8F00
 163+ 8F00              ; 	LLegados a este punto tendremos:
 164+ 8F00              ;
 165+ 8F00              ;       Puntero_objeto_disparo en IY.
 166+ 8F00              ;       Rutinas_de_impresion en IX.
 167+ 8F00              ;       Puntero_de_impresion en HL.
 168+ 8F00              ;       Impacto/Dirección en BC.
 169+ 8F00
 170+ 8F00 CD 67 8F     17 call Almacena_disparo
 171+ 8F03 18 52            jr 6F                                             ; RET.
 172+ 8F05
 173+ 8F05              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F05              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F05              ;
 176+ 8F05              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F05              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F05              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F05
 180+ 8F05 2A CF 89     4 ld hl,(Posicion_actual)
 181+ 8F08
 182+ 8F08              ;   Amadeus o entidad ???.
 183+ 8F08
 184+ 8F08 3A FB 89         ld a,(Ctrl_0)
 185+ 8F0B CB 77            bit 6,a
 186+ 8F0D 28 0A            jr z,11F
 187+ 8F0F
 188+ 8F0F              ; 	Dispara Amadeus.
 189+ 8F0F
 190+ 8F0F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F11 CD 6D 96         call PreviousScan
 192+ 8F14 CD 6D 96         call PreviousScan
 193+ 8F17
 194+ 8F17              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F17              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F17              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F17
 199+ 8F17 18 11            jr 13F
 200+ 8F19
 201+ 8F19              ; 	Dispara Entidad.
 202+ 8F19
 203+ 8F19 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F1C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F1C
 206+ 8F1C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F1C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F1C
 209+ 8F1C C5               push bc
 210+ 8F1D 06 10            ld b,16
 211+ 8F1F CD 5E 96     12 call NextScan
 212+ 8F22 10 FB            djnz 12B
 213+ 8F24 C1               pop bc
 214+ 8F25
 215+ 8F25 CD 58 8F         call Ajusta_disparo_parte_derecha
 216+ 8F28 18 06            jr 18F
 217+ 8F2A
 218+ 8F2A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F2A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F2A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F2A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F2A
 223+ 8F2A CD 58 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F2D CD D4 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F30              ;                                                       ; _al generar el disparo.
 226+ 8F30
 227+ 8F30              ; LLegados a este punto tendremos:
 228+ 8F30              ;
 229+ 8F30              ;       Puntero_objeto_disparo en IY.
 230+ 8F30              ;       Rutinas_de_impresion en IX.
 231+ 8F30              ;       Puntero_de_impresion en HL.
 232+ 8F30              ;       Impacto/Dirección en BC.
 233+ 8F30
 234+ 8F30 CD 67 8F     18 call Almacena_disparo
 235+ 8F33 18 22            jr 6F                                               ; RET.
 236+ 8F35
 237+ 8F35              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F35
 239+ 8F35 28 11        3 jr z,5F
 240+ 8F37
 241+ 8F37              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F37              ;
 243+ 8F37              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F37              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F37              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F37              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F37
 248+ 8F37              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F37              ;	   ""        ""       "f9", B="1"
 250+ 8F37              ;	   ""        ""       "fb", B="2"
 251+ 8F37              ; 	   ""        ""       "fb", B="3"
 252+ 8F37
 253+ 8F37 2A CF 89     	ld hl,(Posicion_actual)
 254+ 8F3A CD 5E 96     	call NextScan
 255+ 8F3D
 256+ 8F3D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F3D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F3D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F3D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F3D
 261+ 8F3D CD 5F 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F40
 263+ 8F40              ; 	No se produce impacto. B="$80"
 264+ 8F40              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F40
 266+ 8F40 01 80 80         ld bc,$8080
 267+ 8F43
 268+ 8F43              ; 	LLegados a este punto tendremos:
 269+ 8F43              ;
 270+ 8F43              ;       Puntero_objeto_disparo en IY.
 271+ 8F43              ;       Rutinas_de_impresion en IX.
 272+ 8F43              ;       Puntero_de_impresion en HL.
 273+ 8F43              ;       Impacto/Dirección en BC.
 274+ 8F43
 275+ 8F43 CD 67 8F         call Almacena_disparo
 276+ 8F46 18 0F            jr 6F                                           ; RET.
 277+ 8F48
 278+ 8F48              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F48              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F48              ;
 281+ 8F48              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F48              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F48              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F48              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F48
 286+ 8F48 2A CF 89     5 ld hl,(Posicion_actual)
 287+ 8F4B CD 5E 96     	call NextScan
 288+ 8F4E
 289+ 8F4E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F4E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F4E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F4E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F4E
 294+ 8F4E CD 58 8F         call Ajusta_disparo_parte_derecha
 295+ 8F51
 296+ 8F51              ; 	No se produce impacto. B="$80"
 297+ 8F51              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F51
 299+ 8F51 01 80 80     15 ld bc,$8080
 300+ 8F54
 301+ 8F54              ; 	LLegados a este punto tendremos:
 302+ 8F54              ;
 303+ 8F54              ;       Puntero_objeto_disparo en IY.
 304+ 8F54              ;       Rutinas_de_impresion en IX.
 305+ 8F54              ;       Puntero_de_impresion en HL.
 306+ 8F54              ;       Impacto/Dirección en BC.
 307+ 8F54
 308+ 8F54 CD 67 8F         call Almacena_disparo
 309+ 8F57
 310+ 8F57 C9           6 ret
 311+ 8F58
 312+ 8F58              ; ----------------------------------------------------------------
 313+ 8F58              ;
 314+ 8F58              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F58              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F58              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F58
 318+ 8F58 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F59 FE 02            cp 2
 320+ 8F5B 38 01            jr c,1F
 321+ 8F5D 23               inc hl
 322+ 8F5E C9           1 ret
 323+ 8F5F
 324+ 8F5F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F60 FE 01        	cp 1
 326+ 8F62 20 01        	jr nz,1F
 327+ 8F64 2B           	dec hl
 328+ 8F65 2B           1 dec hl
 329+ 8F66 C9               ret
 330+ 8F67
 331+ 8F67              ; ----------------------------------------------------------------
 332+ 8F67              ;
 333+ 8F67              ;   25/02/23
 334+ 8F67              ;
 335+ 8F67              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F67              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F67              ;
 338+ 8F67              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F67              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F67
 341+ 8F67              Almacena_disparo
 342+ 8F67
 343+ 8F67 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F68 F1               pop af
 345+ 8F69 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F6A
 347+ 8F6A 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F6B E6 01            and 1
 349+ 8F6D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F6F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F6F              ; 	Dispara AMADEUS.
 352+ 8F6F
 353+ 8F6F              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F6F              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F6F              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F6F              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F6F
 358+ 8F6F C5               push bc
 359+ 8F70 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F73 2A 38 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F76 A7               and a
 362+ 8F77 ED 42            sbc hl,bc
 363+ 8F79 CC 14 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F7C C1               pop bc
 365+ 8F7D 28 54            jr z,4F
 366+ 8F7F
 367+ 8F7F 2A 38 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F82 23               inc hl
 369+ 8F83 23               inc hl
 370+ 8F84 22 38 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F87              ;                                                   ; _ Disparo_(+1).
 372+ 8F87 18 18            jr 2F
 373+ 8F89
 374+ 8F89              ; Dispara una entidad.
 375+ 8F89
 376+ 8F89 C5           1 push bc
 377+ 8F8A 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F8D 2A 36 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F90 A7               and a
 380+ 8F91 ED 42            sbc hl,bc
 381+ 8F93 CC 0D 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F96 C1               pop bc
 383+ 8F97 28 3A            jr z,4F
 384+ 8F99
 385+ 8F99 2A 36 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F9C 23               inc hl
 387+ 8F9D 23               inc hl
 388+ 8F9E 22 36 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FA1              ;                                                   ; _ Disparo_(+1).
 390+ 8FA1 CD 4B 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FA4              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FA4              ;
 393+ 8FA4              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FA4              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FA4              ;                                                     Puntero_de_impresion en HL.
 396+ 8FA4              ;                                                     Impacto/Dirección en BC.
 397+ 8FA4
 398+ 8FA4 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FA5 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FA6 23               inc hl                                          ; _ al siguiente.
 401+ 8FA7 A7               and a
 402+ 8FA8 20 C0            jr nz,3B
 403+ 8FAA
 404+ 8FAA 08               ex af,af
 405+ 8FAB ED 73 21 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FAF F9               ld sp,hl
 407+ 8FB0
 408+ 8FB0 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FB2 F5               push af                                         ; Puntero de impresión.
 410+ 8FB3 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FB5 C5               push bc                                         ; Control.
 412+ 8FB6
 413+ 8FB6 ED 7B 21 8A      ld sp,(Stack)
 414+ 8FBA
 415+ 8FBA              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FBA
 417+ 8FBA 21 10 8A     	ld hl,Ctrl_1
 418+ 8FBD CB C6        	set 0,(hl)
 419+ 8FBF
 420+ 8FBF DD E5        	push ix
 421+ 8FC1 E1               pop hl
 422+ 8FC2 F5               push af
 423+ 8FC3 DD E1            pop ix
 424+ 8FC5
 425+ 8FC5 CD A0 7F     	call Guarda_foto_registros
 426+ 8FC8
 427+ 8FC8 21 10 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FCB CB 86        	res 0,(hl)
 429+ 8FCD
 430+ 8FCD              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FCD              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FCD
 433+ 8FCD CD 14 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FD0 CD 0D 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 8FD3
 436+ 8FD3 C9           4 ret
 437+ 8FD4
 438+ 8FD4              ; ----------------------------------------------------------------
 439+ 8FD4              ;
 440+ 8FD4              ;   4/3/23
 441+ 8FD4              ;
 442+ 8FD4              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FD4              ;   _ al generarse el disparo.
 444+ 8FD4              ;
 445+ 8FD4              ;       "$80" ..... No se produce colisión.
 446+ 8FD4              ;       "$81" ..... Se produce colisión.
 447+ 8FD4              ;
 448+ 8FD4              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FD4              ;         _ que forman el disparo.
 450+ 8FD4
 451+ 8FD4
 452+ 8FD4              Comprueba_Colision
 453+ 8FD4
 454+ 8FD4              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FD4
 456+ 8FD4 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FD6 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FD7
 459+ 8FD7 CD 0D 90         call Modifica_H_Velocidad_disparo
 460+ 8FDA
 461+ 8FDA 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FDB FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FDD 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FDF
 465+ 8FDF 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FE1 CD FD 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FE4
 468+ 8FE4 7B               ld a,e
 469+ 8FE5 E6 01            and 1
 470+ 8FE7 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FE9              ;                                                  ; _ para activar IMPACTO.
 472+ 8FE9 E1               pop hl
 473+ 8FEA E5               push hl
 474+ 8FEB CD 5E 96         call NextScan
 475+ 8FEE
 476+ 8FEE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FEF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FF1 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FF3              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FF3 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FF5 CD FD 8F         call Bucle_2
 482+ 8FF8
 483+ 8FF8 43           1 ld b,e
 484+ 8FF9 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FFA FD E1            pop iy
 486+ 8FFC C9               ret
 487+ 8FFD
 488+ 8FFD              ; ---------- ----------
 489+ 8FFD
 490+ 8FFD 06 02        Bucle_2 ld b,2
 491+ 8FFF FD 7E 00     2 ld a,(iy)
 492+ 9002 A6               and (hl)
 493+ 9003 28 02            jr z,1F
 494+ 9005 1E 81            ld e,$81
 495+ 9007 23           1 inc hl
 496+ 9008 FD 23            inc iy
 497+ 900A 10 F3            djnz 2B
 498+ 900C C9               ret
 499+ 900D
 500+ 900D              ; ---------- ----------
 501+ 900D              ;
 502+ 900D              ;   21/7/23
 503+ 900D
 504+ 900D              Modifica_H_Velocidad_disparo
 505+ 900D
 506+ 900D 3A 47 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9010 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9012 D0               ret nc                                         ; _ incrementamos H.
 509+ 9013 24               inc h
 510+ 9014
 511+ 9014 C9               ret
 512+ 9015
 513+ 9015              ; -------------------------------------------------------------------------------------------------------------
 514+ 9015              ;
 515+ 9015              ;   11/04/23
 516+ 9015              ;
 517+ 9015              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9015              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9015              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9015              ;
 521+ 9015              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9015
 523+ 9015              Compara_coordenadas_X
 524+ 9015
 525+ 9015              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9015              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9015
 528+ 9015              ; Preparamos registros:
 529+ 9015
 530+ 9015 21 D3 89         ld hl,Filas+6
 531+ 9018 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9019 23               inc hl
 533+ 901A 23               inc hl
 534+ 901B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 901C 43               ld b,e
 536+ 901D
 537+ 901D 21 E1 89         ld hl,Filas+20
 538+ 9020 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9021 21 42 8A         ld hl,Coordenadas_X_Entidad
 540+ 9024 CD 40 92         call Guarda_coordenadas_X
 541+ 9027
 542+ 9027              ; Preparamos registros:
 543+ 9027
 544+ 9027 21 8A 85         ld hl,Amadeus_db+6
 545+ 902A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 902B 23               inc hl
 547+ 902C 23               inc hl
 548+ 902D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 902E 7B               ld a,e
 550+ 902F 08               ex af,af'
 551+ 9030 21 98 85         ld hl,Amadeus_db+20
 552+ 9033 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9034 21 3F 8A         ld hl,Coordenadas_X_Amadeus
 554+ 9037 CD 40 92         call Guarda_coordenadas_X
 555+ 903A
 556+ 903A              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 903A              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 903A
 559+ 903A 04               inc b
 560+ 903B 05               dec b
 561+ 903C 28 04            jr z,1F
 562+ 903E 06 03            ld b,3
 563+ 9040 18 02            jr 2F
 564+ 9042 06 02        1 ld b,2
 565+ 9044 08           2 ex af,af'
 566+ 9045 3C               inc a
 567+ 9046 3D               dec a
 568+ 9047 28 04            jr z,5F
 569+ 9049 0E 03            ld c,3
 570+ 904B 18 02            jr 6F
 571+ 904D 0E 02        5 ld c,2
 572+ 904F 79           6 ld a,c
 573+ 9050 08               ex af,af'
 574+ 9051 11 42 8A         ld de,Coordenadas_X_Entidad
 575+ 9054 1A           4 ld a,(de)
 576+ 9055 21 3F 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9058 BE           3 cp (hl)
 578+ 9059 28 0E            jr z,7F
 579+ 905B 23               inc hl
 580+ 905C 0D               dec c
 581+ 905D 20 F9            jr nz,3B
 582+ 905F 13               inc de
 583+ 9060 08               ex af,af'
 584+ 9061 4F               ld c,a
 585+ 9062 08               ex af,af'
 586+ 9063 10 EF            djnz 4B
 587+ 9065
 588+ 9065              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9065
 590+ 9065 CD 7C 92     8 call Limpia_Coordenadas_X
 591+ 9068 C9               ret
 592+ 9069
 593+ 9069 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 906B 32 E6 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 906E 21 3A 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9071 CB D6            set 2,(hl)
 597+ 9073 18 F0            jr 8B
 598+ 9075
 599+ 9075              ; -----------------------------------------------------------------------
 600+ 9075              ;
 601+ 9075              ;   17/04/23
 602+ 9075              ;
 603+ 9075
 604+ 9075              Detecta_colision_nave_entidad
 605+ 9075
 606+ 9075              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9075
 608+ 9075 2A CF 89         ld hl,(Posicion_actual)
 609+ 9078 CD B9 95         call Calcula_puntero_de_impresion
 610+ 907B
 611+ 907B              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 907B              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 907B
 614+ 907B DD E5            push ix
 615+ 907D E1               pop hl
 616+ 907E E5               push hl
 617+ 907F
 618+ 907F              ; ----- ----- -----
 619+ 907F 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9081 06 0A            ld b,10
 621+ 9083 CD B3 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9086 7B               ld a,e
 623+ 9087 FE 05            cp 5
 624+ 9089 38 0E            jr c,3F
 625+ 908B
 626+ 908B              ; LLegados a este punto:
 627+ 908B              ;
 628+ 908B              ;   HAY COLISIÓN !!!!!.
 629+ 908B              ;
 630+ 908B              ;   .db (Impacto) de Amadeus a "1".
 631+ 908B              ;   SET el bit3 de (Impacto2).
 632+ 908B              ;
 633+ 908B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 908B
 635+ 908B 21 9D 85         ld hl,Amadeus_db+25
 636+ 908E 36 01            ld (hl),1
 637+ 9090 21 3A 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9093 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9095 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9097 18 18            jr 1F
 641+ 9099
 642+ 9099              ; -----
 643+ 9099
 644+ 9099 E1           3 pop hl
 645+ 909A CD 5E 96         call NextScan
 646+ 909D E5               push hl
 647+ 909E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 909F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90A1 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90A3 30 0C            jr nc,1F
 651+ 90A5              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90A5 10 DC            djnz 2B
 653+ 90A7
 654+ 90A7              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90A7
 656+ 90A7              ; LLegados a este punto:
 657+ 90A7              ;
 658+ 90A7              ;   NO HAY COLISIÓN !!!!!.
 659+ 90A7              ;
 660+ 90A7              ;   .db (Impacto) de Amadeus a "0".
 661+ 90A7              ;   RES el bit2 de (Impacto2).
 662+ 90A7              ;
 663+ 90A7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90A7              ;   Lo colocamos a "0".
 665+ 90A7
 666+ 90A7 21 3A 8A         ld hl,Impacto2
 667+ 90AA CB 96            res 2,(hl)
 668+ 90AC 2A 3B 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90AF 36 00            ld (hl),0
 670+ 90B1
 671+ 90B1 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90B2 C9               ret
 673+ 90B3
 674+ 90B3               ; ---------- ----------
 675+ 90B3
 676+ 90B3 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90B4 3A CE 89         ld a,(Columns)
 678+ 90B7 47               ld b,a
 679+ 90B8 FD 7E 00     2 ld a,(iy)
 680+ 90BB BE               cp (hl)
 681+ 90BC 28 01            jr z,1F
 682+ 90BE
 683+ 90BE 1C               inc e
 684+ 90BF
 685+ 90BF 23           1 inc hl
 686+ 90C0 FD 23            inc iy
 687+ 90C2 10 F4            djnz 2B
 688+ 90C4 C1               pop bc
 689+ 90C5 C9               ret
 690+ 90C6
 691+ 90C6              ; -------------------------------------------------------------------------------------------------------------
 692+ 90C6              ;
 693+ 90C6              ;   13/03/23
 694+ 90C6              ;
 695+ 90C6              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90C6              ;
 697+ 90C6              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90C6
 699+ 90C6 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90C9 7E               ld a,(hl)
 701+ 90CA A7               and a
 702+ 90CB C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90CC
 704+ 90CC 44               ld b,h
 705+ 90CD 4D               ld c,l
 706+ 90CE 2A 27 8A         ld hl,(Stack_snapshot_disparos)
 707+ 90D1 E5               push hl
 708+ 90D2 A7               and a
 709+ 90D3 ED 42            sbc hl,bc
 710+ 90D5 E5               push hl
 711+ 90D6 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90D7
 713+ 90D7 E1               pop hl
 714+ 90D8 54               ld d,h
 715+ 90D9 5D               ld e,l
 716+ 90DA 1B               dec de
 717+ 90DB ED B8            lddr                                                ; Limpiamos.
 718+ 90DD
 719+ 90DD 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 90E0 22 27 8A         ld (Stack_snapshot_disparos),hl
 721+ 90E3
 722+ 90E3 C9               ret
 723+ 90E4
 724+ 90E4              ; -------------------------------------------------------------------------------------------------------------
 725+ 90E4              ;
 726+ 90E4              ;   18/07/23
 727+ 90E4              ;
 728+ 90E4
 729+ 90E4              Motor_de_disparos
 730+ 90E4
 731+ 90E4              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90E4
 733+ 90E4 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90E7 2A 38 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90EA
 736+ 90EA CD 4B 8D     2 call Extrae_address
 737+ 90ED 7E               ld a,(hl)
 738+ 90EE A7               and a
 739+ 90EF 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90F1
 741+ 90F1              ; ----- ----- ----- ----- ----- -----
 742+ 90F1
 743+ 90F1 C5               push bc
 744+ 90F2 CD B6 91         call foto_disparo_a_borrar
 745+ 90F5
 746+ 90F5              ; Existe colisión con este disparo???
 747+ 90F5
 748+ 90F5 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90F6 7E               ld a,(hl)
 750+ 90F7 2B               dec hl
 751+ 90F8 E6 01            and 1
 752+ 90FA 28 1D            jr z,9F
 753+ 90FC
 754+ 90FC              ;   En este punto:
 755+ 90FC              ;
 756+ 90FC              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90FC              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90FC              ;   _con la entidad).
 759+ 90FC              ;
 760+ 90FC              ;   Disparo_2A defw 0                                ; Control.
 761+ 90FC              ;    defw 0                                          ; Puntero objeto.
 762+ 90FC              ;    defw 0                                          ; Puntero de impresión.
 763+ 90FC              ;    defw 0                                          ; Rutina de impresión.
 764+ 90FC
 765+ 90FC E5               push hl
 766+ 90FD
 767+ 90FD 06 04            ld b,4
 768+ 90FF 23           19 inc hl
 769+ 9100 10 FD            djnz 19B
 770+ 9102
 771+ 9102 CD 4B 8D         call Extrae_address
 772+ 9105 CD E0 9C         call Genera_coordenadas_disparo
 773+ 9108
 774+ 9108              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9108
 776+ 9108 21 3D 8A         ld hl,Coordenadas_disparo_certero
 777+ 910B 72               ld (hl),d
 778+ 910C 23               inc hl
 779+ 910D 73               ld (hl),e
 780+ 910E
 781+ 910E              ; Elimino el disparo de la base de datos.
 782+ 910E
 783+ 910E E1               pop hl
 784+ 910F CD 35 92         call Elimina_disparo_de_base_de_datos
 785+ 9112 21 3A 8A         ld hl,Impacto2
 786+ 9115 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9117
 788+ 9117 18 06            jr 11F
 789+ 9119
 790+ 9119 CD DF 91     9 call Mueve_disparo
 791+ 911C CD B6 91         call foto_disparo_a_borrar
 792+ 911F
 793+ 911F C1           11 pop bc
 794+ 9120 18 04            jr 7F
 795+ 9122
 796+ 9122              ; ----- ----- ----- ----- ----- -----
 797+ 9122
 798+ 9122 ED 42        1 sbc hl,bc
 799+ 9124 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9126
 801+ 9126 2A 38 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9129 23               inc hl
 803+ 912A 23               inc hl
 804+ 912B 22 38 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 912E 18 BA            jr 2B
 806+ 9130
 807+ 9130 CD 14 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9133              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9133
 810+ 9133              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9133
 812+ 9133 01 6A 85         ld bc,Disparo_11
 813+ 9136 2A 36 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9139
 815+ 9139 CD 4B 8D     5 call Extrae_address
 816+ 913C 7E               ld a,(hl)
 817+ 913D A7               and a
 818+ 913E 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9140
 820+ 9140              ; ----- ----- ----- ----- ----- -----
 821+ 9140
 822+ 9140 C5               push bc
 823+ 9141 CD B6 91         call foto_disparo_a_borrar
 824+ 9144
 825+ 9144              ; Existe colisión con este disparo???
 826+ 9144
 827+ 9144 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9145 7E               ld a,(hl)
 829+ 9146 2B               dec hl
 830+ 9147 E6 01            and 1
 831+ 9149 28 4D            jr z,10F
 832+ 914B
 833+ 914B              ;! La colisión se produce con Amadeus???
 834+ 914B              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 914B
 836+ 914B E5               push hl
 837+ 914C
 838+ 914C 06 04            ld b,4
 839+ 914E 23           16 inc hl
 840+ 914F 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9151
 842+ 9151 CD 4B 8D         call Extrae_address
 843+ 9154 CD E0 9C         call Genera_coordenadas_disparo
 844+ 9157
 845+ 9157 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9158 FE 16            cp $16
 847+ 915A 38 2A            jr c,15F
 848+ 915C
 849+ 915C
 850+ 915C              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 915C
 852+ 915C D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 915D
 854+ 915D              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 915D
 856+ 915D
 857+ 915D 2A 45 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9160
 859+ 9160              ; Coordenada X de Amadeus en D.
 860+ 9160
 861+ 9160 7D               ld a,l
 862+ 9161 E6 1F            and $1F
 863+ 9163 57               ld d,a
 864+ 9164
 865+ 9164 21 8C 85         ld hl,Amadeus_db+8
 866+ 9167 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9168
 868+ 9168 21 3F 8A         ld hl,Coordenadas_X_Amadeus
 869+ 916B CD 40 92         call Guarda_coordenadas_X
 870+ 916E
 871+ 916E D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 916F
 873+ 916F              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 916F
 875+ 916F 06 02            ld b,2
 876+ 9171 C5           20 push bc
 877+ 9172
 878+ 9172 06 03            ld b,3
 879+ 9174 21 3F 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9177 7E           18 ld a,(hl)
 881+ 9178 BA               cp d
 882+ 9179 20 04            jr nz,17F
 883+ 917B
 884+ 917B              ;! Colisión Amadeus !!!!!!!!!!
 885+ 917B
 886+ 917B C1               pop bc
 887+ 917C E1               pop hl
 888+ 917D 18 0D            jr 14F
 889+ 917F
 890+ 917F 23           17 inc hl
 891+ 9180 10 F5            djnz 18B
 892+ 9182
 893+ 9182 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9183
 895+ 9183 C1               pop bc
 896+ 9184 10 EB            djnz 20B
 897+ 9186
 898+ 9186
 899+ 9186              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9186              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9186
 902+ 9186 E1           15 pop hl
 903+ 9187 23               inc hl
 904+ 9188 35               dec (hl)
 905+ 9189 2B               dec hl
 906+ 918A 18 0C            jr 10F
 907+ 918C
 908+ 918C              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 918C              ; _ almacén de coordenadas_X de Amadeus.
 910+ 918C
 911+ 918C E5           14 push hl
 912+ 918D CD 35 92         call Elimina_disparo_de_base_de_datos
 913+ 9190 21 3A 8A         ld hl,Impacto2
 914+ 9193 CB CE            set 1,(hl)
 915+ 9195 E1               pop hl
 916+ 9196 18 06            jr 12F
 917+ 9198
 918+ 9198              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9198
 920+ 9198 CD DF 91     10 call Mueve_disparo
 921+ 919B CD B6 91         call foto_disparo_a_borrar
 922+ 919E C1           12 pop bc
 923+ 919F
 924+ 919F 18 04            jr 8F
 925+ 91A1
 926+ 91A1              ; ----- ----- ----- ----- ----- -----
 927+ 91A1
 928+ 91A1 ED 42        4 sbc hl,bc
 929+ 91A3 28 0A            jr z,6F
 930+ 91A5
 931+ 91A5 2A 36 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91A8 23               inc hl
 933+ 91A9 23               inc hl
 934+ 91AA 22 36 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91AD 18 8A            jr 5B
 936+ 91AF
 937+ 91AF CD 0D 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91B2 CD 7C 92         call Limpia_Coordenadas_X
 939+ 91B5 C9               ret
 940+ 91B6
 941+ 91B6              ; ------------------------------------------------------------------
 942+ 91B6
 943+ 91B6              foto_disparo_a_borrar
 944+ 91B6
 945+ 91B6 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91B7 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91B8 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91B9
 949+ 91B9 E5               push hl
 950+ 91BA 23               inc hl
 951+ 91BB 23               inc hl
 952+ 91BC ED 73 21 8A      ld (Stack),sp
 953+ 91C0 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91C1 FD E1            pop iy
 955+ 91C3 DD E1            pop ix
 956+ 91C5 E1               pop hl
 957+ 91C6 ED 7B 21 8A      ld sp,(Stack)
 958+ 91CA 3A 10 8A         ld a,(Ctrl_1)
 959+ 91CD CB C7            set 0,a
 960+ 91CF 32 10 8A         ld (Ctrl_1),a
 961+ 91D2 CD A0 7F         call Guarda_foto_registros
 962+ 91D5 3A 10 8A         ld a,(Ctrl_1)
 963+ 91D8 CB 87            res 0,a
 964+ 91DA 32 10 8A         ld (Ctrl_1),a
 965+ 91DD E1               pop hl
 966+ 91DE C9               ret
 967+ 91DF
 968+ 91DF              ;---------------------------------------------------
 969+ 91DF              ;
 970+ 91DF              ;   18/07/23
 971+ 91DF              ;
 972+ 91DF
 973+ 91DF              Mueve_disparo
 974+ 91DF
 975+ 91DF              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91DF              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91DF              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91DF
 979+ 91DF E5               push hl
 980+ 91E0
 981+ 91E0 7E               ld a,(hl)
 982+ 91E1
 983+ 91E1 06 04            ld b,4
 984+ 91E3 23           1 inc hl
 985+ 91E4 10 FD            djnz 1B
 986+ 91E6
 987+ 91E6              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91E6
 989+ 91E6 CD 4B 8D         call Extrae_address
 990+ 91E9
 991+ 91E9 E6 01            and 1
 992+ 91EB 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91ED
 994+ 91ED              ; Disparo hacia arriba, (Amadeus).
 995+ 91ED
 996+ 91ED              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91ED              ; _ de la dificultad.
 998+ 91ED
 999+ 91ED CD 6D 96         call PreviousScan
1000+ 91F0 CD 6D 96         call PreviousScan
1001+ 91F3 CD 6D 96         call PreviousScan
1002+ 91F6 CD 6D 96         call PreviousScan
1003+ 91F9
1004+ 91F9              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91F9
1006+ 91F9 7C               ld a,h
1007+ 91FA FE 40            cp $40
1008+ 91FC 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91FE
1010+ 91FE              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91FE
1012+ 91FE EB               ex de,hl
1013+ 91FF 06 04            ld b,4
1014+ 9201 2B           6 dec hl
1015+ 9202 10 FD            djnz 6B
1016+ 9204
1017+ 9204 CD 35 92         call Elimina_disparo_de_base_de_datos
1018+ 9207 E1               pop hl
1019+ 9208 18 10            jr 7F
1020+ 920A
1021+ 920A              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 920A              ; HL contiene el puntero de impresión del disparo.
1023+ 920A              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 920A
1025+ 920A D5           3 push de
1026+ 920B C5               push bc
1027+ 920C
1028+ 920C CD D4 8F         call Comprueba_Colision
1029+ 920F
1030+ 920F              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 920F
1032+ 920F 78               ld a,b
1033+ 9210
1034+ 9210 C1               pop bc
1035+ 9211 D1               pop de
1036+ 9212
1037+ 9212 EB               ex de,hl
1038+ 9213
1039+ 9213 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9214 23               inc hl                                      ; _ movimiento.
1041+ 9215 72               ld (hl),d
1042+ 9216
1043+ 9216 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9217
1045+ 9217 23               inc hl                                      ; _ en curso.
1046+ 9218 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9219 2B               dec hl
1048+ 921A
1049+ 921A C9           7 ret
1050+ 921B
1051+ 921B              ; Disparo hacia abajo, (Entidad).
1052+ 921B
1053+ 921B 3A 47 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 921E 47               ld b,a
1055+ 921F
1056+ 921F CD 5E 96     4 call NextScan
1057+ 9222 10 FB            djnz 4B
1058+ 9224
1059+ 9224              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9224
1061+ 9224 7C               ld a,h
1062+ 9225 FE 58            cp $58
1063+ 9227 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9229
1065+ 9229 EB               ex de,hl
1066+ 922A 06 04            ld b,4
1067+ 922C 2B           5 dec hl
1068+ 922D 10 FD            djnz 5B
1069+ 922F
1070+ 922F CD 35 92         call Elimina_disparo_de_base_de_datos
1071+ 9232 E1               pop hl
1072+ 9233 18 E5            jr 7B
1073+ 9235
1074+ 9235              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9235
1076+ 9235 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9238 AF               xor a
1078+ 9239 77               ld (hl),a
1079+ 923A 54               ld d,h
1080+ 923B 5D               ld e,l
1081+ 923C 13               inc de
1082+ 923D ED B0            ldir
1083+ 923F C9               ret
1084+ 9240
1085+ 9240              ; -----------------------------------------------------------------
1086+ 9240              ;
1087+ 9240              ;   19/7/23
1088+ 9240              ;
1089+ 9240              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9240              ;
1091+ 9240              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9240              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9240              ;
1094+ 9240              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9240              ;
1096+ 9240              ;   INPUTS:
1097+ 9240              ;
1098+ 9240              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9240              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9240
1101+ 9240              ;   MODIFICA: A, HL, BC y DE.
1102+ 9240
1103+ 9240              Guarda_coordenadas_X
1104+ 9240
1105+ 9240 7B               ld a,e
1106+ 9241 A7               and a
1107+ 9242 20 04            jr nz,1F
1108+ 9244
1109+ 9244 06 02            ld b,2
1110+ 9246 18 02            jr 2F
1111+ 9248
1112+ 9248 06 03        1 ld b,3
1113+ 924A 72           2 ld (hl),d
1114+ 924B 23               inc hl
1115+ 924C 14               inc d
1116+ 924D 10 FB            djnz 2B
1117+ 924F
1118+ 924F C9               ret
1119+ 9250
1120+ 9250              ; -----------------------------------------------------------------
1121+ 9250              ;
1122+ 9250              ;   12/04/23
1123+ 9250              ;
1124+ 9250
1125+ 9250 3A 3A 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9253 A7               and a
1127+ 9254 C8               ret z
1128+ 9255
1129+ 9255 FE 04            cp 4
1130+ 9257 20 09            jr nz,1F
1131+ 9259
1132+ 9259
1133+ 9259              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9259
1135+ 9259 CD 75 90         call Detecta_colision_nave_entidad
1136+ 925C
1137+ 925C 21 3A 8A         ld hl,Impacto2
1138+ 925F CB 5E            bit 3,(hl)
1139+ 9261 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9262
1141+ 9262              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9262              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9262
1144+ 9262 21 3A 8A     1 ld hl,Impacto2
1145+ 9265 CB 4E            bit 1,(hl)
1146+ 9267 28 07            jr z,2F
1147+ 9269
1148+ 9269 21 9D 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 926C 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 926E 18 0B            jr 3F
1151+ 9270
1152+ 9270 21 3A 8A     2 ld hl,Impacto2
1153+ 9273 CB 46            bit 0,(hl)
1154+ 9275 C8               ret z
1155+ 9276
1156+ 9276              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9276
1158+ 9276 21 10 8A         ld hl,Ctrl_1
1159+ 9279 CB D6            set 2,(hl)
1160+ 927B
1161+ 927B C9           3 ret
1162+ 927C
1163+ 927C              ; -----------------------------------------------------------------
1164+ 927C              ;
1165+ 927C              ;   19/7/23
1166+ 927C              ;
1167+ 927C              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 927C
1169+ 927C AF           Limpia_Coordenadas_X xor a
1170+ 927D 06 06            ld b,6
1171+ 927F 21 3F 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9282 77           1 ld (hl),a
1173+ 9283 23               inc hl
1174+ 9284 10 FC            djnz 1B
1175+ 9286 C9               ret
1176+ 9287
1177+ 9287              ; -----------------------------------------------------------------
1178+ 9287              ;
1179+ 9287              ;   25/04/23
1180+ 9287              ;
1181+ 9287
1182+ 9287              Determina_resultado_comparativa
1183+ 9287
1184+ 9287              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9287              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9287              ;
1187+ 9287              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9287              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9287              ;
1190+ 9287              ;   SBC HL,DE
1191+ 9287
1192+ 9287              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9287              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9287
1195+ 9287              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9287              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9287
1198+ 9287
1199+ 9287 3A E1 89         ld a,(Cuad_objeto)
1200+ 928A FE 02            cp 2
1201+ 928C 28 26            jr z,2F
1202+ 928E 38 24            jr c,2F
1203+ 9290
1204+ 9290              ; Cuadrantes 3º y 4º
1205+ 9290
1206+ 9290 E6 01            and 1
1207+ 9292 28 10            jr z,4F
1208+ 9294
1209+ 9294              ; Cuadrante 3º
1210+ 9294
1211+ 9294 7C               ld a,h
1212+ 9295 06 00            ld b,0
1213+ 9297
1214+ 9297 CD 22 93         call Compara_cositas_H3
1215+ 929A
1216+ 929A 04               inc b
1217+ 929B 05               dec b
1218+ 929C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 929D
1220+ 929D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 929E 06 00            ld b,0
1222+ 92A0
1223+ 92A0 CD 34 93         call Compara_cositas_L3
1224+ 92A3 C9               ret
1225+ 92A4
1226+ 92A4              ; Cuadrante 4º
1227+ 92A4
1228+ 92A4 7C           4 ld a,h
1229+ 92A5 06 00            ld b,0
1230+ 92A7
1231+ 92A7 CD 46 93         call Compara_cositas_H4
1232+ 92AA
1233+ 92AA 04               inc b
1234+ 92AB 05               dec b
1235+ 92AC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92AD
1237+ 92AD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92AE 06 00            ld b,0
1239+ 92B0
1240+ 92B0 CD 5C 93         call Compara_cositas_L4
1241+ 92B3 C9               ret
1242+ 92B4
1243+ 92B4              ; Cuadrantes 1º y 2º.
1244+ 92B4
1245+ 92B4 28 10        2 jr z,3F
1246+ 92B6
1247+ 92B6              ; 1er Cuadrante
1248+ 92B6
1249+ 92B6 7C               ld a,h
1250+ 92B7 06 00            ld b,0
1251+ 92B9
1252+ 92B9 CD FA 92         call Compara_cositas_H1
1253+ 92BC
1254+ 92BC 04               inc b
1255+ 92BD 05               dec b
1256+ 92BE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92BF
1258+ 92BF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92C0 06 00            ld b,0
1260+ 92C2
1261+ 92C2 CD 10 93         call Compara_cositas_L1
1262+ 92C5 C9               ret
1263+ 92C6
1264+ 92C6
1265+ 92C6              ; 2º Cuadrante
1266+ 92C6
1267+ 92C6 7C           3 ld a,h
1268+ 92C7 06 00            ld b,0
1269+ 92C9
1270+ 92C9 CD D6 92         call Compara_cositas_H2
1271+ 92CC
1272+ 92CC 04               inc b
1273+ 92CD 05               dec b
1274+ 92CE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92CF
1276+ 92CF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92D0 06 00            ld b,0
1278+ 92D2
1279+ 92D2 CD E8 92         call Compara_cositas_L2
1280+ 92D5 C9               ret
1281+ 92D6
1282+ 92D6 A7           Compara_cositas_H2 and a
1283+ 92D7 28 0D            jr z,1F
1284+ 92D9              ;    cp $fd
1285+ 92D9              ;    jr z,1F
1286+ 92D9              ;    cp $fe
1287+ 92D9              ;    jr z,1F
1288+ 92D9 FE FF            cp $ff
1289+ 92DB 28 09            jr z,1F
1290+ 92DD FE 01            cp $01
1291+ 92DF 28 05            jr z,1F
1292+ 92E1 FE 02            cp $02
1293+ 92E3 28 01            jr z,1F
1294+ 92E5 C0               ret nz
1295+ 92E6 04           1 inc b
1296+ 92E7 C9               ret
1297+ 92E8
1298+ 92E8 A7           Compara_cositas_L2 and a
1299+ 92E9 28 0D            jr z,1F
1300+ 92EB              ;    cp $fd
1301+ 92EB              ;    jr z,1F
1302+ 92EB FE FE            cp $fe
1303+ 92ED 28 09            jr z,1F
1304+ 92EF FE FF            cp $ff
1305+ 92F1 28 05            jr z,1F
1306+ 92F3 FE 01            cp $01
1307+ 92F5 28 01            jr z,1F
1308+ 92F7              ;    cp $02
1309+ 92F7              ;    jr z,1F
1310+ 92F7 C0               ret nz
1311+ 92F8 04           1 inc b
1312+ 92F9 C9               ret
1313+ 92FA
1314+ 92FA A7           Compara_cositas_H1 and a
1315+ 92FB 28 11            jr z,1F
1316+ 92FD              ;    cp $fd
1317+ 92FD              ;    jr z,1F
1318+ 92FD              ;    cp $fe
1319+ 92FD              ;    jr z,1F
1320+ 92FD FE FF            cp $ff
1321+ 92FF 28 0D            jr z,1F
1322+ 9301 FE 01            cp $01
1323+ 9303 28 09            jr z,1F
1324+ 9305 FE 02            cp $02
1325+ 9307 28 05            jr z,1F
1326+ 9309 FE 03            cp $03
1327+ 930B 28 01            jr z,1F
1328+ 930D C0               ret nz
1329+ 930E 04           1 inc b
1330+ 930F C9               ret
1331+ 9310
1332+ 9310 A7           Compara_cositas_L1 and a
1333+ 9311 28 0D            jr z,1F
1334+ 9313              ;    cp $fd
1335+ 9313              ;    jr z,1F
1336+ 9313              ;    cp $fe
1337+ 9313              ;    jr z,1F
1338+ 9313              ;    cp $ff
1339+ 9313              ;    jr z,1F
1340+ 9313 FE 01            cp $01
1341+ 9315 28 09            jr z,1F
1342+ 9317 FE 02            cp $02
1343+ 9319 28 05            jr z,1F
1344+ 931B FE 03            cp $03
1345+ 931D 28 01            jr z,1F
1346+ 931F C0               ret nz
1347+ 9320 04           1 inc b
1348+ 9321 C9               ret
1349+ 9322
1350+ 9322 A7           Compara_cositas_H3 and a
1351+ 9323 28 0D            jr z,1F
1352+ 9325              ;    cp $fd
1353+ 9325              ;    jr z,1F
1354+ 9325 FE FE            cp $fe
1355+ 9327 28 09            jr z,1F
1356+ 9329 FE FF            cp $ff
1357+ 932B 28 05            jr z,1F
1358+ 932D FE 01            cp $01
1359+ 932F 28 01            jr z,1F
1360+ 9331              ;    cp $02
1361+ 9331              ;    jr z,1F
1362+ 9331              ;    cp $03
1363+ 9331              ;    jr z,1F
1364+ 9331 C0               ret nz
1365+ 9332 04           1 inc b
1366+ 9333 C9               ret
1367+ 9334
1368+ 9334 A7           Compara_cositas_L3 and a
1369+ 9335 28 0D            jr z,1F
1370+ 9337              ;    cp $fd
1371+ 9337              ;    jr z,1F
1372+ 9337              ;    cp $fe
1373+ 9337              ;    jr z,1F
1374+ 9337              ;    cp $ff
1375+ 9337              ;    jr z,1F
1376+ 9337 FE 01            cp $01
1377+ 9339 28 09            jr z,1F
1378+ 933B FE 02            cp $02
1379+ 933D 28 05            jr z,1F
1380+ 933F FE 03            cp $03
1381+ 9341 28 01            jr z,1F
1382+ 9343 C0               ret nz
1383+ 9344 04           1 inc b
1384+ 9345 C9               ret
1385+ 9346
1386+ 9346 A7           Compara_cositas_H4 and a
1387+ 9347 28 11            jr z,1F
1388+ 9349 FE FD            cp $fd
1389+ 934B 28 0D            jr z,1F
1390+ 934D FE FE            cp $fe
1391+ 934F 28 09            jr z,1F
1392+ 9351 FE FF            cp $ff
1393+ 9353 28 05            jr z,1F
1394+ 9355 FE 01            cp $01
1395+ 9357 28 01            jr z,1F
1396+ 9359              ;    cp $02
1397+ 9359              ;    jr z,1F
1398+ 9359              ;    cp $03
1399+ 9359              ;    jr z,1F
1400+ 9359 C0               ret nz
1401+ 935A 04           1 inc b
1402+ 935B C9               ret
1403+ 935C
1404+ 935C A7           Compara_cositas_L4 and a
1405+ 935D 28 0D            jr z,1F
1406+ 935F              ;    cp $fd
1407+ 935F              ;    jr z,1F
1408+ 935F FE FE            cp $fe
1409+ 9361 28 09            jr z,1F
1410+ 9363 FE FF            cp $ff
1411+ 9365 28 05            jr z,1F
1412+ 9367 FE 01            cp $01
1413+ 9369 28 01            jr z,1F
1414+ 936B              ;    cp $02
1415+ 936B              ;    jr z,1F
1416+ 936B              ;    cp $03
1417+ 936B              ;    jr z,1F
1418+ 936B C0               ret nz
1419+ 936C 04           1 inc b
1420+ 936D C9               ret
# file closed: Disparo.asm
1310  936E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 936E              ; ******************************************************************************************************************************************************************************************
   2+ 936E              ;
   3+ 936E              ; 26/06/23
   4+ 936E              ;
   5+ 936E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 936E
   7+ 936E CD 52 96     Draw call Prepara_draw
   8+ 9371 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9372 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9373 28 05        	jr z,2F
  11+ 9375
  12+ 9375 3A E1 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9378 18 0C        	jr 1F
  14+ 937A
  15+ 937A 2A DF 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 937D 22 CF 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9380 CD 0F 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9383              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9383 CD 5C 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9386
  21+ 9386 3A FB 89     1 ld a,(Ctrl_0)
  22+ 9389 CB 6F        	bit 5,a
  23+ 938B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 938D
  25+ 938D CD A5 93     	call Comprueba_limite_horizontal
  26+ 9390 CD 35 94     	call Comprueba_limite_vertical
  27+ 9393
  28+ 9393              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9393              ; -----------------------
  30+ 9393              ; -----------------------
  31+ 9393              ; -----------------------
  32+ 9393
  33+ 9393 CD 82 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9396 CD B9 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9399 CD 18 96     	call Define_rutina_de_impresion
  36+ 939C
  37+ 939C 3A FB 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 939F CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93A1 32 FB 89     	ld (Ctrl_0),a
  40+ 93A4
  41+ 93A4 C9           	ret
  42+ 93A5
  43+ 93A5              ; *******************************************************************************************************************************************************************************************
  44+ 93A5              ;	21/01/23
  45+ 93A5              ;
  46+ 93A5              ; 	Comprueba_limite_horizontal.
  47+ 93A5              ;
  48+ 93A5              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93A5              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93A5              ;
  51+ 93A5              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93A5              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93A5              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93A5              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93A5
  56+ 93A5
  57+ 93A5
  58+ 93A5 3A FB 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93A8 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93AA 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93AC E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93AE 32 FB 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93B1 18 09            jr 6F
  64+ 93B3 CB 5F        1 bit 3,a
  65+ 93B5 28 0A            jr z,2F
  66+ 93B7 E6 F7            and $f7
  67+ 93B9 32 FB 89         ld (Ctrl_0),a
  68+ 93BC CD 0F 95     6 call Inicializacion
  69+ 93BF 18 5B            jr 5F
  70+ 93C1 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93C2
  72+ 93C2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93C2              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93C2
  75+ 93C2 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93C3 2A 0B 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93C6 CD 2A 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93C9 67           	ld h,a
  79+ 93CA EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93CB CD 2A 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93CE 67           	ld h,a
  82+ 93CF A7           	and a
  83+ 93D0 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93D2 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93D3 3A E1 89     	ld a,(Cuad_objeto)
  86+ 93D6 FE 02        	cp 2
  87+ 93D8 38 1E        	jr c,3F
  88+ 93DA 28 1C        	jr z,3F
  89+ 93DC 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93DD 28 23            jr z,7F
  91+ 93DF 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93E1 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93E3 E1           	pop hl
  94+ 93E4
  95+ 93E4              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93E4              ; _para indicar con E="2" en caso necesario.
  97+ 93E4
  98+ 93E4 E5               push hl
  99+ 93E5 C5               push bc
 100+ 93E6 CD 2A 99     	call calcula_tercio
 101+ 93E9 FE 01        	cp 1
 102+ 93EB 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93ED CD 1D 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93F0 28 26            jr z,9F
 105+ 93F2 38 24            jr c,9F
 106+ 93F4 1E 00        11 ld e,0
 107+ 93F6 18 22            jr 8F
 108+ 93F8 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93F9 28 07        	jr z, 7F
 110+ 93FB 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93FD 1E 00         	ld e,0
 112+ 93FF E1           	pop hl
 113+ 9400 18 04        	jr 4F
 114+ 9402 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9404 18 15            jr 10F
 116+ 9406
 117+ 9406              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9406              ; _para indicar con E="2" en caso necesario.
 119+ 9406
 120+ 9406 E5           4 push hl
 121+ 9407 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9408 CD 2A 99     	call calcula_tercio
 123+ 940B FE 01        	cp 1
 124+ 940D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 940F CD 1D 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9412 28 04            jr z,9F
 127+ 9414 30 02            jr nc,9F
 128+ 9416 18 02        	jr 8F
 129+ 9418 1E 02        9 ld e,2
 130+ 941A C1           8 pop bc
 131+ 941B E1           10 pop hl
 132+ 941C C9           5 ret
 133+ 941D
 134+ 941D              ; --------------------
 135+ 941D              ;
 136+ 941D              ; 25/08/22
 137+ 941D
 138+ 941D CD 2A 99     Comprueba_centro call calcula_tercio
 139+ 9420 67               ld h,a
 140+ 9421 08           	ex af,af
 141+ 9422 FE 02        	cp 2
 142+ 9424 38 07        	jr c,1F
 143+ 9426 28 05        	jr z,1F
 144+ 9428 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 942B 18 03        	jr 2F
 146+ 942D 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9430 08           2 ex af,af
 148+ 9431 A7               and a
 149+ 9432 ED 42            sbc hl,bc
 150+ 9434 C9               ret
 151+ 9435
 152+ 9435              ; *********************************************************************************************************************************************************************************************
 153+ 9435              ;
 154+ 9435              ;   16/8/22
 155+ 9435              ;
 156+ 9435              ;	Comprueba_limite_vertical
 157+ 9435              ;
 158+ 9435              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9435              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9435              ;
 161+ 9435
 162+ 9435 2A CF 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9438 7D           	ld a,l
 164+ 9439 E6 1F        	and $1F
 165+ 943B 57           	ld d,a
 166+ 943C 3A 0D 8A     	ld a,(Limite_vertical)
 167+ 943F BA           	cp d 											; Límite - Posición.
 168+ 9440 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9441 3A E1 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9444 CB 47        	bit 0,a
 171+ 9446 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9448
 173+ 9448              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9448
 175+ 9448 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9449 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 944B
 178+ 944B              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 944B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 944B
 181+ 944B 3A D3 89         ld a,(Coordenada_X)
 182+ 944E 16 0F            ld d,Centro_izquierda
 183+ 9450 A7               and a
 184+ 9451 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9452 28 1E            jr z,3F
 186+ 9454 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9456              ;                                                    ; _salimos sin modificar nada.
 188+ 9456 18 0E            jr 2F
 189+ 9458 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9459 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 945B
 192+ 945B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 945B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 945B
 195+ 945B 3A D3 89         ld a,(Coordenada_X)
 196+ 945E 16 10            ld d,Centro_derecha
 197+ 9460 A7               and a
 198+ 9461 92               sub d
 199+ 9462 28 0E            jr z,3F
 200+ 9464 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9466              ;                                                    ; _salimos sin modificar nada.
 202+ 9466 CB 43        2 bit 0,e
 203+ 9468 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 946A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 946B CD FF 94         call Modificaccionne
 206+ 946E C1           	pop bc
 207+ 946F CD 0F 95         call Inicializacion
 208+ 9472 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9473
 210+ 9473              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9473
 212+ 9473 C5           4 push bc
 213+ 9474 01 CE 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9477 0A           	ld a,(bc)
 215+ 9478 3D           	dec a
 216+ 9479 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 947A 7D           	ld a,l
 218+ 947B 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 947C CB 47        	bit 0,a
 220+ 947E 28 03        	jr z,5F
 221+ 9480 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9481 18 2E        	jr 7F
 223+ 9483
 224+ 9483              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9483
 226+ 9483 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9484 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9485 3A FB 89     	ld a,(Ctrl_0)
 229+ 9488 CB 4F        	bit 1,a
 230+ 948A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 948C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 948D
 233+ 948D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 948D
 235+ 948D 1C               inc e
 236+ 948E 1D               dec e
 237+ 948F 20 07            jr nz,12F
 238+ 9491 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9492 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9493 22 CF 89     	ld (Posicion_actual),hl
 241+ 9496 18 44        13 jr 9F
 242+ 9498 CB 43        12 bit 0,e
 243+ 949A 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 949C              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 949C C1           	pop bc
 246+ 949D 18 D3        	jr 3B
 247+ 949F 80           14 add b
 248+ 94A0 6F               ld l,a
 249+ 94A1 22 CF 89     	ld (Posicion_actual),hl
 250+ 94A4 CD FF 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94A7 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94A9 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94AB 32 FB 89         ld (Ctrl_0),a
 254+ 94AE F1           	pop af
 255+ 94AF 18 2B        	jr 9F
 256+ 94B1
 257+ 94B1              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94B1
 259+ 94B1 F5           7 push af
 260+ 94B2 3A FB 89     	ld a,(Ctrl_0)
 261+ 94B5 CB 47        	bit 0,a
 262+ 94B7 20 1D        	jr nz,8F
 263+ 94B9 F1           	pop af
 264+ 94BA
 265+ 94BA              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94BA
 267+ 94BA 1C           	inc e
 268+ 94BB 1D               dec e
 269+ 94BC 20 07            jr nz,10F
 270+ 94BE 90           	sub b
 271+ 94BF 6F               ld l,a
 272+ 94C0 22 CF 89     	ld (Posicion_actual),hl
 273+ 94C3 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94C5              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94C5 CB 43        10 bit 0,e
 276+ 94C7 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94C9              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94C9 C1           	pop bc
 279+ 94CA 18 A6        	jr 3B
 280+ 94CC 90           16 sub b
 281+ 94CD 6F               ld l,a
 282+ 94CE 22 CF 89     	ld (Posicion_actual),hl
 283+ 94D1 CD FF 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94D4 18 06            jr 9F
 285+ 94D6 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94D8 32 FB 89         ld (Ctrl_0),a
 287+ 94DB F1           	pop af
 288+ 94DC C1           9 pop bc
 289+ 94DD 1E 00        	ld e,0
 290+ 94DF CD 0F 95         call Inicializacion
 291+ 94E2 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94E3 08           	ex af,af
 293+ 94E4 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94E5 18 8B            jr 3B
 295+ 94E7
 296+ 94E7              ; --------------------
 297+ 94E7
 298+ 94E7 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94E9 CD 6D 96     1 call PreviousScan
 300+ 94EC 10 FB            djnz 1B
 301+ 94EE 22 CF 89     	ld (Posicion_actual),hl
 302+ 94F1 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94F2 C9           	ret
 304+ 94F3
 305+ 94F3              ; --------------------
 306+ 94F3
 307+ 94F3 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94F5 CD 5E 96     1 call NextScan
 309+ 94F8 10 FB            djnz 1B
 310+ 94FA 22 CF 89     	ld (Posicion_actual),hl
 311+ 94FD AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94FE C9           	ret
 313+ 94FF
 314+ 94FF              ; --------------------
 315+ 94FF              ;
 316+ 94FF              ;	22/01/23
 317+ 94FF              ;
 318+ 94FF              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94FF              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94FF              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94FF
 322+ 94FF
 323+ 94FF              Modificaccionne
 324+ 94FF
 325+ 94FF 3A E1 89     	ld a,(Cuad_objeto)
 326+ 9502 FE 02        	cp 2
 327+ 9504 CC E7 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9507 DC E7 94         call c,Modifica_Pos_actual
 329+ 950A C8           	ret z
 330+ 950B CD F3 94         call Modifica_Pos_actual2
 331+ 950E C9               ret
 332+ 950F
 333+ 950F              ; *************************************************************************************************************************************************************************************************
 334+ 950F              ;
 335+ 950F              ;	13/8/22
 336+ 950F              ;
 337+ 950F              ;	Inicializacion
 338+ 950F              ;
 339+ 950F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 950F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 950F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 950F              ;
 343+ 950F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 950F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 950F              ;	_ desaparece/aparece.
 346+ 950F
 347+ 950F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 950F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 950F              ;
 350+ 950F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 950F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 950F              ; 		   [E] ="0"
 353+ 950F
 354+ 950F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 950F
 356+ 950F CD 2A 99     Inicializacion call calcula_tercio
 357+ 9512 28 36        	jr z,primit
 358+ 9514 E6 02        	and 2
 359+ 9516 20 07        	jr nz,segmit
 360+ 9518 7D           	ld a,l
 361+ 9519 FE 7F        	cp $7f
 362+ 951B 38 2D        	jr c,primit
 363+ 951D 28 2B        	jr z,primit
 364+ 951F CD 7C 95     segmit call column
 365+ 9522 38 13        	jr c,tercuad
 366+ 9524 3E 04        cuarcuad ld a,4
 367+ 9526 32 E1 89     	ld (Cuad_objeto),a
 368+ 9529 21 20 48     	ld hl,$4820
 369+ 952C 22 0B 8A     	ld (Limite_horizontal),hl
 370+ 952F 21 0D 8A     	ld hl,Limite_vertical
 371+ 9532 36 0D        	ld (hl),$0d
 372+ 9534 08           	ex af,af
 373+ 9535 18 3C        	jr 1F
 374+ 9537              tercuad
 375+ 9537 3E 03        	ld a,3
 376+ 9539 32 E1 89     	ld (Cuad_objeto),a
 377+ 953C 21 20 48     	ld hl,$4820
 378+ 953F 22 0B 8A     	ld (Limite_horizontal),hl
 379+ 9542 21 0D 8A     	ld hl,Limite_vertical
 380+ 9545 36 12        	ld (hl),$12
 381+ 9547 08           	ex af,af
 382+ 9548 18 29        	jr 1F
 383+ 954A CD 7C 95     primit call column
 384+ 954D 38 13        	jr c, primcuad
 385+ 954F              segcuad
 386+ 954F 3E 02        	ld a,2
 387+ 9551 32 E1 89     	ld (Cuad_objeto),a
 388+ 9554 21 C0 4F     	ld hl,$4fc0
 389+ 9557 22 0B 8A     	ld (Limite_horizontal),hl
 390+ 955A 21 0D 8A     	ld hl,Limite_vertical
 391+ 955D 36 0D        	ld (hl),$0d
 392+ 955F 08           	ex af,af
 393+ 9560 18 11        	jr 1F
 394+ 9562              primcuad
 395+ 9562 3E 01        	ld a,1
 396+ 9564 32 E1 89     	ld (Cuad_objeto),a
 397+ 9567 21 C0 4F     	ld hl,$4fc0
 398+ 956A 22 0B 8A     	ld (Limite_horizontal),hl
 399+ 956D 21 0D 8A     	ld hl,Limite_vertical
 400+ 9570 36 12        	ld (hl),$12
 401+ 9572 08           	ex af,af
 402+ 9573 CD B5 9C     1 call Genera_coordenadas
 403+ 9576 21 FB 89     	ld hl,Ctrl_0
 404+ 9579 CB EE        	set 5,(hl)
 405+ 957B C9           	ret
 406+ 957C
 407+ 957C              ; ------------------------------------------------------------------------------------------------------------------
 408+ 957C
 409+ 957C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 957C              ;
 411+ 957C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 957C
 413+ 957C 7D           column ld a,l
 414+ 957D E6 1F        	and $1f
 415+ 957F FE 10         	cp $10
 416+ 9581 C9            	ret
 417+ 9582
 418+ 9582              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9582              ;
 420+ 9582              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9582              ;
 422+ 9582              ; 14/12/22
 423+ 9582              ;
 424+ 9582              ;	Modifica: A y BC.
 425+ 9582
 426+ 9582 3A E1 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9585 E6 01        	and 1
 428+ 9587 28 17        	jr z,1F
 429+ 9589
 430+ 9589              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9589
 432+ 9589 3A D3 89     	ld a,(Coordenada_X)
 433+ 958C 47           	ld b,a
 434+ 958D 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 958E 79           	ld a,c
 436+ 958F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9590 38 08        	jr c,2F
 438+ 9592 47           	ld b,a
 439+ 9593 79           	ld a,c
 440+ 9594 90           	sub b
 441+ 9595 32 0A 8A     	ld (Columnas),a
 442+ 9598 18 1B        	jr 4F
 443+ 959A 79           2 ld a,c
 444+ 959B 32 0A 8A     	ld (Columnas),a
 445+ 959E 18 15        	jr 4F
 446+ 95A0
 447+ 95A0              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95A0
 449+ 95A0 3A D3 89     1 ld a,(Coordenada_X)
 450+ 95A3 81           	add c
 451+ 95A4 3D           	dec a
 452+ 95A5 D6 1F        	sub $1f
 453+ 95A7 38 08        	jr c,3F
 454+ 95A9 47           	ld b,a
 455+ 95AA 79           	ld a,c
 456+ 95AB 90           	sub b
 457+ 95AC 32 0A 8A     	ld (Columnas),a
 458+ 95AF 18 04        	jr 4F
 459+ 95B1 79           3 ld a,c
 460+ 95B2 32 0A 8A     	ld (Columnas),a
 461+ 95B5 D9           4 exx
 462+ 95B6 4F           	ld c,a
 463+ 95B7 D9           	exx
 464+ 95B8 C9            ret
 465+ 95B9
 466+ 95B9              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95B9              ;
 468+ 95B9              ;   19/7/23
 469+ 95B9              ;
 470+ 95B9              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95B9              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95B9              ;
 473+ 95B9              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95B9              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95B9              ;
 476+ 95B9              ;	DESTRUYE: HL,B Y A.
 477+ 95B9
 478+ 95B9 3A E1 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95BC FE 02        	cp 2
 480+ 95BE 38 18        	jr c,1F
 481+ 95C0 28 16        	jr z,1F
 482+ 95C2 E6 01        	and 1
 483+ 95C4 28 0D        	jr z,3F
 484+ 95C6
 485+ 95C6              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95C6
 487+ 95C6 CD 0C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95C9
 489+ 95C9 7D           9 ld a,l
 490+ 95CA E6 1F        	and $1f
 491+ 95CC 28 2A        	jr z,7F
 492+ 95CE 2B           	dec hl
 493+ 95CF 10 F8        	djnz 9B
 494+ 95D1 18 25        	jr 7F
 495+ 95D3
 496+ 95D3              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95D3
 498+ 95D3 2A CF 89     3 ld hl,(Posicion_actual)
 499+ 95D6 18 20        	jr 7F
 500+ 95D8
 501+ 95D8 28 14        1 jr z,2F
 502+ 95DA
 503+ 95DA              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95DA
 505+ 95DA CD 0C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95DD
 507+ 95DD 7D           4 ld a,l
 508+ 95DE E6 1F        	and $1f
 509+ 95E0 28 03        	jr z,6F
 510+ 95E2 2B           	dec hl
 511+ 95E3 10 F8        	djnz 4B
 512+ 95E5 06 0F        6 ld b,15
 513+ 95E7 CD 6D 96     5 call PreviousScan
 514+ 95EA 10 FB        	djnz 5B
 515+ 95EC 18 0A        	jr 7F
 516+ 95EE
 517+ 95EE              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95EE
 519+ 95EE CD 0C 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95F1 06 0F        	ld b,15
 521+ 95F3 CD 6D 96     8 call PreviousScan
 522+ 95F6 10 FB        	djnz 8B
 523+ 95F8
 524+ 95F8 E5           7 push hl
 525+ 95F9 DD E1        	pop ix
 526+ 95FB
 527+ 95FB 2A D1 89     	ld hl,(Puntero_objeto)
 528+ 95FE E5           	push hl
 529+ 95FF FD E1        	pop iy
 530+ 9601
 531+ 9601              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9601
 533+ 9601 3A FB 89     	ld a,(Ctrl_0)
 534+ 9604 CB 77        	bit 6,a
 535+ 9606 C8           	ret z
 536+ 9607
 537+ 9607              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9607              ; _ entidad / Amadeus´.
 539+ 9607
 540+ 9607 DD 22 45 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 960B
 542+ 960B C9           	ret
 543+ 960C
 544+ 960C              ; --------------------------------------------------------------------------------------------------------------------
 545+ 960C              ;
 546+ 960C              ;	2/1/23
 547+ 960C              ;
 548+ 960C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 960C              ;
 550+ 960C              ;	Tras esta rutina tenemos:
 551+ 960C              ;
 552+ 960C              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 960C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 960C              ;
 555+ 960C              ;	DESTRUYE!!!!! HL,B y A.
 556+ 960C
 557+ 960C 2A CF 89     Operandos ld hl,(Posicion_actual)
 558+ 960F 3A 0A 8A     	ld a,(Columnas)
 559+ 9612 3D           	dec a
 560+ 9613 20 01        	jr nz,1F
 561+ 9615 3C           	inc a
 562+ 9616 47           1 ld b,a
 563+ 9617 C9           	ret
 564+ 9618
 565+ 9618              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9618              ;
 567+ 9618              ;	3/1/23
 568+ 9618              ;
 569+ 9618              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9618              ;
 571+ 9618              ;	Destruye: A,B,HL y DE.
 572+ 9618
 573+ 9618              Define_rutina_de_impresion
 574+ 9618
 575+ 9618 3A CE 89     	ld a,(Columns)
 576+ 961B 47           	ld b,a
 577+ 961C 3A 0A 8A     	ld a,(Columnas)
 578+ 961F B8           	cp b
 579+ 9620 20 0D        	jr nz,2f
 580+ 9622
 581+ 9622              ;	La entidad se imprime entera.
 582+ 9622
 583+ 9622 21 FA 96     	ld hl, Indice_entidades_completas
 584+ 9625 E6 01        	and 1
 585+ 9627 28 02        	jr z,1F
 586+ 9629
 587+ 9629 23           	inc hl
 588+ 962A 23           	inc hl
 589+ 962B
 590+ 962B CD 4B 8D     1 call Extrae_address
 591+ 962E C9           	ret		;	ret
 592+ 962F
 593+ 962F              ;	La entidad no se imprime entera en pantalla.
 594+ 962F
 595+ 962F 3A E1 89     2 ld a,(Cuad_objeto)
 596+ 9632 E6 01        	and 1
 597+ 9634 28 17        	jr z,3F
 598+ 9636
 599+ 9636              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9636
 601+ 9636 21 FE 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9639 3A CE 89     4 ld a,(Columns)
 603+ 963C E6 01        	and 1
 604+ 963E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9640
 606+ 9640 23           	inc hl
 607+ 9641 23           	inc hl
 608+ 9642
 609+ 9642 3A 0A 8A     	ld a,(Columnas)
 610+ 9645 E6 01        	and 1
 611+ 9647 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9649
 613+ 9649 23           	inc hl
 614+ 964A 23           	inc hl
 615+ 964B
 616+ 964B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 964D
 618+ 964D 21 04 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9650 18 E7        	jr 4B
 620+ 9652
 621+ 9652              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9652              ;
 623+ 9652              ;	Prepara_draw
 624+ 9652              ;
 625+ 9652              ;	Es una rutina de carga.
 626+ 9652              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9652              ;
 628+ 9652              ;	FUNCIONAMIENTO:
 629+ 9652              ;
 630+ 9652              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9652              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9652              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9652              ;
 634+ 9652              ;	DESTRUYE:
 635+ 9652              ;
 636+ 9652              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9652
 638+ 9652 21 CD 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9655 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9656 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9657 4E           	ld c,(hl)
 642+ 9658 2A CF 89     	ld hl,(Posicion_actual)
 643+ 965B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 965D C9           	ret
 645+ 965E
 646+ 965E              ;----------------------------------------------------------------------------------------------------------------
 647+ 965E              ;
 648+ 965E              ;	5/08/22
 649+ 965E              ;
 650+ 965E              ;   NextScan.
 651+ 965E              ;
 652+ 965E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 965E              ;
 654+ 965E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 965E              ;
 656+ 965E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 965E              ;
 658+ 965E              ;       DESTRUIDOS: AF y HL !!!
 659+ 965E              ;
 660+ 965E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 965E              ;
 662+ 965E
 663+ 965E 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 965F 7C               ld a,h
 665+ 9660 E6 07            and 7
 666+ 9662 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9663
 668+ 9663 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9664 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9666 6F               ld l,a
 671+ 9667 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9668
 673+ 9668 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9669 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 966B 67               ld h,a
 676+ 966C C9               ret
 677+ 966D
 678+ 966D              ;----------------------------------------------------------------------------------------------------------------
 679+ 966D              ;
 680+ 966D              ;	5/08/22
 681+ 966D              ;
 682+ 966D              ;   PreviousScan.
 683+ 966D              ;
 684+ 966D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 966D              ;
 686+ 966D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 966D              ;
 688+ 966D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 966D              ;
 690+ 966D              ;       DESTRUIDOS: AF y HL !!!
 691+ 966D              ;
 692+ 966D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 966D              ;
 694+ 966D
 695+ 966D 7C           PreviousScan ld a,h
 696+ 966E 25               dec h               ; Dec H.
 697+ 966F E6 07            and 7
 698+ 9671 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9672
 700+ 9672 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9673 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9675 6F               ld l,a
 703+ 9676 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9677
 705+ 9677 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9678 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 967A 67               ld h,a
 708+ 967B C9               ret
 709+ 967C
 710+ 967C              ; -----------------------------------------------------------------------------------
 711+ 967C              ;
 712+ 967C              ;	31/7/23
 713+ 967C              ;
 714+ 967C              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 967C              ;	Extrae fotos de Album_de_fotos.
 716+ 967C
 717+ 967C              Extrae_foto_entidades
 718+ 967C
 719+ 967C 21 01 70     	ld hl,Album_de_fotos+1
 720+ 967F 7E               ld a,(hl)
 721+ 9680 A7               and a
 722+ 9681 C8               ret z																	; Salimos si no hay DATOS en el álbum.
 723+ 9682
 724+ 9682 3A 1C 8A     	ld a,(Numero_de_malotes)												; Salimos si no hay MOVIMIENTO.
 725+ 9685 A7           	and a
 726+ 9686 C8           	ret z
 727+ 9687
 728+ 9687              ; -----------------------------------
 729+ 9687
 730+ 9687 ED 73 21 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 968B 31 00 70     	ld sp,Album_de_fotos
 732+ 968E
 733+ 968E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9690 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9691 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9692
 737+ 9692 ED 73 23 8A  	ld (Stack_2),sp
 738+ 9696 ED 7B 21 8A  	ld sp,(Stack)
 739+ 969A
 740+ 969A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 969A
 742+ 969A 3E CD        	ld a,$cd
 743+ 969C 32 A4 96     	ld (Imprime),a
 744+ 969F EB           	ex de,hl
 745+ 96A0 22 A5 96     	ld (Imprime+1),hl
 746+ 96A3 EB           	ex de,hl
 747+ 96A4
 748+ 96A4              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96A4
 750+ 96A4 00 00 00     Imprime db 0,0,0
 751+ 96A7
 752+ 96A7 3A 1C 8A     	ld a,(Numero_de_malotes)
 753+ 96AA 3D           	dec a
 754+ 96AB 28 09        	jr z,1F
 755+ 96AD 32 1C 8A      	ld (Numero_de_malotes),a
 756+ 96B0
 757+ 96B0 ED 7B 23 8A   	ld sp,(Stack_2)
 758+ 96B4 18 D8        	jr 2B
 759+ 96B6
 760+ 96B6 AF           1 xor a
 761+ 96B7 32 23 8A     	ld (Stack_2),a
 762+ 96BA C9           	ret
 763+ 96BB
 764+ 96BB              ; -----------------------------------------------------------------------------------
 765+ 96BB              ;
 766+ 96BB              ;	28/2/23
 767+ 96BB              ;
 768+ 96BB              ;	Pinta los disparos generados.
 769+ 96BB
 770+ 96BB              Extrae_foto_disparos
 771+ 96BB
 772+ 96BB 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 773+ 96BE 7E               ld a,(hl)
 774+ 96BF A7               and a
 775+ 96C0 C8               ret z
 776+ 96C1
 777+ 96C1 3A 35 8A     	ld a,(Numero_de_disparotes)
 778+ 96C4 A7           	and a
 779+ 96C5 C8           	ret z
 780+ 96C6 ED 73 21 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 781+ 96CA 31 0D 72     	ld sp,Album_de_fotos_disparos
 782+ 96CD
 783+ 96CD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 784+ 96CF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 785+ 96D0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 786+ 96D1
 787+ 96D1 ED 73 23 8A  	ld (Stack_2),sp
 788+ 96D5 ED 7B 21 8A  	ld sp,(Stack)
 789+ 96D9
 790+ 96D9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 791+ 96D9
 792+ 96D9 3E CD        	ld a,$cd
 793+ 96DB 32 E3 96     	ld (Imprime2),a
 794+ 96DE EB           	ex de,hl
 795+ 96DF 22 E4 96     	ld (Imprime2+1),hl
 796+ 96E2 EB           	ex de,hl
 797+ 96E3
 798+ 96E3              ; Ejecuta la llamada:	CALL $xx,xx
 799+ 96E3
 800+ 96E3 00 00 00     Imprime2 db 0,0,0
 801+ 96E6
 802+ 96E6 3A 35 8A     	ld a,(Numero_de_disparotes)
 803+ 96E9 3D           	dec a
 804+ 96EA 28 09        	jr z,1F
 805+ 96EC 32 35 8A      	ld (Numero_de_disparotes),a
 806+ 96EF
 807+ 96EF ED 7B 23 8A  	ld sp,(Stack_2)
 808+ 96F3 18 D8        	jr 2B
 809+ 96F5
 810+ 96F5 AF           1 xor a
 811+ 96F6 32 23 8A     	ld (Stack_2),a
 812+ 96F9 C9           	ret
 813+ 96FA
# file closed: Draw_XOR.asm
1311  96FA              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96FA              ;   índices de Rutinas de impresión.
   2+ 96FA
   3+ 96FA 0A 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96FC 37 97            defw Pinta_Amadeus_3x2
   5+ 96FE
   6+ 96FE 8D 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9700 2D 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9702 E1 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9704
  10+ 9704 B7 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9706 BB 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9708 6F 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 970A
  14+ 970A
  15+ 970A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 970A              ;
  17+ 970A              ;   12/12/22
  18+ 970A              ;
  19+ 970A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 970A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 970A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 970A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 970A              ;
  24+ 970A              ;   Modifica: DE y HL.
  25+ 970A
  26+ 970A ED 73 21 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 970E FD F9        	ld sp,iy
  28+ 9710 06 10            ld b,16
  29+ 9712 D1           1 pop de
  30+ 9713 7B               ld a,e
  31+ 9714 AE               xor (hl)
  32+ 9715 77           	ld (hl),a
  33+ 9716 23           	inc hl
  34+ 9717 7A               ld a,d
  35+ 9718 AE               xor (hl)
  36+ 9719 77           	ld (hl),a
  37+ 971A 2B           	dec hl
  38+ 971B 24           	inc h
  39+ 971C 7C               ld a,h
  40+ 971D E6 07            and 7
  41+ 971F 20 0A            jr nz,2F
  42+ 9721 7D               ld a,l
  43+ 9722 C6 20            add a,$20
  44+ 9724 6F               ld l,a
  45+ 9725 38 04            jr c,2F
  46+ 9727 7C               ld a,h
  47+ 9728 D6 08            sub 8
  48+ 972A 67               ld h,a
  49+ 972B 7C           2 ld a,h
  50+ 972C FE 58            cp $58
  51+ 972E 28 02            jr z,3F
  52+ 9730 10 E0            djnz 1B
  53+ 9732 ED 7B 21 8A  3 ld sp,(Stack)
  54+ 9736 C9           	ret
  55+ 9737
  56+ 9737 ED 73 21 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 973B FD F9        	ld sp,iy
  58+ 973D 06 08            ld b,8
  59+ 973F D1           1 pop de
  60+ 9740 7B               ld a,e
  61+ 9741 AE               xor (hl)
  62+ 9742 77           	ld (hl),a
  63+ 9743 23           	inc hl
  64+ 9744 7A               ld a,d
  65+ 9745 AE               xor (hl)
  66+ 9746 77           	ld (hl),a
  67+ 9747 23           	inc hl
  68+ 9748 D1           	pop de
  69+ 9749 7B               ld a,e
  70+ 974A AE               xor (hl)
  71+ 974B 77           	ld (hl),a
  72+ 974C 2B           	dec hl
  73+ 974D 2B           	dec hl
  74+ 974E 24           	inc h
  75+ 974F 7C               ld a,h
  76+ 9750 E6 07            and 7
  77+ 9752 20 0A            jr nz,2F
  78+ 9754 7D               ld a,l
  79+ 9755 C6 20            add a,$20
  80+ 9757 6F               ld l,a
  81+ 9758 38 04            jr c,2F
  82+ 975A 7C               ld a,h
  83+ 975B D6 08            sub 8
  84+ 975D 67               ld h,a
  85+ 975E 7C           2 ld a,h
  86+ 975F FE 58            cp $58
  87+ 9761 28 25            jr z,4F
  88+ 9763 7A               ld a,d
  89+ 9764 AE               xor (hl)
  90+ 9765 77               ld (hl),a
  91+ 9766 D1           	pop de
  92+ 9767 23           	inc hl
  93+ 9768 7B               ld a,e
  94+ 9769 AE               xor (hl)
  95+ 976A 77           	ld (hl),a
  96+ 976B 23           	inc hl
  97+ 976C 7A               ld a,d
  98+ 976D AE               xor (hl)
  99+ 976E 77           	ld (hl),a
 100+ 976F 2B           	dec hl
 101+ 9770 2B           	dec hl
 102+ 9771 24           	inc h
 103+ 9772 7C               ld a,h
 104+ 9773 E6 07            and 7
 105+ 9775 20 0A            jr nz,3F
 106+ 9777 7D               ld a,l
 107+ 9778 C6 20            add a,$20
 108+ 977A 6F               ld l,a
 109+ 977B 38 04            jr c,3F
 110+ 977D 7C               ld a,h
 111+ 977E D6 08            sub 8
 112+ 9780 67               ld h,a
 113+ 9781 7C           3 ld a,h
 114+ 9782 FE 58            cp $58
 115+ 9784 28 02            jr z,4F
 116+ 9786 10 B7            djnz 1B
 117+ 9788 ED 7B 21 8A  4 ld sp,(Stack)
 118+ 978C C9           	ret
 119+ 978D
 120+ 978D              ; ---------------------------------------------------
 121+ 978D
 122+ 978D ED 73 21 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9791 FD F9        	ld sp,iy
 124+ 9793
 125+ 9793              ; >>>
 126+ 9793
 127+ 9793 06 10            ld b,16
 128+ 9795 D1           1 pop de
 129+ 9796 7A           	ld a,d
 130+ 9797 AE           	xor (hl)
 131+ 9798 77           	ld (hl),a
 132+ 9799 24           	inc h
 133+ 979A 7C               ld a,h
 134+ 979B E6 07            and 7
 135+ 979D 20 0C            jr nz,2F
 136+ 979F 7D               ld a,l
 137+ 97A0 C6 20            add a,$20
 138+ 97A2 6F               ld l,a
 139+ 97A3 38 06            jr c,2F
 140+ 97A5 7C               ld a,h
 141+ 97A6 D6 08            sub 8
 142+ 97A8 67               ld h,a
 143+ 97A9 18 00            jr 2F
 144+ 97AB 7C           2 ld a,h
 145+ 97AC FE 58            cp $58
 146+ 97AE 28 02            jr z,3F
 147+ 97B0 10 E3            djnz 1B
 148+ 97B2 ED 7B 21 8A  3 ld sp,(Stack)
 149+ 97B6 C9           	ret
 150+ 97B7
 151+ 97B7 ED 73 21 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97BB FD F9        	ld sp,iy
 153+ 97BD
 154+ 97BD              ; >>>
 155+ 97BD
 156+ 97BD 06 10            ld b,16
 157+ 97BF D1           1 pop de
 158+ 97C0 7B           	ld a,e
 159+ 97C1 AE           	xor (hl)
 160+ 97C2 77           	ld (hl),a
 161+ 97C3 24           	inc h
 162+ 97C4 7C               ld a,h
 163+ 97C5 E6 07            and 7
 164+ 97C7 20 0C            jr nz,2F
 165+ 97C9 7D               ld a,l
 166+ 97CA C6 20            add a,$20
 167+ 97CC 6F               ld l,a
 168+ 97CD 38 06            jr c,2F
 169+ 97CF 7C               ld a,h
 170+ 97D0 D6 08            sub 8
 171+ 97D2 67               ld h,a
 172+ 97D3 18 00            jr 2F
 173+ 97D5 7C           2 ld a,h
 174+ 97D6 FE 58            cp $58
 175+ 97D8 28 02            jr z,3F
 176+ 97DA 10 E3            djnz 1B
 177+ 97DC ED 7B 21 8A  3 ld sp,(Stack)
 178+ 97E0 C9           	ret
 179+ 97E1
 180+ 97E1              ; ---------------------------------------------------
 181+ 97E1
 182+ 97E1 ED 73 21 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97E5 FD F9        	ld sp,iy
 184+ 97E7 06 08            ld b,8
 185+ 97E9 D1           1 pop de
 186+ 97EA 7A           	ld a,d
 187+ 97EB AE           	xor (hl)
 188+ 97EC 77           	ld (hl),a
 189+ 97ED 23           	inc hl
 190+ 97EE D1           	pop de
 191+ 97EF 7B           	ld a,e
 192+ 97F0 AE           	xor (hl)
 193+ 97F1 77           	ld (hl),a
 194+ 97F2 2B           	dec hl
 195+ 97F3 24            	inc h
 196+ 97F4 7C               ld a,h
 197+ 97F5 E6 07            and 7
 198+ 97F7 20 0A            jr nz,2F
 199+ 97F9 7D               ld a,l
 200+ 97FA C6 20            add a,$20
 201+ 97FC 6F               ld l,a
 202+ 97FD 38 04            jr c,2F
 203+ 97FF 7C               ld a,h
 204+ 9800 D6 08            sub 8
 205+ 9802 67               ld h,a
 206+ 9803 7C           2 ld a,h
 207+ 9804 FE 58            cp $58
 208+ 9806 28 20            jr z,4F
 209+ 9808 D1               pop de
 210+ 9809 7B           	ld a,e
 211+ 980A AE           	xor (hl)
 212+ 980B 77           	ld (hl),a
 213+ 980C 23           	inc hl
 214+ 980D 7A           	ld a,d
 215+ 980E AE           	xor (hl)
 216+ 980F 77           	ld (hl),a
 217+ 9810 2B           	dec hl
 218+ 9811 24           	inc h
 219+ 9812 7C               ld a,h
 220+ 9813 E6 07            and 7
 221+ 9815 20 0A            jr nz,3F
 222+ 9817 7D               ld a,l
 223+ 9818 C6 20            add a,$20
 224+ 981A 6F               ld l,a
 225+ 981B 38 04            jr c,3F
 226+ 981D 7C               ld a,h
 227+ 981E D6 08            sub 8
 228+ 9820 67               ld h,a
 229+ 9821 7C           3 ld a,h
 230+ 9822 FE 58            cp $58
 231+ 9824 28 02            jr z,4F
 232+ 9826 10 C1            djnz 1B
 233+ 9828 ED 7B 21 8A  4 ld sp,(Stack)
 234+ 982C C9           	ret
 235+ 982D
 236+ 982D ED 73 21 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9831 FD F9        	ld sp,iy
 238+ 9833 06 08            ld b,8
 239+ 9835 D1           1 pop de
 240+ 9836 D1           	pop de
 241+ 9837 7B           	ld a,e
 242+ 9838 AE           	xor (hl)
 243+ 9839 77           	ld (hl),a
 244+ 983A 24            	inc h
 245+ 983B 7C               ld a,h
 246+ 983C E6 07            and 7
 247+ 983E 20 0A            jr nz,2F
 248+ 9840 7D               ld a,l
 249+ 9841 C6 20            add a,$20
 250+ 9843 6F               ld l,a
 251+ 9844 38 04            jr c,2F
 252+ 9846 7C               ld a,h
 253+ 9847 D6 08            sub 8
 254+ 9849 67               ld h,a
 255+ 984A 7C           2 ld a,h
 256+ 984B FE 58            cp $58
 257+ 984D 28 1B            jr z,4F
 258+ 984F D1               pop de
 259+ 9850 7A           	ld a,d
 260+ 9851 AE           	xor (hl)
 261+ 9852 77           	ld (hl),a
 262+ 9853 24           	inc h
 263+ 9854 7C               ld a,h
 264+ 9855 E6 07            and 7
 265+ 9857 20 0A            jr nz,3F
 266+ 9859 7D               ld a,l
 267+ 985A C6 20            add a,$20
 268+ 985C 6F               ld l,a
 269+ 985D 38 04            jr c,3F
 270+ 985F 7C               ld a,h
 271+ 9860 D6 08            sub 8
 272+ 9862 67               ld h,a
 273+ 9863 7C           3 ld a,h
 274+ 9864 FE 58            cp $58
 275+ 9866 28 02            jr z,4F
 276+ 9868 10 CB            djnz 1B
 277+ 986A ED 7B 21 8A  4 ld sp,(Stack)
 278+ 986E C9           	ret
 279+ 986F
 280+ 986F ED 73 21 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9873 FD F9        	ld sp,iy
 282+ 9875 06 08            ld b,8
 283+ 9877 D1           1 pop de
 284+ 9878 7B           	ld a,e
 285+ 9879 AE           	xor (hl)
 286+ 987A 77           	ld (hl),a
 287+ 987B 23           	inc hl
 288+ 987C 7A           	ld a,d
 289+ 987D AE           	xor (hl)
 290+ 987E 77           	ld (hl),a
 291+ 987F 2B           	dec hl
 292+ 9880 24             	inc h
 293+ 9881 7C               ld a,h
 294+ 9882 E6 07            and 7
 295+ 9884 20 0A            jr nz,2F
 296+ 9886 7D               ld a,l
 297+ 9887 C6 20            add a,$20
 298+ 9889 6F               ld l,a
 299+ 988A 38 04            jr c,2F
 300+ 988C 7C               ld a,h
 301+ 988D D6 08            sub 8
 302+ 988F 67               ld h,a
 303+ 9890 7C           2 ld a,h
 304+ 9891 FE 58            cp $58
 305+ 9893 28 21            jr z,4F
 306+ 9895 D1               pop de
 307+ 9896 7A           	ld a,d
 308+ 9897 AE           	xor (hl)
 309+ 9898 77           	ld (hl),a
 310+ 9899 23           	inc hl
 311+ 989A D1               pop de
 312+ 989B 7B           	ld a,e
 313+ 989C AE           	xor (hl)
 314+ 989D 77           	ld (hl),a
 315+ 989E 2B           	dec hl
 316+ 989F 24           	inc h
 317+ 98A0 7C               ld a,h
 318+ 98A1 E6 07            and 7
 319+ 98A3 20 0A            jr nz,3F
 320+ 98A5 7D               ld a,l
 321+ 98A6 C6 20            add a,$20
 322+ 98A8 6F               ld l,a
 323+ 98A9 38 04            jr c,3F
 324+ 98AB 7C               ld a,h
 325+ 98AC D6 08            sub 8
 326+ 98AE 67               ld h,a
 327+ 98AF 7C           3 ld a,h
 328+ 98B0 FE 58            cp $58
 329+ 98B2 28 02            jr z,4F
 330+ 98B4 10 C1            djnz 1B
 331+ 98B6 ED 7B 21 8A  4 ld sp,(Stack)
 332+ 98BA C9           	ret
 333+ 98BB
 334+ 98BB ED 73 21 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98BF FD F9        	ld sp,iy
 336+ 98C1 06 08            ld b,8
 337+ 98C3 D1           1 pop de
 338+ 98C4 7B           	ld a,e
 339+ 98C5 AE           	xor (hl)
 340+ 98C6 77           	ld (hl),a
 341+ 98C7 24            	inc h
 342+ 98C8 7C               ld a,h
 343+ 98C9 E6 07            and 7
 344+ 98CB 20 0A            jr nz,2F
 345+ 98CD 7D               ld a,l
 346+ 98CE C6 20            add a,$20
 347+ 98D0 6F               ld l,a
 348+ 98D1 38 04            jr c,2F
 349+ 98D3 7C               ld a,h
 350+ 98D4 D6 08            sub 8
 351+ 98D6 67               ld h,a
 352+ 98D7 7C           2 ld a,h
 353+ 98D8 FE 58            cp $58
 354+ 98DA 28 1C            jr z,4F
 355+ 98DC D1               pop de
 356+ 98DD 7A           	ld a,d
 357+ 98DE AE           	xor (hl)
 358+ 98DF 77           	ld (hl),a
 359+ 98E0 24           	inc h
 360+ 98E1 7C               ld a,h
 361+ 98E2 E6 07            and 7
 362+ 98E4 20 0A            jr nz,3F
 363+ 98E6 7D               ld a,l
 364+ 98E7 C6 20            add a,$20
 365+ 98E9 6F               ld l,a
 366+ 98EA 38 04            jr c,3F
 367+ 98EC 7C               ld a,h
 368+ 98ED D6 08            sub 8
 369+ 98EF 67               ld h,a
 370+ 98F0 7C           3 ld a,h
 371+ 98F1 FE 58            cp $58
 372+ 98F3 28 03            jr z,4F
 373+ 98F5 D1               pop de
 374+ 98F6 10 CB            djnz 1B
 375+ 98F8 ED 7B 21 8A  4 ld sp,(Stack)
 376+ 98FC C9           	ret
 377+ 98FD
 378+ 98FD              ; ---------------------------------------------------
 379+ 98FD              ;
 380+ 98FD              ;   27/02/23
 381+ 98FD              ;
 382+ 98FD              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98FD              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98FD              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98FD
 386+ 98FD ED 73 21 8A  Pinta_Disparo ld (Stack),sp
 387+ 9901 FD F9            ld sp,iy
 388+ 9903 06 03            ld b,3
 389+ 9905 D1           1 pop de
 390+ 9906 7B               ld a,e
 391+ 9907 AE               xor (hl)
 392+ 9908 77               ld (hl),a
 393+ 9909 23               inc hl
 394+ 990A 7A               ld a,d
 395+ 990B AE               xor (hl)
 396+ 990C 77               ld (hl),a
 397+ 990D 2B               dec hl
 398+ 990E
 399+ 990E 24               inc h
 400+ 990F 7C               ld a,h
 401+ 9910 E6 07            and 7
 402+ 9912 20 0A            jr nz,2F
 403+ 9914 7D               ld a,l
 404+ 9915 C6 20            add a,$20
 405+ 9917 6F               ld l,a
 406+ 9918 38 04            jr c,2F
 407+ 991A 7C               ld a,h
 408+ 991B D6 08            sub 8
 409+ 991D 67               ld h,a
 410+ 991E 7C           2 ld a,h
 411+ 991F FE 58            cp $58
 412+ 9921 28 02            jr z,3F
 413+ 9923
 414+ 9923 10 E0            djnz 1B
 415+ 9925 ED 7B 21 8A  3 ld sp,(Stack)
 416+ 9929 C9               ret
 417+ 992A
# file closed: Rutinas_de_impresion_sprites.asm
1312  992A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 992A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 992A              ;
   3+ 992A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 992A              ;
   5+ 992A              ; *****************************************************************************************************************************************************************************************
   6+ 992A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 992A
   8+ 992A 7C           calcula_tercio ld a,h
   9+ 992B E6 18        	and $18
  10+ 992D CB 2F        	sra a
  11+ 992F CB 2F        	sra a
  12+ 9931 CB 2F        	sra a
  13+ 9933 C9           	ret
  14+ 9934
# file closed: calcula_tercio.asm
1313  9934              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9934              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9934              ;
   3+ 9934              ;
   4+ 9934              ;	CLS.
   5+ 9934              ;
   6+ 9934              ;	Limpia la pantalla y define sus atributos.
   7+ 9934              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9934              ;
   9+ 9934              ;	COLORES: 0 ..... NEGRO
  10+ 9934              ;    		 1 ..... AZUL
  11+ 9934              ; 			 2 ..... ROJO
  12+ 9934              ;			 3 ..... MAGENTA
  13+ 9934              ; 			 4 ..... VERDE
  14+ 9934              ; 			 5 ..... CIAN
  15+ 9934              ;			 6 ..... AMARILLO
  16+ 9934              ; 			 7 ..... BLANCO
  17+ 9934              ;
  18+ 9934              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9934              ;
  20+ 9934              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9934
  22+ 9934
  23+ 9934 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9937 11 01 40     	LD DE,$4001
  25+ 993A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 993D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 993F ED B0        	LDIR
  28+ 9941 01 FF 02     	LD BC,767
  29+ 9944 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9945 ED B0        	LDIR
  31+ 9947 C9           	ret
  32+ 9948
# file closed: Cls.asm
1314  9948              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9948              ; ******************************************************************************************************************************************************************************************
   2+ 9948              ;
   3+ 9948              ;   20/05/23
   4+ 9948              ;
   5+ 9948              ;	Recompone_posicion_inicio
   6+ 9948              ;
   7+ 9948              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9948              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9948              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9948              ;	_ a una u otra rutina.
  11+ 9948
  12+ 9948              Recompone_posicion_inicio
  13+ 9948
  14+ 9948 2A DF 89     	ld hl,(Posicion_inicio)
  15+ 994B 7D           	ld a,l
  16+ 994C E6 1F        	and $1f
  17+ 994E 28 16        	jr z,1F
  18+ 9950
  19+ 9950 FE 1F        	cp $1f
  20+ 9952 28 0D        	jr z,3F
  21+ 9954
  22+ 9954 21 0E 8A     	ld hl,Ctrl_2
  23+ 9957 CB C6        	set 0,(hl)
  24+ 9959 2A D1 89     	ld hl,(Puntero_objeto)
  25+ 995C 22 11 8A     	ld (Repone_puntero_objeto),hl
  26+ 995F 18 08        	jr 2F
  27+ 9961
  28+ 9961 CD 02 9B     3 call Mov_left
  29+ 9964 18 03        	jr 2F
  30+ 9966
  31+ 9966 CD E4 99     1 call Mov_right
  32+ 9969 21 00 F0     2 ld hl,Sprite_vacio
  33+ 996C 22 D1 89     	ld (Puntero_objeto),hl
  34+ 996F C9           	ret
  35+ 9970
  36+ 9970              ; ******************************************************************************************************************************************************************************************
  37+ 9970              ;
  38+ 9970              ;   27/05/23
  39+ 9970              ;
  40+ 9970              ;	Mov_down
  41+ 9970              ;
  42+ 9970              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9970              ;
  44+ 9970              ;
  45+ 9970              Mov_down
  46+ 9970
  47+ 9970 CD D2 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9973              ;																	; _ repone (Puntero_objeto).
  49+ 9973 21 FB 89     	ld hl,Ctrl_0
  50+ 9976 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9978              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9978              ; 																	; _ en el caso de que no lo haya.
  53+ 9978 3A E5 89     	ld a,(Vel_down)
  54+ 997B 47           	ld b,a
  55+ 997C 2A CF 89         ld hl,(Posicion_actual)
  56+ 997F CD 2A 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9982 E6 02        	and 2
  58+ 9984 28 0F        	jr z,1F
  59+ 9986
  60+ 9986              ; Nos encontramos en el último tercio de pantalla.
  61+ 9986              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9986
  63+ 9986 7C           	ld a,h
  64+ 9987 FE 57        	cp $57
  65+ 9989 20 0A        	jr nz,1F
  66+ 998B
  67+ 998B 7D           	ld a,l
  68+ 998C C6 20        	add $20
  69+ 998E 30 05        	jr nc,1F
  70+ 9990
  71+ 9990              ; ------------------------------
  72+ 9990              ;	call Reaparece_arriba
  73+ 9990 CD 8F 9C     	call Reinicio
  74+ 9993              ; ------------------------------
  75+ 9993
  76+ 9993 18 08        	jr 3F
  77+ 9995 CD 5E 96     1 call NextScan
  78+ 9998 22 CF 89     	ld (Posicion_actual),hl
  79+ 999B 10 E2            djnz 2B
  80+ 999D CD B5 9C     3 call Genera_coordenadas
  81+ 99A0 C9           	ret
  82+ 99A1
  83+ 99A1              ; ******************************************************************************************************************************************************************************************
  84+ 99A1              ;
  85+ 99A1              ;   27/05/23
  86+ 99A1              ;
  87+ 99A1              ;	Mov_up
  88+ 99A1              ;
  89+ 99A1              ; 	Mueve el Sprite hacia arriba.
  90+ 99A1              ;
  91+ 99A1              ;
  92+ 99A1              Mov_up
  93+ 99A1
  94+ 99A1 CD D2 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99A4              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99A4 21 FB 89     	ld hl,Ctrl_0
  97+ 99A7 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99A9              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99A9              ; 																		; _ en el caso de que no lo haya.
 100+ 99A9 3A E4 89     	ld a,(Vel_up)
 101+ 99AC 47           	ld b,a
 102+ 99AD 2A CF 89     	ld hl,(Posicion_actual)
 103+ 99B0 CD 2A 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99B3 A7           	and a
 105+ 99B4 20 10        	jr nz,1F
 106+ 99B6
 107+ 99B6              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99B6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99B6
 110+ 99B6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99B7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99B9 20 0B            jr nz,1F
 113+ 99BB 7D               ld a,l
 114+ 99BC D6 20            sub $20
 115+ 99BE 30 06            jr nc,1F
 116+ 99C0 25               dec h
 117+ 99C1
 118+ 99C1              ; -----------------------------
 119+ 99C1 CD 70 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99C4              ;	call Reinicio
 121+ 99C4              ; -----------------------------
 122+ 99C4
 123+ 99C4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99C6 CD 6D 96     1 call PreviousScan
 125+ 99C9 22 CF 89     	ld (Posicion_actual),hl
 126+ 99CC 10 E2            djnz 3B
 127+ 99CE CD B5 9C     2 call Genera_coordenadas
 128+ 99D1 C9           	ret
 129+ 99D2
 130+ 99D2              ; -----------------------------
 131+ 99D2              ;
 132+ 99D2              ;	27/5/23
 133+ 99D2              ;
 134+ 99D2              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99D2              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99D2              ;
 137+ 99D2              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99D2              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99D2              ;
 140+ 99D2              ;	Modifica: A y (Puntero_objeto).
 141+ 99D2
 142+ 99D2 3A 0E 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99D5 CB 47        	bit 0,a
 144+ 99D7 C8           	ret z
 145+ 99D8 CB 87        	res 0,a
 146+ 99DA 32 0E 8A     	ld (Ctrl_2),a
 147+ 99DD 2A 11 8A     	ld hl,(Repone_puntero_objeto)
 148+ 99E0 22 D1 89     	ld (Puntero_objeto),hl
 149+ 99E3 C9           	ret
 150+ 99E4
 151+ 99E4              ; ******************************************************************************************************************************************************************************************
 152+ 99E4              ;
 153+ 99E4              ;	19/10/22
 154+ 99E4              ;
 155+ 99E4              ;	Mov_right.
 156+ 99E4              ;
 157+ 99E4              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99E4              ;
 159+ 99E4
 160+ 99E4 21 FB 89     Mov_right ld hl,Ctrl_0
 161+ 99E7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99E9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99E9              ; 																	; _ en el caso de que no lo haya.
 164+ 99E9 3A FB 89     	ld a,(Ctrl_0)
 165+ 99EC CB 77        	bit 6,a
 166+ 99EE 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99F0
 168+ 99F0 CD 1E 9C     	call Stop_Amadeus_right
 169+ 99F3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99F4 18 4D        	jr 8F
 171+ 99F6
 172+ 99F6 3A D3 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99F9 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99FB 20 46        	jr nz,8F
 175+ 99FD
 176+ 99FD 3A D5 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A00 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A01 28 40        	jr z,8F
 179+ 9A03
 180+ 9A03              ; ---------- ---------- ----------
 181+ 9A03              ;
 182+ 9A03              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A03
 184+ 9A03 3A E3 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A06 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A08 28 11        	jr z,1F
 187+ 9A0A 38 06        	jr c,6F
 188+ 9A0C FE 04        	cp 4
 189+ 9A0E 28 14        	jr z,7F
 190+ 9A10 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A12
 192+ 9A12              ; ---------- ---------- ----------
 193+ 9A12              ;
 194+ 9A12              ; Perfiles de velocidad
 195+ 9A12              ;
 196+ 9A12
 197+ 9A12 3A D5 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A15 FE FE        	cp $fe
 199+ 9A17 20 2A        	jr nz,8F
 200+ 9A19 18 10        	jr 3F
 201+ 9A1B 3A D5 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A1E FE FD        	cp $fd
 203+ 9A20 20 21        	jr nz,8F
 204+ 9A22 18 07        	jr 3F
 205+ 9A24 3A D5 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A27 FE FB        	cp $fb
 207+ 9A29 20 18        	jr nz,8F
 208+ 9A2B
 209+ 9A2B              ; ---------- ---------- ----------
 210+ 9A2B
 211+ 9A2B              3
 212+ 9A2B CD 5E 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A2E              ;	call Reinicio
 214+ 9A2E
 215+ 9A2E              ; ---------- ---------- ----------
 216+ 9A2E              ;
 217+ 9A2E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A2E
 219+ 9A2E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A30 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A31 CD 4A 9A     	call DESPLZ_DER
 222+ 9A34 C1           	pop bc
 223+ 9A35 10 F9        	djnz 5B
 224+ 9A37 2A CF 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A3A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A3B 22 CF 89     	ld (Posicion_actual),hl
 227+ 9A3E CD B5 9C     	call Genera_coordenadas
 228+ 9A41 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A43
 230+ 9A43              ; ---------- ---------- ----------
 231+ 9A43
 232+ 9A43 2A CF 89     8 ld hl,(Posicion_actual)
 233+ 9A46 CD 4A 9A     	call DESPLZ_DER
 234+ 9A49 C9           2 ret
 235+ 9A4A
 236+ 9A4A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A4A              ;
 238+ 9A4A              ;	22/9/22
 239+ 9A4A              ;
 240+ 9A4A
 241+ 9A4A CD 59 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A4D CD A5 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A50 CD CE 9A         call Ciclo_completo
 244+ 9A53 21 FB 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A56 CB FE        	set 7,(hl)
 246+ 9A58 C9           	ret
 247+ 9A59
 248+ 9A59              ; ******************************************************************************************************************************************************************************************
 249+ 9A59              ;	15/02/23
 250+ 9A59              ;
 251+ 9A59
 252+ 9A59 3A E3 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A5C 47           	ld b,a
 254+ 9A5D 2A DB 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A60 23           1 inc hl
 256+ 9A61 23           	inc hl
 257+ 9A62 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A64 22 DB 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A67 CD 4B 8D     	call Extrae_address
 260+ 9A6A 22 D1 89     	ld (Puntero_objeto),hl
 261+ 9A6D
 262+ 9A6D              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A6D
 264+ 9A6D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A6D              ; Cuántos movimientos hemos hecho ??
 266+ 9A6D              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A6D
 268+ 9A6D 2A D7 89     7 ld hl,(Indice_Sprite_der)
 269+ 9A70 EB           	ex de,hl
 270+ 9A71 A7           	and a
 271+ 9A72 ED 52        	sbc hl,de
 272+ 9A74 CB 3D        	srl l
 273+ 9A76 3E 08        6 ld a,8
 274+ 9A78 95           	sub l
 275+ 9A79 30 1E        	jr nc,3F
 276+ 9A7B
 277+ 9A7B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A7B              ; B="0".
 279+ 9A7B
 280+ 9A7B 04           4 inc b
 281+ 9A7C 3C           	inc a
 282+ 9A7D 20 FC        	jr nz,4B
 283+ 9A7F 78           	ld a,b
 284+ 9A80 08           	ex af,af
 285+ 9A81 2A D7 89     	ld hl,(Indice_Sprite_der)
 286+ 9A84 23           5 inc hl
 287+ 9A85 23           	inc hl
 288+ 9A86 10 FC        	djnz 5B
 289+ 9A88 22 DB 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9A8B CD 4B 8D     	call Extrae_address
 291+ 9A8E 22 D1 89     	ld (Puntero_objeto),hl
 292+ 9A91
 293+ 9A91              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A91              ; _(Posicion_actual).
 295+ 9A91
 296+ 9A91 21 CF 89     	ld hl,Posicion_actual
 297+ 9A94 34           	inc (hl)
 298+ 9A95 08               ex af,af
 299+ 9A96 6F           	ld l,a
 300+ 9A97 18 DD        	jr 6B
 301+ 9A99
 302+ 9A99              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A99
 304+ 9A99 47           3 ld b,a
 305+ 9A9A 2A D9 89     	ld hl,(Indice_Sprite_izq)
 306+ 9A9D 23           2 inc hl
 307+ 9A9E 23           	inc hl
 308+ 9A9F 10 FC        	djnz 2B
 309+ 9AA1 22 DD 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AA4 C9           8 ret
 311+ 9AA5
 312+ 9AA5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AA5              ;
 314+ 9AA5              ;	24/7/22
 315+ 9AA5              ;
 316+ 9AA5              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AA5              ;
 318+ 9AA5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AA5              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AA5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AA5
 322+ 9AA5 3A D5 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AA8 A7           	and a
 324+ 9AA9 20 1F        	jr nz,1F
 325+ 9AAB D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AAD 32 D5 89         ld (CTRL_DESPLZ),a
 327+ 9AB0
 328+ 9AB0 21 CE 89     	ld hl,Columns
 329+ 9AB3 34           	inc (hl)
 330+ 9AB4 3A E1 89     	ld a,(Cuad_objeto)
 331+ 9AB7 E6 01        	and 1
 332+ 9AB9 28 0F        	jr z,1F
 333+ 9ABB 2A CF 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9ABE 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9ABF 22 CF 89     	ld (Posicion_actual),hl
 336+ 9AC2 CD B5 9C     	call Genera_coordenadas
 337+ 9AC5 CD 2A 9C     	call Inc_CTRL_DESPLZ
 338+ 9AC8 18 03        	jr 2F
 339+ 9ACA CD 2A 9C     1 call Inc_CTRL_DESPLZ
 340+ 9ACD C9           2 ret
 341+ 9ACE
 342+ 9ACE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9ACE              ;
 344+ 9ACE              ;	24/7/22
 345+ 9ACE              ;
 346+ 9ACE              ;	Ciclo_completo.
 347+ 9ACE              ;
 348+ 9ACE              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9ACE              ;
 350+ 9ACE              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9ACE              ; 	Decrementamos (Columns).
 352+ 9ACE              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9ACE              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9ACE
 355+ 9ACE
 356+ 9ACE 3A D5 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AD1 FE FF        	cp $ff
 358+ 9AD3 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AD5 E6 F0        	and $f0
 360+ 9AD7 20 28        	jr nz,3F
 361+ 9AD9
 362+ 9AD9              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AD9
 364+ 9AD9 3A D5 89     	ld a,(CTRL_DESPLZ)
 365+ 9ADC 47           	ld b,a
 366+ 9ADD 3E F8        	ld a,$f8
 367+ 9ADF 80           	add b
 368+ 9AE0 32 D5 89     	ld (CTRL_DESPLZ),a
 369+ 9AE3 18 1C        	jr 3F
 370+ 9AE5 21 CE 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AE8 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AE9 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AEA 32 D5 89     	ld (CTRL_DESPLZ),a
 374+ 9AED 3A E1 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AF0 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AF2 20 0A        	jr nz,2F
 377+ 9AF4 2A CF 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AF7 23           	inc hl
 379+ 9AF8 22 CF 89     	ld (Posicion_actual),hl
 380+ 9AFB CD B5 9C     	call Genera_coordenadas
 381+ 9AFE
 382+ 9AFE              ; Inicia el puntero de Sprite.
 383+ 9AFE
 384+ 9AFE CD 62 8D     2 call Inicia_puntero_objeto_der
 385+ 9B01 C9           3 ret
 386+ 9B02
 387+ 9B02              ; ******************************************************************************************************************************************************************************************
 388+ 9B02              ;
 389+ 9B02              ;	15/02/23
 390+ 9B02              ;
 391+ 9B02              ;	Mov_left.
 392+ 9B02              ;
 393+ 9B02              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B02              ;
 395+ 9B02 21 FB 89     Mov_left ld hl,Ctrl_0
 396+ 9B05 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B07              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B07              ; 																	; _ en el caso de que no lo haya.
 399+ 9B07 3A FB 89     	ld a,(Ctrl_0)
 400+ 9B0A CB 77        	bit 6,a
 401+ 9B0C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B0E
 403+ 9B0E CD 24 9C     	call Stop_Amadeus_left
 404+ 9B11 C8           	ret z
 405+ 9B12 20 4A        	jr nz,8F
 406+ 9B14
 407+ 9B14 3A D3 89     11 ld a,(Coordenada_X)
 408+ 9B17 A7           	and a
 409+ 9B18 20 44        	jr nz,8F
 410+ 9B1A
 411+ 9B1A 3A D5 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B1D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B1E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B20
 415+ 9B20              ; ---------- ---------- ----------
 416+ 9B20
 417+ 9B20 3A E2 89     	ld a,(Vel_left)
 418+ 9B23 FE 02        	cp 2
 419+ 9B25 28 0F        	jr z,1F
 420+ 9B27 38 04        	jr c,6F
 421+ 9B29 FE 04        	cp 4
 422+ 9B2B 28 12        	jr z,7F
 423+ 9B2D
 424+ 9B2D              ; ---------- ---------- ----------
 425+ 9B2D
 426+ 9B2D 3A D5 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B30 FE F8        	cp $f8
 428+ 9B32 20 2A        	jr nz,8F
 429+ 9B34 18 10        	jr 4F
 430+ 9B36 3A D5 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B39 FE F9        	cp $f9
 432+ 9B3B 20 21        	jr nz,8F
 433+ 9B3D 18 07        	jr 4F
 434+ 9B3F 3A D5 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B42 FE FB        	cp $fb
 436+ 9B44 20 18        	jr nz,8F
 437+ 9B46
 438+ 9B46              ; ---------- ---------- ----------
 439+ 9B46
 440+ 9B46              4
 441+ 9B46 CD 4C 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B49              ;	call Reinicio
 443+ 9B49
 444+ 9B49              ; ---------- ---------- ----------
 445+ 9B49
 446+ 9B49 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B4B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B4C
 449+ 9B4C              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B4C              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B4C
 452+ 9B4C CD 65 9B     	call DESPLZ_IZQ
 453+ 9B4F C1           	pop bc
 454+ 9B50 10 F9        	djnz 5B
 455+ 9B52 2A CF 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B55 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B56 22 CF 89     	ld (Posicion_actual),hl
 458+ 9B59 CD B5 9C     	call Genera_coordenadas
 459+ 9B5C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B5E
 461+ 9B5E              ; ---------- ---------- ----------
 462+ 9B5E
 463+ 9B5E              ; Movemos, no hay recolocación.
 464+ 9B5E
 465+ 9B5E 2A CF 89     8 ld hl,(Posicion_actual)
 466+ 9B61 CD 65 9B     	call DESPLZ_IZQ
 467+ 9B64 C9           2 ret
 468+ 9B65
 469+ 9B65              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B65              ;
 471+ 9B65              ;	22/9/22
 472+ 9B65
 473+ 9B65              DESPLZ_IZQ
 474+ 9B65
 475+ 9B65 CD 74 9B     	call Desplaza_izquierda
 476+ 9B68 CD C0 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B6B CD E8 9B     	call Ciclo_completo_2
 478+ 9B6E 21 FB 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B71 CB BE        	res 7,(hl)
 480+ 9B73 C9           	ret
 481+ 9B74
 482+ 9B74              Desplaza_izquierda
 483+ 9B74
 484+ 9B74 3A E2 89     	ld a,(Vel_left)
 485+ 9B77 47           	ld b,a
 486+ 9B78 2A DD 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9B7B 23           1 inc hl
 488+ 9B7C 23           	inc hl
 489+ 9B7D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9B7F 22 DD 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9B82 CD 4B 8D     	call Extrae_address
 492+ 9B85 22 D1 89     	ld (Puntero_objeto),hl
 493+ 9B88
 494+ 9B88              ; Modifica (Puntero_DESPLZ_der).
 495+ 9B88
 496+ 9B88              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9B88              ; Cuántos movimientos hemos hecho ??
 498+ 9B88              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9B88
 500+ 9B88 2A D9 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9B8B EB           	ex de,hl
 502+ 9B8C A7           	and a
 503+ 9B8D ED 52        	sbc hl,de
 504+ 9B8F CB 3D        	srl l
 505+ 9B91 3E 08        6 ld a,8
 506+ 9B93 95           	sub l
 507+ 9B94 30 1E        	jr nc,3F
 508+ 9B96
 509+ 9B96              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9B96              ; B="0".
 511+ 9B96
 512+ 9B96 04           4 inc b
 513+ 9B97 3C           	inc a
 514+ 9B98 20 FC        	jr nz,4B
 515+ 9B9A 78           	ld a,b
 516+ 9B9B 08           	ex af,af
 517+ 9B9C 2A D9 89     	ld hl,(Indice_Sprite_izq)
 518+ 9B9F 23           5 inc hl
 519+ 9BA0 23           	inc hl
 520+ 9BA1 10 FC        	djnz 5B
 521+ 9BA3 22 DD 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9BA6 CD 4B 8D     	call Extrae_address
 523+ 9BA9 22 D1 89     	ld (Puntero_objeto),hl
 524+ 9BAC
 525+ 9BAC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9BAC              ; _(Posicion_actual).
 527+ 9BAC
 528+ 9BAC 21 CF 89     	ld hl,Posicion_actual
 529+ 9BAF 35           	dec (hl)
 530+ 9BB0 08           	ex af,af
 531+ 9BB1 6F           	ld l,a
 532+ 9BB2 18 DD        	jr 6B
 533+ 9BB4
 534+ 9BB4              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9BB4
 536+ 9BB4 47           3 ld b,a
 537+ 9BB5 2A D7 89     	ld hl,(Indice_Sprite_der)
 538+ 9BB8 23           2 inc hl
 539+ 9BB9 23           	inc hl
 540+ 9BBA 10 FC        	djnz 2B
 541+ 9BBC 22 DB 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9BBF C9           8 ret
 543+ 9BC0
 544+ 9BC0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9BC0              ;
 546+ 9BC0              ;	modifica_parametros_1er_DESPLZ
 547+ 9BC0              ;
 548+ 9BC0              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9BC0              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9BC0              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9BC0
 552+ 9BC0 3A D5 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9BC3 A7           	and a
 554+ 9BC4 20 1E        	jr nz,1F
 555+ 9BC6 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9BC7 32 D5 89         ld (CTRL_DESPLZ),a
 557+ 9BCA 21 CE 89     	ld hl,Columns
 558+ 9BCD 34           	inc (hl)
 559+ 9BCE 3A E1 89     	ld a,(Cuad_objeto)
 560+ 9BD1 E6 01        	and 1
 561+ 9BD3 20 0F        	jr nz,1F
 562+ 9BD5 2A CF 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9BD8 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9BD9 22 CF 89     	ld (Posicion_actual),hl
 565+ 9BDC CD B5 9C     	call Genera_coordenadas
 566+ 9BDF CD 3B 9C     	call Dec_CTRL_DESPLZ
 567+ 9BE2 18 03        	jr 2F
 568+ 9BE4 CD 3B 9C     1 call Dec_CTRL_DESPLZ
 569+ 9BE7 C9           2 ret
 570+ 9BE8
 571+ 9BE8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9BE8
 573+ 9BE8 3A D5 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9BEB FE F7        	cp $f7
 575+ 9BED 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9BEF 30 2C        	jr nc,3F
 577+ 9BF1
 578+ 9BF1              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9BF1
 580+ 9BF1 06 00        	ld b,0
 581+ 9BF3 04           4 inc b
 582+ 9BF4 3C           	inc a
 583+ 9BF5 FE F7        	cp $f7
 584+ 9BF7 20 FA        	jr nz,4B
 585+ 9BF9 3E FF        	ld a,$ff
 586+ 9BFB 90           	sub b
 587+ 9BFC 32 D5 89     	ld (CTRL_DESPLZ),a
 588+ 9BFF 18 1C        	jr 3F
 589+ 9C01
 590+ 9C01              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C01
 592+ 9C01 21 CE 89     1 ld hl,Columns
 593+ 9C04 35           	dec (hl)
 594+ 9C05 AF           	xor a
 595+ 9C06 32 D5 89     	ld (CTRL_DESPLZ),a
 596+ 9C09 3A E1 89     	ld a,(Cuad_objeto)
 597+ 9C0C E6 01        	and 1
 598+ 9C0E 28 0A        	jr z,2F
 599+ 9C10 2A CF 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C13 2B           	dec hl
 601+ 9C14 22 CF 89     	ld (Posicion_actual),hl
 602+ 9C17 CD B5 9C     	call Genera_coordenadas
 603+ 9C1A
 604+ 9C1A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C1A
 606+ 9C1A CD 75 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C1D C9           3 ret
 608+ 9C1E
 609+ 9C1E              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C1E              ;
 611+ 9C1E              ;	19/10/22
 612+ 9C1E              ;
 613+ 9C1E              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C1E              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C1E
 616+ 9C1E 3A D3 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C21 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C23 C9           	ret
 619+ 9C24
 620+ 9C24              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C24              ;
 622+ 9C24              ;	19/10/22
 623+ 9C24              ;
 624+ 9C24              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C24              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C24
 627+ 9C24 3A D3 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C27 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C29 C9           	ret
 630+ 9C2A
 631+ 9C2A              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C2A              ;
 633+ 9C2A              ;	24/7/22
 634+ 9C2A              ;
 635+ 9C2A              ;	Inc_CTRL_DESPLZ
 636+ 9C2A              ;
 637+ 9C2A              ;
 638+ 9C2A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C2A
 640+ 9C2A 21 D5 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C2D 3A E3 89     	ld a,(Vel_right)
 642+ 9C30 A7           	and a
 643+ 9C31 28 06        	jr z,1F
 644+ 9C33 47           	ld b,a
 645+ 9C34 34           3 inc (hl)
 646+ 9C35 10 FD        	djnz 3B
 647+ 9C37 18 01        	jr 2F
 648+ 9C39 34           1 inc (hl)
 649+ 9C3A C9           2 ret
 650+ 9C3B
 651+ 9C3B              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C3B              ;
 653+ 9C3B              ;	5/2/23
 654+ 9C3B              ;
 655+ 9C3B              ;	Dec_CTRL_DESPLZ
 656+ 9C3B              ;
 657+ 9C3B              ;
 658+ 9C3B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C3B
 660+ 9C3B 21 D5 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C3E 3A E2 89     	ld a,(Vel_left)
 662+ 9C41 A7           	and a
 663+ 9C42 28 06        	jr z,1F
 664+ 9C44 47           	ld b,a
 665+ 9C45 35           3 dec (hl)
 666+ 9C46 10 FD        	djnz 3B
 667+ 9C48 18 01        	jr 2F
 668+ 9C4A 35           1 dec (hl)
 669+ 9C4B C9           2 ret
 670+ 9C4C
 671+ 9C4C              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C4C
 673+ 9C4C 2A CF 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C4F 01 1F 00     	ld bc,31
 675+ 9C52 A7           	and a
 676+ 9C53 ED 4A        	adc hl,bc
 677+ 9C55 22 CF 89     	ld (Posicion_actual),hl
 678+ 9C58 21 FB 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C5B CB C6        	set 0,(hl)
 680+ 9C5D C9           	ret
 681+ 9C5E
 682+ 9C5E              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C5E
 684+ 9C5E 2A CF 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C61 01 1F 00     	ld bc,31
 686+ 9C64 A7           	and a
 687+ 9C65 ED 42        	sbc hl,bc
 688+ 9C67 22 CF 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9C6A 21 FB 89     	ld hl,Ctrl_0
 690+ 9C6D CB CE        	set 1,(hl)
 691+ 9C6F C9           	ret
 692+ 9C70
 693+ 9C70              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9C70
 695+ 9C70 24           Reaparece_abajo inc h
 696+ 9C71 01 E0 17     	ld bc,$17e0
 697+ 9C74 A7           	and a
 698+ 9C75 ED 4A        	adc hl,bc
 699+ 9C77 22 CF 89     	ld (Posicion_actual),hl
 700+ 9C7A 21 FB 89     	ld hl,Ctrl_0
 701+ 9C7D CB D6        	set 2,(hl)
 702+ 9C7F C9           	ret
 703+ 9C80
 704+ 9C80              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9C80
 706+ 9C80 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9C83 A7           	and a
 708+ 9C84 ED 42        	sbc hl,bc
 709+ 9C86 22 CF 89     	ld (Posicion_actual),hl
 710+ 9C89 21 FB 89     	ld hl,Ctrl_0
 711+ 9C8C CB DE        	set 3,(hl)
 712+ 9C8E C9           	ret
 713+ 9C8F
 714+ 9C8F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9C8F              ;
 716+ 9C8F              ;	15/07/23
 717+ 9C8F
 718+ 9C8F              Reinicio
 719+ 9C8F
 720+ 9C8F              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9C8F
 722+ 9C8F AF           	xor a
 723+ 9C90 21 02 8A     	ld hl,Puntero_indice_mov_bucle
 724+ 9C93 CD B1 9C     	call Limpia_contenido_hl
 725+ 9C96
 726+ 9C96 21 CF 89     	ld hl,Posicion_actual
 727+ 9C99 CD B1 9C     	call Limpia_contenido_hl
 728+ 9C9C
 729+ 9C9C CD D2 9F     	call Inicializa_Puntero_indice_mov
 730+ 9C9F CD 5C 9F     	call Inicia_Puntero_mov
 731+ 9CA2
 732+ 9CA2 21 04 8A     	ld hl,Incrementa_puntero
 733+ 9CA5 06 05        	ld b,5
 734+ 9CA7 77           1 ld (hl),a
 735+ 9CA8 23           	inc hl
 736+ 9CA9 10 FC        	djnz 1B
 737+ 9CAB
 738+ 9CAB 21 0E 8A     	ld hl,Ctrl_2
 739+ 9CAE CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9CB0
 741+ 9CB0 C9           	ret
 742+ 9CB1
 743+ 9CB1 77           Limpia_contenido_hl	ld (hl),a
 744+ 9CB2 23           	inc hl
 745+ 9CB3 77           	ld (hl),a
 746+ 9CB4 C9           	ret
 747+ 9CB5
 748+ 9CB5
# file closed: Direcciones.asm
1315  9CB5              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CB5              ; ------------------------------------------------------------------------
   2+ 9CB5              ;
   3+ 9CB5              ;	02/04/23
   4+ 9CB5              ;
   5+ 9CB5              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CB5              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CB5              ;
   8+ 9CB5              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CB5              ;
  10+ 9CB5              ;	Modifica: A,BC y DE.
  11+ 9CB5
  12+ 9CB5 C5           Genera_coordenadas push bc
  13+ 9CB6 E5           	push hl
  14+ 9CB7 D5           	push de
  15+ 9CB8
  16+ 9CB8 2A CF 89     	ld hl,(Posicion_actual)
  17+ 9CBB
  18+ 9CBB 7D           	ld a,l
  19+ 9CBC E6 1F        	and $1f
  20+ 9CBE 32 D3 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CC1
  22+ 9CC1 CD 2A 99     	call calcula_tercio
  23+ 9CC4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CC5
  25+ 9CC5 1E 00        	ld e,0
  26+ 9CC7 7D           	ld a,l
  27+ 9CC8 E6 E0        	and $e0
  28+ 9CCA 28 01        	jr z,1F
  29+ 9CCC 04           	inc b
  30+ 9CCD
  31+ 9CCD 04           1 inc b
  32+ 9CCE 05           	dec b
  33+ 9CCF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CD1              ;														; _ , salimos.
  35+ 9CD1 1C           3 inc e
  36+ 9CD2 D6 20        	sub 32
  37+ 9CD4 20 FB        	jr nz,3B
  38+ 9CD6 10 F5        	djnz 1B
  39+ 9CD8
  40+ 9CD8 7B           2 ld a,e
  41+ 9CD9 32 D4 89     	ld (Coordenada_y),a
  42+ 9CDC
  43+ 9CDC D1           	pop de
  44+ 9CDD E1           	pop hl
  45+ 9CDE C1           	pop bc
  46+ 9CDF
  47+ 9CDF C9           	ret
  48+ 9CE0
  49+ 9CE0              ; ------------------------------------------------------------------------
  50+ 9CE0              ;	28/05/23
  51+ 9CE0              ;
  52+ 9CE0              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CE0              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CE0              ;
  55+ 9CE0              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CE0              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CE0              ;
  58+ 9CE0              ;		DE="$120d"
  59+ 9CE0              ;
  60+ 9CE0              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CE0              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CE0              ;
  63+ 9CE0              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CE0
  65+ 9CE0              ;	Modifica: A,BC y DE.
  66+ 9CE0
  67+ 9CE0
  68+ 9CE0              Genera_coordenadas_disparo
  69+ 9CE0
  70+ 9CE0              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CE0
  72+ 9CE0 7D           	ld a,l
  73+ 9CE1 E6 1F        	and $1f
  74+ 9CE3 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CE4 CD 2A 99     	call calcula_tercio
  76+ 9CE7 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CE8 1E 00        	ld e,0
  78+ 9CEA 7D           	ld a,l
  79+ 9CEB E6 E0        	and $e0
  80+ 9CED 28 01        	jr z,1F
  81+ 9CEF 04           	inc b
  82+ 9CF0 1C           1 inc e
  83+ 9CF1 D6 20        	sub 32
  84+ 9CF3 20 FB        	jr nz,1B
  85+ 9CF5 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CF7 C9           	ret
  87+ 9CF8
# file closed: Genera_coordenadas.asm
1316  9CF8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CF8
   2+ 9CF8
   3+ 9CF8              ;   07/07/23
   4+ 9CF8              ;
   5+ 9CF8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CF8              ;
   7+ 9CF8              ;   Codificación:
   8+ 9CF8              ;
   9+ 9CF8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CF8              ;
  11+ 9CF8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CF8              ;
  13+ 9CF8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CF8              ;
  15+ 9CF8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CF8              ;
  17+ 9CF8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CF8              ;                               ..... %01000010 Vel_up 4
  19+ 9CF8              ;                                               Vel_down 2
  20+ 9CF8              ;                               ..... $42
  21+ 9CF8              ;
  22+ 9CF8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CF8              ;
  24+ 9CF8              ;                               ..... %01000010 Vel_left 4
  25+ 9CF8              ;                                               Vel_right 2
  26+ 9CF8              ;                               ..... $42
  27+ 9CF8              ;
  28+ 9CF8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CF8              ;
  30+ 9CF8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CF8              ;
  32+ 9CF8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CF8              ;
  34+ 9CF8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CF8              ;                                     $53
  36+ 9CF8              ;
  37+ 9CF8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CF8              ;
  39+ 9CF8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CF8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CF8              ;
  42+ 9CF8              ;                       Arriba ..... $81
  43+ 9CF8              ;                       Arriba - izquierda ..... $a1
  44+ 9CF8              ;                       Arriba - derecha ..... $91
  45+ 9CF8              ;
  46+ 9CF8              ;                       Abajo ..... $41
  47+ 9CF8              ;                       Abajo - izquierda ..... $61
  48+ 9CF8              ;                       Abajo - derecha ..... $51
  49+ 9CF8              ;
  50+ 9CF8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CF8              ;
  52+ 9CF8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CF8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CF8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CF8              ;
  56+ 9CF8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CF8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CF8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CF8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CF8              ;
  61+ 9CF8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CF8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CF8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CF8              ;
  65+ 9CF8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CF8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CF8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CF8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CF8
  70+ 9CF8              ; ----- ----- ----- ----- -----
  71+ 9CF8
  72+ 9CF8 24 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CFA 2C 9D            defw F_1
  74+ 9CFC 36 9D            defw F_2
  75+ 9CFE 40 9D            defw Codo_abajo_derecha
  76+ 9D00 74 9D            defw Derecha_y_subiendo
  77+ 9D02 7E 9D            defw Derecha_y_subiendo_1
  78+ 9D04 88 9D            defw F_3
  79+ 9D06 92 9D            defw F_4
  80+ 9D08 9C 9D            defw Derecha_y_bajando
  81+ 9D0A A6 9D            defw Derecha_y_bajando_1
  82+ 9D0C B0 9D            defw Derecha_y_bajando_2
  83+ 9D0E BA 9D            defw Codo_derecha_abajo
  84+ 9D10 EA 9D            defw Codo_abajo_izq.
  85+ 9D12 1E 9E            defw Izquierda_y_subiendo
  86+ 9D14 28 9E            defw Izquierda_y_subiendo_1
  87+ 9D16 32 9E            defw F_5
  88+ 9D18 3C 9E            defw F_6
  89+ 9D1A 46 9E            defw Izquierda_y_bajando
  90+ 9D1C 50 9E            defw Izquierda_y_bajando_1
  91+ 9D1E 5A 9E            defw Izquierda_y_bajando_2
  92+ 9D20 64 9E            defw Codo_izquierda_abajo
  93+ 9D22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D24
  95+ 9D24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D2C
  98+ 9D2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D34 08 00
 100+ 9D36 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D3E 0F FE
 102+ 9D40
 103+ 9D40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D74
 117+ 9D74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D7C 06 00
 119+ 9D7E
 120+ 9D7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D86 02 00
 122+ 9D88
 123+ 9D88 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D8C 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D90 04 00
 125+ 9D92 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D96 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D9A 08 00
 127+ 9D9C
 128+ 9D9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DA0 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DA4 02 00
 130+ 9DA6
 131+ 9DA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DAA 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DAE 06 00
 133+ 9DB0
 134+ 9DB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DB4 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DB8 06 00
 136+ 9DBA
 137+ 9DBA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DBA
 139+ 9DBA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DBE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DCA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DCE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DDA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DDE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DEA
 152+ 9DEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9DFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E1E
 166+ 9E1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E26 06 00
 168+ 9E28
 169+ 9E28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E30 02 00
 171+ 9E32
 172+ 9E32 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E36 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E3A 04 00
 174+ 9E3C 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E40 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E44 08 00
 176+ 9E46
 177+ 9E46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E4A 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E4E 02 00
 179+ 9E50
 180+ 9E50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E54 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E58 06 00
 182+ 9E5A
 183+ 9E5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E5E 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E62 06 00
 185+ 9E64
 186+ 9E64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E94
 199+ 9E94              ; ----- ----- ----- ----- -----
 200+ 9E94              ;
 201+ 9E94              ;   27/06/23
 202+ 9E94
 203+ 9E94              Movimiento
 204+ 9E94
 205+ 9E94              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E94
 207+ 9E94              ;    ld hl,(Posicion_actual)
 208+ 9E94
 209+ 9E94 3A 0E 8A         ld a,(Ctrl_2)
 210+ 9E97 CB 57            bit 2,a
 211+ 9E99 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E9B
 213+ 9E9B 2A 00 8A         ld hl,(Puntero_mov)
 214+ 9E9E 7E               ld a,(hl)
 215+ 9E9F
 216+ 9E9F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E9F
 218+ 9E9F              Inicia_desplazamiento.
 219+ 9E9F
 220+ 9E9F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E9F
 222+ 9E9F CD 93 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EA2
 224+ 9EA2              ; Iniciamos (Repetimos_mov).
 225+ 9EA2
 226+ 9EA2 7E               ld a,(hl)
 227+ 9EA3 E6 0F            and $0f
 228+ 9EA5 32 06 8A         ld (Repetimos_desplazamiento),a
 229+ 9EA8 32 07 8A         ld (Repetimos_desplazamiento_backup),a
 230+ 9EAB
 231+ 9EAB              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EAB
 233+ 9EAB 23               inc hl
 234+ 9EAC 7E               ld a,(hl)
 235+ 9EAD 32 09 8A         ld (Cola_de_desplazamiento),a
 236+ 9EB0 2B               dec hl
 237+ 9EB1
 238+ 9EB1 21 0E 8A         ld hl,Ctrl_2
 239+ 9EB4 CB D6            set 2,(hl)
 240+ 9EB6
 241+ 9EB6              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EB6              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EB6
 244+ 9EB6              Desplazamiento_iniciado
 245+ 9EB6
 246+ 9EB6 CD 67 9F         call Aplica_desplazamiento
 247+ 9EB9
 248+ 9EB9 3A 0E 8A         ld a,(Ctrl_2)
 249+ 9EBC CB 67            bit 4,a
 250+ 9EBE C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EBF
 252+ 9EBF 21 06 8A     3 ld hl,Repetimos_desplazamiento
 253+ 9EC2 35               dec (hl)
 254+ 9EC3 C0               ret nz
 255+ 9EC4
 256+ 9EC4              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EC4              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EC4              ; Analiza (Cola_de_desplazamiento).
 259+ 9EC4
 260+ 9EC4 3A 09 8A     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EC7 A7               and a
 262+ 9EC8 CC BC 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9ECB 28 30            jr z,Reinicia_el_movimiento
 264+ 9ECD
 265+ 9ECD FE FF            cp $ff
 266+ 9ECF 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9ED1
 268+ 9ED1 FE FE            cp $fe
 269+ 9ED3 CC 40 9F         call z,Fijamos_bucle
 270+ 9ED6 28 25            jr z,Reinicia_el_movimiento
 271+ 9ED8
 272+ 9ED8 FE FD            cp $fd
 273+ 9EDA 20 11            jr nz,1F
 274+ 9EDC
 275+ 9EDC              ; ---
 276+ 9EDC              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EDC
 278+ 9EDC 3A 0E 8A         ld a,(Ctrl_2)
 279+ 9EDF CB 5F            bit 3,a
 280+ 9EE1 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EE3
 282+ 9EE3              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EE3
 284+ 9EE3 21 0E 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EE6 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EE8
 287+ 9EE8 CD 51 9F         call Inicia_Repetimos_movimiento
 288+ 9EEB 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EED              ; ---
 290+ 9EED
 291+ 9EED FE 01        1 cp 1
 292+ 9EEF CA 2A 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9EF2
 294+ 9EF2 3D               dec a
 295+ 9EF3 32 09 8A         ld (Cola_de_desplazamiento),a
 296+ 9EF6
 297+ 9EF6 3A 07 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9EF9 32 06 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9EFC              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9EFC C9               ret
 301+ 9EFD
 302+ 9EFD              Reinicia_el_movimiento
 303+ 9EFD
 304+ 9EFD 3A 0E 8A         ld a,(Ctrl_2)
 305+ 9F00 CB 5F            bit 3,a
 306+ 9F02 28 1B            jr z,2F
 307+ 9F04
 308+ 9F04              ; (Cola_de_desplazamiento)="254".
 309+ 9F04
 310+ 9F04 21 08 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F07 35               dec (hl)
 312+ 9F08 20 15            jr nz,2F
 313+ 9F0A
 314+ 9F0A              ; Fin de las repeticiones del último movimiento.
 315+ 9F0A
 316+ 9F0A 21 0E 8A         ld hl,Ctrl_2
 317+ 9F0D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F0F
 319+ 9F0F 2A 00 8A         ld hl,(Puntero_mov)
 320+ 9F12 23               inc hl
 321+ 9F13 23               inc hl
 322+ 9F14 23               inc hl
 323+ 9F15 22 00 8A         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F18              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F18 7E               ld a,(hl)
 326+ 9F19 32 09 8A         ld (Cola_de_desplazamiento),a
 327+ 9F1C
 328+ 9F1C C3 C4 9E         jp Cola
 329+ 9F1F
 330+ 9F1F
 331+ 9F1F CD 5C 9F     2 call Inicia_Puntero_mov
 332+ 9F22
 333+ 9F22 21 0E 8A         ld hl,Ctrl_2
 334+ 9F25 CB 96            res 2,(hl)
 335+ 9F27
 336+ 9F27 C3 94 9E         jp Movimiento
 337+ 9F2A
 338+ 9F2A              Siguiente_desplazamiento
 339+ 9F2A
 340+ 9F2A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F2A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F2A
 343+ 9F2A 21 0E 8A         ld hl,Ctrl_2
 344+ 9F2D CB 96            res 2,(hl)
 345+ 9F2F
 346+ 9F2F 2A 00 8A         ld hl,(Puntero_mov)
 347+ 9F32 23               inc hl
 348+ 9F33 23               inc hl
 349+ 9F34 22 00 8A         ld (Puntero_mov),hl
 350+ 9F37
 351+ 9F37 7E               ld a,(hl)
 352+ 9F38 A7               and a
 353+ 9F39 CC BC 9F         call z,Incrementa_Puntero_indice_mov
 354+ 9F3C CA FD 9E         jp z,Reinicia_el_movimiento
 355+ 9F3F
 356+ 9F3F C9               ret
 357+ 9F40              ; Subrutinas -----------------------------------------
 358+ 9F40              ; ---------- --------- --------- ---------- ----------
 359+ 9F40              ;
 360+ 9F40              ;   24/07/23
 361+ 9F40              ;
 362+ 9F40              ;   Fijamos_bucle
 363+ 9F40              ;
 364+ 9F40              ;
 365+ 9F40
 366+ 9F40              Fijamos_bucle
 367+ 9F40
 368+ 9F40 3A 04 8A         ld a,(Incrementa_puntero)
 369+ 9F43 3C               inc a
 370+ 9F44 32 05 8A         ld (Incrementa_puntero_backup),a
 371+ 9F47
 372+ 9F47 CD BC 9F         call Incrementa_Puntero_indice_mov
 373+ 9F4A 2A FE 89         ld hl,(Puntero_indice_mov)
 374+ 9F4D 22 02 8A         ld (Puntero_indice_mov_bucle),hl
 375+ 9F50 C9               ret
 376+ 9F51
 377+ 9F51              ; ---------- --------- --------- ---------- ----------
 378+ 9F51              ;
 379+ 9F51              ;   07/7/23
 380+ 9F51              ;
 381+ 9F51              ;   Inicia_Repetimos_movimiento
 382+ 9F51              ;
 383+ 9F51              ;
 384+ 9F51
 385+ 9F51              Inicia_Repetimos_movimiento
 386+ 9F51
 387+ 9F51              ; Iniciamos (Repetimos_movimiento).
 388+ 9F51
 389+ 9F51 DD 2A 00 8A      ld ix,(Puntero_mov)
 390+ 9F55 DD 7E 02         ld a,(ix+2)
 391+ 9F58 32 08 8A         ld (Repetimos_movimiento),a
 392+ 9F5B
 393+ 9F5B C9               ret
 394+ 9F5C
 395+ 9F5C              ; ---------- --------- --------- ---------- ----------
 396+ 9F5C              ;
 397+ 9F5C              ;   26/6/23
 398+ 9F5C              ;
 399+ 9F5C              ;   Inicia_Puntero_mov
 400+ 9F5C              ;
 401+ 9F5C              ;
 402+ 9F5C
 403+ 9F5C 2A FE 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F5F 5E               ld e,(hl)
 405+ 9F60 23               inc hl
 406+ 9F61 56               ld d,(hl)
 407+ 9F62 EB               ex de,hl
 408+ 9F63 22 00 8A         ld (Puntero_mov),hl
 409+ 9F66 C9               ret
 410+ 9F67
 411+ 9F67              ; ---------- --------- --------- ---------- ----------
 412+ 9F67              ;
 413+ 9F67              ;   27/06/23
 414+ 9F67              ;
 415+ 9F67              ;   Aplica_movimiento.
 416+ 9F67
 417+ 9F67              Aplica_desplazamiento
 418+ 9F67
 419+ 9F67              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F67
 421+ 9F67 2A 00 8A         ld hl, (Puntero_mov)
 422+ 9F6A
 423+ 9F6A 7E               ld a,(hl)
 424+ 9F6B E6 F0            and $f0
 425+ 9F6D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F6E
 427+ 9F6E CB 7E            bit 7,(hl)
 428+ 9F70 28 03            jr z,1F
 429+ 9F72 CD A1 99         call Mov_up
 430+ 9F75 2A 00 8A     1 ld hl, (Puntero_mov)
 431+ 9F78 CB 76            bit 6,(hl)
 432+ 9F7A 28 03            jr z,2F
 433+ 9F7C CD 70 99         call Mov_down
 434+ 9F7F 2A 00 8A     2 ld hl, (Puntero_mov)
 435+ 9F82 CB 6E            bit 5,(hl)
 436+ 9F84 28 03            jr z,3F
 437+ 9F86 CD 02 9B         call Mov_left
 438+ 9F89 2A 00 8A     3 ld hl, (Puntero_mov)
 439+ 9F8C CB 66            bit 4,(hl)
 440+ 9F8E C8               ret z
 441+ 9F8F CD E4 99         call Mov_right
 442+ 9F92 C9               ret
 443+ 9F93
 444+ 9F93              ; ---------- --------- --------- ---------- ----------
 445+ 9F93              ;
 446+ 9F93              ;   26/06/23
 447+ 9F93              ;
 448+ 9F93              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F93
 450+ 9F93              Ajusta_velocidad_desplazamiento
 451+ 9F93
 452+ 9F93              ; 1er byte de la cadena de movimiento.
 453+ 9F93              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F93
 455+ 9F93 CD B1 9F         call Extrae_nibble_alto
 456+ 9F96
 457+ 9F96 32 E4 89         ld (Vel_up),a
 458+ 9F99 79               ld a,c
 459+ 9F9A E6 0F            and $0f
 460+ 9F9C 32 E5 89         ld (Vel_down),a
 461+ 9F9F
 462+ 9F9F              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F9F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F9F
 465+ 9F9F 23               inc hl
 466+ 9FA0 CD B1 9F         call Extrae_nibble_alto
 467+ 9FA3
 468+ 9FA3 32 E2 89         ld (Vel_left),a
 469+ 9FA6 79               ld a,c
 470+ 9FA7 E6 0F            and $0f
 471+ 9FA9 32 E3 89         ld (Vel_right),a
 472+ 9FAC
 473+ 9FAC              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9FAC
 475+ 9FAC 23               inc hl
 476+ 9FAD 22 00 8A         ld (Puntero_mov),hl
 477+ 9FB0 C9               ret
 478+ 9FB1
 479+ 9FB1 06 04        Extrae_nibble_alto ld b,4
 480+ 9FB3 7E               ld a,(hl)
 481+ 9FB4 4F               ld c,a
 482+ 9FB5 E6 F0            and $f0
 483+ 9FB7 CB 3F        1 srl a
 484+ 9FB9 10 FC            djnz 1B
 485+ 9FBB C9               ret
 486+ 9FBC
 487+ 9FBC              ; ---------- --------- --------- ---------- ----------
 488+ 9FBC              ;
 489+ 9FBC              ;   5/7/23
 490+ 9FBC              ;
 491+ 9FBC              ;   Incrementa_Puntero_indice_mov
 492+ 9FBC
 493+ 9FBC              Incrementa_Puntero_indice_mov
 494+ 9FBC
 495+ 9FBC 21 04 8A         ld hl,Incrementa_puntero
 496+ 9FBF 34               inc (hl)
 497+ 9FC0
 498+ 9FC0 2A FE 89         ld hl,(Puntero_indice_mov)
 499+ 9FC3 01 02 00         ld bc,2
 500+ 9FC6 A7               and a
 501+ 9FC7 09               add hl,bc
 502+ 9FC8 22 FE 89         ld (Puntero_indice_mov),hl
 503+ 9FCB
 504+ 9FCB 7E               ld a,(hl)
 505+ 9FCC A7               and a
 506+ 9FCD
 507+ 9FCD              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FCD
 509+ 9FCD              ;    jr z,$
 510+ 9FCD
 511+ 9FCD              ;! Reinicia el Patrón de movimiento.
 512+ 9FCD
 513+ 9FCD CC D2 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FD0
 515+ 9FD0 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FD1
 517+ 9FD1 C9               ret
 518+ 9FD2
 519+ 9FD2
 520+ 9FD2              ; ---------- --------- --------- ---------- ----------
 521+ 9FD2              ;
 522+ 9FD2              ;   24/07/23
 523+ 9FD2              ;
 524+ 9FD2              ;   Inicializa_Puntero_indice_mov
 525+ 9FD2
 526+ 9FD2              Inicializa_Puntero_indice_mov
 527+ 9FD2
 528+ 9FD2              ; Existe etiqueta de bucle principal???
 529+ 9FD2
 530+ 9FD2 2A 02 8A         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FD5 24               inc h
 532+ 9FD6 25               dec h
 533+ 9FD7 28 05            jr z,2F
 534+ 9FD9
 535+ 9FD9 22 FE 89         ld (Puntero_indice_mov),hl
 536+ 9FDC 18 14            jr 3F
 537+ 9FDE
 538+ 9FDE              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FDE
 540+ 9FDE 3A 04 8A     2 ld a,(Incrementa_puntero)
 541+ 9FE1 47               ld b,a
 542+ 9FE2
 543+ 9FE2 2A FE 89         ld hl,(Puntero_indice_mov)
 544+ 9FE5 2B           1 dec hl
 545+ 9FE6 2B               dec hl
 546+ 9FE7 10 FC            djnz 1B
 547+ 9FE9 22 FE 89         ld (Puntero_indice_mov),hl
 548+ 9FEC
 549+ 9FEC AF               xor a
 550+ 9FED 32 04 8A         ld (Incrementa_puntero),a
 551+ 9FF0 18 06            jr 4F
 552+ 9FF2
 553+ 9FF2 3A 05 8A     3 ld a,(Incrementa_puntero_backup)
 554+ 9FF5 32 04 8A         ld (Incrementa_puntero),a
 555+ 9FF8 C9           4 ret
 556+ 9FF9
 557+ 9FF9
 558+ 9FF9
# file closed: Patrones_de_mov.asm
1317  9FF9              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9FF9              ; Relojes y temporizaciones.
   2+ 9FF9
   3+ 9FF9              ; ------------------------------------------------------
   4+ 9FF9              ;
   5+ 9FF9              ;	16/7/23
   6+ 9FF9              ;
   7+ 9FF9              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9FF9              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9FF9              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9FF9              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9FF9              ;
  12+ 9FF9              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9FF9              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9FF9
  15+ 9FF9              ; Disparo_entidad db 1
  16+ 9FF9              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9FF9              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9FF9
  19+ 9FF9              Habilita_disparos
  20+ 9FF9
  21+ 9FF9 7E           	ld a,(hl)
  22+ 9FFA A7           	and a
  23+ 9FFB C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9FFC
  25+ 9FFC EB           	ex de,hl
  26+ 9FFD
  27+ 9FFD 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9FFE C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9FFF
  30+ 9FFF              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9FFF
  32+ 9FFF 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A000 7E           	ld a,(hl)
  34+ A001 23           	inc hl
  35+ A002 77           	ld (hl),a
  36+ A003
  37+ A003 EB           	ex de,hl						; Habilitamos disparo.
  38+ A004 3E 01        	ld a,1
  39+ A006 77           	ld (hl),a
  40+ A007 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1318  A008              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A008              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A008              ;
   3+ A008              ;	3/1/23
   4+ A008              ;
   5+ A008              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A008
   7+ A008              ;	ADC HL,SP	LD (addr),SP
   8+ A008              ;	ADD HL,SP	LD SP,(addr)
   9+ A008              ;	ADD IX,SP	LD SP,nn
  10+ A008              ; 	ADD IY,SP	LD SP,HL
  11+ A008              ;				LD SP,IX
  12+ A008              ;	DEC SP		LD SP,IY
  13+ A008
  14+ A008              ;	EX (SP),HL
  15+ A008              ;	EX (SP),IX
  16+ A008              ;	EX (SP),IY
  17+ A008
  18+ A008              ;	INC SP
  19+ A008
  20+ A008                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 21 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  33+ 7FA7
  34+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  35+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  36+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  37+ 7FAC
  38+ 7FAC 3A 10 8A         ld a,(Ctrl_1)
  39+ 7FAF CB 47            bit 0,a
  40+ 7FB1 28 05            jr z,2F
  41+ 7FB3
  42+ 7FB3 2A 33 8A         ld hl,(Stack_snapshot_disparos_3)
  43+ 7FB6
  44+ 7FB6 18 03            jr 4F
  45+ 7FB8
  46+ 7FB8 2A 31 8A     2 ld hl,(Stack_snapshot_3)                        ; Album_de_fotos contiene la imagen de los registros implicados en el_
  47+ 7FBB
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 33 8A         ld (Stack_snapshot_disparos_3),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 31 8A     5 ld (Stack_snapshot_3),hl
  64+ 7FD0 ED 7B 21 8A  6 ld sp,(Stack)
  65+ 7FD4
  66+ 7FD4 C9               ret
  67+ 7FD5
  68+ 7FD5              ; ------------------------------------------------
  69+ 7FD5              ;
  70+ 7FD5              ;   31/07/23
  71+ 7FD5              ;
  72+ 7FD5              ;   La rutina estará situada justo después de los álbumes de fotos.
  73+ 7FD5
  74+ 7FD5                  org $741a
  75+ 741A
  76+ 741A              Gestiona_albumes_de_fotos
  77+ 741A
  78+ 741A              ; Desplazamos álbumes.
  79+ 741A
  80+ 741A              ; (Album_de_fotos_1) --- (Album_de_fotos).
  81+ 741A
  82+ 741A              ;   El álbum_1 contiene datos?
  83+ 741A
  84+ 741A 21 85 70         ld hl,Album_de_fotos_1+1
  85+ 741D 7E               ld a,(hl)
  86+ 741E A7               and a
  87+ 741F 28 05            jr z,1F
  88+ 7421
  89+ 7421              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
  90+ 7421
  91+ 7421 CD EB 74         call Album_1_a_Album_de_fotos
  92+ 7424 18 1A            jr 2F
  93+ 7426
  94+ 7426              ; El álbum_1 está vacío.
  95+ 7426              ; Album_de_fotos contiene datos?
  96+ 7426
  97+ 7426 21 01 70     1 ld hl,Album_de_fotos+1
  98+ 7429 7E               ld a,(hl)
  99+ 742A A7               and a
 100+ 742B 28 13            jr z,2F
 101+ 742D
 102+ 742D              ; Limpiamos Album_de_fotos.
 103+ 742D
 104+ 742D 21 00 70         ld hl,Album_de_fotos
 105+ 7430 36 00            ld (hl),0
 106+ 7432 11 01 70         ld de,Album_de_fotos+1
 107+ 7435 01 83 00         ld bc,$83
 108+ 7438 ED B0            ldir
 109+ 743A 21 00 70         ld hl,Album_de_fotos
 110+ 743D 22 25 8A         ld (Stack_snapshot),hl
 111+ 7440
 112+ 7440              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 113+ 7440
 114+ 7440              ;   El álbum_2 contiene datos?
 115+ 7440
 116+ 7440 21 08 71     2 ld hl,Album_de_fotos_2+1
 117+ 7443 7E               ld a,(hl)
 118+ 7444 A7               and a
 119+ 7445 28 05            jr z,3F
 120+ 7447
 121+ 7447              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 122+ 7447
 123+ 7447 CD D0 74         call Album_2_a_Album_1
 124+ 744A 18 1A            jr 4F
 125+ 744C
 126+ 744C              ; El álbum_2 está vacío.
 127+ 744C              ; álbum_1 contiene datos?
 128+ 744C
 129+ 744C 21 85 70     3 ld hl,Album_de_fotos_1+1
 130+ 744F 7E               ld a,(hl)
 131+ 7450 A7               and a
 132+ 7451 28 13            jr z,4F
 133+ 7453
 134+ 7453              ; Limpiamos Album_de_fotos_1.
 135+ 7453
 136+ 7453 21 84 70         ld hl,Album_de_fotos_1
 137+ 7456 36 00            ld (hl),0
 138+ 7458 11 85 70         ld de,Album_de_fotos_1+1
 139+ 745B 01 83 00         ld bc,$83
 140+ 745E ED B0            ldir
 141+ 7460 21 84 70         ld hl,Album_de_fotos_1
 142+ 7463 22 29 8A         ld (Stack_snapshot_1),hl
 143+ 7466
 144+ 7466              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 145+ 7466
 146+ 7466              ;   El álbum_3 contiene datos?
 147+ 7466
 148+ 7466 21 8B 71     4 ld hl,Album_de_fotos_3+1
 149+ 7469 7E               ld a,(hl)
 150+ 746A A7               and a
 151+ 746B 28 05            jr z,5F
 152+ 746D
 153+ 746D              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 154+ 746D
 155+ 746D CD B5 74         call Album_3_a_Album_2
 156+ 7470 18 1A            jr 6F
 157+ 7472
 158+ 7472              ; El álbum_3 está vacío.
 159+ 7472              ; álbum_2 contiene datos?
 160+ 7472
 161+ 7472 21 08 71     5 ld hl,Album_de_fotos_2+1
 162+ 7475 7E               ld a,(hl)
 163+ 7476 A7               and a
 164+ 7477 28 13            jr z,6F
 165+ 7479
 166+ 7479              ; Limpiamos Album_de_fotos_2.
 167+ 7479
 168+ 7479 21 07 71         ld hl,Album_de_fotos_2
 169+ 747C 36 00            ld (hl),0
 170+ 747E 11 08 71         ld de,Album_de_fotos_2+1
 171+ 7481 01 83 00         ld bc,$83
 172+ 7484 ED B0            ldir
 173+ 7486 21 07 71         ld hl,Album_de_fotos_2
 174+ 7489 22 2D 8A         ld (Stack_snapshot_2),hl
 175+ 748C
 176+ 748C C9           6 ret
 177+ 748D
 178+ 748D              ; ----------------------------------------------
 179+ 748D              ;
 180+ 748D              ;   31/7/23
 181+ 748D              ;
 182+ 748D              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 183+ 748D              ;
 184+ 748D              ;   Para pasar datos de un album a otro:
 185+ 748D              ;
 186+ 748D              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 187+ 748D              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 188+ 748D              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 189+ 748D
 190+ 748D C5           Trasbase_de_datos push bc
 191+ 748E A7               and a
 192+ 748F ED 42            sbc hl,bc
 193+ 7491 E5               push hl
 194+ 7492 C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 195+ 7493 E1               pop hl
 196+ 7494 ED B0            ldir
 197+ 7496 C9               ret
 198+ 7497
 199+ 7497              ; Paquetitos.
 200+ 7497
 201+ 7497 2A 31 8A     Trasbase_3a2 ld hl,(Stack_snapshot_3)
 202+ 749A 01 8A 71         ld bc,Album_de_fotos_3
 203+ 749D CD 8D 74         call Trasbase_de_datos
 204+ 74A0 C9               ret
 205+ 74A1
 206+ 74A1 2A 2D 8A     Trasbase_2a1 ld hl,(Stack_snapshot_2)
 207+ 74A4 01 07 71         ld bc,Album_de_fotos_2
 208+ 74A7 CD 8D 74         call Trasbase_de_datos
 209+ 74AA C9               ret
 210+ 74AB
 211+ 74AB 2A 29 8A     Trasbase_1a0 ld hl,(Stack_snapshot_1)
 212+ 74AE 01 84 70         ld bc,Album_de_fotos_1
 213+ 74B1 CD 8D 74         call Trasbase_de_datos
 214+ 74B4 C9               ret
 215+ 74B5
 216+ 74B5              ; ----------------------------------------------
 217+ 74B5
 218+ 74B5              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 219+ 74B5              ; _ limpiamos (Album_de_fotos_3).
 220+ 74B5              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 221+ 74B5
 222+ 74B5              ;   Datos de álbum_3 a álbum_2.
 223+ 74B5
 224+ 74B5 11 07 71     Album_3_a_Album_2 ld de,Album_de_fotos_2
 225+ 74B8 CD 97 74         call Trasbase_3a2
 226+ 74BB
 227+ 74BB              ;   Actualizamos (Stack_snapshot_2).
 228+ 74BB
 229+ 74BB EB               ex de,hl
 230+ 74BC 22 2D 8A         ld (Stack_snapshot_2),hl
 231+ 74BF
 232+ 74BF              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 233+ 74BF
 234+ 74BF AF               xor a
 235+ 74C0 32 8A 71         ld (Album_de_fotos_3),a
 236+ 74C3 11 8B 71         ld de,Album_de_fotos_3+1
 237+ 74C6 CD 97 74         call Trasbase_3a2
 238+ 74C9
 239+ 74C9 21 8A 71         ld hl,Album_de_fotos_3
 240+ 74CC 22 31 8A         ld (Stack_snapshot_3),hl
 241+ 74CF C9               ret
 242+ 74D0
 243+ 74D0 11 84 70     Album_2_a_Album_1 ld de,Album_de_fotos_1
 244+ 74D3 CD A1 74         call Trasbase_2a1
 245+ 74D6
 246+ 74D6              ;   Actualizamos (Stack_snapshot_1).
 247+ 74D6
 248+ 74D6 EB               ex de,hl
 249+ 74D7 22 29 8A         ld (Stack_snapshot_1),hl
 250+ 74DA
 251+ 74DA              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 252+ 74DA
 253+ 74DA AF               xor a
 254+ 74DB 32 07 71         ld (Album_de_fotos_2),a
 255+ 74DE 11 08 71         ld de,Album_de_fotos_2+1
 256+ 74E1 CD A1 74         call Trasbase_2a1
 257+ 74E4
 258+ 74E4 21 07 71         ld hl,Album_de_fotos_2
 259+ 74E7 22 2D 8A         ld (Stack_snapshot_2),hl
 260+ 74EA C9               ret
 261+ 74EB
 262+ 74EB 11 00 70     Album_1_a_Album_de_fotos ld de,Album_de_fotos
 263+ 74EE CD AB 74         call Trasbase_1a0
 264+ 74F1
 265+ 74F1              ;   Actualizamos (Stack_snapshot).
 266+ 74F1
 267+ 74F1 EB               ex de,hl
 268+ 74F2 22 25 8A         ld (Stack_snapshot),hl
 269+ 74F5
 270+ 74F5               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 271+ 74F5
 272+ 74F5 AF               xor a
 273+ 74F6 32 84 70         ld (Album_de_fotos_1),a
 274+ 74F9 11 85 70         ld de,Album_de_fotos_1+1
 275+ 74FC CD AB 74         call Trasbase_1a0
 276+ 74FF
 277+ 74FF 21 84 70         ld hl,Album_de_fotos_1
 278+ 7502 22 29 8A         ld (Stack_snapshot_1),hl
 279+ 7505 C9               ret
 280+ 7506
 281+ 7506              ; -------------------- ------------------------------------
 282+ 7506
 283+ 7506              Gestiona_albumes_de_fotos_disparos
 284+ 7506
 285+ 7506              ; Desplazamos álbumes.
 286+ 7506
 287+ 7506              ; (Album_de_fotos_1) --- (Album_de_fotos).
 288+ 7506
 289+ 7506              ;   El álbum_1 contiene datos?
 290+ 7506
 291+ 7506 21 91 72         ld hl,Album_de_fotos_disparos_1+1
 292+ 7509 7E               ld a,(hl)
 293+ 750A A7               and a
 294+ 750B 28 05            jr z,1F
 295+ 750D
 296+ 750D              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 297+ 750D
 298+ 750D CD D7 75         call Album_1_a_Album_de_fotos_disparos
 299+ 7510 18 1A            jr 2F
 300+ 7512
 301+ 7512              ; El álbum_1 está vacío.
 302+ 7512              ; Album_de_fotos contiene datos?
 303+ 7512
 304+ 7512 21 0E 72     1 ld hl,Album_de_fotos_disparos+1
 305+ 7515 7E               ld a,(hl)
 306+ 7516 A7               and a
 307+ 7517 28 13            jr z,2F
 308+ 7519
 309+ 7519              ; Limpiamos Album_de_fotos.
 310+ 7519
 311+ 7519 21 0D 72         ld hl,Album_de_fotos_disparos
 312+ 751C 36 00            ld (hl),0
 313+ 751E 11 0E 72         ld de,Album_de_fotos_disparos+1
 314+ 7521 01 83 00         ld bc,$83
 315+ 7524 ED B0            ldir
 316+ 7526 21 0D 72         ld hl,Album_de_fotos_disparos
 317+ 7529 22 27 8A         ld (Stack_snapshot_disparos),hl
 318+ 752C
 319+ 752C              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 320+ 752C
 321+ 752C              ;   El álbum_2 contiene datos?
 322+ 752C
 323+ 752C 21 1A 73     2 ld hl,Album_de_fotos_disparos_2+1
 324+ 752F 7E               ld a,(hl)
 325+ 7530 A7               and a
 326+ 7531 28 05            jr z,3F
 327+ 7533
 328+ 7533              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 329+ 7533
 330+ 7533 CD BC 75         call Album_2_a_Album_1_disparos
 331+ 7536 18 1A            jr 4F
 332+ 7538
 333+ 7538              ; El álbum_2 está vacío.
 334+ 7538              ; álbum_1 contiene datos?
 335+ 7538
 336+ 7538 21 91 72     3 ld hl,Album_de_fotos_disparos_1+1
 337+ 753B 7E               ld a,(hl)
 338+ 753C A7               and a
 339+ 753D 28 13            jr z,4F
 340+ 753F
 341+ 753F              ; Limpiamos Album_de_fotos_1.
 342+ 753F
 343+ 753F 21 90 72         ld hl,Album_de_fotos_disparos_1
 344+ 7542 36 00            ld (hl),0
 345+ 7544 11 91 72         ld de,Album_de_fotos_disparos_1+1
 346+ 7547 01 83 00         ld bc,$83
 347+ 754A ED B0            ldir
 348+ 754C 21 90 72         ld hl,Album_de_fotos_disparos_1
 349+ 754F 22 2B 8A         ld (Stack_snapshot_disparos_1),hl
 350+ 7552
 351+ 7552              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 352+ 7552
 353+ 7552              ;   El álbum_3 contiene datos?
 354+ 7552
 355+ 7552 21 9E 73     4 ld hl,Album_de_fotos_disparos_3+1
 356+ 7555 7E               ld a,(hl)
 357+ 7556 A7               and a
 358+ 7557 28 05            jr z,5F
 359+ 7559
 360+ 7559              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 361+ 7559
 362+ 7559 CD A1 75         call Album_3_a_Album_2_disparos
 363+ 755C 18 1A            jr 6F
 364+ 755E
 365+ 755E              ; El álbum_3 está vacío.
 366+ 755E              ; álbum_2 contiene datos?
 367+ 755E
 368+ 755E 21 1A 73     5 ld hl,Album_de_fotos_disparos_2+1
 369+ 7561 7E               ld a,(hl)
 370+ 7562 A7               and a
 371+ 7563 28 13            jr z,6F
 372+ 7565
 373+ 7565              ; Limpiamos Album_de_fotos_2.
 374+ 7565
 375+ 7565 21 19 73         ld hl,Album_de_fotos_disparos_2
 376+ 7568 36 00            ld (hl),0
 377+ 756A 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 378+ 756D 01 83 00         ld bc,$83
 379+ 7570 ED B0            ldir
 380+ 7572 21 19 73         ld hl,Album_de_fotos_disparos_2
 381+ 7575 22 2F 8A         ld (Stack_snapshot_disparos_2),hl
 382+ 7578
 383+ 7578 C9           6 ret
 384+ 7579
 385+ 7579              ; ----------------------------------------------
 386+ 7579              ;
 387+ 7579              ;   31/7/23
 388+ 7579              ;
 389+ 7579              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 390+ 7579              ;
 391+ 7579              ;   Para pasar datos de un album a otro:
 392+ 7579              ;
 393+ 7579              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 394+ 7579              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 395+ 7579              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 396+ 7579
 397+ 7579 C5           Trasbase_de_datos_disparos push bc
 398+ 757A A7               and a
 399+ 757B ED 42            sbc hl,bc
 400+ 757D E5               push hl
 401+ 757E C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 402+ 757F E1               pop hl
 403+ 7580 ED B0            ldir
 404+ 7582 C9               ret
 405+ 7583
 406+ 7583              ; Paquetitos.
 407+ 7583
 408+ 7583 2A 33 8A     Trasbase_3a2_disparos ld hl,(Stack_snapshot_disparos_3)
 409+ 7586 01 9D 73         ld bc,Album_de_fotos_disparos_3
 410+ 7589 CD 79 75         call Trasbase_de_datos_disparos
 411+ 758C C9               ret
 412+ 758D
 413+ 758D 2A 2F 8A     Trasbase_2a1_disparos ld hl,(Stack_snapshot_disparos_2)
 414+ 7590 01 19 73         ld bc,Album_de_fotos_disparos_2
 415+ 7593 CD 79 75         call Trasbase_de_datos_disparos
 416+ 7596 C9               ret
 417+ 7597
 418+ 7597 2A 2B 8A     Trasbase_1a0_disparos ld hl,(Stack_snapshot_disparos_1)
 419+ 759A 01 90 72         ld bc,Album_de_fotos_disparos_1
 420+ 759D CD 79 75         call Trasbase_de_datos_disparos
 421+ 75A0 C9               ret
 422+ 75A1
 423+ 75A1              ; ----------------------------------------------
 424+ 75A1
 425+ 75A1              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 426+ 75A1              ; _ limpiamos (Album_de_fotos_3).
 427+ 75A1              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 428+ 75A1
 429+ 75A1              ;   Datos de álbum_3 a álbum_2.
 430+ 75A1
 431+ 75A1 11 19 73     Album_3_a_Album_2_disparos ld de,Album_de_fotos_disparos_2
 432+ 75A4 CD 83 75         call Trasbase_3a2_disparos
 433+ 75A7
 434+ 75A7              ;   Actualizamos (Stack_snapshot_2).
 435+ 75A7
 436+ 75A7 EB               ex de,hl
 437+ 75A8 22 2F 8A         ld (Stack_snapshot_disparos_2),hl
 438+ 75AB
 439+ 75AB              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 440+ 75AB
 441+ 75AB AF               xor a
 442+ 75AC 32 9D 73         ld (Album_de_fotos_disparos_3),a
 443+ 75AF 11 9E 73         ld de,Album_de_fotos_disparos_3+1
 444+ 75B2 CD 83 75         call Trasbase_3a2_disparos
 445+ 75B5
 446+ 75B5 21 9D 73         ld hl,Album_de_fotos_disparos_3
 447+ 75B8 22 33 8A         ld (Stack_snapshot_disparos_3),hl
 448+ 75BB C9               ret
 449+ 75BC
 450+ 75BC 11 90 72     Album_2_a_Album_1_disparos ld de,Album_de_fotos_disparos_1
 451+ 75BF CD 8D 75         call Trasbase_2a1_disparos
 452+ 75C2
 453+ 75C2              ;   Actualizamos (Stack_snapshot_1).
 454+ 75C2
 455+ 75C2 EB               ex de,hl
 456+ 75C3 22 2B 8A         ld (Stack_snapshot_disparos_1),hl
 457+ 75C6
 458+ 75C6              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 459+ 75C6
 460+ 75C6 AF               xor a
 461+ 75C7 32 19 73         ld (Album_de_fotos_disparos_2),a
 462+ 75CA 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 463+ 75CD CD 8D 75         call Trasbase_2a1_disparos
 464+ 75D0
 465+ 75D0 21 19 73         ld hl,Album_de_fotos_disparos_2
 466+ 75D3 22 2F 8A         ld (Stack_snapshot_disparos_2),hl
 467+ 75D6 C9               ret
 468+ 75D7
 469+ 75D7 11 0D 72     Album_1_a_Album_de_fotos_disparos ld de,Album_de_fotos_disparos
 470+ 75DA CD 97 75         call Trasbase_1a0_disparos
 471+ 75DD
 472+ 75DD              ;   Actualizamos (Stack_snapshot).
 473+ 75DD
 474+ 75DD EB               ex de,hl
 475+ 75DE 22 27 8A         ld (Stack_snapshot_disparos),hl
 476+ 75E1
 477+ 75E1               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 478+ 75E1
 479+ 75E1 AF               xor a
 480+ 75E2 32 90 72         ld (Album_de_fotos_disparos_1),a
 481+ 75E5 11 91 72         ld de,Album_de_fotos_disparos_1+1
 482+ 75E8 CD 97 75         call Trasbase_1a0_disparos
 483+ 75EB
 484+ 75EB 21 90 72         ld hl,Album_de_fotos_disparos_1
 485+ 75EE 22 2B 8A         ld (Stack_snapshot_disparos_1),hl
 486+ 75F1 C9               ret
# file closed: Guarda_foto_registros.asm
1319  75F2
1320  75F2              	SAVESNA "Pruebas.sna", START
1321  75F2
1322  75F2
1323  75F2
1324  75F2
# file closed: Banco_de_pruebas.asm
