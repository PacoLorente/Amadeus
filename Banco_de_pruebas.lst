# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  40  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  41  FE01
  42  FE01              ;																		; Scanlines_album.
  43  FE01
  44  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  45  FE01
  46  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  47  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  48  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  49  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  50  FE01
  51  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  52  FE01              ;
  53  FE01              ;	13/08/24
  54  FE01              ;
  55  FE01
  56  FE01              	org $82f4
  57  82F4
  58  82F4 F5           	push af
  59  82F5 E5           	push hl
  60  82F6
  61  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  62  82F6 21 24 8C     	ld hl,Ctrl_3
  63  82F9 CB 46        	bit 0,(hl)
  64  82FB 28 FE        	jr z,$
  65  82FD              ;! -------------------
  66  82FD
  67  82FD              ; Disparos.
  68  82FD
  69  82FD CD BE A0     	call Pinta_disparos
  70  8300
  71  8300              ; Shield -----------------------
  72  8300
  73  8300              Temporizacion_shield
  74  8300
  75  8300 21 4E 8C     	ld hl,Shield
  76  8303 7E           	ld a,(hl)
  77  8304 A7           	and a
  78  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  8307
  80  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  8308
  82  8308 23           	inc hl
  83  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  830A
  85  830A 20 17        	jr nz,Incrementa_FRAMES
  86  830C
  87  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  830C
  89  830C              Cambio_de_estado
  90  830C
  91  830C              ;	Indica cambio de estado.
  92  830C
  93  830C 23           	inc hl						;	Sitúa en (Shield_3).
  94  830D
  95  830D CB 5E        	bit 3,(hl)
  96  830F 28 05        	jr z,2F
  97  8311
  98  8311 CD 06 91     	call Inicia_Shield
  99  8314
 100  8314 18 0D        	jr Incrementa_FRAMES
 101  8316
 102  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  8318
 104  8318              ;	Carga en (Shield_2) la siguiente temporización.
 105  8318
 106  8318 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 107  831B 23           	inc hl
 108  831C 22 4C 8C     	ld (Puntero_datos_shield),hl
 109  831F 7E           	ld a,(hl)
 110  8320 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8323
 112  8323              Incrementa_FRAMES
 113  8323
 114  8323 2A 78 5C     	ld hl,(FRAMES)
 115  8326 23           	inc hl
 116  8327 22 78 5C     	ld (FRAMES),hl
 117  832A
 118  832A 7C           	ld a,h
 119  832B B5           	or l
 120  832C 20 04        	jr nz,1F
 121  832E
 122  832E 21 7A 5C     	ld hl,FRAMES_3
 123  8331 34           	inc (hl)
 124  8332
 125  8332 D5           1 push de
 126  8333 C5           	push bc
 127  8334
 128  8334 CD 16 91     	call Actualiza_pantalla
 129  8337
 130  8337 C1           	pop bc
 131  8338 D1           	pop de
 132  8339 E1           	pop hl
 133  833A F1           	pop af
 134  833B
 135  833B FB           	ei
 136  833C
 137  833C C9           	ret
 138  833D
 139  833D              ; --------------------------------------------------------------------------------
 140  833D
 141  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_de_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 142  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 144  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A3 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 02           Nivel_1 db 2									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA3
  19+ 8BA3 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA4 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA8 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAC 01 02
  22+ 8BAE 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB2 01 02
  23+ 8BB4
# file closed: Niveles.asm
 145  8BB4
 146  8BB4              ; --------------------------------------------------------------------------------
 147  8BB4              ;
 148  8BB4              ; 12/05/24
 149  8BB4              ;
 150  8BB4              ; Parámetros DRAW.
 151  8BB4              ;
 152  8BB4
 153  8BB4              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8BB4
 155  8BB4 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8BB5              ;															- Patrón de movimiento.
 157  8BB5 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8BB6 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8BB7
 160  8BB7 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8BB8              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8BB8
 163  8BB8              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8BB8              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8BB8              ; Ejemplos.
 166  8BB8
 167  8BB8              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8BB8              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8BB8              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8BB8              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8BB8              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8BB8
 173  8BB8 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8BB9              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8BB9              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8BB9
 177  8BB9 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8BBB              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8BBB
 180  8BBB 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8BBD
 182  8BBD              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8BBD
 184  8BBD 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BBF              ;														; _palabras que componen el "movimiento_masticado".
 186  8BBF
 187  8BBF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BBF
 189  8BBF 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC0              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC0              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC0              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC0              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC0
 195  8BC0 00           Ctrl_2 db 0
 196  8BC1              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC1              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC1              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC1              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC1              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC1              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC1              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC1              ;
 204  8BC1              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC1              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC1              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC1              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC1              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC1              ;														BIT 4, ???
 210  8BC1              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC1
 212  8BC1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC2              ;
 218  8BC2              ; 														DESCRIPCIÖN:
 219  8BC2              ;
 220  8BC2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC2              ;
 234  8BC2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC2
 238  8BC2              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC2
 240  8BC2 00           Filas db 0												; Filas. [DRAW]
 241  8BC3 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BC4 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BC6 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BC8
 245  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BC8
 247  8BC8 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BC9              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BC9              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BC9
 251  8BC9              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BC9
 253  8BC9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BC9              ;
 255  8BC9              ;	COLORES: 0 ..... NEGRO
 256  8BC9              ;    		 1 ..... AZUL
 257  8BC9              ; 			 2 ..... ROJO
 258  8BC9              ;			 3 ..... MAGENTA
 259  8BC9              ; 			 4 ..... VERDE
 260  8BC9              ; 			 5 ..... CIAN
 261  8BC9              ;			 6 ..... AMARILLO
 262  8BC9              ; 			 7 ..... BLANCO
 263  8BC9
 264  8BC9 00 00        Indice_Sprite_der defw 0
 265  8BCB 00 00        Indice_Sprite_izq defw 0
 266  8BCD 00 00        Puntero_DESPLZ_der defw 0
 267  8BCF 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD1
 269  8BD1 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BD3 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BD4 00           Columnas db 0
 272  8BD5 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BD7              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD7 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BD8
 276  8BD8              ; variables de control general.
 277  8BD8
 278  8BD8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BD9
 280  8BD9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BD9
 282  8BD9              Perfiles_de_velocidad
 283  8BD9
 284  8BD9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BDA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BDB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BDC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BDD
 289  8BDD              ; Contadores de 16 bits.
 290  8BDD
 291  8BDD 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BDF 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE1 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BE5
 296  8BE5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BE5
 298  8BE5 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BE7 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BE9 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BEB              ;
 302  8BEB              ;
 303  8BEB 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BEC              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BEC              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BEC 00           Incrementa_puntero_backup db 0
 307  8BED 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BEE              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BEE 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BEF 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF0 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF1              ;
 313  8BF1              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF1              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF1              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF1              ;
 317  8BF1              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF1              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF1              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF1              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF1              ;
 322  8BF1              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF1              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF1              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF1
 326  8BF1 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF2
 328  8BF2              ;														DESCRIPCIÓN:
 329  8BF2              ;
 330  8BF2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF2              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF2              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF2
 337  8BF2              ;														BIT 3, Recarga de nueva oleada.
 338  8BF2              ;														BIT 4, Recarga de nueva oleada.
 339  8BF2              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF2              ;														BIT 6, **** Frame completo.
 341  8BF2              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF2
 343  8BF2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BF4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BF4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BF4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BF4
 348  8BF4              ; Gestión de ENTIDADES y CAJAS.
 349  8BF4
 350  8BF4 00 00        Puntero_store_caja defw 0
 351  8BF6 00 00        Puntero_restore_caja defw 0
 352  8BF8 00 00        Indice_restore_caja defw 0
 353  8BFA 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8BFB 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8BFC 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8BFD
 357  8BFD 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8BFF 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C01              ;														; _ puntero (Indice_entidades).
 360  8C01
 361  8C01              ;---------------------------------------------------------------------------------------------------------------
 362  8C01              ;
 363  8C01              ;	11/09/24
 364  8C01              ;
 365  8C01              ;	Álbumes.
 366  8C01
 367  8C01 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C03              ;														; _variable para almacenar lo posición del puntero_
 369  8C03              ; 														; _de pila, SP.
 370  8C03 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C05              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C05
 373  8C05              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C05
 375  8C05 00 00        Album_de_pintado defw 0
 376  8C07 00 00        Album_de_borrado defw 0
 377  8C09 00 00        Album_de_pintado_Amadeus defw 0
 378  8C0B 00 00        Album_de_borrado_Amadeus defw 0
 379  8C0D 00 00        Album_de_pintado_disparos defw 0
 380  8C0F 00 00        Album_de_borrado_disparos defw 0
 381  8C11
 382  8C11 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C13 00           Num_de_bytes_album_de_disparos db 0
 384  8C14
 385  8C14 07           Numero_de_disparos_de_entidades db 7
 386  8C15
 387  8C15 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C16 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 389  8C17
 390  8C17 00 00        Techo_Scanlines_album defw 0
 391  8C19 00 00        Techo_Scanlines_album_2 defw 0
 392  8C1B 00           Switch db 0
 393  8C1C 00 00        Techo defw 0
 394  8C1E 00 00        Scanlines_album_SP defw 0
 395  8C20 00 89        India_SP defw Tabla_de_pintado
 396  8C22 03 89        India_2_SP defw Tabla_de_pintado+3
 397  8C24
 398  8C24 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 399  8C25              ;
 400  8C25              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 401  8C25              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 402  8C25              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 403  8C25              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 404  8C25              ;																Habilita el borrado/pintado de sprites.
 405  8C25              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 406  8C25              ;																_ a la baja.
 407  8C25              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 408  8C25              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 409  8C25              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 410  8C25              ; 																_ el último frame de la explosión de nuestra nave.
 411  8C25              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 412  8C25              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 413  8C25
 414  8C25 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 415  8C26              ;
 416  8C26              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 417  8C26              ;
 418  8C26              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 419  8C26              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 420  8C26              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 421  8C26              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 422  8C26              ;
 423  8C26              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 424  8C26              ;															_ masticados ya generados.
 425  8C26              ;
 426  8C26              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 427  8C26              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 428  8C26              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 429  8C26              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 430  8C26
 431  8C26 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 432  8C27              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C27              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 434  8C27
 435  8C27
 436  8C27
 437  8C27
 438  8C27
 439  8C27              ; Gestión de Disparos.
 440  8C27
 441  8C27 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 442  8C29 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 443  8C2B 00           Impacto2 db 0											; Byte de control de impactos.
 444  8C2C
 445  8C2C              ;
 446  8C2C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 447  8C2C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 448  8C2C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 449  8C2C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 450  8C2C
 451  8C2C
 452  8C2C
 453  8C2C
 454  8C2C
 455  8C2C
 456  8C2C
 457  8C2C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 458  8C2E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 459  8C2E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 460  8C2E
 461  8C2E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 462  8C30              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 463  8C30 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C33              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 465  8C33 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C36              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 467  8C36
 468  8C36              ;---------------------------------------------------------------------------------------------------------------
 469  8C36
 470  8C36              ; Relojes y temporizaciones.
 471  8C36
 472  8C36 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 473  8C37 05           Clock_explosion_Amadeus db 5
 474  8C38 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 475  8C39
 476  8C39 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 477  8C3B F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 478  8C3D 00           DB_RND_disparos db 0
 479  8C3E
 480  8C3E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 481  8C40 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 482  8C41              ;														; Repite la oleada de entidades.
 483  8C41 20           CLOCK_disparo_entidad_MASTER db $20						; Reloj, decreciente.
 484  8C42 20           CLOCK_disparo_entidad db $20
 485  8C43
 486  8C43              ;---------------------------------------------------------------------------------------------------------------
 487  8C43
 488  8C43              ; Gestión de NIVELES.
 489  8C43
 490  8C43 00           Nivel db 0												; Nivel actual del juego.
 491  8C44 00 00        Puntero_indice_NIVELES defw 0
 492  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 493  8C48              ; 														; _ que definen el NIVEL.
 494  8C48
 495  8C48              ; ---------------------------------------------------------------------------------------------------------------
 496  8C48
 497  8C48              ; Temporizaciones Shield.
 498  8C48
 499  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 500  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 501  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 502  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 503  8C50 00           Shield_3 db 0
 504  8C51
 505  8C51 06           Lives db 6
 506  8C52
 507  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 508  8C52              ;
 509  8C52              ;	5/1/24
 510  8C52
 511  8C52              START
 512  8C52
 513  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 514  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 515  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 516  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 517  8C5B F3           	DI
 518  8C5C
 519  8C5C              ; Limpiamos pantalla.
 520  8C5C
 521  8C5C 3E 07        	ld a,%00000111
 522  8C5E              ;	call Cls
 523  8C5E CD FB 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 524  8C61
 525  8C61              ; INICIALIZACIÓN.
 526  8C61
 527  8C61 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 528  8C63 CD 48 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 529  8C66 CD 92 8E     	call Extrae_numero_aleatorio_y_avanza
 530  8C69
 531  8C69 6F           	ld l,a
 532  8C6A 26 00        	ld h,0
 533  8C6C 22 3E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 534  8C6F
 535  8C6F              ;	Inicializa 1er Nivel.
 536  8C6F
 537  8C6F 21 94 8B     	ld hl,Indice_de_niveles
 538  8C72 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 539  8C75 CD 78 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 540  8C78              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 541  8C78              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 542  8C78              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 543  8C78
 544  8C78              ;	Inicia los álbumes de líneas.
 545  8C78
 546  8C78 CD 4B 90     	call Inicia_albumes_de_lineas
 547  8C7B              ;
 548  8C7B CD 5B 90     	call Inicia_albumes_de_lineas_Amadeus
 549  8C7E CD 68 90     	call Inicia_albumes_de_disparos
 550  8C81
 551  8C81 CD 91 90     	call Inicia_Puntero_Disparo_Entidades
 552  8C84
 553  8C84 CD BD 92     4 call Inicia_Entidades
 554  8C87 CD 20 93     	call Inicia_Amadeus
 555  8C8A
 556  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 557  8C8A              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 558  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 559  8C8A
 560  8C8A 11 6D 89     	ld de,Amadeus_BOX
 561  8C8D CD 73 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 562  8C90 CD 63 93     	call Limpiamos_bandeja_DRAW
 563  8C93
 564  8C93              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 565  8C93
 566  8C93 06 3C        	ld b,60
 567  8C95 CD 4F 9D     2 call Amadeus_a_izquierda
 568  8C98 10 FB        	djnz 2B
 569  8C9A
 570  8C9A CD 29 90     	call Genera_datos_de_impresion_Amadeus
 571  8C9D
 572  8C9D              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 573  8C9D
 574  8C9D CD 7B 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 575  8CA0              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 576  8CA0
 577  8CA0              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 578  8CA0              ; (Esto se dá cuando se inicia una nueva oleada).
 579  8CA0
 580  8CA0              ;	ld a,(Ctrl_1)
 581  8CA0              ;	bit 3,a
 582  8CA0              ;	jr nz,5F											 ; Loop
 583  8CA0
 584  8CA0              ;	ld de,Amadeus_db
 585  8CA0              ;	call Store_Amadeus
 586  8CA0
 587  8CA0              ; 	INICIA DISPAROS !!!!!
 588  8CA0
 589  8CA0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 590  8CA0
 591  8CA0              ;5 call Inicia_punteros_de_cajas
 592  8CA0              ;	call Restore_entidad
 593  8CA0
 594  8CA0              ;	ld a,(Ctrl_1)
 595  8CA0              ;	bit 3,a
 596  8CA0              ;	jr z,6F
 597  8CA0
 598  8CA0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 599  8CA0
 600  8CA0              ;	ld hl,Ctrl_1
 601  8CA0              ;	res 3,(hl)
 602  8CA0              ;	jr Main
 603  8CA0
 604  8CA0              ; Damos por concluida la construcción del FRAME.
 605  8CA0              ;
 606  8CA0
 607  8CA0 CD 06 91     	call Inicia_Shield
 608  8CA3
 609  8CA3
 610  8CA3 2A 1E 8C     6 ld hl,(Scanlines_album_SP)
 611  8CA6 22 17 8C     	ld (Techo_Scanlines_album),hl
 612  8CA9
 613  8CA9 2A 07 8C     	ld hl,(Album_de_borrado)
 614  8CAC 22 1E 8C     	ld (Scanlines_album_SP),hl
 615  8CAF
 616  8CAF 21 00 89     	ld hl,Tabla_de_pintado
 617  8CB2 22 20 8C     	ld (India_SP),hl
 618  8CB5
 619  8CB5 21 24 8C     	ld hl,Ctrl_3
 620  8CB8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 621  8CBA CB D6        	set 2,(hl)
 622  8CBC CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 623  8CBE
 624  8CBE FB           	ei 													; Ha de apuntar a $5c3a.
 625  8CBF
 626  8CBF 76           	halt
 627  8CC0
 628  8CC0              ; ------------------------------------
 629  8CC0
 630  8CC0              Main
 631  8CC0              ;
 632  8CC0              ; 20/09/24
 633  8CC0
 634  8CC0              ; Gestión de disparos.
 635  8CC0
 636  8CC0 CD FC 9E     	call Motor_de_disparos_entidades
 637  8CC3 CD 68 A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 638  8CC6 CD 7F 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 639  8CC9
 640  8CC9              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 641  8CC9              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 642  8CC9              ; Este hecho lo indica el bit2 de (Impacto2).
 643  8CC9
 644  8CC9 CD 0A A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 645  8CCC
 646  8CCC              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 647  8CCC
 648  8CCC 21 42 8C     	ld hl,CLOCK_disparo_entidad
 649  8CCF 35           	dec (hl)
 650  8CD0 CC C8 8D     	call z,Autoriza_disparo_de_entidades
 651  8CD3
 652  8CD3 2A 3E 8C     	ld hl,(Clock_next_entity)
 653  8CD6 ED 4B 78 5C  	ld bc,(FRAMES)
 654  8CDA A7           	and a
 655  8CDB ED 42        	sbc hl,bc
 656  8CDD 20 16        	jr nz,1F
 657  8CDF
 658  8CDF              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 659  8CDF              ; _ (Clock_next_entity) para la siguiente entidad.
 660  8CDF
 661  8CDF 3A FB 8B     	ld a,(Numero_parcial_de_entidades)
 662  8CE2 47           	ld b,a
 663  8CE3 3A FC 8B     	ld a,(Entidades_en_curso)
 664  8CE6 B8           	cp b
 665  8CE7 28 0C        	jr z,1F
 666  8CE9 30 0A        	jr nc,1F
 667  8CEB
 668  8CEB 3C           	inc a
 669  8CEC 32 FC 8B     	ld (Entidades_en_curso),a
 670  8CEF
 671  8CEF              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 672  8CEF
 673  8CEF CD 92 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 674  8CF2 CD AE 8E     	call Define_Clock_next_entity
 675  8CF5
 676  8CF5 3A FC 8B     1 ld a,(Entidades_en_curso)
 677  8CF8 A7           	and a
 678  8CF9 CA 73 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 679  8CFC 47           	ld b,a												; No hay entidades que gestionar.
 680  8CFD
 681  8CFD              ; ( Código que ejecutamos con cada entidad: ).
 682  8CFD
 683  8CFD              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 684  8CFD              ;
 685  8CFD              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 686  8CFD
 687  8CFD 21 00 89     	ld hl,Tabla_de_pintado
 688  8D00 22 20 8C     	ld (India_SP),hl
 689  8D03
 690  8D03 21 24 8C     	ld hl,Ctrl_3
 691  8D06 CB D6        	set 2,(hl)
 692  8D08 CD 54 8E     	call Change
 693  8D0B
 694  8D0B C5           2 push bc 												; Nº de entidades en curso.
 695  8D0C
 696  8D0C CD D3 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 697  8D0F ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 698  8D13
 699  8D13              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 700  8D13
 701  8D13              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 702  8D13              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 703  8D13
 704  8D13 3A 2B 8C     	ld a,(Impacto2)
 705  8D16 CB 5F        	bit 3,a
 706  8D18 C4 F5 9F     	call nz,Compara_con_coordenadas_de_disparo
 707  8D1B
 708  8D1B 3A B8 8B     	ld a,(Impacto)
 709  8D1E CB 4F        	bit 1,a
 710  8D20 C4 E3 91     	call nz,Genera_explosion
 711  8D23 20 31        	jr nz,Gestiona_siguiente_entidad
 712  8D25
 713  8D25 3A B8 8B     	ld a,(Impacto)
 714  8D28 A7           	and a
 715  8D29 28 0C        	jr z,3F
 716  8D2B
 717  8D2B              ; IMPACTO en entidad por colisión con Amadeus.
 718  8D2B
 719  8D2B              ; 5/7/24
 720  8D2B              ; Nota importante:
 721  8D2B              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 722  8D2B              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 723  8D2B              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 724  8D2B
 725  8D2B 3A 71 89     	ld a,(Impacto_Amadeus)
 726  8D2E A7           	and a
 727  8D2F C4 E3 91     	call nz,Genera_explosion
 728  8D32 20 22        	jr nz,Gestiona_siguiente_entidad
 729  8D34
 730  8D34              ; Falsa colisión !!!
 731  8D34
 732  8D34 32 B8 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 733  8D37
 734  8D37              ; -------------------------------------------
 735  8D37
 736  8D37 CD F2 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 737  8D3A CD 34 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 738  8D3D CD E2 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 739  8D40 CD E3 94     	call Genera_datos_de_impresion
 740  8D43 CD 86 93     	call Decrementa_Contador_de_mov_masticados
 741  8D46
 742  8D46              ; -------------------------------------------
 743  8D46
 744  8D46              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 745  8D46
 746  8D46 2A B9 8B     	ld hl,(Puntero_de_impresion)
 747  8D49 CD B7 94     	call Genera_coordenadas
 748  8D4C
 749  8D4C              ; TODO: Generamos disparo ???
 750  8D4C
 751  8D4C 3A 16 8C     	ld a,(Permiso_de_disparo_Entidades)
 752  8D4F A7           	and a
 753  8D50 C4 EA 8D     	call nz,Entidad_genera_disparo_si_procede
 754  8D53
 755  8D53 CD 88 A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 756  8D56
 757  8D56              Gestiona_siguiente_entidad
 758  8D56
 759  8D56 CD 58 93      	call Store_Restore_cajas
 760  8D59 C1           	pop bc
 761  8D5A 10 AF        	djnz 2B
 762  8D5C
 763  8D5C              ; Hemos gestionado todas las entidades.
 764  8D5C              ; ----- ----- -----
 765  8D5C
 766  8D5C CD 06 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 767  8D5F CD 1D 8F     	call Ordena_tabla_de_impresion
 768  8D62 CD 7B 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 769  8D65
 770  8D65 CD C3 8E     	call Borra_diferencia
 771  8D68
 772  8D68 3A 24 8C     	ld a,(Ctrl_3)
 773  8D6B CB 5F        	bit 3,a
 774  8D6D 20 04        	jr nz,Gestion_de_Amadeus
 775  8D6F
 776  8D6F EB           	ex de,hl
 777  8D70 71           	ld (hl),c
 778  8D71 2C           	inc l
 779  8D72 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 780  8D73
 781  8D73              ;! GESTIONA AMADEUS !!!!!!!!!!
 782  8D73
 783  8D73              Gestion_de_Amadeus
 784  8D73
 785  8D73 21 24 8C     	ld hl,Ctrl_3
 786  8D76 CB 76        	bit 6,(hl)
 787  8D78 28 13        	jr z,Amadeus_vivo
 788  8D7A
 789  8D7A              ; Amadeus ha sido destruido.
 790  8D7A              ; Decrementa (Temp_new_live).
 791  8D7A
 792  8D7A 21 38 8C     	ld hl,Temp_new_live
 793  8D7D 35           	dec (hl)
 794  8D7E 20 26        	jr nz,End_frame
 795  8D80
 796  8D80              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 797  8D80
 798  8D80 21 51 8C     	ld hl,Lives
 799  8D83 35           	dec (hl)
 800  8D84
 801  8D84              ;! Fin del juego
 802  8D84
 803  8D84 F3           	di
 804  8D85 28 FE        	jr z,$
 805  8D87 FB           	ei
 806  8D88
 807  8D88              ; Nueva nave.
 808  8D88
 809  8D88 CD FA 8D     	call Reinicia_Amadeus
 810  8D8B 18 19        	jr End_frame
 811  8D8D
 812  8D8D              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 813  8D8D
 814  8D8D              Amadeus_vivo
 815  8D8D
 816  8D8D 3A 71 89     	ld a,(Impacto_Amadeus)
 817  8D90 A7           	and a
 818  8D91 C4 13 92     	call nz, Genera_explosion_Amadeus
 819  8D94 20 10        	jr nz, End_frame
 820  8D96
 821  8D96 CD C0 91     	call Teclado
 822  8D99
 823  8D99 21 24 8C     	ld hl,Ctrl_3
 824  8D9C CB 6E        	bit 5,(hl)
 825  8D9E 28 06        	jr z,End_frame
 826  8DA0
 827  8DA0              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 828  8DA0
 829  8DA0 CD 6F 8E     	call Change_Amadeus
 830  8DA3 CD 29 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 831  8DA6
 832  8DA6              End_frame
 833  8DA6
 834  8DA6              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 835  8DA6              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 836  8DA6
 837  8DA6 CD 54 9F     	call Genera_datos_de_impresion_disparos_Entidades
 838  8DA9 CD EF A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 839  8DAC CD 43 A0     	call Calcula_bytes_pintado_disparos
 840  8DAF CD 50 A0     	call Limpia_album_de_pintado_disparos
 841  8DB2
 842  8DB2              ; ------------ ------------- --------------
 843  8DB2
 844  8DB2              ;	xor a
 845  8DB2              ;	ld (Permiso_de_disparo_Entidades),a
 846  8DB2
 847  8DB2 2A 07 8C     	ld hl,(Album_de_borrado)
 848  8DB5 22 1E 8C     	ld (Scanlines_album_SP),hl
 849  8DB8
 850  8DB8 21 24 8C     	ld hl,Ctrl_3
 851  8DBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 852  8DBD CB 9E        	res 3,(hl)
 853  8DBF CB A6        	res 4,(hl)
 854  8DC1
 855  8DC1 AF           	xor a
 856  8DC2 D3 FE        	out ($fe),a
 857  8DC4
 858  8DC4 76           	halt
 859  8DC5
 860  8DC5              ; ----------------------------------------
 861  8DC5
 862  8DC5              ;	ld a,(Ctrl_1) 										; Existe Loop?
 863  8DC5              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 864  8DC5 CA C0 8C     	jp z,Main
 865  8DC8
 866  8DC8              ;------------------------------------------
 867  8DC8              ;
 868  8DC8              ;	14/09/24
 869  8DC8
 870  8DC8              Autoriza_disparo_de_entidades
 871  8DC8
 872  8DC8 3E 01        	ld a,1
 873  8DCA 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 874  8DCD
 875  8DCD 3A 41 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 876  8DD0 32 42 8C     	ld (CLOCK_disparo_entidad),a
 877  8DD3
 878  8DD3 2A 3B 8C     	ld hl,(RND_SP_Disparos)
 879  8DD6
 880  8DD6 7E           2 ld a,(hl)
 881  8DD7 A7           	and a
 882  8DD8 28 08        	jr z,1F
 883  8DDA
 884  8DDA 32 3D 8C     	ld (DB_RND_disparos),a
 885  8DDD 23           	inc hl
 886  8DDE 22 3B 8C     	ld (RND_SP_Disparos),hl
 887  8DE1
 888  8DE1 C9           	ret
 889  8DE2
 890  8DE2 21 F6 88     1	ld hl,Numeros_aleatorios
 891  8DE5 22 3B 8C     	ld (RND_SP_Disparos),hl
 892  8DE8 18 EC        	jr 2B
 893  8DEA
 894  8DEA              ;------------------------------------------
 895  8DEA              ;
 896  8DEA              ;	14/09/24
 897  8DEA              ;
 898  8DEA              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 899  8DEA
 900  8DEA              Entidad_genera_disparo_si_procede
 901  8DEA
 902  8DEA 3A 3D 8C     	ld a,(DB_RND_disparos)
 903  8DED CB 4F        	bit 1,a
 904  8DEF F5           	push af											; Guardamos FLAGS.
 905  8DF0
 906  8DF0 17           	rla
 907  8DF1 17           	rla
 908  8DF2
 909  8DF2 32 3D 8C     	ld (DB_RND_disparos),a
 910  8DF5
 911  8DF5 F1           	pop af
 912  8DF6 C4 8E 9F     	call nz,Genera_disparo_de_entidad_maldosa
 913  8DF9
 914  8DF9 C9           	ret
 915  8DFA
 916  8DFA              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 917  8DFA              ;
 918  8DFA              ;	24/07/24
 919  8DFA
 920  8DFA              Reinicia_Amadeus
 921  8DFA
 922  8DFA              ;	Reinicia posición y estado.
 923  8DFA
 924  8DFA 21 CF 50     	ld hl,$50cf
 925  8DFD 22 72 89     	ld (p.imp.amadeus),hl
 926  8E00 21 F0 E0     	ld hl,$e0f0
 927  8E03 22 74 89     	ld (Pamm_Amadeus),hl
 928  8E06 21 3D 00     	ld hl,$003d
 929  8E09 22 76 89     	ld (Comm_Amadeus),hl
 930  8E0C
 931  8E0C              ;	limpiamos el álbum de borrado.
 932  8E0C
 933  8E0C 2A 0B 8C     	ld hl,(Album_de_borrado_Amadeus)
 934  8E0F
 935  8E0F AF           	xor a
 936  8E10 77           	ld (hl),a
 937  8E11
 938  8E11 E5           	push hl
 939  8E12 D1           	pop de
 940  8E13 13           	inc de
 941  8E14
 942  8E14 01 23 00     	ld bc,35
 943  8E17 ED B0        	ldir
 944  8E19
 945  8E19 CD 29 90     	call Genera_datos_de_impresion_Amadeus
 946  8E1C
 947  8E1C              ;	Reinicia temporizaciones.
 948  8E1C
 949  8E1C CD 06 91     	call Inicia_Shield
 950  8E1F
 951  8E1F 3E 5A        	ld a,90
 952  8E21 32 4E 8C     	ld (Shield),a
 953  8E24
 954  8E24 3E 64        	ld a,100
 955  8E26 32 38 8C     	ld (Temp_new_live),a
 956  8E29
 957  8E29              ; 	Restauramos el FLAG: Amadeus vivo.
 958  8E29
 959  8E29 21 24 8C     	ld hl,Ctrl_3
 960  8E2C CB B6        	res 6,(hl)
 961  8E2E
 962  8E2E              ;	Fuerza la impresión de la nave en el siguiente frame.
 963  8E2E
 964  8E2E 21 24 8C      	ld hl,Ctrl_3
 965  8E31 CB EE        	set 5,(hl)
 966  8E33
 967  8E33 C9           	ret
 968  8E34
 969  8E34              ; --------------------------------------------------------------------------------------------------------------
 970  8E34              ;
 971  8E34              ;	12/05/24
 972  8E34
 973  8E34 3A BF 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 974  8E37 CB 27        	sla a
 975  8E39 32 BF 8B     	ld (Velocidad),a
 976  8E3C E6 10        	and $10
 977  8E3E C8           	ret z
 978  8E3F
 979  8E3F              ; Restaura (Velocidad) a razón del nº de vueltas.
 980  8E3F
 981  8E3F 3A B7 8B     	ld a,(Contador_de_vueltas)
 982  8E42 CB 2F        	sra a
 983  8E44 CB 2F        	sra a
 984  8E46 32 BF 8B     	ld (Velocidad),a
 985  8E49
 986  8E49 2A BB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 987  8E4C 23           	inc hl
 988  8E4D 23           	inc hl
 989  8E4E 23           	inc hl
 990  8E4F 23           	inc hl
 991  8E50 22 BB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 992  8E53
 993  8E53 C9           	ret
 994  8E54
 995  8E54              ; --------------------------------------------------------------------------------------------------------------
 996  8E54              ;
 997  8E54              ;	25/08/24
 998  8E54
 999  8E54              Change
1000  8E54
1001  8E54 3A 1B 8C     	ld a,(Switch)
1002  8E57 EE 01        	xor 1
1003  8E59 32 1B 8C     	ld (Switch),a
1004  8E5C 2A 05 8C     	ld hl,(Album_de_pintado)
1005  8E5F ED 5B 07 8C  	ld de,(Album_de_borrado)
1006  8E63 EB           	ex de,hl
1007  8E64 22 05 8C     	ld (Album_de_pintado),hl
1008  8E67 22 1E 8C     	ld (Scanlines_album_SP),hl
1009  8E6A ED 53 07 8C  	ld (Album_de_borrado),de
1010  8E6E C9           	ret
1011  8E6F
1012  8E6F              Change_Amadeus
1013  8E6F
1014  8E6F 2A 09 8C     	ld hl,(Album_de_pintado_Amadeus)
1015  8E72 ED 5B 0B 8C  	ld de,(Album_de_borrado_Amadeus)
1016  8E76 EB           	ex de,hl
1017  8E77 22 09 8C     	ld (Album_de_pintado_Amadeus),hl
1018  8E7A ED 53 0B 8C  	ld (Album_de_borrado_Amadeus),de
1019  8E7E C9           	ret
1020  8E7F
1021  8E7F              Change_Disparos
1022  8E7F
1023  8E7F 2A 0D 8C     	ld hl,(Album_de_pintado_disparos)
1024  8E82 ED 5B 0F 8C  	ld de,(Album_de_borrado_disparos)
1025  8E86 EB           	ex de,hl
1026  8E87 22 0D 8C     	ld (Album_de_pintado_disparos),hl
1027  8E8A ED 53 0F 8C  	ld (Album_de_borrado_disparos),de
1028  8E8E 22 11 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1029  8E91
1030  8E91              ;	ld a,(Num_de_bytes_album_de_disparos)
1031  8E91              ;	ld (Num_de_bytes_album_de_disparos_2),a
1032  8E91
1033  8E91 C9           	ret
1034  8E92
1035  8E92              ; ------------------------------------
1036  8E92              ;
1037  8E92              ; 1/05/24
1038  8E92
1039  8E92              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1040  8E92              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1041  8E92
1042  8E92              ;	DESTRUYE: HL,DE,A
1043  8E92              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1044  8E92
1045  8E92              ;	Variables implicadas: (RND_SP).
1046  8E92
1047  8E92              Extrae_numero_aleatorio_y_avanza
1048  8E92
1049  8E92 21 00 89     	ld hl,Tabla_de_pintado
1050  8E95 EB           	ex de,hl
1051  8E96 2A 39 8C     	ld hl,(RND_SP)
1052  8E99 EB           	ex de,hl
1053  8E9A A7           	and a
1054  8E9B ED 52        	sbc hl,de
1055  8E9D
1056  8E9D 2A 39 8C     	ld hl,(RND_SP)
1057  8EA0 20 06        	jr nz,1F
1058  8EA2
1059  8EA2              ; Sitúa HL al principio de la tabla de nº aleatorios.
1060  8EA2
1061  8EA2 21 F6 88     	ld hl,Numeros_aleatorios
1062  8EA5 22 39 8C     	ld (RND_SP),HL
1063  8EA8
1064  8EA8              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1065  8EA8
1066  8EA8 7E           1 ld a,(hl)
1067  8EA9 23           	inc hl
1068  8EAA 22 39 8C     	ld (RND_SP),hl
1069  8EAD C9           	ret
1070  8EAE
1071  8EAE              ; ------------------------------------
1072  8EAE              ;
1073  8EAE              ; 1/05/24
1074  8EAE
1075  8EAE              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1076  8EAE              ; (1 a 4 segundos).
1077  8EAE              ; Actualizamos (Clock_next_entity) con A.
1078  8EAE
1079  8EAE              ;	DESTRUYE: A y B.
1080  8EAE              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1081  8EAE              ;			 Actualiza (Clock_next_entity) con A.
1082  8EAE
1083  8EAE              ;	Variables implicadas: (Clock_next_entity).
1084  8EAE
1085  8EAE              ; Notas:
1086  8EAE
1087  8EAE              ; 	$32 1 seg.
1088  8EAE              ; 	$64 2 seg.
1089  8EAE              ; 	$96 3 seg.
1090  8EAE              ; 	$c8 4 seg.
1091  8EAE              ; 	$fa 5 seg.
1092  8EAE
1093  8EAE              ; $ffff 1310,7 seg, 22 minutos.
1094  8EAE
1095  8EAE              ;	$0100  5 seg. aproximadamente.
1096  8EAE              ;	$0200 10 seg. aproximadamente.
1097  8EAE              ;	$0300 15 seg. aproximadamente.
1098  8EAE              ;	$0400 20 seg. aproximadamente.
1099  8EAE              ;	$0500 25 seg. aproximadamente.
1100  8EAE              ;	$0600 30 seg. aproximadamente.
1101  8EAE
1102  8EAE              Define_Clock_next_entity
1103  8EAE
1104  8EAE FE 34        	cp $34
1105  8EB0 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1106  8EB2
1107  8EB2              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1108  8EB2
1109  8EB2 4F           3 ld c,a
1110  8EB3 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1111  8EB5 2A 78 5C     	ld hl,(FRAMES)
1112  8EB8 A7           	and a
1113  8EB9 ED 4A        	adc hl,bc
1114  8EBB 22 3E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1115  8EBE C9           	ret
1116  8EBF
1117  8EBF 3E 34        1 ld a,$34
1118  8EC1 18 EF        	jr 3B
1119  8EC3
1120  8EC3              ; ------------------------------------
1121  8EC3              ;
1122  8EC3              ; 18/03/24
1123  8EC3
1124  8EC3              Borra_diferencia
1125  8EC3
1126  8EC3 ED 4B 1E 8C  	ld bc,(Scanlines_album_SP)
1127  8EC7
1128  8EC7 3A 1B 8C     	ld a,(Switch)
1129  8ECA A7           	and a
1130  8ECB 28 08        	jr z,2F
1131  8ECD
1132  8ECD 2A 19 8C     	ld hl,(Techo_Scanlines_album_2)
1133  8ED0 11 19 8C     	ld de,Techo_Scanlines_album_2
1134  8ED3 18 06        	jr 3F
1135  8ED5
1136  8ED5 2A 17 8C     2 ld hl,(Techo_Scanlines_album)
1137  8ED8 11 17 8C     	ld de,Techo_Scanlines_album
1138  8EDB
1139  8EDB              ; Diferencia.
1140  8EDB
1141  8EDB ED 42        3 sbc hl,bc
1142  8EDD
1143  8EDD C8           	ret z
1144  8EDE D8           	ret c
1145  8EDF
1146  8EDF              ; Nuevo techo, (más bajo que el anterior).
1147  8EDF              ; Fijamos nuevo techo y borramos bytes sobrantes.
1148  8EDF
1149  8EDF EB           	ex de,hl
1150  8EE0
1151  8EE0 71           	ld (hl),c
1152  8EE1 2C           	inc l
1153  8EE2 70           	ld (hl),b
1154  8EE3
1155  8EE3 AF           	xor a
1156  8EE4 43           	ld b,e
1157  8EE5
1158  8EE5 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1159  8EE8
1160  8EE8 77           1 ld (hl),a
1161  8EE9 23           	inc hl
1162  8EEA 10 FC        	djnz 1B
1163  8EEC
1164  8EEC              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1165  8EEC
1166  8EEC 21 24 8C     	ld hl,Ctrl_3
1167  8EEF CB DE        	set 3,(hl)
1168  8EF1
1169  8EF1 C9           	ret
1170  8EF2
1171  8EF2              ; --------------------------------------------------------------------------------------------------------------
1172  8EF2              ;
1173  8EF2              ;	26/3/24
1174  8EF2
1175  8EF2              Recauda_informacion_de_entidad_en_curso
1176  8EF2
1177  8EF2              ; Almacena la Coordenada Y de la entidad en curso.
1178  8EF2
1179  8EF2              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1180  8EF2
1181  8EF2 3A B6 8B     	ld a,(Coordenada_y)
1182  8EF5 2A 20 8C     	ld hl,(India_SP)
1183  8EF8 77           	ld (hl),a
1184  8EF9 2C           	inc l
1185  8EFA
1186  8EFA              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1187  8EFA
1188  8EFA ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
1189  8EFE
1190  8EFE 73           	ld (hl),e
1191  8EFF 2C           	inc l
1192  8F00 72           	ld (hl),d
1193  8F01 2C           	inc l
1194  8F02
1195  8F02 22 20 8C     	ld (India_SP),hl
1196  8F05
1197  8F05 C9           	ret
1198  8F06
1199  8F06              ; --------------------------------------------------------------------------------------------------------------
1200  8F06              ;
1201  8F06              ;	27/03/24
1202  8F06              ;
1203  8F06
1204  8F06              Inicializa_India_y_limpia_Tabla_de_impresion
1205  8F06
1206  8F06 2A 20 8C     	ld hl,(India_SP)
1207  8F09 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1208  8F0C
1209  8F0C 79           	ld a,c
1210  8F0D 95           	sub l
1211  8F0E 28 06        	jr z,2F
1212  8F10 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1213  8F11              ;														; _ y pasamos a inicializar (India_SP).
1214  8F11 AF           	xor a
1215  8F12
1216  8F12 77           1 ld (hl),a
1217  8F13 2C           	inc l
1218  8F14 10 FC        	djnz 1B												; Limpia Tabla.
1219  8F16
1220  8F16 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1221  8F19 22 20 8C     	ld (India_SP),hl
1222  8F1C
1223  8F1C C9           	ret
1224  8F1D
1225  8F1D              ; --------------------------------------------------------------------------------------------------------------
1226  8F1D              ;
1227  8F1D              ;	31/3/24
1228  8F1D
1229  8F1D              Ordena_tabla_de_impresion
1230  8F1D
1231  8F1D              ; 5794 T/states.
1232  8F1D              ; 6278 T/states.
1233  8F1D              ; 5310 T/states.
1234  8F1D
1235  8F1D              ; Inicializamos punteros (India_SP) e (India_2_SP).
1236  8F1D              ; Inicializamos contador de comparaciones, [C].
1237  8F1D              ; Cargamos los registros A y B para efectuar comparación.
1238  8F1D
1239  8F1D FD 2E 00     	ld iyl,0
1240  8F20
1241  8F20 3A FC 8B     	ld a,(Entidades_en_curso)
1242  8F23 FE 04        	cp 4 	;	4
1243  8F25 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1244  8F26
1245  8F26 3D           	dec a
1246  8F27 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1247  8F28 51           	ld d,c 										; Copia de respaldo.
1248  8F29
1249  8F29 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1250  8F2A
1251  8F2A 21 03 89     	ld hl,Tabla_de_pintado+3
1252  8F2D 46           	ld b,(hl)
1253  8F2E 22 22 8C     	ld (India_2_SP),hl
1254  8F31
1255  8F31 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1256  8F32 DC 5A 8F     	call c, Avanza_India_2_SP
1257  8F35 CC 5A 8F     	call z, Avanza_India_2_SP
1258  8F38
1259  8F38 FD 2D        	dec iyl
1260  8F3A 28 18        	jr z,2F
1261  8F3C
1262  8F3C
1263  8F3C              ; --------------------------------------------------------------------------------------------------------------
1264  8F3C              ;
1265  8F3C              ;	7/4/24
1266  8F3C
1267  8F3C              Trueque
1268  8F3C
1269  8F3C              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1270  8F3C              ;  			A contiene en nº de fila de (India_SP).
1271  8F3C              ;			HL contiene (India_2_SP).
1272  8F3C
1273  8F3C D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1274  8F3D E5           	push hl										; Preservo (India_2_SP).
1275  8F3E
1276  8F3E ED 5B 20 8C  	ld de,(India_SP)
1277  8F42 EB           	ex de,hl
1278  8F43 70           	ld (hl),b
1279  8F44 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1280  8F45
1281  8F45 CD 86 8F     	call Intercambia_1_byte
1282  8F48 CD 86 8F     	call Intercambia_1_byte
1283  8F4B
1284  8F4B
1285  8F4B              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1286  8F4B              ; Recuperamos (India_2_SP) en HL.
1287  8F4B
1288  8F4B 2A 20 8C     	ld hl,(India_SP)
1289  8F4E 7E           	ld a,(hl)
1290  8F4F
1291  8F4F E1           	pop hl
1292  8F50 D1           	pop de
1293  8F51
1294  8F51              ; --------------------------------------------------------------------------------------------------------------
1295  8F51
1296  8F51 CD 5A 8F     	call Avanza_India_2_SP
1297  8F54
1298  8F54 14           2 inc d
1299  8F55 15           	dec d
1300  8F56 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1301  8F57 18 D8        	jr 1B
1302  8F59
1303  8F59 C9           	ret
1304  8F5A
1305  8F5A              ; ----- ----- ----- ----- -----
1306  8F5A
1307  8F5A              Avanza_India_2_SP
1308  8F5A
1309  8F5A 0D           	dec c
1310  8F5B 28 0A        	jr z,Avanza_punteros_indios
1311  8F5D
1312  8F5D FD 2C        	inc iyl
1313  8F5F
1314  8F5F 2C           	inc l
1315  8F60 2C           	inc l
1316  8F61 2C           	inc l
1317  8F62
1318  8F62 46           	ld b,(hl)
1319  8F63 22 22 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1320  8F66
1321  8F66 C9           	ret
1322  8F67
1323  8F67              ; ----- ----- ----- ----- -----
1324  8F67
1325  8F67              Avanza_punteros_indios
1326  8F67
1327  8F67 15           	dec d
1328  8F68 28 15        	jr z,Prepara_salida
1329  8F6A
1330  8F6A 4A           	ld c,d
1331  8F6B
1332  8F6B 2A 20 8C     	ld hl,(India_SP)
1333  8F6E 2C           	inc l
1334  8F6F 2C           	inc l
1335  8F70 2C           	inc l
1336  8F71 7E           	ld a,(hl)
1337  8F72 22 20 8C     	ld (India_SP),hl
1338  8F75
1339  8F75 2C           	inc l
1340  8F76 2C           	inc l
1341  8F77 2C           	inc l
1342  8F78 46           	ld b,(hl)
1343  8F79 22 22 8C     	ld (India_2_SP),hl
1344  8F7C
1345  8F7C FD 2C        	inc iyl
1346  8F7E
1347  8F7E C9           	ret
1348  8F7F
1349  8F7F              Prepara_salida
1350  8F7F
1351  8F7F 21 00 89     	ld hl,Tabla_de_pintado
1352  8F82 22 20 8C     	ld (India_SP),hl
1353  8F85 C9           	ret
1354  8F86
1355  8F86
1356  8F86 2C           Intercambia_1_byte inc l
1357  8F87 1C           	inc e
1358  8F88 46           	ld b,(hl)
1359  8F89 1A           	ld a,(de)
1360  8F8A EB           	ex de,hl
1361  8F8B 70           	ld (hl),b
1362  8F8C 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1363  8F8D C9           	ret
1364  8F8E
1365  8F8E              ; -----------------------------------------------------------------------------------
1366  8F8E              ;
1367  8F8E              ;	20/01/24
1368  8F8E              ;
1369  8F8E              ;
1370  8F8E
1371  8F8E              Construye_movimientos_masticados_entidad
1372  8F8E
1373  8F8E 2A BB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1374  8F91 E5           	push hl
1375  8F92 CD D5 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1376  8F95              ;															; _ el (Contador_de_mov_masticados).
1377  8F95 CD 9E 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1378  8F98              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1379  8F98 CD D5 99     	call Recompone_posicion_inicio
1380  8F9B
1381  8F9B CD 05 97     1 call Draw
1382  8F9E CD BA 8F     	call Guarda_movimiento_masticado
1383  8FA1
1384  8FA1 CD 82 9D     	call Movimiento
1385  8FA4
1386  8FA4 3A 24 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1387  8FA7 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1388  8FA9 28 F0        	jr z,1B
1389  8FAB
1390  8FAB              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1391  8FAB              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1392  8FAB
1393  8FAB E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1394  8FAC 22 BB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1395  8FAF
1396  8FAF              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1397  8FAF
1398  8FAF CD E6 9E     	call Situa_en_contador_general_de_mov_masticados
1399  8FB2
1400  8FB2              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1401  8FB2              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1402  8FB2
1403  8FB2 ED 4B BD 8B  	ld bc,(Contador_de_mov_masticados)
1404  8FB6
1405  8FB6 71           	ld (hl),c
1406  8FB7 23           	inc hl
1407  8FB8 70           	ld (hl),b
1408  8FB9
1409  8FB9 C9           	ret
1410  8FBA
1411  8FBA              ; -----------------------------------------------------------------------------------
1412  8FBA              ;
1413  8FBA              ;	28/12/23
1414  8FBA              ;
1415  8FBA              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1416  8FBA              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1417  8FBA
1418  8FBA              Guarda_movimiento_masticado
1419  8FBA
1420  8FBA ED 73 01 8C  	ld (Stack),sp
1421  8FBE ED 7B BB 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1422  8FC2
1423  8FC2 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1424  8FC4 FD E5            push iy 												; Pushea Puntero_objeto.
1425  8FC6
1426  8FC6 ED 7B 01 8C      ld sp,(Stack)
1427  8FCA
1428  8FCA 2A BD 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1429  8FCD 23           	inc hl
1430  8FCE 22 BD 8B     	ld (Contador_de_mov_masticados),hl
1431  8FD1
1432  8FD1 CD D5 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1433  8FD4              ;															; _ el (Contador_de_mov_masticados).
1434  8FD4 C9               ret
1435  8FD5
1436  8FD5              ; --------------------------------------------------------------------------------------------------------------
1437  8FD5              ;
1438  8FD5              ;	12/1/24
1439  8FD5              ;
1440  8FD5              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1441  8FD5
1442  8FD5              Actualiza_Puntero_de_almacen_de_mov_masticados
1443  8FD5
1444  8FD5 2A BB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1445  8FD8 01 04 00     	ld bc,4
1446  8FDB A7           	and a
1447  8FDC ED 4A        	adc hl,bc
1448  8FDE 22 BB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1449  8FE1 C9           	ret
1450  8FE2
1451  8FE2              ; --------------------------------------------------------------------------------------------------------------
1452  8FE2              ;
1453  8FE2              ;	24/03/24
1454  8FE2              ;
1455  8FE2              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1456  8FE2              ;
1457  8FE2              ;	IX contiene el puntero de impresión.
1458  8FE2              ;	DE contiene (Puntero_objeto).
1459  8FE2
1460  8FE2
1461  8FE2              Cargamos_registros_con_mov_masticado
1462  8FE2
1463  8FE2 ED 73 01 8C  	ld (Stack),sp
1464  8FE6 ED 7B BB 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1465  8FEA
1466  8FEA D1           	pop de 															; DE contiene Puntero_objeto
1467  8FEB DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1468  8FED
1469  8FED ED 73 BB 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1470  8FF1 ED 7B 01 8C  	ld sp,(Stack)
1471  8FF5
1472  8FF5 7B           	ld a,e
1473  8FF6 82           	add d															; Comprueba si ya no hay datos en el almacén.
1474  8FF7
1475  8FF7 CC 8E 93     	call z,Reinicia_entidad_maliciosa
1476  8FFA
1477  8FFA C9           	ret
1478  8FFB
1479  8FFB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1480  8FFB              ;
1481  8FFB              ;	22/7/24
1482  8FFB
1483  8FFB              Cargamos_registros_con_explosion
1484  8FFB
1485  8FFB
1486  8FFB 2A BB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1487  8FFE CD 98 90     	call Extrae_address
1488  9001
1489  9001 5D           	ld e,l
1490  9002 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1491  9003
1492  9003 DD 2A B9 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1493  9007
1494  9007 C9           	ret
1495  9008
1496  9008
1497  9008              Cargamos_registros_con_explosion_Amadeus
1498  9008
1499  9008 2A 74 89     	ld hl,(Pamm_Amadeus)
1500  900B CD 98 90     	call Extrae_address
1501  900E
1502  900E 5D           	ld e,l
1503  900F 54           	ld d,h
1504  9010
1505  9010 DD 2A 72 89  	ld ix,(p.imp.amadeus)
1506  9014
1507  9014 C9           	ret
1508  9015
1509  9015              ; --------------------------------------------------------------------------------------------------------------
1510  9015              ;
1511  9015              ;	17/06/24
1512  9015              ;
1513  9015              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1514  9015              ;
1515  9015              ;	IX contiene el puntero de impresión.
1516  9015              ;	DE contiene (Puntero_objeto).
1517  9015
1518  9015
1519  9015              Cargamos_registros_con_mov_masticado_Amadeus
1520  9015
1521  9015 ED 73 01 8C  	ld (Stack),sp
1522  9019 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1523  901D D1           	pop de 															; DE contiene Puntero_objeto
1524  901E DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1525  9020 DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1526  9024 ED 7B 01 8C  	ld sp,(Stack)
1527  9028 C9           	ret
1528  9029
1529  9029              ; ---------------------------------------------------------------------------------------------------------------------
1530  9029              ;
1531  9029              ;	18/6/24
1532  9029              ;
1533  9029              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1534  9029
1535  9029              Genera_datos_de_impresion_Amadeus
1536  9029
1537  9029 3A 71 89     	ld a,(Impacto_Amadeus)
1538  902C A7           	and a
1539  902D 20 03        	jr nz,1F
1540  902F
1541  902F              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1542  902F              ; _apuntando a la correspondiente explosión.
1543  902F
1544  902F CD 15 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1545  9032
1546  9032 DD 7D        1 ld a,ixl
1547  9034 E6 1F        	and $1f
1548  9036 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1549  9039
1550  9039 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1551  903C E5           	push hl
1552  903D
1553  903D 2A 09 8C     	ld hl,(Album_de_pintado_Amadeus)
1554  9040 22 1E 8C     	ld (Scanlines_album_SP),hl
1555  9043
1556  9043 CD E3 94     	call Genera_datos_de_impresion
1557  9046
1558  9046 E1           	pop hl
1559  9047 22 1E 8C     	ld (Scanlines_album_SP),hl
1560  904A
1561  904A C9           	ret
1562  904B
1563  904B              ; ---------------------------------------------------------------------------------------------------------------------
1564  904B              ;
1565  904B              ;	13/03/24
1566  904B              ;
1567  904B              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1568  904B
1569  904B              Inicia_albumes_de_lineas
1570  904B
1571  904B 21 00 80     	ld hl,Scanlines_album
1572  904E 22 05 8C     	ld (Album_de_pintado),hl
1573  9051 22 1E 8C     	ld (Scanlines_album_SP),hl
1574  9054
1575  9054 21 1A 81     	ld hl,Scanlines_album_2
1576  9057 22 07 8C     	ld (Album_de_borrado),hl
1577  905A
1578  905A C9           	ret
1579  905B
1580  905B              Inicia_albumes_de_lineas_Amadeus
1581  905B
1582  905B 21 34 82     	ld hl,Amadeus_scanlines_album
1583  905E 22 09 8C     	ld (Album_de_pintado_Amadeus),hl
1584  9061 21 58 82     	ld hl,Amadeus_scanlines_album_2
1585  9064 22 0B 8C     	ld (Album_de_borrado_Amadeus),hl
1586  9067
1587  9067 C9           	ret
1588  9068
1589  9068              Inicia_albumes_de_disparos
1590  9068
1591  9068 21 7C 82     	ld hl,Disparos_scanlines_album
1592  906B 22 0D 8C     	ld (Album_de_pintado_disparos),hl
1593  906E 21 B8 82     	ld hl,Disparos_scanlines_album_2
1594  9071 22 0F 8C     	ld (Album_de_borrado_disparos),hl
1595  9074
1596  9074 21 7C 82     	ld hl,Disparos_scanlines_album
1597  9077 22 11 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1598  907A
1599  907A C9           	ret
1600  907B
1601  907B              ; ---------------------------------------------------------------------------------------------------------------------
1602  907B              ;
1603  907B              ; 8/1/23
1604  907B              ;
1605  907B              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1606  907B              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1607  907B              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1608  907B
1609  907B              ; Destruye HL y DE !!!!!
1610  907B
1611  907B              Inicia_punteros_de_cajas
1612  907B
1613  907B 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1614  907E CD 98 90         call Extrae_address
1615  9081 22 F4 8B         ld (Puntero_store_caja),hl
1616  9084 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1617  9087 22 F8 8B     	ld (Indice_restore_caja),hl
1618  908A CD 98 90     	call Extrae_address
1619  908D 22 F6 8B     	ld (Puntero_restore_caja),hl
1620  9090 C9               ret
1621  9091
1622  9091              ; *************************************************************************************************************************************************************
1623  9091              ;
1624  9091              ; 8/1/23
1625  9091              ;
1626  9091              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1627  9091
1628  9091 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1629  9094 22 27 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1630  9097 C9           	ret
1631  9098
1632  9098              ; *************************************************************************************************************************************************************
1633  9098              ;
1634  9098              ; 20/10/22
1635  9098              ;
1636  9098              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1637  9098              ;
1638  9098              ; Destruye el puntero y DE !!!!!
1639  9098
1640  9098 5E           Extrae_address ld e,(hl)
1641  9099 23           	inc hl
1642  909A 56           	ld d,(hl)
1643  909B 2B           	dec hl
1644  909C EB           	ex de,hl
1645  909D C9           	ret
1646  909E
1647  909E              ; *************************************************************************************************************************************************************
1648  909E              ;
1649  909E              ;	20/1/24
1650  909E              ;
1651  909E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1652  909E              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1653  909E              ;
1654  909E              ;   Destruye HL y BC !!!!!,
1655  909E              ;
1656  909E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1657  909E              ;					"0" ..... Izquierda.
1658  909E
1659  909E              Inicia_Puntero_objeto
1660  909E
1661  909E 3A D3 8B     	ld a,(Cuad_objeto)
1662  90A1 E6 01        	and 1
1663  90A3 F5           	push af
1664  90A4 CC C0 90     	call z,Inicia_puntero_objeto_izq
1665  90A7 F1           	pop af
1666  90A8 C8           	ret z
1667  90A9 CD AD 90     	call Inicia_puntero_objeto_der
1668  90AC C9           	ret
1669  90AD
1670  90AD              ; Arrancamos desde la parte izquierda de la pantalla.
1671  90AD              ; Iniciamos (Indice_Sprite_der).
1672  90AD
1673  90AD 2A C9 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1674  90B0 22 CD 8B     	ld (Puntero_DESPLZ_der),hl
1675  90B3 CD 98 90     	call Extrae_address
1676  90B6 22 C6 8B     	ld (Puntero_objeto),hl
1677  90B9
1678  90B9 2A CB 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1679  90BC 22 CF 8B     	ld (Puntero_DESPLZ_izq),hl
1680  90BF C9           	ret
1681  90C0
1682  90C0              ; Arrancamos desde la parte derecha de la pantalla.
1683  90C0              ; Iniciamos (Indice_Sprite_izq).
1684  90C0
1685  90C0 2A CB 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1686  90C3 22 CF 8B     	ld (Puntero_DESPLZ_izq),hl
1687  90C6 CD 98 90     	call Extrae_address
1688  90C9 22 C6 8B     	ld (Puntero_objeto),hl
1689  90CC
1690  90CC 2A C9 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1691  90CF 22 CD 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1692  90D2 C9           	ret
1693  90D3
1694  90D3              ; **************************************************************************************************
1695  90D3              ;
1696  90D3              ;	06/07/24
1697  90D3              ;
1698  90D3              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1699  90D3
1700  90D3              Restore_entidad
1701  90D3
1702  90D3 2A F4 8B     	ld hl,(Puntero_store_caja)
1703  90D6 7E           	ld a,(hl)
1704  90D7 A7           	and a
1705  90D8 CC E6 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1706  90DB 28 F6        	jr z,Restore_entidad
1707  90DD
1708  90DD 11 B4 8B     	ld de,Bandeja_DRAW
1709  90E0 01 0C 00     	ld bc,12
1710  90E3 ED B0        	ldir
1711  90E5 C9           	ret
1712  90E6
1713  90E6              ; **************************************************************************************************
1714  90E6              ;
1715  90E6              ;	08/05/23
1716  90E6              ;
1717  90E6              ;	Incrementamos los dos punteros de entidades. (+1).
1718  90E6
1719  90E6              Incrementa_punteros_de_cajas
1720  90E6
1721  90E6 2A F6 8B     	ld hl,(Puntero_restore_caja)
1722  90E9 22 F4 8B     	ld (Puntero_store_caja),hl
1723  90EC 2A F8 8B     	ld hl,(Indice_restore_caja)
1724  90EF 23           	inc hl
1725  90F0 23           	inc hl
1726  90F1 22 F8 8B     	ld (Indice_restore_caja),hl
1727  90F4 CD 98 90         call Extrae_address
1728  90F7 22 F6 8B         ld (Puntero_restore_caja),hl
1729  90FA C9               ret
1730  90FB
1731  90FB              ; -----------------------------------------------------------
1732  90FB
1733  90FB              ; Teclado.
1734  90FB
1735  90FB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1736  90FD DB FE        	in a,($fe)
1737  90FF E6 01        	and $01
1738  9101 28 02        	jr z,1f
1739  9103 18 F6        	jr Pulsa_ENTER
1740  9105 C9           1 ret
1741  9106
1742  9106              ; **************************************************************************************************
1743  9106              ;
1744  9106              ; Temporización.
1745  9106
1746  9106              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1747  9106              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1748  9106              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1749  9106              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1750  9106
1751  9106              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1752  9106              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1753  9106              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1754  9106
1755  9106              ; A partir de $4f61 no hace falta DELAY.
1756  9106
1757  9106              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1758  9106
1759  9106              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1760  9106              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1761  9106              ;	LD A,B
1762  9106              ;	AND A
1763  9106              ;	JR NZ,wait
1764  9106              ;	RET
1765  9106
1766  9106              ; ---------------------------------------------------------------------------------------------------------------
1767  9106              ;
1768  9106              ;	13/07/24
1769  9106              ;
1770  9106
1771  9106              Inicia_Shield
1772  9106
1773  9106 21 48 8C     	ld hl,Datos_Shield
1774  9109 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1775  910C
1776  910C 7E           	ld a,(hl)
1777  910D 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1778  9110
1779  9110 3E 01        	ld a,1
1780  9112 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1781  9115
1782  9115 C9           	ret
1783  9116
1784  9116              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1785  9116              ;
1786  9116              ;	4/6/24
1787  9116              ;
1788  9116              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1789  9116              ;
1790  9116              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1791  9116              ;
1792  9116
1793  9116              Actualiza_pantalla
1794  9116
1795  9116 3E 02        	ld a,2
1796  9118 D3 FE        	out ($fe),a
1797  911A
1798  911A 3A 24 8C     	ld a,(Ctrl_3)
1799  911D CB 57        	bit 2,a
1800  911F 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1801  9121
1802  9121              Borrando_entidades
1803  9121
1804  9121 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1805  9124 CD 98 90     	call Extrae_address
1806  9127 24           	inc h
1807  9128 25           	dec h
1808  9129 28 05        	jr z,Pintando_entidades
1809  912B CD E2 95     	call Pinta_Sprites
1810  912E 18 F1        	jr Borrando_entidades
1811  9130
1812  9130              Pintando_entidades
1813  9130
1814  9130 2A 20 8C     	ld hl,(India_SP)
1815  9133 2C           	inc l
1816  9134 CD 98 90     	call Extrae_address
1817  9137 24           	inc h
1818  9138 25           	dec h
1819  9139 28 0E        	jr z,Ejecuta_escudo
1820  913B 1C           	inc e
1821  913C 1C           	inc e
1822  913D ED 53 20 8C  	ld (India_SP),de
1823  9141 CD 98 90     	call Extrae_address
1824  9144 CD E2 95     	call Pinta_Sprites
1825  9147 18 E7        	jr Pintando_entidades
1826  9149
1827  9149              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1828  9149
1829  9149              Ejecuta_escudo
1830  9149
1831  9149 3A 4E 8C     	ld a,(Shield)
1832  914C A7           	and a
1833  914D 20 2F        	jr nz,Aplica_Shield
1834  914F
1835  914F              Borrando_Amadeus
1836  914F
1837  914F 21 24 8C     	ld hl,Ctrl_3
1838  9152 CB 6E        	bit 5,(hl)
1839  9154 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1840  9156
1841  9156 2A 0B 8C     	ld hl,(Album_de_borrado_Amadeus)
1842  9159 CD 98 90     	call Extrae_address
1843  915C 24           	inc h
1844  915D 25           	dec h
1845  915E 28 03        	jr z,Pintando_Amadeus
1846  9160 CD E2 95     	call Pinta_Sprites
1847  9163
1848  9163              Pintando_Amadeus
1849  9163
1850  9163 2A 09 8C     	ld hl,(Album_de_pintado_Amadeus)
1851  9166 CD 98 90     	call Extrae_address
1852  9169 24           	inc h
1853  916A 25           	dec h
1854  916B 28 03        	jr z,1F
1855  916D CD E2 95     	call Pinta_Sprites
1856  9170
1857  9170              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1858  9170
1859  9170 21 24 8C     1 ld hl,Ctrl_3
1860  9173 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1861  9175 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1862  9177 CB AE        	res 5,(hl)
1863  9179
1864  9179 3E 01        	ld a,1												; Borde azul.
1865  917B D3 FE        	out ($fe),a
1866  917D
1867  917D C9           	ret
1868  917E
1869  917E              Aplica_Shield
1870  917E
1871  917E              ;	Bit 1 "1" (Shield_3) Sólo borra.
1872  917E              ;		  "0"     ""     Borra/Pinta.
1873  917E              ;	Bit 2    ""  RET.	 No borra, no pinta.
1874  917E
1875  917E 21 50 8C     	ld hl,Shield_3
1876  9181
1877  9181 CB 5E        	bit 3,(hl)
1878  9183 20 DE        	jr nz,Pintando_Amadeus
1879  9185
1880  9185 CB 56        	bit 2,(hl)
1881  9187 20 E7        	jr nz,1B
1882  9189
1883  9189 CB 4E        	bit 1,(hl)
1884  918B C4 92 91     	call nz,Borra_Amadeus_shield
1885  918E
1886  918E 28 BF        	jr z,Borrando_Amadeus
1887  9190 18 DE        	jr 1B
1888  9192
1889  9192              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1890  9192
1891  9192              Borra_Amadeus_shield
1892  9192
1893  9192 3A 24 8C     	ld a,(Ctrl_3)
1894  9195 CB 6F        	bit 5,a
1895  9197 28 08        	jr z,1F
1896  9199
1897  9199 2A 0B 8C     	ld hl,(Album_de_borrado_Amadeus)
1898  919C CD 98 90     	call Extrae_address
1899  919F 18 06        	jr 2F
1900  91A1
1901  91A1 2A 09 8C     1 ld hl,(Album_de_pintado_Amadeus)
1902  91A4 CD 98 90     	call Extrae_address
1903  91A7
1904  91A7 CD E2 95     2 call Pinta_Sprites
1905  91AA
1906  91AA AF           	xor a
1907  91AB 3C           	inc a											; Asegura NZ en la salida de la rutina.
1908  91AC
1909  91AC C9           	ret
1910  91AD
1911  91AD              Pinta_Amadeus_shield
1912  91AD
1913  91AD 2A 09 8C     	ld hl,(Album_de_pintado_Amadeus)
1914  91B0 CD 98 90     	call Extrae_address
1915  91B3 CD E2 95     	call Pinta_Sprites
1916  91B6
1917  91B6 AF           	xor a
1918  91B7 3C           	inc a											; Asegura NZ en la salida de la rutina.
1919  91B8
1920  91B8 C9           	ret
1921  91B9
1922  91B9              Borra_Pinta_Amadeus_shield
1923  91B9
1924  91B9 CD 92 91     	call Borra_Amadeus_shield
1925  91BC CD AD 91     	call Pinta_Amadeus_shield
1926  91BF C9           	ret
1927  91C0
1928  91C0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1929  91C0              ;
1930  91C0              ;	19/6/24
1931  91C0              ;
1932  91C0
1933  91C0              Teclado
1934  91C0
1935  91C0              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1936  91C0
1937  91C0 3E F7        	ld a,$f7												; "5" para disparar.
1938  91C2 DB FE        	in a,($fe)
1939  91C4 E6 10        	and $10
1940  91C6
1941  91C6 CC 12 A1     	call z,Genera_disparo_Amadeus
1942  91C9
1943  91C9 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1944  91CB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1945  91CD E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1946  91CF CC 4F 9D         call z,Amadeus_a_izquierda
1947  91D2
1948  91D2 3E F7        	ld a,$f7
1949  91D4 DB FE        	in a,($fe)
1950  91D6 E6 01        	and $01
1951  91D8 C8           	ret z
1952  91D9
1953  91D9 3E F7        	ld a,$f7
1954  91DB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1955  91DD E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1956  91DF CC 67 9D     	call z,Amadeus_a_derecha
1957  91E2
1958  91E2 C9           	ret
1959  91E3
1960  91E3              ; ------------------------------------------------------------------------------------------------------------------------
1961  91E3              ;
1962  91E3              ;	06/07/24
1963  91E3              ;
1964  91E3
1965  91E3              Genera_explosion
1966  91E3
1967  91E3 21 36 8C     	ld hl,Clock_explosion
1968  91E6 35           	dec (hl)
1969  91E7 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1970  91E9
1971  91E9              Borra_entidad_colisionada
1972  91E9
1973  91E9 CD F2 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1974  91EC CD FB 8F     	call Cargamos_registros_con_explosion
1975  91EF CD E3 94     	call Genera_datos_de_impresion
1976  91F2
1977  91F2 AF           	xor a
1978  91F3 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1979  91F4
1980  91F4 C9           	ret
1981  91F5
1982  91F5              Siguiente_frame_explosion
1983  91F5
1984  91F5 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1985  91F7
1986  91F7              ; Avanza Frame de explosión.
1987  91F7
1988  91F7 2A BB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1989  91FA 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1990  91FD
1991  91FD 79           	ld a,c
1992  91FE 95           	sub l
1993  91FF 20 0B        	jr nz,1F
1994  9201
1995  9201              ; Fín de la entidad !!!!!!!!!!!!!
1996  9201
1997  9201 21 FB 8B     	ld hl,Numero_parcial_de_entidades
1998  9204 35           	dec (hl)
1999  9205 23           	inc hl
2000  9206 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2001  9207
2002  9207 CD 63 93     	call Limpiamos_bandeja_DRAW
2003  920A 18 DD        	jr Borra_entidad_colisionada
2004  920C
2005  920C 23           1 inc hl
2006  920D 23           	inc hl
2007  920E 22 BB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2008  9211 18 D6        	jr Borra_entidad_colisionada
2009  9213
2010  9213              ; ----- ----- ----- ----- -----
2011  9213
2012  9213              Genera_explosion_Amadeus
2013  9213
2014  9213 21 37 8C     	ld hl,Clock_explosion_Amadeus
2015  9216 35           	dec (hl)
2016  9217 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2017  9219
2018  9219              Borra_Amadeus_impactado
2019  9219
2020  9219 CD 6F 8E     	call Change_Amadeus
2021  921C CD 08 90     	call Cargamos_registros_con_explosion_Amadeus
2022  921F CD 29 90     	call Genera_datos_de_impresion_Amadeus
2023  9222
2024  9222 21 24 8C     	ld hl,Ctrl_3
2025  9225 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2026  9227
2027  9227 AF           	xor a
2028  9228 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2029  9229
2030  9229 C9           	ret
2031  922A
2032  922A              Siguiente_frame_explosion_Amadeus
2033  922A
2034  922A 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2035  922C
2036  922C              ; Avanza Frame de explosión.
2037  922C
2038  922C 2A 74 89     	ld hl,(Pamm_Amadeus)
2039  922F 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2040  9232
2041  9232 79           	ld a,c
2042  9233 95           	sub l
2043  9234 20 0B        	jr nz,1F
2044  9236
2045  9236              ; Fín de Amadeus !!!!!!!!!!!!!
2046  9236              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2047  9236
2048  9236 AF           	xor a
2049  9237 32 71 89     	ld (Impacto_Amadeus),a
2050  923A 21 24 8C     	ld hl,Ctrl_3
2051  923D CB F6        	set 6,(hl)
2052  923F
2053  923F 18 D8        	jr Borra_Amadeus_impactado
2054  9241
2055  9241 23           1 inc hl
2056  9242 23           	inc hl
2057  9243 22 74 89     	ld (Pamm_Amadeus),hl
2058  9246 18 D1        	jr Borra_Amadeus_impactado
2059  9248
2060  9248              ; ---------------------------------------------------------------
2061  9248
2062  9248              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9248              ; ******************************************************************************************************************************************************************************************
   2+ 9248              ;
   3+ 9248              ;   21/04/24
   4+ 9248              ;
   5+ 9248              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9248              ;   (XOR) bit a bit.
   7+ 9248              ;
   8+ 9248              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9248
  10+ 9248              Derivando_RND
  11+ 9248
  12+ 9248 21 F6 88         ld hl,Numeros_aleatorios
  13+ 924B
  14+ 924B ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 924D C5               push bc
  16+ 924E              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 924E 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9251              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9251
  20+ 9251 A7           6 and a                                 ; Carry a "0".
  21+ 9252 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9254 30 02            jr nc,1F
  23+ 9256
  24+ 9256 CB C1            set 0,c
  25+ 9258
  26+ 9258 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9259 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 925B 5F               ld e,a
  29+ 925C
  30+ 925C 7A               ld a,d
  31+ 925D E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 925F 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9261
  34+ 9261 CB 3F            srl a
  35+ 9263
  36+ 9263 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9264
  38+ 9264 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9265 28 04            jr z,4F
  40+ 9267
  41+ 9267 CB FF            set 7,a
  42+ 9269 18 02            jr 5F
  43+ 926B
  44+ 926B CB BF        4 res 7,a
  45+ 926D
  46+ 926D CB 21        5 sla c
  47+ 926F 10 E0            djnz 6B
  48+ 9271
  49+ 9271 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9272
  51+ 9272 77               ld (hl),a
  52+ 9273 23               inc hl
  53+ 9274 C1               pop bc
  54+ 9275 10 D4            djnz 3B
  55+ 9277
  56+ 9277 C9               ret
  57+ 9278
  58+ 9278
  59+ 9278
# file closed: RND_Derivando.asm
2063  9278              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9278              ;---------------------------------------------------------------------------------------------------------------
   2+ 9278              ;
   3+ 9278              ;   8/3/24
   4+ 9278              ;
   5+ 9278              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9278              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9278              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9278              ;	_ de la 1ª entidad del Nivel.
   9+ 9278              ;
  10+ 9278              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9278
  12+ 9278              ;	MODIFICA: HL,DE y A.
  13+ 9278              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9278
  15+ 9278              Inicializa_Nivel
  16+ 9278
  17+ 9278 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 927B CD 98 90     	call Extrae_address
  19+ 927E 7E           	ld a,(hl)
  20+ 927F 32 FA 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9282 23           	inc hl
  22+ 9283 CD 90 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9286 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9289 CD 99 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 928C
  26+ 928C CD AA 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 928F C9           	ret
  28+ 9290
  29+ 9290              ; ----------------------
  30+ 9290
  31+ 9290 11 D9 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9293 01 04 00     	ld bc,4
  33+ 9296 ED B0        	ldir
  34+ 9298 C9           	ret
  35+ 9299
  36+ 9299 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 929A CD 34 94         call Calcula_salto_en_BC
  38+ 929D 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92A0 A7               and a
  40+ 92A1 ED 4A            adc hl,bc
  41+ 92A3 CD 98 90         call Extrae_address
  42+ 92A6 22 E5 8B         ld (Puntero_indice_mov),hl
  43+ 92A9 C9               ret
  44+ 92AA
  45+ 92AA 3A B4 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92AD CD 34 94     	call Calcula_salto_en_BC
  47+ 92B0 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92B3 A7               and a
  49+ 92B4 ED 4A            adc hl,bc
  50+ 92B6 CD 98 90         call Extrae_address
  51+ 92B9 22 BB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92BC C9           	ret
  53+ 92BD
  54+ 92BD              ;---------------------------------------------------------------------------------------------------------------
  55+ 92BD              ;
  56+ 92BD              ;   5/1/24
  57+ 92BD              ;
  58+ 92BD              ;	Destruye A,BC,HL,DE
  59+ 92BD
  60+ 92BD              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92BD              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92BD
  63+ 92BD              Inicia_Entidades
  64+ 92BD
  65+ 92BD              ; Preparamos los punteros de las cajas de entidades:
  66+ 92BD
  67+ 92BD CD 7B 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92C0              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92C0 CD 7C 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92C3
  71+ 92C3 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92C6
  73+ 92C6 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92C9
  75+ 92C9 CD E2 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92CC
  77+ 92CC 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 92CF
  79+ 92CF              ; En este punto:
  80+ 92CF              ;
  81+ 92CF              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92CF              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92CF
  84+ 92CF C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92D0
  86+ 92D0 7E           	ld a,(hl)
  87+ 92D1 CD 4E 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92D4
  89+ 92D4 CD 46 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92D7
  91+ 92D7              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92D7
  93+ 92D7 CD 04 94     	call Busca_mov_masticados_segun_tipo
  94+ 92DA
  95+ 92DA A7           	and a
  96+ 92DB 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92DD
  98+ 92DD              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92DD
 100+ 92DD              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92DD              ;	_ de este tipo de entidad.
 102+ 92DD
 103+ 92DD CD E6 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92E0 CD F3 9E     	call Transfiere_datos_de_contadores
 105+ 92E3
 106+ 92E3 18 06        	jr 4F
 107+ 92E5
 108+ 92E5 CD 8E 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92E8
 110+ 92E8              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92E8              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92E8              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92E8              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92E8              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92E8
 116+ 92E8 CD C2 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92EB              ;																; _ Mov_masticados ya generados.
 118+ 92EB
 119+ 92EB CD E2 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92EE
 121+ 92EE DD E5        	push ix
 122+ 92F0 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92F1
 124+ 92F1 D5           	push de
 125+ 92F2 CD B7 94     	call Genera_coordenadas
 126+ 92F5
 127+ 92F5 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 128+ 92F9 CD F2 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92FC D1           	pop de
 130+ 92FD
 131+ 92FD CD E3 94     	call Genera_datos_de_impresion
 132+ 9300              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9300              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9300              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9300              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9300
 137+ 9300 CD 86 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9303
 139+ 9303              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9303
 141+ 9303 ED 5B F4 8B  	ld de,(Puntero_store_caja)
 142+ 9307 CD 73 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 930A
 144+ 930A CD 63 93     	call Limpiamos_bandeja_DRAW
 145+ 930D CD E6 90     	call Incrementa_punteros_de_cajas
 146+ 9310
 147+ 9310              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9310              ; _ entidad del Nivel.
 149+ 9310
 150+ 9310 3A 25 8C     	ld a,(Ctrl_4)
 151+ 9313 E6 F0        	and $f0
 152+ 9315 32 25 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9318
 154+ 9318              ; Siguiente entidad del Nivel.
 155+ 9318
 156+ 9318 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 931B 23           	inc hl 														; _ entidad del Nivel.
 158+ 931C
 159+ 931C C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 931D
 161+ 931D 10 A7        	djnz 2B
 162+ 931F
 163+ 931F C9           	ret
 164+ 9320
 165+ 9320              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9320              ;
 167+ 9320              ;	27/5/24
 168+ 9320              ;
 169+ 9320              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9320              ;
 171+ 9320
 172+ 9320              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9320              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9320
 175+ 9320 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9323 CD 46 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9326
 178+ 9326
 179+ 9326              Construye_movimientos_masticados_Amadeus
 180+ 9326
 181+ 9326 2A BB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9329 CD D5 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 932C              ;															; _ el (Contador_de_mov_masticados).
 184+ 932C CD 9E 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 932F              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 932F
 187+ 932F              ; Generamos movimientos masticados de Amadeus.
 188+ 932F
 189+ 932F 06 79        	ld b,121												; $0079, 121d.
 190+ 9331
 191+ 9331 C5           1 push bc
 192+ 9332 CD 05 97     	call Draw
 193+ 9335 CD BA 8F     	call Guarda_movimiento_masticado
 194+ 9338
 195+ 9338 CD 79 9A     	call Mov_right
 196+ 933B CD 79 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 933E
 198+ 933E C1           	pop bc
 199+ 933F 10 F0        	djnz 1B
 200+ 9341
 201+ 9341              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9341
 203+ 9341              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9341              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9341
 206+ 9341 2A BB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9344 01 08 00     	ld bc,8
 208+ 9347 A7           	and a
 209+ 9348 ED 42        	sbc hl,bc
 210+ 934A 22 BB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 934D
 212+ 934D C9           	ret
 213+ 934E
 214+ 934E              ; ---------------------------------------------------------------------
 215+ 934E              ;
 216+ 934E              ;	10/02/24
 217+ 934E              ;
 218+ 934E              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 934E              ;
 220+ 934E              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 934E
 222+ 934E              Definicion_segun_tipo
 223+ 934E
 224+ 934E CD 34 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9351 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9354 CD 3C 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9357 C9           	ret
 228+ 9358
 229+ 9358              ; ---------------------------------------------------------------------
 230+ 9358              ;
 231+ 9358              ;	6/7/24
 232+ 9358
 233+ 9358
 234+ 9358              Store_Restore_cajas
 235+ 9358
 236+ 9358 ED 5B F4 8B  	ld de,(Puntero_store_caja)
 237+ 935C CD 73 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 935F CD E6 90     	call Incrementa_punteros_de_cajas
 239+ 9362 C9           	ret
 240+ 9363
 241+ 9363              ; ---------------------------------------------------------------------
 242+ 9363              ;
 243+ 9363              ;	23/6/24
 244+ 9363              ;
 245+ 9363              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9363              ;
 247+ 9363              ;	MODIFY: HL
 248+ 9363
 249+ 9363              Limpiamos_bandeja_DRAW
 250+ 9363
 251+ 9363 ED 73 01 8C  	ld (Stack),sp
 252+ 9367 31 D9 8B     	ld sp,Vel_left
 253+ 936A
 254+ 936A AF           	xor a
 255+ 936B 67           	ld h,a
 256+ 936C 6F           	ld l,a
 257+ 936D
 258+ 936D E5           	push hl
 259+ 936E E5           	push hl
 260+ 936F E5           	push hl
 261+ 9370 E5           	push hl
 262+ 9371 E5           	push hl
 263+ 9372 E5           	push hl
 264+ 9373 E5           	push hl
 265+ 9374 E5           	push hl
 266+ 9375 E5           	push hl
 267+ 9376 E5           	push hl
 268+ 9377 E5           	push hl
 269+ 9378 E5           	push hl
 270+ 9379 E5           	push hl
 271+ 937A E5           	push hl
 272+ 937B E5           	push hl
 273+ 937C E5           	push hl
 274+ 937D E5           	push hl
 275+ 937E E5           	push hl
 276+ 937F
 277+ 937F 33           	inc sp
 278+ 9380
 279+ 9380 E5           	push hl
 280+ 9381 ED 7B 01 8C  	ld sp,(Stack)
 281+ 9385
 282+ 9385 C9           	ret
 283+ 9386
 284+ 9386              ; ---------------------------------------------------------------------
 285+ 9386              ;
 286+ 9386              ;	24/03/24
 287+ 9386
 288+ 9386 2A BD 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9389 2B           	dec hl
 290+ 938A 22 BD 8B     	ld (Contador_de_mov_masticados),hl
 291+ 938D C9           	ret
 292+ 938E
 293+ 938E              ; ---------------------------------------------------------------------
 294+ 938E              ;
 295+ 938E              ;	8/5/24
 296+ 938E
 297+ 938E              Reinicia_entidad_maliciosa
 298+ 938E
 299+ 938E              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 938E
 301+ 938E CD E6 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9391 CD F3 9E     	call Transfiere_datos_de_contadores
 303+ 9394
 304+ 9394              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9394
 306+ 9394 3A B4 8B     	ld a,(Tipo)
 307+ 9397 CD 4E 93     	call Definicion_segun_tipo
 308+ 939A
 309+ 939A E5           	push hl
 310+ 939B DD E1        	pop ix
 311+ 939D
 312+ 939D DD 6E 0B     	ld l,(ix+11)
 313+ 93A0 DD 66 0C     	ld h,(ix+12)
 314+ 93A3
 315+ 93A3 22 BB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93A6
 317+ 93A6 CD E2 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93A9
 319+ 93A9              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93A9              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93A9              ; Ejemplos.
 322+ 93A9
 323+ 93A9              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93A9              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93A9              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93A9              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93A9              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93A9
 329+ 93A9 21 B7 8B     	ld hl,Contador_de_vueltas
 330+ 93AC CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93AE
 332+ 93AE 7E           	ld a,(hl)
 333+ 93AF CB 2F        	sra a
 334+ 93B1 CB 2F        	sra a
 335+ 93B3
 336+ 93B3 32 BF 8B     	ld (Velocidad),a
 337+ 93B6
 338+ 93B6 3E 40        	ld a,$40
 339+ 93B8 BE           	cp (hl)
 340+ 93B9 C0           	ret nz
 341+ 93BA
 342+ 93BA              ; Límitador.
 343+ 93BA
 344+ 93BA              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93BA
 346+ 93BA CB 2E        	sra (hl)
 347+ 93BC 21 BF 8B     	ld hl,Velocidad
 348+ 93BF CB 2E        	sra (hl)
 349+ 93C1
 350+ 93C1 C9           	ret
 351+ 93C2
 352+ 93C2              ; ---------------------------------------------------------------------
 353+ 93C2              ;
 354+ 93C2              ;	22/01/24
 355+ 93C2
 356+ 93C2 21 25 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93C5 CB 46        	bit 0,(hl)
 358+ 93C7 20 0D        	jr nz,1F
 359+ 93C9 CB 4E        	bit 1,(hl)
 360+ 93CB 20 0C        	jr nz,2F
 361+ 93CD CB 56        	bit 2,(hl)
 362+ 93CF 20 0B        	jr nz,3F
 363+ 93D1 CB 5E        	bit 3,(hl)
 364+ 93D3 20 0A        	jr nz,4F
 365+ 93D5 C9           	ret
 366+ 93D6
 367+ 93D6 CB E6        1 set 4,(hl)
 368+ 93D8 C9           	ret
 369+ 93D9 CB EE        2 set 5,(hl)
 370+ 93DB C9           	ret
 371+ 93DC CB F6        3 set 6,(hl)
 372+ 93DE C9           	ret
 373+ 93DF CB FE        4 set 7,(hl)
 374+ 93E1 C9           	ret
 375+ 93E2
 376+ 93E2              ; ---------------------------------------------------------------------
 377+ 93E2              ;
 378+ 93E2              ;	23/01/24
 379+ 93E2              ;
 380+ 93E2              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93E2              ;
 382+ 93E2              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93E2              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93E2              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93E2              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93E2
 387+ 93E2              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93E2
 389+ 93E2 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93E3 3D           	dec a
 391+ 93E4 20 06        	jr nz,1F
 392+ 93E6
 393+ 93E6              ; --- Tipo_1
 394+ 93E6
 395+ 93E6 21 25 8C     	ld hl,Ctrl_4
 396+ 93E9 CB C6        	set 0,(hl)
 397+ 93EB C9           	ret
 398+ 93EC
 399+ 93EC 3D           1 dec a
 400+ 93ED 20 06        	jr nz,2F
 401+ 93EF
 402+ 93EF              ; --- Tipo_2
 403+ 93EF
 404+ 93EF 21 25 8C     	ld hl,Ctrl_4
 405+ 93F2 CB CE        	set 1,(hl)
 406+ 93F4 C9           	ret
 407+ 93F5
 408+ 93F5 3D           2 dec a
 409+ 93F6 20 06        	jr nz,3F
 410+ 93F8
 411+ 93F8              ; --- Tipo_3
 412+ 93F8
 413+ 93F8 21 25 8C     	ld hl,Ctrl_4
 414+ 93FB CB D6        	set 2,(hl)
 415+ 93FD C9           	ret
 416+ 93FE
 417+ 93FE              ; --- Tipo_3
 418+ 93FE
 419+ 93FE 21 25 8C     3 ld hl,Ctrl_4
 420+ 9401 CB D6        	set 2,(hl)
 421+ 9403 C9           	ret
 422+ 9404
 423+ 9404              ; ---------------------------------------------------------------------
 424+ 9404              ;
 425+ 9404              ;	22/01/24
 426+ 9404
 427+ 9404 21 25 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9407 CB 46        	bit 0,(hl)
 429+ 9409 20 0E        	jr nz,1F
 430+ 940B
 431+ 940B CB 4E        	bit 1,(hl)
 432+ 940D 20 10        	jr nz,2F
 433+ 940F
 434+ 940F CB 56        	bit 2,(hl)
 435+ 9411 20 12        	jr nz,3F
 436+ 9413
 437+ 9413 CB 5E        	bit 3,(hl)
 438+ 9415 20 14        	jr nz,4F
 439+ 9417 18 19        	jr 6F
 440+ 9419
 441+ 9419              ; Entidad_de_Tipo_1.
 442+ 9419
 443+ 9419 CB 66        1 bit 4,(hl)
 444+ 941B 28 15        	jr z,6F
 445+ 941D 18 10        	jr 5F
 446+ 941F
 447+ 941F              ; Entidad_de_Tipo_2.
 448+ 941F
 449+ 941F CB 6E        2 bit 5,(hl)
 450+ 9421 28 0F        	jr z,6F
 451+ 9423 18 0A        	jr 5F
 452+ 9425
 453+ 9425              ; Entidad_de_Tipo_3.
 454+ 9425
 455+ 9425 CB 76        3 bit 6,(hl)
 456+ 9427 28 09        	jr z,6F
 457+ 9429 18 04        	jr 5F
 458+ 942B
 459+ 942B              ; Entidad_de_Tipo_4.
 460+ 942B
 461+ 942B CB 7E        4 bit 7,(hl)
 462+ 942D 28 03        	jr z,6F
 463+ 942F
 464+ 942F              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 942F
 466+ 942F AF           5 xor a
 467+ 9430 3C           	inc a
 468+ 9431 C9           	ret
 469+ 9432
 470+ 9432              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9432
 472+ 9432 AF           6 xor a
 473+ 9433 C9           	ret
 474+ 9434
 475+ 9434              ;	------------------------------------------------------------------------------------
 476+ 9434              ;
 477+ 9434              ;	12/01/24
 478+ 9434              ;
 479+ 9434              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9434              ;
 481+ 9434              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9434              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9434
 484+ 9434 CB 27        Calcula_salto_en_BC sla a
 485+ 9436 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9438 4F           	ld c,a
 487+ 9439 06 00        	ld b,0
 488+ 943B C9           	ret
 489+ 943C
 490+ 943C              ; ------------------------------------------------------------------
 491+ 943C              ;
 492+ 943C              ;	19/1/24
 493+ 943C              ;
 494+ 943C              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 943C              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 943C
 497+ 943C A7           Situa_en_datos_de_definicion and a
 498+ 943D ED 4A        	adc hl,bc
 499+ 943F CD 98 90     	call Extrae_address
 500+ 9442 22 FF 8B         ld (Datos_de_entidad),hl
 501+ 9445 C9           	ret
 502+ 9446
 503+ 9446              ; ------------------------------------------------------------------
 504+ 9446
 505+ 9446              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9446              ; 	inc de
 507+ 9446              ; 	inc de
 508+ 9446              ; 	ex de,hl
 509+ 9446              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9446              ; 	ret
 511+ 9446
 512+ 9446              ; ----------------------------------------------------------------------------------------------------------
 513+ 9446              ;
 514+ 9446              ;	24/6/24
 515+ 9446              ;
 516+ 9446              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9446              ;	_ de entidad.
 518+ 9446              ;
 519+ 9446              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9446              ;
 521+ 9446              ;
 522+ 9446              ;	MODIFICA: HL,DE y BC
 523+ 9446
 524+ 9446
 525+ 9446              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9446
 527+ 9446 11 B4 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9449 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 944A 12           	ld (de),a
 530+ 944B 23           	inc hl
 531+ 944C              ;
 532+ 944C 11 C2 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 944F 01 02 00     	ld bc,2
 534+ 9452 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9454              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9454 11 B7 8B     	ld de,Contador_de_vueltas
 537+ 9457 7E           	ld a,(hl)
 538+ 9458 12           	ld (de),a
 539+ 9459 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 945A
 541+ 945A 11 C9 8B     	ld de,Indice_Sprite_der
 542+ 945D 01 04 00     	ld bc,4
 543+ 9460 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9462
 545+ 9462 11 D1 8B     	ld de,Posicion_inicio
 546+ 9465 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9468 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 946A
 549+ 946A 11 BB 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 946D 01 02 00     	ld bc,2
 551+ 9470 ED B0        	ldir
 552+ 9472
 553+ 9472 C9           	ret
 554+ 9473
 555+ 9473              ; ----------------------------------------------------------------------------------------------------------
 556+ 9473              ;
 557+ 9473              ;	1/8/24
 558+ 9473              ;
 559+ 9473
 560+ 9473              Parametros_de_bandeja_DRAW_a_caja
 561+ 9473
 562+ 9473 21 B4 8B     	ld hl,Bandeja_DRAW
 563+ 9476 01 0C 00     	ld bc,12
 564+ 9479 ED B0        	ldir
 565+ 947B C9           	ret
 566+ 947C
 567+ 947C              ;---------------------------------------------------------------------------------------------------------------
 568+ 947C              ;
 569+ 947C              ;	5/1/24
 570+ 947C              ;
 571+ 947C              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 947C              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 947C              ;
 574+ 947C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 947C              ;
 576+ 947C              ;	(Numero_parcial_de_entidades)="7".
 577+ 947C              ;
 578+ 947C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 947C              ;
 580+ 947C              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 947C              ;
 582+ 947C              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 947C              ;	MODIFICA: A y B.
 584+ 947C              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 947C
 586+ 947C              Inicializa_Numero_parcial_de_entidades
 587+ 947C
 588+ 947C              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 947C
 590+ 947C 3A FA 8B     	ld a,(Numero_de_entidades)
 591+ 947F A7           	and a
 592+ 9480
 593+ 9480              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9480              ;	jr z,$
 595+ 9480              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9480
 597+ 9480 20 03        	jr nz,3F
 598+ 9482
 599+ 9482              ; ---------- ---------- ----------
 600+ 9482
 601+ 9482              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9482              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9482
 604+ 9482 CD 78 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9485
 606+ 9485              ; ---------- ---------- ----------
 607+ 9485
 608+ 9485 3A FA 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9488 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 948A 38 08        	jr c,1F
 611+ 948C
 612+ 948C              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 948C              ; Actualizamos variables.
 614+ 948C
 615+ 948C 3E 07        	ld a,7
 616+ 948E 32 FB 8B     	ld (Numero_parcial_de_entidades),a
 617+ 9491 47           	ld b,a
 618+ 9492 18 04        	jr 2F
 619+ 9494
 620+ 9494              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9494              ; (Numero_de_entidades)="0".
 622+ 9494
 623+ 9494 32 FB 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 9497 47           	ld b,a
 625+ 9498 C9           2 ret
 626+ 9499
# file closed: Rutinas_de_inicio_y_niveles.asm
2064  9499              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9499              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9499              ;
   3+ 9499              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9499              ;
   5+ 9499              ; *****************************************************************************************************************************************************************************************
   6+ 9499              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9499
   8+ 9499 7C           calcula_tercio ld a,h
   9+ 949A E6 18        	and $18
  10+ 949C CB 2F        	sra a
  11+ 949E CB 2F        	sra a
  12+ 94A0 CB 2F        	sra a
  13+ 94A2 C9           	ret
  14+ 94A3
# file closed: calcula_tercio.asm
2065  94A3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94A3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94A3              ;
   3+ 94A3              ;
   4+ 94A3              ;	CLS.
   5+ 94A3              ;
   6+ 94A3              ;	Limpia la pantalla y define sus atributos.
   7+ 94A3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94A3              ;
   9+ 94A3              ;	COLORES: 0 ..... NEGRO
  10+ 94A3              ;    		 1 ..... AZUL
  11+ 94A3              ; 			 2 ..... ROJO
  12+ 94A3              ;			 3 ..... MAGENTA
  13+ 94A3              ; 			 4 ..... VERDE
  14+ 94A3              ; 			 5 ..... CIAN
  15+ 94A3              ;			 6 ..... AMARILLO
  16+ 94A3              ; 			 7 ..... BLANCO
  17+ 94A3              ;
  18+ 94A3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94A3              ;
  20+ 94A3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94A3
  22+ 94A3
  23+ 94A3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94A6 11 01 40     	LD DE,$4001
  25+ 94A9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94AC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94AE ED B0        	LDIR
  28+ 94B0 01 FF 02     	LD BC,767
  29+ 94B3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94B4 ED B0        	LDIR
  31+ 94B6 C9           	ret
  32+ 94B7
# file closed: Cls.asm
2066  94B7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94B7              ; ------------------------------------------------------------------------
   2+ 94B7              ;
   3+ 94B7              ;	30/1/24
   4+ 94B7              ;
   5+ 94B7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94B7              ;	Fila superior "0", Columna izquierda "0".
   7+ 94B7              ;
   8+ 94B7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94B7              ;
  10+ 94B7              ;	Modifica: A,BC y DE.
  11+ 94B7
  12+ 94B7 7D           Genera_coordenadas ld a,l
  13+ 94B8 E6 1F        	and $1f
  14+ 94BA 32 B5 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94BD
  16+ 94BD 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94BE FE 40        	cp $40
  18+ 94C0 38 1C        	jr c,4F
  19+ 94C2
  20+ 94C2 CD 99 94     	call calcula_tercio
  21+ 94C5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94C6
  23+ 94C6 1E 00        	ld e,0
  24+ 94C8 7D           	ld a,l
  25+ 94C9 E6 E0        	and $e0
  26+ 94CB 28 01        	jr z,1F
  27+ 94CD 04           	inc b
  28+ 94CE
  29+ 94CE 04           1 inc b
  30+ 94CF 05           	dec b
  31+ 94D0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94D2              ;														; _ , salimos.
  33+ 94D2 1C           3 inc e
  34+ 94D3 D6 20        	sub 32
  35+ 94D5 20 FB        	jr nz,3B
  36+ 94D7 10 F5        	djnz 1B
  37+ 94D9
  38+ 94D9 7B           2 ld a,e
  39+ 94DA 32 B6 8B     	ld (Coordenada_y),a
  40+ 94DD C9           	ret
  41+ 94DE
  42+ 94DE AF           4 xor a
  43+ 94DF 32 B6 8B     	ld (Coordenada_y),a
  44+ 94E2 C9           	ret
  45+ 94E3
# file closed: Genera_coordenadas.asm
2067  94E3              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94E3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94E3              ;
   3+ 94E3              ;	20/09/24
   4+ 94E3              ;
   5+ 94E3              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94E3              ;   DE contiene Puntero_objeto.
   7+ 94E3              ;   IX contiene el Puntero de impresión.
   8+ 94E3
   9+ 94E3              Genera_datos_de_impresion
  10+ 94E3
  11+ 94E3 ED 73 01 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94E7
  13+ 94E7 31 BB 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94EA DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94EC
  16+ 94EC 2A 1E 8C         ld hl,(Scanlines_album_SP)
  17+ 94EF
  18+ 94EF 3E 05            ld a,5
  19+ 94F1 85               add l
  20+ 94F2 6F               ld l,a
  21+ 94F3
  22+ 94F3 F9               ld sp,hl
  23+ 94F4 22 1E 8C         ld (Scanlines_album_SP),hl
  24+ 94F7
  25+ 94F7 21 00 00         ld hl,0
  26+ 94FA
  27+ 94FA DD E5            push ix
  28+ 94FC 3B               dec sp
  29+ 94FD ED 7A            adc hl,sp
  30+ 94FF D5               push de
  31+ 9500
  32+ 9500              ; Recuperamos SP.
  33+ 9500
  34+ 9500 ED 7B 01 8C      ld sp,(Stack)
  35+ 9504
  36+ 9504 E5               push hl
  37+ 9505 F1               pop af
  38+ 9506 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9507
  40+ 9507              ; Tenemos el encabezado listo.
  41+ 9507              ; Preparamos registros para generar los scanlines.
  42+ 9507
  43+ 9507 DD E5            push ix
  44+ 9509 E1               pop hl                                          ; 1er scanline en HL.
  45+ 950A
  46+ 950A ED 5B 1E 8C      ld de,(Scanlines_album_SP)
  47+ 950E
  48+ 950E              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 950E              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 950E
  51+ 950E 7C               ld a,h
  52+ 950F FE 50            cp $50
  53+ 9511 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9513
  55+ 9513 20 05            jr nz,2F
  56+ 9515
  57+ 9515 7D               ld a,l
  58+ 9516 FE E0            cp $e0
  59+ 9518 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 951A
  61+ 951A 7D           2 ld a,l
  62+ 951B FE C0            cp $c0
  63+ 951D D2 B9 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9520
  65+ 9520              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9520
  67+ 9520 CD B7 99         call NextScan
  68+ 9523 EB               ex de,hl
  69+ 9524
  70+ 9524 73               ld (hl),e
  71+ 9525 23               inc hl
  72+ 9526 72               ld (hl),d
  73+ 9527 23               inc hl
  74+ 9528
  75+ 9528 EB               ex de,hl
  76+ 9529
  77+ 9529 CD B7 99         call NextScan
  78+ 952C EB               ex de,hl
  79+ 952D
  80+ 952D 73               ld (hl),e
  81+ 952E 23               inc hl
  82+ 952F 72               ld (hl),d
  83+ 9530 23               inc hl
  84+ 9531
  85+ 9531 EB               ex de,hl
  86+ 9532
  87+ 9532 CD B7 99         call NextScan
  88+ 9535 EB               ex de,hl
  89+ 9536
  90+ 9536 73               ld (hl),e
  91+ 9537 23               inc hl
  92+ 9538 72               ld (hl),d
  93+ 9539 23               inc hl
  94+ 953A
  95+ 953A EB               ex de,hl
  96+ 953B
  97+ 953B CD B7 99         call NextScan
  98+ 953E EB               ex de,hl
  99+ 953F
 100+ 953F 73               ld (hl),e
 101+ 9540 23               inc hl
 102+ 9541 72               ld (hl),d
 103+ 9542 23               inc hl
 104+ 9543
 105+ 9543 EB               ex de,hl
 106+ 9544
 107+ 9544 CD B7 99         call NextScan
 108+ 9547 EB               ex de,hl
 109+ 9548
 110+ 9548 73               ld (hl),e
 111+ 9549 23               inc hl
 112+ 954A 72               ld (hl),d
 113+ 954B 23               inc hl
 114+ 954C
 115+ 954C EB               ex de,hl
 116+ 954D
 117+ 954D CD B7 99         call NextScan
 118+ 9550 EB               ex de,hl
 119+ 9551
 120+ 9551 73               ld (hl),e
 121+ 9552 23               inc hl
 122+ 9553 72               ld (hl),d
 123+ 9554 23               inc hl
 124+ 9555
 125+ 9555 EB               ex de,hl
 126+ 9556
 127+ 9556 CD B7 99         call NextScan
 128+ 9559 EB               ex de,hl
 129+ 955A
 130+ 955A 73               ld (hl),e
 131+ 955B 23               inc hl
 132+ 955C 72               ld (hl),d
 133+ 955D 23               inc hl
 134+ 955E
 135+ 955E EB               ex de,hl
 136+ 955F
 137+ 955F CD B7 99         call NextScan
 138+ 9562 EB               ex de,hl
 139+ 9563
 140+ 9563 73               ld (hl),e
 141+ 9564 23               inc hl
 142+ 9565 72               ld (hl),d
 143+ 9566 23               inc hl
 144+ 9567
 145+ 9567 EB               ex de,hl
 146+ 9568
 147+ 9568 CD B7 99         call NextScan
 148+ 956B EB               ex de,hl
 149+ 956C
 150+ 956C 73               ld (hl),e
 151+ 956D 23               inc hl
 152+ 956E 72               ld (hl),d
 153+ 956F 23               inc hl
 154+ 9570
 155+ 9570 EB               ex de,hl
 156+ 9571
 157+ 9571 CD B7 99         call NextScan
 158+ 9574 EB               ex de,hl
 159+ 9575
 160+ 9575 73               ld (hl),e
 161+ 9576 23               inc hl
 162+ 9577 72               ld (hl),d
 163+ 9578 23               inc hl
 164+ 9579
 165+ 9579 EB               ex de,hl
 166+ 957A
 167+ 957A CD B7 99         call NextScan
 168+ 957D EB               ex de,hl
 169+ 957E
 170+ 957E 73               ld (hl),e
 171+ 957F 23               inc hl
 172+ 9580 72               ld (hl),d
 173+ 9581 23               inc hl
 174+ 9582
 175+ 9582 EB               ex de,hl
 176+ 9583
 177+ 9583 CD B7 99         call NextScan
 178+ 9586 EB               ex de,hl
 179+ 9587
 180+ 9587 73               ld (hl),e
 181+ 9588 23               inc hl
 182+ 9589 72               ld (hl),d
 183+ 958A 23               inc hl
 184+ 958B
 185+ 958B EB               ex de,hl
 186+ 958C
 187+ 958C CD B7 99         call NextScan
 188+ 958F EB               ex de,hl
 189+ 9590
 190+ 9590 73               ld (hl),e
 191+ 9591 23               inc hl
 192+ 9592 72               ld (hl),d
 193+ 9593 23               inc hl
 194+ 9594
 195+ 9594 EB               ex de,hl
 196+ 9595
 197+ 9595 CD B7 99         call NextScan
 198+ 9598 EB               ex de,hl
 199+ 9599
 200+ 9599 73               ld (hl),e
 201+ 959A 23               inc hl
 202+ 959B 72               ld (hl),d
 203+ 959C 23               inc hl
 204+ 959D
 205+ 959D EB               ex de,hl
 206+ 959E
 207+ 959E CD B7 99         call NextScan
 208+ 95A1 EB               ex de,hl
 209+ 95A2
 210+ 95A2              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95A2              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95A2              ;   _ generar sus scanlines.
 213+ 95A2
 214+ 95A2              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95A2
 216+ 95A2 73               ld (hl),e
 217+ 95A3 23               inc hl
 218+ 95A4 72               ld (hl),d
 219+ 95A5 23               inc hl
 220+ 95A6
 221+ 95A6              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95A6
 223+ 95A6 22 1E 8C         ld (Scanlines_album_SP),hl
 224+ 95A9
 225+ 95A9 EB               ex de,hl
 226+ 95AA
 227+ 95AA              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95AA
 229+ 95AA CD B7 99         call NextScan
 230+ 95AD CD B7 99         call NextScan
 231+ 95B0
 232+ 95B0 22 29 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95B3
 234+ 95B3              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95B3
 236+ 95B3 08               ex af,af
 237+ 95B4
 238+ 95B4 F5               push af
 239+ 95B5 E1               pop hl
 240+ 95B6
 241+ 95B6 36 10            ld (hl),16
 242+ 95B8
 243+ 95B8 C9               ret
 244+ 95B9
 245+ 95B9              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95B9
 247+ 95B9              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95B9
 249+ 95B9 3E 57            ld a,$57
 250+ 95BB 94               sub h
 251+ 95BC 47               ld b,a
 252+ 95BD
 253+ 95BD 3E DF            ld a,$df
 254+ 95BF BD               cp l
 255+ 95C0 38 04            jr c,1F
 256+ 95C2
 257+ 95C2 3E 08            ld a,8
 258+ 95C4 80               add b
 259+ 95C5 47               ld b,a
 260+ 95C6
 261+ 95C6              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95C6              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95C6
 264+ 95C6 48           1 ld c,b
 265+ 95C7 0C               inc c
 266+ 95C8
 267+ 95C8 04               inc b
 268+ 95C9 05               dec b
 269+ 95CA 20 02            jr nz,3F
 270+ 95CC
 271+ 95CC 18 0B            jr 6F
 272+ 95CE
 273+ 95CE CD B7 99     3 call NextScan
 274+ 95D1 EB               ex de,hl
 275+ 95D2
 276+ 95D2 73               ld (hl),e
 277+ 95D3 23               inc hl
 278+ 95D4 72               ld (hl),d
 279+ 95D5 23               inc hl
 280+ 95D6
 281+ 95D6 EB               ex de,hl
 282+ 95D7 10 F5            djnz 3B
 283+ 95D9
 284+ 95D9 ED 53 1E 8C  6 ld (Scanlines_album_SP),de
 285+ 95DD
 286+ 95DD 08           5 ex af,af
 287+ 95DE F5               push af
 288+ 95DF E1               pop hl
 289+ 95E0
 290+ 95E0 71               ld (hl),c
 291+ 95E1
 292+ 95E1 C9               ret
 293+ 95E2
# file closed: Genera_datos_de_impresion.asm
2068  95E2              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95E2              ; -----------------------------------------------------------------------------
   2+ 95E2              ;
   3+ 95E2              ;   11/03/24
   4+ 95E2              ;
   5+ 95E2
   6+ 95E2              Pinta_Sprites
   7+ 95E2
   8+ 95E2              ;    ld hl,(Scanlines_album_SP)
   9+ 95E2              ;    call Extrae_address
  10+ 95E2
  11+ 95E2              ;    inc h
  12+ 95E2              ;    dec h
  13+ 95E2              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95E2
  15+ 95E2 ED 73 01 8C      ld (Stack),sp
  16+ 95E6
  17+ 95E6 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95E7              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95E7 2C               inc l
  20+ 95E8 2C               inc l
  21+ 95E9
  22+ 95E9 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95EA
  24+ 95EA 2C               inc l
  25+ 95EB F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95EC
  27+ 95EC              ;   Seleccionamos rutina de impresión:
  28+ 95EC
  29+ 95EC 3E 10            ld a,16
  30+ 95EE B8               cp b
  31+ 95EF C2 EB 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95F2
  33+ 95F2              ;   Rutinas:
  34+ 95F2
  35+ 95F2              Pinta_rapido    ;   1520 t/states.
  36+ 95F2
  37+ 95F2 E1               pop hl
  38+ 95F3
  39+ 95F3 1A               ld a,(de)
  40+ 95F4 AE               xor (hl)
  41+ 95F5 77               ld (hl),a
  42+ 95F6 2C               inc l
  43+ 95F7 1C               inc e
  44+ 95F8 1A               ld a,(de)
  45+ 95F9 AE               xor (hl)
  46+ 95FA 77               ld (hl),a
  47+ 95FB 2C               inc l
  48+ 95FC 1C               inc e
  49+ 95FD 1A               ld a,(de)
  50+ 95FE AE               xor (hl)
  51+ 95FF 77               ld (hl),a
  52+ 9600 13               inc de
  53+ 9601
  54+ 9601 E1               pop hl
  55+ 9602
  56+ 9602 1A               ld a,(de)
  57+ 9603 AE               xor (hl)
  58+ 9604 77               ld (hl),a
  59+ 9605 2C               inc l
  60+ 9606 1C               inc e
  61+ 9607 1A               ld a,(de)
  62+ 9608 AE               xor (hl)
  63+ 9609 77               ld (hl),a
  64+ 960A 2C               inc l
  65+ 960B 1C               inc e
  66+ 960C 1A               ld a,(de)
  67+ 960D AE               xor (hl)
  68+ 960E 77               ld (hl),a
  69+ 960F 13               inc de
  70+ 9610
  71+ 9610 E1               pop hl
  72+ 9611
  73+ 9611 1A               ld a,(de)
  74+ 9612 AE               xor (hl)
  75+ 9613 77               ld (hl),a
  76+ 9614 2C               inc l
  77+ 9615 1C               inc e
  78+ 9616 1A               ld a,(de)
  79+ 9617 AE               xor (hl)
  80+ 9618 77               ld (hl),a
  81+ 9619 2C               inc l
  82+ 961A 1C               inc e
  83+ 961B 1A               ld a,(de)
  84+ 961C AE               xor (hl)
  85+ 961D 77               ld (hl),a
  86+ 961E 13               inc de
  87+ 961F
  88+ 961F E1               pop hl
  89+ 9620
  90+ 9620 1A               ld a,(de)
  91+ 9621 AE               xor (hl)
  92+ 9622 77               ld (hl),a
  93+ 9623 2C               inc l
  94+ 9624 1C               inc e
  95+ 9625 1A               ld a,(de)
  96+ 9626 AE               xor (hl)
  97+ 9627 77               ld (hl),a
  98+ 9628 2C               inc l
  99+ 9629 1C               inc e
 100+ 962A 1A               ld a,(de)
 101+ 962B AE               xor (hl)
 102+ 962C 77               ld (hl),a
 103+ 962D 13               inc de
 104+ 962E
 105+ 962E E1               pop hl
 106+ 962F
 107+ 962F 1A               ld a,(de)
 108+ 9630 AE               xor (hl)
 109+ 9631 77               ld (hl),a
 110+ 9632 2C               inc l
 111+ 9633 1C               inc e
 112+ 9634 1A               ld a,(de)
 113+ 9635 AE               xor (hl)
 114+ 9636 77               ld (hl),a
 115+ 9637 2C               inc l
 116+ 9638 1C               inc e
 117+ 9639 1A               ld a,(de)
 118+ 963A AE               xor (hl)
 119+ 963B 77               ld (hl),a
 120+ 963C 13               inc de
 121+ 963D
 122+ 963D E1               pop hl
 123+ 963E
 124+ 963E 1A               ld a,(de)
 125+ 963F AE               xor (hl)
 126+ 9640 77               ld (hl),a
 127+ 9641 2C               inc l
 128+ 9642 1C               inc e
 129+ 9643 1A               ld a,(de)
 130+ 9644 AE               xor (hl)
 131+ 9645 77               ld (hl),a
 132+ 9646 2C               inc l
 133+ 9647 1C               inc e
 134+ 9648 1A               ld a,(de)
 135+ 9649 AE               xor (hl)
 136+ 964A 77               ld (hl),a
 137+ 964B 13               inc de
 138+ 964C
 139+ 964C E1               pop hl
 140+ 964D
 141+ 964D 1A               ld a,(de)
 142+ 964E AE               xor (hl)
 143+ 964F 77               ld (hl),a
 144+ 9650 2C               inc l
 145+ 9651 1C               inc e
 146+ 9652 1A               ld a,(de)
 147+ 9653 AE               xor (hl)
 148+ 9654 77               ld (hl),a
 149+ 9655 2C               inc l
 150+ 9656 1C               inc e
 151+ 9657 1A               ld a,(de)
 152+ 9658 AE               xor (hl)
 153+ 9659 77               ld (hl),a
 154+ 965A 13               inc de
 155+ 965B
 156+ 965B E1               pop hl
 157+ 965C
 158+ 965C 1A               ld a,(de)
 159+ 965D AE               xor (hl)
 160+ 965E 77               ld (hl),a
 161+ 965F 2C               inc l
 162+ 9660 1C               inc e
 163+ 9661 1A               ld a,(de)
 164+ 9662 AE               xor (hl)
 165+ 9663 77               ld (hl),a
 166+ 9664 2C               inc l
 167+ 9665 1C               inc e
 168+ 9666 1A               ld a,(de)
 169+ 9667 AE               xor (hl)
 170+ 9668 77               ld (hl),a
 171+ 9669 13               inc de
 172+ 966A
 173+ 966A E1               pop hl
 174+ 966B
 175+ 966B 1A               ld a,(de)
 176+ 966C AE               xor (hl)
 177+ 966D 77               ld (hl),a
 178+ 966E 2C               inc l
 179+ 966F 1C               inc e
 180+ 9670 1A               ld a,(de)
 181+ 9671 AE               xor (hl)
 182+ 9672 77               ld (hl),a
 183+ 9673 2C               inc l
 184+ 9674 1C               inc e
 185+ 9675 1A               ld a,(de)
 186+ 9676 AE               xor (hl)
 187+ 9677 77               ld (hl),a
 188+ 9678 13               inc de
 189+ 9679
 190+ 9679 E1               pop hl
 191+ 967A
 192+ 967A 1A               ld a,(de)
 193+ 967B AE               xor (hl)
 194+ 967C 77               ld (hl),a
 195+ 967D 2C               inc l
 196+ 967E 1C               inc e
 197+ 967F 1A               ld a,(de)
 198+ 9680 AE               xor (hl)
 199+ 9681 77               ld (hl),a
 200+ 9682 2C               inc l
 201+ 9683 1C               inc e
 202+ 9684 1A               ld a,(de)
 203+ 9685 AE               xor (hl)
 204+ 9686 77               ld (hl),a
 205+ 9687 13               inc de
 206+ 9688
 207+ 9688 E1               pop hl
 208+ 9689
 209+ 9689 1A               ld a,(de)
 210+ 968A AE               xor (hl)
 211+ 968B 77               ld (hl),a
 212+ 968C 2C               inc l
 213+ 968D 1C               inc e
 214+ 968E 1A               ld a,(de)
 215+ 968F AE               xor (hl)
 216+ 9690 77               ld (hl),a
 217+ 9691 2C               inc l
 218+ 9692 1C               inc e
 219+ 9693 1A               ld a,(de)
 220+ 9694 AE               xor (hl)
 221+ 9695 77               ld (hl),a
 222+ 9696 13               inc de
 223+ 9697
 224+ 9697 E1               pop hl
 225+ 9698
 226+ 9698 1A               ld a,(de)
 227+ 9699 AE               xor (hl)
 228+ 969A 77               ld (hl),a
 229+ 969B 2C               inc l
 230+ 969C 1C               inc e
 231+ 969D 1A               ld a,(de)
 232+ 969E AE               xor (hl)
 233+ 969F 77               ld (hl),a
 234+ 96A0 2C               inc l
 235+ 96A1 1C               inc e
 236+ 96A2 1A               ld a,(de)
 237+ 96A3 AE               xor (hl)
 238+ 96A4 77               ld (hl),a
 239+ 96A5 13               inc de
 240+ 96A6
 241+ 96A6 E1               pop hl
 242+ 96A7
 243+ 96A7 1A               ld a,(de)
 244+ 96A8 AE               xor (hl)
 245+ 96A9 77               ld (hl),a
 246+ 96AA 2C               inc l
 247+ 96AB 1C               inc e
 248+ 96AC 1A               ld a,(de)
 249+ 96AD AE               xor (hl)
 250+ 96AE 77               ld (hl),a
 251+ 96AF 2C               inc l
 252+ 96B0 1C               inc e
 253+ 96B1 1A               ld a,(de)
 254+ 96B2 AE               xor (hl)
 255+ 96B3 77               ld (hl),a
 256+ 96B4 13               inc de
 257+ 96B5
 258+ 96B5 E1               pop hl
 259+ 96B6
 260+ 96B6 1A               ld a,(de)
 261+ 96B7 AE               xor (hl)
 262+ 96B8 77               ld (hl),a
 263+ 96B9 2C               inc l
 264+ 96BA 1C               inc e
 265+ 96BB 1A               ld a,(de)
 266+ 96BC AE               xor (hl)
 267+ 96BD 77               ld (hl),a
 268+ 96BE 2C               inc l
 269+ 96BF 1C               inc e
 270+ 96C0 1A               ld a,(de)
 271+ 96C1 AE               xor (hl)
 272+ 96C2 77               ld (hl),a
 273+ 96C3 13               inc de
 274+ 96C4
 275+ 96C4 E1               pop hl
 276+ 96C5
 277+ 96C5 1A               ld a,(de)
 278+ 96C6 AE               xor (hl)
 279+ 96C7 77               ld (hl),a
 280+ 96C8 2C               inc l
 281+ 96C9 1C               inc e
 282+ 96CA 1A               ld a,(de)
 283+ 96CB AE               xor (hl)
 284+ 96CC 77               ld (hl),a
 285+ 96CD 2C               inc l
 286+ 96CE 1C               inc e
 287+ 96CF 1A               ld a,(de)
 288+ 96D0 AE               xor (hl)
 289+ 96D1 77               ld (hl),a
 290+ 96D2 13               inc de
 291+ 96D3
 292+ 96D3 E1               pop hl
 293+ 96D4
 294+ 96D4 1A               ld a,(de)
 295+ 96D5 AE               xor (hl)
 296+ 96D6 77               ld (hl),a
 297+ 96D7 2C               inc l
 298+ 96D8 1C               inc e
 299+ 96D9 1A               ld a,(de)
 300+ 96DA AE               xor (hl)
 301+ 96DB 77               ld (hl),a
 302+ 96DC 2C               inc l
 303+ 96DD 1C               inc e
 304+ 96DE 1A               ld a,(de)
 305+ 96DF AE               xor (hl)
 306+ 96E0 77               ld (hl),a
 307+ 96E1 13               inc de
 308+ 96E2
 309+ 96E2 ED 73 1E 8C      ld (Scanlines_album_SP),sp
 310+ 96E6 ED 7B 01 8C      ld sp,(Stack)
 311+ 96EA C9               ret
 312+ 96EB
 313+ 96EB              Pinta_lento
 314+ 96EB
 315+ 96EB E1           1 pop hl
 316+ 96EC
 317+ 96EC 1A               ld a,(de)
 318+ 96ED AE               xor (hl)
 319+ 96EE 77               ld (hl),a
 320+ 96EF 2C               inc l
 321+ 96F0 1C               inc e
 322+ 96F1 1A               ld a,(de)
 323+ 96F2 AE               xor (hl)
 324+ 96F3 77               ld (hl),a
 325+ 96F4 2C               inc l
 326+ 96F5 1C               inc e
 327+ 96F6 1A               ld a,(de)
 328+ 96F7 AE               xor (hl)
 329+ 96F8 77               ld (hl),a
 330+ 96F9 13               inc de
 331+ 96FA
 332+ 96FA 10 EF            djnz 1B
 333+ 96FC
 334+ 96FC ED 73 1E 8C      ld (Scanlines_album_SP),sp
 335+ 9700 ED 7B 01 8C      ld sp,(Stack)
 336+ 9704 C9               ret
# file closed: Pinta_Sprites.asm
2069  9705              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9705              ; ******************************************************************************************************************************************************************************************
   2+ 9705              ;
   3+ 9705              ; 26/06/23
   4+ 9705              ;
   5+ 9705              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9705
   7+ 9705              Draw
   8+ 9705
   9+ 9705 CD AB 99     	call Prepara_draw
  10+ 9708 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9709 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 970A 28 05        	jr z,2F
  13+ 970C
  14+ 970C 3A D3 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 970F 18 0C        	jr 1F
  16+ 9711
  17+ 9711 2A D1 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9714 22 C4 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9717 CD A3 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 971A              ;													; _la esquina superior izquierda de la pantalla.
  21+ 971A
  22+ 971A CD 4A 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 971D
  24+ 971D 3A C1 8B     1 ld a,(Ctrl_0)
  25+ 9720 CB 6F        	bit 5,a
  26+ 9722 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9724
  28+ 9724 CD 39 97     	call Comprueba_limite_horizontal
  29+ 9727 CD C9 97     	call Comprueba_limite_vertical
  30+ 972A
  31+ 972A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 972A              ; -----------------------
  33+ 972A              ; -----------------------
  34+ 972A              ; -----------------------
  35+ 972A
  36+ 972A CD 1F 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 972D CD 56 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9730
  39+ 9730 3A C1 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9733 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9735 32 C1 8B     	ld (Ctrl_0),a
  42+ 9738
  43+ 9738 C9           	ret
  44+ 9739
  45+ 9739              ; *******************************************************************************************************************************************************************************************
  46+ 9739              ;	21/01/23
  47+ 9739              ;
  48+ 9739              ; 	Comprueba_limite_horizontal.
  49+ 9739              ;
  50+ 9739              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9739              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9739              ;
  53+ 9739              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9739              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9739              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9739              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9739
  58+ 9739
  59+ 9739
  60+ 9739 3A C1 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 973C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 973E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9740 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9742 32 C1 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9745 18 09            jr 6F
  66+ 9747 CB 5F        1 bit 3,a
  67+ 9749 28 0A            jr z,2F
  68+ 974B E6 F7            and $f7
  69+ 974D 32 C1 8B         ld (Ctrl_0),a
  70+ 9750 CD A3 98     6 call Inicializacion
  71+ 9753 18 5B            jr 5F
  72+ 9755 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9756
  74+ 9756              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9756              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9756
  77+ 9756 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9757 2A D5 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 975A CD 99 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 975D 67           	ld h,a
  81+ 975E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 975F CD 99 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9762 67           	ld h,a
  84+ 9763 A7           	and a
  85+ 9764 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9766 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9767 3A D3 8B     	ld a,(Cuad_objeto)
  88+ 976A FE 02        	cp 2
  89+ 976C 38 1E        	jr c,3F
  90+ 976E 28 1C        	jr z,3F
  91+ 9770 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9771 28 23            jr z,7F
  93+ 9773 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9775 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9777 E1           	pop hl
  96+ 9778
  97+ 9778              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9778              ; _para indicar con E="2" en caso necesario.
  99+ 9778
 100+ 9778 E5               push hl
 101+ 9779 C5               push bc
 102+ 977A CD 99 94     	call calcula_tercio
 103+ 977D FE 01        	cp 1
 104+ 977F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9781 CD B1 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9784 28 26            jr z,9F
 107+ 9786 38 24            jr c,9F
 108+ 9788 1E 00        11 ld e,0
 109+ 978A 18 22            jr 8F
 110+ 978C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 978D 28 07        	jr z, 7F
 112+ 978F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9791 1E 00         	ld e,0
 114+ 9793 E1           	pop hl
 115+ 9794 18 04        	jr 4F
 116+ 9796 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9798 18 15            jr 10F
 118+ 979A
 119+ 979A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 979A              ; _para indicar con E="2" en caso necesario.
 121+ 979A
 122+ 979A E5           4 push hl
 123+ 979B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 979C CD 99 94     	call calcula_tercio
 125+ 979F FE 01        	cp 1
 126+ 97A1 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97A3 CD B1 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97A6 28 04            jr z,9F
 129+ 97A8 30 02            jr nc,9F
 130+ 97AA 18 02        	jr 8F
 131+ 97AC 1E 02        9 ld e,2
 132+ 97AE C1           8 pop bc
 133+ 97AF E1           10 pop hl
 134+ 97B0 C9           5 ret
 135+ 97B1
 136+ 97B1              ; --------------------
 137+ 97B1              ;
 138+ 97B1              ; 25/08/22
 139+ 97B1
 140+ 97B1 CD 99 94     Comprueba_centro call calcula_tercio
 141+ 97B4 67               ld h,a
 142+ 97B5 08           	ex af,af
 143+ 97B6 FE 02        	cp 2
 144+ 97B8 38 07        	jr c,1F
 145+ 97BA 28 05        	jr z,1F
 146+ 97BC 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97BF 18 03        	jr 2F
 148+ 97C1 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97C4 08           2 ex af,af
 150+ 97C5 A7               and a
 151+ 97C6 ED 42            sbc hl,bc
 152+ 97C8 C9               ret
 153+ 97C9
 154+ 97C9              ; *********************************************************************************************************************************************************************************************
 155+ 97C9              ;
 156+ 97C9              ;   16/8/22
 157+ 97C9              ;
 158+ 97C9              ;	Comprueba_limite_vertical
 159+ 97C9              ;
 160+ 97C9              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97C9              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97C9              ;
 163+ 97C9
 164+ 97C9 2A C4 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97CC 7D           	ld a,l
 166+ 97CD E6 1F        	and $1F
 167+ 97CF 57           	ld d,a
 168+ 97D0 3A D7 8B     	ld a,(Limite_vertical)
 169+ 97D3 BA           	cp d 											; Límite - Posición.
 170+ 97D4 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97D5 3A D3 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97D8 CB 47        	bit 0,a
 173+ 97DA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97DC
 175+ 97DC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97DC
 177+ 97DC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97DD 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97DF
 180+ 97DF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97DF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97DF
 183+ 97DF 3A B5 8B         ld a,(Coordenada_X)
 184+ 97E2 16 0F            ld d,Centro_izquierda
 185+ 97E4 A7               and a
 186+ 97E5 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97E6 28 1E            jr z,3F
 188+ 97E8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97EA              ;                                                    ; _salimos sin modificar nada.
 190+ 97EA 18 0E            jr 2F
 191+ 97EC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97ED 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97EF
 194+ 97EF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97EF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97EF
 197+ 97EF 3A B5 8B         ld a,(Coordenada_X)
 198+ 97F2 16 10            ld d,Centro_derecha
 199+ 97F4 A7               and a
 200+ 97F5 92               sub d
 201+ 97F6 28 0E            jr z,3F
 202+ 97F8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97FA              ;                                                    ; _salimos sin modificar nada.
 204+ 97FA CB 43        2 bit 0,e
 205+ 97FC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97FE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97FF CD 93 98         call Modificaccionne
 208+ 9802 C1           	pop bc
 209+ 9803 CD A3 98         call Inicializacion
 210+ 9806 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9807
 212+ 9807              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9807
 214+ 9807 C5           4 push bc
 215+ 9808 01 C3 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 980B 0A           	ld a,(bc)
 217+ 980C 3D           	dec a
 218+ 980D 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 980E 7D           	ld a,l
 220+ 980F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9810 CB 47        	bit 0,a
 222+ 9812 28 03        	jr z,5F
 223+ 9814 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9815 18 2E        	jr 7F
 225+ 9817
 226+ 9817              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9817
 228+ 9817 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9818 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9819 3A C1 8B     	ld a,(Ctrl_0)
 231+ 981C CB 4F        	bit 1,a
 232+ 981E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9820 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9821
 235+ 9821              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9821
 237+ 9821 1C               inc e
 238+ 9822 1D               dec e
 239+ 9823 20 07            jr nz,12F
 240+ 9825 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9826 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9827 22 C4 8B     	ld (Posicion_actual),hl
 243+ 982A 18 44        13 jr 9F
 244+ 982C CB 43        12 bit 0,e
 245+ 982E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9830              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9830 C1           	pop bc
 248+ 9831 18 D3        	jr 3B
 249+ 9833 80           14 add b
 250+ 9834 6F               ld l,a
 251+ 9835 22 C4 8B     	ld (Posicion_actual),hl
 252+ 9838 CD 93 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 983B 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 983D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 983F 32 C1 8B         ld (Ctrl_0),a
 256+ 9842 F1           	pop af
 257+ 9843 18 2B        	jr 9F
 258+ 9845
 259+ 9845              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9845
 261+ 9845 F5           7 push af
 262+ 9846 3A C1 8B     	ld a,(Ctrl_0)
 263+ 9849 CB 47        	bit 0,a
 264+ 984B 20 1D        	jr nz,8F
 265+ 984D F1           	pop af
 266+ 984E
 267+ 984E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 984E
 269+ 984E 1C           	inc e
 270+ 984F 1D               dec e
 271+ 9850 20 07            jr nz,10F
 272+ 9852 90           	sub b
 273+ 9853 6F               ld l,a
 274+ 9854 22 C4 8B     	ld (Posicion_actual),hl
 275+ 9857 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9859              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9859 CB 43        10 bit 0,e
 278+ 985B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 985D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 985D C1           	pop bc
 281+ 985E 18 A6        	jr 3B
 282+ 9860 90           16 sub b
 283+ 9861 6F               ld l,a
 284+ 9862 22 C4 8B     	ld (Posicion_actual),hl
 285+ 9865 CD 93 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9868 18 06            jr 9F
 287+ 986A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 986C 32 C1 8B         ld (Ctrl_0),a
 289+ 986F F1           	pop af
 290+ 9870 C1           9 pop bc
 291+ 9871 1E 00        	ld e,0
 292+ 9873 CD A3 98         call Inicializacion
 293+ 9876 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9877 08           	ex af,af
 295+ 9878 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9879 18 8B            jr 3B
 297+ 987B
 298+ 987B              ; --------------------
 299+ 987B
 300+ 987B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 987D CD C6 99     1 call PreviousScan
 302+ 9880 10 FB            djnz 1B
 303+ 9882 22 C4 8B     	ld (Posicion_actual),hl
 304+ 9885 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9886 C9           	ret
 306+ 9887
 307+ 9887              ; --------------------
 308+ 9887
 309+ 9887 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9889 CD B7 99     1 call NextScan
 311+ 988C 10 FB            djnz 1B
 312+ 988E 22 C4 8B     	ld (Posicion_actual),hl
 313+ 9891 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9892 C9           	ret
 315+ 9893
 316+ 9893              ; --------------------
 317+ 9893              ;
 318+ 9893              ;	22/01/23
 319+ 9893              ;
 320+ 9893              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9893              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9893              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9893
 324+ 9893
 325+ 9893              Modificaccionne
 326+ 9893
 327+ 9893 3A D3 8B     	ld a,(Cuad_objeto)
 328+ 9896 FE 02        	cp 2
 329+ 9898 CC 7B 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 989B DC 7B 98         call c,Modifica_Pos_actual
 331+ 989E C8           	ret z
 332+ 989F CD 87 98         call Modifica_Pos_actual2
 333+ 98A2 C9               ret
 334+ 98A3
 335+ 98A3              ; *************************************************************************************************************************************************************************************************
 336+ 98A3              ;
 337+ 98A3              ;	13/8/22
 338+ 98A3              ;
 339+ 98A3              ;	Inicializacion
 340+ 98A3              ;
 341+ 98A3              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98A3              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98A3              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98A3              ;
 345+ 98A3              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98A3              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98A3              ;	_ desaparece/aparece.
 348+ 98A3
 349+ 98A3              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98A3              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98A3              ;
 352+ 98A3              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98A3              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98A3              ; 		   [E] ="0"
 355+ 98A3
 356+ 98A3              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98A3
 358+ 98A3 CD 99 94     Inicializacion call calcula_tercio
 359+ 98A6 28 36        	jr z,primit
 360+ 98A8 E6 02        	and 2
 361+ 98AA 20 07        	jr nz,segmit
 362+ 98AC 7D           	ld a,l
 363+ 98AD FE 7F        	cp $7f
 364+ 98AF 38 2D        	jr c,primit
 365+ 98B1 28 2B        	jr z,primit
 366+ 98B3 CD 19 99     segmit call column
 367+ 98B6 38 13        	jr c,tercuad
 368+ 98B8 3E 04        cuarcuad ld a,4
 369+ 98BA 32 D3 8B     	ld (Cuad_objeto),a
 370+ 98BD 21 20 48     	ld hl,$4820
 371+ 98C0 22 D5 8B     	ld (Limite_horizontal),hl
 372+ 98C3 21 D7 8B     	ld hl,Limite_vertical
 373+ 98C6 36 0D        	ld (hl),$0d
 374+ 98C8 08           	ex af,af
 375+ 98C9 18 3C        	jr 1F
 376+ 98CB              tercuad
 377+ 98CB 3E 03        	ld a,3
 378+ 98CD 32 D3 8B     	ld (Cuad_objeto),a
 379+ 98D0 21 20 48     	ld hl,$4820
 380+ 98D3 22 D5 8B     	ld (Limite_horizontal),hl
 381+ 98D6 21 D7 8B     	ld hl,Limite_vertical
 382+ 98D9 36 12        	ld (hl),$12
 383+ 98DB 08           	ex af,af
 384+ 98DC 18 29        	jr 1F
 385+ 98DE CD 19 99     primit call column
 386+ 98E1 38 13        	jr c, primcuad
 387+ 98E3              segcuad
 388+ 98E3 3E 02        	ld a,2
 389+ 98E5 32 D3 8B     	ld (Cuad_objeto),a
 390+ 98E8 21 C0 4F     	ld hl,$4fc0
 391+ 98EB 22 D5 8B     	ld (Limite_horizontal),hl
 392+ 98EE 21 D7 8B     	ld hl,Limite_vertical
 393+ 98F1 36 0D        	ld (hl),$0d
 394+ 98F3 08           	ex af,af
 395+ 98F4 18 11        	jr 1F
 396+ 98F6              primcuad
 397+ 98F6 3E 01        	ld a,1
 398+ 98F8 32 D3 8B     	ld (Cuad_objeto),a
 399+ 98FB 21 C0 4F     	ld hl,$4fc0
 400+ 98FE 22 D5 8B     	ld (Limite_horizontal),hl
 401+ 9901 21 D7 8B     	ld hl,Limite_vertical
 402+ 9904 36 12        	ld (hl),$12
 403+ 9906 08           	ex af,af
 404+ 9907
 405+ 9907 C5           1 push bc
 406+ 9908 E5           	push hl
 407+ 9909 D5           	push de
 408+ 990A
 409+ 990A 2A C4 8B     	ld hl,(Posicion_actual)
 410+ 990D CD B7 94     	call Genera_coordenadas
 411+ 9910
 412+ 9910 D1           	pop de
 413+ 9911 E1           	pop hl
 414+ 9912 C1           	pop bc
 415+ 9913
 416+ 9913 21 C1 8B     	ld hl,Ctrl_0
 417+ 9916 CB EE        	set 5,(hl)
 418+ 9918 C9           	ret
 419+ 9919
 420+ 9919              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9919
 422+ 9919              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9919              ;
 424+ 9919              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9919
 426+ 9919 7D           column ld a,l
 427+ 991A E6 1F        	and $1f
 428+ 991C FE 10         	cp $10
 429+ 991E C9            	ret
 430+ 991F
 431+ 991F              ; --------------------------------------------------------------------------------------------------------------------
 432+ 991F              ;
 433+ 991F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 991F              ;
 435+ 991F              ; 14/12/22
 436+ 991F              ;
 437+ 991F              ;	Modifica: A y BC.
 438+ 991F
 439+ 991F 3A D3 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9922 E6 01        	and 1
 441+ 9924 28 17        	jr z,1F
 442+ 9926
 443+ 9926              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9926
 445+ 9926 3A B5 8B     	ld a,(Coordenada_X)
 446+ 9929 47           	ld b,a
 447+ 992A 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 992B 79           	ld a,c
 449+ 992C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 992D 38 08        	jr c,2F
 451+ 992F 47           	ld b,a
 452+ 9930 79           	ld a,c
 453+ 9931 90           	sub b
 454+ 9932 32 D4 8B     	ld (Columnas),a
 455+ 9935 18 1B        	jr 4F
 456+ 9937 79           2 ld a,c
 457+ 9938 32 D4 8B     	ld (Columnas),a
 458+ 993B 18 15        	jr 4F
 459+ 993D
 460+ 993D              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 993D
 462+ 993D 3A B5 8B     1 ld a,(Coordenada_X)
 463+ 9940 81           	add c
 464+ 9941 3D           	dec a
 465+ 9942 D6 1F        	sub $1f
 466+ 9944 38 08        	jr c,3F
 467+ 9946 47           	ld b,a
 468+ 9947 79           	ld a,c
 469+ 9948 90           	sub b
 470+ 9949 32 D4 8B     	ld (Columnas),a
 471+ 994C 18 04        	jr 4F
 472+ 994E 79           3 ld a,c
 473+ 994F 32 D4 8B     	ld (Columnas),a
 474+ 9952 D9           4 exx
 475+ 9953 4F           	ld c,a
 476+ 9954 D9           	exx
 477+ 9955 C9            ret
 478+ 9956
 479+ 9956              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9956              ;
 481+ 9956              ;   19/7/23
 482+ 9956              ;
 483+ 9956              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9956              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9956              ;
 486+ 9956              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9956              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9956              ;
 489+ 9956              ;	DESTRUYE: HL,B Y A.
 490+ 9956
 491+ 9956 3A D3 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9959 FE 02        	cp 2
 493+ 995B 38 18        	jr c,1F
 494+ 995D 28 16        	jr z,1F
 495+ 995F E6 01        	and 1
 496+ 9961 28 0D        	jr z,3F
 497+ 9963
 498+ 9963              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9963
 500+ 9963 CD 9F 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9966
 502+ 9966 7D           9 ld a,l
 503+ 9967 E6 1F        	and $1f
 504+ 9969 28 2A        	jr z,7F
 505+ 996B 2B           	dec hl
 506+ 996C 10 F8        	djnz 9B
 507+ 996E 18 25        	jr 7F
 508+ 9970
 509+ 9970              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9970
 511+ 9970 2A C4 8B     3 ld hl,(Posicion_actual)
 512+ 9973 18 20        	jr 7F
 513+ 9975
 514+ 9975 28 14        1 jr z,2F
 515+ 9977
 516+ 9977              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9977
 518+ 9977 CD 9F 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 997A
 520+ 997A 7D           4 ld a,l
 521+ 997B E6 1F        	and $1f
 522+ 997D 28 03        	jr z,6F
 523+ 997F 2B           	dec hl
 524+ 9980 10 F8        	djnz 4B
 525+ 9982 06 0F        6 ld b,15
 526+ 9984 CD C6 99     5 call PreviousScan
 527+ 9987 10 FB        	djnz 5B
 528+ 9989 18 0A        	jr 7F
 529+ 998B
 530+ 998B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 998B
 532+ 998B CD 9F 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 998E 06 0F        	ld b,15
 534+ 9990 CD C6 99     8 call PreviousScan
 535+ 9993 10 FB        	djnz 8B
 536+ 9995
 537+ 9995 E5           7 push hl
 538+ 9996 DD E1        	pop ix
 539+ 9998
 540+ 9998 2A C6 8B     	ld hl,(Puntero_objeto)
 541+ 999B E5           	push hl
 542+ 999C FD E1        	pop iy
 543+ 999E
 544+ 999E C9           	ret
 545+ 999F
 546+ 999F              ; --------------------------------------------------------------------------------------------------------------------
 547+ 999F              ;
 548+ 999F              ;	2/1/23
 549+ 999F              ;
 550+ 999F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 999F              ;
 552+ 999F              ;	Tras esta rutina tenemos:
 553+ 999F              ;
 554+ 999F              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 999F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 999F              ;
 557+ 999F              ;	DESTRUYE!!!!! HL,B y A.
 558+ 999F
 559+ 999F 2A C4 8B     Operandos ld hl,(Posicion_actual)
 560+ 99A2 3A D4 8B     	ld a,(Columnas)
 561+ 99A5 3D           	dec a
 562+ 99A6 20 01        	jr nz,1F
 563+ 99A8 3C           	inc a
 564+ 99A9 47           1 ld b,a
 565+ 99AA C9           	ret
 566+ 99AB
 567+ 99AB              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99AB              ;
 569+ 99AB              ;	Prepara_draw
 570+ 99AB              ;
 571+ 99AB              ;	Es una rutina de carga.
 572+ 99AB              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99AB              ;
 574+ 99AB              ;	FUNCIONAMIENTO:
 575+ 99AB              ;
 576+ 99AB              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99AB              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99AB              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99AB              ;
 580+ 99AB              ;	DESTRUYE:
 581+ 99AB              ;
 582+ 99AB              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99AB
 584+ 99AB 21 C2 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99AE 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99AF 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99B0 4E           	ld c,(hl)
 588+ 99B1 2A C4 8B     	ld hl,(Posicion_actual)
 589+ 99B4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99B6 C9           	ret
 591+ 99B7
 592+ 99B7              ;----------------------------------------------------------------------------------------------------------------
 593+ 99B7              ;
 594+ 99B7              ;	5/08/22
 595+ 99B7              ;
 596+ 99B7              ;   NextScan.
 597+ 99B7              ;
 598+ 99B7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99B7              ;
 600+ 99B7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99B7              ;
 602+ 99B7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99B7              ;
 604+ 99B7              ;       DESTRUIDOS: AF y HL !!!
 605+ 99B7              ;
 606+ 99B7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99B7              ;
 608+ 99B7
 609+ 99B7 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99B8 7C               ld a,h
 611+ 99B9 E6 07            and 7
 612+ 99BB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99BC
 614+ 99BC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99BD C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99BF 6F               ld l,a
 617+ 99C0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99C1
 619+ 99C1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99C2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99C4 67               ld h,a
 622+ 99C5 C9               ret
 623+ 99C6
 624+ 99C6              ;----------------------------------------------------------------------------------------------------------------
 625+ 99C6              ;
 626+ 99C6              ;	5/08/22
 627+ 99C6              ;
 628+ 99C6              ;   PreviousScan.
 629+ 99C6              ;
 630+ 99C6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99C6              ;
 632+ 99C6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99C6              ;
 634+ 99C6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99C6              ;
 636+ 99C6              ;       DESTRUIDOS: AF y HL !!!
 637+ 99C6              ;
 638+ 99C6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99C6              ;
 640+ 99C6
 641+ 99C6 7C           PreviousScan ld a,h
 642+ 99C7 25               dec h               ; Dec H.
 643+ 99C8 E6 07            and 7
 644+ 99CA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99CB
 646+ 99CB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99CC D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99CE 6F               ld l,a
 649+ 99CF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99D0
 651+ 99D0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99D1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99D3 67               ld h,a
 654+ 99D4 C9               ret
 655+ 99D5
 656+ 99D5
 657+ 99D5
 658+ 99D5
 659+ 99D5
 660+ 99D5
 661+ 99D5
 662+ 99D5
 663+ 99D5
 664+ 99D5
 665+ 99D5
 666+ 99D5
# file closed: Draw_XOR.asm
2070  99D5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D5
   2+ 99D5              ; ******************************************************************************************************************************************************************************************
   3+ 99D5              ;
   4+ 99D5              ;   20/05/23
   5+ 99D5              ;
   6+ 99D5              ;	Recompone_posicion_inicio
   7+ 99D5              ;
   8+ 99D5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99D5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99D5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99D5              ;	_ a una u otra rutina.
  12+ 99D5
  13+ 99D5              Recompone_posicion_inicio
  14+ 99D5
  15+ 99D5 2A D1 8B     	ld hl,(Posicion_inicio)
  16+ 99D8 7D           	ld a,l
  17+ 99D9 E6 1F        	and $1f
  18+ 99DB 28 16        	jr z,1F
  19+ 99DD
  20+ 99DD FE 1F        	cp $1f
  21+ 99DF 28 0D        	jr z,3F
  22+ 99E1
  23+ 99E1 21 C0 8B     	ld hl,Ctrl_2
  24+ 99E4 CB C6        	set 0,(hl)
  25+ 99E6 2A C6 8B     	ld hl,(Puntero_objeto)
  26+ 99E9 22 F2 8B     	ld (Repone_puntero_objeto),hl
  27+ 99EC 18 08        	jr 2F
  28+ 99EE
  29+ 99EE CD 9C 9B     3 call Mov_left
  30+ 99F1 18 03        	jr 2F
  31+ 99F3
  32+ 99F3 CD 79 9A     1 call Mov_right
  33+ 99F6 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99F9 22 C6 8B     	ld (Puntero_objeto),hl
  35+ 99FC C9           	ret
  36+ 99FD
  37+ 99FD              ; ******************************************************************************************************************************************************************************************
  38+ 99FD              ;
  39+ 99FD              ;   27/05/23
  40+ 99FD              ;
  41+ 99FD              ;	Mov_down
  42+ 99FD              ;
  43+ 99FD              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99FD              ;
  45+ 99FD              ;
  46+ 99FD              Mov_down
  47+ 99FD
  48+ 99FD CD 67 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A00              ;																	; _ repone (Puntero_objeto).
  50+ 9A00 21 C1 8B     	ld hl,Ctrl_0
  51+ 9A03 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A05              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A05              ; 																	; _ en el caso de que no lo haya.
  54+ 9A05 3A DC 8B     	ld a,(Vel_down)
  55+ 9A08 47           	ld b,a
  56+ 9A09 2A C4 8B         ld hl,(Posicion_actual)
  57+ 9A0C CD 99 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A0F E6 02        	and 2
  59+ 9A11 28 17        	jr z,1F
  60+ 9A13
  61+ 9A13              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A13              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A13
  64+ 9A13 7C           	ld a,h
  65+ 9A14 FE 57        	cp $57
  66+ 9A16 20 12        	jr nz,1F
  67+ 9A18
  68+ 9A18 7D           	ld a,l
  69+ 9A19 C6 20        	add $20
  70+ 9A1B 30 0D        	jr nc,1F
  71+ 9A1D
  72+ 9A1D              ; ------------------------------
  73+ 9A1D              ;
  74+ 9A1D              ;	12/01/24
  75+ 9A1D
  76+ 9A1D              ;	call Reaparece_arriba
  77+ 9A1D CD 29 9D     	call Reinicio
  78+ 9A20
  79+ 9A20              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A20
  81+ 9A20 3A 24 8C     	ld a,(Ctrl_3)
  82+ 9A23 CB CF        	set 1,a
  83+ 9A25 32 24 8C     	ld (Ctrl_3),a
  84+ 9A28
  85+ 9A28 18 08        	jr 3F
  86+ 9A2A              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A2A              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A2A              ; ------------------------------
  89+ 9A2A
  90+ 9A2A CD B7 99     1 call NextScan
  91+ 9A2D 22 C4 8B     	ld (Posicion_actual),hl
  92+ 9A30 10 DA            djnz 2B
  93+ 9A32 CD B7 94     3 call Genera_coordenadas
  94+ 9A35 C9           	ret
  95+ 9A36
  96+ 9A36              ; ******************************************************************************************************************************************************************************************
  97+ 9A36              ;
  98+ 9A36              ;   27/05/23
  99+ 9A36              ;
 100+ 9A36              ;	Mov_up
 101+ 9A36              ;
 102+ 9A36              ; 	Mueve el Sprite hacia arriba.
 103+ 9A36              ;
 104+ 9A36              ;
 105+ 9A36              Mov_up
 106+ 9A36
 107+ 9A36 CD 67 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A39              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A39 21 C1 8B     	ld hl,Ctrl_0
 110+ 9A3C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A3E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A3E              ; 																		; _ en el caso de que no lo haya.
 113+ 9A3E 3A DB 8B     	ld a,(Vel_up)
 114+ 9A41 47           	ld b,a
 115+ 9A42 2A C4 8B     	ld hl,(Posicion_actual)
 116+ 9A45 CD 99 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A48 A7           	and a
 118+ 9A49 20 10        	jr nz,1F
 119+ 9A4B
 120+ 9A4B              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A4B              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A4B
 123+ 9A4B 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A4C FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A4E 20 0B            jr nz,1F
 126+ 9A50 7D               ld a,l
 127+ 9A51 D6 20            sub $20
 128+ 9A53 30 06            jr nc,1F
 129+ 9A55 25               dec h
 130+ 9A56
 131+ 9A56              ; -----------------------------
 132+ 9A56 CD 0A 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A59              ;	call Reinicio
 134+ 9A59              ; -----------------------------
 135+ 9A59
 136+ 9A59 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A5B CD C6 99     1 call PreviousScan
 138+ 9A5E 22 C4 8B     	ld (Posicion_actual),hl
 139+ 9A61 10 E2            djnz 3B
 140+ 9A63 CD B7 94     2 call Genera_coordenadas
 141+ 9A66 C9           	ret
 142+ 9A67
 143+ 9A67              ; -----------------------------
 144+ 9A67              ;
 145+ 9A67              ;	27/5/23
 146+ 9A67              ;
 147+ 9A67              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A67              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A67              ;
 150+ 9A67              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A67              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A67              ;
 153+ 9A67              ;	Modifica: A y (Puntero_objeto).
 154+ 9A67
 155+ 9A67 3A C0 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A6A CB 47        	bit 0,a
 157+ 9A6C C8           	ret z
 158+ 9A6D CB 87        	res 0,a
 159+ 9A6F 32 C0 8B     	ld (Ctrl_2),a
 160+ 9A72 2A F2 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A75 22 C6 8B     	ld (Puntero_objeto),hl
 162+ 9A78 C9           	ret
 163+ 9A79
 164+ 9A79              ; ******************************************************************************************************************************************************************************************
 165+ 9A79              ;
 166+ 9A79              ;	19/10/22
 167+ 9A79              ;
 168+ 9A79              ;	Mov_right.
 169+ 9A79              ;
 170+ 9A79              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A79              ;
 172+ 9A79
 173+ 9A79 3A C1 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A7C CB 77        	bit 6,a
 175+ 9A7E 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A80
 177+ 9A80 CD B8 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A83 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A84
 180+ 9A84 21 C1 8B     	ld hl,Ctrl_0
 181+ 9A87 CB E6        	set 4,(hl)
 182+ 9A89 18 52        	jr 8F
 183+ 9A8B
 184+ 9A8B 21 C1 8B     10 ld hl,Ctrl_0
 185+ 9A8E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A90              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A90              ; 																	; _ en el caso de que no lo haya.
 188+ 9A90 3A B5 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A93 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A95 20 46        	jr nz,8F
 191+ 9A97
 192+ 9A97 3A C8 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A9A A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A9B 28 40        	jr z,8F
 195+ 9A9D
 196+ 9A9D              ; ---------- ---------- ----------
 197+ 9A9D              ;
 198+ 9A9D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A9D
 200+ 9A9D 3A DA 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AA0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AA2 28 11        	jr z,1F
 203+ 9AA4 38 06        	jr c,6F
 204+ 9AA6 FE 04        	cp 4
 205+ 9AA8 28 14        	jr z,7F
 206+ 9AAA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AAC
 208+ 9AAC              ; ---------- ---------- ----------
 209+ 9AAC              ;
 210+ 9AAC              ; Perfiles de velocidad
 211+ 9AAC              ;
 212+ 9AAC
 213+ 9AAC 3A C8 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AAF FE FE        	cp $fe
 215+ 9AB1 20 2A        	jr nz,8F
 216+ 9AB3 18 10        	jr 3F
 217+ 9AB5 3A C8 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AB8 FE FD        	cp $fd
 219+ 9ABA 20 21        	jr nz,8F
 220+ 9ABC 18 07        	jr 3F
 221+ 9ABE 3A C8 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AC1 FE FB        	cp $fb
 223+ 9AC3 20 18        	jr nz,8F
 224+ 9AC5
 225+ 9AC5              ; ---------- ---------- ----------
 226+ 9AC5
 227+ 9AC5              3
 228+ 9AC5 CD F8 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AC8              ;	call Reinicio
 230+ 9AC8
 231+ 9AC8              ; ---------- ---------- ----------
 232+ 9AC8              ;
 233+ 9AC8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AC8
 235+ 9AC8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9ACA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ACB CD E4 9A     	call DESPLZ_DER
 238+ 9ACE C1           	pop bc
 239+ 9ACF 10 F9        	djnz 5B
 240+ 9AD1 2A C4 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AD4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AD5 22 C4 8B     	ld (Posicion_actual),hl
 243+ 9AD8 CD B7 94     	call Genera_coordenadas
 244+ 9ADB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9ADD
 246+ 9ADD              ; ---------- ---------- ----------
 247+ 9ADD
 248+ 9ADD 2A C4 8B     8 ld hl,(Posicion_actual)
 249+ 9AE0 CD E4 9A     	call DESPLZ_DER
 250+ 9AE3 C9           2 ret
 251+ 9AE4
 252+ 9AE4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AE4              ;
 254+ 9AE4              ;	22/9/22
 255+ 9AE4              ;
 256+ 9AE4
 257+ 9AE4 CD F3 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AE7 CD 3F 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AEA CD 68 9B         call Ciclo_completo
 260+ 9AED 21 C1 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AF0 CB FE        	set 7,(hl)
 262+ 9AF2 C9           	ret
 263+ 9AF3
 264+ 9AF3              ; ******************************************************************************************************************************************************************************************
 265+ 9AF3              ;	15/02/23
 266+ 9AF3              ;
 267+ 9AF3
 268+ 9AF3 3A DA 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AF6 47           	ld b,a
 270+ 9AF7 2A CD 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AFA 23           1 inc hl
 272+ 9AFB 23           	inc hl
 273+ 9AFC 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AFE 22 CD 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B01 CD 98 90     	call Extrae_address
 276+ 9B04 22 C6 8B     	ld (Puntero_objeto),hl
 277+ 9B07
 278+ 9B07              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B07
 280+ 9B07              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B07              ; Cuántos movimientos hemos hecho ??
 282+ 9B07              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B07
 284+ 9B07 2A C9 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B0A EB           	ex de,hl
 286+ 9B0B A7           	and a
 287+ 9B0C ED 52        	sbc hl,de
 288+ 9B0E CB 3D        	srl l
 289+ 9B10 3E 08        6 ld a,8
 290+ 9B12 95           	sub l
 291+ 9B13 30 1E        	jr nc,3F
 292+ 9B15
 293+ 9B15              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B15              ; B="0".
 295+ 9B15
 296+ 9B15 04           4 inc b
 297+ 9B16 3C           	inc a
 298+ 9B17 20 FC        	jr nz,4B
 299+ 9B19 78           	ld a,b
 300+ 9B1A 08           	ex af,af
 301+ 9B1B 2A C9 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B1E 23           5 inc hl
 303+ 9B1F 23           	inc hl
 304+ 9B20 10 FC        	djnz 5B
 305+ 9B22 22 CD 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B25 CD 98 90     	call Extrae_address
 307+ 9B28 22 C6 8B     	ld (Puntero_objeto),hl
 308+ 9B2B
 309+ 9B2B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B2B              ; _(Posicion_actual).
 311+ 9B2B
 312+ 9B2B 21 C4 8B     	ld hl,Posicion_actual
 313+ 9B2E 34           	inc (hl)
 314+ 9B2F 08               ex af,af
 315+ 9B30 6F           	ld l,a
 316+ 9B31 18 DD        	jr 6B
 317+ 9B33
 318+ 9B33              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B33
 320+ 9B33 47           3 ld b,a
 321+ 9B34 2A CB 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B37 23           2 inc hl
 323+ 9B38 23           	inc hl
 324+ 9B39 10 FC        	djnz 2B
 325+ 9B3B 22 CF 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B3E C9           8 ret
 327+ 9B3F
 328+ 9B3F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B3F              ;
 330+ 9B3F              ;	24/7/22
 331+ 9B3F              ;
 332+ 9B3F              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B3F              ;
 334+ 9B3F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B3F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B3F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B3F
 338+ 9B3F 3A C8 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B42 A7           	and a
 340+ 9B43 20 1F        	jr nz,1F
 341+ 9B45 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B47 32 C8 8B         ld (CTRL_DESPLZ),a
 343+ 9B4A
 344+ 9B4A 21 C3 8B     	ld hl,Columns
 345+ 9B4D 34           	inc (hl)
 346+ 9B4E 3A D3 8B     	ld a,(Cuad_objeto)
 347+ 9B51 E6 01        	and 1
 348+ 9B53 28 0F        	jr z,1F
 349+ 9B55 2A C4 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B58 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B59 22 C4 8B     	ld (Posicion_actual),hl
 352+ 9B5C CD B7 94     	call Genera_coordenadas
 353+ 9B5F CD C4 9C     	call Inc_CTRL_DESPLZ
 354+ 9B62 18 03        	jr 2F
 355+ 9B64 CD C4 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B67 C9           2 ret
 357+ 9B68
 358+ 9B68              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B68              ;
 360+ 9B68              ;	24/7/22
 361+ 9B68              ;
 362+ 9B68              ;	Ciclo_completo.
 363+ 9B68              ;
 364+ 9B68              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B68              ;
 366+ 9B68              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B68              ; 	Decrementamos (Columns).
 368+ 9B68              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B68              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B68
 371+ 9B68
 372+ 9B68 3A C8 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B6B FE FF        	cp $ff
 374+ 9B6D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B6F E6 F0        	and $f0
 376+ 9B71 20 28        	jr nz,3F
 377+ 9B73
 378+ 9B73              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B73
 380+ 9B73 3A C8 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B76 47           	ld b,a
 382+ 9B77 3E F8        	ld a,$f8
 383+ 9B79 80           	add b
 384+ 9B7A 32 C8 8B     	ld (CTRL_DESPLZ),a
 385+ 9B7D 18 1C        	jr 3F
 386+ 9B7F 21 C3 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B82 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B83 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B84 32 C8 8B     	ld (CTRL_DESPLZ),a
 390+ 9B87 3A D3 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B8A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B8C 20 0A        	jr nz,2F
 393+ 9B8E 2A C4 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B91 23           	inc hl
 395+ 9B92 22 C4 8B     	ld (Posicion_actual),hl
 396+ 9B95 CD B7 94     	call Genera_coordenadas
 397+ 9B98
 398+ 9B98              ; Inicia el puntero de Sprite.
 399+ 9B98
 400+ 9B98 CD AD 90     2 call Inicia_puntero_objeto_der
 401+ 9B9B C9           3 ret
 402+ 9B9C
 403+ 9B9C              ; ******************************************************************************************************************************************************************************************
 404+ 9B9C              ;
 405+ 9B9C              ;	15/02/23
 406+ 9B9C              ;
 407+ 9B9C              ;	Mov_left.
 408+ 9B9C              ;
 409+ 9B9C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B9C              ;
 411+ 9B9C              Mov_left
 412+ 9B9C
 413+ 9B9C 21 C1 8B     	ld hl,Ctrl_0
 414+ 9B9F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BA1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BA1              ; 																	; _ en el caso de que no lo haya.
 417+ 9BA1 3A C1 8B     	ld a,(Ctrl_0)
 418+ 9BA4 CB 77        	bit 6,a
 419+ 9BA6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BA8
 421+ 9BA8 CD BE 9C     	call Stop_Amadeus_left
 422+ 9BAB C8           	ret z
 423+ 9BAC 20 4A        	jr nz,8F
 424+ 9BAE
 425+ 9BAE 3A B5 8B     11 ld a,(Coordenada_X)
 426+ 9BB1 A7           	and a
 427+ 9BB2 20 44        	jr nz,8F
 428+ 9BB4
 429+ 9BB4 3A C8 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BB7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BB8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BBA
 433+ 9BBA              ; ---------- ---------- ----------
 434+ 9BBA
 435+ 9BBA 3A D9 8B     	ld a,(Vel_left)
 436+ 9BBD FE 02        	cp 2
 437+ 9BBF 28 0F        	jr z,1F
 438+ 9BC1 38 04        	jr c,6F
 439+ 9BC3 FE 04        	cp 4
 440+ 9BC5 28 12        	jr z,7F
 441+ 9BC7
 442+ 9BC7              ; ---------- ---------- ----------
 443+ 9BC7
 444+ 9BC7 3A C8 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BCA FE F8        	cp $f8
 446+ 9BCC 20 2A        	jr nz,8F
 447+ 9BCE 18 10        	jr 4F
 448+ 9BD0 3A C8 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BD3 FE F9        	cp $f9
 450+ 9BD5 20 21        	jr nz,8F
 451+ 9BD7 18 07        	jr 4F
 452+ 9BD9 3A C8 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BDC FE FB        	cp $fb
 454+ 9BDE 20 18        	jr nz,8F
 455+ 9BE0
 456+ 9BE0              ; ---------- ---------- ----------
 457+ 9BE0
 458+ 9BE0              4
 459+ 9BE0 CD E6 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BE3              ;	call Reinicio
 461+ 9BE3
 462+ 9BE3              ; ---------- ---------- ----------
 463+ 9BE3
 464+ 9BE3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BE5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BE6
 467+ 9BE6              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BE6              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BE6
 470+ 9BE6 CD FF 9B     	call DESPLZ_IZQ
 471+ 9BE9 C1           	pop bc
 472+ 9BEA 10 F9        	djnz 5B
 473+ 9BEC 2A C4 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BEF 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BF0 22 C4 8B     	ld (Posicion_actual),hl
 476+ 9BF3 CD B7 94     	call Genera_coordenadas
 477+ 9BF6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BF8
 479+ 9BF8              ; ---------- ---------- ----------
 480+ 9BF8
 481+ 9BF8              ; Movemos, no hay recolocación.
 482+ 9BF8
 483+ 9BF8 2A C4 8B     8 ld hl,(Posicion_actual)
 484+ 9BFB CD FF 9B     	call DESPLZ_IZQ
 485+ 9BFE C9           2 ret
 486+ 9BFF
 487+ 9BFF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BFF              ;
 489+ 9BFF              ;	22/9/22
 490+ 9BFF
 491+ 9BFF              DESPLZ_IZQ
 492+ 9BFF
 493+ 9BFF CD 0E 9C     	call Desplaza_izquierda
 494+ 9C02 CD 5A 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C05 CD 82 9C     	call Ciclo_completo_2
 496+ 9C08 21 C1 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C0B CB BE        	res 7,(hl)
 498+ 9C0D C9           	ret
 499+ 9C0E
 500+ 9C0E              Desplaza_izquierda
 501+ 9C0E
 502+ 9C0E 3A D9 8B     	ld a,(Vel_left)
 503+ 9C11 47           	ld b,a
 504+ 9C12 2A CF 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C15 23           1 inc hl
 506+ 9C16 23           	inc hl
 507+ 9C17 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C19 22 CF 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C1C CD 98 90     	call Extrae_address
 510+ 9C1F 22 C6 8B     	ld (Puntero_objeto),hl
 511+ 9C22
 512+ 9C22              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C22
 514+ 9C22              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C22              ; Cuántos movimientos hemos hecho ??
 516+ 9C22              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C22
 518+ 9C22 2A CB 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C25 EB           	ex de,hl
 520+ 9C26 A7           	and a
 521+ 9C27 ED 52        	sbc hl,de
 522+ 9C29 CB 3D        	srl l
 523+ 9C2B 3E 08        6 ld a,8
 524+ 9C2D 95           	sub l
 525+ 9C2E 30 1E        	jr nc,3F
 526+ 9C30
 527+ 9C30              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C30              ; B="0".
 529+ 9C30
 530+ 9C30 04           4 inc b
 531+ 9C31 3C           	inc a
 532+ 9C32 20 FC        	jr nz,4B
 533+ 9C34 78           	ld a,b
 534+ 9C35 08           	ex af,af
 535+ 9C36 2A CB 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C39 23           5 inc hl
 537+ 9C3A 23           	inc hl
 538+ 9C3B 10 FC        	djnz 5B
 539+ 9C3D 22 CF 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C40 CD 98 90     	call Extrae_address
 541+ 9C43 22 C6 8B     	ld (Puntero_objeto),hl
 542+ 9C46
 543+ 9C46              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C46              ; _(Posicion_actual).
 545+ 9C46
 546+ 9C46 21 C4 8B     	ld hl,Posicion_actual
 547+ 9C49 35           	dec (hl)
 548+ 9C4A 08           	ex af,af
 549+ 9C4B 6F           	ld l,a
 550+ 9C4C 18 DD        	jr 6B
 551+ 9C4E
 552+ 9C4E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C4E
 554+ 9C4E 47           3 ld b,a
 555+ 9C4F 2A C9 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C52 23           2 inc hl
 557+ 9C53 23           	inc hl
 558+ 9C54 10 FC        	djnz 2B
 559+ 9C56 22 CD 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C59 C9           8 ret
 561+ 9C5A
 562+ 9C5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C5A              ;
 564+ 9C5A              ;	modifica_parametros_1er_DESPLZ
 565+ 9C5A              ;
 566+ 9C5A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C5A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C5A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C5A
 570+ 9C5A 3A C8 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C5D A7           	and a
 572+ 9C5E 20 1E        	jr nz,1F
 573+ 9C60 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C61 32 C8 8B         ld (CTRL_DESPLZ),a
 575+ 9C64 21 C3 8B     	ld hl,Columns
 576+ 9C67 34           	inc (hl)
 577+ 9C68 3A D3 8B     	ld a,(Cuad_objeto)
 578+ 9C6B E6 01        	and 1
 579+ 9C6D 20 0F        	jr nz,1F
 580+ 9C6F 2A C4 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C72 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C73 22 C4 8B     	ld (Posicion_actual),hl
 583+ 9C76 CD B7 94     	call Genera_coordenadas
 584+ 9C79 CD D5 9C     	call Dec_CTRL_DESPLZ
 585+ 9C7C 18 03        	jr 2F
 586+ 9C7E CD D5 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C81 C9           2 ret
 588+ 9C82
 589+ 9C82              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C82
 591+ 9C82 3A C8 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C85 FE F7        	cp $f7
 593+ 9C87 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C89 30 2C        	jr nc,3F
 595+ 9C8B
 596+ 9C8B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C8B
 598+ 9C8B 06 00        	ld b,0
 599+ 9C8D 04           4 inc b
 600+ 9C8E 3C           	inc a
 601+ 9C8F FE F7        	cp $f7
 602+ 9C91 20 FA        	jr nz,4B
 603+ 9C93 3E FF        	ld a,$ff
 604+ 9C95 90           	sub b
 605+ 9C96 32 C8 8B     	ld (CTRL_DESPLZ),a
 606+ 9C99 18 1C        	jr 3F
 607+ 9C9B
 608+ 9C9B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C9B
 610+ 9C9B 21 C3 8B     1 ld hl,Columns
 611+ 9C9E 35           	dec (hl)
 612+ 9C9F AF           	xor a
 613+ 9CA0 32 C8 8B     	ld (CTRL_DESPLZ),a
 614+ 9CA3 3A D3 8B     	ld a,(Cuad_objeto)
 615+ 9CA6 E6 01        	and 1
 616+ 9CA8 28 0A        	jr z,2F
 617+ 9CAA 2A C4 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CAD 2B           	dec hl
 619+ 9CAE 22 C4 8B     	ld (Posicion_actual),hl
 620+ 9CB1 CD B7 94     	call Genera_coordenadas
 621+ 9CB4
 622+ 9CB4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CB4
 624+ 9CB4 CD C0 90     2 call Inicia_puntero_objeto_izq
 625+ 9CB7 C9           3 ret
 626+ 9CB8
 627+ 9CB8              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CB8              ;
 629+ 9CB8              ;	19/10/22
 630+ 9CB8              ;
 631+ 9CB8              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CB8              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CB8
 634+ 9CB8 3A B5 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CBB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CBD C9           	ret
 637+ 9CBE
 638+ 9CBE              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CBE              ;
 640+ 9CBE              ;	19/10/22
 641+ 9CBE              ;
 642+ 9CBE              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CBE              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CBE
 645+ 9CBE 3A B5 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CC1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CC3 C9           	ret
 648+ 9CC4
 649+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CC4              ;
 651+ 9CC4              ;	24/7/22
 652+ 9CC4              ;
 653+ 9CC4              ;	Inc_CTRL_DESPLZ
 654+ 9CC4              ;
 655+ 9CC4              ;
 656+ 9CC4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CC4
 658+ 9CC4 21 C8 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CC7 3A DA 8B     	ld a,(Vel_right)
 660+ 9CCA A7           	and a
 661+ 9CCB 28 06        	jr z,1F
 662+ 9CCD 47           	ld b,a
 663+ 9CCE 34           3 inc (hl)
 664+ 9CCF 10 FD        	djnz 3B
 665+ 9CD1 18 01        	jr 2F
 666+ 9CD3 34           1 inc (hl)
 667+ 9CD4 C9           2 ret
 668+ 9CD5
 669+ 9CD5              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CD5              ;
 671+ 9CD5              ;	5/2/23
 672+ 9CD5              ;
 673+ 9CD5              ;	Dec_CTRL_DESPLZ
 674+ 9CD5              ;
 675+ 9CD5              ;
 676+ 9CD5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CD5
 678+ 9CD5 21 C8 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CD8 3A D9 8B     	ld a,(Vel_left)
 680+ 9CDB A7           	and a
 681+ 9CDC 28 06        	jr z,1F
 682+ 9CDE 47           	ld b,a
 683+ 9CDF 35           3 dec (hl)
 684+ 9CE0 10 FD        	djnz 3B
 685+ 9CE2 18 01        	jr 2F
 686+ 9CE4 35           1 dec (hl)
 687+ 9CE5 C9           2 ret
 688+ 9CE6
 689+ 9CE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CE6
 691+ 9CE6 2A C4 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CE9 01 1F 00     	ld bc,31
 693+ 9CEC A7           	and a
 694+ 9CED ED 4A        	adc hl,bc
 695+ 9CEF 22 C4 8B     	ld (Posicion_actual),hl
 696+ 9CF2 21 C1 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CF5 CB C6        	set 0,(hl)
 698+ 9CF7 C9           	ret
 699+ 9CF8
 700+ 9CF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CF8
 702+ 9CF8 2A C4 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CFB 01 1F 00     	ld bc,31
 704+ 9CFE A7           	and a
 705+ 9CFF ED 42        	sbc hl,bc
 706+ 9D01 22 C4 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D04 21 C1 8B     	ld hl,Ctrl_0
 708+ 9D07 CB CE        	set 1,(hl)
 709+ 9D09 C9           	ret
 710+ 9D0A
 711+ 9D0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D0A
 713+ 9D0A 24           Reaparece_abajo inc h
 714+ 9D0B 01 E0 17     	ld bc,$17e0
 715+ 9D0E A7           	and a
 716+ 9D0F ED 4A        	adc hl,bc
 717+ 9D11 22 C4 8B     	ld (Posicion_actual),hl
 718+ 9D14 21 C1 8B     	ld hl,Ctrl_0
 719+ 9D17 CB D6        	set 2,(hl)
 720+ 9D19 C9           	ret
 721+ 9D1A
 722+ 9D1A              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D1A
 724+ 9D1A 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D1D A7           	and a
 726+ 9D1E ED 42        	sbc hl,bc
 727+ 9D20 22 C4 8B     	ld (Posicion_actual),hl
 728+ 9D23 21 C1 8B     	ld hl,Ctrl_0
 729+ 9D26 CB DE        	set 3,(hl)
 730+ 9D28 C9           	ret
 731+ 9D29
 732+ 9D29              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D29              ;
 734+ 9D29              ;	15/07/23
 735+ 9D29
 736+ 9D29              Reinicio
 737+ 9D29
 738+ 9D29              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D29
 740+ 9D29 AF           	xor a
 741+ 9D2A 21 E9 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D2D CD 4B 9D     	call Limpia_contenido_hl
 743+ 9D30
 744+ 9D30 21 C4 8B     	ld hl,Posicion_actual
 745+ 9D33 CD 4B 9D     	call Limpia_contenido_hl
 746+ 9D36
 747+ 9D36 CD 99 92     	call Inicializa_Puntero_indice_mov
 748+ 9D39 CD 4A 9E     	call Inicia_Puntero_mov
 749+ 9D3C
 750+ 9D3C 21 EB 8B     	ld hl,Incrementa_puntero
 751+ 9D3F 06 05        	ld b,5
 752+ 9D41 77           1 ld (hl),a
 753+ 9D42 23           	inc hl
 754+ 9D43 10 FC        	djnz 1B
 755+ 9D45
 756+ 9D45 21 C0 8B     	ld hl,Ctrl_2
 757+ 9D48 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D4A
 759+ 9D4A C9           	ret
 760+ 9D4B
 761+ 9D4B 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D4C 23           	inc hl
 763+ 9D4D 77           	ld (hl),a
 764+ 9D4E C9           	ret
 765+ 9D4F
 766+ 9D4F              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D4F              ;
 768+ 9D4F              ;	18/6/24
 769+ 9D4F              ;
 770+ 9D4F
 771+ 9D4F              Amadeus_a_izquierda
 772+ 9D4F
 773+ 9D4F              ;	Actualiza contador de movimientos.
 774+ 9D4F
 775+ 9D4F 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D52 35           	dec (hl)
 777+ 9D53 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D55
 779+ 9D55 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D58 2B           	dec hl
 781+ 9D59 2B           	dec hl
 782+ 9D5A 2B           	dec hl
 783+ 9D5B 2B           	dec hl
 784+ 9D5C 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D5F
 786+ 9D5F 21 24 8C     	ld hl,Ctrl_3
 787+ 9D62 CB EE        	set 5,(hl)
 788+ 9D64
 789+ 9D64 C9           	ret
 790+ 9D65
 791+ 9D65 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D66 C9           	ret
 793+ 9D67
 794+ 9D67
 795+ 9D67              Amadeus_a_derecha
 796+ 9D67
 797+ 9D67              ;	Actualiza contador de movimientos.
 798+ 9D67
 799+ 9D67 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D6A 34           	inc (hl)
 801+ 9D6B 3E 7A        	ld a,$7a
 802+ 9D6D BE           	cp (hl)
 803+ 9D6E 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D70
 805+ 9D70 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D73 23           	inc hl
 807+ 9D74 23           	inc hl
 808+ 9D75 23           	inc hl
 809+ 9D76 23           	inc hl
 810+ 9D77 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D7A
 812+ 9D7A 21 24 8C     	ld hl,Ctrl_3
 813+ 9D7D CB EE        	set 5,(hl)
 814+ 9D7F C9           	ret
 815+ 9D80
 816+ 9D80 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D81 C9           	ret
# file closed: Direcciones.asm
2071  9D82              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D82              ; ----- ----- ----- ----- -----
   2+ 9D82              ;
   3+ 9D82              ;   28/12/23
   4+ 9D82
   5+ 9D82              Movimiento
   6+ 9D82
   7+ 9D82              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D82
   9+ 9D82 3A C0 8B         ld a,(Ctrl_2)
  10+ 9D85 CB 57            bit 2,a
  11+ 9D87 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D89
  13+ 9D89 2A E7 8B         ld hl,(Puntero_mov)
  14+ 9D8C 7E               ld a,(hl)
  15+ 9D8D
  16+ 9D8D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D8D
  18+ 9D8D              Inicia_desplazamiento.
  19+ 9D8D
  20+ 9D8D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D8D
  22+ 9D8D CD 80 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D90
  24+ 9D90              ; Iniciamos (Repetimos_mov).
  25+ 9D90
  26+ 9D90 7E               ld a,(hl)
  27+ 9D91 E6 0F            and $0f
  28+ 9D93 32 ED 8B         ld (Repetimos_desplazamiento),a
  29+ 9D96 32 EE 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D99
  31+ 9D99              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D99
  33+ 9D99 23               inc hl
  34+ 9D9A 7E               ld a,(hl)
  35+ 9D9B 32 F0 8B         ld (Cola_de_desplazamiento),a
  36+ 9D9E 2B               dec hl
  37+ 9D9F
  38+ 9D9F 21 C0 8B         ld hl,Ctrl_2
  39+ 9DA2 CB D6            set 2,(hl)
  40+ 9DA4
  41+ 9DA4              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DA4              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DA4
  44+ 9DA4              Desplazamiento_iniciado
  45+ 9DA4
  46+ 9DA4 CD 54 9E         call Aplica_desplazamiento
  47+ 9DA7
  48+ 9DA7              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DA7
  50+ 9DA7 3A 24 8C         ld a,(Ctrl_3)
  51+ 9DAA CB 4F            bit 1,a
  52+ 9DAC C0               ret nz
  53+ 9DAD
  54+ 9DAD 21 ED 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DB0 35               dec (hl)
  56+ 9DB1 C0               ret nz
  57+ 9DB2
  58+ 9DB2              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DB2              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DB2              ; Analiza (Cola_de_desplazamiento).
  61+ 9DB2
  62+ 9DB2 3A F0 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DB5 A7               and a
  64+ 9DB6 CC A9 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DB9 28 30            jr z,Reinicia_el_movimiento
  66+ 9DBB
  67+ 9DBB FE FF            cp $ff
  68+ 9DBD 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DBF
  70+ 9DBF FE FE            cp $fe
  71+ 9DC1 CC 2E 9E         call z,Fijamos_bucle
  72+ 9DC4 28 25            jr z,Reinicia_el_movimiento
  73+ 9DC6
  74+ 9DC6 FE FD            cp $fd
  75+ 9DC8 20 11            jr nz,1F
  76+ 9DCA
  77+ 9DCA              ; ---
  78+ 9DCA              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DCA
  80+ 9DCA 3A C0 8B         ld a,(Ctrl_2)
  81+ 9DCD CB 5F            bit 3,a
  82+ 9DCF 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DD1
  84+ 9DD1              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DD1
  86+ 9DD1 21 C0 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DD4 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DD6
  89+ 9DD6 CD 3F 9E         call Inicia_Repetimos_movimiento
  90+ 9DD9 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DDB              ; ---
  92+ 9DDB
  93+ 9DDB FE 01        1 cp 1
  94+ 9DDD CA 18 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DE0
  96+ 9DE0 3D               dec a
  97+ 9DE1 32 F0 8B         ld (Cola_de_desplazamiento),a
  98+ 9DE4
  99+ 9DE4 3A EE 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DE7 32 ED 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DEA              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DEA C9               ret
 103+ 9DEB
 104+ 9DEB              Reinicia_el_movimiento
 105+ 9DEB
 106+ 9DEB 3A C0 8B         ld a,(Ctrl_2)
 107+ 9DEE CB 5F            bit 3,a
 108+ 9DF0 28 1B            jr z,2F
 109+ 9DF2
 110+ 9DF2              ; (Cola_de_desplazamiento)="254".
 111+ 9DF2
 112+ 9DF2 21 EF 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DF5 35               dec (hl)
 114+ 9DF6 20 15            jr nz,2F
 115+ 9DF8
 116+ 9DF8              ; Fin de las repeticiones del último movimiento.
 117+ 9DF8
 118+ 9DF8 21 C0 8B         ld hl,Ctrl_2
 119+ 9DFB CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DFD
 121+ 9DFD 2A E7 8B         ld hl,(Puntero_mov)
 122+ 9E00 23               inc hl
 123+ 9E01 23               inc hl
 124+ 9E02 23               inc hl
 125+ 9E03 22 E7 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E06              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E06 7E               ld a,(hl)
 128+ 9E07 32 F0 8B         ld (Cola_de_desplazamiento),a
 129+ 9E0A
 130+ 9E0A C3 B2 9D         jp Cola
 131+ 9E0D
 132+ 9E0D CD 4A 9E     2 call Inicia_Puntero_mov
 133+ 9E10
 134+ 9E10 21 C0 8B         ld hl,Ctrl_2
 135+ 9E13 CB 96            res 2,(hl)
 136+ 9E15
 137+ 9E15 C3 82 9D         jp Movimiento
 138+ 9E18
 139+ 9E18              Siguiente_desplazamiento
 140+ 9E18
 141+ 9E18              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E18              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E18
 144+ 9E18 21 C0 8B         ld hl,Ctrl_2
 145+ 9E1B CB 96            res 2,(hl)
 146+ 9E1D
 147+ 9E1D 2A E7 8B         ld hl,(Puntero_mov)
 148+ 9E20 23               inc hl
 149+ 9E21 23               inc hl
 150+ 9E22 22 E7 8B         ld (Puntero_mov),hl
 151+ 9E25
 152+ 9E25 7E               ld a,(hl)
 153+ 9E26 A7               and a
 154+ 9E27 CC A9 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E2A CA EB 9D         jp z,Reinicia_el_movimiento
 156+ 9E2D
 157+ 9E2D C9               ret
 158+ 9E2E
 159+ 9E2E              ; Subrutinas -----------------------------------------
 160+ 9E2E              ; ---------- --------- --------- ---------- ----------
 161+ 9E2E              ;
 162+ 9E2E              ;   24/07/23
 163+ 9E2E              ;
 164+ 9E2E              ;   Fijamos_bucle
 165+ 9E2E              ;
 166+ 9E2E              ;
 167+ 9E2E
 168+ 9E2E              Fijamos_bucle
 169+ 9E2E
 170+ 9E2E 3A EB 8B         ld a,(Incrementa_puntero)
 171+ 9E31 3C               inc a
 172+ 9E32 32 EC 8B         ld (Incrementa_puntero_backup),a
 173+ 9E35
 174+ 9E35 CD A9 9E         call Incrementa_Puntero_indice_mov
 175+ 9E38 2A E5 8B         ld hl,(Puntero_indice_mov)
 176+ 9E3B 22 E9 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E3E C9               ret
 178+ 9E3F
 179+ 9E3F              ; ---------- --------- --------- ---------- ----------
 180+ 9E3F              ;
 181+ 9E3F              ;   07/7/23
 182+ 9E3F              ;
 183+ 9E3F              ;   Inicia_Repetimos_movimiento
 184+ 9E3F              ;
 185+ 9E3F              ;
 186+ 9E3F
 187+ 9E3F              Inicia_Repetimos_movimiento
 188+ 9E3F
 189+ 9E3F              ; Iniciamos (Repetimos_movimiento).
 190+ 9E3F
 191+ 9E3F DD 2A E7 8B      ld ix,(Puntero_mov)
 192+ 9E43 DD 7E 02         ld a,(ix+2)
 193+ 9E46 32 EF 8B         ld (Repetimos_movimiento),a
 194+ 9E49
 195+ 9E49 C9               ret
 196+ 9E4A
 197+ 9E4A              ; ---------- --------- --------- ---------- ----------
 198+ 9E4A              ;
 199+ 9E4A              ;   26/6/23
 200+ 9E4A              ;
 201+ 9E4A              ;   Inicia_Puntero_mov
 202+ 9E4A              ;
 203+ 9E4A              ;
 204+ 9E4A
 205+ 9E4A 2A E5 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E4D CD 98 90         call Extrae_address
 207+ 9E50 22 E7 8B         ld (Puntero_mov),hl
 208+ 9E53 C9               ret
 209+ 9E54
 210+ 9E54              ; ---------- --------- --------- ---------- ----------
 211+ 9E54              ;
 212+ 9E54              ;   27/06/23
 213+ 9E54              ;
 214+ 9E54              ;   Aplica_movimiento.
 215+ 9E54
 216+ 9E54              Aplica_desplazamiento
 217+ 9E54
 218+ 9E54              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E54
 220+ 9E54 2A E7 8B         ld hl, (Puntero_mov)
 221+ 9E57
 222+ 9E57 7E               ld a,(hl)
 223+ 9E58 E6 F0            and $f0
 224+ 9E5A C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E5B
 226+ 9E5B CB 7E            bit 7,(hl)
 227+ 9E5D 28 03            jr z,1F
 228+ 9E5F CD 36 9A         call Mov_up
 229+ 9E62 2A E7 8B     1 ld hl, (Puntero_mov)
 230+ 9E65 CB 76            bit 6,(hl)
 231+ 9E67 28 03            jr z,2F
 232+ 9E69 CD FD 99         call Mov_down
 233+ 9E6C
 234+ 9E6C              ; Se ha aplicado reinicio ???
 235+ 9E6C              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E6C
 237+ 9E6C              ;    ld a,(Ctrl_3)
 238+ 9E6C              ;    bit 1,a
 239+ 9E6C              ;    ret nz
 240+ 9E6C
 241+ 9E6C 2A E7 8B     2 ld hl, (Puntero_mov)
 242+ 9E6F CB 6E            bit 5,(hl)
 243+ 9E71 28 03            jr z,3F
 244+ 9E73 CD 9C 9B         call Mov_left
 245+ 9E76 2A E7 8B     3 ld hl, (Puntero_mov)
 246+ 9E79 CB 66            bit 4,(hl)
 247+ 9E7B C8               ret z
 248+ 9E7C CD 79 9A         call Mov_right
 249+ 9E7F C9               ret
 250+ 9E80
 251+ 9E80              ; ---------- --------- --------- ---------- ----------
 252+ 9E80              ;
 253+ 9E80              ;   26/06/23
 254+ 9E80              ;
 255+ 9E80              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E80
 257+ 9E80              Ajusta_velocidad_desplazamiento
 258+ 9E80
 259+ 9E80              ; 1er byte de la cadena de movimiento.
 260+ 9E80              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E80
 262+ 9E80 CD 9E 9E         call Extrae_nibble_alto
 263+ 9E83
 264+ 9E83 32 DB 8B         ld (Vel_up),a
 265+ 9E86 79               ld a,c
 266+ 9E87 E6 0F            and $0f
 267+ 9E89 32 DC 8B         ld (Vel_down),a
 268+ 9E8C
 269+ 9E8C              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E8C              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E8C
 272+ 9E8C 23               inc hl
 273+ 9E8D CD 9E 9E         call Extrae_nibble_alto
 274+ 9E90
 275+ 9E90 32 D9 8B         ld (Vel_left),a
 276+ 9E93 79               ld a,c
 277+ 9E94 E6 0F            and $0f
 278+ 9E96 32 DA 8B         ld (Vel_right),a
 279+ 9E99
 280+ 9E99              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E99
 282+ 9E99 23               inc hl
 283+ 9E9A 22 E7 8B         ld (Puntero_mov),hl
 284+ 9E9D C9               ret
 285+ 9E9E
 286+ 9E9E 06 04        Extrae_nibble_alto ld b,4
 287+ 9EA0 7E               ld a,(hl)
 288+ 9EA1 4F               ld c,a
 289+ 9EA2 E6 F0            and $f0
 290+ 9EA4 CB 3F        1 srl a
 291+ 9EA6 10 FC            djnz 1B
 292+ 9EA8 C9               ret
 293+ 9EA9
 294+ 9EA9              ; ---------- --------- --------- ---------- ----------
 295+ 9EA9              ;
 296+ 9EA9              ;   5/7/23
 297+ 9EA9              ;
 298+ 9EA9              ;   Incrementa_Puntero_indice_mov
 299+ 9EA9
 300+ 9EA9              Incrementa_Puntero_indice_mov
 301+ 9EA9
 302+ 9EA9 21 EB 8B         ld hl,Incrementa_puntero
 303+ 9EAC 34               inc (hl)
 304+ 9EAD
 305+ 9EAD 2A E5 8B         ld hl,(Puntero_indice_mov)
 306+ 9EB0 01 02 00         ld bc,2
 307+ 9EB3 A7               and a
 308+ 9EB4 09               add hl,bc
 309+ 9EB5 22 E5 8B         ld (Puntero_indice_mov),hl
 310+ 9EB8
 311+ 9EB8 7E               ld a,(hl)
 312+ 9EB9 A7               and a
 313+ 9EBA
 314+ 9EBA              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EBA
 316+ 9EBA              ;    jr z,$
 317+ 9EBA
 318+ 9EBA              ;! Reinicia el Patrón de movimiento.
 319+ 9EBA
 320+ 9EBA CC BF 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EBD
 322+ 9EBD AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EBE
 324+ 9EBE C9               ret
 325+ 9EBF
 326+ 9EBF              ; ---------- --------- --------- ---------- ----------
 327+ 9EBF              ;
 328+ 9EBF              ;   15/01/24
 329+ 9EBF              ;
 330+ 9EBF              ;   Inicializa_Puntero_indice_mov
 331+ 9EBF
 332+ 9EBF              Inicializa_Puntero_indice_mov_2
 333+ 9EBF
 334+ 9EBF              ; Existe etiqueta de bucle principal???
 335+ 9EBF
 336+ 9EBF 2A E9 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EC2 24               inc h
 338+ 9EC3 25               dec h
 339+ 9EC4 28 05            jr z,2F
 340+ 9EC6
 341+ 9EC6 22 E5 8B         ld (Puntero_indice_mov),hl
 342+ 9EC9 18 14            jr 3F
 343+ 9ECB
 344+ 9ECB              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ECB
 346+ 9ECB 3A EB 8B     2 ld a,(Incrementa_puntero)
 347+ 9ECE 47               ld b,a
 348+ 9ECF
 349+ 9ECF 2A E5 8B         ld hl,(Puntero_indice_mov)
 350+ 9ED2 2B           1 dec hl
 351+ 9ED3 2B               dec hl
 352+ 9ED4 10 FC            djnz 1B
 353+ 9ED6 22 E5 8B         ld (Puntero_indice_mov),hl
 354+ 9ED9
 355+ 9ED9 AF               xor a
 356+ 9EDA 32 EB 8B         ld (Incrementa_puntero),a
 357+ 9EDD 18 06            jr 4F
 358+ 9EDF
 359+ 9EDF 3A EC 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EE2 32 EB 8B         ld (Incrementa_puntero),a
 361+ 9EE5 C9           4 ret
 362+ 9EE6
 363+ 9EE6              ; ----------------------------------------------------------------------
 364+ 9EE6              ;
 365+ 9EE6              ;   30/01/24
 366+ 9EE6              ;
 367+ 9EE6              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EE6
 369+ 9EE6 3A B4 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EE9 CD 34 94         call Calcula_salto_en_BC
 371+ 9EEC 21 DD 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EEF A7               and a
 373+ 9EF0 ED 4A            adc hl,bc
 374+ 9EF2 C9               ret
 375+ 9EF3
 376+ 9EF3              ; ----------------------------------------------------------------------
 377+ 9EF3              ;
 378+ 9EF3              ;   30/01/24
 379+ 9EF3              ;
 380+ 9EF3              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EF3              ;
 382+ 9EF3              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EF3
 384+ 9EF3 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EF4 23               inc hl
 386+ 9EF5 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EF6 69               ld l,c
 388+ 9EF7 60               ld h,b
 389+ 9EF8 22 BD 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EFB C9               ret
 391+ 9EFC
# file closed: Movimiento.asm
2072  9EFC              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EFC              Motor_de_disparos_entidades
   2+ 9EFC
   3+ 9EFC 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9EFF FE 07            cp 7
   5+ 9F01 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9F02
   7+ 9F02 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9F04 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F07
  10+ 9F07 CD 98 90     1 call Extrae_address
  11+ 9F0A 13               inc de
  12+ 9F0B 13               inc de
  13+ 9F0C ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F10
  15+ 9F10 23               inc hl
  16+ 9F11
  17+ 9F11 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F12 35               dec (hl)
  19+ 9F13 28 14            jr z,3F
  20+ 9F15
  21+ 9F15 23               inc hl
  22+ 9F16
  23+ 9F16 CD 98 90         call Extrae_address
  24+ 9F19              ;   (Puntero_de_impresion) del disparo en HL.
  25+ 9F19
  26+ 9F19
  27+ 9F19              ;! Velocidad del disparo de entidades.
  28+ 9F19
  29+ 9F19              ;    call NextScan
  30+ 9F19              ;    call NextScan
  31+ 9F19              ;    call NextScan
  32+ 9F19              ;    call NextScan
  33+ 9F19 CD B7 99         call NextScan
  34+ 9F1C
  35+ 9F1C              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  36+ 9F1C
  37+ 9F1C CD 2D 9F         call Fin_de_disparo_de_entidad
  38+ 9F1F
  39+ 9F1F EB               ex de,hl
  40+ 9F20
  41+ 9F20 73               ld (hl),e
  42+ 9F21 23               inc hl
  43+ 9F22 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  44+ 9F23
  45+ 9F23 2A 27 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  46+ 9F26 18 02            jr 2F
  47+ 9F28
  48+ 9F28 C9               ret
  49+ 9F29
  50+ 9F29 EB           3 ex de,hl
  51+ 9F2A 10 DB        2 djnz 1B
  52+ 9F2C
  53+ 9F2C C9               ret
  54+ 9F2D
  55+ 9F2D              ; ------------- ------------- ------------
  56+ 9F2D              ;
  57+ 9F2D              ;   25/9/24
  58+ 9F2D
  59+ 9F2D              Fin_de_disparo_de_entidad
  60+ 9F2D
  61+ 9F2D 7C               ld a,h
  62+ 9F2E FE 54            cp $54
  63+ 9F30 D8               ret c
  64+ 9F31
  65+ 9F31 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  66+ 9F32
  67+ 9F32 5D               ld e,l
  68+ 9F33 54               ld d,h
  69+ 9F34
  70+ 9F34 21 E0 57         ld hl,$57e0
  71+ 9F37 ED 52            sbc hl,de
  72+ 9F39
  73+ 9F39 38 04            jr c,Elimina_disparo_entidad
  74+ 9F3B
  75+ 9F3B 6B               ld l,e
  76+ 9F3C 62               ld h,d
  77+ 9F3D
  78+ 9F3D D1               pop de
  79+ 9F3E
  80+ 9F3E C9               ret
  81+ 9F3F
  82+ 9F3F              ; ------------ ----------- ------------
  83+ 9F3F              ;
  84+ 9F3F              ;   25/9/24
  85+ 9F3F
  86+ 9F3F              Elimina_disparo_entidad
  87+ 9F3F
  88+ 9F3F 21 14 8C         ld hl,Numero_de_disparos_de_entidades
  89+ 9F42 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
  90+ 9F43
  91+ 9F43 E1               pop hl
  92+ 9F44 E5               push hl
  93+ 9F45
  94+ 9F45 2B               dec hl
  95+ 9F46 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
  96+ 9F47
  97+ 9F47 16 06            ld d,6                                                              ; Contador
  98+ 9F49 AF               xor a                                                               ; Borrador
  99+ 9F4A
 100+ 9F4A 77           1 ld (hl),a
 101+ 9F4B 15               dec d
 102+ 9F4C 23               inc hl
 103+ 9F4D 20 FB            jr nz,1B
 104+ 9F4F
 105+ 9F4F D1               pop de
 106+ 9F50
 107+ 9F50 21 00 00         ld hl,0
 108+ 9F53
 109+ 9F53 C9               ret
 110+ 9F54              ; --------------------------------------------------------------------------------------
 111+ 9F54              ;
 112+ 9F54              ;   29/09/24
 113+ 9F54              ;
 114+ 9F54
 115+ 9F54              Genera_datos_de_impresion_disparos_Entidades
 116+ 9F54
 117+ 9F54 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 118+ 9F57 47               ld b,a
 119+ 9F58 3E 07            ld a,7
 120+ 9F5A 90               sub b
 121+ 9F5B C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 122+ 9F5C
 123+ 9F5C 08               ex af,af
 124+ 9F5D
 125+ 9F5D              ; ---------------
 126+ 9F5D
 127+ 9F5D              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 128+ 9F5D
 129+ 9F5D CD 91 90         call Inicia_Puntero_Disparo_Entidades
 130+ 9F60
 131+ 9F60 CD 98 90     1 call Extrae_address
 132+ 9F63
 133+ 9F63 23               inc hl
 134+ 9F64 7E               ld a,(hl)
 135+ 9F65 A7               and a
 136+ 9F66
 137+ 9F66 28 21            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 138+ 9F68
 139+ 9F68 2B               dec hl
 140+ 9F69
 141+ 9F69 ED 73 01 8C      ld (Stack),sp
 142+ 9F6D F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 143+ 9F6E
 144+ 9F6E              Genera_scanlines_de_los_disparos_de_entidades.
 145+ 9F6E
 146+ 9F6E C1               pop bc
 147+ 9F6F E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 148+ 9F70              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 149+ 9F70 ED 7B 11 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 150+ 9F74
 151+ 9F74 F1               pop af
 152+ 9F75 F1               pop af
 153+ 9F76 F1               pop af
 154+ 9F77
 155+ 9F77 ED 73 11 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 156+ 9F7B
 157+ 9F7B E5               push hl                                                   ;? Sube 2º scanline al álbum.
 158+ 9F7C CD B7 99         call NextScan
 159+ 9F7F E5               push hl                                                   ;? Sube 1er scanline al álbum.
 160+ 9F80 C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 161+ 9F81
 162+ 9F81 ED 7B 01 8C      ld sp,(Stack)
 163+ 9F85
 164+ 9F85 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 165+ 9F86 3D               dec a
 166+ 9F87 C8               ret z
 167+ 9F88 08               ex af,af
 168+ 9F89
 169+ 9F89              Situa_en_siguiente_caja
 170+ 9F89
 171+ 9F89 13               inc de
 172+ 9F8A 13               inc de
 173+ 9F8B
 174+ 9F8B EB               ex de,hl
 175+ 9F8C
 176+ 9F8C 18 D2            jr 1B
 177+ 9F8E
 178+ 9F8E              ; --------------------------------------------------------------------------------------
 179+ 9F8E              ;
 180+ 9F8E              ;   18/09/24
 181+ 9F8E              ;
 182+ 9F8E
 183+ 9F8E              Genera_disparo_de_entidad_maldosa
 184+ 9F8E
 185+ 9F8E              ;   Estructura de un disparo de entidades.
 186+ 9F8E
 187+ 9F8E              ;   Disparo_1 defw 0								; Puntero objeto.
 188+ 9F8E              ; 	defw 0											; Puntero de impresión.
 189+ 9F8E              ;	defw 0											; Control.
 190+ 9F8E
 191+ 9F8E              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 192+ 9F8E              ;   _de la entidad en el momento de disparar.
 193+ 9F8E
 194+ 9F8E              ;   El byte alto muestra la siguiente información:
 195+ 9F8E              ;
 196+ 9F8E              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 197+ 9F8E              ;                        _antes de desplazarse a derecha/izquierda.
 198+ 9F8E              ;
 199+ 9F8E              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 200+ 9F8E              ;
 201+ 9F8E              ;                        10xx ..... Izquierda.
 202+ 9F8E              ;                        01xx ..... Derecha.
 203+ 9F8E              ;                        00xx ..... Recto.
 204+ 9F8E
 205+ 9F8E              ;*  Exclusiones.
 206+ 9F8E
 207+ 9F8E              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 208+ 9F8E              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 209+ 9F8E
 210+ 9F8E 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 211+ 9F91 A7               and a
 212+ 9F92 C8               ret z
 213+ 9F93
 214+ 9F93 3A B6 8B         ld a,(Coordenada_y)
 215+ 9F96 A7               and a
 216+ 9F97 C8               ret z
 217+ 9F98
 218+ 9F98 3D               dec a
 219+ 9F99 C8               ret z
 220+ 9F9A
 221+ 9F9A FE 0F            cp 15
 222+ 9F9C D0               ret nc
 223+ 9F9D
 224+ 9F9D              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 225+ 9F9D              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 226+ 9F9D              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 227+ 9F9D              ;
 228+ 9F9D
 229+ 9F9D 21 16 8C         ld hl,Permiso_de_disparo_Entidades			        ; No más disparos en este FRAME.
 230+ 9FA0 35               dec (hl)
 231+ 9FA1
 232+ 9FA1 FD 21 70 83      ld iy,Disparo_de_entidad
 233+ 9FA5
 234+ 9FA5              ;   Decrementa el numero de disparos de entidades.
 235+ 9FA5
 236+ 9FA5 21 14 8C         ld hl,Numero_de_disparos_de_entidades
 237+ 9FA8 35               dec (hl)
 238+ 9FA9
 239+ 9FA9              ;   Puntero de impresión del disparo en BC.
 240+ 9FA9
 241+ 9FA9 21 29 8C         ld hl,Puntero_de_impresion_disparo_de_entidad
 242+ 9FAC 4E               ld c,(hl)
 243+ 9FAD 23               inc hl
 244+ 9FAE 46               ld b,(hl)
 245+ 9FAF
 246+ 9FAF CD 91 90         call Inicia_Puntero_Disparo_Entidades
 247+ 9FB2
 248+ 9FB2 2A 27 8C     1 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)              ; En la 1ª caja del índice.
 249+ 9FB5 CD 98 90         call Extrae_address
 250+ 9FB8
 251+ 9FB8              ;   Comprobamos si la caja está vacía.
 252+ 9FB8
 253+ 9FB8 23               inc hl
 254+ 9FB9 7E               ld a,(hl)
 255+ 9FBA A7               and a
 256+ 9FBB
 257+ 9FBB 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 258+ 9FBD
 259+ 9FBD              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 260+ 9FBD
 261+ 9FBD 2B               dec hl
 262+ 9FBE
 263+ 9FBE FD 7D            ld a,iyl
 264+ 9FC0 77               ld (hl),a
 265+ 9FC1 23               inc hl
 266+ 9FC2 FD 7C            ld a,iyh
 267+ 9FC4 77               ld (hl),a                                           ; Guarda el (puntero objeto) del disparo en la caja.
 268+ 9FC5
 269+ 9FC5 23               inc hl
 270+ 9FC6
 271+ 9FC6 71               ld (hl),c
 272+ 9FC7 23               inc hl
 273+ 9FC8 70               ld (hl),b                                           ; Guarda el puntero de impresión.
 274+ 9FC9
 275+ 9FC9 23               inc hl
 276+ 9FCA
 277+ 9FCA 3A BF 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 278+ 9FCD 77               ld (hl),a
 279+ 9FCE
 280+ 9FCE 23               inc hl
 281+ 9FCF
 282+ 9FCF              ;! Ajusta el grado de inclinación del disparo.
 283+ 9FCF
 284+ 9FCF 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 285+ 9FD1
 286+ 9FD1              ; Determina tendencia del disparo.
 287+ 9FD1
 288+ 9FD1 3A 6E 89         ld a,(CX_Amadeus)
 289+ 9FD4 47               ld b,a
 290+ 9FD5 3A B5 8B         ld a,(Coordenada_X)
 291+ 9FD8 90               sub b
 292+ 9FD9 38 07            jr c,Disparo_a_derecha
 293+ 9FDB
 294+ 9FDB FE 04        Disparo_a_izquierda cp 4
 295+ 9FDD
 296+ 9FDD D8               ret c
 297+ 9FDE C8               ret z
 298+ 9FDF
 299+ 9FDF CB FE            set 7,(hl)
 300+ 9FE1 C9               ret
 301+ 9FE2
 302+ 9FE2 47           Disparo_a_derecha ld b,a
 303+ 9FE3 3E FF            ld a,$ff
 304+ 9FE5 90               sub b
 305+ 9FE6
 306+ 9FE6 FE 04            cp 4
 307+ 9FE8
 308+ 9FE8 D8               ret c
 309+ 9FE9 C8               ret z
 310+ 9FEA
 311+ 9FEA CB F6            set 6,(hl)
 312+ 9FEC C9               ret
 313+ 9FED
 314+ 9FED              ;   --- --- ---
 315+ 9FED
 316+ 9FED              Situa_en_siguiente_disparo
 317+ 9FED
 318+ 9FED 13               inc de
 319+ 9FEE 13               inc de
 320+ 9FEF
 321+ 9FEF ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 322+ 9FF3 18 BD            jr 1B
 323+ 9FF5
 324+ 9FF5              ; --------------------------------------------------------------------------------------
 325+ 9FF5              ;
 326+ 9FF5              ;   31/08/24
 327+ 9FF5              ;
 328+ 9FF5
 329+ 9FF5              Compara_con_coordenadas_de_disparo
 330+ 9FF5
 331+ 9FF5 3A B6 8B         ld a,(Coordenada_y)
 332+ 9FF8 47               ld b,a
 333+ 9FF9 3A 2E 8C         ld a,(Coordenadas_disparo_certero)
 334+ 9FFC 90               sub b
 335+ 9FFD
 336+ 9FFD              ; A = "0" ok
 337+ 9FFD              ; A = "1" ok
 338+ 9FFD
 339+ 9FFD 28 08            jr z,Comprueba_coordenada_X
 340+ 9FFF 3D               dec a
 341+ A000 28 05            jr z,Comprueba_coordenada_X
 342+ A002
 343+ A002              ; A = "$ff" ok
 344+ A002
 345+ A002 FE FE            cp $fe
 346+ A004 28 01            jr z,Comprueba_coordenada_X
 347+ A006
 348+ A006 C9               ret
 349+ A007
 350+ A007              Comprueba_coordenada_X
 351+ A007
 352+ A007 3A B5 8B         ld a,(Coordenada_X)
 353+ A00A 47               ld b,a
 354+ A00B 21 2F 8C         ld hl,Coordenadas_disparo_certero+1
 355+ A00E 7E               ld a,(hl)
 356+ A00F 90               sub b
 357+ A010
 358+ A010              ; A = "0" ok
 359+ A010              ; A = "1" ok
 360+ A010
 361+ A010 28 09            jr z,Activa_Impacto_en_entidad
 362+ A012 3D               dec a
 363+ A013 28 06            jr z,Activa_Impacto_en_entidad
 364+ A015
 365+ A015              ; A = "2" ok
 366+ A015
 367+ A015 3D               dec a
 368+ A016 28 03            jr z,Activa_Impacto_en_entidad
 369+ A018
 370+ A018              ; A = "$ff"
 371+ A018
 372+ A018 FE FD            cp $fd
 373+ A01A C0               ret nz
 374+ A01B
 375+ A01B              Activa_Impacto_en_entidad
 376+ A01B
 377+ A01B              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 378+ A01B
 379+ A01B 3E 02            ld a,2
 380+ A01D 32 B8 8B         ld (Impacto),a
 381+ A020
 382+ A020              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 383+ A020
 384+ A020 11 C0 87         ld de,Indice_Explosion_entidades
 385+ A023 21 BB 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 386+ A026
 387+ A026 73               ld (hl),e
 388+ A027 23               inc hl
 389+ A028 72               ld (hl),d
 390+ A029
 391+ A029              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 392+ A029
 393+ A029 21 2B 8C         ld hl,Impacto2
 394+ A02C CB 9E            res 3,(hl)
 395+ A02E
 396+ A02E C9               ret
 397+ A02F
 398+ A02F              ; --------------------------------------------------------------------------------------
 399+ A02F              ;
 400+ A02F              ;   11/09/24
 401+ A02F              ;
 402+ A02F
 403+ A02F              Limpia_album_de_borrado_disparos
 404+ A02F
 405+ A02F 21 26 8C         ld hl,Ctrl_5
 406+ A032 CB 56            bit 2,(hl)
 407+ A034 C8               ret z
 408+ A035
 409+ A035              ;    jr z,1F
 410+ A035
 411+ A035              ;    res 2,(hl)
 412+ A035
 413+ A035              ;    jr Limpiando
 414+ A035
 415+ A035              ;1 bit 0,(hl)
 416+ A035              ;    ret z
 417+ A035              ;    res 0,(hl)
 418+ A035
 419+ A035              Limpiando
 420+ A035
 421+ A035 AF               xor a
 422+ A036 2A 0D 8C         ld hl,(Album_de_pintado_disparos)
 423+ A039 77               ld (hl),a
 424+ A03A 5D               ld e,l
 425+ A03B 54               ld d,h
 426+ A03C 1C               inc e                                           ; DE = HL+1
 427+ A03D 01 3A 00         ld bc,$003a
 428+ A040 ED B0            ldir
 429+ A042
 430+ A042 C9               ret
 431+ A043
 432+ A043
 433+ A043              ; --------------------------------------------------------------------------------------
 434+ A043              ;
 435+ A043              ;   29/09/24
 436+ A043              ;
 437+ A043
 438+ A043              Calcula_bytes_pintado_disparos
 439+ A043
 440+ A043 2A 0D 8C         ld hl,(Album_de_pintado_disparos)
 441+ A046 45               ld b,l
 442+ A047 2A 11 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 443+ A04A 7D               ld a,l
 444+ A04B
 445+ A04B 90               sub b
 446+ A04C 32 13 8C         ld (Num_de_bytes_album_de_disparos),a
 447+ A04F
 448+ A04F C9               ret
 449+ A050
 450+ A050              ; --------------------------------------------------------------------------------------
 451+ A050              ;
 452+ A050              ;   29/09/24
 453+ A050              ;
 454+ A050              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 455+ A050              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 456+ A050              ;   _disparos que el álbum del FRAME actual).
 457+ A050
 458+ A050              Limpia_album_de_pintado_disparos
 459+ A050
 460+ A050 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos)
 461+ A053 A7               and a
 462+ A054 28 0E            jr z,Clean_only_one
 463+ A056
 464+ A056 47               ld b,a
 465+ A057 3E 3B            ld a,$3b
 466+ A059 90               sub b
 467+ A05A 47               ld b,a
 468+ A05B AF           2 xor a
 469+ A05C
 470+ A05C 2A 11 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 471+ A05F 77           1 ld (hl),a
 472+ A060 23               inc hl
 473+ A061 10 FC            djnz 1B
 474+ A063 C9               ret
 475+ A064
 476+ A064              Clean_only_one
 477+ A064
 478+ A064 06 06            ld b,6
 479+ A066 18 F3            jr 2B
 480+ A068
 481+ A068              ; --------------------------------------------------------------------------------------
 482+ A068              ;
 483+ A068              ;   29/09/24
 484+ A068              ;
 485+ A068
 486+ A068              Motor_Disparos_Amadeus
 487+ A068
 488+ A068              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 489+ A068
 490+ A068 21 20 89         ld hl,Disparo_Amad+1
 491+ A06B
 492+ A06B 34               inc (hl)
 493+ A06C 35               dec (hl)
 494+ A06D
 495+ A06D C8               ret z
 496+ A06E
 497+ A06E              ;   Esta caja contiene un disparo.
 498+ A06E
 499+ A06E CD 75 A0         call Consulta_Impacto
 500+ A071 CC 8E A0         call z,Mueve_disparo_Amadeus
 501+ A074
 502+ A074 C9               ret
 503+ A075
 504+ A075              ; ----------------------
 505+ A075              ;
 506+ A075              ;
 507+ A075              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 508+ A075              ;
 509+ A075              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 510+ A075
 511+ A075
 512+ A075              Consulta_Impacto
 513+ A075
 514+ A075              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 515+ A075              ;   _sea lo más coherente posible.
 516+ A075
 517+ A075 E5               push hl
 518+ A076 2B               dec hl
 519+ A077 CD 6F A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 520+ A07A E1               pop hl
 521+ A07B 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 522+ A07C
 523+ A07C C8               ret z
 524+ A07D
 525+ A07D 3A 2B 8C         ld a,(Impacto2)
 526+ A080 CB DF            set 3,a
 527+ A082 32 2B 8C         ld (Impacto2),a
 528+ A085
 529+ A085 E5               push hl
 530+ A086 CD 5C A1         call Genera_coordenadas_de_disparo_Amadeus
 531+ A089 E1               pop hl
 532+ A08A CD A7 A0         call Elimina_disparo_Amadeus
 533+ A08D
 534+ A08D C9               ret
 535+ A08E
 536+ A08E              ; ----------------------
 537+ A08E              ;
 538+ A08E              ;
 539+ A08E              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 540+ A08E
 541+ A08E              Mueve_disparo_Amadeus
 542+ A08E
 543+ A08E CD 98 90         call Extrae_address
 544+ A091
 545+ A091 CD C6 99         call PreviousScan
 546+ A094 CD C6 99         call PreviousScan
 547+ A097 CD C6 99         call PreviousScan
 548+ A09A CD C6 99         call PreviousScan
 549+ A09D
 550+ A09D              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 551+ A09D
 552+ A09D 7C               ld a,h
 553+ A09E D6 40            sub $40
 554+ A0A0 EB               ex de,hl
 555+ A0A1 38 04            jr c,Elimina_disparo_Amadeus
 556+ A0A3
 557+ A0A3               ; Introduce nuevo puntero_de_impresión en la caja.
 558+ A0A3
 559+ A0A3 73               ld (hl),e
 560+ A0A4 23               inc hl
 561+ A0A5 72               ld (hl),d
 562+ A0A6
 563+ A0A6 C9               ret
 564+ A0A7
 565+ A0A7              ; ----------------------
 566+ A0A7              ;
 567+ A0A7              ;   29/9/24
 568+ A0A7
 569+ A0A7              Elimina_disparo_Amadeus
 570+ A0A7
 571+ A0A7              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 572+ A0A7              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 573+ A0A7
 574+ A0A7              ;   Disparo_1A defw 0									; Puntero objeto.
 575+ A0A7              ;   	defw 0											; Puntero de impresión.
 576+ A0A7
 577+ A0A7 2B               dec hl
 578+ A0A8 2B               dec hl
 579+ A0A9
 580+ A0A9 AF               xor a
 581+ A0AA 77               ld (hl),a
 582+ A0AB 23               inc hl
 583+ A0AC 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 584+ A0AD
 585+ A0AD 23               inc hl
 586+ A0AE 77               ld (hl),a
 587+ A0AF 23               inc hl
 588+ A0B0 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 589+ A0B1
 590+ A0B1 3E 01            ld a,1
 591+ A0B3 32 15 8C         ld (Permiso_de_disparo_Amadeus),a
 592+ A0B6
 593+ A0B6 21 26 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 594+ A0B9 CB C6            set 0,(hl)
 595+ A0BB
 596+ A0BB AF               xor a
 597+ A0BC 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 598+ A0BD
 599+ A0BD C9               ret
 600+ A0BE
 601+ A0BE              ; --------------------------------------------------------------------------------------
 602+ A0BE              ;
 603+ A0BE              ;   21/8/24
 604+ A0BE              ;
 605+ A0BE
 606+ A0BE              Pinta_disparos
 607+ A0BE
 608+ A0BE              ;    ld a,(Ctrl_5)
 609+ A0BE              ;    bit 2,a
 610+ A0BE              ;    jr nz,$
 611+ A0BE
 612+ A0BE ED 73 01 8C      ld (Stack),sp
 613+ A0C2 06 02            ld b,2
 614+ A0C4
 615+ A0C4 ED 7B 0F 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 616+ A0C8
 617+ A0C8 D1           2 pop de
 618+ A0C9
 619+ A0C9 14               inc d
 620+ A0CA 15               dec d
 621+ A0CB
 622+ A0CB 28 1B            jr z,1F
 623+ A0CD
 624+ A0CD              Imprime_scanlines_de_disparo
 625+ A0CD
 626+ A0CD E1               pop hl
 627+ A0CE
 628+ A0CE              ; Puntero objeto en DE.
 629+ A0CE              ; Puntero_de_impresión en HL.
 630+ A0CE
 631+ A0CE              ; 1er scanline.
 632+ A0CE
 633+ A0CE 1A               ld a,(de)
 634+ A0CF AE               xor (hl)
 635+ A0D0 77               ld (hl),a
 636+ A0D1
 637+ A0D1 13               inc de
 638+ A0D2 2C               inc l
 639+ A0D3
 640+ A0D3 1A               ld a,(de)
 641+ A0D4 AE               xor (hl)
 642+ A0D5 77               ld (hl),a
 643+ A0D6
 644+ A0D6              ; 2º scanline.
 645+ A0D6
 646+ A0D6 E1               pop hl
 647+ A0D7 1B               dec de
 648+ A0D8
 649+ A0D8 1A               ld a,(de)
 650+ A0D9 AE               xor (hl)
 651+ A0DA 77               ld (hl),a
 652+ A0DB
 653+ A0DB 13               inc de
 654+ A0DC 2C               inc l
 655+ A0DD
 656+ A0DD 1A               ld a,(de)
 657+ A0DE AE               xor (hl)
 658+ A0DF 77               ld (hl),a
 659+ A0E0
 660+ A0E0              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 661+ A0E0
 662+ A0E0 18 E6            jr 2B
 663+ A0E2
 664+ A0E2 ED 7B 0D 8C  3 ld sp,(Album_de_pintado_disparos)
 665+ A0E6 18 E0            jr 2B
 666+ A0E8
 667+ A0E8 10 F8        1 djnz 3B
 668+ A0EA ED 7B 01 8C      ld sp,(Stack)
 669+ A0EE C9               ret
 670+ A0EF
 671+ A0EF              ; --------------------------------------------------------------------------------------
 672+ A0EF              ;
 673+ A0EF              ;   14/09/24
 674+ A0EF              ;
 675+ A0EF              ;   Modifica: HL y DE.
 676+ A0EF
 677+ A0EF
 678+ A0EF              Genera_datos_de_impresion_disparos_Amadeus
 679+ A0EF
 680+ A0EF ED 73 01 8C      ld (Stack),sp
 681+ A0F3 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 682+ A0F6 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 683+ A0F7
 684+ A0F7 14               inc d                                                     ;? Salimos si no hay disparo.
 685+ A0F8 15               dec d
 686+ A0F9
 687+ A0F9 28 12            jr z,Salida
 688+ A0FB
 689+ A0FB              Genera_scanlines_de_disparo_Amadeus
 690+ A0FB
 691+ A0FB E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 692+ A0FC              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 693+ A0FC ED 7B 11 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 694+ A100
 695+ A100 C1               pop bc
 696+ A101 C1               pop bc
 697+ A102 C1               pop bc
 698+ A103
 699+ A103 ED 73 11 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 700+ A107
 701+ A107 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 702+ A108 CD C6 99         call PreviousScan
 703+ A10B E5               push hl                                                   ;? Sube 1er scanline al álbum.
 704+ A10C D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 705+ A10D
 706+ A10D              Salida
 707+ A10D
 708+ A10D ED 7B 01 8C      ld sp,(Stack)
 709+ A111
 710+ A111 C9               ret
 711+ A112
 712+ A112              ; --------------------------------------------------------------------------------------
 713+ A112              ;
 714+ A112              ;   12/09/24
 715+ A112              ;
 716+ A112
 717+ A112              Genera_disparo_Amadeus
 718+ A112
 719+ A112              ;*  Exclusiones.
 720+ A112
 721+ A112 3A 15 8C         ld a,(Permiso_de_disparo_Amadeus)
 722+ A115 A7               and a
 723+ A116 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 724+ A117
 725+ A117 3D               dec a
 726+ A118 32 15 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 727+ A11B
 728+ A11B              Define_puntero_objeto_disparo
 729+ A11B
 730+ A11B              ;   Inicializamos contador.
 731+ A11B
 732+ A11B 06 00            ld b,0
 733+ A11D
 734+ A11D 2A 72 89         ld hl,(p.imp.amadeus)
 735+ A120 2C               inc l
 736+ A121
 737+ A121 3E 80            ld a,$80
 738+ A123 BE               cp (hl)
 739+ A124 28 0D            jr z,1F
 740+ A126
 741+ A126 04               inc b
 742+ A127
 743+ A127 3E 60            ld a,$60
 744+ A129 BE               cp (hl)
 745+ A12A 28 07            jr z,1F
 746+ A12C
 747+ A12C
 748+ A12C 04               inc b
 749+ A12D
 750+ A12D 3E 18            ld a,$18
 751+ A12F BE               cp (hl)
 752+ A130 28 01            jr z,1F
 753+ A132
 754+ A132 04               inc b
 755+ A133
 756+ A133              ;   Calcula el Puntero_de_impresión del disparo.
 757+ A133
 758+ A133              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 759+ A133
 760+ A133 CD C6 99     1 call PreviousScan
 761+ A136
 762+ A136 78               ld a,b
 763+ A137 CB 3F            srl a
 764+ A139 28 03            jr z,4F
 765+ A13B
 766+ A13B              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 767+ A13B E5               push hl
 768+ A13C 18 02            jr 5F
 769+ A13E 2D           4 dec l
 770+ A13F E5               push hl
 771+ A140              ; ---
 772+ A140
 773+ A140              ;   Calcula el Puntero_objeto del disparo.
 774+ A140
 775+ A140 21 72 83     5 ld hl,Indice_disparo_Amadeus
 776+ A143 04               inc b
 777+ A144 05               dec b
 778+ A145 28 04            jr z,2F
 779+ A147
 780+ A147              ;   Nos desplazamos por el índice de disparos.
 781+ A147
 782+ A147 2C           3 inc l
 783+ A148 2C               inc l
 784+ A149 10 FC            djnz 3B
 785+ A14B
 786+ A14B              ; --- Guarda el Puntero_objeto del disparo en la pila.
 787+ A14B CD 98 90     2 call Extrae_address
 788+ A14E E5               push hl
 789+ A14F              ; ---
 790+ A14F
 791+ A14F              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 792+ A14F              ; HL en el 1er .db de la caja.
 793+ A14F
 794+ A14F 21 1F 89         ld hl,Disparo_Amad
 795+ A152
 796+ A152 06 02            ld b,2
 797+ A154
 798+ A154 D1           6 pop de
 799+ A155 73               ld (hl),e
 800+ A156 23               inc hl
 801+ A157 72               ld (hl),d
 802+ A158 23               inc hl
 803+ A159
 804+ A159 10 F9            djnz 6B
 805+ A15B
 806+ A15B C9               ret
 807+ A15C
 808+ A15C              Genera_coordenadas_de_disparo_Amadeus
 809+ A15C
 810+ A15C              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 811+ A15C              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 812+ A15C              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 813+ A15C
 814+ A15C CD 98 90         call Extrae_address
 815+ A15F CD B7 94         call Genera_coordenadas
 816+ A162
 817+ A162 3D               dec a
 818+ A163
 819+ A163 21 2E 8C         ld hl,Coordenadas_disparo_certero
 820+ A166 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 821+ A167 23               inc hl
 822+ A168 3A B5 8B         ld a,(Coordenada_X)
 823+ A16B 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 824+ A16C
 825+ A16C AF               xor a
 826+ A16D 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 827+ A16E
 828+ A16E C9               ret
 829+ A16F
 830+ A16F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 831+ A16F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 832+ A16F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 833+ A16F
 834+ A16F              ; ----------------------------------------------
 835+ A16F              ;
 836+ A16F              ;   27/08/24
 837+ A16F              ;
 838+ A16F              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 839+ A16F              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 840+ A16F
 841+ A16F              Detecta_impacto_en_disparo_de_Amadeus
 842+ A16F
 843+ A16F              Extraccion_de_datos
 844+ A16F
 845+ A16F 13               inc de
 846+ A170 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 847+ A171
 848+ A171 5E               ld e,(hl)
 849+ A172 23               inc hl
 850+ A173 56               ld d,(hl)
 851+ A174
 852+ A174 23               inc hl
 853+ A175
 854+ A175 4E               ld c,(hl)
 855+ A176 23               inc hl
 856+ A177 46               ld b,(hl)
 857+ A178
 858+ A178 C5               push bc
 859+ A179 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 860+ A17A
 861+ A17A              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 862+ A17A
 863+ A17A CD C6 99         call PreviousScan
 864+ A17D CD C6 99         call PreviousScan
 865+ A180
 866+ A180              Detecta_impacto_
 867+ A180
 868+ A180 1A               ld a,(de)
 869+ A181 A6               and (hl)
 870+ A182 C0               ret nz
 871+ A183
 872+ A183 13               inc de
 873+ A184 23               inc hl
 874+ A185
 875+ A185 1A               ld a,(de)
 876+ A186 A6               and (hl)
 877+ A187 C9               ret
 878+ A188
 879+ A188              ; -------------------------------------------------------------------------------------------------------------
 880+ A188              ;
 881+ A188              ;   8/8/24
 882+ A188              ;
 883+ A188              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 884+ A188              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 885+ A188              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 886+ A188              ;
 887+ A188              ;   MODIFICA: HL,DE,BC y A.
 888+ A188              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 889+ A188              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 890+ A188
 891+ A188              Colision_Entidad_Amadeus
 892+ A188
 893+ A188              ; Posible contacto de entidad con Amadeus. ?????
 894+ A188
 895+ A188              ; Exclusiones:
 896+ A188
 897+ A188 3A 4E 8C         ld a,(Shield)
 898+ A18B A7               and a
 899+ A18C C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 900+ A18D
 901+ A18D 21 24 8C         ld hl,Ctrl_3
 902+ A190 CB 76            bit 6,(hl)
 903+ A192 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 904+ A193
 905+ A193 21 2B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 906+ A196 CB 56            bit 2,(hl)
 907+ A198 C0               ret nz
 908+ A199
 909+ A199 3A B6 8B     	ld a,(Coordenada_y)
 910+ A19C FE 14        	cp $14
 911+ A19E D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 912+ A19F
 913+ A19F 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 914+ A1A2 A7               and a
 915+ A1A3 C0               ret nz
 916+ A1A4
 917+ A1A4              Genera_coordenadas_X
 918+ A1A4
 919+ A1A4              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 920+ A1A4              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 921+ A1A4
 922+ A1A4              ;   Limpiamos almacenes.
 923+ A1A4
 924+ A1A4              ;    call Limpia_Coordenadas_X
 925+ A1A4
 926+ A1A4              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 927+ A1A4
 928+ A1A4 21 30 8C         ld hl,Coordenadas_X_Entidad
 929+ A1A7 3A B5 8B         ld a,(Coordenada_X)
 930+ A1AA CD CC A1         call Guarda_coordenadas_X
 931+ A1AD
 932+ A1AD              ;   Almacenamos las coordenadas X de Amadeus.
 933+ A1AD
 934+ A1AD 3A 6E 89         ld a,(CX_Amadeus)
 935+ A1B0 CD CC A1         call Guarda_coordenadas_X
 936+ A1B3 CD E0 A1         call Compara_coordenadas_X
 937+ A1B6 C0               ret nz
 938+ A1B7
 939+ A1B7 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 940+ A1B9 32 B8 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 941+ A1BC
 942+ A1BC 2A F4 8B         ld hl,(Puntero_store_caja)
 943+ A1BF 2C               inc l
 944+ A1C0 2C               inc l
 945+ A1C1 2C               inc l
 946+ A1C2 2C               inc l
 947+ A1C3 22 2C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 948+ A1C6
 949+ A1C6 21 2B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 950+ A1C9 CB D6            set 2,(hl)
 951+ A1CB
 952+ A1CB C9               ret
 953+ A1CC
 954+ A1CC               ; ----- ----- ----- ----- -----
 955+ A1CC
 956+ A1CC 77           Guarda_coordenadas_X ld (hl),a
 957+ A1CD 3C               inc a
 958+ A1CE 2C               inc l
 959+ A1CF 77               ld (hl),a
 960+ A1D0 3C               inc a
 961+ A1D1 2C               inc l
 962+ A1D2 77               ld (hl),a
 963+ A1D3 2C               inc l
 964+ A1D4 C9               ret
 965+ A1D5
 966+ A1D5 AF           Limpia_Coordenadas_X xor a
 967+ A1D6 06 06            ld b,6
 968+ A1D8 21 33 8C         ld hl,Coordenadas_X_Amadeus
 969+ A1DB 77           1 ld (hl),a
 970+ A1DC 23               inc hl
 971+ A1DD 10 FC            djnz 1B
 972+ A1DF C9               ret
 973+ A1E0
 974+ A1E0              ; ----- ----- ----- ----- -----
 975+ A1E0
 976+ A1E0              Compara_coordenadas_X
 977+ A1E0
 978+ A1E0 DD 21 30 8C      ld ix,Coordenadas_X_Entidad
 979+ A1E4 DD 7E 00         ld a,(ix+0)
 980+ A1E7 CD F5 A1         call Comparando
 981+ A1EA C8               ret z
 982+ A1EB
 983+ A1EB 3C               inc a
 984+ A1EC CD 04 A2         call Comparando_1
 985+ A1EF C8               ret z
 986+ A1F0
 987+ A1F0 3C               inc a
 988+ A1F1 CD 04 A2         call Comparando_1
 989+ A1F4 C9               ret
 990+ A1F5
 991+ A1F5              ; ----- ----- ----- ----- -----
 992+ A1F5              ;
 993+ A1F5              ;   4/12/23
 994+ A1F5              ;
 995+ A1F5              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 996+ A1F5
 997+ A1F5              Comparando
 998+ A1F5
 999+ A1F5 DD 2C            inc ixl
1000+ A1F7 DD 2C            inc ixl
1001+ A1F9 DD 2C            inc ixl
1002+ A1FB
1003+ A1FB DD 46 00         ld b,(ix+0)
1004+ A1FE DD 4E 01         ld c,(ix+1)
1005+ A201 DD 56 02         ld d,(ix+2)
1006+ A204
1007+ A204 B8           Comparando_1 cp b
1008+ A205 C8               ret z
1009+ A206 B9               cp c
1010+ A207 C8               ret z
1011+ A208 BA               cp d
1012+ A209 C9               ret
1013+ A20A
1014+ A20A              ; -----------------------------------------------------------------------
1015+ A20A              ;
1016+ A20A              ;   04/7/24
1017+ A20A              ;
1018+ A20A
1019+ A20A              Detecta_colision_nave_entidad
1020+ A20A
1021+ A20A              ; Exclusiones:
1022+ A20A
1023+ A20A              ; Salimos de la rutina si no hay advertencia de posible colisión.
1024+ A20A
1025+ A20A 21 2B 8C     	ld hl,Impacto2
1026+ A20D CB 56        	bit 2,(hl)
1027+ A20F C8           	ret z
1028+ A210
1029+ A210              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1030+ A210
1031+ A210 2A 74 89         ld hl,(Pamm_Amadeus)
1032+ A213 CD 98 90         call Extrae_address
1033+ A216 54               ld d,h
1034+ A217 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1035+ A218
1036+ A218 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1037+ A21B 06 10            ld b,16                                        ; Contador de scanlines en B.
1038+ A21D FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1039+ A220
1040+ A220 C5           1 push bc
1041+ A221 06 03            ld b,3
1042+ A223 E5               push hl
1043+ A224
1044+ A224              ; .db
1045+ A224
1046+ A224 1A           3 ld a,(de)
1047+ A225 A7               and a
1048+ A226 20 03            jr nz,4F
1049+ A228
1050+ A228 2C               inc l
1051+ A229 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1052+ A22B
1053+ A22B ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1054+ A22D 28 04            jr z,2F
1055+ A22F
1056+ A22F              ; Impacto.
1057+ A22F FD 2D            dec iyl
1058+ A231 28 22            jr z,5F
1059+ A233
1060+ A233 1C           2 inc e
1061+ A234 10 EE            djnz 3B
1062+ A236
1063+ A236 E1               pop hl
1064+ A237
1065+ A237              ; Hay salto de línea en el puntero de impresión ???
1066+ A237
1067+ A237 7C               ld a,h
1068+ A238 D6 57            sub $57
1069+ A23A 20 0A            jr nz,6F
1070+ A23C
1071+ A23C              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1072+ A23C
1073+ A23C 2A 72 89         ld hl,(p.imp.amadeus)
1074+ A23F 3E 20            ld a,$20
1075+ A241 A7               and a
1076+ A242 85               add l
1077+ A243 6F               ld l,a
1078+ A244 18 01            jr 7F
1079+ A246
1080+ A246 24           6 inc h
1081+ A247
1082+ A247 C1           7 pop bc
1083+ A248 10 D6            djnz 1B
1084+ A24A
1085+ A24A              ;   Fin de la comparativa.
1086+ A24A
1087+ A24A              ;   NO HAY COLISIÓN !!!!!.
1088+ A24A              ;
1089+ A24A              ;   .db (Impacto) de Amadeus a "0".
1090+ A24A              ;   RES el bit2 de (Impacto2).
1091+ A24A              ;
1092+ A24A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1093+ A24A              ;   Lo colocamos a "0".
1094+ A24A
1095+ A24A 21 2B 8C         ld hl,Impacto2
1096+ A24D CB 96            res 2,(hl)
1097+ A24F 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)
1098+ A252 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1099+ A254 C9               ret
1100+ A255
1101+ A255              ;   COLISIÓN !!!!!.
1102+ A255              ;
1103+ A255              ;   .db (Impacto) de Amadeus a "1".
1104+ A255              ;   SET el bit3 de (Impacto2).
1105+ A255              ;
1106+ A255              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1107+ A255
1108+ A255 E1           5 pop hl
1109+ A256 C1               pop bc
1110+ A257
1111+ A257 21 71 89         ld hl,Impacto_Amadeus
1112+ A25A 36 01            ld (hl),1
1113+ A25C 21 2B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1114+ A25F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1115+ A261
1116+ A261 11 C0 87         ld de,Indice_Explosion_entidades
1117+ A264 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1118+ A267
1119+ A267 23               inc hl
1120+ A268 23               inc hl
1121+ A269 23               inc hl
1122+ A26A
1123+ A26A 73               ld (hl),e
1124+ A26B 23               inc hl
1125+ A26C 72               ld (hl),d
1126+ A26D
1127+ A26D              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1128+ A26D
1129+ A26D 11 60 88         ld de,Indice_Explosion_Amadeus
1130+ A270 21 74 89         ld hl,Pamm_Amadeus
1131+ A273
1132+ A273 73               ld (hl),e
1133+ A274 23               inc hl
1134+ A275 72               ld (hl),d
1135+ A276
1136+ A276 C9               ret
1137+ A277
1138+ A277
1139+ A277
# file closed: Disparo.asm
2073  A277
2074  A277              	SAVESNA "Pruebas.sna", START
2075  A277
2076  A277
2077  A277
2078  A277
# file closed: Banco_de_pruebas.asm
