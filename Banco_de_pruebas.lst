# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD CB 8A     	call Frame
  15  A104
  16  A104 3A F5 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  23  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8574
  97+ 8574 CA 85        	defw Caja_1
  98+ 8576 08 86        	defw Caja_2
  99+ 8578 46 86        	defw Caja_3
 100+ 857A 84 86        	defw Caja_4
 101+ 857C C2 86        	defw Caja_5
 102+ 857E 00 87        	defw Caja_6
 103+ 8580 3E 87        	defw Caja_7
 104+ 8582 7C 87        	defw Caja_8
 105+ 8584 BA 87        	defw Caja_9
 106+ 8586 F8 87        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85BD
 145+ 85BD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85C1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85C4
 148+ 85C4 00           	db 0 											; (Columnas).
 149+ 85C5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85C7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85CA
 152+ 85CA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85CA
 154+ 85CA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85CC 00 00        	defw 0											; (Posicion_actual).
 156+ 85CE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85D0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85D3
 159+ 85D3 00           	db %00000000 									; (Attr).
 160+ 85D4
 161+ 85D4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85D6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85D8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85DA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85DC
 166+ 85DC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85DE 00           	db 0											; (Cuad_objeto).
 168+ 85DF
 169+ 85DF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85E3
 171+ 85E3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85E4
 173+ 85E4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85E6 00 00        	defw 0											;	" " " " " " "
 175+ 85E8 00 00        	defw 0											;	" " " " " " "
 176+ 85EA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85EE
 178+ 85EE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85F0 00 00        	defw 0											;	" " " " " " "
 180+ 85F2 00 00        	defw 0											;	" " " " " " "
 181+ 85F4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85F8
 183+ 85F8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 184+ 85FA 00           Autoriza_1 db 0										; (Autoriza_movimiento).
 185+ 85FB
 186+ 85FB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 187+ 85FF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 188+ 8602
 189+ 8602 00           	db 0 											; (Columnas).
 190+ 8603 00 00        	defw 0											; (Limite_horizontal).
 191+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 192+ 8608
 193+ 8608              ; ---------- ---------- ---------- ---------- ----------
 194+ 8608
 195+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 196+ 860A 00 00        	defw 0											; (Posicion_actual).
 197+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 198+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 199+ 8611
 200+ 8611 00           	db %00000000 									; (Attr).
 201+ 8612
 202+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 203+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 204+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 205+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 206+ 861A
 207+ 861A 00 00        	defw 0											; (Posicion_inicio).
 208+ 861C 00           	db 0											; (Cuad_objeto).
 209+ 861D
 210+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 211+ 8621
 212+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 213+ 8622
 214+ 8622 00 00        	db 0,0										    ; Variables_de_borrado
 215+ 8624 00 00        	defw 0											;	" " " " " " "
 216+ 8626 00 00        	defw 0											;	" " " " " " "
 217+ 8628 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 862C
 219+ 862C 00 00        	db 0,0											; Variables_de_pintado
 220+ 862E 00 00        	defw 0											;	" " " " " " "
 221+ 8630 00 00        	defw 0											;	" " " " " " "
 222+ 8632 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8636
 224+ 8636 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 225+ 8638 00           Autoriza_2 db 0										; (Autoriza_movimiento).
 226+ 8639
 227+ 8639 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 228+ 863D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 229+ 8640
 230+ 8640 00           	db 0 											; (Columnas).
 231+ 8641 00 00        	defw 0											; (Limite_horizontal).
 232+ 8643 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 233+ 8646
 234+ 8646              ; ---------- ---------- ---------- ---------- ----------
 235+ 8646
 236+ 8646 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 237+ 8648 00 00        	defw 0											; (Posicion_actual).
 238+ 864A 00 00        	defw 0 											; (Puntero_objeto).
 239+ 864C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 240+ 864F
 241+ 864F 00           	db %00000000 									; (Attr).
 242+ 8650
 243+ 8650 00 00        	defw 0											; (Indice_Sprite_der).
 244+ 8652 00 00        	defw 0											; (Indice_Sprite_izq).
 245+ 8654 00 00        	defw 0											; (Puntero_DESPLZ_der).
 246+ 8656 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 247+ 8658
 248+ 8658 00 00        	defw 0											; (Posicion_inicio).
 249+ 865A 00           	db 0											; (Cuad_objeto).
 250+ 865B
 251+ 865B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 252+ 865F
 253+ 865F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 254+ 8660
 255+ 8660 00 00        	db 0,0										    ; Variables_de_borrado
 256+ 8662 00 00        	defw 0											;	" " " " " " "
 257+ 8664 00 00        	defw 0											;	" " " " " " "
 258+ 8666 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 866A
 260+ 866A 00 00        	db 0,0											; Variables_de_pintado
 261+ 866C 00 00        	defw 0											;	" " " " " " "
 262+ 866E 00 00        	defw 0											;	" " " " " " "
 263+ 8670 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 8674
 265+ 8674 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 266+ 8676 00           Autoriza_3 db 0										; (Autoriza_movimiento).
 267+ 8677
 268+ 8677 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 269+ 867B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 270+ 867E
 271+ 867E 00           	db 0 											; (Columnas).
 272+ 867F 00 00        	defw 0											; (Limite_horizontal).
 273+ 8681 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 274+ 8684
 275+ 8684              ; ---------- ---------- ---------- ---------- ----------
 276+ 8684
 277+ 8684 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 278+ 8686 00 00        	defw 0											; (Posicion_actual).
 279+ 8688 00 00        	defw 0 											; (Puntero_objeto).
 280+ 868A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 281+ 868D
 282+ 868D 00           	db %00000000 									; (Attr).
 283+ 868E
 284+ 868E 00 00        	defw 0											; (Indice_Sprite_der).
 285+ 8690 00 00        	defw 0											; (Indice_Sprite_izq).
 286+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_der).
 287+ 8694 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 288+ 8696
 289+ 8696 00 00        	defw 0											; (Posicion_inicio).
 290+ 8698 00           	db 0											; (Cuad_objeto).
 291+ 8699
 292+ 8699 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 293+ 869D
 294+ 869D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 295+ 869E
 296+ 869E 00 00        	db 0,0										    ; Variables_de_borrado
 297+ 86A0 00 00        	defw 0											;	" " " " " " "
 298+ 86A2 00 00        	defw 0											;	" " " " " " "
 299+ 86A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A8
 301+ 86A8 00 00        	db 0,0											; Variables_de_pintado
 302+ 86AA 00 00        	defw 0											;	" " " " " " "
 303+ 86AC 00 00        	defw 0											;	" " " " " " "
 304+ 86AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 305+ 86B2
 306+ 86B2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 307+ 86B4 00           Autoriza_4 db 0										; (Autoriza_movimiento).
 308+ 86B5
 309+ 86B5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 310+ 86B9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 311+ 86BC
 312+ 86BC 00           	db 0 											; (Columnas).
 313+ 86BD 00 00        	defw 0											; (Limite_horizontal).
 314+ 86BF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 315+ 86C2
 316+ 86C2              ; ---------- ---------- ---------- ---------- ----------
 317+ 86C2
 318+ 86C2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 319+ 86C4 00 00        	defw 0											; (Posicion_actual).
 320+ 86C6 00 00        	defw 0 											; (Puntero_objeto).
 321+ 86C8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 322+ 86CB
 323+ 86CB 00           	db %00000000 									; (Attr).
 324+ 86CC
 325+ 86CC 00 00        	defw 0											; (Indice_Sprite_der).
 326+ 86CE 00 00        	defw 0											; (Indice_Sprite_izq).
 327+ 86D0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 328+ 86D2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 329+ 86D4
 330+ 86D4 00 00        	defw 0											; (Posicion_inicio).
 331+ 86D6 00           	db 0											; (Cuad_objeto).
 332+ 86D7
 333+ 86D7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 334+ 86DB
 335+ 86DB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 336+ 86DC
 337+ 86DC 00 00        	db 0,0										    ; Variables_de_borrado
 338+ 86DE 00 00        	defw 0											;	" " " " " " "
 339+ 86E0 00 00        	defw 0											;	" " " " " " "
 340+ 86E2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E6
 342+ 86E6 00 00        	db 0,0											; Variables_de_pintado
 343+ 86E8 00 00        	defw 0											;	" " " " " " "
 344+ 86EA 00 00        	defw 0											;	" " " " " " "
 345+ 86EC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 346+ 86F0
 347+ 86F0 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 348+ 86F2 00           Autoriza_5 db 0										; (Autoriza_movimiento).
 349+ 86F3
 350+ 86F3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 351+ 86F7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 352+ 86FA
 353+ 86FA 00           	db 0 											; (Columnas).
 354+ 86FB 00 00        	defw 0											; (Limite_horizontal).
 355+ 86FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 356+ 8700
 357+ 8700              ; ---------- ---------- ---------- ---------- ----------
 358+ 8700
 359+ 8700 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 360+ 8702 00 00        	defw 0											; (Posicion_actual).
 361+ 8704 00 00        	defw 0 											; (Puntero_objeto).
 362+ 8706 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 363+ 8709
 364+ 8709 00           	db %00000000 									; (Attr).
 365+ 870A
 366+ 870A 00 00        	defw 0											; (Indice_Sprite_der).
 367+ 870C 00 00        	defw 0											; (Indice_Sprite_izq).
 368+ 870E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 369+ 8710 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 370+ 8712
 371+ 8712 00 00        	defw 0											; (Posicion_inicio).
 372+ 8714 00           	db 0											; (Cuad_objeto).
 373+ 8715
 374+ 8715 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 375+ 8719
 376+ 8719 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 377+ 871A
 378+ 871A 00 00        	db 0,0										    ; Variables_de_borrado
 379+ 871C 00 00        	defw 0											;	" " " " " " "
 380+ 871E 00 00        	defw 0											;	" " " " " " "
 381+ 8720 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8724
 383+ 8724 00 00        	db 0,0											; Variables_de_pintado
 384+ 8726 00 00        	defw 0											;	" " " " " " "
 385+ 8728 00 00        	defw 0											;	" " " " " " "
 386+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 387+ 872E
 388+ 872E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 389+ 8730 00           Autoriza_6 db 0										; (Autoriza_movimiento).
 390+ 8731
 391+ 8731 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 392+ 8735 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 393+ 8738
 394+ 8738 00           	db 0 											; (Columnas).
 395+ 8739 00 00        	defw 0											; (Limite_horizontal).
 396+ 873B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 397+ 873E
 398+ 873E              ; ---------- ---------- ---------- ---------- ----------
 399+ 873E
 400+ 873E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 401+ 8740 00 00        	defw 0											; (Posicion_actual).
 402+ 8742 00 00        	defw 0 											; (Puntero_objeto).
 403+ 8744 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 404+ 8747
 405+ 8747 00           	db %00000000 									; (Attr).
 406+ 8748
 407+ 8748 00 00        	defw 0											; (Indice_Sprite_der).
 408+ 874A 00 00        	defw 0											; (Indice_Sprite_izq).
 409+ 874C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 410+ 874E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 411+ 8750
 412+ 8750 00 00        	defw 0											; (Posicion_inicio).
 413+ 8752 00           	db 0											; (Cuad_objeto).
 414+ 8753
 415+ 8753 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 416+ 8757
 417+ 8757 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 418+ 8758
 419+ 8758 00 00        	db 0,0										    ; Variables_de_borrado
 420+ 875A 00 00        	defw 0											;	" " " " " " "
 421+ 875C 00 00        	defw 0											;	" " " " " " "
 422+ 875E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8762
 424+ 8762 00 00        	db 0,0											; Variables_de_pintado
 425+ 8764 00 00        	defw 0											;	" " " " " " "
 426+ 8766 00 00        	defw 0											;	" " " " " " "
 427+ 8768 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 428+ 876C
 429+ 876C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 430+ 876E 00           Autoriza_7 db 0										; (Autoriza_movimiento).
 431+ 876F
 432+ 876F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 433+ 8773 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 434+ 8776
 435+ 8776 00           	db 0 											; (Columnas).
 436+ 8777 00 00        	defw 0											; (Limite_horizontal).
 437+ 8779 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 438+ 877C
 439+ 877C              ; ---------- ---------- ---------- ---------- ----------
 440+ 877C
 441+ 877C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 442+ 877E 00 00        	defw 0											; (Posicion_actual).
 443+ 8780 00 00        	defw 0 											; (Puntero_objeto).
 444+ 8782 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 445+ 8785
 446+ 8785 00           	db %00000000 									; (Attr).
 447+ 8786
 448+ 8786 00 00        	defw 0											; (Indice_Sprite_der).
 449+ 8788 00 00        	defw 0											; (Indice_Sprite_izq).
 450+ 878A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 451+ 878C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 452+ 878E
 453+ 878E 00 00        	defw 0											; (Posicion_inicio).
 454+ 8790 00           	db 0											; (Cuad_objeto).
 455+ 8791
 456+ 8791 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 457+ 8795
 458+ 8795 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 459+ 8796
 460+ 8796 00 00        	db 0,0										    ; Variables_de_borrado
 461+ 8798 00 00        	defw 0											;	" " " " " " "
 462+ 879A 00 00        	defw 0											;	" " " " " " "
 463+ 879C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 464+ 87A0
 465+ 87A0 00 00        	db 0,0											; Variables_de_pintado
 466+ 87A2 00 00        	defw 0											;	" " " " " " "
 467+ 87A4 00 00        	defw 0											;	" " " " " " "
 468+ 87A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 469+ 87AA
 470+ 87AA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 471+ 87AC 00           Autoriza_8 db 0										; (Autoriza_movimiento).
 472+ 87AD
 473+ 87AD 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 474+ 87B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 475+ 87B4
 476+ 87B4 00           	db 0 											; (Columnas).
 477+ 87B5 00 00        	defw 0											; (Limite_horizontal).
 478+ 87B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 479+ 87BA
 480+ 87BA              ; ---------- ---------- ---------- ---------- ----------
 481+ 87BA
 482+ 87BA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 483+ 87BC 00 00        	defw 0											; (Posicion_actual).
 484+ 87BE 00 00        	defw 0 											; (Puntero_objeto).
 485+ 87C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 486+ 87C3
 487+ 87C3 00           	db %00000000 									; (Attr).
 488+ 87C4
 489+ 87C4 00 00        	defw 0											; (Indice_Sprite_der).
 490+ 87C6 00 00        	defw 0											; (Indice_Sprite_izq).
 491+ 87C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 492+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 493+ 87CC
 494+ 87CC 00 00        	defw 0											; (Posicion_inicio).
 495+ 87CE 00           	db 0											; (Cuad_objeto).
 496+ 87CF
 497+ 87CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 498+ 87D3
 499+ 87D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 500+ 87D4
 501+ 87D4 00 00        	db 0,0										    ; Variables_de_borrado
 502+ 87D6 00 00        	defw 0											;	" " " " " " "
 503+ 87D8 00 00        	defw 0											;	" " " " " " "
 504+ 87DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 505+ 87DE
 506+ 87DE 00 00        	db 0,0											; Variables_de_pintado
 507+ 87E0 00 00        	defw 0											;	" " " " " " "
 508+ 87E2 00 00        	defw 0											;	" " " " " " "
 509+ 87E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 510+ 87E8
 511+ 87E8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 512+ 87EA 00           Autoriza_9 db 0										; (Autoriza_movimiento).
 513+ 87EB
 514+ 87EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 515+ 87EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 516+ 87F2
 517+ 87F2 00           	db 0 											; (Columnas).
 518+ 87F3 00 00        	defw 0											; (Limite_horizontal).
 519+ 87F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 520+ 87F8
 521+ 87F8              ; ---------- ---------- ---------- ---------- ----------
 522+ 87F8
 523+ 87F8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 524+ 87FA 00 00        	defw 0											; (Posicion_actual).
 525+ 87FC 00 00        	defw 0 											; (Puntero_objeto).
 526+ 87FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 527+ 8801
 528+ 8801 00           	db %00000000 									; (Attr).
 529+ 8802
 530+ 8802 00 00        	defw 0											; (Indice_Sprite_der).
 531+ 8804 00 00        	defw 0											; (Indice_Sprite_izq).
 532+ 8806 00 00        	defw 0											; (Puntero_DESPLZ_der).
 533+ 8808 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 534+ 880A
 535+ 880A 00 00        	defw 0											; (Posicion_inicio).
 536+ 880C 00           	db 0											; (Cuad_objeto).
 537+ 880D
 538+ 880D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 539+ 8811
 540+ 8811 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 541+ 8812
 542+ 8812 00 00        	db 0,0										    ; Variables_de_borrado
 543+ 8814 00 00        	defw 0											;	" " " " " " "
 544+ 8816 00 00        	defw 0											;	" " " " " " "
 545+ 8818 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 546+ 881C
 547+ 881C 00 00        	db 0,0											; Variables_de_pintado
 548+ 881E 00 00        	defw 0											;	" " " " " " "
 549+ 8820 00 00        	defw 0											;	" " " " " " "
 550+ 8822 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 551+ 8826
 552+ 8826 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 553+ 8828 00           Autoriza_10 db 0									; (Autoriza_movimiento).
 554+ 8829
 555+ 8829 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 556+ 882D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 557+ 8830
 558+ 8830 00           	db 0 											; (Columnas).
 559+ 8831 00 00        	defw 0											; (Limite_horizontal).
 560+ 8833 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 561+ 8836
 562+ 8836              ; -------------------------------------------------------------------------------------
 563+ 8836              ;
 564+ 8836              ;	20/05/23
 565+ 8836              ;
 566+ 8836              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 567+ 8836              ;
 568+ 8836              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 569+ 8836              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 570+ 8836              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 571+ 8836              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 572+ 8836
 573+ 8836              Indice_de_entidades
 574+ 8836
 575+ 8836 40 88        	defw Entidad_1
 576+ 8838 50 88        	defw Entidad_2
 577+ 883A 60 88        	defw Entidad_3
 578+ 883C 70 88        	defw Entidad_4
 579+ 883E 80 88        	defw Entidad_5
 580+ 8840
 581+ 8840              ;	BADSAT, (Satélite malvado).
 582+ 8840
 583+ 8840 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 584+ 8842 04           	db %00000100									; (Attr).
 585+ 8843 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 586+ 8845 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 587+ 8847 3F 50        	defw $503f	                             	    ; (Posicion_inicio).
 588+ 8849 01           	db 1											; (Cuad_objeto).
 589+ 884A 02 02 01 02  	db 2,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 590+ 884E 10 9D        	defw Indice_mov_Escaloncitos_izquierda_arriba   ; (Puntero_indice_mov)
 591+ 8850
 592+ 8850 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 593+ 8852 02           	db %00000010									; (Attr).
 594+ 8853 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 595+ 8855 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 596+ 8857 40 50        	defw $5040                                      ; (Posicion_inicio).
 597+ 8859 01           	db 1											; (Cuad_objeto).
 598+ 885A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 599+ 885E 14 9D        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 600+ 8860
 601+ 8860 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 602+ 8862 04           	db %00000100									; (Attr).
 603+ 8863 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 604+ 8865 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 605+ 8867 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 606+ 8869 01           	db 1											; (Cuad_objeto).
 607+ 886A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 608+ 886E 14 9D        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 609+ 8870
 610+ 8870 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 611+ 8872 01           	db %00000001									; (Attr).
 612+ 8873 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 613+ 8875 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 614+ 8877 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 615+ 8879 01           	db 1											; (Cuad_objeto).
 616+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 617+ 887E 12 9D        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 618+ 8880
 619+ 8880 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 620+ 8882 01           	db %00000001									; (Attr).
 621+ 8883 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 622+ 8885 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 623+ 8887 07 40        	defw $4007                                      ; (Posicion_inicio).
 624+ 8889 01           	db 1											; (Cuad_objeto).
 625+ 888A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 626+ 888E 0E 9D        	defw Indice_mov_Escaloncitos_derecha_abajo							; (Puntero_indice_mov)
 627+ 8890
 628+ 8890              Indice_de_autorizaciones
 629+ 8890
 630+ 8890 FA 85        	defw Autoriza_1
 631+ 8892 38 86        	defw Autoriza_2
 632+ 8894 76 86        	defw Autoriza_3
 633+ 8896 B4 86        	defw Autoriza_4
 634+ 8898 F2 86        	defw Autoriza_5
 635+ 889A 30 87        	defw Autoriza_6
 636+ 889C 6E 87        	defw Autoriza_7
 637+ 889E AC 87        	defw Autoriza_8
 638+ 88A0 EA 87        	defw Autoriza_9
 639+ 88A2 28 88        	defw Autoriza_10
# file closed: Cajas_y_disparos.asm
  24  88A4              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A4              ; 13/05/23
   2+ 88A4
   3+ 88A4              Indice_de_niveles
   4+ 88A4
   5+ 88A4 B2 88        	defw Nivel_1
   6+ 88A6 BD 88        	defw Nivel_2
   7+ 88A8 CA 88        	defw Nivel_3
   8+ 88AA DA 88        	defw Nivel_4
   9+ 88AC EC 88        	defw Nivel_5
  10+ 88AE
  11+ 88AE              ;	...
  12+ 88AE              ;	...
  13+ 88AE              ;	+ Niveles ...
  14+ 88AE
  15+ 88AE 00 00        	defw 0
  16+ 88B0 00 00        	defw 0
  17+ 88B2
  18+ 88B2 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 88B3 05 04 03 02  	db 5,4,3,2,1
  19+ 88B7 01
  20+ 88B8 01 02 03 04  	db 1,2,3,4,5
  20+ 88BC 05
  21+ 88BD 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 88BE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 88C2 01 02
  23+ 88C4 02 01 01 01  	db 2,1,1,1,1,2
  23+ 88C8 01 02
  24+ 88CA 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 88CB 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 88CF 01
  26+ 88D0 03 01 01 01  	db 3,1,1,1,1
  26+ 88D4 01
  27+ 88D5 03 01 01 01  	db 3,1,1,1,1
  27+ 88D9 01
  28+ 88DA 11           Nivel_4 db 17									; Nº de entidades.
  29+ 88DB 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 88DF 01
  30+ 88E0 04 01 01 01  	db 4,1,1,1,1
  30+ 88E4 01
  31+ 88E5 04 01 01 01  	db 4,1,1,1,1
  31+ 88E9 01
  32+ 88EA 02 03        	db 2,3
  33+ 88EC 14           Nivel_5 db 20									; Nº de entidades.
  34+ 88ED 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88F1 01
  35+ 88F2 05 01 01 01  	db 5,1,1,1,1
  35+ 88F6 01
  36+ 88F7 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88FB 01
  37+ 88FC 05 01 01 01  	db 5,1,1,1,1
  37+ 8900 01
  38+ 8901
  39+ 8901              ;---------------------------------------------------------------------------------------------------------------
  40+ 8901              ;
  41+ 8901              ;   21/5/23
  42+ 8901              ;
  43+ 8901              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 8901              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 8901              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 8901              ;	_en la caja DRAW correspondiente.
  47+ 8901              ;
  48+ 8901              ;	MODIFICA: HL,DE y A.
  49+ 8901              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 8901
  51+ 8901              Inicializa_Punteros_de_nivel
  52+ 8901
  53+ 8901 21 A4 88     	ld hl,Indice_de_niveles
  54+ 8904 22 2A 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 8907 CD 2C 8D     	call Extrae_address
  56+ 890A 7E           	ld a,(hl)
  57+ 890B 32 FF 89     	ld (Numero_de_entidades),a
  58+ 890E 23           	inc hl
  59+ 890F 22 2C 8A     	ld (Datos_de_nivel),hl
  60+ 8912 C9           	ret
  61+ 8913
  62+ 8913              ;---------------------------------------------------------------------------------------------------------------
  63+ 8913              ;
  64+ 8913              ;   13/5/23
  65+ 8913              ;
  66+ 8913              ;	Destruye A,BC,HL,DE
  67+ 8913
  68+ 8913              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 8913              ;	_del juego.
  70+ 8913
  71+ 8913              Prepara_cajas
  72+ 8913
  73+ 8913              ; Preparamos los punteros de las cajas.
  74+ 8913
  75+ 8913 21 74 85     	ld hl,Indice_de_cajas
  76+ 8916 CD 2C 8D     	call Extrae_address
  77+ 8919 CD 56 89     	call Avanza_caja
  78+ 891C
  79+ 891C CD 9A 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 891F
  81+ 891F 2A 2C 8A     	ld hl,(Datos_de_nivel)
  82+ 8922
  83+ 8922              ; HL está en los datos del nivel correspondiente.
  84+ 8922              ; B actuará como contador de cajas.
  85+ 8922
  86+ 8922 C5           1 push bc
  87+ 8923
  88+ 8923 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 8924 CD 47 89     	call PreparaBC
  90+ 8927
  91+ 8927 21 36 88     	ld hl,Indice_de_entidades
  92+ 892A CD 4F 89     	call SBC_HL_con_BC_y_Extrae
  93+ 892D 22 05 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 8930
  95+ 8930 CD 60 89     	call Datos_de_entidad_a_caja
  96+ 8933
  97+ 8933 2A FD 89     	ld hl,(Indice_restore_caja)
  98+ 8936 CD 2C 8D     	call Extrae_address
  99+ 8939 CD 56 89     	call Avanza_caja
 100+ 893C
 101+ 893C 2A 2C 8A     	ld hl,(Datos_de_nivel)
 102+ 893F 23           	inc hl
 103+ 8940 22 2C 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 8943
 105+ 8943 C1           	pop bc
 106+ 8944 10 DC        	djnz 1B
 107+ 8946 C9           	ret
 108+ 8947
 109+ 8947 CB 27        PreparaBC sla a
 110+ 8949 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 894B 4F           	ld c,a
 112+ 894C 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 894E C9           	ret
 114+ 894F
 115+ 894F A7           SBC_HL_con_BC_y_Extrae and a
 116+ 8950 ED 4A        	adc hl,bc
 117+ 8952 CD 2C 8D     	call Extrae_address
 118+ 8955 C9           	ret
 119+ 8956
 120+ 8956 22 F9 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 8959 13           	inc de
 122+ 895A 13           	inc de
 123+ 895B EB           	ex de,hl
 124+ 895C 22 FD 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 895F C9           	ret
 126+ 8960
 127+ 8960              Datos_de_entidad_a_caja
 128+ 8960
 129+ 8960              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 8960
 131+ 8960
 132+ 8960 ED 5B F9 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8964
 134+ 8964 01 02 00     	ld bc,2
 135+ 8967 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 8969
 137+ 8969 01 07 00     	ld bc,7
 138+ 896C CD 94 89     	call Situa_DE
 139+ 896F
 140+ 896F 01 05 00     	ld bc,5
 141+ 8972 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8974
 143+ 8974 01 04 00     	ld bc,4
 144+ 8977 CD 94 89     	call Situa_DE
 145+ 897A
 146+ 897A 01 07 00     	ld bc,7
 147+ 897D ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 897F
 149+ 897F 01 18 00     	ld bc,24
 150+ 8982 CD 94 89     	call Situa_DE
 151+ 8985
 152+ 8985 01 02 00     	ld bc,2
 153+ 8988 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 898A
 155+ 898A 01 0A 00     	ld bc,10
 156+ 898D CD 94 89     	call Situa_DE
 157+ 8990
 158+ 8990 3E 03        	ld a,3
 159+ 8992 12           	ld (de),a 									; Vuelco (Frames_explosion).
 160+ 8993
 161+ 8993 C9           	ret
 162+ 8994
 163+ 8994 EB           Situa_DE ex de,hl
 164+ 8995 A7           	and a
 165+ 8996 ED 4A        	adc hl,bc
 166+ 8998 EB           	ex de,hl
 167+ 8999 C9           	ret
 168+ 899A
 169+ 899A              ;---------------------------------------------------------------------------------------------------------------
 170+ 899A              ;
 171+ 899A              ;	21/5/23
 172+ 899A              ;
 173+ 899A              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 174+ 899A              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 175+ 899A              ;
 176+ 899A              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 177+ 899A              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 178+ 899A              ;	_ total de entidades que contiene (Numero_de_entidades).
 179+ 899A              ;
 180+ 899A              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 181+ 899A              ;	MODIFICA: A y B.
 182+ 899A              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 183+ 899A
 184+ 899A              Admin_num_entidades
 185+ 899A
 186+ 899A              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 187+ 899A
 188+ 899A 3A FF 89     	ld a,(Numero_de_entidades)
 189+ 899D A7           	and a
 190+ 899E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 191+ 899E              ;	jr z,$
 192+ 899E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899E
 194+ 899E 20 03        	jr nz,3F
 195+ 89A0
 196+ 89A0              ;! RESET para pruebas. Omitir esta línea en modo normal.
 197+ 89A0
 198+ 89A0 CD 01 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 199+ 89A3
 200+ 89A3
 201+ 89A3 3A FF 89     3 ld a,(Numero_de_entidades)
 202+ 89A6 FE 0A        	cp 10
 203+ 89A8 38 08        	jr c,1F
 204+ 89AA
 205+ 89AA              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 89AA              ; Actualizamos variables.
 207+ 89AA
 208+ 89AA 3E 0A        	ld a,10
 209+ 89AC 32 00 8A     	ld (Numero_parcial_de_entidades),a
 210+ 89AF 47           	ld b,a
 211+ 89B0 18 04        	jr 2F
 212+ 89B2
 213+ 89B2              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 89B2              ; (Numero_de_entidades)="0".
 215+ 89B2
 216+ 89B2 32 00 8A     1 ld (Numero_parcial_de_entidades),a
 217+ 89B5 47           	ld b,a
 218+ 89B6 C9           2 ret
# file closed: Niveles.asm
  25  89B7
  26  89B7              ; ******************************************************************************************************************************************************************************************
  27  89B7              ; Constantes.
  28  89B7              ; ******************************************************************************************************************************************************************************************
  29  89B7              ;
  30  89B7              ; 25/05/23
  31  89B7              ;
  32  89B7              ; Constantes generales.
  33  89B7              ;
  34  89B7
  35  89B7              Sprite_vacio equ $f000
  36  89B7              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  89B7              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  89B7              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  89B7              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  89B7
  41  89B7              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  89B7              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  89B7              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  89B7              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  89B7              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  89B7              ;                               				        ; De momento situamos este almacén en $7060.
  47  89B7
  48  89B7              ; ******************************************************************************************************************************************************************************************
  49  89B7              ; Variables.
  50  89B7              ; ******************************************************************************************************************************************************************************************
  51  89B7              ;
  52  89B7              ; 30/05/23
  53  89B7              ;
  54  89B7              ; Variables de DRAW. (Motor principal).
  55  89B7              ;
  56  89B7              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  89B7
  58  89B7 00           Filas db 0												; Filas. [DRAW]
  59  89B8 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  89B9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  89BB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  89BD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  89BE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  89BF
  65  89BF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  89BF
  67  89BF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  89C0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  89C0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  89C0 00           Attr db 0												; Atributos de la entidad:
  71  89C1
  72  89C1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  89C1              ;
  74  89C1              ;	COLORES: 0 ..... NEGRO
  75  89C1              ;    		 1 ..... AZUL
  76  89C1              ; 			 2 ..... ROJO
  77  89C1              ;			 3 ..... MAGENTA
  78  89C1              ; 			 4 ..... VERDE
  79  89C1              ; 			 5 ..... CIAN
  80  89C1              ;			 6 ..... AMARILLO
  81  89C1              ; 			 7 ..... BLANCO
  82  89C1
  83  89C1 00 00        Indice_Sprite_der defw 0
  84  89C3 00 00        Indice_Sprite_izq defw 0
  85  89C5 00 00        Puntero_DESPLZ_der defw 0
  86  89C7 00 00        Puntero_DESPLZ_izq defw 0
  87  89C9
  88  89C9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89CB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89CC
  91  89CC              ; Variables de objeto. (Características).
  92  89CC
  93  89CC 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89CD 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89CE 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89CF 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89D0
  98  89D0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89D1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89D1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89D1
 102  89D1 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89D3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89D5 00 00        	defw 0
 105  89D7 00 00 00 00  	db 0,0,0,0
 106  89DB
 107  89DB 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89DD 00 00        	defw 0
 109  89DF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89E1 00 00 00 00  	db 0,0,0,0
 111  89E5
 112  89E5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89E5
 114  89E5 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89E6              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89E6              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89E6              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89E6              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89E6              ;
 120  89E6              ; 														DESCRIPCIÖN:
 121  89E6              ;
 122  89E6              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89E6              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89E6              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89E6              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89E6              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89E6              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89E6              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89E6              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89E6              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89E6              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89E6              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89E6              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89E6              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89E6              ;
 136  89E6              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89E6              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89E6              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89E6
 140  89E6 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89E7
 142  89E7              ; Movimiento.
 143  89E7
 144  89E7 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89E8 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89EA 00 00        Puntero_mov defw 0
 147  89EC 00           Contador_db_mov db 0
 148  89ED 00           Incrementa_puntero db 0
 149  89EE 00           Repetimos_db db 0
 150  89EF
 151  89EF              ; Variables de funcionamiento. [DRAW].
 152  89EF
 153  89EF 00           Columnas db 0
 154  89F0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89F2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89F2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89F3
 158  89F3              ; variables de control general.
 159  89F3
 160  89F3 00           Ctrl_2 db 0
 161  89F4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89F4              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89F4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89F4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89F4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89F4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89F4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89F4              ;
 169  89F4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89F4
 171  89F4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89F5
 173  89F5              ; 62 Bytes por entidad.
 174  89F5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89F5              ;					         		---------;      ;---------
 176  89F5
 177  89F5
 178  89F5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89F5
 180  89F5 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89F6
 182  89F6              ;														DESCRIPCIÓN:
 183  89F6              ;
 184  89F6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89F6              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89F6              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89F6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89F6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89F6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89F6              ;														BIT 3, Recarga de nueva oleada.
 191  89F6              ;														BIT 4, Recarga de nueva oleada.
 192  89F6
 193  89F6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89F8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89F8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89F8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89F8
 198  89F8
 199  89F8
 200  89F8              ; Gestión de ENTIDADES y CAJAS.
 201  89F8
 202  89F8 02           Limitador_de_entidades_x_frame db 2						; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89F9 00 00        Puntero_store_caja defw 0
 204  89FB 00 00        Puntero_restore_caja defw 0
 205  89FD 00 00        Indice_restore_caja defw 0
 206  89FF 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  8A00 00           Numero_parcial_de_entidades db 0
 208  8A01 00           Entidades_en_curso db 0									; ..... ..... .....
 209  8A02 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  8A03              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  8A03              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  8A03              ;														; _ (Numero_de_malotes)="0".
 213  8A03 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  8A05 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  8A07              ;														; _ puntero (Indice_entidades).
 216  8A07
 217  8A07
 218  8A07              ;---------------------------------------------------------------------------------------------------------------
 219  8A07              ;
 220  8A07              ; Sirven para PINTAR.
 221  8A07
 222  8A07 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  8A09              ;														; _variable para almacenar lo posición del puntero_
 224  8A09              ; 														; _de pila, SP.
 225  8A09 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  8A0B              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  8A0B 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  8A0D              ;														; _el snapshot de los registros de la siguiente entidad.
 229  8A0D              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  8A0D 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  8A0F              ;														; _el snapshot de los registros del siguiente disparo.
 232  8A0F              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  8A0F
 234  8A0F              ;---------------------------------------------------------------------------------------------------------------
 235  8A0F
 236  8A0F              ; Gestión de Disparos.
 237  8A0F
 238  8A0F 00           Numero_de_disparotes db 0
 239  8A10 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  8A12 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  8A14 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  8A15              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  8A15              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  8A15 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  8A17              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  8A17              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  8A17              ;														; _produzca colisión.
 248  8A17 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  8A19              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  8A19 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  8A1C              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  8A1C 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  8A1F              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  8A1F              ;---------------------------------------------------------------------------------------------------------------
 255  8A1F
 256  8A1F              ; Relojes y temporizaciones.
 257  8A1F
 258  8A1F 00           Contador_de_frames db 0
 259  8A20 03           Clock_explosion db 3
 260  8A21 1E           Clock_Entidades_en_curso db 30
 261  8A22 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 262  8A23              ;														; Repite la oleada de entidades.
 263  8A23 01           Habilita_disparo_Amadeus db 1
 264  8A24 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 265  8A25 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 266  8A26
 267  8A26 01           Habilita_disparo_entidad db 1
 268  8A27 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 269  8A28 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 270  8A29
 271  8A29              ;---------------------------------------------------------------------------------------------------------------
 272  8A29
 273  8A29              ; Gestión de NIVELES.
 274  8A29
 275  8A29 00           Nivel db 0												 ; Nivel actual del juego.
 276  8A2A 00 00        Puntero_indice_NIVELES defw 0
 277  8A2C 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 278  8A2E              ; 														 ; _ que definen el NIVEL.
 279  8A2E
 280  8A2E
 281  8A2E              ; Y todo comienza aquí .....
 282  8A2E              ;
 283  8A2E              ; Rutina principal *************************************************************************************************************************************************************************
 284  8A2E              ;
 285  8A2E              ;	14/11/22
 286  8A2E
 287  8A2E              START
 288  8A2E
 289  8A2E 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 290  8A31 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 291  8A33 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 292  8A35 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 293  8A37 F3           	DI
 294  8A38
 295  8A38 3E 07        	ld a,%00000111
 296  8A3A CD E8 98     	call Cls
 297  8A3D
 298  8A3D              ;	call Pinta_marco
 299  8A3D
 300  8A3D CD 01 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 301  8A40
 302  8A40              ;!! Aqui llamaremos a la rutina que hace copia de seguridad de las variables generales.
 303  8A40
 304  8A40 CD 05 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 305  8A43
 306  8A43 CD 13 89     4 call Prepara_cajas
 307  8A46
 308  8A46 CD D8 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 309  8A49              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 310  8A49 CD B5 8D     	call Restore_entidad
 311  8A4C
 312  8A4C 21 00 8A     	ld hl,Numero_parcial_de_entidades
 313  8A4F 46           	ld b,(hl)
 314  8A50 04           	inc b
 315  8A51 05           	dec b
 316  8A52 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 317  8A54
 318  8A54              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 319  8A54              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 320  8A54              ;	Pintamos el resto de entidades:
 321  8A54
 322  8A54              ;	INICIA ENTIDADES !!!!!
 323  8A54
 324  8A54 C5           1 push bc  												; Guardo el contador de entidades.
 325  8A55 CD 32 8D     	call Inicia_Puntero_objeto
 326  8A58 CD FC 98     	call Recompone_posicion_inicio
 327  8A5B CD 38 93     	call Draw
 328  8A5E CD A0 7F     	call Guarda_foto_registros
 329  8A61 CD 7A 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 330  8A64 C1           	pop bc
 331  8A65 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 332  8A67
 333  8A67              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 334  8A67              ; (Esto se dá cuando se inicia una nueva oleada).
 335  8A67
 336  8A67 3A F5 89     	ld a,(Ctrl_1)
 337  8A6A CB 5F        	bit 3,a
 338  8A6C 20 18        	jr nz,5F											; Loop
 339  8A6E
 340  8A6E              ; 	INICIA AMADEUS !!!!!
 341  8A6E
 342  8A6E CD DC 8D     3 call Restore_Amadeus
 343  8A71 CD 32 8D     	call Inicia_Puntero_objeto
 344  8A74 CD 38 93     	call Draw
 345  8A77 CD A0 7F     	call Guarda_foto_registros
 346  8A7A 11 8C 85     	ld de,Amadeus_db
 347  8A7D CD EE 8D     	call Store_Amadeus
 348  8A80
 349  8A80              ; 	INICIA DISPAROS !!!!!
 350  8A80
 351  8A80 CD EE 8C     	call Inicia_Puntero_Disparo_Entidades
 352  8A83 CD F5 8C     	call Inicia_Puntero_Disparo_Amadeus
 353  8A86
 354  8A86              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 355  8A86
 356  8A86 CD D8 8C     5 call Inicia_punteros_de_cajas
 357  8A89 CD B5 8D     	call Restore_entidad
 358  8A8C
 359  8A8C 3A F5 89     	ld a,(Ctrl_1)
 360  8A8F CB 5F        	bit 3,a
 361  8A91 28 0A        	jr z,6F
 362  8A93
 363  8A93              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 364  8A93
 365  8A93 21 F5 89     	ld hl,Ctrl_1
 366  8A96 CB 9E        	res 3,(hl)
 367  8A98 CD FC 8C     	call Calcula_numero_de_malotes
 368  8A9B 18 07        	jr 7F
 369  8A9D
 370  8A9D              ; ----------
 371  8A9D
 372  8A9D 3A 00 8A     6 ld a,(Numero_parcial_de_entidades)
 373  8AA0 3C           	inc a
 374  8AA1 32 02 8A     	ld (Numero_de_malotes),a
 375  8AA4
 376  8AA4 AF           7 xor a
 377  8AA5 FB           2 ei
 378  8AA6 28 FD        	jr z,2B
 379  8AA8
 380  8AA8 3A 1F 8A     	ld a,(Contador_de_frames)
 381  8AAB 47           	ld b,a
 382  8AAC 3A 22 8A     	ld a,(Activa_recarga_cajas)
 383  8AAF B8           	cp b
 384  8AB0 28 08        	jr z,8F
 385  8AB2
 386  8AB2 21 F5 89     	ld hl,Ctrl_1
 387  8AB5 CB E6        	set 4,(hl)
 388  8AB7 AF           	xor a
 389  8AB8 18 EB        	jr 2B
 390  8ABA
 391  8ABA 21 F5 89     8 ld hl,Ctrl_1
 392  8ABD CB A6        	res 4,(hl)
 393  8ABF F3           	di
 394  8AC0
 395  8AC0 3A 1F 8A     	ld a,(Contador_de_frames)
 396  8AC3
 397  8AC3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 398  8AC3              ;! _ IMPREDECIBLE !!!!
 399  8AC3
 400  8AC3 C6 0A        	add 10
 401  8AC5 32 21 8A     	ld (Clock_Entidades_en_curso),a
 402  8AC8
 403  8AC8 C3 43 8A     	jp 4B
 404  8ACB
 405  8ACB              ; -----------------------------------------------------------------------------------
 406  8ACB
 407  8ACB              Frame
 408  8ACB
 409  8ACB              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 410  8ACB              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 411  8ACB
 412  8ACB              ; PINTAMOS.
 413  8ACB
 414  8ACB 3E 02            ld a,2
 415  8ACD D3 FE            out ($fe),a
 416  8ACF CD 3C 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 417  8AD2 CD 75 96     	call Extrae_foto_disparos
 418  8AD5 3E 01            ld a,1
 419  8AD7 D3 FE            out ($fe),a
 420  8AD9
 421  8AD9              ; ----------------------------------------------------------------------
 422  8AD9
 423  8AD9              ; RELOJES.
 424  8AD9
 425  8AD9 21 1F 8A     	ld hl,Contador_de_frames
 426  8ADC 34           	inc (hl)											; 0 - 255
 427  8ADD
 428  8ADD 3A 21 8A     	ld a,(Clock_Entidades_en_curso)
 429  8AE0 47           	ld b,a
 430  8AE1 3A 1F 8A     	ld a,(Contador_de_frames)
 431  8AE4 B8           	cp b
 432  8AE5 20 18        	jr nz,13F
 433  8AE7
 434  8AE7 3A 00 8A     	ld a,(Numero_parcial_de_entidades)
 435  8AEA 47           	ld b,a
 436  8AEB 3A 01 8A     	ld a,(Entidades_en_curso)
 437  8AEE B8           	cp b
 438  8AEF 28 0E        	jr z,13F
 439  8AF1 30 0C        	jr nc,13F
 440  8AF3
 441  8AF3 3C           	inc a
 442  8AF4 32 01 8A     	ld (Entidades_en_curso),a
 443  8AF7
 444  8AF7 3A 21 8A     	ld a,(Clock_Entidades_en_curso)
 445  8AFA
 446  8AFA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 447  8AFA              ;! _ IMPREDECIBLE !!!!
 448  8AFA
 449  8AFA C6 64        	add 100
 450  8AFC 32 21 8A     	ld (Clock_Entidades_en_curso),a
 451  8AFF
 452  8AFF 21 23 8A     13 ld hl,Habilita_disparo_Amadeus
 453  8B02 11 25 8A     	ld de,Temporiza_disparo_Amadeus
 454  8B05 CD B5 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 455  8B08
 456  8B08 21 26 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 457  8B0B 11 28 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 458  8B0E CD B5 9D     	call Habilita_disparos
 459  8B11
 460  8B11              ; COLISIONES.
 461  8B11
 462  8B11 CD 1A 92     	call Selector_de_impactos
 463  8B14
 464  8B14              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 465  8B14              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 466  8B14              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 467  8B14
 468  8B14 AF           	xor a
 469  8B15 32 14 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 470  8B18
 471  8B18 CD D8 8C     	call Inicia_punteros_de_cajas
 472  8B1B CD B5 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 473  8B1E              ; 														; _ en DRAW.
 474  8B1E 3A B7 89     	ld a,(Filas)
 475  8B21 A7           	and a
 476  8B22 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 477  8B24 CD C7 8D     	call Incrementa_punteros_de_cajas
 478  8B27 18 F2        	jr 12B
 479  8B29
 480  8B29              ; ---------------------------------------------------------------------------------------
 481  8B29
 482  8B29 CD 95 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 483  8B2C 21 00 70     	ld hl,Album_de_fotos
 484  8B2F 22 0B 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 485  8B32              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 486  8B32 3A 00 8A     	ld a,(Numero_parcial_de_entidades)
 487  8B35 47               ld b,a
 488  8B36 A7           	and a
 489  8B37 20 14        	jr nz,2F
 490  8B39
 491  8B39 21 F5 89     	ld hl,Ctrl_1
 492  8B3C CB 66        	bit 4,(hl)
 493  8B3E C2 D3 8B     	jp nz,4F
 494  8B41
 495  8B41 21 F5 89     	ld hl,Ctrl_1
 496  8B44 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 497  8B46
 498  8B46 3A 1F 8A     	ld a,(Contador_de_frames)
 499  8B49 3C           	inc a
 500  8B4A 32 22 8A     	ld (Activa_recarga_cajas),a
 501  8B4D
 502  8B4D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 503  8B4D
 504  8B4D 3A 01 8A     2 ld a,(Entidades_en_curso)
 505  8B50 A7           	and a
 506  8B51 CA D3 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 507  8B54 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 508  8B55
 509  8B55 08           	ex af,af
 510  8B56
 511  8B56              ; Código que ejecutamos con cada entidad:
 512  8B56              ; Impacto ???
 513  8B56
 514  8B56 C5           15 push bc 												; Nº de entidades en curso.
 515  8B57
 516  8B57 CD C6 9D     	call Autorizacion
 517  8B5A
 518  8B5A 3A D0 89     	ld a,(Impacto)
 519  8B5D A7           	and a
 520  8B5E 28 2D        	jr z,8F
 521  8B60
 522  8B60              ; Hay Impacto en esta entidad.
 523  8B60
 524  8B60 21 20 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 525  8B63 35           	dec (hl)
 526  8B64 20 62        	jr nz,6F
 527  8B66
 528  8B66              ;! Velocidad de la animación de la explosión.
 529  8B66
 530  8B66 36 03        	ld (hl),3 											; Reiniciamos el temporizador de la explosión,_
 531  8B68              ;														; _,(velocidad de la explosión).
 532  8B68 CD 8F 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 533  8B6B
 534  8B6B              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 535  8B6B
 536  8B6B 3A F3 89     	ld a,(Ctrl_2)
 537  8B6E CB 4F        	bit 1,a
 538  8B70 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 539  8B72
 540  8B72              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 541  8B72
 542  8B72 3A BF 89     	ld a,(CTRL_DESPLZ)
 543  8B75 A7           	and a
 544  8B76 20 08        	jr nz,21F
 545  8B78
 546  8B78 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 547  8B7B 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 548  8B7E 18 06        	jr 22F
 549  8B80
 550  8B80 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 551  8B83 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 552  8B86
 553  8B86 21 F3 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 554  8B89 CB CE        	set 1,(hl)
 555  8B8B 18 22        	jr 7F
 556  8B8D
 557  8B8D              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 558  8B8D              ; _con las coordenadas de la entidad almacenada en DRAW.
 559  8B8D
 560  8B8D 3A F5 89     8 ld a,(Ctrl_1)
 561  8B90 CB 57        	bit 2,a
 562  8B92 28 1B        	jr z,7F
 563  8B94
 564  8B94 2A 17 8A     	ld hl,(Coordenadas_disparo_certero)
 565  8B97 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 566  8B98              ;														; E contiene la coordenada_X del disparo.
 567  8B98 2A BD 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 568  8B9B              ;														; H FILA, (Coordenada_y de la entidad).
 569  8B9B A7           	and a
 570  8B9C ED 52        	sbc hl,de
 571  8B9E
 572  8B9E CD 51 92     	call Determina_resultado_comparativa
 573  8BA1
 574  8BA1              ;! Debug colisiones
 575  8BA1 78           	ld a,b
 576  8BA2 A7           	and a
 577  8BA3              ;	ld a,(Cuad_objeto)
 578  8BA3              ;	inc b
 579  8BA3              ;	dec b
 580  8BA3 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 581  8BA5              ;	jr z,$
 582  8BA5
 583  8BA5              ;! Debug colisiones
 584  8BA5
 585  8BA5              ; ----- ----- -----
 586  8BA5
 587  8BA5 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 588  8BA7 32 D0 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 589  8BAA
 590  8BAA 21 F5 89     	ld hl,Ctrl_1
 591  8BAD CB 96        	res 2,(hl)
 592  8BAF
 593  8BAF CD 06 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 594  8BB2
 595  8BB2 3A E5 89     	ld a,(Ctrl_0)
 596  8BB5 CB 67        	bit 4,a
 597  8BB7 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 598  8BB9
 599  8BB9              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 600  8BB9              ; [[[
 601  8BB9 CD 50 8E     	call Detecta_disparo_entidad
 602  8BBC              ; ]]]
 603  8BBC CD 9F 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 604  8BBF
 605  8BBF 21 E5 89     	ld hl,Ctrl_0
 606  8BC2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 607  8BC4 AF           	xor a
 608  8BC5 32 E6 89     	ld (Obj_dibujado),a
 609  8BC8
 610  8BC8 CD 7A 8D     6 call Store_Restore_cajas
 611  8BCB
 612  8BCB C1           	pop bc
 613  8BCC 10 88        	djnz 15B
 614  8BCE
 615  8BCE              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 616  8BCE
 617  8BCE 3E 02        	ld a,2
 618  8BD0 32 F8 89     	ld (Limitador_de_entidades_x_frame),a
 619  8BD3
 620  8BD3              ; ------------------------------------
 621  8BD3              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 622  8BD3              ; Hemos gestionado todas las unidades.
 623  8BD3              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 624  8BD3
 625  8BD3              ;	ld hl,Ctrl_1
 626  8BD3              ;	res 2,(hl)
 627  8BD3
 628  8BD3              ; ------------------------------------
 629  8BD3
 630  8BD3              ; Tras la gestión de las entidades, ... AMADEUS.
 631  8BD3
 632  8BD3 CD DC 8D     4 call Restore_Amadeus
 633  8BD6
 634  8BD6 3A D0 89     	ld a,(Impacto)
 635  8BD9 A7           	and a
 636  8BDA 20 FE        	jr nz,$
 637  8BDC
 638  8BDC CD 70 8C     	call Mov_Amadeus
 639  8BDF
 640  8BDF 3A E5 89     	ld a,(Ctrl_0)
 641  8BE2 CB 67        	bit 4,a
 642  8BE4 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 643  8BE6
 644  8BE6 CD 9F 8C     	call Guarda_foto_entidad_a_pintar
 645  8BE9
 646  8BE9 21 E5 89     3 ld hl,Ctrl_0
 647  8BEC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 648  8BEE AF           	xor a
 649  8BEF 32 E6 89     	ld (Obj_dibujado),a
 650  8BF2
 651  8BF2 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 652  8BF5 CD EE 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 653  8BF8
 654  8BF8 CD B3 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 655  8BFB
 656  8BFB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 657  8BFB
 658  8BFB CD 14 8D     	call Calcula_numero_de_disparotes
 659  8BFE CD FC 8C     9 call Calcula_numero_de_malotes
 660  8C01
 661  8C01 3E 04        	ld a,4
 662  8C03 D3 FE        	out ($fe),a
 663  8C05
 664  8C05 C9           	ret
 665  8C06
 666  8C06              ; --------------------------------------------------------------------------------------------------------------
 667  8C06              ;
 668  8C06              ;	27/05/23
 669  8C06
 670  8C06              Mov_obj
 671  8C06
 672  8C06              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 673  8C06
 674  8C06 3A F3 89     	ld a,(Ctrl_2)
 675  8C09 CB 4F        	bit 1,a
 676  8C0B 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 677  8C0D
 678  8C0D              ; Explosión:
 679  8C0D
 680  8C0D 3A F4 89     	ld a,(Frames_explosion)
 681  8C10 A7           	and a
 682  8C11 20 11        	jr nz,4F
 683  8C13
 684  8C13              ; Una alimaña menos!!!!!!!!!1
 685  8C13
 686  8C13 CD F7 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 687  8C16 21 00 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 688  8C19 35           	dec (hl)
 689  8C1A 21 01 8A     	ld hl,Entidades_en_curso
 690  8C1D 35           	dec (hl)
 691  8C1E 21 FF 89     	ld hl,Numero_de_entidades
 692  8C21 35           	dec (hl)
 693  8C22 18 4B        	jr 3F
 694  8C24
 695  8C24              ; -----
 696  8C24
 697  8C24              ;	`Movemos´ la explosión.
 698  8C24
 699  8C24 2A C5 89     4 ld hl,(Puntero_DESPLZ_der)
 700  8C27 23           	inc hl
 701  8C28 23           	inc hl
 702  8C29 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 703  8C2C CD 2C 8D     	call Extrae_address
 704  8C2F 22 BB 89     	ld (Puntero_objeto),hl
 705  8C32
 706  8C32 21 F4 89     	ld hl,Frames_explosion
 707  8C35 35           	dec (hl)
 708  8C36
 709  8C36 CD 8F 8C     	call Guarda_foto_entidad_a_borrar
 710  8C39 18 34        	jr 3F
 711  8C3B
 712  8C3B AF           2 xor a
 713  8C3C 32 E6 89     	ld (Obj_dibujado),a
 714  8C3F 32 E5 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 715  8C42              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 716  8C42              ; 														; _de la entidad.
 717  8C42 CD A9 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 718  8C45              ;														; Obj_dibujado="0".
 719  8C45              ; Movemos Entidades malignas.
 720  8C45
 721  8C45 3A E7 89     	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 722  8C48 A7           	and a 												; _a movernos. (Limitador_de_entidades).
 723  8C49 C8           	ret z
 724  8C4A
 725  8C4A 21 E8 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 726  8C4D 34           	inc (hl)
 727  8C4E 35           	dec (hl)                                            ; Salimos de la rutina.
 728  8C4F C8           	ret z
 729  8C50
 730  8C50 CD 16 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 731  8C53
 732  8C53 3A E5 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 733  8C56 CB 67        	bit 4,a
 734  8C58 C8           	ret z
 735  8C59
 736  8C59              ; Ha habido desplazamiento de la entidad maligna.
 737  8C59              ; Ha llegado a zona de AMADEUS ???
 738  8C59
 739  8C59 3A BE 89     	ld a,(Coordenada_y)
 740  8C5C FE 14        	cp $14
 741  8C5E D4 E4 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 742  8C61              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 743  8C61              ; ---------
 744  8C61
 745  8C61 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 746  8C63 32 E6 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 747  8C66 CD A9 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 748  8C69 CD C0 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 749  8C6C CD 8F 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 750  8C6F C9           3 ret													; _de la misma.
 751  8C70
 752  8C70              ; --------------------------------------------------------------------------------------------------------------
 753  8C70              ;
 754  8C70              ;	29/1/23
 755  8C70
 756  8C70              Mov_Amadeus
 757  8C70
 758  8C70 AF           	xor a
 759  8C71 32 E6 89     	ld (Obj_dibujado),a
 760  8C74 CD A9 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 761  8C77              ;														; Obj_dibujado="0".
 762  8C77              ; Movemos Amadeus.
 763  8C77
 764  8C77 CD 19 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 765  8C7A 3A E5 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 766  8C7D CB 67        	bit 4,a
 767  8C7F C8           	ret z
 768  8C80
 769  8C80              ; ---------
 770  8C80
 771  8C80 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 772  8C82 32 E6 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 773  8C85 CD A9 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 774  8C88 CD C0 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 775  8C8B CD 8F 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 776  8C8E C9           	ret													; _de la nave.
 777  8C8F
 778  8C8F              ; --------------------------------------------------------------------------------------------------------------
 779  8C8F              ;
 780  8C8F              ;	31/01/23
 781  8C8F              ;
 782  8C8F              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 783  8C8F
 784  8C8F              Guarda_foto_entidad_a_borrar
 785  8C8F
 786  8C8F CD 12 96     	call Prepara_draw
 787  8C92 CD 4C 95     	call calcula_CColumnass
 788  8C95 CD 83 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 789  8C98 CD D8 95     	call Define_rutina_de_impresion
 790  8C9B CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 791  8C9E C9           	ret
 792  8C9F
 793  8C9F              ; --------------------------------------------------------------------------------------------------------------
 794  8C9F              ;
 795  8C9F              ;	31/01/23
 796  8C9F              ;
 797  8C9F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 798  8C9F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 799  8C9F
 800  8C9F              Guarda_foto_entidad_a_pintar
 801  8C9F
 802  8C9F CD CC 8C     	call Repone_pintar
 803  8CA2 CD 38 93     	call Draw
 804  8CA5 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 805  8CA8 C9           	ret
 806  8CA9
 807  8CA9              ; --------------------------------------------------------------------------------------------------------------
 808  8CA9              ;
 809  8CA9              ;
 810  8CA9
 811  8CA9 21 B7 89     Prepara_var_pintado_borrado	ld hl,Filas
 812  8CAC 3A E6 89     	ld a,(Obj_dibujado)
 813  8CAF A7           	and a
 814  8CB0 28 05        	jr z,1F
 815  8CB2 11 DB 89     	ld de,Variables_de_pintado
 816  8CB5 18 03        	jr 2F
 817  8CB7 11 D1 89     1 ld de,Variables_de_borrado
 818  8CBA 01 08 00     2 ld bc,8
 819  8CBD ED B0        	ldir
 820  8CBF C9           	ret
 821  8CC0
 822  8CC0              ; --------------------------------------------------------------------------------------------------------------
 823  8CC0
 824  8CC0 21 D1 89     Repone_borrar ld hl,Variables_de_borrado
 825  8CC3 11 B7 89     	ld de,Filas
 826  8CC6 01 08 00     	ld bc,8
 827  8CC9 ED B0        	ldir
 828  8CCB C9           	ret
 829  8CCC
 830  8CCC 21 DB 89     Repone_pintar ld hl,Variables_de_pintado
 831  8CCF 11 B7 89     	ld de,Filas
 832  8CD2 01 08 00     	ld bc,8
 833  8CD5 ED B0        	ldir
 834  8CD7 C9           	ret
 835  8CD8
 836  8CD8              ; *************************************************************************************************************************************************************
 837  8CD8              ;
 838  8CD8              ; 8/1/23
 839  8CD8              ;
 840  8CD8              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 841  8CD8              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 842  8CD8              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 843  8CD8
 844  8CD8              ; Destruye HL y DE !!!!!
 845  8CD8
 846  8CD8              Inicia_punteros_de_cajas
 847  8CD8
 848  8CD8 21 74 85     	ld hl,Indice_de_cajas
 849  8CDB CD 2C 8D         call Extrae_address
 850  8CDE 22 F9 89         ld (Puntero_store_caja),hl
 851  8CE1 21 76 85     	ld hl,Indice_de_cajas+2
 852  8CE4 22 FD 89     	ld (Indice_restore_caja),hl
 853  8CE7 CD 2C 8D     	call Extrae_address
 854  8CEA 22 FB 89     	ld (Puntero_restore_caja),hl
 855  8CED C9               ret
 856  8CEE
 857  8CEE              ; *************************************************************************************************************************************************************
 858  8CEE              ;
 859  8CEE              ; 8/1/23
 860  8CEE              ;
 861  8CEE              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 862  8CEE
 863  8CEE 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 864  8CF1 22 10 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 865  8CF4 C9           	ret
 866  8CF5 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 867  8CF8 22 12 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 868  8CFB C9           	ret
 869  8CFC
 870  8CFC              ; -------------------------------------------------------------------------------------------------------------
 871  8CFC              ;
 872  8CFC              ; 28/2/23
 873  8CFC              ;
 874  8CFC
 875  8CFC              Calcula_numero_de_malotes
 876  8CFC
 877  8CFC 21 00 70     	ld hl,Album_de_fotos
 878  8CFF EB           	ex de,hl
 879  8D00 2A 0B 8A     	ld hl,(Stack_snapshot)
 880  8D03
 881  8D03 06 00        	ld b,0
 882  8D05 7D           	ld a,l
 883  8D06 93           	sub e
 884  8D07 28 07        	jr z,1F
 885  8D09
 886  8D09              ; Nº de malotes no es "0".
 887  8D09
 888  8D09 D6 06        2 sub 6
 889  8D0B 04           	inc b
 890  8D0C A7           	and a
 891  8D0D 20 FA        	jr nz,2B
 892  8D0F 78           	ld a,b
 893  8D10
 894  8D10 32 02 8A     1 ld (Numero_de_malotes),a
 895  8D13 C9           	ret
 896  8D14
 897  8D14              ; -------------------------------------------------------------------------------------------------------------
 898  8D14              ;
 899  8D14              ; 28/2/23
 900  8D14              ;
 901  8D14
 902  8D14              Calcula_numero_de_disparotes
 903  8D14
 904  8D14 21 85 70     	ld hl,Album_de_fotos_disparos
 905  8D17 EB           	ex de,hl
 906  8D18 2A 0D 8A     	ld hl,(Stack_snapshot_disparos)
 907  8D1B
 908  8D1B 06 00        	ld b,0
 909  8D1D 7D           	ld a,l
 910  8D1E 93           	sub e
 911  8D1F 28 07        	jr z,1F
 912  8D21
 913  8D21              ; Nº de malotes no es "0".
 914  8D21
 915  8D21 D6 06        2 sub 6
 916  8D23 04           	inc b
 917  8D24 A7           	and a
 918  8D25 20 FA        	jr nz,2B
 919  8D27 78           	ld a,b
 920  8D28
 921  8D28 32 0F 8A     1 ld (Numero_de_disparotes),a
 922  8D2B C9           	ret
 923  8D2C              ; *************************************************************************************************************************************************************
 924  8D2C              ;
 925  8D2C              ; 20/10/22
 926  8D2C              ;
 927  8D2C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 928  8D2C              ;
 929  8D2C              ; Destruye el puntero y DE !!!!!
 930  8D2C
 931  8D2C 5E           Extrae_address ld e,(hl)
 932  8D2D 23           	inc hl
 933  8D2E 56           	ld d,(hl)
 934  8D2F 2B           	dec hl
 935  8D30 EB           	ex de,hl
 936  8D31 C9           	ret
 937  8D32
 938  8D32              ; *************************************************************************************************************************************************************
 939  8D32              ;
 940  8D32              ;	7/2/23
 941  8D32              ;
 942  8D32              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 943  8D32              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 944  8D32              ;
 945  8D32              ;   Destruye HL y BC !!!!!,
 946  8D32              ;
 947  8D32              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 948  8D32              ;					"0" ..... Izquierda.
 949  8D32
 950  8D32              Inicia_Puntero_objeto
 951  8D32
 952  8D32 3A CB 89     	ld a,(Cuad_objeto)
 953  8D35 E6 01        	and 1
 954  8D37 F5           	push af
 955  8D38 CC 56 8D     	call z,Inicia_puntero_objeto_izq
 956  8D3B F1           	pop af
 957  8D3C 28 2B        	jr z,1F
 958  8D3E CD 43 8D     	call Inicia_puntero_objeto_der
 959  8D41 18 26        	jr 1F
 960  8D43
 961  8D43              ; Arrancamos desde la parte izquierda de la pantalla.
 962  8D43              ; Iniciamos (Indice_Sprite_der).
 963  8D43
 964  8D43 2A C1 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 965  8D46 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 966  8D49 CD 2C 8D     	call Extrae_address
 967  8D4C 22 BB 89     	ld (Puntero_objeto),hl
 968  8D4F
 969  8D4F 2A C3 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 970  8D52 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 971  8D55 C9           	ret
 972  8D56
 973  8D56              ; Arrancamos desde la parte derecha de la pantalla.
 974  8D56              ; Iniciamos (Indice_Sprite_izq).
 975  8D56
 976  8D56 2A C3 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 977  8D59 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 978  8D5C CD 2C 8D     	call Extrae_address
 979  8D5F 22 BB 89     	ld (Puntero_objeto),hl
 980  8D62
 981  8D62 2A C1 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 982  8D65 22 C5 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 983  8D68 C9           	ret
 984  8D69
 985  8D69              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 986  8D69
 987  8D69 21 48 83     1 ld hl,Amadeus
 988  8D6C ED 4B BB 89  	ld bc,(Puntero_objeto)
 989  8D70 B7 ED 42     	sub hl,bc
 990  8D73 C0           	ret nz
 991  8D74 21 E5 89     	ld hl,Ctrl_0
 992  8D77 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 993  8D79 C9           	ret 												; _de nuestra nave en los extremos.
 994  8D7A
 995  8D7A              ; *************************************************************************************************************************************************************
 996  8D7A              ;
 997  8D7A              ;	14/5/23
 998  8D7A              ;
 999  8D7A              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1000  8D7A              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1001  8D7A
1002  8D7A              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1003  8D7A              ;	_de la 2ª y 3ª entidad respectivamente.
1004  8D7A
1005  8D7A              Store_Restore_cajas
1006  8D7A
1007  8D7A E5           	push hl
1008  8D7B D5           	push de
1009  8D7C C5            	push bc
1010  8D7D
1011  8D7D              ;	STORE !!!!!
1012  8D7D              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1013  8D7D
1014  8D7D 21 B7 89     	ld hl,Filas
1015  8D80 ED 5B F9 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1016  8D84 01 3E 00     	ld bc,62
1017  8D87 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1018  8D89
1019  8D89              ; 	Entidad_sospechosa. 20/4/23
1020  8D89
1021  8D89 3A D0 89     	ld a,(Impacto)
1022  8D8C A7           	and a
1023  8D8D 28 0C        	jr z,1F
1024  8D8F
1025  8D8F 2A F9 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1026  8D92 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1027  8D95 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1028  8D96 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1029  8D98 22 15 8A     	ld (Entidad_sospechosa_de_colision),hl
1030  8D9B
1031  8D9B              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1032  8D9B
1033  8D9B 2A FB 89     1 ld hl,(Puntero_restore_caja)
1034  8D9E 7E           	ld a,(hl)
1035  8D9F A7           	and a
1036  8DA0 F5           	push af
1037  8DA1 28 08        	jr z,2F
1038  8DA3
1039  8DA3 11 B7 89     	ld de,Filas
1040  8DA6 01 3E 00     	ld bc,62
1041  8DA9 ED B0        	ldir
1042  8DAB
1043  8DAB CD C7 8D     2 call Incrementa_punteros_de_cajas
1044  8DAE F1           	pop af
1045  8DAF 28 EA        	jr z,1B
1046  8DB1
1047  8DB1 C1           	pop bc
1048  8DB2 D1           	pop de
1049  8DB3 E1           	pop hl
1050  8DB4
1051  8DB4 C9           	ret
1052  8DB5
1053  8DB5              ; **************************************************************************************************
1054  8DB5              ;
1055  8DB5              ;	12/05/23
1056  8DB5              ;
1057  8DB5              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1058  8DB5
1059  8DB5 E5           Restore_entidad push hl
1060  8DB6 D5           	push de
1061  8DB7 C5            	push bc
1062  8DB8
1063  8DB8 2A F9 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1064  8DBB 11 B7 89     	ld de,Filas
1065  8DBE 01 3E 00     	ld bc,62
1066  8DC1 ED B0        	ldir
1067  8DC3
1068  8DC3 C1           	pop bc
1069  8DC4 D1           	pop de
1070  8DC5 E1           	pop hl
1071  8DC6 C9           	ret
1072  8DC7
1073  8DC7
1074  8DC7              ; **************************************************************************************************
1075  8DC7              ;
1076  8DC7              ;	08/05/23
1077  8DC7              ;
1078  8DC7              ;	Incrementamos los dos punteros de entidades. (+1).
1079  8DC7
1080  8DC7 2A FB 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1081  8DCA 22 F9 89     	ld (Puntero_store_caja),hl
1082  8DCD 2A FD 89     	ld hl,(Indice_restore_caja)
1083  8DD0 23           	inc hl
1084  8DD1 23           	inc hl
1085  8DD2 22 FD 89     	ld (Indice_restore_caja),hl
1086  8DD5 CD 2C 8D         call Extrae_address
1087  8DD8 22 FB 89         ld (Puntero_restore_caja),hl
1088  8DDB C9               ret
1089  8DDC
1090  8DDC              ; **************************************************************************************************
1091  8DDC              ;
1092  8DDC              ;	25/01/23
1093  8DDC              ;
1094  8DDC              ;	Restore_Amadeus
1095  8DDC              ;
1096  8DDC              ;	Cargamos en DRAW los parámetros de Amadeus.
1097  8DDC              ;
1098  8DDC
1099  8DDC E5           Restore_Amadeus	push hl
1100  8DDD D5           	push de
1101  8DDE C5            	push bc
1102  8DDF 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1103  8DE2 11 B7 89     	ld de,Filas
1104  8DE5 01 3E 00     	ld bc,62
1105  8DE8 ED B0        	ldir
1106  8DEA C1           	pop bc
1107  8DEB D1           	pop de
1108  8DEC E1           	pop hl
1109  8DED C9           	ret
1110  8DEE
1111  8DEE              ; *************************************************************************************************************************************************************
1112  8DEE              ;
1113  8DEE              ;	29/04/23
1114  8DEE              ;
1115  8DEE              ;	Store_Amadeus
1116  8DEE              ;
1117  8DEE              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1118  8DEE              ;
1119  8DEE              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1120  8DEE              ;
1121  8DEE              ;	DESTRUYE: HL y BC y DE.
1122  8DEE
1123  8DEE 21 B7 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1124  8DF1 01 3E 00     	ld bc,62
1125  8DF4 ED B0        	ldir
1126  8DF6 C9           	ret
1127  8DF7
1128  8DF7              ; -----------------------------------------------------------
1129  8DF7              ;
1130  8DF7              ;	27/04/23
1131  8DF7              ;
1132  8DF7              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1133  8DF7              ;
1134  8DF7              ;	Destruye: HL,BC,DE,A
1135  8DF7
1136  8DF7 21 B7 89     Borra_datos_entidad ld hl,Filas
1137  8DFA 01 3D 00     	ld bc,61
1138  8DFD AF           	xor a
1139  8DFE 77           	ld (hl),a
1140  8DFF 11 B8 89     	ld de,Filas+1
1141  8E02 ED B0        	ldir
1142  8E04 C9           	ret
1143  8E05
1144  8E05              ; -----------------------------------------------------------
1145  8E05
1146  8E05              ; Teclado.
1147  8E05
1148  8E05 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1149  8E07 DB FE        	in a,($fe)
1150  8E09 E6 01        	and $01
1151  8E0B 28 02        	jr z,1f
1152  8E0D 18 F6        	jr Pulsa_ENTER
1153  8E0F C9           1 ret
1154  8E10
1155  8E10              ; **************************************************************************************************
1156  8E10              ;
1157  8E10              ; Temporización.
1158  8E10
1159  8E10              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1160  8E10              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1161  8E10              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1162  8E10              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1163  8E10
1164  8E10              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1165  8E10              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1166  8E10              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1167  8E10
1168  8E10              ; A partir de $4f61 no hace falta DELAY.
1169  8E10
1170  8E10              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1171  8E10
1172  8E10 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1173  8E13 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1174  8E14 78           	LD A,B
1175  8E15 A7           	AND A
1176  8E16 20 FB        	JR NZ,wait
1177  8E18 C9           	RET
1178  8E19
1179  8E19              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1180  8E19              ;
1181  8E19              ;	5/3/23
1182  8E19              ;
1183  8E19              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1184  8E19
1185  8E19              Movimiento_Amadeus
1186  8E19
1187  8E19              ; Disparo.
1188  8E19
1189  8E19 3A 23 8A     	ld a,(Habilita_disparo_Amadeus)
1190  8E1C A7           	and a
1191  8E1D 20 02        	jr nz,1F
1192  8E1F 18 15        	jr 2F
1193  8E21
1194  8E21 3E F7        1 ld a,$f7													; "5" para disparar.
1195  8E23 DB FE        	in a,($fe)
1196  8E25 E6 10        	and $10
1197  8E27
1198  8E27 F5           	push af
1199  8E28 CC 60 8E     	call z,Genera_disparo
1200  8E2B F1           	pop af
1201  8E2C 20 08        	jr nz,2F
1202  8E2E
1203  8E2E 3A 23 8A     	ld a,(Habilita_disparo_Amadeus)
1204  8E31 EE 01        	xor 1
1205  8E33 32 23 8A     	ld (Habilita_disparo_Amadeus),a
1206  8E36
1207  8E36 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1208  8E38 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1209  8E3A E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1210  8E3C CC B6 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1211  8E3F 3E F7        	ld a,$f7
1212  8E41 DB FE        	in a,($fe)
1213  8E43 E6 01        	and $01
1214  8E45 C8           	ret z
1215  8E46
1216  8E46 3E F7        	ld a,$f7
1217  8E48 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1218  8E4A E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1219  8E4C CC 98 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1220  8E4F C9           	ret
1221  8E50
1222  8E50              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1223  8E50              ;
1224  8E50              ;	Rutina provisional para que los malotes cagen balas.
1225  8E50
1226  8E50              Detecta_disparo_entidad
1227  8E50
1228  8E50 3A 26 8A     	ld a,(Habilita_disparo_entidad)
1229  8E53 A7           	and a
1230  8E54 C8           	ret z
1231  8E55 3E 7F        	ld a,$7f
1232  8E57 DB FE        	in a,($fe)
1233  8E59 E6 01        	and 1
1234  8E5B C0           	ret nz
1235  8E5C CD 60 8E     	call Genera_disparo
1236  8E5F C9           	ret
1237  8E60
1238  8E60              ; ---------------------------------------------------------------
1239  8E60
1240  8E60              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E60              ; ******************************************************************************************************************************************************************************************
   2+ 8E60              ;
   3+ 8E60              ;   17/04/23
   4+ 8E60              ;
   5+ 8E60              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E60              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E60              ;
   8+ 8E60              ;
   9+ 8E60              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E60              ;
  11+ 8E60              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E60              ;               _ hacen las entidades hacia abajo.
  13+ 8E60              ;
  14+ 8E60              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E60              ;
  16+ 8E60              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E60              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E60              ;
  19+ 8E60              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E60              ;           _ la bala.
  21+ 8E60              ;
  22+ 8E60              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E60              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E60              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E60              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E60              ;           _ en el momento de generarse la bala)).
  27+ 8E60
  28+ 8E60              Genera_disparo
  29+ 8E60
  30+ 8E60              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E60              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E60              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E60              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E60              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E60              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E60              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E60
  38+ 8E60              ; Exclusiones:
  39+ 8E60
  40+ 8E60 3A EF 89         ld a,(Columnas)
  41+ 8E63 47               ld b,a
  42+ 8E64 3A B8 89         ld a,(Columns)
  43+ 8E67 B8               cp b
  44+ 8E68 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E69
  46+ 8E69              ; ----- ----- -----
  47+ 8E69
  48+ 8E69 3A E5 89         ld a,(Ctrl_0)
  49+ 8E6C CB 77            bit 6,a
  50+ 8E6E 20 06            jr nz,14F
  51+ 8E70
  52+ 8E70 3A BE 89         ld a,(Coordenada_y)
  53+ 8E73 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E75 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E76
  56+ 8E76 21 00 80     14 ld hl,Indice_disparo
  57+ 8E79 3A BF 89         ld a,(CTRL_DESPLZ)
  58+ 8E7C 4F               ld c,a
  59+ 8E7D 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E7F              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E7F              ;                                            ""        ""       "f9", B="1"
  62+ 8E7F              ;                                            ""        ""       "fb", B="2"
  63+ 8E7F              ;                                            ""        ""       "fb", B="3"
  64+ 8E7F A7               and a
  65+ 8E80 28 10            jr z,1F
  66+ 8E82 E6 01            and 1
  67+ 8E84 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E85
  69+ 8E85 79               ld a,c
  70+ 8E86 16 F9            ld d,$f9
  71+ 8E88 23           2 inc hl
  72+ 8E89 23               inc hl
  73+ 8E8A 04               inc b
  74+ 8E8B BA               cp d
  75+ 8E8C 28 04            jr z,1F
  76+ 8E8E 14               inc d
  77+ 8E8F 14               inc d
  78+ 8E90 18 F6            jr 2B
  79+ 8E92
  80+ 8E92 CD 2C 8D     1 call Extrae_address
  81+ 8E95 E5               push hl
  82+ 8E96 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E98 DD 21 B1 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E9C
  85+ 8E9C              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E9C              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E9C
  88+ 8E9C 3A E5 89         ld a,(Ctrl_0)
  89+ 8E9F CB 77            bit 6,a
  90+ 8EA1 20 04            jr nz,19F
  91+ 8EA3
  92+ 8EA3 AF               xor a
  93+ 8EA4 32 26 8A         ld (Habilita_disparo_entidad),a
  94+ 8EA7
  95+ 8EA7 3A CB 89     19 ld a,(Cuad_objeto)
  96+ 8EAA FE 02            cp 2
  97+ 8EAC 38 66            jr c,3F
  98+ 8EAE 28 64            jr z,3F
  99+ 8EB0
 100+ 8EB0              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8EB0
 102+ 8EB0 E6 01            and 1
 103+ 8EB2 28 30            jr z,4F
 104+ 8EB4
 105+ 8EB4              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8EB4              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8EB4              ;
 108+ 8EB4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8EB4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8EB4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8EB4
 112+ 8EB4 2A B9 89     	ld hl,(Posicion_actual)
 113+ 8EB7
 114+ 8EB7              ;   Amadeus o entidad ???.
 115+ 8EB7
 116+ 8EB7 3A E5 89         ld a,(Ctrl_0)
 117+ 8EBA CB 77            bit 6,a
 118+ 8EBC 28 0A            jr z,8F
 119+ 8EBE
 120+ 8EBE              ; 	Dispara Amadeus.
 121+ 8EBE
 122+ 8EBE 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8EC0 CD 2D 96         call PreviousScan
 124+ 8EC3 CD 2D 96         call PreviousScan
 125+ 8EC6
 126+ 8EC6              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EC6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EC6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EC6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EC6
 131+ 8EC6 18 11            jr 10F
 132+ 8EC8
 133+ 8EC8              ; 	Dispara Entidad.
 134+ 8EC8
 135+ 8EC8 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8ECB              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8ECB
 138+ 8ECB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8ECB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8ECB
 141+ 8ECB C5               push bc
 142+ 8ECC 06 10            ld b,16
 143+ 8ECE CD 1E 96     9 call NextScan
 144+ 8ED1 10 FB            djnz 9B
 145+ 8ED3 C1               pop bc
 146+ 8ED4 CD 3E 8F         call Ajusta_disparo_parte_izquierda
 147+ 8ED7 18 06            jr 17F
 148+ 8ED9
 149+ 8ED9              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8ED9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8ED9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8ED9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8ED9
 154+ 8ED9 CD 3E 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EDC CD B3 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EDF              ;                                                      ; _al generar el disparo.
 157+ 8EDF
 158+ 8EDF              ; 	LLegados a este punto tendremos:
 159+ 8EDF              ;
 160+ 8EDF              ;       Puntero_objeto_disparo en IY.
 161+ 8EDF              ;       Rutinas_de_impresion en IX.
 162+ 8EDF              ;       Puntero_de_impresion en HL.
 163+ 8EDF              ;       Impacto/Dirección en BC.
 164+ 8EDF
 165+ 8EDF CD 46 8F     17 call Almacena_disparo
 166+ 8EE2 18 52            jr 6F                                             ; RET.
 167+ 8EE4
 168+ 8EE4              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EE4              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EE4              ;
 171+ 8EE4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EE4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EE4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EE4
 175+ 8EE4 2A B9 89     4 ld hl,(Posicion_actual)
 176+ 8EE7
 177+ 8EE7              ;   Amadeus o entidad ???.
 178+ 8EE7
 179+ 8EE7 3A E5 89         ld a,(Ctrl_0)
 180+ 8EEA CB 77            bit 6,a
 181+ 8EEC 28 0A            jr z,11F
 182+ 8EEE
 183+ 8EEE              ; 	Dispara Amadeus.
 184+ 8EEE
 185+ 8EEE 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EF0 CD 2D 96         call PreviousScan
 187+ 8EF3 CD 2D 96         call PreviousScan
 188+ 8EF6
 189+ 8EF6              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EF6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EF6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EF6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EF6
 194+ 8EF6 18 11            jr 13F
 195+ 8EF8
 196+ 8EF8              ; 	Dispara Entidad.
 197+ 8EF8
 198+ 8EF8 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EFB              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EFB
 201+ 8EFB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EFB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EFB
 204+ 8EFB C5               push bc
 205+ 8EFC 06 10            ld b,16
 206+ 8EFE CD 1E 96     12 call NextScan
 207+ 8F01 10 FB            djnz 12B
 208+ 8F03 C1               pop bc
 209+ 8F04
 210+ 8F04 CD 37 8F         call Ajusta_disparo_parte_derecha
 211+ 8F07 18 06            jr 18F
 212+ 8F09
 213+ 8F09              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8F09              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8F09              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8F09              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8F09
 218+ 8F09 CD 37 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8F0C CD B3 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8F0F              ;                                                       ; _al generar el disparo.
 221+ 8F0F
 222+ 8F0F              ; LLegados a este punto tendremos:
 223+ 8F0F              ;
 224+ 8F0F              ;       Puntero_objeto_disparo en IY.
 225+ 8F0F              ;       Rutinas_de_impresion en IX.
 226+ 8F0F              ;       Puntero_de_impresion en HL.
 227+ 8F0F              ;       Impacto/Dirección en BC.
 228+ 8F0F
 229+ 8F0F CD 46 8F     18 call Almacena_disparo
 230+ 8F12 18 22            jr 6F                                               ; RET.
 231+ 8F14
 232+ 8F14              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8F14
 234+ 8F14 28 11        3 jr z,5F
 235+ 8F16
 236+ 8F16              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8F16              ;
 238+ 8F16              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8F16              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8F16              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8F16              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8F16
 243+ 8F16              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8F16              ;	   ""        ""       "f9", B="1"
 245+ 8F16              ;	   ""        ""       "fb", B="2"
 246+ 8F16              ; 	   ""        ""       "fb", B="3"
 247+ 8F16
 248+ 8F16 2A B9 89     	ld hl,(Posicion_actual)
 249+ 8F19 CD 1E 96     	call NextScan
 250+ 8F1C
 251+ 8F1C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8F1C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8F1C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8F1C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8F1C
 256+ 8F1C CD 3E 8F         call Ajusta_disparo_parte_izquierda
 257+ 8F1F
 258+ 8F1F              ; 	No se produce impacto. B="$80"
 259+ 8F1F              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8F1F
 261+ 8F1F 01 80 80         ld bc,$8080
 262+ 8F22
 263+ 8F22              ; 	LLegados a este punto tendremos:
 264+ 8F22              ;
 265+ 8F22              ;       Puntero_objeto_disparo en IY.
 266+ 8F22              ;       Rutinas_de_impresion en IX.
 267+ 8F22              ;       Puntero_de_impresion en HL.
 268+ 8F22              ;       Impacto/Dirección en BC.
 269+ 8F22
 270+ 8F22 CD 46 8F         call Almacena_disparo
 271+ 8F25 18 0F            jr 6F                                           ; RET.
 272+ 8F27
 273+ 8F27              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F27              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F27              ;
 276+ 8F27              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F27              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F27              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F27              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F27
 281+ 8F27 2A B9 89     5 ld hl,(Posicion_actual)
 282+ 8F2A CD 1E 96     	call NextScan
 283+ 8F2D
 284+ 8F2D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F2D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F2D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F2D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F2D
 289+ 8F2D CD 37 8F         call Ajusta_disparo_parte_derecha
 290+ 8F30
 291+ 8F30              ; 	No se produce impacto. B="$80"
 292+ 8F30              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F30
 294+ 8F30 01 80 80     15 ld bc,$8080
 295+ 8F33
 296+ 8F33              ; 	LLegados a este punto tendremos:
 297+ 8F33              ;
 298+ 8F33              ;       Puntero_objeto_disparo en IY.
 299+ 8F33              ;       Rutinas_de_impresion en IX.
 300+ 8F33              ;       Puntero_de_impresion en HL.
 301+ 8F33              ;       Impacto/Dirección en BC.
 302+ 8F33
 303+ 8F33 CD 46 8F         call Almacena_disparo
 304+ 8F36
 305+ 8F36 C9           6 ret
 306+ 8F37
 307+ 8F37              ; ----------------------------------------------------------------
 308+ 8F37              ;
 309+ 8F37              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F37              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F37              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F37
 313+ 8F37 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F38 FE 02            cp 2
 315+ 8F3A 38 01            jr c,1F
 316+ 8F3C 23               inc hl
 317+ 8F3D C9           1 ret
 318+ 8F3E
 319+ 8F3E 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F3F FE 01        	cp 1
 321+ 8F41 20 01        	jr nz,1F
 322+ 8F43 2B           	dec hl
 323+ 8F44 2B           1 dec hl
 324+ 8F45 C9               ret
 325+ 8F46
 326+ 8F46              ; ----------------------------------------------------------------
 327+ 8F46              ;
 328+ 8F46              ;   25/02/23
 329+ 8F46              ;
 330+ 8F46              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F46              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F46              ;
 333+ 8F46              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F46              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F46
 336+ 8F46              Almacena_disparo
 337+ 8F46
 338+ 8F46 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F47 F1               pop af
 340+ 8F48 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F49
 342+ 8F49 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F4A E6 01            and 1
 344+ 8F4C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F4E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F4E              ; 	Dispara AMADEUS.
 347+ 8F4E
 348+ 8F4E              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F4E              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F4E              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F4E              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F4E
 353+ 8F4E C5               push bc
 354+ 8F4F 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F52 2A 12 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F55 A7               and a
 357+ 8F56 ED 42            sbc hl,bc
 358+ 8F58 CC F5 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F5B C1               pop bc
 360+ 8F5C 28 54            jr z,4F
 361+ 8F5E
 362+ 8F5E 2A 12 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F61 23               inc hl
 364+ 8F62 23               inc hl
 365+ 8F63 22 12 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F66              ;                                                   ; _ Disparo_(+1).
 367+ 8F66 18 18            jr 2F
 368+ 8F68
 369+ 8F68              ; Dispara una entidad.
 370+ 8F68
 371+ 8F68 C5           1 push bc
 372+ 8F69 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F6C 2A 10 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F6F A7               and a
 375+ 8F70 ED 42            sbc hl,bc
 376+ 8F72 CC EE 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F75 C1               pop bc
 378+ 8F76 28 3A            jr z,4F
 379+ 8F78
 380+ 8F78 2A 10 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F7B 23               inc hl
 382+ 8F7C 23               inc hl
 383+ 8F7D 22 10 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F80              ;                                                   ; _ Disparo_(+1).
 385+ 8F80 CD 2C 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F83              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F83              ;
 388+ 8F83              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F83              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F83              ;                                                     Puntero_de_impresion en HL.
 391+ 8F83              ;                                                     Impacto/Dirección en BC.
 392+ 8F83
 393+ 8F83 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F84 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F85 23               inc hl                                          ; _ al siguiente.
 396+ 8F86 A7               and a
 397+ 8F87 20 C0            jr nz,3B
 398+ 8F89
 399+ 8F89 08               ex af,af
 400+ 8F8A ED 73 07 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F8E F9               ld sp,hl
 402+ 8F8F
 403+ 8F8F DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F91 F5               push af                                         ; Puntero de impresión.
 405+ 8F92 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F94 C5               push bc                                         ; Control.
 407+ 8F95
 408+ 8F95 ED 7B 07 8A      ld sp,(Stack)
 409+ 8F99
 410+ 8F99              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F99
 412+ 8F99 21 F5 89     	ld hl,Ctrl_1
 413+ 8F9C CB C6        	set 0,(hl)
 414+ 8F9E
 415+ 8F9E DD E5        	push ix
 416+ 8FA0 E1               pop hl
 417+ 8FA1 F5               push af
 418+ 8FA2 DD E1            pop ix
 419+ 8FA4
 420+ 8FA4 CD A0 7F     	call Guarda_foto_registros
 421+ 8FA7
 422+ 8FA7 21 F5 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8FAA CB 86        	res 0,(hl)
 424+ 8FAC
 425+ 8FAC              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8FAC              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8FAC
 428+ 8FAC CD F5 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8FAF CD EE 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8FB2
 431+ 8FB2 C9           4 ret
 432+ 8FB3
 433+ 8FB3              ; ----------------------------------------------------------------
 434+ 8FB3              ;
 435+ 8FB3              ;   4/3/23
 436+ 8FB3              ;
 437+ 8FB3              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8FB3              ;   _ al generarse el disparo.
 439+ 8FB3              ;
 440+ 8FB3              ;       "$80" ..... No se produce colisión.
 441+ 8FB3              ;       "$81" ..... Se produce colisión.
 442+ 8FB3
 443+ 8FB3              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8FB3              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8FB3
 446+ 8FB3
 447+ 8FB3 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8FB5 E5               push hl                                        ; Puntero de impresión.
 449+ 8FB6
 450+ 8FB6 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8FB8 CD D4 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8FBB
 453+ 8FBB 7B               ld a,e
 454+ 8FBC E6 01            and 1
 455+ 8FBE 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8FC0
 457+ 8FC0 E1               pop hl
 458+ 8FC1 E5               push hl
 459+ 8FC2 CD 1E 96         call NextScan
 460+ 8FC5
 461+ 8FC5 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FC6 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FC8 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FCA              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FCA 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FCC CD D4 8F         call Bucle_2
 467+ 8FCF
 468+ 8FCF 43           2 ld b,e
 469+ 8FD0 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FD1 FD E1            pop iy
 471+ 8FD3 C9               ret
 472+ 8FD4
 473+ 8FD4               ; ---------- ----------
 474+ 8FD4
 475+ 8FD4 06 02        Bucle_2 ld b,2
 476+ 8FD6 FD 7E 00     2 ld a,(iy)
 477+ 8FD9 A6               and (hl)
 478+ 8FDA 28 02            jr z,1F
 479+ 8FDC 1E 81            ld e,$81
 480+ 8FDE 23           1 inc hl
 481+ 8FDF FD 23            inc iy
 482+ 8FE1 10 F3            djnz 2B
 483+ 8FE3 C9               ret
 484+ 8FE4
 485+ 8FE4              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FE4              ;
 487+ 8FE4              ;   11/04/23
 488+ 8FE4              ;
 489+ 8FE4              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FE4              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FE4              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FE4              ;
 493+ 8FE4              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FE4
 495+ 8FE4              Compara_coordenadas_X
 496+ 8FE4
 497+ 8FE4              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FE4              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FE4
 500+ 8FE4              ; Preparamos registros:
 501+ 8FE4
 502+ 8FE4 21 BD 89         ld hl,Filas+6
 503+ 8FE7 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FE8 23               inc hl
 505+ 8FE9 23               inc hl
 506+ 8FEA 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FEB 43               ld b,e
 508+ 8FEC 21 CB 89         ld hl,Filas+20
 509+ 8FEF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FF0 21 1C 8A         ld hl,Coordenadas_X_Entidad
 511+ 8FF3 CD 07 92         call Guarda_coordenadas_X
 512+ 8FF6
 513+ 8FF6              ; Preparamos registros:
 514+ 8FF6
 515+ 8FF6 21 92 85         ld hl,Amadeus_db+6
 516+ 8FF9 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FFA 23               inc hl
 518+ 8FFB 23               inc hl
 519+ 8FFC 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FFD 7B               ld a,e
 521+ 8FFE 08               ex af,af'
 522+ 8FFF 21 A0 85         ld hl,Amadeus_db+20
 523+ 9002 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 9003 21 19 8A         ld hl,Coordenadas_X_Amadeus
 525+ 9006 CD 07 92         call Guarda_coordenadas_X
 526+ 9009
 527+ 9009              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 9009              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 9009
 530+ 9009 04               inc b
 531+ 900A 05               dec b
 532+ 900B 28 04            jr z,1F
 533+ 900D 06 03            ld b,3
 534+ 900F 18 02            jr 2F
 535+ 9011 06 02        1 ld b,2
 536+ 9013 08           2 ex af,af'
 537+ 9014 3C               inc a
 538+ 9015 3D               dec a
 539+ 9016 28 04            jr z,5F
 540+ 9018 0E 03            ld c,3
 541+ 901A 18 02            jr 6F
 542+ 901C 0E 02        5 ld c,2
 543+ 901E 79           6 ld a,c
 544+ 901F 08               ex af,af'
 545+ 9020 11 1C 8A         ld de,Coordenadas_X_Entidad
 546+ 9023 1A           4 ld a,(de)
 547+ 9024 21 19 8A         ld hl,Coordenadas_X_Amadeus
 548+ 9027 BE           3 cp (hl)
 549+ 9028 28 0E            jr z,7F
 550+ 902A 23               inc hl
 551+ 902B 0D               dec c
 552+ 902C 20 F9            jr nz,3B
 553+ 902E 13               inc de
 554+ 902F 08               ex af,af'
 555+ 9030 4F               ld c,a
 556+ 9031 08               ex af,af'
 557+ 9032 10 EF            djnz 4B
 558+ 9034
 559+ 9034              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 9034
 561+ 9034 CD 46 92     8 call Limpia_Coordenadas_X
 562+ 9037 C9               ret
 563+ 9038
 564+ 9038              7
 565+ 9038 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 903A 32 D0 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 903D 21 14 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 9040 CB D6            set 2,(hl)
 569+ 9042 18 F0            jr 8B
 570+ 9044
 571+ 9044              ; -----------------------------------------------------------------------
 572+ 9044              ;
 573+ 9044              ;   17/04/23
 574+ 9044              ;
 575+ 9044
 576+ 9044              Detecta_colision_nave_entidad
 577+ 9044
 578+ 9044              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9044
 580+ 9044 2A B9 89         ld hl,(Posicion_actual)
 581+ 9047 CD 83 95         call Calcula_puntero_de_impresion
 582+ 904A
 583+ 904A              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 904A              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 904A
 586+ 904A DD E5            push ix
 587+ 904C E1               pop hl
 588+ 904D E5               push hl
 589+ 904E
 590+ 904E              ; ----- ----- -----
 591+ 904E 1E 00            ld e,0                                         ; Indica impacto.
 592+ 9050 06 0A            ld b,10
 593+ 9052 CD 82 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9055 7B               ld a,e
 595+ 9056 FE 05            cp 5
 596+ 9058 38 0E            jr c,3F
 597+ 905A
 598+ 905A              ; LLegados a este punto:
 599+ 905A              ;
 600+ 905A              ;   HAY COLISIÓN !!!!!.
 601+ 905A              ;
 602+ 905A              ;   .db (Impacto) de Amadeus a "1".
 603+ 905A              ;   SET el bit3 de (Impacto2).
 604+ 905A              ;
 605+ 905A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 905A
 607+ 905A 21 A5 85         ld hl,Amadeus_db+25
 608+ 905D 36 01            ld (hl),1
 609+ 905F 21 14 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 9062 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9064 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9066 18 18            jr 1F
 613+ 9068
 614+ 9068              ; -----
 615+ 9068
 616+ 9068 E1           3 pop hl
 617+ 9069 CD 1E 96         call NextScan
 618+ 906C E5               push hl
 619+ 906D 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 906E FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 9070 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 9072 30 0C            jr nc,1F
 623+ 9074              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9074 10 DC            djnz 2B
 625+ 9076
 626+ 9076              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9076
 628+ 9076              ; LLegados a este punto:
 629+ 9076              ;
 630+ 9076              ;   NO HAY COLISIÓN !!!!!.
 631+ 9076              ;
 632+ 9076              ;   .db (Impacto) de Amadeus a "0".
 633+ 9076              ;   RES el bit2 de (Impacto2).
 634+ 9076              ;
 635+ 9076              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9076              ;   Lo colocamos a "0".
 637+ 9076
 638+ 9076 21 14 8A         ld hl,Impacto2
 639+ 9079 CB 96            res 2,(hl)
 640+ 907B 2A 15 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 907E 36 00            ld (hl),0
 642+ 9080
 643+ 9080 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 9081 C9               ret
 645+ 9082
 646+ 9082               ; ---------- ----------
 647+ 9082
 648+ 9082 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9083 3A B8 89         ld a,(Columns)
 650+ 9086 47               ld b,a
 651+ 9087 FD 7E 00     2 ld a,(iy)
 652+ 908A BE               cp (hl)
 653+ 908B 28 01            jr z,1F
 654+ 908D
 655+ 908D 1C               inc e
 656+ 908E
 657+ 908E 23           1 inc hl
 658+ 908F FD 23            inc iy
 659+ 9091 10 F4            djnz 2B
 660+ 9093 C1               pop bc
 661+ 9094 C9               ret
 662+ 9095
 663+ 9095              ; -------------------------------------------------------------------------------------------------------------
 664+ 9095              ;
 665+ 9095              ;   13/03/23
 666+ 9095              ;
 667+ 9095              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9095              ;
 669+ 9095              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9095
 671+ 9095 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9098 7E               ld a,(hl)
 673+ 9099 A7               and a
 674+ 909A C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 909B
 676+ 909B 44               ld b,h
 677+ 909C 4D               ld c,l
 678+ 909D 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
 679+ 90A0 E5               push hl
 680+ 90A1 A7               and a
 681+ 90A2 ED 42            sbc hl,bc
 682+ 90A4 E5               push hl
 683+ 90A5 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 90A6
 685+ 90A6 E1               pop hl
 686+ 90A7 54               ld d,h
 687+ 90A8 5D               ld e,l
 688+ 90A9 1B               dec de
 689+ 90AA ED B8            lddr                                                ; Limpiamos.
 690+ 90AC
 691+ 90AC 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 90AF 22 0D 8A         ld (Stack_snapshot_disparos),hl
 693+ 90B2
 694+ 90B2 C9               ret
 695+ 90B3
 696+ 90B3              ; -------------------------------------------------------------------------------------------------------------
 697+ 90B3              ;
 698+ 90B3              ;   28/03/23
 699+ 90B3              ;
 700+ 90B3
 701+ 90B3 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 90B6 2A 12 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 90B9
 704+ 90B9 CD 2C 8D     2 call Extrae_address
 705+ 90BC 7E               ld a,(hl)
 706+ 90BD A7               and a
 707+ 90BE 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 90C0
 709+ 90C0              ; ----- ----- ----- ----- ----- -----
 710+ 90C0
 711+ 90C0 C5               push bc
 712+ 90C1 CD 7D 91         call foto_disparo_a_borrar
 713+ 90C4
 714+ 90C4              ; Existe colisión con este disparo???
 715+ 90C4
 716+ 90C4 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 90C5 7E               ld a,(hl)
 718+ 90C6 2B               dec hl
 719+ 90C7 E6 01            and 1
 720+ 90C9 28 1D            jr z,9F
 721+ 90CB
 722+ 90CB              ;   En este punto:
 723+ 90CB              ;
 724+ 90CB              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90CB              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90CB              ;   _con la entidad).
 727+ 90CB              ;
 728+ 90CB              ;   Disparo_2A defw 0                                ; Control.
 729+ 90CB              ;    defw 0                                          ; Puntero objeto.
 730+ 90CB              ;    defw 0                                          ; Puntero de impresión.
 731+ 90CB              ;    defw 0                                          ; Rutina de impresión.
 732+ 90CB
 733+ 90CB E5               push hl
 734+ 90CC
 735+ 90CC 06 04            ld b,4
 736+ 90CE 23           19 inc hl
 737+ 90CF 10 FD            djnz 19B
 738+ 90D1
 739+ 90D1 CD 2C 8D         call Extrae_address
 740+ 90D4 CD 75 9C         call Genera_coordenadas_disparo
 741+ 90D7
 742+ 90D7              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90D7
 744+ 90D7 21 17 8A         ld hl,Coordenadas_disparo_certero
 745+ 90DA 72               ld (hl),d
 746+ 90DB 23               inc hl
 747+ 90DC 73               ld (hl),e
 748+ 90DD
 749+ 90DD              ; Elimino el disparo de la base de datos.
 750+ 90DD
 751+ 90DD E1               pop hl
 752+ 90DE CD FC 91         call Elimina_disparo_de_base_de_datos
 753+ 90E1 21 14 8A         ld hl,Impacto2
 754+ 90E4 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90E6
 756+ 90E6 18 06            jr 11F
 757+ 90E8
 758+ 90E8 CD A6 91     9 call Mueve_disparo
 759+ 90EB CD 7D 91         call foto_disparo_a_borrar
 760+ 90EE
 761+ 90EE C1           11 pop bc
 762+ 90EF 18 04            jr 7F
 763+ 90F1
 764+ 90F1              ; ----- ----- ----- ----- ----- -----
 765+ 90F1
 766+ 90F1 ED 42        1 sbc hl,bc
 767+ 90F3 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90F5 2A 12 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90F8 23               inc hl
 770+ 90F9 23               inc hl
 771+ 90FA 22 12 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90FD 18 BA            jr 2B
 773+ 90FF CD F5 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 9102
 775+ 9102 01 72 85         ld bc,Disparo_11
 776+ 9105 2A 10 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 9108
 778+ 9108 CD 2C 8D     5 call Extrae_address
 779+ 910B 7E               ld a,(hl)
 780+ 910C A7               and a
 781+ 910D 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 910F
 783+ 910F              ; ----- ----- ----- ----- ----- -----
 784+ 910F
 785+ 910F C5               push bc
 786+ 9110 CD 7D 91         call foto_disparo_a_borrar
 787+ 9113
 788+ 9113              ; Existe colisión con este disparo???
 789+ 9113
 790+ 9113 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 9114 7E               ld a,(hl)
 792+ 9115 2B               dec hl
 793+ 9116 E6 01            and 1
 794+ 9118 28 48            jr z,10F
 795+ 911A
 796+ 911A              ; La colisión se produce con Amadeus???
 797+ 911A              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 911A
 799+ 911A E5               push hl
 800+ 911B
 801+ 911B 06 04            ld b,4
 802+ 911D 23           16 inc hl
 803+ 911E 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 9120 CD 2C 8D         call Extrae_address
 805+ 9123 CD 75 9C         call Genera_coordenadas_disparo
 806+ 9126
 807+ 9126 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 9127 FE 16            cp $16
 809+ 9129 38 22            jr c,15F
 810+ 912B
 811+ 912B              ; (Colisiones en filas 16 y 17).
 812+ 912B
 813+ 912B D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 912C
 815+ 912C              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 912C
 817+ 912C 21 92 85         ld hl,Amadeus_db+6
 818+ 912F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 9130 23               inc hl
 820+ 9131 23               inc hl
 821+ 9132 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9133 21 A0 85         ld hl,Amadeus_db+20
 823+ 9136 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9137 21 19 8A         ld hl,Coordenadas_X_Amadeus
 825+ 913A CD 07 92         call Guarda_coordenadas_X
 826+ 913D
 827+ 913D D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 913E
 829+ 913E              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 913E
 831+ 913E 06 03            ld b,3
 832+ 9140 21 19 8A         ld hl,Coordenadas_X_Amadeus
 833+ 9143 7E           18 ld a,(hl)
 834+ 9144 BA               cp d
 835+ 9145 20 03            jr nz,17F
 836+ 9147
 837+ 9147              ; Colisión Amadeus !!!!!!!!!!
 838+ 9147
 839+ 9147 E1               pop hl
 840+ 9148 18 09            jr 14F
 841+ 914A
 842+ 914A 23           17 inc hl
 843+ 914B 10 F6            djnz 18B
 844+ 914D
 845+ 914D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 914D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 914D
 848+ 914D E1           15 pop hl
 849+ 914E 23               inc hl
 850+ 914F 35               dec (hl)
 851+ 9150 2B               dec hl
 852+ 9151 18 0F            jr 10F
 853+ 9153
 854+ 9153              ; -----------------------debug
 855+ 9153
 856+ 9153              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9153              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9153
 859+ 9153 E5           14 push hl
 860+ 9154 CD FC 91         call Elimina_disparo_de_base_de_datos
 861+ 9157 21 14 8A         ld hl,Impacto2
 862+ 915A CB CE            set 1,(hl)
 863+ 915C CD 46 92         call Limpia_Coordenadas_X
 864+ 915F
 865+ 915F E1               pop hl
 866+ 9160 18 06            jr 12F
 867+ 9162
 868+ 9162 CD A6 91     10 call Mueve_disparo
 869+ 9165 CD 7D 91         call foto_disparo_a_borrar
 870+ 9168 C1           12 pop bc
 871+ 9169
 872+ 9169 18 04            jr 8F
 873+ 916B
 874+ 916B              ; ----- ----- ----- ----- ----- -----
 875+ 916B
 876+ 916B ED 42        4 sbc hl,bc
 877+ 916D 28 0A            jr z,6F
 878+ 916F
 879+ 916F 2A 10 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9172 23               inc hl
 881+ 9173 23               inc hl
 882+ 9174 22 10 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9177 18 8F            jr 5B
 884+ 9179
 885+ 9179 CD EE 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 917C C9               ret
 887+ 917D
 888+ 917D              ; ------------------------------------------------------------------
 889+ 917D
 890+ 917D              foto_disparo_a_borrar
 891+ 917D
 892+ 917D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 917E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 917F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9180
 896+ 9180 E5               push hl
 897+ 9181 23               inc hl
 898+ 9182 23               inc hl
 899+ 9183 ED 73 07 8A      ld (Stack),sp
 900+ 9187 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9188 FD E1            pop iy
 902+ 918A DD E1            pop ix
 903+ 918C E1               pop hl
 904+ 918D ED 7B 07 8A      ld sp,(Stack)
 905+ 9191 3A F5 89         ld a,(Ctrl_1)
 906+ 9194 CB C7            set 0,a
 907+ 9196 32 F5 89         ld (Ctrl_1),a
 908+ 9199 CD A0 7F         call Guarda_foto_registros
 909+ 919C 3A F5 89         ld a,(Ctrl_1)
 910+ 919F CB 87            res 0,a
 911+ 91A1 32 F5 89         ld (Ctrl_1),a
 912+ 91A4 E1               pop hl
 913+ 91A5 C9               ret
 914+ 91A6
 915+ 91A6 E5           Mueve_disparo push hl
 916+ 91A7 7E               ld a,(hl)
 917+ 91A8 06 04            ld b,4
 918+ 91AA 23           1 inc hl
 919+ 91AB 10 FD            djnz 1B
 920+ 91AD
 921+ 91AD              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 91AD
 923+ 91AD CD 2C 8D         call Extrae_address
 924+ 91B0
 925+ 91B0 E6 01            and 1
 926+ 91B2 28 2E            jr z,2F
 927+ 91B4
 928+ 91B4              ; Disparo hacia arriba, (Amadeus).
 929+ 91B4
 930+ 91B4              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 91B4              ; _ de la dificultad.
 932+ 91B4
 933+ 91B4 CD 2D 96         call PreviousScan
 934+ 91B7 CD 2D 96         call PreviousScan
 935+ 91BA CD 2D 96         call PreviousScan
 936+ 91BD CD 2D 96         call PreviousScan
 937+ 91C0
 938+ 91C0              ; Detecta si el disparo de Amadeus sale de pantalla:
 939+ 91C0
 940+ 91C0 7C               ld a,h
 941+ 91C1 FE 40            cp $40
 942+ 91C3 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 943+ 91C5
 944+ 91C5              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 945+ 91C5
 946+ 91C5 EB               ex de,hl
 947+ 91C6 06 04            ld b,4
 948+ 91C8 2B           6 dec hl
 949+ 91C9 10 FD            djnz 6B
 950+ 91CB
 951+ 91CB CD FC 91         call Elimina_disparo_de_base_de_datos
 952+ 91CE E1               pop hl
 953+ 91CF 18 10            jr 7F
 954+ 91D1
 955+ 91D1              ; Se ha desplazado la bala, compruebo colisión.
 956+ 91D1
 957+ 91D1 D5           3 push de
 958+ 91D2 C5               push bc
 959+ 91D3
 960+ 91D3 CD B3 8F         call Comprueba_Colision
 961+ 91D6
 962+ 91D6              ; B="$80", no hay colisión. B="$81", existe colisión.
 963+ 91D6
 964+ 91D6 78               ld a,b
 965+ 91D7
 966+ 91D7 C1               pop bc
 967+ 91D8 D1               pop de
 968+ 91D9
 969+ 91D9 EB               ex de,hl
 970+ 91DA
 971+ 91DA 73               ld (hl),e
 972+ 91DB 23               inc hl
 973+ 91DC 72               ld (hl),d
 974+ 91DD
 975+ 91DD E1           4 pop hl
 976+ 91DE 23               inc hl
 977+ 91DF 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 978+ 91E0 2B               dec hl
 979+ 91E1 C9           7 ret
 980+ 91E2
 981+ 91E2              ; Disparo hacia abajo, (Entidad).
 982+ 91E2
 983+ 91E2              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 984+ 91E2              ;! _ de la dificultad.
 985+ 91E2
 986+ 91E2 CD 1E 96     2 call NextScan
 987+ 91E5 CD 1E 96         call NextScan
 988+ 91E8 CD 1E 96         call NextScan
 989+ 91EB              ;    call NextScan
 990+ 91EB
 991+ 91EB              ; Detecta si el disparo de la entidad sale de la pantalla.
 992+ 91EB
 993+ 91EB 7C               ld a,h
 994+ 91EC FE 58            cp $58
 995+ 91EE 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 996+ 91F0
 997+ 91F0 EB               ex de,hl
 998+ 91F1 06 04            ld b,4
 999+ 91F3 2B           5 dec hl
1000+ 91F4 10 FD            djnz 5B
1001+ 91F6
1002+ 91F6 CD FC 91         call Elimina_disparo_de_base_de_datos
1003+ 91F9 E1               pop hl
1004+ 91FA 18 E5            jr 7B
1005+ 91FC
1006+ 91FC              ; HL apunta al primer byte de la base de datos del disparo.
1007+ 91FC
1008+ 91FC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1009+ 91FF AF               xor a
1010+ 9200 77               ld (hl),a
1011+ 9201 54               ld d,h
1012+ 9202 5D               ld e,l
1013+ 9203 13               inc de
1014+ 9204 ED B0            ldir
1015+ 9206 C9               ret
1016+ 9207
1017+ 9207              ; -----------------------------------------------------------------
1018+ 9207              ;
1019+ 9207              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1020+ 9207              ;
1021+ 9207              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1022+ 9207              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1023+ 9207              ;
1024+ 9207              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1025+ 9207              ;
1026+ 9207              ;   INPUTS:
1027+ 9207              ;
1028+ 9207              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1029+ 9207              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1030+ 9207              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1031+ 9207
1032+ 9207              ;   MODIFICA: A, HL, DE y C
1033+ 9207
1034+ 9207 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1035+ 9208 79               ld a,c
1036+ 9209 E6 01            and 1
1037+ 920B 20 03            jr nz,1F
1038+ 920D 14               inc d
1039+ 920E 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1040+ 9210
1041+ 9210              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1042+ 9210              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1043+ 9210
1044+ 9210 15           1 dec d
1045+ 9211 23           2 inc hl
1046+ 9212 72               ld (hl),d
1047+ 9213
1048+ 9213 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1049+ 9214 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1050+ 9215 C8               ret z
1051+ 9216
1052+ 9216 AF               xor a
1053+ 9217 5F               ld e,a
1054+ 9218 18 ED            jr Guarda_coordenadas_X
1055+ 921A
1056+ 921A              ; -----------------------------------------------------------------
1057+ 921A              ;
1058+ 921A              ;   12/04/23
1059+ 921A              ;
1060+ 921A
1061+ 921A 3A 14 8A     Selector_de_impactos ld a,(Impacto2)
1062+ 921D A7               and a
1063+ 921E C8               ret z
1064+ 921F
1065+ 921F FE 04            cp 4
1066+ 9221 20 09            jr nz,1F
1067+ 9223
1068+ 9223
1069+ 9223              ; La colisión se produce por contacto entre Amadeus y una entidad.
1070+ 9223
1071+ 9223 CD 44 90         call Detecta_colision_nave_entidad
1072+ 9226
1073+ 9226 21 14 8A         ld hl,Impacto2
1074+ 9229 CB 5E            bit 3,(hl)
1075+ 922B C0               ret nz                                               ; Existe colisión, RET.
1076+ 922C
1077+ 922C              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1078+ 922C              ; Primero analizamos si algún disparo impacta en Amadeus.
1079+ 922C
1080+ 922C 21 14 8A     1 ld hl,Impacto2
1081+ 922F CB 4E            bit 1,(hl)
1082+ 9231 28 07            jr z,2F
1083+ 9233
1084+ 9233 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1085+ 9236 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1086+ 9238 18 0B            jr 3F
1087+ 923A
1088+ 923A 21 14 8A     2 ld hl,Impacto2
1089+ 923D CB 46            bit 0,(hl)
1090+ 923F C8               ret z
1091+ 9240
1092+ 9240              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1093+ 9240
1094+ 9240 21 F5 89         ld hl,Ctrl_1
1095+ 9243 CB D6            set 2,(hl)
1096+ 9245
1097+ 9245 C9           3 ret
1098+ 9246
1099+ 9246              ; -----------------------------------------------------------------
1100+ 9246              ;
1101+ 9246              ;   16/04/23
1102+ 9246              ;
1103+ 9246
1104+ 9246 AF           Limpia_Coordenadas_X xor a
1105+ 9247 06 06            ld b,6
1106+ 9249 21 19 8A         ld hl,Coordenadas_X_Amadeus
1107+ 924C 77           1 ld (hl),a
1108+ 924D 23               inc hl
1109+ 924E 10 FC            djnz 1B
1110+ 9250 C9               ret
1111+ 9251
1112+ 9251              ; -----------------------------------------------------------------
1113+ 9251              ;
1114+ 9251              ;   25/04/23
1115+ 9251              ;
1116+ 9251
1117+ 9251              Determina_resultado_comparativa
1118+ 9251
1119+ 9251              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1120+ 9251              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1121+ 9251              ;
1122+ 9251              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1123+ 9251              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1124+ 9251              ;
1125+ 9251              ;   SBC HL,DE
1126+ 9251
1127+ 9251              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1128+ 9251              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1129+ 9251
1130+ 9251              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1131+ 9251              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1132+ 9251
1133+ 9251
1134+ 9251 3A CB 89         ld a,(Cuad_objeto)
1135+ 9254 FE 02            cp 2
1136+ 9256 28 26            jr z,2F
1137+ 9258 38 24            jr c,2F
1138+ 925A
1139+ 925A              ; Cuadrantes 3º y 4º
1140+ 925A
1141+ 925A E6 01            and 1
1142+ 925C 28 10            jr z,4F
1143+ 925E
1144+ 925E              ; Cuadrante 3º
1145+ 925E
1146+ 925E 7C               ld a,h
1147+ 925F 06 00            ld b,0
1148+ 9261
1149+ 9261 CD EC 92         call Compara_cositas_H3
1150+ 9264
1151+ 9264 04               inc b
1152+ 9265 05               dec b
1153+ 9266 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1154+ 9267
1155+ 9267 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1156+ 9268 06 00            ld b,0
1157+ 926A
1158+ 926A CD FE 92         call Compara_cositas_L3
1159+ 926D C9               ret
1160+ 926E
1161+ 926E              ; Cuadrante 4º
1162+ 926E
1163+ 926E 7C           4 ld a,h
1164+ 926F 06 00            ld b,0
1165+ 9271
1166+ 9271 CD 10 93         call Compara_cositas_H4
1167+ 9274
1168+ 9274 04               inc b
1169+ 9275 05               dec b
1170+ 9276 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1171+ 9277
1172+ 9277 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1173+ 9278 06 00            ld b,0
1174+ 927A
1175+ 927A CD 26 93         call Compara_cositas_L4
1176+ 927D C9               ret
1177+ 927E
1178+ 927E              ; Cuadrantes 1º y 2º.
1179+ 927E
1180+ 927E 28 10        2 jr z,3F
1181+ 9280
1182+ 9280              ; 1er Cuadrante
1183+ 9280
1184+ 9280 7C               ld a,h
1185+ 9281 06 00            ld b,0
1186+ 9283
1187+ 9283 CD C4 92         call Compara_cositas_H1
1188+ 9286
1189+ 9286 04               inc b
1190+ 9287 05               dec b
1191+ 9288 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1192+ 9289
1193+ 9289 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1194+ 928A 06 00            ld b,0
1195+ 928C
1196+ 928C CD DA 92         call Compara_cositas_L1
1197+ 928F C9               ret
1198+ 9290
1199+ 9290
1200+ 9290              ; 2º Cuadrante
1201+ 9290
1202+ 9290 7C           3 ld a,h
1203+ 9291 06 00            ld b,0
1204+ 9293
1205+ 9293 CD A0 92         call Compara_cositas_H2
1206+ 9296
1207+ 9296 04               inc b
1208+ 9297 05               dec b
1209+ 9298 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1210+ 9299
1211+ 9299 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1212+ 929A 06 00            ld b,0
1213+ 929C
1214+ 929C CD B2 92         call Compara_cositas_L2
1215+ 929F C9               ret
1216+ 92A0
1217+ 92A0 A7           Compara_cositas_H2 and a
1218+ 92A1 28 0D            jr z,1F
1219+ 92A3              ;    cp $fd
1220+ 92A3              ;    jr z,1F
1221+ 92A3              ;    cp $fe
1222+ 92A3              ;    jr z,1F
1223+ 92A3 FE FF            cp $ff
1224+ 92A5 28 09            jr z,1F
1225+ 92A7 FE 01            cp $01
1226+ 92A9 28 05            jr z,1F
1227+ 92AB FE 02            cp $02
1228+ 92AD 28 01            jr z,1F
1229+ 92AF C0               ret nz
1230+ 92B0 04           1 inc b
1231+ 92B1 C9               ret
1232+ 92B2
1233+ 92B2 A7           Compara_cositas_L2 and a
1234+ 92B3 28 0D            jr z,1F
1235+ 92B5              ;    cp $fd
1236+ 92B5              ;    jr z,1F
1237+ 92B5 FE FE            cp $fe
1238+ 92B7 28 09            jr z,1F
1239+ 92B9 FE FF            cp $ff
1240+ 92BB 28 05            jr z,1F
1241+ 92BD FE 01            cp $01
1242+ 92BF 28 01            jr z,1F
1243+ 92C1              ;    cp $02
1244+ 92C1              ;    jr z,1F
1245+ 92C1 C0               ret nz
1246+ 92C2 04           1 inc b
1247+ 92C3 C9               ret
1248+ 92C4
1249+ 92C4 A7           Compara_cositas_H1 and a
1250+ 92C5 28 11            jr z,1F
1251+ 92C7              ;    cp $fd
1252+ 92C7              ;    jr z,1F
1253+ 92C7              ;    cp $fe
1254+ 92C7              ;    jr z,1F
1255+ 92C7 FE FF            cp $ff
1256+ 92C9 28 0D            jr z,1F
1257+ 92CB FE 01            cp $01
1258+ 92CD 28 09            jr z,1F
1259+ 92CF FE 02            cp $02
1260+ 92D1 28 05            jr z,1F
1261+ 92D3 FE 03            cp $03
1262+ 92D5 28 01            jr z,1F
1263+ 92D7 C0               ret nz
1264+ 92D8 04           1 inc b
1265+ 92D9 C9               ret
1266+ 92DA
1267+ 92DA A7           Compara_cositas_L1 and a
1268+ 92DB 28 0D            jr z,1F
1269+ 92DD              ;    cp $fd
1270+ 92DD              ;    jr z,1F
1271+ 92DD              ;    cp $fe
1272+ 92DD              ;    jr z,1F
1273+ 92DD              ;    cp $ff
1274+ 92DD              ;    jr z,1F
1275+ 92DD FE 01            cp $01
1276+ 92DF 28 09            jr z,1F
1277+ 92E1 FE 02            cp $02
1278+ 92E3 28 05            jr z,1F
1279+ 92E5 FE 03            cp $03
1280+ 92E7 28 01            jr z,1F
1281+ 92E9 C0               ret nz
1282+ 92EA 04           1 inc b
1283+ 92EB C9               ret
1284+ 92EC
1285+ 92EC A7           Compara_cositas_H3 and a
1286+ 92ED 28 0D            jr z,1F
1287+ 92EF              ;    cp $fd
1288+ 92EF              ;    jr z,1F
1289+ 92EF FE FE            cp $fe
1290+ 92F1 28 09            jr z,1F
1291+ 92F3 FE FF            cp $ff
1292+ 92F5 28 05            jr z,1F
1293+ 92F7 FE 01            cp $01
1294+ 92F9 28 01            jr z,1F
1295+ 92FB              ;    cp $02
1296+ 92FB              ;    jr z,1F
1297+ 92FB              ;    cp $03
1298+ 92FB              ;    jr z,1F
1299+ 92FB C0               ret nz
1300+ 92FC 04           1 inc b
1301+ 92FD C9               ret
1302+ 92FE
1303+ 92FE A7           Compara_cositas_L3 and a
1304+ 92FF 28 0D            jr z,1F
1305+ 9301              ;    cp $fd
1306+ 9301              ;    jr z,1F
1307+ 9301              ;    cp $fe
1308+ 9301              ;    jr z,1F
1309+ 9301              ;    cp $ff
1310+ 9301              ;    jr z,1F
1311+ 9301 FE 01            cp $01
1312+ 9303 28 09            jr z,1F
1313+ 9305 FE 02            cp $02
1314+ 9307 28 05            jr z,1F
1315+ 9309 FE 03            cp $03
1316+ 930B 28 01            jr z,1F
1317+ 930D C0               ret nz
1318+ 930E 04           1 inc b
1319+ 930F C9               ret
1320+ 9310
1321+ 9310 A7           Compara_cositas_H4 and a
1322+ 9311 28 11            jr z,1F
1323+ 9313 FE FD            cp $fd
1324+ 9315 28 0D            jr z,1F
1325+ 9317 FE FE            cp $fe
1326+ 9319 28 09            jr z,1F
1327+ 931B FE FF            cp $ff
1328+ 931D 28 05            jr z,1F
1329+ 931F FE 01            cp $01
1330+ 9321 28 01            jr z,1F
1331+ 9323              ;    cp $02
1332+ 9323              ;    jr z,1F
1333+ 9323              ;    cp $03
1334+ 9323              ;    jr z,1F
1335+ 9323 C0               ret nz
1336+ 9324 04           1 inc b
1337+ 9325 C9               ret
1338+ 9326
1339+ 9326 A7           Compara_cositas_L4 and a
1340+ 9327 28 0D            jr z,1F
1341+ 9329              ;    cp $fd
1342+ 9329              ;    jr z,1F
1343+ 9329 FE FE            cp $fe
1344+ 932B 28 09            jr z,1F
1345+ 932D FE FF            cp $ff
1346+ 932F 28 05            jr z,1F
1347+ 9331 FE 01            cp $01
1348+ 9333 28 01            jr z,1F
1349+ 9335              ;    cp $02
1350+ 9335              ;    jr z,1F
1351+ 9335              ;    cp $03
1352+ 9335              ;    jr z,1F
1353+ 9335 C0               ret nz
1354+ 9336 04           1 inc b
1355+ 9337 C9               ret
# file closed: Disparo.asm
1241  9338              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9338              ; ******************************************************************************************************************************************************************************************
   2+ 9338              ;
   3+ 9338              ; 01/23
   4+ 9338              ;
   5+ 9338              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9338
   7+ 9338 CD 12 96     Draw call Prepara_draw
   8+ 933B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 933C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 933D 28 05        	jr z,2F
  11+ 933F
  12+ 933F 3A CB 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9342 18 0C        	jr 1F
  14+ 9344 2A C9 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9347 22 B9 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 934A CD D9 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 934D              ;													; _la esquina superior izquierda de la pantalla.
  18+ 934D CD 98 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9350 3A E5 89     1 ld a,(Ctrl_0)
  20+ 9353 CB 6F        	bit 5,a
  21+ 9355 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9357
  23+ 9357 CD 6F 93     	call Comprueba_limite_horizontal
  24+ 935A CD FF 93     	call Comprueba_limite_vertical
  25+ 935D
  26+ 935D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 935D
  28+ 935D CD 4C 95     3 call calcula_CColumnass
  29+ 9360 CD 83 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9363 CD D8 95     	call Define_rutina_de_impresion
  31+ 9366
  32+ 9366 3A E5 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9369 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 936B 32 E5 89     	ld (Ctrl_0),a
  35+ 936E
  36+ 936E C9           	ret
  37+ 936F
  38+ 936F              ; *******************************************************************************************************************************************************************************************
  39+ 936F              ;	21/01/23
  40+ 936F              ;
  41+ 936F              ; 	Comprueba_limite_horizontal.
  42+ 936F              ;
  43+ 936F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 936F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 936F              ;
  46+ 936F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 936F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 936F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 936F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 936F
  51+ 936F
  52+ 936F
  53+ 936F 3A E5 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9372 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9374 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9376 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9378 32 E5 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 937B 18 09            jr 6F
  59+ 937D CB 5F        1 bit 3,a
  60+ 937F 28 0A            jr z,2F
  61+ 9381 E6 F7            and $f7
  62+ 9383 32 E5 89         ld (Ctrl_0),a
  63+ 9386 CD D9 94     6 call Inicializacion
  64+ 9389 18 5B            jr 5F
  65+ 938B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 938C
  67+ 938C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 938C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 938C
  70+ 938C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 938D 2A F0 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9390 CD DE 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9393 67           	ld h,a
  74+ 9394 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9395 CD DE 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9398 67           	ld h,a
  77+ 9399 A7           	and a
  78+ 939A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 939C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 939D 3A CB 89     	ld a,(Cuad_objeto)
  81+ 93A0 FE 02        	cp 2
  82+ 93A2 38 1E        	jr c,3F
  83+ 93A4 28 1C        	jr z,3F
  84+ 93A6 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 93A7 28 23            jr z,7F
  86+ 93A9 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 93AB 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 93AD E1           	pop hl
  89+ 93AE
  90+ 93AE              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 93AE              ; _para indicar con E="2" en caso necesario.
  92+ 93AE
  93+ 93AE E5               push hl
  94+ 93AF C5               push bc
  95+ 93B0 CD DE 98     	call calcula_tercio
  96+ 93B3 FE 01        	cp 1
  97+ 93B5 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93B7 CD E7 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93BA 28 26            jr z,9F
 100+ 93BC 38 24            jr c,9F
 101+ 93BE 1E 00        11 ld e,0
 102+ 93C0 18 22            jr 8F
 103+ 93C2 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93C3 28 07        	jr z, 7F
 105+ 93C5 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93C7 1E 00         	ld e,0
 107+ 93C9 E1           	pop hl
 108+ 93CA 18 04        	jr 4F
 109+ 93CC 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93CE 18 15            jr 10F
 111+ 93D0
 112+ 93D0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93D0              ; _para indicar con E="2" en caso necesario.
 114+ 93D0
 115+ 93D0 E5           4 push hl
 116+ 93D1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93D2 CD DE 98     	call calcula_tercio
 118+ 93D5 FE 01        	cp 1
 119+ 93D7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93D9 CD E7 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93DC 28 04            jr z,9F
 122+ 93DE 30 02            jr nc,9F
 123+ 93E0 18 02        	jr 8F
 124+ 93E2 1E 02        9 ld e,2
 125+ 93E4 C1           8 pop bc
 126+ 93E5 E1           10 pop hl
 127+ 93E6 C9           5 ret
 128+ 93E7
 129+ 93E7              ; --------------------
 130+ 93E7              ;
 131+ 93E7              ; 25/08/22
 132+ 93E7
 133+ 93E7 CD DE 98     Comprueba_centro call calcula_tercio
 134+ 93EA 67               ld h,a
 135+ 93EB 08           	ex af,af
 136+ 93EC FE 02        	cp 2
 137+ 93EE 38 07        	jr c,1F
 138+ 93F0 28 05        	jr z,1F
 139+ 93F2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93F5 18 03        	jr 2F
 141+ 93F7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93FA 08           2 ex af,af
 143+ 93FB A7               and a
 144+ 93FC ED 42            sbc hl,bc
 145+ 93FE C9               ret
 146+ 93FF
 147+ 93FF              ; *********************************************************************************************************************************************************************************************
 148+ 93FF              ;
 149+ 93FF              ;   16/8/22
 150+ 93FF              ;
 151+ 93FF              ;	Comprueba_limite_vertical
 152+ 93FF              ;
 153+ 93FF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93FF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93FF              ;
 156+ 93FF
 157+ 93FF 2A B9 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9402 7D           	ld a,l
 159+ 9403 E6 1F        	and $1F
 160+ 9405 57           	ld d,a
 161+ 9406 3A F2 89     	ld a,(Limite_vertical)
 162+ 9409 BA           	cp d 											; Límite - Posición.
 163+ 940A 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 940B 3A CB 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 940E CB 47        	bit 0,a
 166+ 9410 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9412
 168+ 9412              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9412
 170+ 9412 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9413 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9415
 173+ 9415              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9415              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9415
 176+ 9415 3A BD 89         ld a,(Coordenada_X)
 177+ 9418 16 0F            ld d,Centro_izquierda
 178+ 941A A7               and a
 179+ 941B 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 941C 28 1E            jr z,3F
 181+ 941E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9420              ;                                                    ; _salimos sin modificar nada.
 183+ 9420 18 0E            jr 2F
 184+ 9422 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9423 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9425
 187+ 9425              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9425              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9425
 190+ 9425 3A BD 89         ld a,(Coordenada_X)
 191+ 9428 16 10            ld d,Centro_derecha
 192+ 942A A7               and a
 193+ 942B 92               sub d
 194+ 942C 28 0E            jr z,3F
 195+ 942E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9430              ;                                                    ; _salimos sin modificar nada.
 197+ 9430 CB 43        2 bit 0,e
 198+ 9432 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9434 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9435 CD C9 94         call Modificaccionne
 201+ 9438 C1           	pop bc
 202+ 9439 CD D9 94         call Inicializacion
 203+ 943C C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 943D
 205+ 943D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 943D
 207+ 943D C5           4 push bc
 208+ 943E 01 B8 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9441 0A           	ld a,(bc)
 210+ 9442 3D           	dec a
 211+ 9443 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9444 7D           	ld a,l
 213+ 9445 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9446 CB 47        	bit 0,a
 215+ 9448 28 03        	jr z,5F
 216+ 944A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 944B 18 2E        	jr 7F
 218+ 944D
 219+ 944D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 944D
 221+ 944D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 944E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 944F 3A E5 89     	ld a,(Ctrl_0)
 224+ 9452 CB 4F        	bit 1,a
 225+ 9454 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9456 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9457
 228+ 9457              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9457
 230+ 9457 1C               inc e
 231+ 9458 1D               dec e
 232+ 9459 20 07            jr nz,12F
 233+ 945B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 945C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 945D 22 B9 89     	ld (Posicion_actual),hl
 236+ 9460 18 44        13 jr 9F
 237+ 9462 CB 43        12 bit 0,e
 238+ 9464 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9466              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9466 C1           	pop bc
 241+ 9467 18 D3        	jr 3B
 242+ 9469 80           14 add b
 243+ 946A 6F               ld l,a
 244+ 946B 22 B9 89     	ld (Posicion_actual),hl
 245+ 946E CD C9 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9471 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9473 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9475 32 E5 89         ld (Ctrl_0),a
 249+ 9478 F1           	pop af
 250+ 9479 18 2B        	jr 9F
 251+ 947B
 252+ 947B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 947B
 254+ 947B F5           7 push af
 255+ 947C 3A E5 89     	ld a,(Ctrl_0)
 256+ 947F CB 47        	bit 0,a
 257+ 9481 20 1D        	jr nz,8F
 258+ 9483 F1           	pop af
 259+ 9484
 260+ 9484              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9484
 262+ 9484 1C           	inc e
 263+ 9485 1D               dec e
 264+ 9486 20 07            jr nz,10F
 265+ 9488 90           	sub b
 266+ 9489 6F               ld l,a
 267+ 948A 22 B9 89     	ld (Posicion_actual),hl
 268+ 948D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 948F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 948F CB 43        10 bit 0,e
 271+ 9491 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9493              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9493 C1           	pop bc
 274+ 9494 18 A6        	jr 3B
 275+ 9496 90           16 sub b
 276+ 9497 6F               ld l,a
 277+ 9498 22 B9 89     	ld (Posicion_actual),hl
 278+ 949B CD C9 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 949E 18 06            jr 9F
 280+ 94A0 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 94A2 32 E5 89         ld (Ctrl_0),a
 282+ 94A5 F1           	pop af
 283+ 94A6 C1           9 pop bc
 284+ 94A7 1E 00        	ld e,0
 285+ 94A9 CD D9 94         call Inicializacion
 286+ 94AC F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 94AD 08           	ex af,af
 288+ 94AE F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 94AF 18 8B            jr 3B
 290+ 94B1
 291+ 94B1              ; --------------------
 292+ 94B1
 293+ 94B1 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 94B3 CD 2D 96     1 call PreviousScan
 295+ 94B6 10 FB            djnz 1B
 296+ 94B8 22 B9 89     	ld (Posicion_actual),hl
 297+ 94BB AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94BC C9           	ret
 299+ 94BD
 300+ 94BD              ; --------------------
 301+ 94BD
 302+ 94BD 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94BF CD 1E 96     1 call NextScan
 304+ 94C2 10 FB            djnz 1B
 305+ 94C4 22 B9 89     	ld (Posicion_actual),hl
 306+ 94C7 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94C8 C9           	ret
 308+ 94C9
 309+ 94C9              ; --------------------
 310+ 94C9              ;
 311+ 94C9              ;	22/01/23
 312+ 94C9              ;
 313+ 94C9              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94C9              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94C9              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94C9
 317+ 94C9
 318+ 94C9              Modificaccionne
 319+ 94C9
 320+ 94C9 3A CB 89     	ld a,(Cuad_objeto)
 321+ 94CC FE 02        	cp 2
 322+ 94CE CC B1 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94D1 DC B1 94         call c,Modifica_Pos_actual
 324+ 94D4 C8           	ret z
 325+ 94D5 CD BD 94         call Modifica_Pos_actual2
 326+ 94D8 C9               ret
 327+ 94D9
 328+ 94D9              ; *************************************************************************************************************************************************************************************************
 329+ 94D9              ;
 330+ 94D9              ;	13/8/22
 331+ 94D9              ;
 332+ 94D9              ;	Inicializacion
 333+ 94D9              ;
 334+ 94D9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94D9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94D9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94D9              ;
 338+ 94D9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94D9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94D9              ;	_ desaparece/aparece.
 341+ 94D9
 342+ 94D9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94D9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94D9              ;
 345+ 94D9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94D9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94D9              ; 		   [E] ="0"
 348+ 94D9
 349+ 94D9              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94D9
 351+ 94D9 CD DE 98     Inicializacion call calcula_tercio
 352+ 94DC 28 36        	jr z,primit
 353+ 94DE E6 02        	and 2
 354+ 94E0 20 07        	jr nz,segmit
 355+ 94E2 7D           	ld a,l
 356+ 94E3 FE 7F        	cp $7f
 357+ 94E5 38 2D        	jr c,primit
 358+ 94E7 28 2B        	jr z,primit
 359+ 94E9 CD 46 95     segmit call column
 360+ 94EC 38 13        	jr c,tercuad
 361+ 94EE 3E 04        cuarcuad ld a,4
 362+ 94F0 32 CB 89     	ld (Cuad_objeto),a
 363+ 94F3 21 20 48     	ld hl,$4820
 364+ 94F6 22 F0 89     	ld (Limite_horizontal),hl
 365+ 94F9 21 F2 89     	ld hl,Limite_vertical
 366+ 94FC 36 0D        	ld (hl),$0d
 367+ 94FE 08           	ex af,af
 368+ 94FF 18 3C        	jr 1F
 369+ 9501              tercuad
 370+ 9501 3E 03        	ld a,3
 371+ 9503 32 CB 89     	ld (Cuad_objeto),a
 372+ 9506 21 20 48     	ld hl,$4820
 373+ 9509 22 F0 89     	ld (Limite_horizontal),hl
 374+ 950C 21 F2 89     	ld hl,Limite_vertical
 375+ 950F 36 12        	ld (hl),$12
 376+ 9511 08           	ex af,af
 377+ 9512 18 29        	jr 1F
 378+ 9514 CD 46 95     primit call column
 379+ 9517 38 13        	jr c, primcuad
 380+ 9519              segcuad
 381+ 9519 3E 02        	ld a,2
 382+ 951B 32 CB 89     	ld (Cuad_objeto),a
 383+ 951E 21 C0 4F     	ld hl,$4fc0
 384+ 9521 22 F0 89     	ld (Limite_horizontal),hl
 385+ 9524 21 F2 89     	ld hl,Limite_vertical
 386+ 9527 36 0D        	ld (hl),$0d
 387+ 9529 08           	ex af,af
 388+ 952A 18 11        	jr 1F
 389+ 952C              primcuad
 390+ 952C 3E 01        	ld a,1
 391+ 952E 32 CB 89     	ld (Cuad_objeto),a
 392+ 9531 21 C0 4F     	ld hl,$4fc0
 393+ 9534 22 F0 89     	ld (Limite_horizontal),hl
 394+ 9537 21 F2 89     	ld hl,Limite_vertical
 395+ 953A 36 12        	ld (hl),$12
 396+ 953C 08           	ex af,af
 397+ 953D CD 4A 9C     1 call Genera_coordenadas
 398+ 9540 21 E5 89     	ld hl,Ctrl_0
 399+ 9543 CB EE        	set 5,(hl)
 400+ 9545 C9           	ret
 401+ 9546
 402+ 9546              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9546
 404+ 9546              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9546              ;
 406+ 9546              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9546
 408+ 9546 7D           column ld a,l
 409+ 9547 E6 1F        	and $1f
 410+ 9549 FE 10         	cp $10
 411+ 954B C9            	ret
 412+ 954C
 413+ 954C              ; --------------------------------------------------------------------------------------------------------------------
 414+ 954C              ;
 415+ 954C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 954C              ;
 417+ 954C              ; 14/12/22
 418+ 954C              ;
 419+ 954C              ;	Modifica: A y BC.
 420+ 954C
 421+ 954C 3A CB 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 954F E6 01        	and 1
 423+ 9551 28 17        	jr z,1F
 424+ 9553
 425+ 9553              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9553
 427+ 9553 3A BD 89     	ld a,(Coordenada_X)
 428+ 9556 47           	ld b,a
 429+ 9557 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9558 79           	ld a,c
 431+ 9559 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 955A 38 08        	jr c,2F
 433+ 955C 47           	ld b,a
 434+ 955D 79           	ld a,c
 435+ 955E 90           	sub b
 436+ 955F 32 EF 89     	ld (Columnas),a
 437+ 9562 18 1B        	jr 4F
 438+ 9564 79           2 ld a,c
 439+ 9565 32 EF 89     	ld (Columnas),a
 440+ 9568 18 15        	jr 4F
 441+ 956A
 442+ 956A              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 956A
 444+ 956A 3A BD 89     1 ld a,(Coordenada_X)
 445+ 956D 81           	add c
 446+ 956E 3D           	dec a
 447+ 956F D6 1F        	sub $1f
 448+ 9571 38 08        	jr c,3F
 449+ 9573 47           	ld b,a
 450+ 9574 79           	ld a,c
 451+ 9575 90           	sub b
 452+ 9576 32 EF 89     	ld (Columnas),a
 453+ 9579 18 04        	jr 4F
 454+ 957B 79           3 ld a,c
 455+ 957C 32 EF 89     	ld (Columnas),a
 456+ 957F D9           4 exx
 457+ 9580 4F           	ld c,a
 458+ 9581 D9           	exx
 459+ 9582 C9            ret
 460+ 9583
 461+ 9583              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9583              ;
 463+ 9583              ; 7/1/23
 464+ 9583              ;
 465+ 9583              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9583              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9583              ;
 468+ 9583              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9583              ;	DESTRUYE: HL,B Y A.
 470+ 9583
 471+ 9583 3A CB 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9586 FE 02        	cp 2
 473+ 9588 38 18        	jr c,1F
 474+ 958A 28 16        	jr z,1F
 475+ 958C E6 01        	and 1
 476+ 958E 28 0D        	jr z,3F
 477+ 9590
 478+ 9590              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9590
 480+ 9590 CD CC 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9593
 482+ 9593 7D           9 ld a,l
 483+ 9594 E6 1F        	and $1f
 484+ 9596 28 2A        	jr z,7F
 485+ 9598 2B           	dec hl
 486+ 9599 10 F8        	djnz 9B
 487+ 959B 18 25        	jr 7F
 488+ 959D
 489+ 959D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 959D
 491+ 959D 2A B9 89     3 ld hl,(Posicion_actual)
 492+ 95A0 18 20        	jr 7F
 493+ 95A2
 494+ 95A2 28 14        1 jr z,2F
 495+ 95A4
 496+ 95A4              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 95A4
 498+ 95A4 CD CC 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 95A7
 500+ 95A7 7D           4 ld a,l
 501+ 95A8 E6 1F        	and $1f
 502+ 95AA 28 03        	jr z,6F
 503+ 95AC 2B           	dec hl
 504+ 95AD 10 F8        	djnz 4B
 505+ 95AF 06 0F        6 ld b,15
 506+ 95B1 CD 2D 96     5 call PreviousScan
 507+ 95B4 10 FB        	djnz 5B
 508+ 95B6 18 0A        	jr 7F
 509+ 95B8
 510+ 95B8              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 95B8
 512+ 95B8 CD CC 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 95BB 06 0F        	ld b,15
 514+ 95BD CD 2D 96     8 call PreviousScan
 515+ 95C0 10 FB        	djnz 8B
 516+ 95C2
 517+ 95C2 E5           7 push hl
 518+ 95C3 DD E1        	pop ix
 519+ 95C5
 520+ 95C5 2A BB 89     	ld hl,(Puntero_objeto)
 521+ 95C8 E5           	push hl
 522+ 95C9 FD E1        	pop iy
 523+ 95CB
 524+ 95CB C9           	ret
 525+ 95CC
 526+ 95CC              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95CC              ;
 528+ 95CC              ;	2/1/23
 529+ 95CC              ;
 530+ 95CC              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95CC              ;
 532+ 95CC              ;	Tras esta rutina tenemos:
 533+ 95CC              ;
 534+ 95CC              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95CC              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95CC              ;
 537+ 95CC              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95CC
 539+ 95CC 2A B9 89     Operandos ld hl,(Posicion_actual)
 540+ 95CF 3A EF 89     	ld a,(Columnas)
 541+ 95D2 3D           	dec a
 542+ 95D3 20 01        	jr nz,1F
 543+ 95D5 3C           	inc a
 544+ 95D6 47           1 ld b,a
 545+ 95D7 C9           	ret
 546+ 95D8
 547+ 95D8              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95D8              ;
 549+ 95D8              ;	3/1/23
 550+ 95D8              ;
 551+ 95D8              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95D8              ;
 553+ 95D8              ;	Destruye: A,B,HL y DE.
 554+ 95D8
 555+ 95D8              Define_rutina_de_impresion
 556+ 95D8
 557+ 95D8 3A B8 89     	ld a,(Columns)
 558+ 95DB 47           	ld b,a
 559+ 95DC 3A EF 89     	ld a,(Columnas)
 560+ 95DF B8           	cp b
 561+ 95E0 20 0D        	jr nz,2f
 562+ 95E2
 563+ 95E2              ;	La entidad se imprime entera.
 564+ 95E2
 565+ 95E2 21 AE 96     	ld hl, Indice_entidades_completas
 566+ 95E5 E6 01        	and 1
 567+ 95E7 28 02        	jr z,1F
 568+ 95E9
 569+ 95E9 23           	inc hl
 570+ 95EA 23           	inc hl
 571+ 95EB
 572+ 95EB CD 2C 8D     1 call Extrae_address
 573+ 95EE C9           	ret		;	ret
 574+ 95EF
 575+ 95EF              ;	La entidad no se imprime entera en pantalla.
 576+ 95EF
 577+ 95EF 3A CB 89     2 ld a,(Cuad_objeto)
 578+ 95F2 E6 01        	and 1
 579+ 95F4 28 17        	jr z,3F
 580+ 95F6
 581+ 95F6              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95F6
 583+ 95F6 21 B2 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95F9 3A B8 89     4 ld a,(Columns)
 585+ 95FC E6 01        	and 1
 586+ 95FE 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 9600
 588+ 9600 23           	inc hl
 589+ 9601 23           	inc hl
 590+ 9602
 591+ 9602 3A EF 89     	ld a,(Columnas)
 592+ 9605 E6 01        	and 1
 593+ 9607 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 9609
 595+ 9609 23           	inc hl
 596+ 960A 23           	inc hl
 597+ 960B
 598+ 960B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 960D
 600+ 960D 21 B8 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 9610 18 E7        	jr 4B
 602+ 9612
 603+ 9612              ; --------------------------------------------------------------------------------------------------------------------
 604+ 9612              ;
 605+ 9612              ;	Prepara_draw
 606+ 9612              ;
 607+ 9612              ;	Es una rutina de carga.
 608+ 9612              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 9612              ;
 610+ 9612              ;	FUNCIONAMIENTO:
 611+ 9612              ;
 612+ 9612              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 9612              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 9612              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 9612              ;
 616+ 9612              ;	DESTRUYE:
 617+ 9612              ;
 618+ 9612              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 9612
 620+ 9612 21 B7 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 9615 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 9616 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 9617 4E           	ld c,(hl)
 624+ 9618 2A B9 89     	ld hl,(Posicion_actual)
 625+ 961B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 961D C9           	ret
 627+ 961E
 628+ 961E              ;----------------------------------------------------------------------------------------------------------------
 629+ 961E              ;
 630+ 961E              ;	5/08/22
 631+ 961E              ;
 632+ 961E              ;   NextScan.
 633+ 961E              ;
 634+ 961E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 961E              ;
 636+ 961E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 961E              ;
 638+ 961E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 961E              ;
 640+ 961E              ;       DESTRUIDOS: AF y HL !!!
 641+ 961E              ;
 642+ 961E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 961E              ;
 644+ 961E
 645+ 961E 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 961F 7C               ld a,h
 647+ 9620 E6 07            and 7
 648+ 9622 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 9623
 650+ 9623 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 9624 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 9626 6F               ld l,a
 653+ 9627 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9628
 655+ 9628 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9629 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 962B 67               ld h,a
 658+ 962C C9               ret
 659+ 962D
 660+ 962D              ;----------------------------------------------------------------------------------------------------------------
 661+ 962D              ;
 662+ 962D              ;	5/08/22
 663+ 962D              ;
 664+ 962D              ;   PreviousScan.
 665+ 962D              ;
 666+ 962D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 962D              ;
 668+ 962D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 962D              ;
 670+ 962D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 962D              ;
 672+ 962D              ;       DESTRUIDOS: AF y HL !!!
 673+ 962D              ;
 674+ 962D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 962D              ;
 676+ 962D
 677+ 962D 7C           PreviousScan ld a,h
 678+ 962E 25               dec h               ; Dec H.
 679+ 962F E6 07            and 7
 680+ 9631 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9632
 682+ 9632 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 9633 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9635 6F               ld l,a
 685+ 9636 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9637
 687+ 9637 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9638 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 963A 67               ld h,a
 690+ 963B C9               ret
 691+ 963C
 692+ 963C              ; -----------------------------------------------------------------------------------
 693+ 963C              ;
 694+ 963C              ;	28/2/23
 695+ 963C              ;
 696+ 963C              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 963C              ;	Extrae fotos de Album_de_fotos.
 698+ 963C
 699+ 963C 3A 02 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 963F A7           	and a
 701+ 9640 C8           	ret z
 702+ 9641 ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9645 31 00 70     	ld sp,Album_de_fotos
 704+ 9648
 705+ 9648 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 964A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 964B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 964C
 709+ 964C ED 73 09 8A  	ld (Stack_2),sp
 710+ 9650 ED 7B 07 8A  	ld sp,(Stack)
 711+ 9654
 712+ 9654              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9654
 714+ 9654 3E CD        	ld a,$cd
 715+ 9656 32 5E 96     	ld (Imprime),a
 716+ 9659 EB           	ex de,hl
 717+ 965A 22 5F 96     	ld (Imprime+1),hl
 718+ 965D EB           	ex de,hl
 719+ 965E
 720+ 965E              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 965E
 722+ 965E 00 00 00     Imprime db 0,0,0
 723+ 9661
 724+ 9661 3A 02 8A     	ld a,(Numero_de_malotes)
 725+ 9664 3D           	dec a
 726+ 9665 28 09        	jr z,1F
 727+ 9667 32 02 8A      	ld (Numero_de_malotes),a
 728+ 966A
 729+ 966A ED 7B 09 8A   	ld sp,(Stack_2)
 730+ 966E 18 D8        	jr 2B
 731+ 9670
 732+ 9670 AF           1 xor a
 733+ 9671 32 09 8A     	ld (Stack_2),a
 734+ 9674 C9           	ret
 735+ 9675
 736+ 9675              ; -----------------------------------------------------------------------------------
 737+ 9675              ;
 738+ 9675              ;	28/2/23
 739+ 9675              ;
 740+ 9675              ;	Pinta los disparos generados.
 741+ 9675
 742+ 9675              Extrae_foto_disparos
 743+ 9675
 744+ 9675 3A 0F 8A     	ld a,(Numero_de_disparotes)
 745+ 9678 A7           	and a
 746+ 9679 C8           	ret z
 747+ 967A ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 967E 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9681
 750+ 9681 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9683 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9684 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9685
 754+ 9685 ED 73 09 8A  	ld (Stack_2),sp
 755+ 9689 ED 7B 07 8A  	ld sp,(Stack)
 756+ 968D
 757+ 968D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 968D
 759+ 968D 3E CD        	ld a,$cd
 760+ 968F 32 97 96     	ld (Imprime2),a
 761+ 9692 EB           	ex de,hl
 762+ 9693 22 98 96     	ld (Imprime2+1),hl
 763+ 9696 EB           	ex de,hl
 764+ 9697
 765+ 9697              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 9697
 767+ 9697 00 00 00     Imprime2 db 0,0,0
 768+ 969A
 769+ 969A 3A 0F 8A     	ld a,(Numero_de_disparotes)
 770+ 969D 3D           	dec a
 771+ 969E 28 09        	jr z,1F
 772+ 96A0 32 0F 8A      	ld (Numero_de_disparotes),a
 773+ 96A3
 774+ 96A3 ED 7B 09 8A  	ld sp,(Stack_2)
 775+ 96A7 18 D8        	jr 2B
 776+ 96A9
 777+ 96A9 AF           1 xor a
 778+ 96AA 32 09 8A     	ld (Stack_2),a
 779+ 96AD C9           	ret
 780+ 96AE
# file closed: Draw_XOR.asm
1242  96AE              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96AE              ;   índices de Rutinas de impresión.
   2+ 96AE
   3+ 96AE BE 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96B0 EB 96            defw Pinta_Amadeus_3x2
   5+ 96B2
   6+ 96B2 41 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96B4 E1 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96B6 95 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96B8
  10+ 96B8 6B 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96BA 6F 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96BC 23 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96BE
  14+ 96BE
  15+ 96BE              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96BE              ;
  17+ 96BE              ;   12/12/22
  18+ 96BE              ;
  19+ 96BE              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96BE              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96BE              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96BE              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96BE              ;
  24+ 96BE              ;   Modifica: DE y HL.
  25+ 96BE
  26+ 96BE ED 73 07 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96C2 FD F9        	ld sp,iy
  28+ 96C4 06 10            ld b,16
  29+ 96C6 D1           1 pop de
  30+ 96C7 7B               ld a,e
  31+ 96C8 AE               xor (hl)
  32+ 96C9 77           	ld (hl),a
  33+ 96CA 23           	inc hl
  34+ 96CB 7A               ld a,d
  35+ 96CC AE               xor (hl)
  36+ 96CD 77           	ld (hl),a
  37+ 96CE 2B           	dec hl
  38+ 96CF 24           	inc h
  39+ 96D0 7C               ld a,h
  40+ 96D1 E6 07            and 7
  41+ 96D3 20 0A            jr nz,2F
  42+ 96D5 7D               ld a,l
  43+ 96D6 C6 20            add a,$20
  44+ 96D8 6F               ld l,a
  45+ 96D9 38 04            jr c,2F
  46+ 96DB 7C               ld a,h
  47+ 96DC D6 08            sub 8
  48+ 96DE 67               ld h,a
  49+ 96DF 7C           2 ld a,h
  50+ 96E0 FE 58            cp $58
  51+ 96E2 28 02            jr z,3F
  52+ 96E4 10 E0            djnz 1B
  53+ 96E6 ED 7B 07 8A  3 ld sp,(Stack)
  54+ 96EA C9           	ret
  55+ 96EB
  56+ 96EB ED 73 07 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96EF FD F9        	ld sp,iy
  58+ 96F1 06 08            ld b,8
  59+ 96F3 D1           1 pop de
  60+ 96F4 7B               ld a,e
  61+ 96F5 AE               xor (hl)
  62+ 96F6 77           	ld (hl),a
  63+ 96F7 23           	inc hl
  64+ 96F8 7A               ld a,d
  65+ 96F9 AE               xor (hl)
  66+ 96FA 77           	ld (hl),a
  67+ 96FB 23           	inc hl
  68+ 96FC D1           	pop de
  69+ 96FD 7B               ld a,e
  70+ 96FE AE               xor (hl)
  71+ 96FF 77           	ld (hl),a
  72+ 9700 2B           	dec hl
  73+ 9701 2B           	dec hl
  74+ 9702 24           	inc h
  75+ 9703 7C               ld a,h
  76+ 9704 E6 07            and 7
  77+ 9706 20 0A            jr nz,2F
  78+ 9708 7D               ld a,l
  79+ 9709 C6 20            add a,$20
  80+ 970B 6F               ld l,a
  81+ 970C 38 04            jr c,2F
  82+ 970E 7C               ld a,h
  83+ 970F D6 08            sub 8
  84+ 9711 67               ld h,a
  85+ 9712 7C           2 ld a,h
  86+ 9713 FE 58            cp $58
  87+ 9715 28 25            jr z,4F
  88+ 9717 7A               ld a,d
  89+ 9718 AE               xor (hl)
  90+ 9719 77               ld (hl),a
  91+ 971A D1           	pop de
  92+ 971B 23           	inc hl
  93+ 971C 7B               ld a,e
  94+ 971D AE               xor (hl)
  95+ 971E 77           	ld (hl),a
  96+ 971F 23           	inc hl
  97+ 9720 7A               ld a,d
  98+ 9721 AE               xor (hl)
  99+ 9722 77           	ld (hl),a
 100+ 9723 2B           	dec hl
 101+ 9724 2B           	dec hl
 102+ 9725 24           	inc h
 103+ 9726 7C               ld a,h
 104+ 9727 E6 07            and 7
 105+ 9729 20 0A            jr nz,3F
 106+ 972B 7D               ld a,l
 107+ 972C C6 20            add a,$20
 108+ 972E 6F               ld l,a
 109+ 972F 38 04            jr c,3F
 110+ 9731 7C               ld a,h
 111+ 9732 D6 08            sub 8
 112+ 9734 67               ld h,a
 113+ 9735 7C           3 ld a,h
 114+ 9736 FE 58            cp $58
 115+ 9738 28 02            jr z,4F
 116+ 973A 10 B7            djnz 1B
 117+ 973C ED 7B 07 8A  4 ld sp,(Stack)
 118+ 9740 C9           	ret
 119+ 9741
 120+ 9741              ; ---------------------------------------------------
 121+ 9741
 122+ 9741 ED 73 07 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9745 FD F9        	ld sp,iy
 124+ 9747
 125+ 9747              ; >>>
 126+ 9747
 127+ 9747 06 10            ld b,16
 128+ 9749 D1           1 pop de
 129+ 974A 7A           	ld a,d
 130+ 974B AE           	xor (hl)
 131+ 974C 77           	ld (hl),a
 132+ 974D 24           	inc h
 133+ 974E 7C               ld a,h
 134+ 974F E6 07            and 7
 135+ 9751 20 0C            jr nz,2F
 136+ 9753 7D               ld a,l
 137+ 9754 C6 20            add a,$20
 138+ 9756 6F               ld l,a
 139+ 9757 38 06            jr c,2F
 140+ 9759 7C               ld a,h
 141+ 975A D6 08            sub 8
 142+ 975C 67               ld h,a
 143+ 975D 18 00            jr 2F
 144+ 975F 7C           2 ld a,h
 145+ 9760 FE 58            cp $58
 146+ 9762 28 02            jr z,3F
 147+ 9764 10 E3            djnz 1B
 148+ 9766 ED 7B 07 8A  3 ld sp,(Stack)
 149+ 976A C9           	ret
 150+ 976B
 151+ 976B ED 73 07 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 976F FD F9        	ld sp,iy
 153+ 9771
 154+ 9771              ; >>>
 155+ 9771
 156+ 9771 06 10            ld b,16
 157+ 9773 D1           1 pop de
 158+ 9774 7B           	ld a,e
 159+ 9775 AE           	xor (hl)
 160+ 9776 77           	ld (hl),a
 161+ 9777 24           	inc h
 162+ 9778 7C               ld a,h
 163+ 9779 E6 07            and 7
 164+ 977B 20 0C            jr nz,2F
 165+ 977D 7D               ld a,l
 166+ 977E C6 20            add a,$20
 167+ 9780 6F               ld l,a
 168+ 9781 38 06            jr c,2F
 169+ 9783 7C               ld a,h
 170+ 9784 D6 08            sub 8
 171+ 9786 67               ld h,a
 172+ 9787 18 00            jr 2F
 173+ 9789 7C           2 ld a,h
 174+ 978A FE 58            cp $58
 175+ 978C 28 02            jr z,3F
 176+ 978E 10 E3            djnz 1B
 177+ 9790 ED 7B 07 8A  3 ld sp,(Stack)
 178+ 9794 C9           	ret
 179+ 9795
 180+ 9795              ; ---------------------------------------------------
 181+ 9795
 182+ 9795 ED 73 07 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9799 FD F9        	ld sp,iy
 184+ 979B 06 08            ld b,8
 185+ 979D D1           1 pop de
 186+ 979E 7A           	ld a,d
 187+ 979F AE           	xor (hl)
 188+ 97A0 77           	ld (hl),a
 189+ 97A1 23           	inc hl
 190+ 97A2 D1           	pop de
 191+ 97A3 7B           	ld a,e
 192+ 97A4 AE           	xor (hl)
 193+ 97A5 77           	ld (hl),a
 194+ 97A6 2B           	dec hl
 195+ 97A7 24            	inc h
 196+ 97A8 7C               ld a,h
 197+ 97A9 E6 07            and 7
 198+ 97AB 20 0A            jr nz,2F
 199+ 97AD 7D               ld a,l
 200+ 97AE C6 20            add a,$20
 201+ 97B0 6F               ld l,a
 202+ 97B1 38 04            jr c,2F
 203+ 97B3 7C               ld a,h
 204+ 97B4 D6 08            sub 8
 205+ 97B6 67               ld h,a
 206+ 97B7 7C           2 ld a,h
 207+ 97B8 FE 58            cp $58
 208+ 97BA 28 20            jr z,4F
 209+ 97BC D1               pop de
 210+ 97BD 7B           	ld a,e
 211+ 97BE AE           	xor (hl)
 212+ 97BF 77           	ld (hl),a
 213+ 97C0 23           	inc hl
 214+ 97C1 7A           	ld a,d
 215+ 97C2 AE           	xor (hl)
 216+ 97C3 77           	ld (hl),a
 217+ 97C4 2B           	dec hl
 218+ 97C5 24           	inc h
 219+ 97C6 7C               ld a,h
 220+ 97C7 E6 07            and 7
 221+ 97C9 20 0A            jr nz,3F
 222+ 97CB 7D               ld a,l
 223+ 97CC C6 20            add a,$20
 224+ 97CE 6F               ld l,a
 225+ 97CF 38 04            jr c,3F
 226+ 97D1 7C               ld a,h
 227+ 97D2 D6 08            sub 8
 228+ 97D4 67               ld h,a
 229+ 97D5 7C           3 ld a,h
 230+ 97D6 FE 58            cp $58
 231+ 97D8 28 02            jr z,4F
 232+ 97DA 10 C1            djnz 1B
 233+ 97DC ED 7B 07 8A  4 ld sp,(Stack)
 234+ 97E0 C9           	ret
 235+ 97E1
 236+ 97E1 ED 73 07 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97E5 FD F9        	ld sp,iy
 238+ 97E7 06 08            ld b,8
 239+ 97E9 D1           1 pop de
 240+ 97EA D1           	pop de
 241+ 97EB 7B           	ld a,e
 242+ 97EC AE           	xor (hl)
 243+ 97ED 77           	ld (hl),a
 244+ 97EE 24            	inc h
 245+ 97EF 7C               ld a,h
 246+ 97F0 E6 07            and 7
 247+ 97F2 20 0A            jr nz,2F
 248+ 97F4 7D               ld a,l
 249+ 97F5 C6 20            add a,$20
 250+ 97F7 6F               ld l,a
 251+ 97F8 38 04            jr c,2F
 252+ 97FA 7C               ld a,h
 253+ 97FB D6 08            sub 8
 254+ 97FD 67               ld h,a
 255+ 97FE 7C           2 ld a,h
 256+ 97FF FE 58            cp $58
 257+ 9801 28 1B            jr z,4F
 258+ 9803 D1               pop de
 259+ 9804 7A           	ld a,d
 260+ 9805 AE           	xor (hl)
 261+ 9806 77           	ld (hl),a
 262+ 9807 24           	inc h
 263+ 9808 7C               ld a,h
 264+ 9809 E6 07            and 7
 265+ 980B 20 0A            jr nz,3F
 266+ 980D 7D               ld a,l
 267+ 980E C6 20            add a,$20
 268+ 9810 6F               ld l,a
 269+ 9811 38 04            jr c,3F
 270+ 9813 7C               ld a,h
 271+ 9814 D6 08            sub 8
 272+ 9816 67               ld h,a
 273+ 9817 7C           3 ld a,h
 274+ 9818 FE 58            cp $58
 275+ 981A 28 02            jr z,4F
 276+ 981C 10 CB            djnz 1B
 277+ 981E ED 7B 07 8A  4 ld sp,(Stack)
 278+ 9822 C9           	ret
 279+ 9823
 280+ 9823 ED 73 07 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9827 FD F9        	ld sp,iy
 282+ 9829 06 08            ld b,8
 283+ 982B D1           1 pop de
 284+ 982C 7B           	ld a,e
 285+ 982D AE           	xor (hl)
 286+ 982E 77           	ld (hl),a
 287+ 982F 23           	inc hl
 288+ 9830 7A           	ld a,d
 289+ 9831 AE           	xor (hl)
 290+ 9832 77           	ld (hl),a
 291+ 9833 2B           	dec hl
 292+ 9834 24             	inc h
 293+ 9835 7C               ld a,h
 294+ 9836 E6 07            and 7
 295+ 9838 20 0A            jr nz,2F
 296+ 983A 7D               ld a,l
 297+ 983B C6 20            add a,$20
 298+ 983D 6F               ld l,a
 299+ 983E 38 04            jr c,2F
 300+ 9840 7C               ld a,h
 301+ 9841 D6 08            sub 8
 302+ 9843 67               ld h,a
 303+ 9844 7C           2 ld a,h
 304+ 9845 FE 58            cp $58
 305+ 9847 28 21            jr z,4F
 306+ 9849 D1               pop de
 307+ 984A 7A           	ld a,d
 308+ 984B AE           	xor (hl)
 309+ 984C 77           	ld (hl),a
 310+ 984D 23           	inc hl
 311+ 984E D1               pop de
 312+ 984F 7B           	ld a,e
 313+ 9850 AE           	xor (hl)
 314+ 9851 77           	ld (hl),a
 315+ 9852 2B           	dec hl
 316+ 9853 24           	inc h
 317+ 9854 7C               ld a,h
 318+ 9855 E6 07            and 7
 319+ 9857 20 0A            jr nz,3F
 320+ 9859 7D               ld a,l
 321+ 985A C6 20            add a,$20
 322+ 985C 6F               ld l,a
 323+ 985D 38 04            jr c,3F
 324+ 985F 7C               ld a,h
 325+ 9860 D6 08            sub 8
 326+ 9862 67               ld h,a
 327+ 9863 7C           3 ld a,h
 328+ 9864 FE 58            cp $58
 329+ 9866 28 02            jr z,4F
 330+ 9868 10 C1            djnz 1B
 331+ 986A ED 7B 07 8A  4 ld sp,(Stack)
 332+ 986E C9           	ret
 333+ 986F
 334+ 986F ED 73 07 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9873 FD F9        	ld sp,iy
 336+ 9875 06 08            ld b,8
 337+ 9877 D1           1 pop de
 338+ 9878 7B           	ld a,e
 339+ 9879 AE           	xor (hl)
 340+ 987A 77           	ld (hl),a
 341+ 987B 24            	inc h
 342+ 987C 7C               ld a,h
 343+ 987D E6 07            and 7
 344+ 987F 20 0A            jr nz,2F
 345+ 9881 7D               ld a,l
 346+ 9882 C6 20            add a,$20
 347+ 9884 6F               ld l,a
 348+ 9885 38 04            jr c,2F
 349+ 9887 7C               ld a,h
 350+ 9888 D6 08            sub 8
 351+ 988A 67               ld h,a
 352+ 988B 7C           2 ld a,h
 353+ 988C FE 58            cp $58
 354+ 988E 28 1C            jr z,4F
 355+ 9890 D1               pop de
 356+ 9891 7A           	ld a,d
 357+ 9892 AE           	xor (hl)
 358+ 9893 77           	ld (hl),a
 359+ 9894 24           	inc h
 360+ 9895 7C               ld a,h
 361+ 9896 E6 07            and 7
 362+ 9898 20 0A            jr nz,3F
 363+ 989A 7D               ld a,l
 364+ 989B C6 20            add a,$20
 365+ 989D 6F               ld l,a
 366+ 989E 38 04            jr c,3F
 367+ 98A0 7C               ld a,h
 368+ 98A1 D6 08            sub 8
 369+ 98A3 67               ld h,a
 370+ 98A4 7C           3 ld a,h
 371+ 98A5 FE 58            cp $58
 372+ 98A7 28 03            jr z,4F
 373+ 98A9 D1               pop de
 374+ 98AA 10 CB            djnz 1B
 375+ 98AC ED 7B 07 8A  4 ld sp,(Stack)
 376+ 98B0 C9           	ret
 377+ 98B1
 378+ 98B1              ; ---------------------------------------------------
 379+ 98B1              ;
 380+ 98B1              ;   27/02/23
 381+ 98B1              ;
 382+ 98B1              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98B1              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98B1              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98B1
 386+ 98B1 ED 73 07 8A  Pinta_Disparo ld (Stack),sp
 387+ 98B5 FD F9            ld sp,iy
 388+ 98B7 06 04            ld b,4
 389+ 98B9 D1           1 pop de
 390+ 98BA 7B               ld a,e
 391+ 98BB AE               xor (hl)
 392+ 98BC 77               ld (hl),a
 393+ 98BD 23               inc hl
 394+ 98BE 7A               ld a,d
 395+ 98BF AE               xor (hl)
 396+ 98C0 77               ld (hl),a
 397+ 98C1 2B               dec hl
 398+ 98C2
 399+ 98C2 24               inc h
 400+ 98C3 7C               ld a,h
 401+ 98C4 E6 07            and 7
 402+ 98C6 20 0A            jr nz,2F
 403+ 98C8 7D               ld a,l
 404+ 98C9 C6 20            add a,$20
 405+ 98CB 6F               ld l,a
 406+ 98CC 38 04            jr c,2F
 407+ 98CE 7C               ld a,h
 408+ 98CF D6 08            sub 8
 409+ 98D1 67               ld h,a
 410+ 98D2 7C           2 ld a,h
 411+ 98D3 FE 58            cp $58
 412+ 98D5 28 02            jr z,3F
 413+ 98D7
 414+ 98D7 10 E0            djnz 1B
 415+ 98D9 ED 7B 07 8A  3 ld sp,(Stack)
 416+ 98DD C9               ret
 417+ 98DE
# file closed: Rutinas_de_impresion_sprites.asm
1243  98DE              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98DE              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98DE              ;
   3+ 98DE              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98DE              ;
   5+ 98DE              ; *****************************************************************************************************************************************************************************************
   6+ 98DE              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98DE
   8+ 98DE 7C           calcula_tercio ld a,h
   9+ 98DF E6 18        	and $18
  10+ 98E1 CB 2F        	sra a
  11+ 98E3 CB 2F        	sra a
  12+ 98E5 CB 2F        	sra a
  13+ 98E7 C9           	ret
  14+ 98E8
# file closed: calcula_tercio.asm
1244  98E8              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98E8              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98E8              ;
   3+ 98E8              ;
   4+ 98E8              ;	CLS.
   5+ 98E8              ;
   6+ 98E8              ;	Limpia la pantalla y define sus atributos.
   7+ 98E8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98E8              ;
   9+ 98E8              ;	COLORES: 0 ..... NEGRO
  10+ 98E8              ;    		 1 ..... AZUL
  11+ 98E8              ; 			 2 ..... ROJO
  12+ 98E8              ;			 3 ..... MAGENTA
  13+ 98E8              ; 			 4 ..... VERDE
  14+ 98E8              ; 			 5 ..... CIAN
  15+ 98E8              ;			 6 ..... AMARILLO
  16+ 98E8              ; 			 7 ..... BLANCO
  17+ 98E8              ;
  18+ 98E8              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98E8              ;
  20+ 98E8              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98E8
  22+ 98E8
  23+ 98E8 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98EB 11 01 40     	LD DE,$4001
  25+ 98EE 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98F1 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98F3 ED B0        	LDIR
  28+ 98F5 01 FF 02     	LD BC,767
  29+ 98F8 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98F9 ED B0        	LDIR
  31+ 98FB C9           	ret
  32+ 98FC
# file closed: Cls.asm
1245  98FC              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98FC              ; ******************************************************************************************************************************************************************************************
   2+ 98FC              ;
   3+ 98FC              ;   20/05/23
   4+ 98FC              ;
   5+ 98FC              ;	Recompone_posicion_inicio
   6+ 98FC              ;
   7+ 98FC              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98FC              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98FC              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98FC              ;	_ a una u otra rutina.
  11+ 98FC
  12+ 98FC              Recompone_posicion_inicio
  13+ 98FC
  14+ 98FC 2A C9 89     	ld hl,(Posicion_inicio)
  15+ 98FF 7D           	ld a,l
  16+ 9900 E6 1F        	and $1f
  17+ 9902 28 16        	jr z,1F
  18+ 9904
  19+ 9904 FE 1F        	cp $1f
  20+ 9906 28 0D        	jr z,3F
  21+ 9908
  22+ 9908 21 F3 89     	ld hl,Ctrl_2
  23+ 990B CB C6        	set 0,(hl)
  24+ 990D 2A BB 89     	ld hl,(Puntero_objeto)
  25+ 9910 22 F6 89     	ld (Repone_puntero_objeto),hl
  26+ 9913 18 08        	jr 2F
  27+ 9915
  28+ 9915 CD B6 9A     3 call Mov_left
  29+ 9918 18 03        	jr 2F
  30+ 991A
  31+ 991A CD 98 99     1 call Mov_right
  32+ 991D 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9920 22 BB 89     	ld (Puntero_objeto),hl
  34+ 9923 C9           	ret
  35+ 9924
  36+ 9924              ; ******************************************************************************************************************************************************************************************
  37+ 9924              ;
  38+ 9924              ;   27/05/23
  39+ 9924              ;
  40+ 9924              ;	Mov_down
  41+ 9924              ;
  42+ 9924              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9924              ;
  44+ 9924              ;
  45+ 9924              Mov_down
  46+ 9924
  47+ 9924 CD 86 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9927              ;																	; _ repone (Puntero_objeto).
  49+ 9927 21 E5 89     	ld hl,Ctrl_0
  50+ 992A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 992C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 992C              ; 																	; _ en el caso de que no lo haya.
  53+ 992C 3A CF 89     	ld a,(Vel_down)
  54+ 992F 47           	ld b,a
  55+ 9930 2A B9 89         ld hl,(Posicion_actual)
  56+ 9933 CD DE 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9936 E6 02        	and 2
  58+ 9938 28 0F        	jr z,1F
  59+ 993A
  60+ 993A              ; Nos encontramos en el último tercio de pantalla.
  61+ 993A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 993A
  63+ 993A 7C           	ld a,h
  64+ 993B FE 57        	cp $57
  65+ 993D 20 0A        	jr nz,1F
  66+ 993F 7D           	ld a,l
  67+ 9940 C6 20        	add $20
  68+ 9942 30 05        	jr nc,1F
  69+ 9944
  70+ 9944              ; ------------------------------
  71+ 9944 CD 34 9C     	call Reaparece_arriba
  72+ 9947              ;	call Reinicio
  73+ 9947              ; ------------------------------
  74+ 9947
  75+ 9947 18 08        	jr 3F
  76+ 9949 CD 1E 96     1 call NextScan
  77+ 994C 22 B9 89     	ld (Posicion_actual),hl
  78+ 994F 10 E2            djnz 2B
  79+ 9951 CD 4A 9C     3 call Genera_coordenadas
  80+ 9954 C9           	ret
  81+ 9955
  82+ 9955              ; ******************************************************************************************************************************************************************************************
  83+ 9955              ;
  84+ 9955              ;   27/05/23
  85+ 9955              ;
  86+ 9955              ;	Mov_up
  87+ 9955              ;
  88+ 9955              ; 	Mueve el Sprite hacia arriba.
  89+ 9955              ;
  90+ 9955              ;
  91+ 9955              Mov_up
  92+ 9955
  93+ 9955 CD 86 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9958              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9958 21 E5 89     	ld hl,Ctrl_0
  96+ 995B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 995D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 995D              ; 																		; _ en el caso de que no lo haya.
  99+ 995D 3A CE 89     	ld a,(Vel_up)
 100+ 9960 47           	ld b,a
 101+ 9961 2A B9 89     	ld hl,(Posicion_actual)
 102+ 9964 CD DE 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9967 A7           	and a
 104+ 9968 20 10        	jr nz,1F
 105+ 996A
 106+ 996A              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 996A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 996A
 109+ 996A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 996B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 996D 20 0B            jr nz,1F
 112+ 996F 7D               ld a,l
 113+ 9970 D6 20            sub $20
 114+ 9972 30 06            jr nc,1F
 115+ 9974 25               dec h
 116+ 9975
 117+ 9975              ; -----------------------------
 118+ 9975 CD 24 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9978              ;	call Reinicio
 120+ 9978              ; -----------------------------
 121+ 9978
 122+ 9978 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 997A CD 2D 96     1 call PreviousScan
 124+ 997D 22 B9 89     	ld (Posicion_actual),hl
 125+ 9980 10 E2            djnz 3B
 126+ 9982 CD 4A 9C     2 call Genera_coordenadas
 127+ 9985 C9           	ret
 128+ 9986
 129+ 9986              ; -----------------------------
 130+ 9986              ;
 131+ 9986              ;	27/5/23
 132+ 9986              ;
 133+ 9986              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9986              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9986              ;
 136+ 9986              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9986              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9986              ;
 139+ 9986              ;	Modifica: A y (Puntero_objeto).
 140+ 9986
 141+ 9986 3A F3 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9989 CB 47        	bit 0,a
 143+ 998B C8           	ret z
 144+ 998C CB 87        	res 0,a
 145+ 998E 32 F3 89     	ld (Ctrl_2),a
 146+ 9991 2A F6 89     	ld hl,(Repone_puntero_objeto)
 147+ 9994 22 BB 89     	ld (Puntero_objeto),hl
 148+ 9997 C9           	ret
 149+ 9998
 150+ 9998              ; ******************************************************************************************************************************************************************************************
 151+ 9998              ;
 152+ 9998              ;	19/10/22
 153+ 9998              ;
 154+ 9998              ;	Mov_right.
 155+ 9998              ;
 156+ 9998              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9998              ;
 158+ 9998
 159+ 9998 21 E5 89     Mov_right ld hl,Ctrl_0
 160+ 999B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 999D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 999D              ; 																	; _ en el caso de que no lo haya.
 163+ 999D 3A E5 89     	ld a,(Ctrl_0)
 164+ 99A0 CB 77        	bit 6,a
 165+ 99A2 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 99A4
 167+ 99A4 CD D2 9B     	call Stop_Amadeus_right
 168+ 99A7 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 99A8 18 4D        	jr 8F
 170+ 99AA
 171+ 99AA 3A BD 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 99AD FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 99AF 20 46        	jr nz,8F
 174+ 99B1
 175+ 99B1 3A BF 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 99B4 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 99B5 28 40        	jr z,8F
 178+ 99B7
 179+ 99B7              ; ---------- ---------- ----------
 180+ 99B7              ;
 181+ 99B7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 99B7
 183+ 99B7 3A CD 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 99BA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 99BC 28 11        	jr z,1F
 186+ 99BE 38 06        	jr c,6F
 187+ 99C0 FE 04        	cp 4
 188+ 99C2 28 14        	jr z,7F
 189+ 99C4 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99C6
 191+ 99C6              ; ---------- ---------- ----------
 192+ 99C6              ;
 193+ 99C6              ; Perfiles de velocidad
 194+ 99C6              ;
 195+ 99C6
 196+ 99C6 3A BF 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99C9 FE FE        	cp $fe
 198+ 99CB 20 2A        	jr nz,8F
 199+ 99CD 18 10        	jr 3F
 200+ 99CF 3A BF 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99D2 FE FD        	cp $fd
 202+ 99D4 20 21        	jr nz,8F
 203+ 99D6 18 07        	jr 3F
 204+ 99D8 3A BF 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99DB FE FB        	cp $fb
 206+ 99DD 20 18        	jr nz,8F
 207+ 99DF
 208+ 99DF              ; ---------- ---------- ----------
 209+ 99DF
 210+ 99DF              3
 211+ 99DF CD 12 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99E2              ;	call Reinicio
 213+ 99E2
 214+ 99E2              ; ---------- ---------- ----------
 215+ 99E2              ;
 216+ 99E2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99E2
 218+ 99E2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99E4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99E5 CD FE 99     	call DESPLZ_DER
 221+ 99E8 C1           	pop bc
 222+ 99E9 10 F9        	djnz 5B
 223+ 99EB 2A B9 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99EE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99EF 22 B9 89     	ld (Posicion_actual),hl
 226+ 99F2 CD 4A 9C     	call Genera_coordenadas
 227+ 99F5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99F7
 229+ 99F7              ; ---------- ---------- ----------
 230+ 99F7
 231+ 99F7 2A B9 89     8 ld hl,(Posicion_actual)
 232+ 99FA CD FE 99     	call DESPLZ_DER
 233+ 99FD C9           2 ret
 234+ 99FE
 235+ 99FE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99FE              ;
 237+ 99FE              ;	22/9/22
 238+ 99FE              ;
 239+ 99FE
 240+ 99FE CD 0D 9A     DESPLZ_DER call Desplaza_derecha
 241+ 9A01 CD 59 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 9A04 CD 82 9A         call Ciclo_completo
 243+ 9A07 21 E5 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9A0A CB FE        	set 7,(hl)
 245+ 9A0C C9           	ret
 246+ 9A0D
 247+ 9A0D              ; ******************************************************************************************************************************************************************************************
 248+ 9A0D              ;	15/02/23
 249+ 9A0D              ;
 250+ 9A0D
 251+ 9A0D 3A CD 89     Desplaza_derecha ld a,(Vel_right)
 252+ 9A10 47           	ld b,a
 253+ 9A11 2A C5 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9A14 23           1 inc hl
 255+ 9A15 23           	inc hl
 256+ 9A16 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9A18 22 C5 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9A1B CD 2C 8D     	call Extrae_address
 259+ 9A1E 22 BB 89     	ld (Puntero_objeto),hl
 260+ 9A21
 261+ 9A21              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9A21
 263+ 9A21              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9A21              ; Cuántos movimientos hemos hecho ??
 265+ 9A21              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9A21
 267+ 9A21 2A C1 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A24 EB           	ex de,hl
 269+ 9A25 A7           	and a
 270+ 9A26 ED 52        	sbc hl,de
 271+ 9A28 CB 3D        	srl l
 272+ 9A2A 3E 08        6 ld a,8
 273+ 9A2C 95           	sub l
 274+ 9A2D 30 1E        	jr nc,3F
 275+ 9A2F
 276+ 9A2F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A2F              ; B="0".
 278+ 9A2F
 279+ 9A2F 04           4 inc b
 280+ 9A30 3C           	inc a
 281+ 9A31 20 FC        	jr nz,4B
 282+ 9A33 78           	ld a,b
 283+ 9A34 08           	ex af,af
 284+ 9A35 2A C1 89     	ld hl,(Indice_Sprite_der)
 285+ 9A38 23           5 inc hl
 286+ 9A39 23           	inc hl
 287+ 9A3A 10 FC        	djnz 5B
 288+ 9A3C 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A3F CD 2C 8D     	call Extrae_address
 290+ 9A42 22 BB 89     	ld (Puntero_objeto),hl
 291+ 9A45
 292+ 9A45              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A45              ; _(Posicion_actual).
 294+ 9A45
 295+ 9A45 21 B9 89     	ld hl,Posicion_actual
 296+ 9A48 34           	inc (hl)
 297+ 9A49 08               ex af,af
 298+ 9A4A 6F           	ld l,a
 299+ 9A4B 18 DD        	jr 6B
 300+ 9A4D
 301+ 9A4D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A4D
 303+ 9A4D 47           3 ld b,a
 304+ 9A4E 2A C3 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A51 23           2 inc hl
 306+ 9A52 23           	inc hl
 307+ 9A53 10 FC        	djnz 2B
 308+ 9A55 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A58 C9           8 ret
 310+ 9A59
 311+ 9A59              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A59              ;
 313+ 9A59              ;	24/7/22
 314+ 9A59              ;
 315+ 9A59              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A59              ;
 317+ 9A59              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A59              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A59              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A59
 321+ 9A59 3A BF 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A5C A7           	and a
 323+ 9A5D 20 1F        	jr nz,1F
 324+ 9A5F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A61 32 BF 89         ld (CTRL_DESPLZ),a
 326+ 9A64
 327+ 9A64 21 B8 89     	ld hl,Columns
 328+ 9A67 34           	inc (hl)
 329+ 9A68 3A CB 89     	ld a,(Cuad_objeto)
 330+ 9A6B E6 01        	and 1
 331+ 9A6D 28 0F        	jr z,1F
 332+ 9A6F 2A B9 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A72 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A73 22 B9 89     	ld (Posicion_actual),hl
 335+ 9A76 CD 4A 9C     	call Genera_coordenadas
 336+ 9A79 CD DE 9B     	call Inc_CTRL_DESPLZ
 337+ 9A7C 18 03        	jr 2F
 338+ 9A7E CD DE 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A81 C9           2 ret
 340+ 9A82
 341+ 9A82              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A82              ;
 343+ 9A82              ;	24/7/22
 344+ 9A82              ;
 345+ 9A82              ;	Ciclo_completo.
 346+ 9A82              ;
 347+ 9A82              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A82              ;
 349+ 9A82              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A82              ; 	Decrementamos (Columns).
 351+ 9A82              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A82              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A82
 354+ 9A82
 355+ 9A82 3A BF 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A85 FE FF        	cp $ff
 357+ 9A87 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A89 E6 F0        	and $f0
 359+ 9A8B 20 28        	jr nz,3F
 360+ 9A8D
 361+ 9A8D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A8D
 363+ 9A8D 3A BF 89     	ld a,(CTRL_DESPLZ)
 364+ 9A90 47           	ld b,a
 365+ 9A91 3E F8        	ld a,$f8
 366+ 9A93 80           	add b
 367+ 9A94 32 BF 89     	ld (CTRL_DESPLZ),a
 368+ 9A97 18 1C        	jr 3F
 369+ 9A99 21 B8 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A9C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A9D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A9E 32 BF 89     	ld (CTRL_DESPLZ),a
 373+ 9AA1 3A CB 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9AA4 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9AA6 20 0A        	jr nz,2F
 376+ 9AA8 2A B9 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9AAB 23           	inc hl
 378+ 9AAC 22 B9 89     	ld (Posicion_actual),hl
 379+ 9AAF CD 4A 9C     	call Genera_coordenadas
 380+ 9AB2
 381+ 9AB2              ; Inicia el puntero de Sprite.
 382+ 9AB2
 383+ 9AB2 CD 43 8D     2 call Inicia_puntero_objeto_der
 384+ 9AB5 C9           3 ret
 385+ 9AB6
 386+ 9AB6              ; ******************************************************************************************************************************************************************************************
 387+ 9AB6              ;
 388+ 9AB6              ;	15/02/23
 389+ 9AB6              ;
 390+ 9AB6              ;	Mov_left.
 391+ 9AB6              ;
 392+ 9AB6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9AB6              ;
 394+ 9AB6 21 E5 89     Mov_left ld hl,Ctrl_0
 395+ 9AB9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9ABB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9ABB              ; 																	; _ en el caso de que no lo haya.
 398+ 9ABB 3A E5 89     	ld a,(Ctrl_0)
 399+ 9ABE CB 77        	bit 6,a
 400+ 9AC0 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9AC2
 402+ 9AC2 CD D8 9B     	call Stop_Amadeus_left
 403+ 9AC5 C8           	ret z
 404+ 9AC6 20 4A        	jr nz,8F
 405+ 9AC8
 406+ 9AC8 3A BD 89     11 ld a,(Coordenada_X)
 407+ 9ACB A7           	and a
 408+ 9ACC 20 44        	jr nz,8F
 409+ 9ACE
 410+ 9ACE 3A BF 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9AD1 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9AD2 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9AD4
 414+ 9AD4              ; ---------- ---------- ----------
 415+ 9AD4
 416+ 9AD4 3A CC 89     	ld a,(Vel_left)
 417+ 9AD7 FE 02        	cp 2
 418+ 9AD9 28 0F        	jr z,1F
 419+ 9ADB 38 04        	jr c,6F
 420+ 9ADD FE 04        	cp 4
 421+ 9ADF 28 12        	jr z,7F
 422+ 9AE1
 423+ 9AE1              ; ---------- ---------- ----------
 424+ 9AE1
 425+ 9AE1 3A BF 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AE4 FE F8        	cp $f8
 427+ 9AE6 20 2A        	jr nz,8F
 428+ 9AE8 18 10        	jr 4F
 429+ 9AEA 3A BF 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AED FE F9        	cp $f9
 431+ 9AEF 20 21        	jr nz,8F
 432+ 9AF1 18 07        	jr 4F
 433+ 9AF3 3A BF 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AF6 FE FB        	cp $fb
 435+ 9AF8 20 18        	jr nz,8F
 436+ 9AFA
 437+ 9AFA              ; ---------- ---------- ----------
 438+ 9AFA
 439+ 9AFA              4
 440+ 9AFA CD 00 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AFD              ;	call Reinicio
 442+ 9AFD
 443+ 9AFD              ; ---------- ---------- ----------
 444+ 9AFD
 445+ 9AFD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AFF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9B00
 448+ 9B00              ;	ld hl,(Indice_Sprite_izq)
 449+ 9B00              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9B00
 451+ 9B00 CD 19 9B     	call DESPLZ_IZQ
 452+ 9B03 C1           	pop bc
 453+ 9B04 10 F9        	djnz 5B
 454+ 9B06 2A B9 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9B09 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9B0A 22 B9 89     	ld (Posicion_actual),hl
 457+ 9B0D CD 4A 9C     	call Genera_coordenadas
 458+ 9B10 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9B12
 460+ 9B12              ; ---------- ---------- ----------
 461+ 9B12
 462+ 9B12              ; Movemos, no hay recolocación.
 463+ 9B12
 464+ 9B12 2A B9 89     8 ld hl,(Posicion_actual)
 465+ 9B15 CD 19 9B     	call DESPLZ_IZQ
 466+ 9B18 C9           2 ret
 467+ 9B19
 468+ 9B19              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9B19              ;
 470+ 9B19              ;	22/9/22
 471+ 9B19
 472+ 9B19              DESPLZ_IZQ
 473+ 9B19
 474+ 9B19 CD 28 9B     	call Desplaza_izquierda
 475+ 9B1C CD 74 9B         call modifica_parametros_1er_DESPLZ
 476+ 9B1F CD 9C 9B     	call Ciclo_completo_2
 477+ 9B22 21 E5 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B25 CB BE        	res 7,(hl)
 479+ 9B27 C9           	ret
 480+ 9B28
 481+ 9B28              Desplaza_izquierda
 482+ 9B28
 483+ 9B28 3A CC 89     	ld a,(Vel_left)
 484+ 9B2B 47           	ld b,a
 485+ 9B2C 2A C7 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B2F 23           1 inc hl
 487+ 9B30 23           	inc hl
 488+ 9B31 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B33 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B36 CD 2C 8D     	call Extrae_address
 491+ 9B39 22 BB 89     	ld (Puntero_objeto),hl
 492+ 9B3C
 493+ 9B3C              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B3C
 495+ 9B3C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B3C              ; Cuántos movimientos hemos hecho ??
 497+ 9B3C              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B3C
 499+ 9B3C 2A C3 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B3F EB           	ex de,hl
 501+ 9B40 A7           	and a
 502+ 9B41 ED 52        	sbc hl,de
 503+ 9B43 CB 3D        	srl l
 504+ 9B45 3E 08        6 ld a,8
 505+ 9B47 95           	sub l
 506+ 9B48 30 1E        	jr nc,3F
 507+ 9B4A
 508+ 9B4A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B4A              ; B="0".
 510+ 9B4A
 511+ 9B4A 04           4 inc b
 512+ 9B4B 3C           	inc a
 513+ 9B4C 20 FC        	jr nz,4B
 514+ 9B4E 78           	ld a,b
 515+ 9B4F 08           	ex af,af
 516+ 9B50 2A C3 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B53 23           5 inc hl
 518+ 9B54 23           	inc hl
 519+ 9B55 10 FC        	djnz 5B
 520+ 9B57 22 C7 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B5A CD 2C 8D     	call Extrae_address
 522+ 9B5D 22 BB 89     	ld (Puntero_objeto),hl
 523+ 9B60
 524+ 9B60              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B60              ; _(Posicion_actual).
 526+ 9B60
 527+ 9B60 21 B9 89     	ld hl,Posicion_actual
 528+ 9B63 35           	dec (hl)
 529+ 9B64 08           	ex af,af
 530+ 9B65 6F           	ld l,a
 531+ 9B66 18 DD        	jr 6B
 532+ 9B68
 533+ 9B68              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B68
 535+ 9B68 47           3 ld b,a
 536+ 9B69 2A C1 89     	ld hl,(Indice_Sprite_der)
 537+ 9B6C 23           2 inc hl
 538+ 9B6D 23           	inc hl
 539+ 9B6E 10 FC        	djnz 2B
 540+ 9B70 22 C5 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B73 C9           8 ret
 542+ 9B74
 543+ 9B74              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B74              ;
 545+ 9B74              ;	modifica_parametros_1er_DESPLZ
 546+ 9B74              ;
 547+ 9B74              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B74              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B74              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B74
 551+ 9B74 3A BF 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B77 A7           	and a
 553+ 9B78 20 1E        	jr nz,1F
 554+ 9B7A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B7B 32 BF 89         ld (CTRL_DESPLZ),a
 556+ 9B7E 21 B8 89     	ld hl,Columns
 557+ 9B81 34           	inc (hl)
 558+ 9B82 3A CB 89     	ld a,(Cuad_objeto)
 559+ 9B85 E6 01        	and 1
 560+ 9B87 20 0F        	jr nz,1F
 561+ 9B89 2A B9 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B8C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B8D 22 B9 89     	ld (Posicion_actual),hl
 564+ 9B90 CD 4A 9C     	call Genera_coordenadas
 565+ 9B93 CD EF 9B     	call Dec_CTRL_DESPLZ
 566+ 9B96 18 03        	jr 2F
 567+ 9B98 CD EF 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B9B C9           2 ret
 569+ 9B9C
 570+ 9B9C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B9C
 572+ 9B9C 3A BF 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B9F FE F7        	cp $f7
 574+ 9BA1 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9BA3 30 2C        	jr nc,3F
 576+ 9BA5
 577+ 9BA5              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9BA5
 579+ 9BA5 06 00        	ld b,0
 580+ 9BA7 04           4 inc b
 581+ 9BA8 3C           	inc a
 582+ 9BA9 FE F7        	cp $f7
 583+ 9BAB 20 FA        	jr nz,4B
 584+ 9BAD 3E FF        	ld a,$ff
 585+ 9BAF 90           	sub b
 586+ 9BB0 32 BF 89     	ld (CTRL_DESPLZ),a
 587+ 9BB3 18 1C        	jr 3F
 588+ 9BB5
 589+ 9BB5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9BB5
 591+ 9BB5 21 B8 89     1 ld hl,Columns
 592+ 9BB8 35           	dec (hl)
 593+ 9BB9 AF           	xor a
 594+ 9BBA 32 BF 89     	ld (CTRL_DESPLZ),a
 595+ 9BBD 3A CB 89     	ld a,(Cuad_objeto)
 596+ 9BC0 E6 01        	and 1
 597+ 9BC2 28 0A        	jr z,2F
 598+ 9BC4 2A B9 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BC7 2B           	dec hl
 600+ 9BC8 22 B9 89     	ld (Posicion_actual),hl
 601+ 9BCB CD 4A 9C     	call Genera_coordenadas
 602+ 9BCE
 603+ 9BCE              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BCE
 605+ 9BCE CD 56 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BD1 C9           3 ret
 607+ 9BD2
 608+ 9BD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BD2              ;
 610+ 9BD2              ;	19/10/22
 611+ 9BD2              ;
 612+ 9BD2              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BD2              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BD2
 615+ 9BD2 3A BD 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BD5 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BD7 C9           	ret
 618+ 9BD8
 619+ 9BD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BD8              ;
 621+ 9BD8              ;	19/10/22
 622+ 9BD8              ;
 623+ 9BD8              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BD8              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BD8
 626+ 9BD8 3A BD 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BDB FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BDD C9           	ret
 629+ 9BDE
 630+ 9BDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BDE              ;
 632+ 9BDE              ;	24/7/22
 633+ 9BDE              ;
 634+ 9BDE              ;	Inc_CTRL_DESPLZ
 635+ 9BDE              ;
 636+ 9BDE              ;
 637+ 9BDE              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BDE
 639+ 9BDE 21 BF 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BE1 3A CD 89     	ld a,(Vel_right)
 641+ 9BE4 A7           	and a
 642+ 9BE5 28 06        	jr z,1F
 643+ 9BE7 47           	ld b,a
 644+ 9BE8 34           3 inc (hl)
 645+ 9BE9 10 FD        	djnz 3B
 646+ 9BEB 18 01        	jr 2F
 647+ 9BED 34           1 inc (hl)
 648+ 9BEE C9           2 ret
 649+ 9BEF
 650+ 9BEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BEF              ;
 652+ 9BEF              ;	5/2/23
 653+ 9BEF              ;
 654+ 9BEF              ;	Dec_CTRL_DESPLZ
 655+ 9BEF              ;
 656+ 9BEF              ;
 657+ 9BEF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BEF
 659+ 9BEF 21 BF 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BF2 3A CC 89     	ld a,(Vel_left)
 661+ 9BF5 A7           	and a
 662+ 9BF6 28 06        	jr z,1F
 663+ 9BF8 47           	ld b,a
 664+ 9BF9 35           3 dec (hl)
 665+ 9BFA 10 FD        	djnz 3B
 666+ 9BFC 18 01        	jr 2F
 667+ 9BFE 35           1 dec (hl)
 668+ 9BFF C9           2 ret
 669+ 9C00
 670+ 9C00              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9C00
 672+ 9C00 2A B9 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9C03 01 1F 00     	ld bc,31
 674+ 9C06 A7           	and a
 675+ 9C07 ED 4A        	adc hl,bc
 676+ 9C09 22 B9 89     	ld (Posicion_actual),hl
 677+ 9C0C 21 E5 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9C0F CB C6        	set 0,(hl)
 679+ 9C11 C9           	ret
 680+ 9C12
 681+ 9C12              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9C12
 683+ 9C12 2A B9 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9C15 01 1F 00     	ld bc,31
 685+ 9C18 A7           	and a
 686+ 9C19 ED 42        	sbc hl,bc
 687+ 9C1B 22 B9 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9C1E 21 E5 89     	ld hl,Ctrl_0
 689+ 9C21 CB CE        	set 1,(hl)
 690+ 9C23 C9           	ret
 691+ 9C24
 692+ 9C24              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C24
 694+ 9C24 24           Reaparece_abajo inc h
 695+ 9C25 01 E0 17     	ld bc,$17e0
 696+ 9C28 A7           	and a
 697+ 9C29 ED 4A        	adc hl,bc
 698+ 9C2B 22 B9 89     	ld (Posicion_actual),hl
 699+ 9C2E 21 E5 89     	ld hl,Ctrl_0
 700+ 9C31 CB D6        	set 2,(hl)
 701+ 9C33 C9           	ret
 702+ 9C34
 703+ 9C34              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C34
 705+ 9C34 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C37 A7           	and a
 707+ 9C38 ED 42        	sbc hl,bc
 708+ 9C3A 22 B9 89     	ld (Posicion_actual),hl
 709+ 9C3D 21 E5 89     	ld hl,Ctrl_0
 710+ 9C40 CB DE        	set 3,(hl)
 711+ 9C42 C9           	ret
 712+ 9C43
 713+ 9C43              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C43
 715+ 9C43 2A C9 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C46 22 B9 89     	ld (Posicion_actual),hl
 717+ 9C49 C9           	ret
# file closed: Direcciones.asm
1246  9C4A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C4A              ; ------------------------------------------------------------------------
   2+ 9C4A              ;
   3+ 9C4A              ;	02/04/23
   4+ 9C4A              ;
   5+ 9C4A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C4A              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C4A              ;
   8+ 9C4A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C4A              ;
  10+ 9C4A              ;	Modifica: A,BC y DE.
  11+ 9C4A
  12+ 9C4A C5           Genera_coordenadas push bc
  13+ 9C4B E5           	push hl
  14+ 9C4C D5           	push de
  15+ 9C4D
  16+ 9C4D 2A B9 89     	ld hl,(Posicion_actual)
  17+ 9C50
  18+ 9C50 7D           	ld a,l
  19+ 9C51 E6 1F        	and $1f
  20+ 9C53 32 BD 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C56
  22+ 9C56 CD DE 98     	call calcula_tercio
  23+ 9C59 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C5A
  25+ 9C5A 1E 00        	ld e,0
  26+ 9C5C 7D           	ld a,l
  27+ 9C5D E6 E0        	and $e0
  28+ 9C5F 28 01        	jr z,1F
  29+ 9C61 04           	inc b
  30+ 9C62
  31+ 9C62 04           1 inc b
  32+ 9C63 05           	dec b
  33+ 9C64 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C66              ;														; _ , salimos.
  35+ 9C66 1C           3 inc e
  36+ 9C67 D6 20        	sub 32
  37+ 9C69 20 FB        	jr nz,3B
  38+ 9C6B 10 F5        	djnz 1B
  39+ 9C6D
  40+ 9C6D 7B           2 ld a,e
  41+ 9C6E 32 BE 89     	ld (Coordenada_y),a
  42+ 9C71
  43+ 9C71 D1           	pop de
  44+ 9C72 E1           	pop hl
  45+ 9C73 C1           	pop bc
  46+ 9C74
  47+ 9C74 C9           	ret
  48+ 9C75
  49+ 9C75              ; ------------------------------------------------------------------------
  50+ 9C75              ;	28/05/23
  51+ 9C75              ;
  52+ 9C75              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C75              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C75              ;
  55+ 9C75              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C75              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C75              ;
  58+ 9C75              ;		DE="$120d"
  59+ 9C75              ;
  60+ 9C75              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C75              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C75              ;
  63+ 9C75              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C75
  65+ 9C75              ;	Modifica: A,BC y DE.
  66+ 9C75
  67+ 9C75
  68+ 9C75              Genera_coordenadas_disparo
  69+ 9C75
  70+ 9C75              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C75
  72+ 9C75 7D           	ld a,l
  73+ 9C76 E6 1F        	and $1f
  74+ 9C78 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C79 CD DE 98     	call calcula_tercio
  76+ 9C7C 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C7D 1E 00        	ld e,0
  78+ 9C7F 7D           	ld a,l
  79+ 9C80 E6 E0        	and $e0
  80+ 9C82 28 01        	jr z,1F
  81+ 9C84 04           	inc b
  82+ 9C85 1C           1 inc e
  83+ 9C86 D6 20        	sub 32
  84+ 9C88 20 FB        	jr nz,1B
  85+ 9C8A 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C8C C9           	ret
  87+ 9C8D
# file closed: Genera_coordenadas.asm
1247  9C8D              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C8D
   2+ 9C8D
   3+ 9C8D              ;   11/8/22
   4+ 9C8D              ;
   5+ 9C8D              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C8D              ;
   7+ 9C8D              ;   Mov_obj.asm
   8+ 9C8D              ;
   9+ 9C8D              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C8D              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C8D              ;
  12+ 9C8D              ;   Codificación:
  13+ 9C8D              ;
  14+ 9C8D              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C8D
  16+ 9C8D              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C8D
  18+ 9C8D 02 40 00     Arriba db 2,%01000000,0
  19+ 9C90 02 80 00     Abajo db 2,%10000000,0
  20+ 9C93 02 20 00     Derecha db 2,%00100000,0
  21+ 9C96 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C99 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C9D 60 42 60 40
  22+ 9CA1 63
  23+ 9CA2 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9CA6 22 A3 80 A0
  24+ 9CAA 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9CAE 84 A0 83 A0
  25+ 9CB2 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9CB6 80 A3 22 A0
  26+ 9CBA 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9CBE 40 60 42 60
  27+ 9CC2 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9CC6
  29+ 9CC6 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9CCA 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9CCE 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9CD2 84 00
  32+ 9CD4 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9CD8 84 00
  33+ 9CDA 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9CDE 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9CE2 1F 1F 1F 1F
  35+ 9CE6 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9CEA 1F 1F 1F 1F
  35+ 9CEE 1F
  36+ 9CEF 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CF3 2F 2F 2F 2F
  36+ 9CF7 2F 2F
  37+ 9CF9 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CFD 2F 2F 00
  38+ 9D00
  39+ 9D00              ; ----- ----- ----- ----- -----
  40+ 9D00
  41+ 9D00 DE 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9D02 DA 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9D04 96 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9D06 93 9C        Indice_mov_Derecha defw Derecha
  45+ 9D08 90 9C        Indice_mov_Abajo defw Abajo
  46+ 9D0A 8D 9C        Indice_mov_Arriba defw Arriba
  47+ 9D0C CA 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9D0E CE 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9D10 C6 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9D12 D4 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9D14 99 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9D16              ; ----- ----- ----- ----- -----
  53+ 9D16
  54+ 9D16 3A EC 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9D19 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9D1A 28 02            jr z,1F
  57+ 9D1C 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9D1E 3A ED 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9D21 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9D23 32 ED 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9D26              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9D26 2A EA 89         ld hl,(Puntero_mov)
  63+ 9D29 7E               ld a,(hl)
  64+ 9D2A 32 EC 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9D2D 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9D2E 22 EA 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9D31
  68+ 9D31 3A EE 89     Decoder ld a,(Repetimos_db)
  69+ 9D34 A7               and a
  70+ 9D35 20 0C            jr nz,12F
  71+ 9D37 2A EA 89         ld hl,(Puntero_mov)
  72+ 9D3A 7E               ld a,(hl)
  73+ 9D3B A7               and a
  74+ 9D3C 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9D3E E6 0F            and $0f
  76+ 9D40 32 EE 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9D43              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9D43 2A EA 89     12 ld hl,(Puntero_mov)
  79+ 9D46 CB 7E            bit 7,(hl)
  80+ 9D48 28 03            jr z,2F
  81+ 9D4A CD 24 99         call Mov_down
  82+ 9D4D 2A EA 89     2 ld hl, (Puntero_mov)
  83+ 9D50 CB 76            bit 6,(hl)
  84+ 9D52 28 03            jr z,3F
  85+ 9D54 CD 55 99         call Mov_up
  86+ 9D57 2A EA 89     3 ld hl, (Puntero_mov)
  87+ 9D5A CB 6E            bit 5,(hl)
  88+ 9D5C 28 03            jr z,4F
  89+ 9D5E CD 98 99         call Mov_right
  90+ 9D61 2A EA 89     4 ld hl, (Puntero_mov)
  91+ 9D64 CB 66            bit 4,(hl)
  92+ 9D66 28 03            jr z,5F
  93+ 9D68 CD B6 9A         call Mov_left
  94+ 9D6B
  95+ 9D6B              ; ---------- --------- --------- ---------- ----------
  96+ 9D6B
  97+ 9D6B 3A EE 89     5 ld a,(Repetimos_db)
  98+ 9D6E A7               and a
  99+ 9D6F 28 07            jr z,6F
 100+ 9D71 3D               dec a
 101+ 9D72 32 EE 89         ld (Repetimos_db),a
 102+ 9D75 28 01            jr z,6f
 103+ 9D77 C9           11 ret
 104+ 9D78 21 EC 89     6 ld hl,Contador_db_mov
 105+ 9D7B 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D7C 2A EA 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D7F 23               inc hl
 108+ 9D80 22 EA 89         ld (Puntero_mov),hl
 109+ 9D83 18 F2            jr 11B
 110+ 9D85 2A E8 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D88 3A ED 89         ld a,(Incrementa_puntero)
 112+ 9D8B 47               ld b,a
 113+ 9D8C 23           8 inc hl
 114+ 9D8D 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D8F 5E               ld e,(hl)
 116+ 9D90 23               inc hl
 117+ 9D91 56               ld d,(hl)
 118+ 9D92 EB               ex de,hl
 119+ 9D93 22 EA 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D96 18 DF            jr 11B
 121+ 9D98
 122+ 9D98              ; ---------- --------- --------- ---------- ----------
 123+ 9D98              ;
 124+ 9D98              ;   11/8/22
 125+ 9D98              ;
 126+ 9D98              ;   Prepara_Puntero_mov
 127+ 9D98
 128+ 9D98 E5           Prepara_Puntero_mov push hl
 129+ 9D99 D5               push de
 130+ 9D9A 2A E8 89         ld hl,(Puntero_indice_mov)
 131+ 9D9D 5E               ld e,(hl)
 132+ 9D9E 23               inc hl
 133+ 9D9F 56               ld d,(hl)
 134+ 9DA0 EB               ex de,hl
 135+ 9DA1 22 EA 89         ld (Puntero_mov),hl
 136+ 9DA4 D1               pop de
 137+ 9DA5 E1               pop hl
 138+ 9DA6 C9               ret
 139+ 9DA7
 140+ 9DA7              ; ---------- --------- --------- ---------- ----------
 141+ 9DA7              ;
 142+ 9DA7              ;   11/8/22
 143+ 9DA7              ;
 144+ 9DA7              ;   Reinicia_el_movimiento
 145+ 9DA7
 146+ 9DA7 CD 98 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9DAA AF               xor a
 148+ 9DAB 32 EC 89         ld (Contador_db_mov),a
 149+ 9DAE 32 ED 89         ld (Incrementa_puntero),a
 150+ 9DB1 C3 16 9D         jp Movimiento
 151+ 9DB4 C9               ret
 152+ 9DB5              ; ---------- --------- --------- ---------- ----------
 153+ 9DB5
 154+ 9DB5
 155+ 9DB5
 156+ 9DB5
 157+ 9DB5
 158+ 9DB5
 159+ 9DB5
 160+ 9DB5
 161+ 9DB5
 162+ 9DB5
 163+ 9DB5
 164+ 9DB5
 165+ 9DB5
 166+ 9DB5
 167+ 9DB5
 168+ 9DB5
 169+ 9DB5
 170+ 9DB5
# file closed: Patrones_de_mov.asm
1248  9DB5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9DB5              ; Relojes y temporizaciones.
   2+ 9DB5
   3+ 9DB5              ; ------------------------------------------------------
   4+ 9DB5              ;
   5+ 9DB5              ;	27/04/23
   6+ 9DB5              ;
   7+ 9DB5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 9DB5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9DB5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9DB5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9DB5              ;
  12+ 9DB5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9DB5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9DB5
  15+ 9DB5              Habilita_disparos
  16+ 9DB5
  17+ 9DB5 7E           	ld a,(hl)
  18+ 9DB6 A7           	and a
  19+ 9DB7 C0           	ret nz
  20+ 9DB8
  21+ 9DB8 EB           	ex de,hl
  22+ 9DB9
  23+ 9DB9 35           	dec (hl)
  24+ 9DBA 34           	inc (hl)
  25+ 9DBB 35           	dec (hl)
  26+ 9DBC C0           	ret nz
  27+ 9DBD
  28+ 9DBD 2B           	dec hl
  29+ 9DBE 7E           	ld a,(hl)
  30+ 9DBF 23           	inc hl
  31+ 9DC0 77           	ld (hl),a
  32+ 9DC1
  33+ 9DC1 EB           	ex de,hl
  34+ 9DC2 3E 01        	ld a,1
  35+ 9DC4 77           	ld (hl),a
  36+ 9DC5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1249  9DC6              	include "Autorizacion.asm"
# file opened: Autorizacion.asm
   1+ 9DC6              ;
   2+ 9DC6              ;	14/06/23
   3+ 9DC6              ;
   4+ 9DC6
   5+ 9DC6              Autorizacion
   6+ 9DC6
   7+ 9DC6              ;	jr $
   8+ 9DC6
   9+ 9DC6              ;	Salimos de la rutina si hemos excedido el límite de entidades x frame.
  10+ 9DC6
  11+ 9DC6 3A F8 89     	ld a,(Limitador_de_entidades_x_frame)
  12+ 9DC9 A7           	and a
  13+ 9DCA C8           	ret z
  14+ 9DCB
  15+ 9DCB 3A E7 89     	ld a,(Autoriza_movimiento)
  16+ 9DCE A7           	and a
  17+ 9DCF 20 0A        	jr nz,1F
  18+ 9DD1
  19+ 9DD1              ; La entidad no ha estado autorizada en el FRAME anterior, damos autorización y decrementamos el limitador
  20+ 9DD1
  21+ 9DD1 21 E7 89     5 ld hl,Autoriza_movimiento
  22+ 9DD4 36 01        	ld (hl),1
  23+ 9DD6 21 F8 89     	ld hl,Limitador_de_entidades_x_frame
  24+ 9DD9 35           	dec (hl)
  25+ 9DDA
  26+ 9DDA C9           2 ret
  27+ 9DDB
  28+ 9DDB              ; La entidad ha estado autorizada en el frame anterior.
  29+ 9DDB              ; Se trata de la primera entidad ???
  30+ 9DDB
  31+ 9DDB 08           1 ex af,af
  32+ 9DDC 57           	ld d,a 									; (Entidades_en_curso) totales a gestionar en este FRAME.
  33+ 9DDD 08           	ex af,af
  34+ 9DDE 3A 01 8A     	ld a,(Entidades_en_curso)				; Entidad que estamos gestionando en este momento.
  35+ 9DE1 BA           	cp d									; Si el resultado de la comparativa es "0", estamos gestionando_
  36+ 9DE2 20 06        	jr nz,3F 								; _ la 1ª entidad.
  37+ 9DE4
  38+ 9DE4              ; Se trata de la 1ª entidad. Decrementamos el limitador. (Queremos que la 1ª entidad se mueva a 50FPS).
  39+ 9DE4
  40+ 9DE4 21 F8 89     4 ld hl,Limitador_de_entidades_x_frame
  41+ 9DE7 35           	dec (hl)
  42+ 9DE8 18 F0        	jr 2B
  43+ 9DEA
  44+ 9DEA              ; Esta entidad ha estado autorizada en el frame anterior y no es la 1ª.
  45+ 9DEA              ; Salimos si hay 2 (Entidades_en_curso) o menos.
  46+ 9DEA
  47+ 9DEA 3A 01 8A     3 ld a,(Entidades_en_curso)
  48+ 9DED FE 02        	cp 2
  49+ 9DEF 28 F3        	jr z,4B
  50+ 9DF1 38 F1        	jr c,4B
  51+ 9DF3
  52+ 9DF3              ; Esta entidad ha estado autorizada en el frame anterior y no es la 1ª.
  53+ 9DF3              ; Hay más de 2 (Entidades_en_curso).
  54+ 9DF3
  55+ 9DF3 3A E7 89     	ld a,(Autoriza_movimiento)
  56+ 9DF6 A7           	and a
  57+ 9DF7 28 D8        	jr z,5B
  58+ 9DF9
  59+ 9DF9 18 DF        	jr 2B
  60+ 9DFB
  61+ 9DFB
  62+ 9DFB
  63+ 9DFB
# file closed: Autorizacion.asm
1250  9DFB
1251  9DFB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9DFB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9DFB              ;
   3+ 9DFB              ;	3/1/23
   4+ 9DFB              ;
   5+ 9DFB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9DFB
   7+ 9DFB              ;	ADC HL,SP	LD (addr),SP
   8+ 9DFB              ;	ADD HL,SP	LD SP,(addr)
   9+ 9DFB              ;	ADD IX,SP	LD SP,nn
  10+ 9DFB              ; 	ADD IY,SP	LD SP,HL
  11+ 9DFB              ;				LD SP,IX
  12+ 9DFB              ;	DEC SP		LD SP,IY
  13+ 9DFB
  14+ 9DFB              ;	EX (SP),HL
  15+ 9DFB              ;	EX (SP),IX
  16+ 9DFB              ;	EX (SP),IY
  17+ 9DFB
  18+ 9DFB              ;	INC SP
  19+ 9DFB
  20+ 9DFB
  21+ 9DFB                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 07 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A F5 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 0B 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 0D 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 0B 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 07 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1252  7FD5
1253  7FD5              	SAVESNA "Pruebas.sna", START
1254  7FD5
1255  7FD5
1256  7FD5
1257  7FD5
# file closed: Banco_de_pruebas.asm
