# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD C8 86     	call Frame
  15  A104              ; Debugggggg
  16  A104              ;	ld a,(Ctrl_1)
  17  A104              ;	bit 3,a
  18  A104              ;	jr nz,$
  19  A104              ; Debugggggg
  20  A104 ED 4D        	reti
  21  A106
  22  A106              ; ----- ----- ----- ----- -----
  23  A106
  24  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  25  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas									; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Caja_1
  98+ 846A F0 84        	defw Caja_2
  99+ 846C 2D 85        	defw Caja_3
 100+ 846E 6A 85        	defw Caja_4
 101+ 8470 A7 85        	defw Caja_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480
 119+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 120+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B
 127+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 128+ 848F
 129+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 130+ 8490
 131+ 8490 00 00        	db 0,0											; Variables_de_borrado
 132+ 8492 00 00        	defw 0											;	" " " " " " "
 133+ 8494 00 00        	defw 0											;	" " " " " " "
 134+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 135+ 849A
 136+ 849A 00 00        	db 0,0											; Variables_de_pintado
 137+ 849C 00 00        	defw 0											;	" " " " " " "
 138+ 849E 00 00        	defw 0											;	" " " " " " "
 139+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 140+ 84A4
 141+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 142+ 84A7
 143+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 144+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 145+ 84AE
 146+ 84AE 00           	db 0 											; (Columnas).
 147+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 148+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 149+ 84B3
 150+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 151+ 84B3
 152+ 84B3 02 02        Caja_1 db 2,2										; (Filas) / (Columns).
 153+ 84B5 00 00        	defw 0											; (Posicion_actual).
 154+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 155+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 84BC
 157+ 84BC 04           	db %00000100 									; (Attr).
 158+ 84BD
 159+ 84BD 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 160+ 84BF 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 161+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 84C5
 164+ 84C5 81 47        	defw $4781										; (Posicion_inicio).
 165+ 84C7 01           	db 1											; (Cuad_objeto).
 166+ 84C8
 167+ 84C8 01 02 01 02  	db 1,2,1,2										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 84CC
 169+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 84CD
 171+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 172+ 84CF 00 00        	defw 0											;	" " " " " " "
 173+ 84D1 00 00        	defw 0											;	" " " " " " "
 174+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 84D7
 176+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 177+ 84D9 00 00        	defw 0											;	" " " " " " "
 178+ 84DB 00 00        	defw 0											;	" " " " " " "
 179+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 84E1
 181+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 182+ 84E4
 183+ 84E4 AE 97 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 184+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 185+ 84EB
 186+ 84EB 00           	db 0 											; (Columnas).
 187+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 188+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 189+ 84F0
 190+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 191+ 84F0
 192+ 84F0 02 02        Caja_2 db 2,2		                     		    ; (Filas) / (Columns).
 193+ 84F2 00 00        	defw 0                                          ; (Posicion_actual).
 194+ 84F4 00 00        	defw 0											; (Puntero_objeto).
 195+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 196+ 84F9
 197+ 84F9 02           	db %00000010									; (Attr).
 198+ 84FA
 199+ 84FA 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 200+ 84FC 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 201+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 202+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 203+ 8502
 204+ 8502 5E 48        	defw $485e                                      ; (Posicion_inicio).
 205+ 8504 02           	db 2											; (Cuad_objeto).
 206+ 8505
 207+ 8505 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 208+ 8509
 209+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 210+ 850A
 211+ 850A 00 00        	db 0,0											; Variables_de_borrado
 212+ 850C 00 00        	defw 0										 	;	" " " " " " "
 213+ 850E 00 00        	defw 0											;	" " " " " " "
 214+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 215+ 8514
 216+ 8514 00 00        	db 0,0											; Variables_de_pintado
 217+ 8516 00 00        	defw 0											;	" " " " " " "
 218+ 8518 00 00        	defw 0											;	" " " " " " "
 219+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 851E
 221+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 222+ 8521
 223+ 8521 AC 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0	; (Puntero_indice_mov) / (Puntero_mov).
 224+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 225+ 8528
 226+ 8528 00           	db 0 											; (Columnas).
 227+ 8529 00 00        	defw 0											; (Limite_horizontal).
 228+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 229+ 852D
 230+ 852D              ; ---------- ---------- ---------- ---------- ----------
 231+ 852D
 232+ 852D 02 02        Caja_3 db 2,2	                                 	; (Filas) / (Columns).
 233+ 852F 00 00        	defw 0                                          ; (Posicion_actual).
 234+ 8531 00 00        	defw 0											; (Puntero_objeto).
 235+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8536
 237+ 8536 04           	db %00000100									; (Attr).
 238+ 8537
 239+ 8537 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 240+ 8539 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 241+ 853B
 242+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 243+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 244+ 853F
 245+ 853F A1 47        	defw $47a1                                      ; (Posicion_inicio).
 246+ 8541 01           	db 1											; (Cuad_objeto).
 247+ 8542
 248+ 8542 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 249+ 8546
 250+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 251+ 8547
 252+ 8547 00 00        	db 0,0											; Variables_de_borrado
 253+ 8549 00 00        	defw 0										 	;	" " " " " " "
 254+ 854B 00 00        	defw 0											;	" " " " " " "
 255+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 256+ 8551
 257+ 8551 00 00        	db 0,0											; Variables_de_pintado
 258+ 8553 00 00        	defw 0											;	" " " " " " "
 259+ 8555 00 00        	defw 0											;	" " " " " " "
 260+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 261+ 855B
 262+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 263+ 855E
 264+ 855E A0 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 265+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 266+ 8565
 267+ 8565 00           	db 0 											; (Columnas).
 268+ 8566 00 00        	defw 0											; (Limite_horizontal).
 269+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 270+ 856A
 271+ 856A              ; ---------- ---------- ---------- ---------- ----------
 272+ 856A
 273+ 856A 02 02        Caja_4 db 2,2	                                  	; (Filas) / (Columns).
 274+ 856C 00 00        	defw 0                                          ; (Posicion_actual).
 275+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 8573
 278+ 8573 01           	db %00000001									; (Attr).
 279+ 8574
 280+ 8574 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 281+ 8576 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 282+ 8578
 283+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 857C
 286+ 857C BE 47        	defw $47be                                      ; (Posicion_inicio).
 287+ 857E 00           	db 0											; (Cuad_objeto).
 288+ 857F
 289+ 857F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 8583
 291+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 8584
 293+ 8584 00 00        	db 0,0											; Variables_de_borrado
 294+ 8586 00 00        	defw 0										 	;	" " " " " " "
 295+ 8588 00 00        	defw 0											;	" " " " " " "
 296+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 858E
 298+ 858E 00 00        	db 0,0											; Variables_de_pintado
 299+ 8590 00 00        	defw 0											;	" " " " " " "
 300+ 8592 00 00        	defw 0											;	" " " " " " "
 301+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 8598
 303+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 859B
 305+ 859B AC 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
 306+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 85A2
 308+ 85A2 00           	db 0 											; (Columnas).
 309+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 310+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 311+ 85A7
 312+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 313+ 85A7
 314+ 85A7 02 02        Caja_5 db 2,2      	                            	; (Filas) / (Columns).
 315+ 85A9 00 00        	defw 0                                          ; (Posicion_actual).
 316+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85B0
 319+ 85B0 01           	db %00000001									; (Attr).
 320+ 85B1
 321+ 85B1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 322+ 85B3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 323+ 85B5
 324+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 325+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 326+ 85B9
 327+ 85B9 0A 40        	defw $400a                                      ; (Posicion_inicio).
 328+ 85BB 01           	db 1											; (Cuad_objeto).
 329+ 85BC
 330+ 85BC 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 331+ 85C0
 332+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 333+ 85C1
 334+ 85C1 00 00        	db 0,0											; Variables_de_borrado
 335+ 85C3 00 00        	defw 0										 	;	" " " " " " "
 336+ 85C5 00 00        	defw 0											;	" " " " " " "
 337+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 338+ 85CB
 339+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 340+ 85CD 00 00        	defw 0											;	" " " " " " "
 341+ 85CF 00 00        	defw 0											;	" " " " " " "
 342+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 343+ 85D5
 344+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 345+ 85D8
 346+ 85D8 A2 97 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 347+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 348+ 85DF
 349+ 85DF 00           	db 0 											; (Columnas).
 350+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 351+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 352+ 85E4
# file closed: Cajas_y_disparos.asm
  26  85E4              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 85E4              ; 13/05/23
   2+ 85E4
   3+ 85E4              Indice_de_niveles
   4+ 85E4
   5+ 85E4 F2 85        	defw Nivel_1
   6+ 85E6 F8 85        	defw Nivel_2
   7+ 85E8 F8 85        	defw Nivel_3
   8+ 85EA F8 85        	defw Nivel_4
   9+ 85EC F8 85        	defw Nivel_5
  10+ 85EE
  11+ 85EE              ;	...
  12+ 85EE              ;	...
  13+ 85EE              ;	+ Niveles ...
  14+ 85EE
  15+ 85EE 00 00        	defw 0
  16+ 85F0 00 00        	defw 0
  17+ 85F2
  18+ 85F2 01 01 01 01  Nivel_1 db 1,1,1,1,1
  18+ 85F6 01
  19+ 85F7 01               db 1
  20+ 85F8
  21+ 85F8              Nivel_2
  22+ 85F8
  23+ 85F8              Nivel_3
  24+ 85F8
  25+ 85F8              Nivel_4
  26+ 85F8
  27+ 85F8              Nivel_5
  28+ 85F8
  29+ 85F8
  30+ 85F8              ;---------------------------------------------------------------------------------------------------------------
  31+ 85F8              ;
  32+ 85F8              ;   13/5/23
  33+ 85F8
  34+ 85F8              ;   Destruye HL y DE
  35+ 85F8
  36+ 85F8 21 E4 85     Inicia_puntero_indice_de_niveles ld hl,Indice_de_niveles
  37+ 85FB 22 6C 86         ld (Puntero_indice_NIVELES),hl
  38+ 85FE CD 8A 88         call Extrae_address
  39+ 8601 22 6E 86         ld (Datos_de_nivel),hl
  40+ 8604 C9               ret
  41+ 8605
# file closed: Niveles.asm
  27  8605
  28  8605              ; ******************************************************************************************************************************************************************************************
  29  8605              ; Constantes.
  30  8605              ; ******************************************************************************************************************************************************************************************
  31  8605              ;
  32  8605              ; 8/11/22
  33  8605              ;
  34  8605              ; Constantes generales.
  35  8605              ;
  36  8605
  37  8605              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  38  8605              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  39  8605              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  40  8605              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  41  8605
  42  8605              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  43  8605              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  44  8605              ;                               				        ; De momento situamos este almacén en $7000.
  45  8605              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  46  8605              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  47  8605              ;                               				        ; De momento situamos este almacén en $7060.
  48  8605
  49  8605              ; ******************************************************************************************************************************************************************************************
  50  8605              ; Variables.
  51  8605              ; ******************************************************************************************************************************************************************************************
  52  8605              ;
  53  8605              ; 10/11/22
  54  8605              ;
  55  8605              ; Variables de DRAW. (Motor principal).
  56  8605              ;
  57  8605              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  58  8605
  59  8605 02           Filas db 2												; Filas. [DRAW]
  60  8606 02           Columns db 2  											; Nº de columnas. [DRAW]
  61  8607 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  62  8609 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  63  860B 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  64  860C 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  65  860D
  66  860D              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  67  860D
  68  860D 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  69  860E              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  70  860E              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  71  860E 04           Attr db %00000100										; Atributos de la entidad:
  72  860F
  73  860F              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  74  860F              ;
  75  860F              ;	COLORES: 0 ..... NEGRO
  76  860F              ;    		 1 ..... AZUL
  77  860F              ; 			 2 ..... ROJO
  78  860F              ;			 3 ..... MAGENTA
  79  860F              ; 			 4 ..... VERDE
  80  860F              ; 			 5 ..... CIAN
  81  860F              ;			 6 ..... AMARILLO
  82  860F              ; 			 7 ..... BLANCO
  83  860F
  84  860F 98 81        Indice_Sprite_der defw Indice_Badsat_der
  85  8611 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  86  8613 00 00        Puntero_DESPLZ_der defw 0
  87  8615 00 00        Puntero_DESPLZ_izq defw 0
  88  8617
  89  8617 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  90  8619 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  91  861A
  92  861A              ; Variables de objeto. (Características).
  93  861A
  94  861A 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  95  861B 02           Vel_right db 2 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  96  861C 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  97  861D 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  98  861E
  99  861E 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 100  861F              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 101  861F              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 102  861F 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  8621 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  8623 00 00        	defw 0
 105  8625 00 00 00 00  	db 0,0,0,0
 106  8629
 107  8629 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  862B 00 00        	defw 0
 109  862D 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  862F 00 00 00 00  	db 0,0,0,0
 111  8633
 112  8633              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  8633
 114  8633 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  8634              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  8634              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  8634              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  8634              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  8634              ;
 120  8634              ; 														DESCRIPCIÖN:
 121  8634              ;
 122  8634              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  8634              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  8634              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  8634              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  8634              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  8634              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  8634              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  8634              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  8634              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  8634              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  8634              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  8634              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  8634              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  8634              ;
 136  8634              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  8634              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  8634              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  8634
 140  8634 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  8635
 142  8635              ; Movimiento.
 143  8635
 144  8635 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  8636 AE 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  8638 00 00        Puntero_mov defw 0
 147  863A 00           Contador_db_mov db 0
 148  863B 00           Incrementa_puntero db 0
 149  863C 00           Repetimos_db db 0
 150  863D
 151  863D              ; Variables de funcionamiento. [DRAW].
 152  863D
 153  863D 00           Columnas db 0
 154  863E 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  8640              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  8640 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  8641
 158  8641              ; variables de control general.
 159  8641
 160  8641 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 161  8642
 162  8642              ; 61 Bytes por entidad.
 163  8642              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 164  8642              ;					         		---------;      ;---------
 165  8642
 166  8642
 167  8642              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 168  8642
 169  8642 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 170  8643
 171  8643              ;														DESCRIPCIÓN:
 172  8643              ;
 173  8643              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 174  8643              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 175  8643              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 176  8643              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 177  8643              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 178  8643              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 179  8643
 180  8643              ; Gestión de ENTIDADES.
 181  8643
 182  8643              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 183  8643 00 00        Puntero_store_caja defw 0
 184  8645 00 00        Puntero_restore_caja defw 0
 185  8647 00 00        Indice_restore_caja defw 0
 186  8649 01           Numero_de_entidades db 1								; Nº de entidades en pantalla, (contando con Amadeus).
 187  864A 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 188  864B              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 189  864B              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 190  864B              ;														; _ (Numero_de_malotes)="0".
 191  864B 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 192  864D              ;														; _variable para almacenar lo posición del puntero_
 193  864D              ; 														; _de pila, SP.
 194  864D 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 195  864F              ;														; La utiliza la rutina [Extrae_foto_registros].
 196  864F 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 197  8651              ;														; _el snapshot de los registros de la siguiente entidad.
 198  8651              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 199  8651 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 200  8653              ;														; _el snapshot de los registros del siguiente disparo.
 201  8653              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 202  8653
 203  8653              ;---------------------------------------------------------------------------------------------------------------
 204  8653
 205  8653              ; Gestión de Disparos.
 206  8653
 207  8653 00           Numero_de_disparotes db 0
 208  8654 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 209  8656 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 210  8658 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 211  8659              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 212  8659              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 213  8659 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 214  865B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 215  865B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 216  865B              ;														; _produzca colisión.
 217  865B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 218  865D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 219  865D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 220  8660              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 221  8660 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 222  8663              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 223  8663
 224  8663              ;---------------------------------------------------------------------------------------------------------------
 225  8663
 226  8663              ; Relojes y temporizaciones.
 227  8663
 228  8663 01           Habilita_disparo_Amadeus db 1
 229  8664 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 230  8665 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 231  8666
 232  8666 01           Habilita_disparo_entidad db 1
 233  8667 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 234  8668 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 235  8669
 236  8669              ;---------------------------------------------------------------------------------------------------------------
 237  8669
 238  8669              ; Gestión de FRAMES.
 239  8669
 240  8669 00           Switch db 0
 241  866A
 242  866A              ; Variables de Raster y localización en pantalla.
 243  866A
 244  866A 00 FF        Temp_Raster defw $ff00
 245  866C
 246  866C              ;---------------------------------------------------------------------------------------------------------------
 247  866C
 248  866C              ; Gestión de NIVELES.
 249  866C
 250  866C 00 00        Puntero_indice_NIVELES defw 0
 251  866E 00 00        Datos_de_nivel defw 0
 252  8670
 253  8670
 254  8670              ; Y todo comienza aquí .....
 255  8670              ;
 256  8670              ; Rutina principal *************************************************************************************************************************************************************************
 257  8670              ;
 258  8670              ;	14/11/22
 259  8670
 260  8670              START
 261  8670
 262  8670 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 263  8673 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 264  8675 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 265  8677 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 266  8679 F3           	DI
 267  867A
 268  867A 3E 07        	ld a,%00000111
 269  867C CD C2 93     	call Cls
 270  867F
 271  867F CD F8 85     	call Inicia_puntero_indice_de_niveles
 272  8682
 273  8682
 274  8682
 275  8682              ;	call Pinta_FILAS
 276  8682
 277  8682 CD 68 89     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 278  8685
 279  8685 21 49 86     	ld hl,Numero_de_entidades
 280  8688 46           	ld b,(hl)
 281  8689 04           	inc b
 282  868A 05           	dec b
 283  868B 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 284  868D
 285  868D CD 36 88     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 286  8690              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 287  8690
 288  8690              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 289  8690              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 290  8690              ;	Pintamos el resto de entidades:
 291  8690
 292  8690              ;	INICIA ENTIDADES !!!!!
 293  8690
 294  8690 C5           1 push bc  												; Guardo el contador de entidades.
 295  8691 CD 90 88      	call Inicia_Puntero_objeto
 296  8694 CD 12 8E     	call Draw
 297  8697 CD A0 7F     	call Guarda_foto_registros
 298  869A CD D8 88     	call Store_Restore_cajas	 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 299  869D C1           	pop bc
 300  869E 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 301  86A0
 302  86A0              ; 	INICIA AMADEUS !!!!!
 303  86A0
 304  86A0 CD 3F 89     3 call Restore_Amadeus
 305  86A3 CD 90 88     	call Inicia_Puntero_objeto
 306  86A6 CD 12 8E     	call Draw
 307  86A9 CD A0 7F     	call Guarda_foto_registros
 308  86AC
 309  86AC 11 76 84     	ld de,Amadeus_db
 310  86AF CD 51 89     	call Store_Amadeus
 311  86B2
 312  86B2              ; 	INICIA DISPAROS !!!!!
 313  86B2
 314  86B2 CD 4C 88     	call Inicia_Puntero_Disparo_Entidades
 315  86B5 CD 53 88     	call Inicia_Puntero_Disparo_Amadeus
 316  86B8
 317  86B8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 318  86B8
 319  86B8 CD 36 88     	call Inicia_punteros_de_cajas
 320  86BB CD 18 89     	call Restore_entidad
 321  86BE
 322  86BE 3A 49 86     	ld a,(Numero_de_entidades)
 323  86C1 3C           	inc a
 324  86C2 32 4A 86     	ld (Numero_de_malotes),a
 325  86C5
 326  86C5              ;	xor a
 327  86C5
 328  86C5 FB           2 ei
 329  86C6 18 FD        	jr 2B
 330  86C8
 331  86C8              ;	ld hl,Ctrl_1
 332  86C8              ;	res 3,(hl)
 333  86C8              ;	jr START
 334  86C8
 335  86C8              ;	ret
 336  86C8              ; -----------------------------------------------------------------------------------
 337  86C8
 338  86C8              Frame
 339  86C8
 340  86C8              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 341  86C8              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 342  86C8
 343  86C8              ; PINTAMOS.
 344  86C8
 345  86C8 3E 02            ld a,2
 346  86CA D3 FE            out ($fe),a
 347  86CC CD 16 91     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 348  86CF CD 4F 91     	call Extrae_foto_disparos
 349  86D2 3E 01            ld a,1
 350  86D4 D3 FE            out ($fe),a
 351  86D6
 352  86D6              ; ----------------------------------------------------------------------
 353  86D6
 354  86D6              ; Debugggg para bucle!!!!!
 355  86D6              ;	ld a,(Numero_de_entidades)
 356  86D6              ;	and a
 357  86D6              ;	jr nz,13F
 358  86D6
 359  86D6              ;	ld a,1
 360  86D6              ;	ld (Numero_de_entidades),a
 361  86D6
 362  86D6              ;	ld a,(Ctrl_1)
 363  86D6              ;	set 3,a
 364  86D6              ;	ld (Ctrl_1),a
 365  86D6
 366  86D6              ;	ret
 367  86D6              ; Debugggg para bucle!!!!!
 368  86D6
 369  86D6
 370  86D6              ; RELOJES.
 371  86D6
 372  86D6 21 63 86     	ld hl,Habilita_disparo_Amadeus
 373  86D9 11 65 86     	ld de,Temporiza_disparo_Amadeus
 374  86DC CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 375  86DF
 376  86DF 21 66 86     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 377  86E2 11 68 86     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 378  86E5 CD D5 7F     	call Habilita_disparos
 379  86E8
 380  86E8              ; COLISIONES.
 381  86E8
 382  86E8 CD AC 8D     	call Selector_de_impactos
 383  86EB
 384  86EB              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 385  86EB              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 386  86EB              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 387  86EB
 388  86EB AF           	xor a
 389  86EC 32 58 86     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 390  86EF
 391  86EF CD 36 88     	call Inicia_punteros_de_cajas
 392  86F2 CD 18 89     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 393  86F5              ; 														; _ en DRAW.
 394  86F5 3A 05 86     	ld a,(Filas)
 395  86F8 A7           	and a
 396  86F9 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 397  86FB CD 2A 89     	call Incrementa_punteros_de_cajas
 398  86FE 18 F2        	jr 12B
 399  8700
 400  8700              ; ---------------------------------------------------------------------------------------
 401  8700
 402  8700 CD 2A 8C     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 403  8703 21 00 70     	ld hl,Album_de_fotos
 404  8706 22 4F 86         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 405  8709              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 406  8709 3A 49 86     	ld a,(Numero_de_entidades)
 407  870C 47               ld b,a
 408  870D A7           	and a
 409  870E 28 5B        	jr z,4F
 410  8710
 411  8710              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 412  8710
 413  8710              ; Código que ejecutamos con cada entidad:
 414  8710
 415  8710              ; Impacto ???
 416  8710
 417  8710 C5           2 push bc 												; Nº de entidades.
 418  8711
 419  8711 3A 1E 86     	ld a,(Impacto)
 420  8714 A7           	and a
 421  8715 28 0C        	jr z,8F
 422  8717
 423  8717              ; Hay Impacto en esta entidad.
 424  8717
 425  8717 CD ED 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 426  871A CD 5A 89     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 427  871D 21 49 86     	ld hl,Numero_de_entidades							; Una alimaña menos.
 428  8720 35           	dec (hl)
 429  8721
 430  8721 18 42        	jr 6F
 431  8723
 432  8723              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 433  8723              ; _con las coordenadas de la entidad almacenada en DRAW.
 434  8723
 435  8723 3A 42 86     8 ld a,(Ctrl_1)
 436  8726 CB 57        	bit 2,a
 437  8728 28 22        	jr z,7F
 438  872A
 439  872A 2A 5B 86     	ld hl,(Coordenadas_disparo_certero)
 440  872D EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 441  872E              ;														; E contiene la coordenada_X del disparo.
 442  872E 2A 0B 86     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 443  8731              ;														; H Coordenado_y de la entidad.
 444  8731 A7           	and a
 445  8732 ED 52        	sbc hl,de
 446  8734
 447  8734 CD E3 8D     	call Determina_resultado_comparativa
 448  8737 04           	inc b
 449  8738 05           	dec b
 450  8739
 451  8739              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 452  8739 28 FE        	jr z,$
 453  873B
 454  873B 28 0F        	jr z,7F
 455  873D
 456  873D              ; ----- ----- -----
 457  873D
 458  873D 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 459  873F 32 1E 86     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 460  8742 21 42 86     	ld hl,Ctrl_1
 461  8745 CB 96        	res 2,(hl)
 462  8747 21 5B 86     	ld hl,Coordenadas_disparo_certero
 463  874A 36 00        	ld (hl),0
 464  874C
 465  874C
 466  874C CD 9E 87     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 467  874F
 468  874F 3A 33 86     	ld a,(Ctrl_0)
 469  8752 CB 67        	bit 4,a
 470  8754 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 471  8756
 472  8756              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 473  8756              ; [[[
 474  8756 CD B3 89     	call Detecta_disparo_entidad
 475  8759              ; ]]]
 476  8759 CD FD 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 477  875C
 478  875C 21 33 86     	ld hl,Ctrl_0
 479  875F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 480  8761 AF           	xor a
 481  8762 32 34 86     	ld (Obj_dibujado),a
 482  8765
 483  8765 CD D8 88     6 call Store_Restore_cajas
 484  8768
 485  8768 C1           	pop bc
 486  8769 10 A5        	djnz 2B
 487  876B
 488  876B              ; Tras la gestión de las entidades, ... AMADEUS.
 489  876B
 490  876B CD 3F 89     4 call Restore_Amadeus
 491  876E
 492  876E 3A 1E 86     	ld a,(Impacto)
 493  8771 A7           	and a
 494  8772 20 FE        	jr nz,$
 495  8774
 496  8774              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 497  8774
 498  8774 CD CE 87     	call Mov_Amadeus
 499  8777
 500  8777 3A 33 86     	ld a,(Ctrl_0)
 501  877A CB 67        	bit 4,a
 502  877C 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 503  877E
 504  877E CD FD 87     	call Guarda_foto_entidad_a_pintar
 505  8781
 506  8781 21 33 86     3 ld hl,Ctrl_0
 507  8784 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 508  8786 AF           	xor a
 509  8787 32 34 86     	ld (Obj_dibujado),a
 510  878A
 511  878A 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 512  878D CD 51 89     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 513  8790
 514  8790 CD 48 8C     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 515  8793
 516  8793              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 517  8793
 518  8793 CD 72 88     	call Calcula_numero_de_disparotes
 519  8796 CD 5A 88     9 call Calcula_numero_de_malotes
 520  8799
 521  8799 3E 04        	ld a,4
 522  879B D3 FE        	out ($fe),a
 523  879D
 524  879D C9           	ret
 525  879E
 526  879E              ; --------------------------------------------------------------------------------------------------------------
 527  879E              ;
 528  879E              ;	27/03/23
 529  879E
 530  879E              Mov_obj
 531  879E
 532  879E              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 533  879E
 534  879E AF           	xor a
 535  879F 32 34 86     	ld (Obj_dibujado),a
 536  87A2 32 33 86     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 537  87A5              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 538  87A5              ; 														; _de la entidad.
 539  87A5 CD 07 88         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 540  87A8              ;														; Obj_dibujado="0".
 541  87A8              ; Movemos Entidades malignas.
 542  87A8
 543  87A8 21 36 86     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 544  87AB 34           	inc (hl)
 545  87AC 35           	dec (hl)                                            ; Salimos de la rutina.
 546  87AD C8           	ret z
 547  87AE
 548  87AE CD B0 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 549  87B1
 550  87B1 3A 33 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 551  87B4 CB 67        	bit 4,a
 552  87B6 C8           	ret z
 553  87B7
 554  87B7              ; Ha habido desplazamiento de la entidad maligna.
 555  87B7              ; Ha llegado a zona de AMADEUS ???
 556  87B7
 557  87B7 3A 0C 86     	ld a,(Coordenada_y)
 558  87BA FE 14        	cp $14
 559  87BC D4 79 8B     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 560  87BF              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 561  87BF              ; ---------
 562  87BF
 563  87BF 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 564  87C1 32 34 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 565  87C4 CD 07 88         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 566  87C7 CD 1E 88         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 567  87CA CD ED 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 568  87CD C9           	ret													; _de la misma.
 569  87CE
 570  87CE              ; --------------------------------------------------------------------------------------------------------------
 571  87CE              ;
 572  87CE              ;	29/1/23
 573  87CE
 574  87CE              Mov_Amadeus
 575  87CE
 576  87CE AF           	xor a
 577  87CF 32 34 86     	ld (Obj_dibujado),a
 578  87D2 CD 07 88         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 579  87D5              ;														; Obj_dibujado="0".
 580  87D5              ; Movemos Amadeus.
 581  87D5
 582  87D5 CD 7C 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 583  87D8 3A 33 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 584  87DB CB 67        	bit 4,a
 585  87DD C8           	ret z
 586  87DE
 587  87DE              ; ---------
 588  87DE
 589  87DE 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 590  87E0 32 34 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 591  87E3 CD 07 88         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 592  87E6 CD 1E 88         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 593  87E9 CD ED 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 594  87EC C9           	ret													; _de la nave.
 595  87ED
 596  87ED              ; --------------------------------------------------------------------------------------------------------------
 597  87ED              ;
 598  87ED              ;	31/01/23
 599  87ED              ;
 600  87ED              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 601  87ED
 602  87ED              Guarda_foto_entidad_a_borrar
 603  87ED
 604  87ED CD EC 90     	call Prepara_draw
 605  87F0 CD 26 90     	call calcula_CColumnass
 606  87F3 CD 5D 90     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 607  87F6 CD B2 90     	call Define_rutina_de_impresion
 608  87F9 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 609  87FC C9           	ret
 610  87FD
 611  87FD              ; --------------------------------------------------------------------------------------------------------------
 612  87FD              ;
 613  87FD              ;	31/01/23
 614  87FD              ;
 615  87FD              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 616  87FD              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 617  87FD
 618  87FD              Guarda_foto_entidad_a_pintar
 619  87FD
 620  87FD CD 2A 88     	call Repone_pintar
 621  8800 CD 12 8E     	call Draw
 622  8803 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 623  8806 C9           	ret
 624  8807
 625  8807              ; --------------------------------------------------------------------------------------------------------------
 626  8807              ;
 627  8807              ;
 628  8807
 629  8807 21 05 86     Prepara_var_pintado_borrado	ld hl,Filas
 630  880A 3A 34 86     	ld a,(Obj_dibujado)
 631  880D A7           	and a
 632  880E 28 05        	jr z,1F
 633  8810 11 29 86     	ld de,Variables_de_pintado
 634  8813 18 03        	jr 2F
 635  8815 11 1F 86     1 ld de,Variables_de_borrado
 636  8818 01 08 00     2 ld bc,8
 637  881B ED B0        	ldir
 638  881D C9           	ret
 639  881E
 640  881E              ; --------------------------------------------------------------------------------------------------------------
 641  881E
 642  881E 21 1F 86     Repone_borrar ld hl,Variables_de_borrado
 643  8821 11 05 86     	ld de,Filas
 644  8824 01 08 00     	ld bc,8
 645  8827 ED B0        	ldir
 646  8829 C9           	ret
 647  882A
 648  882A 21 29 86     Repone_pintar ld hl,Variables_de_pintado
 649  882D 11 05 86     	ld de,Filas
 650  8830 01 08 00     	ld bc,8
 651  8833 ED B0        	ldir
 652  8835 C9           	ret
 653  8836
 654  8836              ; *************************************************************************************************************************************************************
 655  8836              ;
 656  8836              ; 8/1/23
 657  8836              ;
 658  8836              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 659  8836              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 660  8836              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 661  8836
 662  8836              ; Destruye HL y DE !!!!!
 663  8836
 664  8836              Inicia_punteros_de_cajas
 665  8836
 666  8836 21 68 84     	ld hl,Indice_de_cajas
 667  8839 CD 8A 88         call Extrae_address
 668  883C 22 43 86         ld (Puntero_store_caja),hl
 669  883F 21 6A 84     	ld hl,Indice_de_cajas+2
 670  8842 22 47 86     	ld (Indice_restore_caja),hl
 671  8845 CD 8A 88     	call Extrae_address
 672  8848 22 45 86     	ld (Puntero_restore_caja),hl
 673  884B C9               ret
 674  884C
 675  884C              ; *************************************************************************************************************************************************************
 676  884C              ;
 677  884C              ; 8/1/23
 678  884C              ;
 679  884C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 680  884C
 681  884C 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 682  884F 22 54 86     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 683  8852 C9           	ret
 684  8853 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 685  8856 22 56 86     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 686  8859 C9           	ret
 687  885A
 688  885A              ; -------------------------------------------------------------------------------------------------------------
 689  885A              ;
 690  885A              ; 28/2/23
 691  885A              ;
 692  885A
 693  885A              Calcula_numero_de_malotes
 694  885A
 695  885A 21 00 70     	ld hl,Album_de_fotos
 696  885D EB           	ex de,hl
 697  885E 2A 4F 86     	ld hl,(Stack_snapshot)
 698  8861
 699  8861 06 00        	ld b,0
 700  8863 7D           	ld a,l
 701  8864 93           	sub e
 702  8865 28 07        	jr z,1F
 703  8867
 704  8867              ; Nº de malotes no es "0".
 705  8867
 706  8867 D6 06        2 sub 6
 707  8869 04           	inc b
 708  886A A7           	and a
 709  886B 20 FA        	jr nz,2B
 710  886D 78           	ld a,b
 711  886E
 712  886E 32 4A 86     1 ld (Numero_de_malotes),a
 713  8871 C9           	ret
 714  8872
 715  8872              ; -------------------------------------------------------------------------------------------------------------
 716  8872              ;
 717  8872              ; 28/2/23
 718  8872              ;
 719  8872
 720  8872              Calcula_numero_de_disparotes
 721  8872
 722  8872 21 60 70     	ld hl,Album_de_fotos_disparos
 723  8875 EB           	ex de,hl
 724  8876 2A 51 86     	ld hl,(Stack_snapshot_disparos)
 725  8879
 726  8879 06 00        	ld b,0
 727  887B 7D           	ld a,l
 728  887C 93           	sub e
 729  887D 28 07        	jr z,1F
 730  887F
 731  887F              ; Nº de malotes no es "0".
 732  887F
 733  887F D6 06        2 sub 6
 734  8881 04           	inc b
 735  8882 A7           	and a
 736  8883 20 FA        	jr nz,2B
 737  8885 78           	ld a,b
 738  8886
 739  8886 32 53 86     1 ld (Numero_de_disparotes),a
 740  8889 C9           	ret
 741  888A              ; *************************************************************************************************************************************************************
 742  888A              ;
 743  888A              ; 20/10/22
 744  888A              ;
 745  888A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 746  888A              ;
 747  888A              ; Destruye el puntero y DE !!!!!
 748  888A
 749  888A 5E           Extrae_address ld e,(hl)
 750  888B 23           	inc hl
 751  888C 56           	ld d,(hl)
 752  888D 2B           	dec hl
 753  888E EB           	ex de,hl
 754  888F C9           	ret
 755  8890
 756  8890              ; *************************************************************************************************************************************************************
 757  8890              ;
 758  8890              ;	7/2/23
 759  8890              ;
 760  8890              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 761  8890              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 762  8890              ;
 763  8890              ;   Destruye HL y BC !!!!!,
 764  8890              ;
 765  8890              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 766  8890              ;					"0" ..... Izquierda.
 767  8890
 768  8890              Inicia_Puntero_objeto
 769  8890
 770  8890 3A 19 86     	ld a,(Cuad_objeto)
 771  8893 E6 01        	and 1
 772  8895 F5           	push af
 773  8896 CC B4 88     	call z,Inicia_puntero_objeto_izq
 774  8899 F1           	pop af
 775  889A 28 2B        	jr z,1F
 776  889C CD A1 88     	call Inicia_puntero_objeto_der
 777  889F 18 26        	jr 1F
 778  88A1
 779  88A1              ; Arrancamos desde la parte izquierda de la pantalla.
 780  88A1              ; Iniciamos (Indice_Sprite_der).
 781  88A1
 782  88A1 2A 0F 86     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 783  88A4 22 13 86     	ld (Puntero_DESPLZ_der),hl
 784  88A7 CD 8A 88     	call Extrae_address
 785  88AA 22 09 86     	ld (Puntero_objeto),hl
 786  88AD
 787  88AD 2A 11 86     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 788  88B0 22 15 86     	ld (Puntero_DESPLZ_izq),hl
 789  88B3 C9           	ret
 790  88B4
 791  88B4              ; Arrancamos desde la parte derecha de la pantalla.
 792  88B4              ; Iniciamos (Indice_Sprite_izq).
 793  88B4
 794  88B4 2A 11 86     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 795  88B7 22 15 86     	ld (Puntero_DESPLZ_izq),hl
 796  88BA CD 8A 88     	call Extrae_address
 797  88BD 22 09 86     	ld (Puntero_objeto),hl
 798  88C0
 799  88C0 2A 0F 86     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 800  88C3 22 13 86     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 801  88C6 C9           	ret
 802  88C7
 803  88C7              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 804  88C7
 805  88C7 21 38 83     1 ld hl,Amadeus
 806  88CA ED 4B 09 86  	ld bc,(Puntero_objeto)
 807  88CE B7 ED 42     	sub hl,bc
 808  88D1 C0           	ret nz
 809  88D2 21 33 86     	ld hl,Ctrl_0
 810  88D5 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 811  88D7 C9           	ret 												; _de nuestra nave en los extremos.
 812  88D8
 813  88D8              ; *************************************************************************************************************************************************************
 814  88D8              ;
 815  88D8              ;	8/1/23
 816  88D8              ;
 817  88D8              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 818  88D8              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 819  88D8
 820  88D8              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 821  88D8              ;	_de la 2ª y 3ª entidad respectivamente.
 822  88D8
 823  88D8              Store_Restore_cajas
 824  88D8
 825  88D8 3A 49 86     	ld a,(Numero_de_entidades)
 826  88DB A7           	and a
 827  88DC C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 828  88DD
 829  88DD E5           	push hl
 830  88DE D5           	push de
 831  88DF C5            	push bc
 832  88E0
 833  88E0              ;	STORE !!!!!
 834  88E0              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 835  88E0
 836  88E0 21 05 86     	ld hl,Filas
 837  88E3 ED 5B 43 86  	ld de,(Puntero_store_caja) 					; Puntero que se desplaza por las distintas entidades.
 838  88E7 01 3D 00     	ld bc,61
 839  88EA ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 840  88EC
 841  88EC              ; 	Entidad_sospechosa. 20/4/23
 842  88EC
 843  88EC 3A 1E 86     	ld a,(Impacto)
 844  88EF A7           	and a
 845  88F0 28 0C        	jr z,1F
 846  88F2
 847  88F2 2A 43 86     	ld hl,(Puntero_store_caja) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 848  88F5 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 849  88F8 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 850  88F9 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 851  88FB 22 59 86     	ld (Entidad_sospechosa_de_colision),hl
 852  88FE
 853  88FE              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 854  88FE
 855  88FE 2A 45 86     1 ld hl,(Puntero_restore_caja)
 856  8901 7E           	ld a,(hl)
 857  8902 A7           	and a
 858  8903 F5           	push af
 859  8904 28 08        	jr z,2F
 860  8906
 861  8906 11 05 86     	ld de,Filas
 862  8909 01 3D 00     	ld bc,61
 863  890C ED B0        	ldir
 864  890E
 865  890E CD 2A 89     2 call Incrementa_punteros_de_cajas
 866  8911 F1           	pop af
 867  8912 28 EA        	jr z,1B
 868  8914
 869  8914 C1           	pop bc
 870  8915 D1           	pop de
 871  8916 E1           	pop hl
 872  8917
 873  8917 C9           	ret
 874  8918
 875  8918              ; **************************************************************************************************
 876  8918              ;
 877  8918              ;	12/05/23
 878  8918              ;
 879  8918              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 880  8918
 881  8918 E5           Restore_entidad push hl
 882  8919 D5           	push de
 883  891A C5            	push bc
 884  891B
 885  891B 2A 43 86     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 886  891E 11 05 86     	ld de,Filas
 887  8921 01 3D 00     	ld bc,61
 888  8924 ED B0        	ldir
 889  8926
 890  8926 C1           	pop bc
 891  8927 D1           	pop de
 892  8928 E1           	pop hl
 893  8929 C9           	ret
 894  892A
 895  892A
 896  892A              ; **************************************************************************************************
 897  892A              ;
 898  892A              ;	08/05/23
 899  892A              ;
 900  892A              ;	Incrementamos los dos punteros de entidades. (+1).
 901  892A
 902  892A 2A 45 86     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 903  892D 22 43 86     	ld (Puntero_store_caja),hl
 904  8930 2A 47 86     	ld hl,(Indice_restore_caja)
 905  8933 23           	inc hl
 906  8934 23           	inc hl
 907  8935 22 47 86     	ld (Indice_restore_caja),hl
 908  8938 CD 8A 88         call Extrae_address
 909  893B 22 45 86         ld (Puntero_restore_caja),hl
 910  893E C9               ret
 911  893F
 912  893F              ; **************************************************************************************************
 913  893F              ;
 914  893F              ;	25/01/23
 915  893F              ;
 916  893F              ;	Restore_Amadeus
 917  893F              ;
 918  893F              ;	Cargamos en DRAW los parámetros de Amadeus.
 919  893F              ;
 920  893F
 921  893F E5           Restore_Amadeus	push hl
 922  8940 D5           	push de
 923  8941 C5            	push bc
 924  8942 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 925  8945 11 05 86     	ld de,Filas
 926  8948 01 3D 00     	ld bc,61
 927  894B ED B0        	ldir
 928  894D C1           	pop bc
 929  894E D1           	pop de
 930  894F E1           	pop hl
 931  8950 C9           	ret
 932  8951
 933  8951              ; *************************************************************************************************************************************************************
 934  8951              ;
 935  8951              ;	29/04/23
 936  8951              ;
 937  8951              ;	Store_Amadeus
 938  8951              ;
 939  8951              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 940  8951              ;
 941  8951              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 942  8951              ;
 943  8951              ;	DESTRUYE: HL y BC y DE.
 944  8951
 945  8951 21 05 86     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 946  8954 01 3D 00     	ld bc,61
 947  8957 ED B0        	ldir
 948  8959 C9           	ret
 949  895A
 950  895A              ; -----------------------------------------------------------
 951  895A              ;
 952  895A              ;	27/04/23
 953  895A              ;
 954  895A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 955  895A              ;
 956  895A              ;	Destruye: HL,BC,DE,A
 957  895A
 958  895A 21 05 86     Borra_datos_entidad ld hl,Filas
 959  895D 01 3C 00     	ld bc,60
 960  8960 AF           	xor a
 961  8961 77           	ld (hl),a
 962  8962 11 06 86     	ld de,Filas+1
 963  8965 ED B0        	ldir
 964  8967 C9           	ret
 965  8968
 966  8968              ; -----------------------------------------------------------
 967  8968
 968  8968              ; Teclado.
 969  8968
 970  8968 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 971  896A DB FE        	in a,($fe)
 972  896C E6 01        	and $01
 973  896E 28 02        	jr z,1f
 974  8970 18 F6        	jr Pulsa_ENTER
 975  8972 C9           1 ret
 976  8973
 977  8973              ; **************************************************************************************************
 978  8973              ;
 979  8973              ; Temporización.
 980  8973
 981  8973              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 982  8973              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 983  8973              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 984  8973              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 985  8973
 986  8973              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 987  8973              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 988  8973              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 989  8973
 990  8973              ; A partir de $4f61 no hace falta DELAY.
 991  8973
 992  8973              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 993  8973
 994  8973 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 995  8976 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 996  8977 78           	LD A,B
 997  8978 A7           	AND A
 998  8979 20 FB        	JR NZ,wait
 999  897B C9           	RET
1000  897C
1001  897C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1002  897C              ;
1003  897C              ;	5/3/23
1004  897C              ;
1005  897C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1006  897C
1007  897C              Movimiento_Amadeus
1008  897C
1009  897C              ; Disparo.
1010  897C
1011  897C 3A 63 86     	ld a,(Habilita_disparo_Amadeus)
1012  897F A7           	and a
1013  8980 20 02        	jr nz,1F
1014  8982 18 15        	jr 2F
1015  8984
1016  8984 3E F7        1 ld a,$f7													; "5" para disparar.
1017  8986 DB FE        	in a,($fe)
1018  8988 E6 10        	and $10
1019  898A
1020  898A F5           	push af
1021  898B CC F5 89     	call z,Genera_disparo
1022  898E F1           	pop af
1023  898F 20 08        	jr nz,2F
1024  8991
1025  8991 3A 63 86     	ld a,(Habilita_disparo_Amadeus)
1026  8994 EE 01        	xor 1
1027  8996 32 63 86     	ld (Habilita_disparo_Amadeus),a
1028  8999
1029  8999 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1030  899B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1031  899D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1032  899F CC 50 95         call z,Mov_left											;			"			"			"			"			"			"			"			"
1033  89A2 3E F7        	ld a,$f7
1034  89A4 DB FE        	in a,($fe)
1035  89A6 E6 01        	and $01
1036  89A8 C8           	ret z
1037  89A9
1038  89A9 3E F7        	ld a,$f7
1039  89AB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1040  89AD E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1041  89AF CC 32 94     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1042  89B2 C9           	ret
1043  89B3
1044  89B3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1045  89B3              ;
1046  89B3              ;	Rutina provisional para que los malotes cagen balas.
1047  89B3
1048  89B3              Detecta_disparo_entidad
1049  89B3
1050  89B3 3A 66 86     	ld a,(Habilita_disparo_entidad)
1051  89B6 A7           	and a
1052  89B7 C8           	ret z
1053  89B8 3E 7F        	ld a,$7f
1054  89BA DB FE        	in a,($fe)
1055  89BC E6 01        	and 1
1056  89BE C0           	ret nz
1057  89BF CD F5 89     	call Genera_disparo
1058  89C2 C9           	ret
1059  89C3
1060  89C3              ; Pinta indicadores de FILAS. ------------------------------------------------------
1061  89C3
1062  89C3 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1063  89C6
1064  89C6              ; ----------
1065  89C6 06 20        	ld b,32
1066  89C8 E5           2 push hl
1067  89C9 C5           	push bc
1068  89CA              ; ----------
1069  89CA
1070  89CA 06 BF        	ld b,$bf
1071  89CC 36 80        1 ld (hl),%10000000
1072  89CE CD F8 90     	call NextScan
1073  89D1 10 F9        	djnz 1B
1074  89D3
1075  89D3              ; ----------
1076  89D3 C1           	pop bc
1077  89D4 E1           	pop hl
1078  89D5 2C           	inc l
1079  89D6 10 F0        	djnz 2B
1080  89D8              ; ----------
1081  89D8
1082  89D8 06 03        	ld b,3
1083  89DA 21 00 47         ld hl,$4700
1084  89DD CD E3 89     3 call Bucle_1
1085  89E0 10 FB            djnz 3B
1086  89E2 C9               ret
1087  89E3
1088  89E3 C5           Bucle_1 push bc
1089  89E4 E5                   push hl
1090  89E5 D1                   pop de
1091  89E6 13                   inc de
1092  89E7 01 FF 00             ld bc,255
1093  89EA 36 FF                ld (hl),255
1094  89EC ED B0                ldir
1095  89EE 23                   inc hl
1096  89EF 3E 07                ld a,7
1097  89F1 84                   add a,h
1098  89F2 67                   ld h,a
1099  89F3 C1                   pop bc
1100  89F4 C9                   ret
1101  89F5
1102  89F5              ; ---------------------------------------------------------------
1103  89F5
1104  89F5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 89F5              ; ******************************************************************************************************************************************************************************************
   2+ 89F5              ;
   3+ 89F5              ;   17/04/23
   4+ 89F5              ;
   5+ 89F5              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 89F5              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 89F5              ;
   8+ 89F5              ;
   9+ 89F5              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 89F5              ;
  11+ 89F5              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 89F5              ;               _ hacen las entidades hacia abajo.
  13+ 89F5              ;
  14+ 89F5              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 89F5              ;
  16+ 89F5              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 89F5              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 89F5              ;
  19+ 89F5              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 89F5              ;           _ la bala.
  21+ 89F5              ;
  22+ 89F5              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 89F5              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 89F5              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 89F5              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 89F5              ;           _ en el momento de generarse la bala)).
  27+ 89F5
  28+ 89F5              Genera_disparo
  29+ 89F5
  30+ 89F5              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 89F5              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 89F5              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 89F5              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 89F5              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 89F5              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 89F5              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 89F5
  38+ 89F5              ; Exclusiones:
  39+ 89F5
  40+ 89F5 3A 3D 86         ld a,(Columnas)
  41+ 89F8 47               ld b,a
  42+ 89F9 3A 06 86         ld a,(Columns)
  43+ 89FC B8               cp b
  44+ 89FD C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 89FE
  46+ 89FE              ; ----- ----- -----
  47+ 89FE
  48+ 89FE 3A 33 86         ld a,(Ctrl_0)
  49+ 8A01 CB 77            bit 6,a
  50+ 8A03 20 06            jr nz,14F
  51+ 8A05
  52+ 8A05 3A 0C 86         ld a,(Coordenada_y)
  53+ 8A08 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8A0A D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8A0B
  56+ 8A0B 21 00 80     14 ld hl,Indice_disparo
  57+ 8A0E 3A 0D 86         ld a,(CTRL_DESPLZ)
  58+ 8A11 4F               ld c,a
  59+ 8A12 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8A14              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8A14              ;                                            ""        ""       "f9", B="1"
  62+ 8A14              ;                                            ""        ""       "fb", B="2"
  63+ 8A14              ;                                            ""        ""       "fb", B="3"
  64+ 8A14 A7               and a
  65+ 8A15 28 10            jr z,1F
  66+ 8A17 E6 01            and 1
  67+ 8A19 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8A1A
  69+ 8A1A 79               ld a,c
  70+ 8A1B 16 F9            ld d,$f9
  71+ 8A1D 23           2 inc hl
  72+ 8A1E 23               inc hl
  73+ 8A1F 04               inc b
  74+ 8A20 BA               cp d
  75+ 8A21 28 04            jr z,1F
  76+ 8A23 14               inc d
  77+ 8A24 14               inc d
  78+ 8A25 18 F6            jr 2B
  79+ 8A27
  80+ 8A27 CD 8A 88     1 call Extrae_address
  81+ 8A2A E5               push hl
  82+ 8A2B FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8A2D DD 21 8B 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8A31
  85+ 8A31              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8A31              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8A31
  88+ 8A31 3A 33 86         ld a,(Ctrl_0)
  89+ 8A34 CB 77            bit 6,a
  90+ 8A36 20 04            jr nz,19F
  91+ 8A38
  92+ 8A38 AF               xor a
  93+ 8A39 32 66 86         ld (Habilita_disparo_entidad),a
  94+ 8A3C
  95+ 8A3C 3A 19 86     19 ld a,(Cuad_objeto)
  96+ 8A3F FE 02            cp 2
  97+ 8A41 38 66            jr c,3F
  98+ 8A43 28 64            jr z,3F
  99+ 8A45
 100+ 8A45              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8A45
 102+ 8A45 E6 01            and 1
 103+ 8A47 28 30            jr z,4F
 104+ 8A49
 105+ 8A49              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8A49              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8A49              ;
 108+ 8A49              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8A49              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8A49              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8A49
 112+ 8A49 2A 07 86     	ld hl,(Posicion_actual)
 113+ 8A4C
 114+ 8A4C              ;   Amadeus o entidad ???.
 115+ 8A4C
 116+ 8A4C 3A 33 86         ld a,(Ctrl_0)
 117+ 8A4F CB 77            bit 6,a
 118+ 8A51 28 0A            jr z,8F
 119+ 8A53
 120+ 8A53              ; 	Dispara Amadeus.
 121+ 8A53
 122+ 8A53 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8A55 CD 07 91         call PreviousScan
 124+ 8A58 CD 07 91         call PreviousScan
 125+ 8A5B
 126+ 8A5B              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8A5B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8A5B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8A5B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8A5B
 131+ 8A5B 18 11            jr 10F
 132+ 8A5D
 133+ 8A5D              ; 	Dispara Entidad.
 134+ 8A5D
 135+ 8A5D 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8A60              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8A60
 138+ 8A60              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8A60              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8A60
 141+ 8A60 C5               push bc
 142+ 8A61 06 10            ld b,16
 143+ 8A63 CD F8 90     9 call NextScan
 144+ 8A66 10 FB            djnz 9B
 145+ 8A68 C1               pop bc
 146+ 8A69 CD D3 8A         call Ajusta_disparo_parte_izquierda
 147+ 8A6C 18 06            jr 17F
 148+ 8A6E
 149+ 8A6E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8A6E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8A6E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8A6E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8A6E
 154+ 8A6E CD D3 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 8A71 CD 48 8B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8A74              ;                                                      ; _al generar el disparo.
 157+ 8A74
 158+ 8A74              ; 	LLegados a este punto tendremos:
 159+ 8A74              ;
 160+ 8A74              ;       Puntero_objeto_disparo en IY.
 161+ 8A74              ;       Rutinas_de_impresion en IX.
 162+ 8A74              ;       Puntero_de_impresion en HL.
 163+ 8A74              ;       Impacto/Dirección en BC.
 164+ 8A74
 165+ 8A74 CD DB 8A     17 call Almacena_disparo
 166+ 8A77 18 52            jr 6F                                             ; RET.
 167+ 8A79
 168+ 8A79              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8A79              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8A79              ;
 171+ 8A79              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8A79              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8A79              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8A79
 175+ 8A79 2A 07 86     4 ld hl,(Posicion_actual)
 176+ 8A7C
 177+ 8A7C              ;   Amadeus o entidad ???.
 178+ 8A7C
 179+ 8A7C 3A 33 86         ld a,(Ctrl_0)
 180+ 8A7F CB 77            bit 6,a
 181+ 8A81 28 0A            jr z,11F
 182+ 8A83
 183+ 8A83              ; 	Dispara Amadeus.
 184+ 8A83
 185+ 8A83 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A85 CD 07 91         call PreviousScan
 187+ 8A88 CD 07 91         call PreviousScan
 188+ 8A8B
 189+ 8A8B              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A8B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A8B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A8B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A8B
 194+ 8A8B 18 11            jr 13F
 195+ 8A8D
 196+ 8A8D              ; 	Dispara Entidad.
 197+ 8A8D
 198+ 8A8D 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A90              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A90
 201+ 8A90              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A90              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A90
 204+ 8A90 C5               push bc
 205+ 8A91 06 10            ld b,16
 206+ 8A93 CD F8 90     12 call NextScan
 207+ 8A96 10 FB            djnz 12B
 208+ 8A98 C1               pop bc
 209+ 8A99
 210+ 8A99 CD CC 8A         call Ajusta_disparo_parte_derecha
 211+ 8A9C 18 06            jr 18F
 212+ 8A9E
 213+ 8A9E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A9E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A9E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A9E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A9E
 218+ 8A9E CD CC 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8AA1 CD 48 8B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8AA4              ;                                                       ; _al generar el disparo.
 221+ 8AA4
 222+ 8AA4              ; LLegados a este punto tendremos:
 223+ 8AA4              ;
 224+ 8AA4              ;       Puntero_objeto_disparo en IY.
 225+ 8AA4              ;       Rutinas_de_impresion en IX.
 226+ 8AA4              ;       Puntero_de_impresion en HL.
 227+ 8AA4              ;       Impacto/Dirección en BC.
 228+ 8AA4
 229+ 8AA4 CD DB 8A     18 call Almacena_disparo
 230+ 8AA7 18 22            jr 6F                                               ; RET.
 231+ 8AA9
 232+ 8AA9              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8AA9
 234+ 8AA9 28 11        3 jr z,5F
 235+ 8AAB
 236+ 8AAB              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8AAB              ;
 238+ 8AAB              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8AAB              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8AAB              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8AAB              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8AAB
 243+ 8AAB              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8AAB              ;	   ""        ""       "f9", B="1"
 245+ 8AAB              ;	   ""        ""       "fb", B="2"
 246+ 8AAB              ; 	   ""        ""       "fb", B="3"
 247+ 8AAB
 248+ 8AAB 2A 07 86     	ld hl,(Posicion_actual)
 249+ 8AAE CD F8 90     	call NextScan
 250+ 8AB1
 251+ 8AB1              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8AB1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8AB1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8AB1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8AB1
 256+ 8AB1 CD D3 8A         call Ajusta_disparo_parte_izquierda
 257+ 8AB4
 258+ 8AB4              ; 	No se produce impacto. B="$80"
 259+ 8AB4              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8AB4
 261+ 8AB4 01 80 80         ld bc,$8080
 262+ 8AB7
 263+ 8AB7              ; 	LLegados a este punto tendremos:
 264+ 8AB7              ;
 265+ 8AB7              ;       Puntero_objeto_disparo en IY.
 266+ 8AB7              ;       Rutinas_de_impresion en IX.
 267+ 8AB7              ;       Puntero_de_impresion en HL.
 268+ 8AB7              ;       Impacto/Dirección en BC.
 269+ 8AB7
 270+ 8AB7 CD DB 8A         call Almacena_disparo
 271+ 8ABA 18 0F            jr 6F                                           ; RET.
 272+ 8ABC
 273+ 8ABC              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8ABC              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8ABC              ;
 276+ 8ABC              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8ABC              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8ABC              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8ABC              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8ABC
 281+ 8ABC 2A 07 86     5 ld hl,(Posicion_actual)
 282+ 8ABF CD F8 90     	call NextScan
 283+ 8AC2
 284+ 8AC2              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8AC2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8AC2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8AC2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8AC2
 289+ 8AC2 CD CC 8A         call Ajusta_disparo_parte_derecha
 290+ 8AC5
 291+ 8AC5              ; 	No se produce impacto. B="$80"
 292+ 8AC5              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8AC5
 294+ 8AC5 01 80 80     15 ld bc,$8080
 295+ 8AC8
 296+ 8AC8              ; 	LLegados a este punto tendremos:
 297+ 8AC8              ;
 298+ 8AC8              ;       Puntero_objeto_disparo en IY.
 299+ 8AC8              ;       Rutinas_de_impresion en IX.
 300+ 8AC8              ;       Puntero_de_impresion en HL.
 301+ 8AC8              ;       Impacto/Dirección en BC.
 302+ 8AC8
 303+ 8AC8 CD DB 8A         call Almacena_disparo
 304+ 8ACB
 305+ 8ACB C9           6 ret
 306+ 8ACC
 307+ 8ACC              ; ----------------------------------------------------------------
 308+ 8ACC              ;
 309+ 8ACC              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8ACC              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8ACC              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8ACC
 313+ 8ACC 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8ACD FE 02            cp 2
 315+ 8ACF 38 01            jr c,1F
 316+ 8AD1 23               inc hl
 317+ 8AD2 C9           1 ret
 318+ 8AD3
 319+ 8AD3 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8AD4 FE 01        	cp 1
 321+ 8AD6 20 01        	jr nz,1F
 322+ 8AD8 2B           	dec hl
 323+ 8AD9 2B           1 dec hl
 324+ 8ADA C9               ret
 325+ 8ADB
 326+ 8ADB              ; ----------------------------------------------------------------
 327+ 8ADB              ;
 328+ 8ADB              ;   25/02/23
 329+ 8ADB              ;
 330+ 8ADB              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8ADB              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8ADB              ;
 333+ 8ADB              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8ADB              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8ADB
 336+ 8ADB              Almacena_disparo
 337+ 8ADB
 338+ 8ADB E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8ADC F1               pop af
 340+ 8ADD 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8ADE
 342+ 8ADE 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8ADF E6 01            and 1
 344+ 8AE1 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8AE3              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8AE3              ; 	Dispara AMADEUS.
 347+ 8AE3
 348+ 8AE3              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8AE3              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8AE3              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8AE3              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8AE3
 353+ 8AE3 C5               push bc
 354+ 8AE4 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8AE7 2A 56 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8AEA A7               and a
 357+ 8AEB ED 42            sbc hl,bc
 358+ 8AED CC 53 88         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8AF0 C1               pop bc
 360+ 8AF1 28 54            jr z,4F
 361+ 8AF3
 362+ 8AF3 2A 56 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8AF6 23               inc hl
 364+ 8AF7 23               inc hl
 365+ 8AF8 22 56 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8AFB              ;                                                   ; _ Disparo_(+1).
 367+ 8AFB 18 18            jr 2F
 368+ 8AFD
 369+ 8AFD              ; Dispara una entidad.
 370+ 8AFD
 371+ 8AFD C5           1 push bc
 372+ 8AFE 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8B01 2A 54 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8B04 A7               and a
 375+ 8B05 ED 42            sbc hl,bc
 376+ 8B07 CC 4C 88         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8B0A C1               pop bc
 378+ 8B0B 28 3A            jr z,4F
 379+ 8B0D
 380+ 8B0D 2A 54 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8B10 23               inc hl
 382+ 8B11 23               inc hl
 383+ 8B12 22 54 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8B15              ;                                                   ; _ Disparo_(+1).
 385+ 8B15 CD 8A 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8B18              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8B18              ;
 388+ 8B18              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8B18              ;                                                     Rutinas_de_impresion en IX.
 390+ 8B18              ;                                                     Puntero_de_impresion en HL.
 391+ 8B18              ;                                                     Impacto/Dirección en BC.
 392+ 8B18
 393+ 8B18 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8B19 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8B1A 23               inc hl                                          ; _ al siguiente.
 396+ 8B1B A7               and a
 397+ 8B1C 20 C0            jr nz,3B
 398+ 8B1E
 399+ 8B1E 08               ex af,af
 400+ 8B1F ED 73 4B 86      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8B23 F9               ld sp,hl
 402+ 8B24
 403+ 8B24 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8B26 F5               push af                                         ; Puntero de impresión.
 405+ 8B27 FD E5            push iy                                         ; Puntero objeto.
 406+ 8B29 C5               push bc                                         ; Control.
 407+ 8B2A
 408+ 8B2A ED 7B 4B 86      ld sp,(Stack)
 409+ 8B2E
 410+ 8B2E              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8B2E
 412+ 8B2E 21 42 86     	ld hl,Ctrl_1
 413+ 8B31 CB C6        	set 0,(hl)
 414+ 8B33
 415+ 8B33 DD E5        	push ix
 416+ 8B35 E1               pop hl
 417+ 8B36 F5               push af
 418+ 8B37 DD E1            pop ix
 419+ 8B39
 420+ 8B39 CD A0 7F     	call Guarda_foto_registros
 421+ 8B3C
 422+ 8B3C 21 42 86     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8B3F CB 86        	res 0,(hl)
 424+ 8B41
 425+ 8B41              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8B41              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8B41
 428+ 8B41 CD 53 88         call Inicia_Puntero_Disparo_Amadeus
 429+ 8B44 CD 4C 88         call Inicia_Puntero_Disparo_Entidades
 430+ 8B47
 431+ 8B47 C9           4 ret
 432+ 8B48
 433+ 8B48              ; ----------------------------------------------------------------
 434+ 8B48              ;
 435+ 8B48              ;   4/3/23
 436+ 8B48              ;
 437+ 8B48              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8B48              ;   _ al generarse el disparo.
 439+ 8B48              ;
 440+ 8B48              ;       "$80" ..... No se produce colisión.
 441+ 8B48              ;       "$81" ..... Se produce colisión.
 442+ 8B48
 443+ 8B48              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8B48              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8B48
 446+ 8B48
 447+ 8B48 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8B4A E5               push hl                                        ; Puntero de impresión.
 449+ 8B4B
 450+ 8B4B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8B4D CD 69 8B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8B50
 453+ 8B50 7B               ld a,e
 454+ 8B51 E6 01            and 1
 455+ 8B53 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8B55
 457+ 8B55 E1               pop hl
 458+ 8B56 E5               push hl
 459+ 8B57 CD F8 90         call NextScan
 460+ 8B5A
 461+ 8B5A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8B5B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8B5D 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8B5F              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8B5F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8B61 CD 69 8B         call Bucle_2
 467+ 8B64
 468+ 8B64 43           2 ld b,e
 469+ 8B65 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8B66 FD E1            pop iy
 471+ 8B68 C9               ret
 472+ 8B69
 473+ 8B69               ; ---------- ----------
 474+ 8B69
 475+ 8B69 06 02        Bucle_2 ld b,2
 476+ 8B6B FD 7E 00     2 ld a,(iy)
 477+ 8B6E A6               and (hl)
 478+ 8B6F 28 02            jr z,1F
 479+ 8B71 1E 81            ld e,$81
 480+ 8B73 23           1 inc hl
 481+ 8B74 FD 23            inc iy
 482+ 8B76 10 F3            djnz 2B
 483+ 8B78 C9               ret
 484+ 8B79
 485+ 8B79              ; -------------------------------------------------------------------------------------------------------------
 486+ 8B79              ;
 487+ 8B79              ;   11/04/23
 488+ 8B79              ;
 489+ 8B79              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8B79              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8B79              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8B79              ;
 493+ 8B79              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8B79
 495+ 8B79              Compara_coordenadas_X
 496+ 8B79
 497+ 8B79              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8B79              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8B79
 500+ 8B79              ; Preparamos registros:
 501+ 8B79
 502+ 8B79 21 0B 86         ld hl,Filas+6
 503+ 8B7C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8B7D 23               inc hl
 505+ 8B7E 23               inc hl
 506+ 8B7F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8B80 43               ld b,e
 508+ 8B81 21 19 86         ld hl,Filas+20
 509+ 8B84 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8B85 21 60 86         ld hl,Coordenadas_X_Entidad
 511+ 8B88 CD 99 8D         call Guarda_coordenadas_X
 512+ 8B8B
 513+ 8B8B              ; Preparamos registros:
 514+ 8B8B
 515+ 8B8B 21 7C 84         ld hl,Amadeus_db+6
 516+ 8B8E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8B8F 23               inc hl
 518+ 8B90 23               inc hl
 519+ 8B91 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8B92 7B               ld a,e
 521+ 8B93 08               ex af,af'
 522+ 8B94 21 8A 84         ld hl,Amadeus_db+20
 523+ 8B97 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8B98 21 5D 86         ld hl,Coordenadas_X_Amadeus
 525+ 8B9B CD 99 8D         call Guarda_coordenadas_X
 526+ 8B9E
 527+ 8B9E              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8B9E              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8B9E
 530+ 8B9E 04               inc b
 531+ 8B9F 05               dec b
 532+ 8BA0 28 04            jr z,1F
 533+ 8BA2 06 03            ld b,3
 534+ 8BA4 18 02            jr 2F
 535+ 8BA6 06 02        1 ld b,2
 536+ 8BA8 08           2 ex af,af'
 537+ 8BA9 3C               inc a
 538+ 8BAA 3D               dec a
 539+ 8BAB 28 04            jr z,5F
 540+ 8BAD 0E 03            ld c,3
 541+ 8BAF 18 02            jr 6F
 542+ 8BB1 0E 02        5 ld c,2
 543+ 8BB3 79           6 ld a,c
 544+ 8BB4 08               ex af,af'
 545+ 8BB5 11 60 86         ld de,Coordenadas_X_Entidad
 546+ 8BB8 1A           4 ld a,(de)
 547+ 8BB9 21 5D 86         ld hl,Coordenadas_X_Amadeus
 548+ 8BBC BE           3 cp (hl)
 549+ 8BBD 28 0E            jr z,7F
 550+ 8BBF 23               inc hl
 551+ 8BC0 0D               dec c
 552+ 8BC1 20 F9            jr nz,3B
 553+ 8BC3 13               inc de
 554+ 8BC4 08               ex af,af'
 555+ 8BC5 4F               ld c,a
 556+ 8BC6 08               ex af,af'
 557+ 8BC7 10 EF            djnz 4B
 558+ 8BC9
 559+ 8BC9              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8BC9
 561+ 8BC9 CD D8 8D     8 call Limpia_Coordenadas_X
 562+ 8BCC C9               ret
 563+ 8BCD
 564+ 8BCD              7
 565+ 8BCD 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8BCF 32 1E 86         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8BD2 21 58 86         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8BD5 CB D6            set 2,(hl)
 569+ 8BD7 18 F0            jr 8B
 570+ 8BD9
 571+ 8BD9              ; -----------------------------------------------------------------------
 572+ 8BD9              ;
 573+ 8BD9              ;   17/04/23
 574+ 8BD9              ;
 575+ 8BD9
 576+ 8BD9              Detecta_colision_nave_entidad
 577+ 8BD9
 578+ 8BD9              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8BD9
 580+ 8BD9 2A 07 86         ld hl,(Posicion_actual)
 581+ 8BDC CD 5D 90         call Calcula_puntero_de_impresion
 582+ 8BDF
 583+ 8BDF              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8BDF              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8BDF
 586+ 8BDF DD E5            push ix
 587+ 8BE1 E1               pop hl
 588+ 8BE2 E5               push hl
 589+ 8BE3
 590+ 8BE3              ; ----- ----- -----
 591+ 8BE3 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8BE5 06 0A            ld b,10
 593+ 8BE7 CD 17 8C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8BEA 7B               ld a,e
 595+ 8BEB FE 05            cp 5
 596+ 8BED 38 0E            jr c,3F
 597+ 8BEF
 598+ 8BEF              ; LLegados a este punto:
 599+ 8BEF              ;
 600+ 8BEF              ;   HAY COLISIÓN !!!!!.
 601+ 8BEF              ;
 602+ 8BEF              ;   .db (Impacto) de Amadeus a "1".
 603+ 8BEF              ;   SET el bit3 de (Impacto2).
 604+ 8BEF              ;
 605+ 8BEF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8BEF
 607+ 8BEF 21 8F 84         ld hl,Amadeus_db+25
 608+ 8BF2 36 01            ld (hl),1
 609+ 8BF4 21 58 86         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8BF7 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8BF9 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8BFB 18 18            jr 1F
 613+ 8BFD
 614+ 8BFD              ; -----
 615+ 8BFD
 616+ 8BFD E1           3 pop hl
 617+ 8BFE CD F8 90         call NextScan
 618+ 8C01 E5               push hl
 619+ 8C02 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8C03 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8C05 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8C07 30 0C            jr nc,1F
 623+ 8C09              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8C09 10 DC            djnz 2B
 625+ 8C0B
 626+ 8C0B              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8C0B
 628+ 8C0B              ; LLegados a este punto:
 629+ 8C0B              ;
 630+ 8C0B              ;   NO HAY COLISIÓN !!!!!.
 631+ 8C0B              ;
 632+ 8C0B              ;   .db (Impacto) de Amadeus a "0".
 633+ 8C0B              ;   RES el bit2 de (Impacto2).
 634+ 8C0B              ;
 635+ 8C0B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8C0B              ;   Lo colocamos a "0".
 637+ 8C0B
 638+ 8C0B 21 58 86         ld hl,Impacto2
 639+ 8C0E CB 96            res 2,(hl)
 640+ 8C10 2A 59 86         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8C13 36 00            ld (hl),0
 642+ 8C15
 643+ 8C15 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8C16 C9               ret
 645+ 8C17
 646+ 8C17               ; ---------- ----------
 647+ 8C17
 648+ 8C17 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8C18 3A 06 86         ld a,(Columns)
 650+ 8C1B 47               ld b,a
 651+ 8C1C FD 7E 00     2 ld a,(iy)
 652+ 8C1F BE               cp (hl)
 653+ 8C20 28 01            jr z,1F
 654+ 8C22
 655+ 8C22 1C               inc e
 656+ 8C23
 657+ 8C23 23           1 inc hl
 658+ 8C24 FD 23            inc iy
 659+ 8C26 10 F4            djnz 2B
 660+ 8C28 C1               pop bc
 661+ 8C29 C9               ret
 662+ 8C2A
 663+ 8C2A              ; -------------------------------------------------------------------------------------------------------------
 664+ 8C2A              ;
 665+ 8C2A              ;   13/03/23
 666+ 8C2A              ;
 667+ 8C2A              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8C2A              ;
 669+ 8C2A              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8C2A
 671+ 8C2A 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8C2D 7E               ld a,(hl)
 673+ 8C2E A7               and a
 674+ 8C2F C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8C30
 676+ 8C30 44               ld b,h
 677+ 8C31 4D               ld c,l
 678+ 8C32 2A 51 86         ld hl,(Stack_snapshot_disparos)
 679+ 8C35 E5               push hl
 680+ 8C36 A7               and a
 681+ 8C37 ED 42            sbc hl,bc
 682+ 8C39 E5               push hl
 683+ 8C3A C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8C3B
 685+ 8C3B E1               pop hl
 686+ 8C3C 54               ld d,h
 687+ 8C3D 5D               ld e,l
 688+ 8C3E 1B               dec de
 689+ 8C3F ED B8            lddr                                                ; Limpiamos.
 690+ 8C41
 691+ 8C41 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8C44 22 51 86         ld (Stack_snapshot_disparos),hl
 693+ 8C47
 694+ 8C47 C9               ret
 695+ 8C48
 696+ 8C48              ; -------------------------------------------------------------------------------------------------------------
 697+ 8C48              ;
 698+ 8C48              ;   28/03/23
 699+ 8C48              ;
 700+ 8C48
 701+ 8C48 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8C4B 2A 56 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8C4E
 704+ 8C4E CD 8A 88     2 call Extrae_address
 705+ 8C51 7E               ld a,(hl)
 706+ 8C52 A7               and a
 707+ 8C53 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8C55
 709+ 8C55              ; ----- ----- ----- ----- ----- -----
 710+ 8C55
 711+ 8C55 C5               push bc
 712+ 8C56 CD 12 8D         call foto_disparo_a_borrar
 713+ 8C59
 714+ 8C59              ; Existe colisión con este disparo???
 715+ 8C59
 716+ 8C59 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8C5A 7E               ld a,(hl)
 718+ 8C5B 2B               dec hl
 719+ 8C5C E6 01            and 1
 720+ 8C5E 28 1D            jr z,9F
 721+ 8C60
 722+ 8C60              ;   En este punto:
 723+ 8C60              ;
 724+ 8C60              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8C60              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8C60              ;   _con la entidad).
 727+ 8C60              ;
 728+ 8C60              ;   Disparo_2A defw 0                                ; Control.
 729+ 8C60              ;    defw 0                                          ; Puntero objeto.
 730+ 8C60              ;    defw 0                                          ; Puntero de impresión.
 731+ 8C60              ;    defw 0                                          ; Rutina de impresión.
 732+ 8C60
 733+ 8C60 E5               push hl
 734+ 8C61
 735+ 8C61 06 04            ld b,4
 736+ 8C63 23           19 inc hl
 737+ 8C64 10 FD            djnz 19B
 738+ 8C66
 739+ 8C66 CD 8A 88         call Extrae_address
 740+ 8C69 CD 0F 97         call Genera_coordenadas_disparo
 741+ 8C6C
 742+ 8C6C              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8C6C
 744+ 8C6C 21 5B 86         ld hl,Coordenadas_disparo_certero
 745+ 8C6F 72               ld (hl),d
 746+ 8C70 23               inc hl
 747+ 8C71 73               ld (hl),e
 748+ 8C72
 749+ 8C72              ; Elimino el disparo de la base de datos.
 750+ 8C72
 751+ 8C72 E1               pop hl
 752+ 8C73 CD 8E 8D         call Elimina_disparo_de_base_de_datos
 753+ 8C76 21 58 86         ld hl,Impacto2
 754+ 8C79 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8C7B
 756+ 8C7B 18 06            jr 11F
 757+ 8C7D
 758+ 8C7D CD 3B 8D     9 call Mueve_disparo
 759+ 8C80 CD 12 8D         call foto_disparo_a_borrar
 760+ 8C83
 761+ 8C83 C1           11 pop bc
 762+ 8C84 18 04            jr 7F
 763+ 8C86
 764+ 8C86              ; ----- ----- ----- ----- ----- -----
 765+ 8C86
 766+ 8C86 ED 42        1 sbc hl,bc
 767+ 8C88 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8C8A 2A 56 86     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C8D 23               inc hl
 770+ 8C8E 23               inc hl
 771+ 8C8F 22 56 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C92 18 BA            jr 2B
 773+ 8C94 CD 53 88     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8C97
 775+ 8C97 01 66 84         ld bc,Disparo_11
 776+ 8C9A 2A 54 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C9D
 778+ 8C9D CD 8A 88     5 call Extrae_address
 779+ 8CA0 7E               ld a,(hl)
 780+ 8CA1 A7               and a
 781+ 8CA2 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8CA4
 783+ 8CA4              ; ----- ----- ----- ----- ----- -----
 784+ 8CA4
 785+ 8CA4 C5               push bc
 786+ 8CA5 CD 12 8D         call foto_disparo_a_borrar
 787+ 8CA8
 788+ 8CA8              ; Existe colisión con este disparo???
 789+ 8CA8
 790+ 8CA8 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8CA9 7E               ld a,(hl)
 792+ 8CAA 2B               dec hl
 793+ 8CAB E6 01            and 1
 794+ 8CAD 28 48            jr z,10F
 795+ 8CAF
 796+ 8CAF              ; La colisión se produce con Amadeus???
 797+ 8CAF              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8CAF
 799+ 8CAF E5               push hl
 800+ 8CB0
 801+ 8CB0 06 04            ld b,4
 802+ 8CB2 23           16 inc hl
 803+ 8CB3 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8CB5 CD 8A 88         call Extrae_address
 805+ 8CB8 CD 0F 97         call Genera_coordenadas_disparo
 806+ 8CBB
 807+ 8CBB 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8CBC FE 16            cp $16
 809+ 8CBE 38 22            jr c,15F
 810+ 8CC0
 811+ 8CC0              ; (Colisiones en filas 16 y 17).
 812+ 8CC0
 813+ 8CC0 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8CC1
 815+ 8CC1              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8CC1
 817+ 8CC1 21 7C 84         ld hl,Amadeus_db+6
 818+ 8CC4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8CC5 23               inc hl
 820+ 8CC6 23               inc hl
 821+ 8CC7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8CC8 21 8A 84         ld hl,Amadeus_db+20
 823+ 8CCB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8CCC 21 5D 86         ld hl,Coordenadas_X_Amadeus
 825+ 8CCF CD 99 8D         call Guarda_coordenadas_X
 826+ 8CD2
 827+ 8CD2 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8CD3
 829+ 8CD3              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8CD3
 831+ 8CD3 06 03            ld b,3
 832+ 8CD5 21 5D 86         ld hl,Coordenadas_X_Amadeus
 833+ 8CD8 7E           18 ld a,(hl)
 834+ 8CD9 BA               cp d
 835+ 8CDA 20 03            jr nz,17F
 836+ 8CDC
 837+ 8CDC              ; Colisión Amadeus !!!!!!!!!!
 838+ 8CDC
 839+ 8CDC E1               pop hl
 840+ 8CDD 18 09            jr 14F
 841+ 8CDF
 842+ 8CDF 23           17 inc hl
 843+ 8CE0 10 F6            djnz 18B
 844+ 8CE2
 845+ 8CE2              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8CE2              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8CE2
 848+ 8CE2 E1           15 pop hl
 849+ 8CE3 23               inc hl
 850+ 8CE4 35               dec (hl)
 851+ 8CE5 2B               dec hl
 852+ 8CE6 18 0F            jr 10F
 853+ 8CE8
 854+ 8CE8              ; -----------------------debug
 855+ 8CE8
 856+ 8CE8              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8CE8              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8CE8
 859+ 8CE8 E5           14 push hl
 860+ 8CE9 CD 8E 8D         call Elimina_disparo_de_base_de_datos
 861+ 8CEC 21 58 86         ld hl,Impacto2
 862+ 8CEF CB CE            set 1,(hl)
 863+ 8CF1 CD D8 8D         call Limpia_Coordenadas_X
 864+ 8CF4
 865+ 8CF4 E1               pop hl
 866+ 8CF5 18 06            jr 12F
 867+ 8CF7
 868+ 8CF7 CD 3B 8D     10 call Mueve_disparo
 869+ 8CFA CD 12 8D         call foto_disparo_a_borrar
 870+ 8CFD C1           12 pop bc
 871+ 8CFE
 872+ 8CFE 18 04            jr 8F
 873+ 8D00
 874+ 8D00              ; ----- ----- ----- ----- ----- -----
 875+ 8D00
 876+ 8D00 ED 42        4 sbc hl,bc
 877+ 8D02 28 0A            jr z,6F
 878+ 8D04
 879+ 8D04 2A 54 86     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8D07 23               inc hl
 881+ 8D08 23               inc hl
 882+ 8D09 22 54 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8D0C 18 8F            jr 5B
 884+ 8D0E
 885+ 8D0E CD 4C 88     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8D11 C9               ret
 887+ 8D12
 888+ 8D12              ; ------------------------------------------------------------------
 889+ 8D12
 890+ 8D12              foto_disparo_a_borrar
 891+ 8D12
 892+ 8D12 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8D13 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8D14 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8D15
 896+ 8D15 E5               push hl
 897+ 8D16 23               inc hl
 898+ 8D17 23               inc hl
 899+ 8D18 ED 73 4B 86      ld (Stack),sp
 900+ 8D1C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8D1D FD E1            pop iy
 902+ 8D1F DD E1            pop ix
 903+ 8D21 E1               pop hl
 904+ 8D22 ED 7B 4B 86      ld sp,(Stack)
 905+ 8D26 3A 42 86         ld a,(Ctrl_1)
 906+ 8D29 CB C7            set 0,a
 907+ 8D2B 32 42 86         ld (Ctrl_1),a
 908+ 8D2E CD A0 7F         call Guarda_foto_registros
 909+ 8D31 3A 42 86         ld a,(Ctrl_1)
 910+ 8D34 CB 87            res 0,a
 911+ 8D36 32 42 86         ld (Ctrl_1),a
 912+ 8D39 E1               pop hl
 913+ 8D3A C9               ret
 914+ 8D3B
 915+ 8D3B E5           Mueve_disparo push hl
 916+ 8D3C 7E               ld a,(hl)
 917+ 8D3D 06 04            ld b,4
 918+ 8D3F 23           1 inc hl
 919+ 8D40 10 FD            djnz 1B
 920+ 8D42
 921+ 8D42              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8D42
 923+ 8D42 CD 8A 88         call Extrae_address
 924+ 8D45
 925+ 8D45 E6 01            and 1
 926+ 8D47 28 2B            jr z,2F
 927+ 8D49
 928+ 8D49              ; Disparo hacia arriba, (Amadeus).
 929+ 8D49
 930+ 8D49              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8D49              ; _ de la dificultad.
 932+ 8D49
 933+ 8D49 CD 07 91         call PreviousScan
 934+ 8D4C CD 07 91         call PreviousScan
 935+ 8D4F CD 07 91         call PreviousScan
 936+ 8D52
 937+ 8D52              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8D52
 939+ 8D52 7C               ld a,h
 940+ 8D53 FE 40            cp $40
 941+ 8D55 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8D57
 943+ 8D57              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8D57
 945+ 8D57 EB               ex de,hl
 946+ 8D58 06 04            ld b,4
 947+ 8D5A 2B           6 dec hl
 948+ 8D5B 10 FD            djnz 6B
 949+ 8D5D
 950+ 8D5D CD 8E 8D         call Elimina_disparo_de_base_de_datos
 951+ 8D60 E1               pop hl
 952+ 8D61 18 10            jr 7F
 953+ 8D63
 954+ 8D63              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8D63
 956+ 8D63 D5           3 push de
 957+ 8D64 C5               push bc
 958+ 8D65
 959+ 8D65 CD 48 8B         call Comprueba_Colision
 960+ 8D68
 961+ 8D68              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8D68
 963+ 8D68 78               ld a,b
 964+ 8D69
 965+ 8D69 C1               pop bc
 966+ 8D6A D1               pop de
 967+ 8D6B
 968+ 8D6B EB               ex de,hl
 969+ 8D6C
 970+ 8D6C 73               ld (hl),e
 971+ 8D6D 23               inc hl
 972+ 8D6E 72               ld (hl),d
 973+ 8D6F
 974+ 8D6F E1           4 pop hl
 975+ 8D70 23               inc hl
 976+ 8D71 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8D72 2B               dec hl
 978+ 8D73 C9           7 ret
 979+ 8D74
 980+ 8D74              ; Disparo hacia abajo, (Entidad).
 981+ 8D74
 982+ 8D74              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8D74              ; _ de la dificultad.
 984+ 8D74
 985+ 8D74 CD F8 90     2 call NextScan
 986+ 8D77 CD F8 90         call NextScan
 987+ 8D7A CD F8 90         call NextScan
 988+ 8D7D
 989+ 8D7D              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8D7D
 991+ 8D7D 7C               ld a,h
 992+ 8D7E FE 58            cp $58
 993+ 8D80 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8D82
 995+ 8D82 EB               ex de,hl
 996+ 8D83 06 04            ld b,4
 997+ 8D85 2B           5 dec hl
 998+ 8D86 10 FD            djnz 5B
 999+ 8D88
1000+ 8D88 CD 8E 8D         call Elimina_disparo_de_base_de_datos
1001+ 8D8B E1               pop hl
1002+ 8D8C 18 E5            jr 7B
1003+ 8D8E
1004+ 8D8E              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8D8E
1006+ 8D8E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8D91 AF               xor a
1008+ 8D92 77               ld (hl),a
1009+ 8D93 54               ld d,h
1010+ 8D94 5D               ld e,l
1011+ 8D95 13               inc de
1012+ 8D96 ED B0            ldir
1013+ 8D98 C9               ret
1014+ 8D99
1015+ 8D99              ; -----------------------------------------------------------------
1016+ 8D99              ;
1017+ 8D99              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8D99              ;
1019+ 8D99              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8D99              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8D99              ;
1022+ 8D99              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8D99              ;
1024+ 8D99              ;   INPUTS:
1025+ 8D99              ;
1026+ 8D99              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8D99              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8D99              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8D99
1030+ 8D99              ;   MODIFICA: A, HL, DE y C
1031+ 8D99
1032+ 8D99 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8D9A 79               ld a,c
1034+ 8D9B E6 01            and 1
1035+ 8D9D 20 03            jr nz,1F
1036+ 8D9F 14               inc d
1037+ 8DA0 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8DA2
1039+ 8DA2              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8DA2              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8DA2
1042+ 8DA2 15           1 dec d
1043+ 8DA3 23           2 inc hl
1044+ 8DA4 72               ld (hl),d
1045+ 8DA5
1046+ 8DA5 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8DA6 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8DA7 C8               ret z
1049+ 8DA8
1050+ 8DA8 AF               xor a
1051+ 8DA9 5F               ld e,a
1052+ 8DAA 18 ED            jr Guarda_coordenadas_X
1053+ 8DAC
1054+ 8DAC              ; -----------------------------------------------------------------
1055+ 8DAC              ;
1056+ 8DAC              ;   12/04/23
1057+ 8DAC              ;
1058+ 8DAC
1059+ 8DAC 3A 58 86     Selector_de_impactos ld a,(Impacto2)
1060+ 8DAF A7               and a
1061+ 8DB0 C8               ret z
1062+ 8DB1
1063+ 8DB1 FE 04            cp 4
1064+ 8DB3 20 09            jr nz,1F
1065+ 8DB5
1066+ 8DB5
1067+ 8DB5              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8DB5
1069+ 8DB5 CD D9 8B         call Detecta_colision_nave_entidad
1070+ 8DB8
1071+ 8DB8 21 58 86         ld hl,Impacto2
1072+ 8DBB CB 5E            bit 3,(hl)
1073+ 8DBD C0               ret nz                                               ; Existe colisión, RET.
1074+ 8DBE
1075+ 8DBE              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8DBE              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8DBE
1078+ 8DBE 21 58 86     1 ld hl,Impacto2
1079+ 8DC1 CB 4E            bit 1,(hl)
1080+ 8DC3 28 07            jr z,2F
1081+ 8DC5
1082+ 8DC5 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8DC8 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8DCA 18 0B            jr 3F
1085+ 8DCC
1086+ 8DCC 21 58 86     2 ld hl,Impacto2
1087+ 8DCF CB 46            bit 0,(hl)
1088+ 8DD1 C8               ret z
1089+ 8DD2
1090+ 8DD2              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8DD2
1092+ 8DD2 21 42 86         ld hl,Ctrl_1
1093+ 8DD5 CB D6            set 2,(hl)
1094+ 8DD7
1095+ 8DD7 C9           3 ret
1096+ 8DD8
1097+ 8DD8              ; -----------------------------------------------------------------
1098+ 8DD8              ;
1099+ 8DD8              ;   16/04/23
1100+ 8DD8              ;
1101+ 8DD8
1102+ 8DD8 AF           Limpia_Coordenadas_X xor a
1103+ 8DD9 06 06            ld b,6
1104+ 8DDB 21 5D 86         ld hl,Coordenadas_X_Amadeus
1105+ 8DDE 77           1 ld (hl),a
1106+ 8DDF 23               inc hl
1107+ 8DE0 10 FC            djnz 1B
1108+ 8DE2 C9               ret
1109+ 8DE3
1110+ 8DE3              ; -----------------------------------------------------------------
1111+ 8DE3              ;
1112+ 8DE3              ;   25/04/23
1113+ 8DE3              ;
1114+ 8DE3
1115+ 8DE3              Determina_resultado_comparativa
1116+ 8DE3
1117+ 8DE3              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8DE3              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8DE3              ;
1120+ 8DE3              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8DE3              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8DE3              ;
1123+ 8DE3              ;   SBC HL,DE
1124+ 8DE3
1125+ 8DE3 7C               ld a,h
1126+ 8DE4 06 00            ld b,0
1127+ 8DE6
1128+ 8DE6 CD F6 8D         call Compara_cositas
1129+ 8DE9
1130+ 8DE9 04               inc b
1131+ 8DEA 05               dec b
1132+ 8DEB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8DEC
1134+ 8DEC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8DED 06 00            ld b,0
1136+ 8DEF
1137+ 8DEF CD F6 8D         call Compara_cositas
1138+ 8DF2 18 01            jr 2F
1139+ 8DF4
1140+ 8DF4 04           1 inc b
1141+ 8DF5 C9           2 ret
1142+ 8DF6
1143+ 8DF6 A7           Compara_cositas and a
1144+ 8DF7 28 17            jr z,1F
1145+ 8DF9
1146+ 8DF9 FE FD            cp $fd
1147+ 8DFB 28 13            jr z,1F
1148+ 8DFD FE FE            cp $fe
1149+ 8DFF 28 0F            jr z,1F
1150+ 8E01 FE FF            cp $ff
1151+ 8E03 28 0B            jr z,1F
1152+ 8E05 FE 01            cp $01
1153+ 8E07 28 07            jr z,1F
1154+ 8E09 FE 02            cp $02
1155+ 8E0B 28 03            jr z,1F
1156+ 8E0D FE 03            cp $03
1157+ 8E0F C0               ret nz
1158+ 8E10
1159+ 8E10 04           1 inc b
1160+ 8E11 C9               ret
1161+ 8E12
# file closed: Disparo.asm
1105  8E12              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8E12              ; ******************************************************************************************************************************************************************************************
   2+ 8E12              ;
   3+ 8E12              ; 01/23
   4+ 8E12              ;
   5+ 8E12              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8E12
   7+ 8E12 CD EC 90     Draw call Prepara_draw
   8+ 8E15 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8E16 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8E17 28 05        	jr z,2F
  11+ 8E19
  12+ 8E19 3A 19 86     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8E1C 18 0C        	jr 1F
  14+ 8E1E 2A 17 86     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8E21 22 07 86     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8E24 CD B3 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8E27              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8E27 CD 32 98     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8E2A 3A 33 86     1 ld a,(Ctrl_0)
  20+ 8E2D CB 6F        	bit 5,a
  21+ 8E2F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8E31
  23+ 8E31 CD 49 8E     	call Comprueba_limite_horizontal
  24+ 8E34 CD D9 8E     	call Comprueba_limite_vertical
  25+ 8E37
  26+ 8E37              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8E37
  28+ 8E37 CD 26 90     3 call calcula_CColumnass
  29+ 8E3A CD 5D 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8E3D CD B2 90     	call Define_rutina_de_impresion
  31+ 8E40
  32+ 8E40 3A 33 86     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8E43 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8E45 32 33 86     	ld (Ctrl_0),a
  35+ 8E48
  36+ 8E48 C9           	ret
  37+ 8E49
  38+ 8E49              ; *******************************************************************************************************************************************************************************************
  39+ 8E49              ;	21/01/23
  40+ 8E49              ;
  41+ 8E49              ; 	Comprueba_limite_horizontal.
  42+ 8E49              ;
  43+ 8E49              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8E49              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8E49              ;
  46+ 8E49              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8E49              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8E49              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8E49              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8E49
  51+ 8E49
  52+ 8E49
  53+ 8E49 3A 33 86     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8E4C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8E4E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8E50 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8E52 32 33 86     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8E55 18 09            jr 6F
  59+ 8E57 CB 5F        1 bit 3,a
  60+ 8E59 28 0A            jr z,2F
  61+ 8E5B E6 F7            and $f7
  62+ 8E5D 32 33 86         ld (Ctrl_0),a
  63+ 8E60 CD B3 8F     6 call Inicializacion
  64+ 8E63 18 5B            jr 5F
  65+ 8E65 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8E66
  67+ 8E66              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8E66              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8E66
  70+ 8E66 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8E67 2A 3E 86     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8E6A CD B8 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8E6D 67           	ld h,a
  74+ 8E6E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8E6F CD B8 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8E72 67           	ld h,a
  77+ 8E73 A7           	and a
  78+ 8E74 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8E76 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8E77 3A 19 86     	ld a,(Cuad_objeto)
  81+ 8E7A FE 02        	cp 2
  82+ 8E7C 38 1E        	jr c,3F
  83+ 8E7E 28 1C        	jr z,3F
  84+ 8E80 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8E81 28 23            jr z,7F
  86+ 8E83 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8E85 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E87 E1           	pop hl
  89+ 8E88
  90+ 8E88              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E88              ; _para indicar con E="2" en caso necesario.
  92+ 8E88
  93+ 8E88 E5               push hl
  94+ 8E89 C5               push bc
  95+ 8E8A CD B8 93     	call calcula_tercio
  96+ 8E8D FE 01        	cp 1
  97+ 8E8F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E91 CD C1 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E94 28 26            jr z,9F
 100+ 8E96 38 24            jr c,9F
 101+ 8E98 1E 00        11 ld e,0
 102+ 8E9A 18 22            jr 8F
 103+ 8E9C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E9D 28 07        	jr z, 7F
 105+ 8E9F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8EA1 1E 00         	ld e,0
 107+ 8EA3 E1           	pop hl
 108+ 8EA4 18 04        	jr 4F
 109+ 8EA6 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8EA8 18 15            jr 10F
 111+ 8EAA
 112+ 8EAA              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8EAA              ; _para indicar con E="2" en caso necesario.
 114+ 8EAA
 115+ 8EAA E5           4 push hl
 116+ 8EAB C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8EAC CD B8 93     	call calcula_tercio
 118+ 8EAF FE 01        	cp 1
 119+ 8EB1 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8EB3 CD C1 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8EB6 28 04            jr z,9F
 122+ 8EB8 30 02            jr nc,9F
 123+ 8EBA 18 02        	jr 8F
 124+ 8EBC 1E 02        9 ld e,2
 125+ 8EBE C1           8 pop bc
 126+ 8EBF E1           10 pop hl
 127+ 8EC0 C9           5 ret
 128+ 8EC1
 129+ 8EC1              ; --------------------
 130+ 8EC1              ;
 131+ 8EC1              ; 25/08/22
 132+ 8EC1
 133+ 8EC1 CD B8 93     Comprueba_centro call calcula_tercio
 134+ 8EC4 67               ld h,a
 135+ 8EC5 08           	ex af,af
 136+ 8EC6 FE 02        	cp 2
 137+ 8EC8 38 07        	jr c,1F
 138+ 8ECA 28 05        	jr z,1F
 139+ 8ECC 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8ECF 18 03        	jr 2F
 141+ 8ED1 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8ED4 08           2 ex af,af
 143+ 8ED5 A7               and a
 144+ 8ED6 ED 42            sbc hl,bc
 145+ 8ED8 C9               ret
 146+ 8ED9
 147+ 8ED9              ; *********************************************************************************************************************************************************************************************
 148+ 8ED9              ;
 149+ 8ED9              ;   16/8/22
 150+ 8ED9              ;
 151+ 8ED9              ;	Comprueba_limite_vertical
 152+ 8ED9              ;
 153+ 8ED9              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8ED9              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8ED9              ;
 156+ 8ED9
 157+ 8ED9 2A 07 86     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8EDC 7D           	ld a,l
 159+ 8EDD E6 1F        	and $1F
 160+ 8EDF 57           	ld d,a
 161+ 8EE0 3A 40 86     	ld a,(Limite_vertical)
 162+ 8EE3 BA           	cp d 											; Límite - Posición.
 163+ 8EE4 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8EE5 3A 19 86     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8EE8 CB 47        	bit 0,a
 166+ 8EEA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8EEC
 168+ 8EEC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8EEC
 170+ 8EEC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8EED 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8EEF
 173+ 8EEF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8EEF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8EEF
 176+ 8EEF 3A 0B 86         ld a,(Coordenada_X)
 177+ 8EF2 16 0F            ld d,Centro_izquierda
 178+ 8EF4 A7               and a
 179+ 8EF5 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8EF6 28 1E            jr z,3F
 181+ 8EF8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8EFA              ;                                                    ; _salimos sin modificar nada.
 183+ 8EFA 18 0E            jr 2F
 184+ 8EFC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8EFD 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8EFF
 187+ 8EFF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8EFF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8EFF
 190+ 8EFF 3A 0B 86         ld a,(Coordenada_X)
 191+ 8F02 16 10            ld d,Centro_derecha
 192+ 8F04 A7               and a
 193+ 8F05 92               sub d
 194+ 8F06 28 0E            jr z,3F
 195+ 8F08 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8F0A              ;                                                    ; _salimos sin modificar nada.
 197+ 8F0A CB 43        2 bit 0,e
 198+ 8F0C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8F0E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8F0F CD A3 8F         call Modificaccionne
 201+ 8F12 C1           	pop bc
 202+ 8F13 CD B3 8F         call Inicializacion
 203+ 8F16 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8F17
 205+ 8F17              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8F17
 207+ 8F17 C5           4 push bc
 208+ 8F18 01 06 86     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8F1B 0A           	ld a,(bc)
 210+ 8F1C 3D           	dec a
 211+ 8F1D 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8F1E 7D           	ld a,l
 213+ 8F1F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8F20 CB 47        	bit 0,a
 215+ 8F22 28 03        	jr z,5F
 216+ 8F24 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8F25 18 2E        	jr 7F
 218+ 8F27
 219+ 8F27              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8F27
 221+ 8F27 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8F28 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8F29 3A 33 86     	ld a,(Ctrl_0)
 224+ 8F2C CB 4F        	bit 1,a
 225+ 8F2E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8F30 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8F31
 228+ 8F31              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8F31
 230+ 8F31 1C               inc e
 231+ 8F32 1D               dec e
 232+ 8F33 20 07            jr nz,12F
 233+ 8F35 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8F36 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8F37 22 07 86     	ld (Posicion_actual),hl
 236+ 8F3A 18 44        13 jr 9F
 237+ 8F3C CB 43        12 bit 0,e
 238+ 8F3E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8F40              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8F40 C1           	pop bc
 241+ 8F41 18 D3        	jr 3B
 242+ 8F43 80           14 add b
 243+ 8F44 6F               ld l,a
 244+ 8F45 22 07 86     	ld (Posicion_actual),hl
 245+ 8F48 CD A3 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8F4B 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8F4D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8F4F 32 33 86         ld (Ctrl_0),a
 249+ 8F52 F1           	pop af
 250+ 8F53 18 2B        	jr 9F
 251+ 8F55
 252+ 8F55              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8F55
 254+ 8F55 F5           7 push af
 255+ 8F56 3A 33 86     	ld a,(Ctrl_0)
 256+ 8F59 CB 47        	bit 0,a
 257+ 8F5B 20 1D        	jr nz,8F
 258+ 8F5D F1           	pop af
 259+ 8F5E
 260+ 8F5E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8F5E
 262+ 8F5E 1C           	inc e
 263+ 8F5F 1D               dec e
 264+ 8F60 20 07            jr nz,10F
 265+ 8F62 90           	sub b
 266+ 8F63 6F               ld l,a
 267+ 8F64 22 07 86     	ld (Posicion_actual),hl
 268+ 8F67 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8F69              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8F69 CB 43        10 bit 0,e
 271+ 8F6B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8F6D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8F6D C1           	pop bc
 274+ 8F6E 18 A6        	jr 3B
 275+ 8F70 90           16 sub b
 276+ 8F71 6F               ld l,a
 277+ 8F72 22 07 86     	ld (Posicion_actual),hl
 278+ 8F75 CD A3 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8F78 18 06            jr 9F
 280+ 8F7A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8F7C 32 33 86         ld (Ctrl_0),a
 282+ 8F7F F1           	pop af
 283+ 8F80 C1           9 pop bc
 284+ 8F81 1E 00        	ld e,0
 285+ 8F83 CD B3 8F         call Inicializacion
 286+ 8F86 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F87 08           	ex af,af
 288+ 8F88 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F89 18 8B            jr 3B
 290+ 8F8B
 291+ 8F8B              ; --------------------
 292+ 8F8B
 293+ 8F8B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F8D CD 07 91     1 call PreviousScan
 295+ 8F90 10 FB            djnz 1B
 296+ 8F92 22 07 86     	ld (Posicion_actual),hl
 297+ 8F95 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F96 C9           	ret
 299+ 8F97
 300+ 8F97              ; --------------------
 301+ 8F97
 302+ 8F97 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F99 CD F8 90     1 call NextScan
 304+ 8F9C 10 FB            djnz 1B
 305+ 8F9E 22 07 86     	ld (Posicion_actual),hl
 306+ 8FA1 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8FA2 C9           	ret
 308+ 8FA3
 309+ 8FA3              ; --------------------
 310+ 8FA3              ;
 311+ 8FA3              ;	22/01/23
 312+ 8FA3              ;
 313+ 8FA3              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8FA3              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8FA3              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8FA3
 317+ 8FA3
 318+ 8FA3              Modificaccionne
 319+ 8FA3
 320+ 8FA3 3A 19 86     	ld a,(Cuad_objeto)
 321+ 8FA6 FE 02        	cp 2
 322+ 8FA8 CC 8B 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8FAB DC 8B 8F         call c,Modifica_Pos_actual
 324+ 8FAE C8           	ret z
 325+ 8FAF CD 97 8F         call Modifica_Pos_actual2
 326+ 8FB2 C9               ret
 327+ 8FB3
 328+ 8FB3              ; *************************************************************************************************************************************************************************************************
 329+ 8FB3              ;
 330+ 8FB3              ;	13/8/22
 331+ 8FB3              ;
 332+ 8FB3              ;	Inicializacion
 333+ 8FB3              ;
 334+ 8FB3              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8FB3              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8FB3              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8FB3              ;
 338+ 8FB3              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8FB3              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8FB3              ;	_ desaparece/aparece.
 341+ 8FB3
 342+ 8FB3              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8FB3              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8FB3              ;
 345+ 8FB3              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8FB3              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8FB3              ; 		   [E] ="0"
 348+ 8FB3
 349+ 8FB3              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8FB3
 351+ 8FB3 CD B8 93     Inicializacion call calcula_tercio
 352+ 8FB6 28 36        	jr z,primit
 353+ 8FB8 E6 02        	and 2
 354+ 8FBA 20 07        	jr nz,segmit
 355+ 8FBC 7D           	ld a,l
 356+ 8FBD FE 7F        	cp $7f
 357+ 8FBF 38 2D        	jr c,primit
 358+ 8FC1 28 2B        	jr z,primit
 359+ 8FC3 CD 20 90     segmit call column
 360+ 8FC6 38 13        	jr c,tercuad
 361+ 8FC8 3E 04        cuarcuad ld a,4
 362+ 8FCA 32 19 86     	ld (Cuad_objeto),a
 363+ 8FCD 21 20 48     	ld hl,$4820
 364+ 8FD0 22 3E 86     	ld (Limite_horizontal),hl
 365+ 8FD3 21 40 86     	ld hl,Limite_vertical
 366+ 8FD6 36 0D        	ld (hl),$0d
 367+ 8FD8 08           	ex af,af
 368+ 8FD9 18 3C        	jr 1F
 369+ 8FDB              tercuad
 370+ 8FDB 3E 03        	ld a,3
 371+ 8FDD 32 19 86     	ld (Cuad_objeto),a
 372+ 8FE0 21 20 48     	ld hl,$4820
 373+ 8FE3 22 3E 86     	ld (Limite_horizontal),hl
 374+ 8FE6 21 40 86     	ld hl,Limite_vertical
 375+ 8FE9 36 12        	ld (hl),$12
 376+ 8FEB 08           	ex af,af
 377+ 8FEC 18 29        	jr 1F
 378+ 8FEE CD 20 90     primit call column
 379+ 8FF1 38 13        	jr c, primcuad
 380+ 8FF3              segcuad
 381+ 8FF3 3E 02        	ld a,2
 382+ 8FF5 32 19 86     	ld (Cuad_objeto),a
 383+ 8FF8 21 C0 4F     	ld hl,$4fc0
 384+ 8FFB 22 3E 86     	ld (Limite_horizontal),hl
 385+ 8FFE 21 40 86     	ld hl,Limite_vertical
 386+ 9001 36 0D        	ld (hl),$0d
 387+ 9003 08           	ex af,af
 388+ 9004 18 11        	jr 1F
 389+ 9006              primcuad
 390+ 9006 3E 01        	ld a,1
 391+ 9008 32 19 86     	ld (Cuad_objeto),a
 392+ 900B 21 C0 4F     	ld hl,$4fc0
 393+ 900E 22 3E 86     	ld (Limite_horizontal),hl
 394+ 9011 21 40 86     	ld hl,Limite_vertical
 395+ 9014 36 12        	ld (hl),$12
 396+ 9016 08           	ex af,af
 397+ 9017 CD E4 96     1 call Genera_coordenadas
 398+ 901A 21 33 86     	ld hl,Ctrl_0
 399+ 901D CB EE        	set 5,(hl)
 400+ 901F C9           	ret
 401+ 9020
 402+ 9020              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9020
 404+ 9020              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9020              ;
 406+ 9020              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9020
 408+ 9020 7D           column ld a,l
 409+ 9021 E6 1F        	and $1f
 410+ 9023 FE 10         	cp $10
 411+ 9025 C9            	ret
 412+ 9026
 413+ 9026              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9026              ;
 415+ 9026              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9026              ;
 417+ 9026              ; 14/12/22
 418+ 9026              ;
 419+ 9026              ;	Modifica: A y BC.
 420+ 9026
 421+ 9026 3A 19 86     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9029 E6 01        	and 1
 423+ 902B 28 17        	jr z,1F
 424+ 902D
 425+ 902D              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 902D
 427+ 902D 3A 0B 86     	ld a,(Coordenada_X)
 428+ 9030 47           	ld b,a
 429+ 9031 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9032 79           	ld a,c
 431+ 9033 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9034 38 08        	jr c,2F
 433+ 9036 47           	ld b,a
 434+ 9037 79           	ld a,c
 435+ 9038 90           	sub b
 436+ 9039 32 3D 86     	ld (Columnas),a
 437+ 903C 18 1B        	jr 4F
 438+ 903E 79           2 ld a,c
 439+ 903F 32 3D 86     	ld (Columnas),a
 440+ 9042 18 15        	jr 4F
 441+ 9044
 442+ 9044              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9044
 444+ 9044 3A 0B 86     1 ld a,(Coordenada_X)
 445+ 9047 81           	add c
 446+ 9048 3D           	dec a
 447+ 9049 D6 1F        	sub $1f
 448+ 904B 38 08        	jr c,3F
 449+ 904D 47           	ld b,a
 450+ 904E 79           	ld a,c
 451+ 904F 90           	sub b
 452+ 9050 32 3D 86     	ld (Columnas),a
 453+ 9053 18 04        	jr 4F
 454+ 9055 79           3 ld a,c
 455+ 9056 32 3D 86     	ld (Columnas),a
 456+ 9059 D9           4 exx
 457+ 905A 4F           	ld c,a
 458+ 905B D9           	exx
 459+ 905C C9            ret
 460+ 905D
 461+ 905D              ; --------------------------------------------------------------------------------------------------------------------
 462+ 905D              ;
 463+ 905D              ; 7/1/23
 464+ 905D              ;
 465+ 905D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 905D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 905D              ;
 468+ 905D              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 905D              ;	DESTRUYE: HL,B Y A.
 470+ 905D
 471+ 905D 3A 19 86     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9060 FE 02        	cp 2
 473+ 9062 38 18        	jr c,1F
 474+ 9064 28 16        	jr z,1F
 475+ 9066 E6 01        	and 1
 476+ 9068 28 0D        	jr z,3F
 477+ 906A
 478+ 906A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 906A
 480+ 906A CD A6 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 906D
 482+ 906D 7D           9 ld a,l
 483+ 906E E6 1F        	and $1f
 484+ 9070 28 2A        	jr z,7F
 485+ 9072 2B           	dec hl
 486+ 9073 10 F8        	djnz 9B
 487+ 9075 18 25        	jr 7F
 488+ 9077
 489+ 9077              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9077
 491+ 9077 2A 07 86     3 ld hl,(Posicion_actual)
 492+ 907A 18 20        	jr 7F
 493+ 907C
 494+ 907C 28 14        1 jr z,2F
 495+ 907E
 496+ 907E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 907E
 498+ 907E CD A6 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9081 7D           4 ld a,l
 500+ 9082 E6 1F        	and $1f
 501+ 9084 28 03        	jr z,6F
 502+ 9086 2B           	dec hl
 503+ 9087 10 F8        	djnz 4B
 504+ 9089 06 0F        6 ld b,15
 505+ 908B CD 07 91     5 call PreviousScan
 506+ 908E 10 FB        	djnz 5B
 507+ 9090 18 0A        	jr 7F
 508+ 9092
 509+ 9092              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9092
 511+ 9092 CD A6 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9095 06 0F        	ld b,15
 513+ 9097 CD 07 91     8 call PreviousScan
 514+ 909A 10 FB        	djnz 8B
 515+ 909C
 516+ 909C E5           7 push hl
 517+ 909D DD E1        	pop ix
 518+ 909F
 519+ 909F 2A 09 86     	ld hl,(Puntero_objeto)
 520+ 90A2 E5           	push hl
 521+ 90A3 FD E1        	pop iy
 522+ 90A5
 523+ 90A5 C9           	ret
 524+ 90A6
 525+ 90A6              ; --------------------------------------------------------------------------------------------------------------------
 526+ 90A6              ;
 527+ 90A6              ;	2/1/23
 528+ 90A6              ;
 529+ 90A6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 90A6              ;
 531+ 90A6              ;	Tras esta rutina tenemos:
 532+ 90A6              ;
 533+ 90A6              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 90A6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 90A6              ;
 536+ 90A6              ;	DESTRUYE!!!!! HL,B y A.
 537+ 90A6
 538+ 90A6 2A 07 86     Operandos ld hl,(Posicion_actual)
 539+ 90A9 3A 3D 86     	ld a,(Columnas)
 540+ 90AC 3D           	dec a
 541+ 90AD 20 01        	jr nz,1F
 542+ 90AF 3C           	inc a
 543+ 90B0 47           1 ld b,a
 544+ 90B1 C9           	ret
 545+ 90B2
 546+ 90B2              ; --------------------------------------------------------------------------------------------------------------------
 547+ 90B2              ;
 548+ 90B2              ;	3/1/23
 549+ 90B2              ;
 550+ 90B2              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 90B2              ;
 552+ 90B2              ;	Destruye: A,B,HL y DE.
 553+ 90B2
 554+ 90B2              Define_rutina_de_impresion
 555+ 90B2
 556+ 90B2 3A 06 86     	ld a,(Columns)
 557+ 90B5 47           	ld b,a
 558+ 90B6 3A 3D 86     	ld a,(Columnas)
 559+ 90B9 B8           	cp b
 560+ 90BA 20 0D        	jr nz,2f
 561+ 90BC
 562+ 90BC              ;	La entidad se imprime entera.
 563+ 90BC
 564+ 90BC 21 88 91     	ld hl, Indice_entidades_completas
 565+ 90BF E6 01        	and 1
 566+ 90C1 28 02        	jr z,1F
 567+ 90C3
 568+ 90C3 23           	inc hl
 569+ 90C4 23           	inc hl
 570+ 90C5
 571+ 90C5 CD 8A 88     1 call Extrae_address
 572+ 90C8 C9           	ret		;	ret
 573+ 90C9
 574+ 90C9              ;	La entidad no se imprime entera en pantalla.
 575+ 90C9
 576+ 90C9 3A 19 86     2 ld a,(Cuad_objeto)
 577+ 90CC E6 01        	and 1
 578+ 90CE 28 17        	jr z,3F
 579+ 90D0
 580+ 90D0              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 90D0
 582+ 90D0 21 8C 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 90D3 3A 06 86     4 ld a,(Columns)
 584+ 90D6 E6 01        	and 1
 585+ 90D8 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 90DA
 587+ 90DA 23           	inc hl
 588+ 90DB 23           	inc hl
 589+ 90DC
 590+ 90DC 3A 3D 86     	ld a,(Columnas)
 591+ 90DF E6 01        	and 1
 592+ 90E1 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 90E3
 594+ 90E3 23           	inc hl
 595+ 90E4 23           	inc hl
 596+ 90E5
 597+ 90E5 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 90E7
 599+ 90E7 21 92 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 90EA 18 E7        	jr 4B
 601+ 90EC
 602+ 90EC              ; --------------------------------------------------------------------------------------------------------------------
 603+ 90EC              ;
 604+ 90EC              ;	Prepara_draw
 605+ 90EC              ;
 606+ 90EC              ;	Es una rutina de carga.
 607+ 90EC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 90EC              ;
 609+ 90EC              ;	FUNCIONAMIENTO:
 610+ 90EC              ;
 611+ 90EC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 90EC              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 90EC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 90EC              ;
 615+ 90EC              ;	DESTRUYE:
 616+ 90EC              ;
 617+ 90EC              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 90EC
 619+ 90EC 21 05 86     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 90EF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 90F0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 90F1 4E           	ld c,(hl)
 623+ 90F2 2A 07 86     	ld hl,(Posicion_actual)
 624+ 90F5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 90F7 C9           	ret
 626+ 90F8
 627+ 90F8              ;----------------------------------------------------------------------------------------------------------------
 628+ 90F8              ;
 629+ 90F8              ;	5/08/22
 630+ 90F8              ;
 631+ 90F8              ;   NextScan.
 632+ 90F8              ;
 633+ 90F8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 90F8              ;
 635+ 90F8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 90F8              ;
 637+ 90F8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 90F8              ;
 639+ 90F8              ;       DESTRUIDOS: AF y HL !!!
 640+ 90F8              ;
 641+ 90F8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 90F8              ;
 643+ 90F8
 644+ 90F8 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 90F9 7C               ld a,h
 646+ 90FA E6 07            and 7
 647+ 90FC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 90FD
 649+ 90FD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 90FE C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9100 6F               ld l,a
 652+ 9101 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9102
 654+ 9102 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9103 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9105 67               ld h,a
 657+ 9106 C9               ret
 658+ 9107
 659+ 9107              ;----------------------------------------------------------------------------------------------------------------
 660+ 9107              ;
 661+ 9107              ;	5/08/22
 662+ 9107              ;
 663+ 9107              ;   PreviousScan.
 664+ 9107              ;
 665+ 9107              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9107              ;
 667+ 9107              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9107              ;
 669+ 9107              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9107              ;
 671+ 9107              ;       DESTRUIDOS: AF y HL !!!
 672+ 9107              ;
 673+ 9107              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9107              ;
 675+ 9107
 676+ 9107 7C           PreviousScan ld a,h
 677+ 9108 25               dec h               ; Dec H.
 678+ 9109 E6 07            and 7
 679+ 910B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 910C
 681+ 910C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 910D D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 910F 6F               ld l,a
 684+ 9110 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9111
 686+ 9111 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9112 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9114 67               ld h,a
 689+ 9115 C9               ret
 690+ 9116
 691+ 9116              ; -----------------------------------------------------------------------------------
 692+ 9116              ;
 693+ 9116              ;	28/2/23
 694+ 9116              ;
 695+ 9116              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9116              ;	Extrae fotos de Album_de_fotos.
 697+ 9116
 698+ 9116              Extrae_foto_entidades
 699+ 9116
 700+ 9116 3A 4A 86     	ld a,(Numero_de_malotes)
 701+ 9119 A7           	and a
 702+ 911A C8           	ret z
 703+ 911B ED 73 4B 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 911F 31 00 70     	ld sp,Album_de_fotos
 705+ 9122
 706+ 9122 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 9124 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 9125 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 9126
 710+ 9126 ED 73 4D 86  	ld (Stack_2),sp
 711+ 912A ED 7B 4B 86  	ld sp,(Stack)
 712+ 912E
 713+ 912E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 912E
 715+ 912E 3E CD        	ld a,$cd
 716+ 9130 32 38 91     	ld (Imprime),a
 717+ 9133 EB           	ex de,hl
 718+ 9134 22 39 91     	ld (Imprime+1),hl
 719+ 9137 EB           	ex de,hl
 720+ 9138
 721+ 9138              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 9138
 723+ 9138 00 00 00     Imprime db 0,0,0
 724+ 913B
 725+ 913B 3A 4A 86     	ld a,(Numero_de_malotes)
 726+ 913E 3D           	dec a
 727+ 913F 28 09        	jr z,1F
 728+ 9141 32 4A 86      	ld (Numero_de_malotes),a
 729+ 9144
 730+ 9144 ED 7B 4D 86   	ld sp,(Stack_2)
 731+ 9148 18 D8        	jr 2B
 732+ 914A
 733+ 914A AF           1 xor a
 734+ 914B 32 4D 86     	ld (Stack_2),a
 735+ 914E C9           	ret
 736+ 914F
 737+ 914F              ; -----------------------------------------------------------------------------------
 738+ 914F              ;
 739+ 914F              ;	28/2/23
 740+ 914F              ;
 741+ 914F              ;	Pinta los disparos generados.
 742+ 914F
 743+ 914F              Extrae_foto_disparos
 744+ 914F
 745+ 914F 3A 53 86     	ld a,(Numero_de_disparotes)
 746+ 9152 A7           	and a
 747+ 9153 C8           	ret z
 748+ 9154 ED 73 4B 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 9158 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 915B
 751+ 915B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 915D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 915E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 915F
 755+ 915F ED 73 4D 86  	ld (Stack_2),sp
 756+ 9163 ED 7B 4B 86  	ld sp,(Stack)
 757+ 9167
 758+ 9167              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 9167
 760+ 9167 3E CD        	ld a,$cd
 761+ 9169 32 71 91     	ld (Imprime2),a
 762+ 916C EB           	ex de,hl
 763+ 916D 22 72 91     	ld (Imprime2+1),hl
 764+ 9170 EB           	ex de,hl
 765+ 9171
 766+ 9171              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9171
 768+ 9171 00 00 00     Imprime2 db 0,0,0
 769+ 9174
 770+ 9174 3A 53 86     	ld a,(Numero_de_disparotes)
 771+ 9177 3D           	dec a
 772+ 9178 28 09        	jr z,1F
 773+ 917A 32 53 86      	ld (Numero_de_disparotes),a
 774+ 917D
 775+ 917D ED 7B 4D 86  	ld sp,(Stack_2)
 776+ 9181 18 D8        	jr 2B
 777+ 9183
 778+ 9183 AF           1 xor a
 779+ 9184 32 4D 86     	ld (Stack_2),a
 780+ 9187 C9           	ret
 781+ 9188
# file closed: Draw_XOR.asm
1106  9188              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9188              ;   índices de Rutinas de impresión.
   2+ 9188
   3+ 9188 98 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 918A C5 91            defw Pinta_Amadeus_3x2
   5+ 918C
   6+ 918C 1B 92        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 918E BB 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9190 6F 92            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9192
  10+ 9192 45 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9194 49 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9196 FD 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9198
  14+ 9198
  15+ 9198              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9198              ;
  17+ 9198              ;   12/12/22
  18+ 9198              ;
  19+ 9198              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9198              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9198              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9198              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9198              ;
  24+ 9198              ;   Modifica: DE y HL.
  25+ 9198
  26+ 9198 ED 73 4B 86  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 919C FD F9        	ld sp,iy
  28+ 919E 06 10            ld b,16
  29+ 91A0 D1           1 pop de
  30+ 91A1 7B               ld a,e
  31+ 91A2 AE               xor (hl)
  32+ 91A3 77           	ld (hl),a
  33+ 91A4 23           	inc hl
  34+ 91A5 7A               ld a,d
  35+ 91A6 AE               xor (hl)
  36+ 91A7 77           	ld (hl),a
  37+ 91A8 2B           	dec hl
  38+ 91A9 24           	inc h
  39+ 91AA 7C               ld a,h
  40+ 91AB E6 07            and 7
  41+ 91AD 20 0A            jr nz,2F
  42+ 91AF 7D               ld a,l
  43+ 91B0 C6 20            add a,$20
  44+ 91B2 6F               ld l,a
  45+ 91B3 38 04            jr c,2F
  46+ 91B5 7C               ld a,h
  47+ 91B6 D6 08            sub 8
  48+ 91B8 67               ld h,a
  49+ 91B9 7C           2 ld a,h
  50+ 91BA FE 58            cp $58
  51+ 91BC 28 02            jr z,3F
  52+ 91BE 10 E0            djnz 1B
  53+ 91C0 ED 7B 4B 86  3 ld sp,(Stack)
  54+ 91C4 C9           	ret
  55+ 91C5
  56+ 91C5 ED 73 4B 86  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 91C9 FD F9        	ld sp,iy
  58+ 91CB 06 08            ld b,8
  59+ 91CD D1           1 pop de
  60+ 91CE 7B               ld a,e
  61+ 91CF AE               xor (hl)
  62+ 91D0 77           	ld (hl),a
  63+ 91D1 23           	inc hl
  64+ 91D2 7A               ld a,d
  65+ 91D3 AE               xor (hl)
  66+ 91D4 77           	ld (hl),a
  67+ 91D5 23           	inc hl
  68+ 91D6 D1           	pop de
  69+ 91D7 7B               ld a,e
  70+ 91D8 AE               xor (hl)
  71+ 91D9 77           	ld (hl),a
  72+ 91DA 2B           	dec hl
  73+ 91DB 2B           	dec hl
  74+ 91DC 24           	inc h
  75+ 91DD 7C               ld a,h
  76+ 91DE E6 07            and 7
  77+ 91E0 20 0A            jr nz,2F
  78+ 91E2 7D               ld a,l
  79+ 91E3 C6 20            add a,$20
  80+ 91E5 6F               ld l,a
  81+ 91E6 38 04            jr c,2F
  82+ 91E8 7C               ld a,h
  83+ 91E9 D6 08            sub 8
  84+ 91EB 67               ld h,a
  85+ 91EC 7C           2 ld a,h
  86+ 91ED FE 58            cp $58
  87+ 91EF 28 25            jr z,4F
  88+ 91F1 7A               ld a,d
  89+ 91F2 AE               xor (hl)
  90+ 91F3 77               ld (hl),a
  91+ 91F4 D1           	pop de
  92+ 91F5 23           	inc hl
  93+ 91F6 7B               ld a,e
  94+ 91F7 AE               xor (hl)
  95+ 91F8 77           	ld (hl),a
  96+ 91F9 23           	inc hl
  97+ 91FA 7A               ld a,d
  98+ 91FB AE               xor (hl)
  99+ 91FC 77           	ld (hl),a
 100+ 91FD 2B           	dec hl
 101+ 91FE 2B           	dec hl
 102+ 91FF 24           	inc h
 103+ 9200 7C               ld a,h
 104+ 9201 E6 07            and 7
 105+ 9203 20 0A            jr nz,3F
 106+ 9205 7D               ld a,l
 107+ 9206 C6 20            add a,$20
 108+ 9208 6F               ld l,a
 109+ 9209 38 04            jr c,3F
 110+ 920B 7C               ld a,h
 111+ 920C D6 08            sub 8
 112+ 920E 67               ld h,a
 113+ 920F 7C           3 ld a,h
 114+ 9210 FE 58            cp $58
 115+ 9212 28 02            jr z,4F
 116+ 9214 10 B7            djnz 1B
 117+ 9216 ED 7B 4B 86  4 ld sp,(Stack)
 118+ 921A C9           	ret
 119+ 921B
 120+ 921B              ; ---------------------------------------------------
 121+ 921B
 122+ 921B ED 73 4B 86  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 921F FD F9        	ld sp,iy
 124+ 9221
 125+ 9221              ; >>>
 126+ 9221
 127+ 9221 06 10            ld b,16
 128+ 9223 D1           1 pop de
 129+ 9224 7A           	ld a,d
 130+ 9225 AE           	xor (hl)
 131+ 9226 77           	ld (hl),a
 132+ 9227 24           	inc h
 133+ 9228 7C               ld a,h
 134+ 9229 E6 07            and 7
 135+ 922B 20 0C            jr nz,2F
 136+ 922D 7D               ld a,l
 137+ 922E C6 20            add a,$20
 138+ 9230 6F               ld l,a
 139+ 9231 38 06            jr c,2F
 140+ 9233 7C               ld a,h
 141+ 9234 D6 08            sub 8
 142+ 9236 67               ld h,a
 143+ 9237 18 00            jr 2F
 144+ 9239 7C           2 ld a,h
 145+ 923A FE 58            cp $58
 146+ 923C 28 02            jr z,3F
 147+ 923E 10 E3            djnz 1B
 148+ 9240 ED 7B 4B 86  3 ld sp,(Stack)
 149+ 9244 C9           	ret
 150+ 9245
 151+ 9245 ED 73 4B 86  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9249 FD F9        	ld sp,iy
 153+ 924B
 154+ 924B              ; >>>
 155+ 924B
 156+ 924B 06 10            ld b,16
 157+ 924D D1           1 pop de
 158+ 924E 7B           	ld a,e
 159+ 924F AE           	xor (hl)
 160+ 9250 77           	ld (hl),a
 161+ 9251 24           	inc h
 162+ 9252 7C               ld a,h
 163+ 9253 E6 07            and 7
 164+ 9255 20 0C            jr nz,2F
 165+ 9257 7D               ld a,l
 166+ 9258 C6 20            add a,$20
 167+ 925A 6F               ld l,a
 168+ 925B 38 06            jr c,2F
 169+ 925D 7C               ld a,h
 170+ 925E D6 08            sub 8
 171+ 9260 67               ld h,a
 172+ 9261 18 00            jr 2F
 173+ 9263 7C           2 ld a,h
 174+ 9264 FE 58            cp $58
 175+ 9266 28 02            jr z,3F
 176+ 9268 10 E3            djnz 1B
 177+ 926A ED 7B 4B 86  3 ld sp,(Stack)
 178+ 926E C9           	ret
 179+ 926F
 180+ 926F              ; ---------------------------------------------------
 181+ 926F
 182+ 926F ED 73 4B 86  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9273 FD F9        	ld sp,iy
 184+ 9275 06 08            ld b,8
 185+ 9277 D1           1 pop de
 186+ 9278 7A           	ld a,d
 187+ 9279 AE           	xor (hl)
 188+ 927A 77           	ld (hl),a
 189+ 927B 23           	inc hl
 190+ 927C D1           	pop de
 191+ 927D 7B           	ld a,e
 192+ 927E AE           	xor (hl)
 193+ 927F 77           	ld (hl),a
 194+ 9280 2B           	dec hl
 195+ 9281 24            	inc h
 196+ 9282 7C               ld a,h
 197+ 9283 E6 07            and 7
 198+ 9285 20 0A            jr nz,2F
 199+ 9287 7D               ld a,l
 200+ 9288 C6 20            add a,$20
 201+ 928A 6F               ld l,a
 202+ 928B 38 04            jr c,2F
 203+ 928D 7C               ld a,h
 204+ 928E D6 08            sub 8
 205+ 9290 67               ld h,a
 206+ 9291 7C           2 ld a,h
 207+ 9292 FE 58            cp $58
 208+ 9294 28 20            jr z,4F
 209+ 9296 D1               pop de
 210+ 9297 7B           	ld a,e
 211+ 9298 AE           	xor (hl)
 212+ 9299 77           	ld (hl),a
 213+ 929A 23           	inc hl
 214+ 929B 7A           	ld a,d
 215+ 929C AE           	xor (hl)
 216+ 929D 77           	ld (hl),a
 217+ 929E 2B           	dec hl
 218+ 929F 24           	inc h
 219+ 92A0 7C               ld a,h
 220+ 92A1 E6 07            and 7
 221+ 92A3 20 0A            jr nz,3F
 222+ 92A5 7D               ld a,l
 223+ 92A6 C6 20            add a,$20
 224+ 92A8 6F               ld l,a
 225+ 92A9 38 04            jr c,3F
 226+ 92AB 7C               ld a,h
 227+ 92AC D6 08            sub 8
 228+ 92AE 67               ld h,a
 229+ 92AF 7C           3 ld a,h
 230+ 92B0 FE 58            cp $58
 231+ 92B2 28 02            jr z,4F
 232+ 92B4 10 C1            djnz 1B
 233+ 92B6 ED 7B 4B 86  4 ld sp,(Stack)
 234+ 92BA C9           	ret
 235+ 92BB
 236+ 92BB ED 73 4B 86  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 92BF FD F9        	ld sp,iy
 238+ 92C1 06 08            ld b,8
 239+ 92C3 D1           1 pop de
 240+ 92C4 D1           	pop de
 241+ 92C5 7B           	ld a,e
 242+ 92C6 AE           	xor (hl)
 243+ 92C7 77           	ld (hl),a
 244+ 92C8 24            	inc h
 245+ 92C9 7C               ld a,h
 246+ 92CA E6 07            and 7
 247+ 92CC 20 0A            jr nz,2F
 248+ 92CE 7D               ld a,l
 249+ 92CF C6 20            add a,$20
 250+ 92D1 6F               ld l,a
 251+ 92D2 38 04            jr c,2F
 252+ 92D4 7C               ld a,h
 253+ 92D5 D6 08            sub 8
 254+ 92D7 67               ld h,a
 255+ 92D8 7C           2 ld a,h
 256+ 92D9 FE 58            cp $58
 257+ 92DB 28 1B            jr z,4F
 258+ 92DD D1               pop de
 259+ 92DE 7A           	ld a,d
 260+ 92DF AE           	xor (hl)
 261+ 92E0 77           	ld (hl),a
 262+ 92E1 24           	inc h
 263+ 92E2 7C               ld a,h
 264+ 92E3 E6 07            and 7
 265+ 92E5 20 0A            jr nz,3F
 266+ 92E7 7D               ld a,l
 267+ 92E8 C6 20            add a,$20
 268+ 92EA 6F               ld l,a
 269+ 92EB 38 04            jr c,3F
 270+ 92ED 7C               ld a,h
 271+ 92EE D6 08            sub 8
 272+ 92F0 67               ld h,a
 273+ 92F1 7C           3 ld a,h
 274+ 92F2 FE 58            cp $58
 275+ 92F4 28 02            jr z,4F
 276+ 92F6 10 CB            djnz 1B
 277+ 92F8 ED 7B 4B 86  4 ld sp,(Stack)
 278+ 92FC C9           	ret
 279+ 92FD
 280+ 92FD ED 73 4B 86  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9301 FD F9        	ld sp,iy
 282+ 9303 06 08            ld b,8
 283+ 9305 D1           1 pop de
 284+ 9306 7B           	ld a,e
 285+ 9307 AE           	xor (hl)
 286+ 9308 77           	ld (hl),a
 287+ 9309 23           	inc hl
 288+ 930A 7A           	ld a,d
 289+ 930B AE           	xor (hl)
 290+ 930C 77           	ld (hl),a
 291+ 930D 2B           	dec hl
 292+ 930E 24             	inc h
 293+ 930F 7C               ld a,h
 294+ 9310 E6 07            and 7
 295+ 9312 20 0A            jr nz,2F
 296+ 9314 7D               ld a,l
 297+ 9315 C6 20            add a,$20
 298+ 9317 6F               ld l,a
 299+ 9318 38 04            jr c,2F
 300+ 931A 7C               ld a,h
 301+ 931B D6 08            sub 8
 302+ 931D 67               ld h,a
 303+ 931E 7C           2 ld a,h
 304+ 931F FE 58            cp $58
 305+ 9321 28 21            jr z,4F
 306+ 9323 D1               pop de
 307+ 9324 7A           	ld a,d
 308+ 9325 AE           	xor (hl)
 309+ 9326 77           	ld (hl),a
 310+ 9327 23           	inc hl
 311+ 9328 D1               pop de
 312+ 9329 7B           	ld a,e
 313+ 932A AE           	xor (hl)
 314+ 932B 77           	ld (hl),a
 315+ 932C 2B           	dec hl
 316+ 932D 24           	inc h
 317+ 932E 7C               ld a,h
 318+ 932F E6 07            and 7
 319+ 9331 20 0A            jr nz,3F
 320+ 9333 7D               ld a,l
 321+ 9334 C6 20            add a,$20
 322+ 9336 6F               ld l,a
 323+ 9337 38 04            jr c,3F
 324+ 9339 7C               ld a,h
 325+ 933A D6 08            sub 8
 326+ 933C 67               ld h,a
 327+ 933D 7C           3 ld a,h
 328+ 933E FE 58            cp $58
 329+ 9340 28 02            jr z,4F
 330+ 9342 10 C1            djnz 1B
 331+ 9344 ED 7B 4B 86  4 ld sp,(Stack)
 332+ 9348 C9           	ret
 333+ 9349
 334+ 9349 ED 73 4B 86  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 934D FD F9        	ld sp,iy
 336+ 934F 06 08            ld b,8
 337+ 9351 D1           1 pop de
 338+ 9352 7B           	ld a,e
 339+ 9353 AE           	xor (hl)
 340+ 9354 77           	ld (hl),a
 341+ 9355 24            	inc h
 342+ 9356 7C               ld a,h
 343+ 9357 E6 07            and 7
 344+ 9359 20 0A            jr nz,2F
 345+ 935B 7D               ld a,l
 346+ 935C C6 20            add a,$20
 347+ 935E 6F               ld l,a
 348+ 935F 38 04            jr c,2F
 349+ 9361 7C               ld a,h
 350+ 9362 D6 08            sub 8
 351+ 9364 67               ld h,a
 352+ 9365 7C           2 ld a,h
 353+ 9366 FE 58            cp $58
 354+ 9368 28 1C            jr z,4F
 355+ 936A D1               pop de
 356+ 936B 7A           	ld a,d
 357+ 936C AE           	xor (hl)
 358+ 936D 77           	ld (hl),a
 359+ 936E 24           	inc h
 360+ 936F 7C               ld a,h
 361+ 9370 E6 07            and 7
 362+ 9372 20 0A            jr nz,3F
 363+ 9374 7D               ld a,l
 364+ 9375 C6 20            add a,$20
 365+ 9377 6F               ld l,a
 366+ 9378 38 04            jr c,3F
 367+ 937A 7C               ld a,h
 368+ 937B D6 08            sub 8
 369+ 937D 67               ld h,a
 370+ 937E 7C           3 ld a,h
 371+ 937F FE 58            cp $58
 372+ 9381 28 03            jr z,4F
 373+ 9383 D1               pop de
 374+ 9384 10 CB            djnz 1B
 375+ 9386 ED 7B 4B 86  4 ld sp,(Stack)
 376+ 938A C9           	ret
 377+ 938B
 378+ 938B              ; ---------------------------------------------------
 379+ 938B              ;
 380+ 938B              ;   27/02/23
 381+ 938B              ;
 382+ 938B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 938B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 938B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 938B
 386+ 938B ED 73 4B 86  Pinta_Disparo ld (Stack),sp
 387+ 938F FD F9            ld sp,iy
 388+ 9391 06 02            ld b,2
 389+ 9393 D1           1 pop de
 390+ 9394 7B               ld a,e
 391+ 9395 AE               xor (hl)
 392+ 9396 77               ld (hl),a
 393+ 9397 23               inc hl
 394+ 9398 7A               ld a,d
 395+ 9399 AE               xor (hl)
 396+ 939A 77               ld (hl),a
 397+ 939B 2B               dec hl
 398+ 939C
 399+ 939C 24               inc h
 400+ 939D 7C               ld a,h
 401+ 939E E6 07            and 7
 402+ 93A0 20 0A            jr nz,2F
 403+ 93A2 7D               ld a,l
 404+ 93A3 C6 20            add a,$20
 405+ 93A5 6F               ld l,a
 406+ 93A6 38 04            jr c,2F
 407+ 93A8 7C               ld a,h
 408+ 93A9 D6 08            sub 8
 409+ 93AB 67               ld h,a
 410+ 93AC 7C           2 ld a,h
 411+ 93AD FE 58            cp $58
 412+ 93AF 28 02            jr z,3F
 413+ 93B1
 414+ 93B1 10 E0            djnz 1B
 415+ 93B3 ED 7B 4B 86  3 ld sp,(Stack)
 416+ 93B7 C9               ret
 417+ 93B8
# file closed: Rutinas_de_impresion_sprites.asm
1107  93B8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 93B8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 93B8              ;
   3+ 93B8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 93B8              ;
   5+ 93B8              ; *****************************************************************************************************************************************************************************************
   6+ 93B8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 93B8
   8+ 93B8 7C           calcula_tercio ld a,h
   9+ 93B9 E6 18        	and $18
  10+ 93BB CB 2F        	sra a
  11+ 93BD CB 2F        	sra a
  12+ 93BF CB 2F        	sra a
  13+ 93C1 C9           	ret
  14+ 93C2
# file closed: calcula_tercio.asm
1108  93C2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 93C2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 93C2              ;
   3+ 93C2              ;
   4+ 93C2              ;	CLS.
   5+ 93C2              ;
   6+ 93C2              ;	Limpia la pantalla y define sus atributos.
   7+ 93C2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 93C2              ;
   9+ 93C2              ;	COLORES: 0 ..... NEGRO
  10+ 93C2              ;    		 1 ..... AZUL
  11+ 93C2              ; 			 2 ..... ROJO
  12+ 93C2              ;			 3 ..... MAGENTA
  13+ 93C2              ; 			 4 ..... VERDE
  14+ 93C2              ; 			 5 ..... CIAN
  15+ 93C2              ;			 6 ..... AMARILLO
  16+ 93C2              ; 			 7 ..... BLANCO
  17+ 93C2              ;
  18+ 93C2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 93C2              ;
  20+ 93C2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 93C2
  22+ 93C2
  23+ 93C2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 93C5 11 01 40     	LD DE,$4001
  25+ 93C8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 93CB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 93CD ED B0        	LDIR
  28+ 93CF 01 FF 02     	LD BC,767
  29+ 93D2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 93D3 ED B0        	LDIR
  31+ 93D5 C9           	ret
  32+ 93D6
# file closed: Cls.asm
1109  93D6              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 93D6              ; ******************************************************************************************************************************************************************************************
   2+ 93D6              ;
   3+ 93D6              ;   22/01/23
   4+ 93D6              ;
   5+ 93D6              ;	Mov_down
   6+ 93D6              ;
   7+ 93D6              ; 	Mueve el Sprite X px hacia abajo.
   8+ 93D6              ;
   9+ 93D6              ;
  10+ 93D6 21 33 86     Mov_down ld hl,Ctrl_0
  11+ 93D9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 93DB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 93DB              ; 																	; _ en el caso de que no lo haya.
  14+ 93DB 3A 1D 86     	ld a,(Vel_down)
  15+ 93DE 47           	ld b,a
  16+ 93DF 2A 07 86         ld hl,(Posicion_actual)
  17+ 93E2 CD B8 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 93E5 E6 02        	and 2
  19+ 93E7 28 0F        	jr z,1F
  20+ 93E9
  21+ 93E9              ; Nos encontramos en el último tercio de pantalla.
  22+ 93E9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 93E9
  24+ 93E9 7C           	ld a,h
  25+ 93EA FE 57        	cp $57
  26+ 93EC 20 0A        	jr nz,1F
  27+ 93EE 7D           	ld a,l
  28+ 93EF C6 20        	add $20
  29+ 93F1 30 05        	jr nc,1F
  30+ 93F3
  31+ 93F3              ; ------------------------------
  32+ 93F3 CD CE 96     	call Reaparece_arriba
  33+ 93F6              ;	call Reinicio
  34+ 93F6              ; ------------------------------
  35+ 93F6
  36+ 93F6 18 08        	jr 3F
  37+ 93F8 CD F8 90     1 call NextScan
  38+ 93FB 22 07 86     	ld (Posicion_actual),hl
  39+ 93FE 10 E2            djnz 2B
  40+ 9400 CD E4 96     3 call Genera_coordenadas
  41+ 9403 C9           	ret
  42+ 9404
  43+ 9404              ; ******************************************************************************************************************************************************************************************
  44+ 9404              ;
  45+ 9404              ;   22/01/23
  46+ 9404              ;
  47+ 9404              ;	Mov_up
  48+ 9404              ;
  49+ 9404              ; 	Mueve el Sprite hacia arriba.
  50+ 9404              ;
  51+ 9404              ;
  52+ 9404 21 33 86     Mov_up ld hl,Ctrl_0
  53+ 9407 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9409              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9409              ; 																		; _ en el caso de que no lo haya.
  56+ 9409 3A 1C 86     	ld a,(Vel_up)
  57+ 940C 47           	ld b,a
  58+ 940D 2A 07 86     	ld hl,(Posicion_actual)
  59+ 9410 CD B8 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9413 A7           	and a
  61+ 9414 20 10        	jr nz,1F
  62+ 9416
  63+ 9416              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9416              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9416
  66+ 9416 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9417 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9419 20 0B            jr nz,1F
  69+ 941B 7D               ld a,l
  70+ 941C D6 20            sub $20
  71+ 941E 30 06            jr nc,1F
  72+ 9420 25               dec h
  73+ 9421
  74+ 9421              ; -----------------------------
  75+ 9421 CD BE 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9424              ;	call Reinicio
  77+ 9424              ; -----------------------------
  78+ 9424
  79+ 9424 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9426 CD 07 91     1 call PreviousScan
  81+ 9429 22 07 86     	ld (Posicion_actual),hl
  82+ 942C 10 E2            djnz 3B
  83+ 942E CD E4 96     2 call Genera_coordenadas
  84+ 9431 C9           	ret
  85+ 9432
  86+ 9432              ; ******************************************************************************************************************************************************************************************
  87+ 9432              ;
  88+ 9432              ;	19/10/22
  89+ 9432              ;
  90+ 9432              ;	Mov_right.
  91+ 9432              ;
  92+ 9432              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9432              ;
  94+ 9432
  95+ 9432 21 33 86     Mov_right ld hl,Ctrl_0
  96+ 9435 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9437              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9437              ; 																	; _ en el caso de que no lo haya.
  99+ 9437 3A 33 86     	ld a,(Ctrl_0)
 100+ 943A CB 77        	bit 6,a
 101+ 943C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 943E
 103+ 943E CD 6C 96     	call Stop_Amadeus_right
 104+ 9441 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9442 18 4D        	jr 8F
 106+ 9444
 107+ 9444 3A 0B 86     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9447 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9449 20 46        	jr nz,8F
 110+ 944B
 111+ 944B 3A 0D 86     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 944E A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 944F 28 40        	jr z,8F
 114+ 9451
 115+ 9451              ; ---------- ---------- ----------
 116+ 9451              ;
 117+ 9451              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9451
 119+ 9451 3A 1B 86     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 9454 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 9456 28 11        	jr z,1F
 122+ 9458 38 06        	jr c,6F
 123+ 945A FE 04        	cp 4
 124+ 945C 28 14        	jr z,7F
 125+ 945E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9460
 127+ 9460              ; ---------- ---------- ----------
 128+ 9460              ;
 129+ 9460              ; Perfiles de velocidad
 130+ 9460              ;
 131+ 9460
 132+ 9460 3A 0D 86     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 9463 FE FE        	cp $fe
 134+ 9465 20 2A        	jr nz,8F
 135+ 9467 18 10        	jr 3F
 136+ 9469 3A 0D 86     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 946C FE FD        	cp $fd
 138+ 946E 20 21        	jr nz,8F
 139+ 9470 18 07        	jr 3F
 140+ 9472 3A 0D 86     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 9475 FE FB        	cp $fb
 142+ 9477 20 18        	jr nz,8F
 143+ 9479
 144+ 9479              ; ---------- ---------- ----------
 145+ 9479
 146+ 9479              3
 147+ 9479 CD AC 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 947C              ;	call Reinicio
 149+ 947C
 150+ 947C              ; ---------- ---------- ----------
 151+ 947C              ;
 152+ 947C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 947C
 154+ 947C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 947E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 947F CD 98 94     	call DESPLZ_DER
 157+ 9482 C1           	pop bc
 158+ 9483 10 F9        	djnz 5B
 159+ 9485 2A 07 86     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9488 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9489 22 07 86     	ld (Posicion_actual),hl
 162+ 948C CD E4 96     	call Genera_coordenadas
 163+ 948F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9491
 165+ 9491              ; ---------- ---------- ----------
 166+ 9491
 167+ 9491 2A 07 86     8 ld hl,(Posicion_actual)
 168+ 9494 CD 98 94     	call DESPLZ_DER
 169+ 9497 C9           2 ret
 170+ 9498
 171+ 9498              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9498              ;
 173+ 9498              ;	22/9/22
 174+ 9498              ;
 175+ 9498
 176+ 9498 CD A7 94     DESPLZ_DER call Desplaza_derecha
 177+ 949B CD F3 94         call modifica_parametros_1er_DESPLZ_2
 178+ 949E CD 1C 95         call Ciclo_completo
 179+ 94A1 21 33 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 94A4 CB FE        	set 7,(hl)
 181+ 94A6 C9           	ret
 182+ 94A7
 183+ 94A7              ; ******************************************************************************************************************************************************************************************
 184+ 94A7              ;	15/02/23
 185+ 94A7              ;
 186+ 94A7
 187+ 94A7 3A 1B 86     Desplaza_derecha ld a,(Vel_right)
 188+ 94AA 47           	ld b,a
 189+ 94AB 2A 13 86     	ld hl,(Puntero_DESPLZ_der)
 190+ 94AE 23           1 inc hl
 191+ 94AF 23           	inc hl
 192+ 94B0 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 94B2 22 13 86     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 94B5 CD 8A 88     	call Extrae_address
 195+ 94B8 22 09 86     	ld (Puntero_objeto),hl
 196+ 94BB
 197+ 94BB              ; Modifica (Puntero_DESPLZ_izq).
 198+ 94BB
 199+ 94BB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 94BB              ; Cuántos movimientos hemos hecho ??
 201+ 94BB              ; DE contiene (Puntero_DESPLZ_der).
 202+ 94BB
 203+ 94BB 2A 0F 86     7 ld hl,(Indice_Sprite_der)
 204+ 94BE EB           	ex de,hl
 205+ 94BF A7           	and a
 206+ 94C0 ED 52        	sbc hl,de
 207+ 94C2 CB 3D        	srl l
 208+ 94C4 3E 08        6 ld a,8
 209+ 94C6 95           	sub l
 210+ 94C7 30 1E        	jr nc,3F
 211+ 94C9
 212+ 94C9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 94C9              ; B="0".
 214+ 94C9
 215+ 94C9 04           4 inc b
 216+ 94CA 3C           	inc a
 217+ 94CB 20 FC        	jr nz,4B
 218+ 94CD 78           	ld a,b
 219+ 94CE 08           	ex af,af
 220+ 94CF 2A 0F 86     	ld hl,(Indice_Sprite_der)
 221+ 94D2 23           5 inc hl
 222+ 94D3 23           	inc hl
 223+ 94D4 10 FC        	djnz 5B
 224+ 94D6 22 13 86     	ld (Puntero_DESPLZ_der),hl
 225+ 94D9 CD 8A 88     	call Extrae_address
 226+ 94DC 22 09 86     	ld (Puntero_objeto),hl
 227+ 94DF
 228+ 94DF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 94DF              ; _(Posicion_actual).
 230+ 94DF
 231+ 94DF 21 07 86     	ld hl,Posicion_actual
 232+ 94E2 34           	inc (hl)
 233+ 94E3 08               ex af,af
 234+ 94E4 6F           	ld l,a
 235+ 94E5 18 DD        	jr 6B
 236+ 94E7
 237+ 94E7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 94E7
 239+ 94E7 47           3 ld b,a
 240+ 94E8 2A 11 86     	ld hl,(Indice_Sprite_izq)
 241+ 94EB 23           2 inc hl
 242+ 94EC 23           	inc hl
 243+ 94ED 10 FC        	djnz 2B
 244+ 94EF 22 15 86     	ld (Puntero_DESPLZ_izq),hl
 245+ 94F2 C9           8 ret
 246+ 94F3
 247+ 94F3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 94F3              ;
 249+ 94F3              ;	24/7/22
 250+ 94F3              ;
 251+ 94F3              ;	modifica_parametros_1er_DESPLZ_2
 252+ 94F3              ;
 253+ 94F3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 94F3              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 94F3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 94F3
 257+ 94F3 3A 0D 86     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 94F6 A7           	and a
 259+ 94F7 20 1F        	jr nz,1F
 260+ 94F9 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 94FB 32 0D 86         ld (CTRL_DESPLZ),a
 262+ 94FE
 263+ 94FE 21 06 86     	ld hl,Columns
 264+ 9501 34           	inc (hl)
 265+ 9502 3A 19 86     	ld a,(Cuad_objeto)
 266+ 9505 E6 01        	and 1
 267+ 9507 28 0F        	jr z,1F
 268+ 9509 2A 07 86     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 950C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 950D 22 07 86     	ld (Posicion_actual),hl
 271+ 9510 CD E4 96     	call Genera_coordenadas
 272+ 9513 CD 78 96     	call Inc_CTRL_DESPLZ
 273+ 9516 18 03        	jr 2F
 274+ 9518 CD 78 96     1 call Inc_CTRL_DESPLZ
 275+ 951B C9           2 ret
 276+ 951C
 277+ 951C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 951C              ;
 279+ 951C              ;	24/7/22
 280+ 951C              ;
 281+ 951C              ;	Ciclo_completo.
 282+ 951C              ;
 283+ 951C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 951C              ;
 285+ 951C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 951C              ; 	Decrementamos (Columns).
 287+ 951C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 951C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 951C
 290+ 951C
 291+ 951C 3A 0D 86     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 951F FE FF        	cp $ff
 293+ 9521 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9523 E6 F0        	and $f0
 295+ 9525 20 28        	jr nz,3F
 296+ 9527
 297+ 9527              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9527
 299+ 9527 3A 0D 86     	ld a,(CTRL_DESPLZ)
 300+ 952A 47           	ld b,a
 301+ 952B 3E F8        	ld a,$f8
 302+ 952D 80           	add b
 303+ 952E 32 0D 86     	ld (CTRL_DESPLZ),a
 304+ 9531 18 1C        	jr 3F
 305+ 9533 21 06 86     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9536 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9537 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9538 32 0D 86     	ld (CTRL_DESPLZ),a
 309+ 953B 3A 19 86     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 953E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9540 20 0A        	jr nz,2F
 312+ 9542 2A 07 86     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 9545 23           	inc hl
 314+ 9546 22 07 86     	ld (Posicion_actual),hl
 315+ 9549 CD E4 96     	call Genera_coordenadas
 316+ 954C
 317+ 954C              ; Inicia el puntero de Sprite.
 318+ 954C
 319+ 954C CD A1 88     2 call Inicia_puntero_objeto_der
 320+ 954F C9           3 ret
 321+ 9550
 322+ 9550              ; ******************************************************************************************************************************************************************************************
 323+ 9550              ;
 324+ 9550              ;	15/02/23
 325+ 9550              ;
 326+ 9550              ;	Mov_left.
 327+ 9550              ;
 328+ 9550              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9550              ;
 330+ 9550              Mov_left
 331+ 9550
 332+ 9550 21 33 86     	ld hl,Ctrl_0
 333+ 9553 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 9555              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 9555              ; 																	; _ en el caso de que no lo haya.
 336+ 9555 3A 33 86     	ld a,(Ctrl_0)
 337+ 9558 CB 77        	bit 6,a
 338+ 955A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 955C
 340+ 955C CD 72 96     	call Stop_Amadeus_left
 341+ 955F C8           	ret z
 342+ 9560 20 4A        	jr nz,8F
 343+ 9562
 344+ 9562 3A 0B 86     11 ld a,(Coordenada_X)
 345+ 9565 A7           	and a
 346+ 9566 20 44        	jr nz,8F
 347+ 9568
 348+ 9568 3A 0D 86     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 956B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 956C 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 956E
 352+ 956E              ; ---------- ---------- ----------
 353+ 956E
 354+ 956E 3A 1A 86     	ld a,(Vel_left)
 355+ 9571 FE 02        	cp 2
 356+ 9573 28 0F        	jr z,1F
 357+ 9575 38 04        	jr c,6F
 358+ 9577 FE 04        	cp 4
 359+ 9579 28 12        	jr z,7F
 360+ 957B
 361+ 957B              ; ---------- ---------- ----------
 362+ 957B
 363+ 957B 3A 0D 86     6 ld a,(CTRL_DESPLZ)
 364+ 957E FE F8        	cp $f8
 365+ 9580 20 2A        	jr nz,8F
 366+ 9582 18 10        	jr 4F
 367+ 9584 3A 0D 86     1 ld a,(CTRL_DESPLZ)
 368+ 9587 FE F9        	cp $f9
 369+ 9589 20 21        	jr nz,8F
 370+ 958B 18 07        	jr 4F
 371+ 958D 3A 0D 86     7 ld a,(CTRL_DESPLZ)
 372+ 9590 FE FB        	cp $fb
 373+ 9592 20 18        	jr nz,8F
 374+ 9594
 375+ 9594              ; ---------- ---------- ----------
 376+ 9594
 377+ 9594              4
 378+ 9594 CD 9A 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9597              ;	call Reinicio
 380+ 9597
 381+ 9597              ; ---------- ---------- ----------
 382+ 9597
 383+ 9597 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9599 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 959A
 386+ 959A              ;	ld hl,(Indice_Sprite_izq)
 387+ 959A              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 959A
 389+ 959A CD B3 95     	call DESPLZ_IZQ
 390+ 959D C1           	pop bc
 391+ 959E 10 F9        	djnz 5B
 392+ 95A0 2A 07 86     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 95A3 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 95A4 22 07 86     	ld (Posicion_actual),hl
 395+ 95A7 CD E4 96     	call Genera_coordenadas
 396+ 95AA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 95AC
 398+ 95AC              ; ---------- ---------- ----------
 399+ 95AC
 400+ 95AC              ; Movemos, no hay recolocación.
 401+ 95AC
 402+ 95AC 2A 07 86     8 ld hl,(Posicion_actual)
 403+ 95AF CD B3 95     	call DESPLZ_IZQ
 404+ 95B2 C9           2 ret
 405+ 95B3
 406+ 95B3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 95B3              ;
 408+ 95B3              ;	22/9/22
 409+ 95B3
 410+ 95B3              DESPLZ_IZQ
 411+ 95B3
 412+ 95B3 CD C2 95     	call Desplaza_izquierda
 413+ 95B6 CD 0E 96         call modifica_parametros_1er_DESPLZ
 414+ 95B9 CD 36 96     	call Ciclo_completo_2
 415+ 95BC 21 33 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 95BF CB BE        	res 7,(hl)
 417+ 95C1 C9           	ret
 418+ 95C2
 419+ 95C2              Desplaza_izquierda
 420+ 95C2
 421+ 95C2 3A 1A 86     	ld a,(Vel_left)
 422+ 95C5 47           	ld b,a
 423+ 95C6 2A 15 86     	ld hl,(Puntero_DESPLZ_izq)
 424+ 95C9 23           1 inc hl
 425+ 95CA 23           	inc hl
 426+ 95CB 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 95CD 22 15 86     	ld (Puntero_DESPLZ_izq),hl
 428+ 95D0 CD 8A 88     	call Extrae_address
 429+ 95D3 22 09 86     	ld (Puntero_objeto),hl
 430+ 95D6
 431+ 95D6              ; Modifica (Puntero_DESPLZ_der).
 432+ 95D6
 433+ 95D6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 95D6              ; Cuántos movimientos hemos hecho ??
 435+ 95D6              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 95D6
 437+ 95D6 2A 11 86     7 ld hl,(Indice_Sprite_izq)
 438+ 95D9 EB           	ex de,hl
 439+ 95DA A7           	and a
 440+ 95DB ED 52        	sbc hl,de
 441+ 95DD CB 3D        	srl l
 442+ 95DF 3E 08        6 ld a,8
 443+ 95E1 95           	sub l
 444+ 95E2 30 1E        	jr nc,3F
 445+ 95E4
 446+ 95E4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 95E4              ; B="0".
 448+ 95E4
 449+ 95E4 04           4 inc b
 450+ 95E5 3C           	inc a
 451+ 95E6 20 FC        	jr nz,4B
 452+ 95E8 78           	ld a,b
 453+ 95E9 08           	ex af,af
 454+ 95EA 2A 11 86     	ld hl,(Indice_Sprite_izq)
 455+ 95ED 23           5 inc hl
 456+ 95EE 23           	inc hl
 457+ 95EF 10 FC        	djnz 5B
 458+ 95F1 22 15 86     	ld (Puntero_DESPLZ_izq),hl
 459+ 95F4 CD 8A 88     	call Extrae_address
 460+ 95F7 22 09 86     	ld (Puntero_objeto),hl
 461+ 95FA
 462+ 95FA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 95FA              ; _(Posicion_actual).
 464+ 95FA
 465+ 95FA 21 07 86     	ld hl,Posicion_actual
 466+ 95FD 35           	dec (hl)
 467+ 95FE 08           	ex af,af
 468+ 95FF 6F           	ld l,a
 469+ 9600 18 DD        	jr 6B
 470+ 9602
 471+ 9602              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9602
 473+ 9602 47           3 ld b,a
 474+ 9603 2A 0F 86     	ld hl,(Indice_Sprite_der)
 475+ 9606 23           2 inc hl
 476+ 9607 23           	inc hl
 477+ 9608 10 FC        	djnz 2B
 478+ 960A 22 13 86     	ld (Puntero_DESPLZ_der),hl
 479+ 960D C9           8 ret
 480+ 960E
 481+ 960E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 960E              ;
 483+ 960E              ;	modifica_parametros_1er_DESPLZ
 484+ 960E              ;
 485+ 960E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 960E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 960E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 960E
 489+ 960E 3A 0D 86     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9611 A7           	and a
 491+ 9612 20 1E        	jr nz,1F
 492+ 9614 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9615 32 0D 86         ld (CTRL_DESPLZ),a
 494+ 9618 21 06 86     	ld hl,Columns
 495+ 961B 34           	inc (hl)
 496+ 961C 3A 19 86     	ld a,(Cuad_objeto)
 497+ 961F E6 01        	and 1
 498+ 9621 20 0F        	jr nz,1F
 499+ 9623 2A 07 86     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9626 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9627 22 07 86     	ld (Posicion_actual),hl
 502+ 962A CD E4 96     	call Genera_coordenadas
 503+ 962D CD 89 96     	call Dec_CTRL_DESPLZ
 504+ 9630 18 03        	jr 2F
 505+ 9632 CD 89 96     1 call Dec_CTRL_DESPLZ
 506+ 9635 C9           2 ret
 507+ 9636
 508+ 9636              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9636
 510+ 9636 3A 0D 86     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9639 FE F7        	cp $f7
 512+ 963B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 963D 30 2C        	jr nc,3F
 514+ 963F
 515+ 963F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 963F
 517+ 963F 06 00        	ld b,0
 518+ 9641 04           4 inc b
 519+ 9642 3C           	inc a
 520+ 9643 FE F7        	cp $f7
 521+ 9645 20 FA        	jr nz,4B
 522+ 9647 3E FF        	ld a,$ff
 523+ 9649 90           	sub b
 524+ 964A 32 0D 86     	ld (CTRL_DESPLZ),a
 525+ 964D 18 1C        	jr 3F
 526+ 964F
 527+ 964F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 964F
 529+ 964F 21 06 86     1 ld hl,Columns
 530+ 9652 35           	dec (hl)
 531+ 9653 AF           	xor a
 532+ 9654 32 0D 86     	ld (CTRL_DESPLZ),a
 533+ 9657 3A 19 86     	ld a,(Cuad_objeto)
 534+ 965A E6 01        	and 1
 535+ 965C 28 0A        	jr z,2F
 536+ 965E 2A 07 86     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9661 2B           	dec hl
 538+ 9662 22 07 86     	ld (Posicion_actual),hl
 539+ 9665 CD E4 96     	call Genera_coordenadas
 540+ 9668
 541+ 9668              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9668
 543+ 9668 CD B4 88     2 call Inicia_puntero_objeto_izq
 544+ 966B C9           3 ret
 545+ 966C
 546+ 966C              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 966C              ;
 548+ 966C              ;	19/10/22
 549+ 966C              ;
 550+ 966C              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 966C              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 966C
 553+ 966C 3A 0B 86     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 966F FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9671 C9           	ret
 556+ 9672
 557+ 9672              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9672              ;
 559+ 9672              ;	19/10/22
 560+ 9672              ;
 561+ 9672              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9672              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9672
 564+ 9672 3A 0B 86     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 9675 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 9677 C9           	ret
 567+ 9678
 568+ 9678              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 9678              ;
 570+ 9678              ;	24/7/22
 571+ 9678              ;
 572+ 9678              ;	Inc_CTRL_DESPLZ
 573+ 9678              ;
 574+ 9678              ;
 575+ 9678              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 9678
 577+ 9678 21 0D 86     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 967B 3A 1B 86     	ld a,(Vel_right)
 579+ 967E A7           	and a
 580+ 967F 28 06        	jr z,1F
 581+ 9681 47           	ld b,a
 582+ 9682 34           3 inc (hl)
 583+ 9683 10 FD        	djnz 3B
 584+ 9685 18 01        	jr 2F
 585+ 9687 34           1 inc (hl)
 586+ 9688 C9           2 ret
 587+ 9689
 588+ 9689              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9689              ;
 590+ 9689              ;	5/2/23
 591+ 9689              ;
 592+ 9689              ;	Dec_CTRL_DESPLZ
 593+ 9689              ;
 594+ 9689              ;
 595+ 9689              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9689
 597+ 9689 21 0D 86     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 968C 3A 1A 86     	ld a,(Vel_left)
 599+ 968F A7           	and a
 600+ 9690 28 06        	jr z,1F
 601+ 9692 47           	ld b,a
 602+ 9693 35           3 dec (hl)
 603+ 9694 10 FD        	djnz 3B
 604+ 9696 18 01        	jr 2F
 605+ 9698 35           1 dec (hl)
 606+ 9699 C9           2 ret
 607+ 969A
 608+ 969A              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 969A
 610+ 969A 2A 07 86     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 969D 01 1F 00     	ld bc,31
 612+ 96A0 A7           	and a
 613+ 96A1 ED 4A        	adc hl,bc
 614+ 96A3 22 07 86     	ld (Posicion_actual),hl
 615+ 96A6 21 33 86     	ld hl,Ctrl_0														; $xxx1
 616+ 96A9 CB C6        	set 0,(hl)
 617+ 96AB C9           	ret
 618+ 96AC
 619+ 96AC              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 96AC
 621+ 96AC 2A 07 86     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 96AF 01 1F 00     	ld bc,31
 623+ 96B2 A7           	and a
 624+ 96B3 ED 42        	sbc hl,bc
 625+ 96B5 22 07 86     	ld (Posicion_actual),hl 											; $xx1x
 626+ 96B8 21 33 86     	ld hl,Ctrl_0
 627+ 96BB CB CE        	set 1,(hl)
 628+ 96BD C9           	ret
 629+ 96BE
 630+ 96BE              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 96BE
 632+ 96BE 24           Reaparece_abajo inc h
 633+ 96BF 01 E0 17     	ld bc,$17e0
 634+ 96C2 A7           	and a
 635+ 96C3 ED 4A        	adc hl,bc
 636+ 96C5 22 07 86     	ld (Posicion_actual),hl
 637+ 96C8 21 33 86     	ld hl,Ctrl_0
 638+ 96CB CB D6        	set 2,(hl)
 639+ 96CD C9           	ret
 640+ 96CE
 641+ 96CE              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 96CE
 643+ 96CE 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 96D1 A7           	and a
 645+ 96D2 ED 42        	sbc hl,bc
 646+ 96D4 22 07 86     	ld (Posicion_actual),hl
 647+ 96D7 21 33 86     	ld hl,Ctrl_0
 648+ 96DA CB DE        	set 3,(hl)
 649+ 96DC C9           	ret
 650+ 96DD
 651+ 96DD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 96DD
 653+ 96DD 2A 17 86     Reinicio ld hl,(Posicion_inicio)
 654+ 96E0 22 07 86     	ld (Posicion_actual),hl
 655+ 96E3 C9           	ret
# file closed: Direcciones.asm
1110  96E4              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 96E4              ; ------------------------------------------------------------------------
   2+ 96E4              ;
   3+ 96E4              ;	02/04/23
   4+ 96E4              ;
   5+ 96E4              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 96E4              ;	Fila superior "0", Columna izquierda "0".
   7+ 96E4              ;
   8+ 96E4              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 96E4              ;
  10+ 96E4              ;	Modifica: A,BC y DE.
  11+ 96E4
  12+ 96E4 C5           Genera_coordenadas push bc
  13+ 96E5 E5           	push hl
  14+ 96E6 D5           	push de
  15+ 96E7
  16+ 96E7 2A 07 86     	ld hl,(Posicion_actual)
  17+ 96EA
  18+ 96EA 7D           	ld a,l
  19+ 96EB E6 1F        	and $1f
  20+ 96ED 32 0B 86     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 96F0
  22+ 96F0 CD B8 93     	call calcula_tercio
  23+ 96F3 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 96F4
  25+ 96F4 1E 00        	ld e,0
  26+ 96F6 7D           	ld a,l
  27+ 96F7 E6 E0        	and $e0
  28+ 96F9 28 01        	jr z,1F
  29+ 96FB 04           	inc b
  30+ 96FC
  31+ 96FC 04           1 inc b
  32+ 96FD 05           	dec b
  33+ 96FE 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9700              ;														; _ , salimos.
  35+ 9700 1C           3 inc e
  36+ 9701 D6 20        	sub 32
  37+ 9703 20 FB        	jr nz,3B
  38+ 9705 10 F5        	djnz 1B
  39+ 9707
  40+ 9707 7B           2 ld a,e
  41+ 9708 32 0C 86     	ld (Coordenada_y),a
  42+ 970B
  43+ 970B D1           	pop de
  44+ 970C E1           	pop hl
  45+ 970D C1           	pop bc
  46+ 970E
  47+ 970E C9           	ret
  48+ 970F
  49+ 970F              ; ------------------------------------------------------------------------
  50+ 970F              ;	28/03/23
  51+ 970F              ;
  52+ 970F              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 970F              ;	Fila superior "0", Columna izquierda "0".
  54+ 970F              ;
  55+ 970F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 970F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 970F              ;
  58+ 970F              ;		DE="$120d"
  59+ 970F              ;
  60+ 970F              ;		D, (Coordenada_X), Columnas, $12
  61+ 970F              ;		E, (Coordenada_y), Filas, $0d
  62+ 970F              ;
  63+ 970F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 970F
  65+ 970F              ;	Modifica: A,BC y DE.
  66+ 970F
  67+ 970F
  68+ 970F              Genera_coordenadas_disparo
  69+ 970F
  70+ 970F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 970F
  72+ 970F 7D           	ld a,l
  73+ 9710 E6 1F        	and $1f
  74+ 9712 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9713 CD B8 93     	call calcula_tercio
  76+ 9716 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9717 1E 00        	ld e,0
  78+ 9719 7D           	ld a,l
  79+ 971A E6 E0        	and $e0
  80+ 971C 28 01        	jr z,1F
  81+ 971E 04           	inc b
  82+ 971F 1C           1 inc e
  83+ 9720 D6 20        	sub 32
  84+ 9722 20 FB        	jr nz,1B
  85+ 9724 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9726 C9           	ret
  87+ 9727
# file closed: Genera_coordenadas.asm
1111  9727              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9727
   2+ 9727
   3+ 9727              ;   11/8/22
   4+ 9727              ;
   5+ 9727              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9727              ;
   7+ 9727              ;   Mov_obj.asm
   8+ 9727              ;
   9+ 9727              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9727              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9727              ;
  12+ 9727              ;   Codificación:
  13+ 9727              ;
  14+ 9727              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9727
  16+ 9727              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9727
  18+ 9727 02 40 00     Arriba db 2,%01000000,0
  19+ 972A 02 80 00     Abajo db 2,%10000000,0
  20+ 972D 02 20 00     Derecha db 2,%00100000,0
  21+ 9730 02 10 00     Izquierda db 2,%00010000,0
  22+ 9733 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9737 60 42 60 40
  22+ 973B 63
  23+ 973C 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9740 22 A3 80 A0
  24+ 9744 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9748 84 A0 83 A0
  25+ 974C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9750 80 A3 22 A0
  26+ 9754 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9758 40 60 42 60
  27+ 975C 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9760
  29+ 9760 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9764 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9768 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 976C 84 00
  32+ 976E 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9772 84 00
  33+ 9774 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9778 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 977C 1F 1F 1F 1F
  35+ 9780 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9784 1F 1F 1F 1F
  35+ 9788 1F
  36+ 9789 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 978D 2F 2F 2F 2F
  36+ 9791 2F 2F
  37+ 9793 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9797 2F 2F 00
  38+ 979A
  39+ 979A              ; ----- ----- ----- ----- -----
  40+ 979A
  41+ 979A 78 97        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 979C 74 97        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 979E 30 97        Indice_mov_Izquierda defw Izquierda
  44+ 97A0 2D 97        Indice_mov_Derecha defw Derecha
  45+ 97A2 2A 97        Indice_mov_Abajo defw Abajo
  46+ 97A4 27 97        Indice_mov_Arriba defw Arriba
  47+ 97A6 64 97        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 97A8 68 97        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 97AA 60 97        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 97AC 6E 97        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 97AE 33 97        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 97B0              ; ----- ----- ----- ----- -----
  53+ 97B0
  54+ 97B0 3A 3A 86     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 97B3 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 97B4 28 02            jr z,1F
  57+ 97B6 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 97B8 3A 3B 86     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 97BB C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 97BD 32 3B 86         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 97C0              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 97C0 2A 38 86         ld hl,(Puntero_mov)
  63+ 97C3 7E               ld a,(hl)
  64+ 97C4 32 3A 86         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 97C7 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 97C8 22 38 86         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 97CB
  68+ 97CB 3A 3C 86     Decoder ld a,(Repetimos_db)
  69+ 97CE A7               and a
  70+ 97CF 20 0C            jr nz,12F
  71+ 97D1 2A 38 86         ld hl,(Puntero_mov)
  72+ 97D4 7E               ld a,(hl)
  73+ 97D5 A7               and a
  74+ 97D6 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 97D8 E6 0F            and $0f
  76+ 97DA 32 3C 86         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 97DD              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 97DD 2A 38 86     12 ld hl,(Puntero_mov)
  79+ 97E0 CB 7E            bit 7,(hl)
  80+ 97E2 28 03            jr z,2F
  81+ 97E4 CD D6 93         call Mov_down
  82+ 97E7 2A 38 86     2 ld hl, (Puntero_mov)
  83+ 97EA CB 76            bit 6,(hl)
  84+ 97EC 28 03            jr z,3F
  85+ 97EE CD 04 94         call Mov_up
  86+ 97F1 2A 38 86     3 ld hl, (Puntero_mov)
  87+ 97F4 CB 6E            bit 5,(hl)
  88+ 97F6 28 03            jr z,4F
  89+ 97F8 CD 32 94         call Mov_right
  90+ 97FB 2A 38 86     4 ld hl, (Puntero_mov)
  91+ 97FE CB 66            bit 4,(hl)
  92+ 9800 28 03            jr z,5F
  93+ 9802 CD 50 95         call Mov_left
  94+ 9805
  95+ 9805              ; ---------- --------- --------- ---------- ----------
  96+ 9805
  97+ 9805 3A 3C 86     5 ld a,(Repetimos_db)
  98+ 9808 A7               and a
  99+ 9809 28 07            jr z,6F
 100+ 980B 3D               dec a
 101+ 980C 32 3C 86         ld (Repetimos_db),a
 102+ 980F 28 01            jr z,6f
 103+ 9811 C9           11 ret
 104+ 9812 21 3A 86     6 ld hl,Contador_db_mov
 105+ 9815 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9816 2A 38 86         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9819 23               inc hl
 108+ 981A 22 38 86         ld (Puntero_mov),hl
 109+ 981D 18 F2            jr 11B
 110+ 981F 2A 36 86     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9822 3A 3B 86         ld a,(Incrementa_puntero)
 112+ 9825 47               ld b,a
 113+ 9826 23           8 inc hl
 114+ 9827 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9829 5E               ld e,(hl)
 116+ 982A 23               inc hl
 117+ 982B 56               ld d,(hl)
 118+ 982C EB               ex de,hl
 119+ 982D 22 38 86         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9830 18 DF            jr 11B
 121+ 9832
 122+ 9832              ; ---------- --------- --------- ---------- ----------
 123+ 9832              ;
 124+ 9832              ;   11/8/22
 125+ 9832              ;
 126+ 9832              ;   Prepara_Puntero_mov
 127+ 9832
 128+ 9832 E5           Prepara_Puntero_mov push hl
 129+ 9833 D5               push de
 130+ 9834 2A 36 86         ld hl,(Puntero_indice_mov)
 131+ 9837 5E               ld e,(hl)
 132+ 9838 23               inc hl
 133+ 9839 56               ld d,(hl)
 134+ 983A EB               ex de,hl
 135+ 983B 22 38 86         ld (Puntero_mov),hl
 136+ 983E D1               pop de
 137+ 983F E1               pop hl
 138+ 9840 C9               ret
 139+ 9841
 140+ 9841              ; ---------- --------- --------- ---------- ----------
 141+ 9841              ;
 142+ 9841              ;   11/8/22
 143+ 9841              ;
 144+ 9841              ;   Reinicia_el_movimiento
 145+ 9841
 146+ 9841 CD 32 98     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9844 AF               xor a
 148+ 9845 32 3A 86         ld (Contador_db_mov),a
 149+ 9848 32 3B 86         ld (Incrementa_puntero),a
 150+ 984B C3 B0 97         jp Movimiento
 151+ 984E C9               ret
 152+ 984F              ; ---------- --------- --------- ---------- ----------
 153+ 984F
 154+ 984F
 155+ 984F
 156+ 984F
 157+ 984F
 158+ 984F
 159+ 984F
 160+ 984F
 161+ 984F
 162+ 984F
 163+ 984F
 164+ 984F
 165+ 984F
 166+ 984F
 167+ 984F
 168+ 984F
 169+ 984F
 170+ 984F
# file closed: Patrones_de_mov.asm
1112  984F              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 984F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 984F              ;
   3+ 984F              ;	3/1/23
   4+ 984F              ;
   5+ 984F              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 984F
   7+ 984F              ;	ADC HL,SP	LD (addr),SP
   8+ 984F              ;	ADD HL,SP	LD SP,(addr)
   9+ 984F              ;	ADD IX,SP	LD SP,nn
  10+ 984F              ; 	ADD IY,SP	LD SP,HL
  11+ 984F              ;				LD SP,IX
  12+ 984F              ;	DEC SP		LD SP,IY
  13+ 984F
  14+ 984F              ;	EX (SP),HL
  15+ 984F              ;	EX (SP),IX
  16+ 984F              ;	EX (SP),IY
  17+ 984F
  18+ 984F              ;	INC SP
  19+ 984F
  20+ 984F
  21+ 984F                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 4B 86      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 42 86         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 51 86         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 4F 86     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 51 86         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 4F 86     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 4B 86  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1113  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1114  7FE6
1115  7FE6              	SAVESNA "Pruebas.sna", START
1116  7FE6
1117  7FE6
1118  7FE6
# file closed: Banco_de_pruebas.asm
