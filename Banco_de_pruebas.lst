# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD B4 8E     	call Frame
  15  AA04
  16  AA04 FB           	ei
  17  AA05 ED 4D        	reti
  18  AA07
  19  AA07              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  20  AA07
  21  AA07              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA07              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA07              ;
   3+ AA07              ;	17/02/23
   4+ AA07              ;
   5+ AA07              ;	Sprites e índices.
   6+ AA07
   7+ AA07              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 13 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 17 8A        	defw End_Snapshot_1
 267+ 8500 1B 8A        	defw End_Snapshot_2
 268+ 8502 1F 8A        	defw End_Snapshot_3
 269+ 8504 15 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 19 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1D 8A        	defw End_Snapshot_disparos_2
 272+ 850A 21 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  22  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 C3 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 C3 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  23  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BB 88        	defw Nivel_2
   7+ 88AD C8 88        	defw Nivel_3
   8+ 88AF D8 88        	defw Nivel_4
   9+ 88B1 EA 88        	defw Nivel_5
  10+ 88B3              ;	...
  11+ 88B3              ;	...
  12+ 88B3              ;	+ Niveles ...
  13+ 88B3
  14+ 88B3 00 00        	defw 0
  15+ 88B5 00 00        	defw 0
  16+ 88B7
  17+ 88B7 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 88B8 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 88BB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 88BC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88C0 01 02
  21+ 88C2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 88C6 01 02
  22+ 88C8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 88C9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  23+ 88CD 01
  24+ 88CE 03 01 01 01  	db 3,1,1,1,1
  24+ 88D2 01
  25+ 88D3 03 01 01 01  	db 3,1,1,1,1
  25+ 88D7 01
  26+ 88D8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 88D9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  27+ 88DD 01
  28+ 88DE 04 01 01 01  	db 4,1,1,1,1
  28+ 88E2 01
  29+ 88E3 04 01 01 01  	db 4,1,1,1,1
  29+ 88E7 01
  30+ 88E8 02 03        	db 2,3
  31+ 88EA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 88EB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  32+ 88EF 01
  33+ 88F0 05 01 01 01  	db 5,1,1,1,1
  33+ 88F4 01
  34+ 88F5 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88F9 01
  35+ 88FA 05 01 01 01  	db 5,1,1,1,1
  35+ 88FE 01
  36+ 88FF
  37+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  38+ 88FF              ;
  39+ 88FF              ;   21/5/23
  40+ 88FF              ;
  41+ 88FF              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 88FF              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 88FF              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 88FF              ;	_en la caja DRAW correspondiente.
  45+ 88FF              ;
  46+ 88FF              ;	MODIFICA: HL,DE y A.
  47+ 88FF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 88FF
  49+ 88FF              Inicializa_Punteros_de_nivel
  50+ 88FF
  51+ 88FF 21 A9 88     	ld hl,Indice_de_niveles
  52+ 8902 22 4E 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8905 CD 8A 8D     	call Extrae_address
  54+ 8908 7E           	ld a,(hl)
  55+ 8909 32 01 8A     	ld (Numero_de_entidades),a
  56+ 890C 23           	inc hl
  57+ 890D 22 50 8A     	ld (Datos_de_nivel),hl
  58+ 8910 C9           	ret
  59+ 8911
  60+ 8911              ;---------------------------------------------------------------------------------------------------------------
  61+ 8911              ;
  62+ 8911              ;   13/5/23
  63+ 8911              ;
  64+ 8911              ;	Destruye A,BC,HL,DE
  65+ 8911
  66+ 8911              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8911              ;	_del juego.
  68+ 8911
  69+ 8911              Prepara_cajas
  70+ 8911
  71+ 8911              ; Preparamos los punteros de las cajas.
  72+ 8911
  73+ 8911 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8914 CD 8A 8D     	call Extrae_address
  75+ 8917 CD 54 89     	call Avanza_caja
  76+ 891A
  77+ 891A CD 98 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 891D
  79+ 891D 2A 50 8A     	ld hl,(Datos_de_nivel)
  80+ 8920
  81+ 8920              ; HL está en los datos del nivel correspondiente.
  82+ 8920              ; B actuará como contador de cajas.
  83+ 8920
  84+ 8920 C5           1 push bc
  85+ 8921
  86+ 8921 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8922 CD 45 89     	call PreparaBC
  88+ 8925
  89+ 8925 21 85 88     	ld hl,Indice_de_entidades
  90+ 8928 CD 4D 89     	call SBC_HL_con_BC_y_Extrae
  91+ 892B 22 07 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 892E
  93+ 892E CD 5E 89     	call Datos_de_entidad_a_caja
  94+ 8931
  95+ 8931 2A FF 89     	ld hl,(Indice_restore_caja)
  96+ 8934 CD 8A 8D     	call Extrae_address
  97+ 8937 CD 54 89     	call Avanza_caja
  98+ 893A
  99+ 893A 2A 50 8A     	ld hl,(Datos_de_nivel)
 100+ 893D 23           	inc hl
 101+ 893E 22 50 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8941
 103+ 8941 C1           	pop bc
 104+ 8942 10 DC        	djnz 1B
 105+ 8944 C9           	ret
 106+ 8945
 107+ 8945 CB 27        PreparaBC sla a
 108+ 8947 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8949 4F           	ld c,a
 110+ 894A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 894C C9           	ret
 112+ 894D
 113+ 894D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 894E ED 4A        	adc hl,bc
 115+ 8950 CD 8A 8D     	call Extrae_address
 116+ 8953 C9           	ret
 117+ 8954
 118+ 8954 22 FB 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8957 13           	inc de
 120+ 8958 13           	inc de
 121+ 8959 EB           	ex de,hl
 122+ 895A 22 FF 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 895D C9           	ret
 124+ 895E
 125+ 895E              Datos_de_entidad_a_caja
 126+ 895E
 127+ 895E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 895E
 129+ 895E
 130+ 895E ED 5B FB 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8962
 132+ 8962 01 02 00     	ld bc,2
 133+ 8965 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8967
 135+ 8967 01 07 00     	ld bc,7
 136+ 896A CD 92 89     	call Situa_DE
 137+ 896D
 138+ 896D 01 05 00     	ld bc,5
 139+ 8970 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8972
 141+ 8972 01 04 00     	ld bc,4
 142+ 8975 CD 92 89     	call Situa_DE
 143+ 8978
 144+ 8978 01 07 00     	ld bc,7
 145+ 897B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 897D
 147+ 897D 01 18 00     	ld bc,24
 148+ 8980 CD 92 89     	call Situa_DE
 149+ 8983
 150+ 8983 01 02 00     	ld bc,2
 151+ 8986 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8988
 153+ 8988              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8988              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8988
 156+ 8988 01 0F 00     	ld bc,15									; *****
 157+ 898B CD 92 89     	call Situa_DE
 158+ 898E
 159+ 898E 3E 03        	ld a,3
 160+ 8990 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8991
 162+ 8991 C9           	ret
 163+ 8992
 164+ 8992 EB           Situa_DE ex de,hl
 165+ 8993 A7           	and a
 166+ 8994 ED 4A        	adc hl,bc
 167+ 8996 EB           	ex de,hl
 168+ 8997 C9           	ret
 169+ 8998
 170+ 8998              ;---------------------------------------------------------------------------------------------------------------
 171+ 8998              ;
 172+ 8998              ;	21/5/23
 173+ 8998              ;
 174+ 8998              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8998              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8998              ;
 177+ 8998              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8998              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8998              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8998              ;
 181+ 8998              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8998              ;	MODIFICA: A y B.
 183+ 8998              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8998
 185+ 8998              Admin_num_entidades
 186+ 8998
 187+ 8998              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8998
 189+ 8998 3A 01 8A     	ld a,(Numero_de_entidades)
 190+ 899B A7           	and a
 191+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 899C              ;	jr z,$
 193+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 899C
 195+ 899C 20 03        	jr nz,3F
 196+ 899E
 197+ 899E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 899E
 199+ 899E CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 89A1
 201+ 89A1 3A 01 8A     3 ld a,(Numero_de_entidades)
 202+ 89A4 FE 0A        	cp 10
 203+ 89A6 38 08        	jr c,1F
 204+ 89A8
 205+ 89A8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 89A8              ; Actualizamos variables.
 207+ 89A8
 208+ 89A8 3E 0A        	ld a,10
 209+ 89AA 32 02 8A     	ld (Numero_parcial_de_entidades),a
 210+ 89AD 47           	ld b,a
 211+ 89AE 18 04        	jr 2F
 212+ 89B0
 213+ 89B0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 89B0              ; (Numero_de_entidades)="0".
 215+ 89B0
 216+ 89B0 32 02 8A     1 ld (Numero_parcial_de_entidades),a
 217+ 89B3 47           	ld b,a
 218+ 89B4 C9           2 ret
# file closed: Niveles.asm
  24  89B5
  25  89B5              ; ******************************************************************************************************************************************************************************************
  26  89B5              ; Constantes.
  27  89B5              ; ******************************************************************************************************************************************************************************************
  28  89B5              ;
  29  89B5              ; 25/05/23
  30  89B5              ;
  31  89B5              ; Constantes generales.
  32  89B5              ;
  33  89B5
  34  89B5              Sprite_vacio equ $f000
  35  89B5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  36  89B5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  37  89B5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  38  89B5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  39  89B5
  40  89B5              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  41  89B5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  42  89B5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  43  89B5              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  44  89B5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  45  89B5              ;                               				        ; De momento situamos este almacén en $7060.
  46  89B5              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  47  89B5              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  48  89B5              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  49  89B5              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  50  89B5              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  51  89B5              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  52  89B5
  53  89B5              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  54  89B5
  55  89B5              ; ******************************************************************************************************************************************************************************************
  56  89B5              ; Variables.
  57  89B5              ; ******************************************************************************************************************************************************************************************
  58  89B5              ;
  59  89B5              ; 28/07/23
  60  89B5              ;
  61  89B5              ; Variables de DRAW. (Motor principal).
  62  89B5              ;
  63  89B5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  64  89B5
  65  89B5 00           Filas db 0												; Filas. [DRAW]
  66  89B6 00           Columns db 0  											; Nº de columnas. [DRAW]
  67  89B7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  68  89B9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  69  89BB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  70  89BC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  71  89BD
  72  89BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  73  89BD
  74  89BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  75  89BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  76  89BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  77  89BE 00           Attr db 0												; Atributos de la entidad:
  78  89BF
  79  89BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  80  89BF              ;
  81  89BF              ;	COLORES: 0 ..... NEGRO
  82  89BF              ;    		 1 ..... AZUL
  83  89BF              ; 			 2 ..... ROJO
  84  89BF              ;			 3 ..... MAGENTA
  85  89BF              ; 			 4 ..... VERDE
  86  89BF              ; 			 5 ..... CIAN
  87  89BF              ;			 6 ..... AMARILLO
  88  89BF              ; 			 7 ..... BLANCO
  89  89BF
  90  89BF 00 00        Indice_Sprite_der defw 0
  91  89C1 00 00        Indice_Sprite_izq defw 0
  92  89C3 00 00        Puntero_DESPLZ_der defw 0
  93  89C5 00 00        Puntero_DESPLZ_izq defw 0
  94  89C7
  95  89C7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  96  89C9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  97  89CA
  98  89CA              ; Variables de objeto. (Características).
  99  89CA
 100  89CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 101  89CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 102  89CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 103  89CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 104  89CE
 105  89CE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 106  89CF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 107  89CF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 108  89CF
 109  89CF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 110  89D1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 111  89D3 00 00        	defw 0
 112  89D5 00 00 00 00  	db 0,0,0,0
 113  89D9
 114  89D9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 115  89DB 00 00        	defw 0
 116  89DD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 117  89DF 00 00 00 00  	db 0,0,0,0
 118  89E3
 119  89E3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 120  89E3
 121  89E3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 122  89E4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 123  89E4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 124  89E4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 125  89E4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 126  89E4              ;
 127  89E4              ; 														DESCRIPCIÖN:
 128  89E4              ;
 129  89E4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 130  89E4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 131  89E4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 132  89E4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 133  89E4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 134  89E4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 135  89E4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 136  89E4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 137  89E4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 138  89E4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 139  89E4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 140  89E4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 141  89E4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 142  89E4              ;
 143  89E4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 144  89E4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 145  89E4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 146  89E4
 147  89E4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 148  89E5
 149  89E5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 150  89E5
 151  89E5 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 152  89E6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 153  89E8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 154  89EA 00 00        Puntero_indice_mov_bucle defw 0							;
 155  89EC              ;
 156  89EC              ;
 157  89EC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 158  89ED              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 159  89ED              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 160  89ED 00           Incrementa_puntero_backup db 0
 161  89EE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 162  89EF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 163  89EF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 164  89F0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 165  89F1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 166  89F2              ;
 167  89F2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 168  89F2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 169  89F2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 170  89F2              ;
 171  89F2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 172  89F2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 173  89F2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 174  89F2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 175  89F2              ;
 176  89F2              ;														;	"$ff" ..... Bucle infinito de repetición.
 177  89F2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 178  89F2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 179  89F2
 180  89F2
 181  89F2              ; Variables de funcionamiento. [DRAW].
 182  89F2
 183  89F2 00           Columnas db 0
 184  89F3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 185  89F5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  89F5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 187  89F6
 188  89F6              ; variables de control general.
 189  89F6
 190  89F6 00           Ctrl_2 db 0
 191  89F7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 192  89F7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 193  89F7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 194  89F7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 195  89F7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 196  89F7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 197  89F7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 198  89F7              ;
 199  89F7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 200  89F7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 201  89F7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 202  89F7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 203  89F7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 204  89F7
 205  89F7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 206  89F8
 207  89F8              ;! 67 Bytes por entidad.
 208  89F8
 209  89F8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 210  89F8              ;					         		---------;      ;---------
 211  89F8
 212  89F8
 213  89F8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 214  89F8
 215  89F8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 216  89F9
 217  89F9              ;														DESCRIPCIÓN:
 218  89F9              ;
 219  89F9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 220  89F9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 221  89F9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 222  89F9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 223  89F9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 224  89F9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 225  89F9
 226  89F9              ;														BIT 3, Recarga de nueva oleada.
 227  89F9              ;														BIT 4, Recarga de nueva oleada.
 228  89F9              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 229  89F9              ;														BIT 6, **** Frame completo.
 230  89F9
 231  89F9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 232  89FB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 233  89FB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 234  89FB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 235  89FB
 236  89FB
 237  89FB
 238  89FB              ; Gestión de ENTIDADES y CAJAS.
 239  89FB
 240  89FB 00 00        Puntero_store_caja defw 0
 241  89FD 00 00        Puntero_restore_caja defw 0
 242  89FF 00 00        Indice_restore_caja defw 0
 243  8A01 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 244  8A02 00           Numero_parcial_de_entidades db 0
 245  8A03 00           Entidades_en_curso db 0									; ..... ..... .....
 246  8A04 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 247  8A05              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 248  8A05              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 249  8A05              ;														; _ (Numero_de_malotes)="0".
 250  8A05 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 251  8A07 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 252  8A09              ;														; _ puntero (Indice_entidades).
 253  8A09
 254  8A09
 255  8A09              ;---------------------------------------------------------------------------------------------------------------
 256  8A09              ;
 257  8A09              ;	9/8/23
 258  8A09              ;
 259  8A09              ;	Álbumes.
 260  8A09
 261  8A09 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 262  8A0B              ;														; _variable para almacenar lo posición del puntero_
 263  8A0B              ; 														; _de pila, SP.
 264  8A0B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 265  8A0D              ;														; La utiliza la rutina [Extrae_foto_registros].
 266  8A0D 00 00        Stack_3 defw 0
 267  8A0F              ;
 268  8A0F 00 00        Stack_snapshot defw 0
 269  8A11 00 00        Stack_snapshot_disparos defw 0
 270  8A13
 271  8A13 00 00        End_Snapshot defw 0
 272  8A15              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 273  8A15 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 274  8A17              ;														; _el snapshot de los registros del siguiente disparo.
 275  8A17              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 276  8A17 00 00        End_Snapshot_1 defw 0
 277  8A19 00 00        End_Snapshot_disparos_1 defw 0
 278  8A1B 00 00        End_Snapshot_2 defw 0
 279  8A1D 00 00        End_Snapshot_disparos_2 defw 0
 280  8A1F 00 00        End_Snapshot_3 defw 0
 281  8A21 00 00        End_Snapshot_disparos_3 defw 0
 282  8A23
 283  8A23 00 00        Puntero_indice_album_de_fotos defw 0
 284  8A25 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 285  8A27
 286  8A27 00 00        Puntero_indice_End_Snapshot defw 0
 287  8A29 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 288  8A2B 00 00        Puntero_de_End_Snapshot defw 0
 289  8A2D 00 00        Puntero_de_End_Snapshot_disparos defw 0
 290  8A2F
 291  8A2F              ;---------------------------------------------------------------------------------------------------------------
 292  8A2F
 293  8A2F              ; Gestión de Disparos.
 294  8A2F
 295  8A2F 00           Numero_de_disparotes db 0
 296  8A30 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 297  8A32 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 298  8A34 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 299  8A35              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 300  8A35              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 301  8A35 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 302  8A37              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 303  8A37              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 304  8A37              ;														; _produzca colisión.
 305  8A37 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 306  8A39              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 307  8A39 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 308  8A3C              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 309  8A3C 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 310  8A3F              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 311  8A3F 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 312  8A41 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 313  8A42
 314  8A42              ;---------------------------------------------------------------------------------------------------------------
 315  8A42
 316  8A42              ; Relojes y temporizaciones.
 317  8A42
 318  8A42 00           Contador_de_frames db 0
 319  8A43 00           Contador_de_frames_2 db 0
 320  8A44
 321  8A44 04           Clock_explosion db 4
 322  8A45 1E           Clock_Entidades_en_curso db 30
 323  8A46 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 324  8A47              ;														; Repite la oleada de entidades.
 325  8A47 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 326  8A48 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 327  8A49 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 328  8A4A
 329  8A4A 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 330  8A4B 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 331  8A4C 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 332  8A4D
 333  8A4D              ;---------------------------------------------------------------------------------------------------------------
 334  8A4D
 335  8A4D              ; Gestión de NIVELES.
 336  8A4D
 337  8A4D 00           Nivel db 0												; Nivel actual del juego.
 338  8A4E 00 00        Puntero_indice_NIVELES defw 0
 339  8A50 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 340  8A52              ; 														; _ que definen el NIVEL.
 341  8A52              ; Y todo comienza aquí .....
 342  8A52              ;
 343  8A52              ; Rutina principal *************************************************************************************************************************************************************************
 344  8A52              ;
 345  8A52              ;	14/11/22
 346  8A52
 347  8A52              START
 348  8A52
 349  8A52 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 350  8A55 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 351  8A57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 352  8A59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 353  8A5B F3           	DI
 354  8A5C
 355  8A5C 3E 07        	ld a,%00000111
 356  8A5E CD FF 99     	call Cls
 357  8A61
 358  8A61 CD 63 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 359  8A64
 360  8A64              ; INICIALIZACIÓN.
 361  8A64
 362  8A64 CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 363  8A67
 364  8A67 CD 11 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 365  8A6A
 366  8A6A CD D6 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 367  8A6D              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 368  8A6D CD EC 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 369  8A70              ;													     ; _ malotes antes de guardar ninguna foto.
 370  8A70              ; ----------
 371  8A70
 372  8A70 CD 13 8E     	call Restore_entidad
 373  8A73
 374  8A73 21 02 8A     	ld hl,Numero_parcial_de_entidades
 375  8A76 46           	ld b,(hl)
 376  8A77 04           	inc b
 377  8A78 05           	dec b
 378  8A79 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 379  8A7B
 380  8A7B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 381  8A7B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 382  8A7B              ;	Pintamos el resto de entidades:
 383  8A7B
 384  8A7B              ;	INICIA ENTIDADES !!!!!
 385  8A7B
 386  8A7B C5           1 push bc  												; Guardo el contador de entidades.
 387  8A7C
 388  8A7C CD 7D 8C     	call Inicia_entidad
 389  8A7F
 390  8A7F C1           	pop bc
 391  8A80 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 392  8A82
 393  8A82              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 394  8A82              ; (Esto se dá cuando se inicia una nueva oleada).
 395  8A82
 396  8A82 3A F8 89     	ld a,(Ctrl_1)
 397  8A85 CB 5F        	bit 3,a
 398  8A87 20 18        	jr nz,5F											; Loop
 399  8A89
 400  8A89              ; 	INICIA AMADEUS !!!!!
 401  8A89
 402  8A89 CD 3A 8E     3 call Restore_Amadeus
 403  8A8C CD 90 8D     	call Inicia_Puntero_objeto
 404  8A8F CD 35 94     	call Draw
 405  8A92 CD A0 7F     	call Guarda_foto_registros
 406  8A95 11 A4 85     	ld de,Amadeus_db
 407  8A98 CD 4C 8E     	call Store_Amadeus
 408  8A9B
 409  8A9B              ; 	INICIA DISPAROS !!!!!
 410  8A9B
 411  8A9B CD 4C 8D     	call Inicia_Puntero_Disparo_Entidades
 412  8A9E CD 53 8D     	call Inicia_Puntero_Disparo_Amadeus
 413  8AA1
 414  8AA1              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 415  8AA1
 416  8AA1 CD D6 8C     5 call Inicia_punteros_de_cajas
 417  8AA4 CD 13 8E     	call Restore_entidad
 418  8AA7
 419  8AA7 3A F8 89     	ld a,(Ctrl_1)
 420  8AAA CB 5F        	bit 3,a
 421  8AAC 28 0A        	jr z,6F
 422  8AAE
 423  8AAE              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 424  8AAE
 425  8AAE 21 F8 89     	ld hl,Ctrl_1
 426  8AB1 CB 9E        	res 3,(hl)
 427  8AB3 CD 5A 8D     	call Calcula_numero_de_malotes
 428  8AB6 18 0A        	jr Main
 429  8AB8
 430  8AB8              ; ----------
 431  8AB8
 432  8AB8 3A 02 8A     6 ld a,(Numero_parcial_de_entidades)
 433  8ABB 3C           	inc a
 434  8ABC 32 04 8A     	ld (Numero_de_malotes),a
 435  8ABF
 436  8ABF              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 437  8ABF              ; _ tenemos calculado (Numero_de_malotes).
 438  8ABF              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 439  8ABF              ; _ para situarnos en el siguiente album.
 440  8ABF
 441  8ABF CD 1D 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 442  8AC2
 443  8AC2              ; ------------------------------------
 444  8AC2
 445  8AC2              Main
 446  8AC2
 447  8AC2              ;
 448  8AC2              ;	3/8/23
 449  8AC2
 450  8AC2 FB           	ei
 451  8AC3
 452  8AC3 3A 45 8A     	ld a,(Clock_Entidades_en_curso)
 453  8AC6 47           	ld b,a
 454  8AC7 3A 42 8A     	ld a,(Contador_de_frames)
 455  8ACA B8           	cp b
 456  8ACB 20 18        	jr nz,13F
 457  8ACD
 458  8ACD 3A 02 8A     	ld a,(Numero_parcial_de_entidades)
 459  8AD0 47           	ld b,a
 460  8AD1 3A 03 8A     	ld a,(Entidades_en_curso)
 461  8AD4 B8           	cp b
 462  8AD5 28 0E        	jr z,13F
 463  8AD7 30 0C        	jr nc,13F
 464  8AD9
 465  8AD9 3C           	inc a
 466  8ADA 32 03 8A     	ld (Entidades_en_curso),a
 467  8ADD
 468  8ADD 3A 45 8A     	ld a,(Clock_Entidades_en_curso)
 469  8AE0
 470  8AE0              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 471  8AE0              ;! _ IMPREDECIBLE !!!!
 472  8AE0
 473  8AE0 C6 64        	add 100
 474  8AE2 32 45 8A     	ld (Clock_Entidades_en_curso),a
 475  8AE5
 476  8AE5              ; Habilita disparos.
 477  8AE5
 478  8AE5 21 47 8A     13 ld hl,Disparo_Amadeus
 479  8AE8 11 49 8A     	ld de,CLOCK_repone_disparo_Amadeus
 480  8AEB CD C4 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 481  8AEE
 482  8AEE 21 4A 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 483  8AF1 11 4C 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 484  8AF4 CD C4 A0     	call Habilita_disparos
 485  8AF7
 486  8AF7              ; COLISIONES.
 487  8AF7
 488  8AF7 CD 17 93     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 489  8AFA
 490  8AFA              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 491  8AFA              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 492  8AFA              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 493  8AFA
 494  8AFA AF           	xor a
 495  8AFB 32 34 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 496  8AFE
 497  8AFE CD D6 8C     	call Inicia_punteros_de_cajas
 498  8B01 CD 13 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 499  8B04              ; 														; _ en DRAW.
 500  8B04 3A B5 89     	ld a,(Filas)
 501  8B07 A7           	and a
 502  8B08 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 503  8B0A CD 25 8E     	call Incrementa_punteros_de_cajas
 504  8B0D 18 F2        	jr 12B
 505  8B0F
 506  8B0F              ; ---------------------------------------------------------------------------------------
 507  8B0F
 508  8B0F 3A 02 8A     10 ld a,(Numero_parcial_de_entidades)
 509  8B12 47               ld b,a
 510  8B13 A7           	and a
 511  8B14 20 14        	jr nz,11F
 512  8B16
 513  8B16 21 F8 89     	ld hl,Ctrl_1
 514  8B19 CB 66        	bit 4,(hl)
 515  8B1B C2 A7 8B     	jp nz,16F
 516  8B1E
 517  8B1E 21 F8 89     	ld hl,Ctrl_1
 518  8B21 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 519  8B23
 520  8B23 3A 42 8A     	ld a,(Contador_de_frames)
 521  8B26 3C           	inc a
 522  8B27 32 46 8A     	ld (Activa_recarga_cajas),a
 523  8B2A
 524  8B2A              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 525  8B2A
 526  8B2A 3A 03 8A     11 ld a,(Entidades_en_curso)
 527  8B2D A7           	and a
 528  8B2E CA A7 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 529  8B31 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 530  8B32
 531  8B32              ; Código que ejecutamos con cada entidad:
 532  8B32              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 533  8B32
 534  8B32 C5           15 push bc 												; Nº de entidades en curso.
 535  8B33
 536  8B33              ; Impacto ???
 537  8B33
 538  8B33 3A CE 89     	ld a,(Impacto)
 539  8B36 A7           	and a
 540  8B37 28 2D        	jr z,8F
 541  8B39
 542  8B39              ; Hay Impacto en esta entidad.
 543  8B39
 544  8B39 21 44 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 545  8B3C 35           	dec (hl)
 546  8B3D 20 62        	jr nz,17F
 547  8B3F
 548  8B3F              ;! Velocidad de la animación de la explosión.
 549  8B3F
 550  8B3F 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 551  8B41              ;														; _,(velocidad de la explosión).
 552  8B41 CD 8D 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 553  8B44
 554  8B44              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 555  8B44
 556  8B44 3A F6 89     	ld a,(Ctrl_2)
 557  8B47 CB 4F        	bit 1,a
 558  8B49 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 559  8B4B
 560  8B4B              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 561  8B4B
 562  8B4B 3A BD 89     	ld a,(CTRL_DESPLZ)
 563  8B4E A7           	and a
 564  8B4F 20 08        	jr nz,18F
 565  8B51
 566  8B51 21 84 84     	ld hl,Indice_Explosion_2x2-2
 567  8B54 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 568  8B57 18 06        	jr 19F
 569  8B59
 570  8B59 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 571  8B5C 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 572  8B5F
 573  8B5F 21 F6 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 574  8B62 CB CE        	set 1,(hl)
 575  8B64 18 22        	jr 7F
 576  8B66
 577  8B66              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 578  8B66              ; _con las coordenadas de la entidad almacenada en DRAW.
 579  8B66
 580  8B66 3A F8 89     8 ld a,(Ctrl_1)
 581  8B69 CB 57        	bit 2,a
 582  8B6B 28 1B        	jr z,7F
 583  8B6D
 584  8B6D 2A 37 8A     	ld hl,(Coordenadas_disparo_certero)
 585  8B70 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 586  8B71              ;														; E contiene la coordenada_X del disparo.
 587  8B71 2A BB 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 588  8B74              ;														; H FILA, (Coordenada_y de la entidad).
 589  8B74 A7           	and a
 590  8B75 ED 52        	sbc hl,de
 591  8B77
 592  8B77 CD 4E 93     	call Determina_resultado_comparativa
 593  8B7A
 594  8B7A 78           	ld a,b
 595  8B7B A7           	and a
 596  8B7C 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 597  8B7E
 598  8B7E              ; ----- ----- -----
 599  8B7E
 600  8B7E 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 601  8B80 32 CE 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 602  8B83
 603  8B83 21 F8 89     	ld hl,Ctrl_1
 604  8B86 CB 96        	res 2,(hl)
 605  8B88
 606  8B88 CD FF 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 607  8B8B
 608  8B8B 3A E3 89     	ld a,(Ctrl_0)
 609  8B8E CB 67        	bit 4,a
 610  8B90 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 611  8B92
 612  8B92              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 613  8B92              ; [[[
 614  8B92 CD AE 8E     	call Detecta_disparo_entidad
 615  8B95              ; ]]]
 616  8B95 CD 9D 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 617  8B98
 618  8B98 21 E3 89     	ld hl,Ctrl_0
 619  8B9B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 620  8B9D AF           	xor a
 621  8B9E 32 E4 89     	ld (Obj_dibujado),a
 622  8BA1
 623  8BA1 CD D8 8D     17 call Store_Restore_cajas
 624  8BA4
 625  8BA4 C1           	pop bc
 626  8BA5 10 8B        	djnz 15B
 627  8BA7
 628  8BA7              ; ------------------------------------
 629  8BA7
 630  8BA7              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 631  8BA7              ; Hemos gestionado todas las unidades.
 632  8BA7              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 633  8BA7
 634  8BA7              ;	ld hl,Ctrl_1
 635  8BA7              ;	res 2,(hl)
 636  8BA7
 637  8BA7              ; ------------------------------------
 638  8BA7
 639  8BA7              ; Tras la gestión de las entidades, ... AMADEUS.
 640  8BA7
 641  8BA7 CD 3A 8E     16 call Restore_Amadeus
 642  8BAA
 643  8BAA 3A CE 89     	ld a,(Impacto)
 644  8BAD A7           	and a
 645  8BAE 20 FE        	jr nz,$
 646  8BB0
 647  8BB0 CD 5E 8C     	call Mov_Amadeus
 648  8BB3
 649  8BB3 3A E3 89     	ld a,(Ctrl_0)
 650  8BB6 CB 67        	bit 4,a
 651  8BB8 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 652  8BBA
 653  8BBA CD 9D 8C     	call Guarda_foto_entidad_a_pintar
 654  8BBD
 655  8BBD 21 E3 89     14 ld hl,Ctrl_0
 656  8BC0 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 657  8BC2
 658  8BC2 AF           	xor a
 659  8BC3 32 E4 89     	ld (Obj_dibujado),a
 660  8BC6
 661  8BC6 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 662  8BC9 CD 4C 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 663  8BCC
 664  8BCC              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 665  8BCC
 666  8BCC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 667  8BCC
 668  8BCC              ;	call Calcula_numero_de_disparotes
 669  8BCC
 670  8BCC CD 1D 8D      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 671  8BCF              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 672  8BCF              ;														; _ interrupción.
 673  8BCF 3E 04        	ld a,4
 674  8BD1 D3 FE        	out ($fe),a
 675  8BD3
 676  8BD3              ; ----------------------------------------
 677  8BD3
 678  8BD3 3A F8 89     	ld a,(Ctrl_1) 										; Existe Loop?
 679  8BD6 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 680  8BD8 CA C2 8A     	jp z,Main
 681  8BDB
 682  8BDB              ; -----
 683  8BDB              ;	(((
 684  8BDB
 685  8BDB 3A 42 8A     	ld a,(Contador_de_frames)
 686  8BDE 47           	ld b,a
 687  8BDF 3A 46 8A     	ld a,(Activa_recarga_cajas)
 688  8BE2 B8           	cp b
 689  8BE3 28 08        	jr z,20F
 690  8BE5
 691  8BE5 21 F8 89     	ld hl,Ctrl_1
 692  8BE8 CB E6        	set 4,(hl)
 693  8BEA C3 C2 8A     	jp Main
 694  8BED
 695  8BED 21 F8 89     20 ld hl,Ctrl_1
 696  8BF0 CB A6        	res 4,(hl)
 697  8BF2 F3           	di
 698  8BF3
 699  8BF3 3A 42 8A     	ld a,(Contador_de_frames)
 700  8BF6
 701  8BF6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 702  8BF6              ;! _ IMPREDECIBLE !!!!
 703  8BF6
 704  8BF6 C6 0A        	add 10
 705  8BF8 32 45 8A     	ld (Clock_Entidades_en_curso),a
 706  8BFB
 707  8BFB C3 67 8A     	jp 4B
 708  8BFE
 709  8BFE C9           	ret
 710  8BFF
 711  8BFF              ; --------------------------------------------------------------------------------------------------------------
 712  8BFF              ;
 713  8BFF              ;	27/05/23
 714  8BFF
 715  8BFF              Mov_obj
 716  8BFF
 717  8BFF              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 718  8BFF
 719  8BFF 3A F6 89     	ld a,(Ctrl_2)
 720  8C02 CB 4F        	bit 1,a
 721  8C04 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 722  8C06
 723  8C06              ; Explosión:
 724  8C06
 725  8C06 3A F7 89     	ld a,(Frames_explosion)
 726  8C09 A7           	and a
 727  8C0A 20 11        	jr nz,4F
 728  8C0C
 729  8C0C              ; Una alimaña menos!!!!!!!!!1
 730  8C0C
 731  8C0C CD 55 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 732  8C0F 21 02 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 733  8C12 35           	dec (hl)
 734  8C13 21 03 8A     	ld hl,Entidades_en_curso
 735  8C16 35           	dec (hl)
 736  8C17 21 01 8A     	ld hl,Numero_de_entidades
 737  8C1A 35           	dec (hl)
 738  8C1B 18 40        	jr 3F
 739  8C1D
 740  8C1D              ; -----
 741  8C1D
 742  8C1D              ;	`Movemos´ la explosión.
 743  8C1D
 744  8C1D 2A C3 89     4 ld hl,(Puntero_DESPLZ_der)
 745  8C20 23           	inc hl
 746  8C21 23           	inc hl
 747  8C22 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 748  8C25 CD 8A 8D     	call Extrae_address
 749  8C28 22 B9 89     	ld (Puntero_objeto),hl
 750  8C2B
 751  8C2B 21 F7 89     	ld hl,Frames_explosion
 752  8C2E 35           	dec (hl)
 753  8C2F
 754  8C2F CD 8D 8C     	call Guarda_foto_entidad_a_borrar
 755  8C32 18 29        	jr 3F
 756  8C34
 757  8C34 AF           2 xor a
 758  8C35 32 E4 89     	ld (Obj_dibujado),a
 759  8C38 32 E3 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 760  8C3B              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 761  8C3B              ; 														; _de la entidad.
 762  8C3B CD A7 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 763  8C3E              ;														; Obj_dibujado="0".
 764  8C3E              ; Movemos Entidades malignas.
 765  8C3E
 766  8C3E              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 767  8C3E              ;	and a 												; _a movernos. (Limitador_de_entidades).
 768  8C3E              ;	ret z
 769  8C3E
 770  8C3E CD 5F 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 771  8C41
 772  8C41 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 773  8C44 CB 67        	bit 4,a
 774  8C46 C8           	ret z
 775  8C47
 776  8C47              ; Ha habido desplazamiento de la entidad maligna.
 777  8C47              ; Ha llegado a zona de AMADEUS ???
 778  8C47
 779  8C47 3A BC 89     	ld a,(Coordenada_y)
 780  8C4A FE 14        	cp $14
 781  8C4C D4 DC 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 782  8C4F              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 783  8C4F              ; ---------
 784  8C4F
 785  8C4F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 786  8C51 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 787  8C54 CD A7 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 788  8C57 CD BE 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 789  8C5A CD 8D 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 790  8C5D C9           3 ret													; _de la misma.
 791  8C5E
 792  8C5E              ; --------------------------------------------------------------------------------------------------------------
 793  8C5E              ;
 794  8C5E              ;	29/1/23
 795  8C5E
 796  8C5E              Mov_Amadeus
 797  8C5E
 798  8C5E AF           	xor a
 799  8C5F 32 E4 89     	ld (Obj_dibujado),a
 800  8C62 CD A7 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 801  8C65              ;														; Obj_dibujado="0".
 802  8C65              ; Movemos Amadeus.
 803  8C65
 804  8C65 CD 77 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 805  8C68 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 806  8C6B CB 67        	bit 4,a
 807  8C6D C8           	ret z
 808  8C6E
 809  8C6E              ; ---------
 810  8C6E
 811  8C6E 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 812  8C70 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 813  8C73 CD A7 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 814  8C76 CD BE 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 815  8C79 CD 8D 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 816  8C7C C9           	ret													; _de la nave.
 817  8C7D
 818  8C7D              ; -----------------------------------------------------------------------------------
 819  8C7D
 820  8C7D CD 90 8D     Inicia_entidad	call Inicia_Puntero_objeto
 821  8C80 CD 13 9A     	call Recompone_posicion_inicio
 822  8C83 CD 35 94     	call Draw
 823  8C86 CD A0 7F     	call Guarda_foto_registros
 824  8C89 CD D8 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 825  8C8C C9           	ret
 826  8C8D
 827  8C8D              ; --------------------------------------------------------------------------------------------------------------
 828  8C8D              ;
 829  8C8D              ;	31/8/23
 830  8C8D              ;
 831  8C8D              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 832  8C8D
 833  8C8D              Guarda_foto_entidad_a_borrar
 834  8C8D
 835  8C8D CD 19 97     	call Prepara_draw
 836  8C90 CD 49 96     	call calcula_CColumnass
 837  8C93 CD 80 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 838  8C96 CD DF 96     	call Define_rutina_de_impresion
 839  8C99 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 840  8C9C C9           	ret
 841  8C9D
 842  8C9D              ; --------------------------------------------------------------------------------------------------------------
 843  8C9D              ;
 844  8C9D              ;	31/08/23
 845  8C9D              ;
 846  8C9D              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 847  8C9D              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 848  8C9D
 849  8C9D              Guarda_foto_entidad_a_pintar
 850  8C9D
 851  8C9D CD CA 8C     	call Repone_pintar
 852  8CA0 CD 35 94     	call Draw
 853  8CA3 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 854  8CA6 C9           	ret
 855  8CA7
 856  8CA7              ; --------------------------------------------------------------------------------------------------------------
 857  8CA7              ;
 858  8CA7              ;
 859  8CA7
 860  8CA7 21 B5 89     Prepara_var_pintado_borrado	ld hl,Filas
 861  8CAA 3A E4 89     	ld a,(Obj_dibujado)
 862  8CAD A7           	and a
 863  8CAE 28 05        	jr z,1F
 864  8CB0 11 D9 89     	ld de,Variables_de_pintado
 865  8CB3 18 03        	jr 2F
 866  8CB5 11 CF 89     1 ld de,Variables_de_borrado
 867  8CB8 01 08 00     2 ld bc,8
 868  8CBB ED B0        	ldir
 869  8CBD C9           	ret
 870  8CBE
 871  8CBE              ; --------------------------------------------------------------------------------------------------------------
 872  8CBE
 873  8CBE 21 CF 89     Repone_borrar ld hl,Variables_de_borrado
 874  8CC1 11 B5 89     	ld de,Filas
 875  8CC4 01 08 00     	ld bc,8
 876  8CC7 ED B0        	ldir
 877  8CC9 C9           	ret
 878  8CCA
 879  8CCA 21 D9 89     Repone_pintar ld hl,Variables_de_pintado
 880  8CCD 11 B5 89     	ld de,Filas
 881  8CD0 01 08 00     	ld bc,8
 882  8CD3 ED B0        	ldir
 883  8CD5 C9           	ret
 884  8CD6
 885  8CD6              ; *************************************************************************************************************************************************************
 886  8CD6              ;
 887  8CD6              ; 8/1/23
 888  8CD6              ;
 889  8CD6              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 890  8CD6              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 891  8CD6              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 892  8CD6
 893  8CD6              ; Destruye HL y DE !!!!!
 894  8CD6
 895  8CD6              Inicia_punteros_de_cajas
 896  8CD6
 897  8CD6 21 8C 85     	ld hl,Indice_de_cajas
 898  8CD9 CD 8A 8D         call Extrae_address
 899  8CDC 22 FB 89         ld (Puntero_store_caja),hl
 900  8CDF 21 8E 85     	ld hl,Indice_de_cajas+2
 901  8CE2 22 FF 89     	ld (Indice_restore_caja),hl
 902  8CE5 CD 8A 8D     	call Extrae_address
 903  8CE8 22 FD 89     	ld (Puntero_restore_caja),hl
 904  8CEB C9               ret
 905  8CEC
 906  8CEC              ; ---------------------------------------------------------------
 907  8CEC              ;
 908  8CEC              ;	9/8/23
 909  8CEC              ;
 910  8CEC              ;	Inicialización y gestión de álbumes de fotos y cajas.
 911  8CEC
 912  8CEC              Inicia_punteros_de_albumes_y_malotes
 913  8CEC
 914  8CEC 21 EC 84     	ld hl,Indice_album_de_fotos
 915  8CEF 22 23 8A     	ld (Puntero_indice_album_de_fotos),hl
 916  8CF2 CD 8A 8D     	call Extrae_address
 917  8CF5 22 0F 8A     	ld (Stack_snapshot),hl
 918  8CF8
 919  8CF8 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 920  8CFB 22 25 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 921  8CFE CD 8A 8D     	call Extrae_address
 922  8D01 22 11 8A     	ld (Stack_snapshot_disparos),hl
 923  8D04
 924  8D04 21 FC 84     	ld hl,Indice_End_Snapshot
 925  8D07 22 27 8A     	ld (Puntero_indice_End_Snapshot),hl
 926  8D0A CD 8A 8D     	call Extrae_address
 927  8D0D 22 2B 8A     	ld (Puntero_de_End_Snapshot),hl
 928  8D10
 929  8D10 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 930  8D13 22 29 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 931  8D16 CD 8A 8D     	call Extrae_address
 932  8D19 22 2D 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 933  8D1C
 934  8D1C C9           	ret
 935  8D1D
 936  8D1D              ;	12/8/23
 937  8D1D
 938  8D1D              Avanza_puntero_de_album_de_fotos_y_malotes
 939  8D1D
 940  8D1D              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 941  8D1D
 942  8D1D              ; Estamos en el último álbum del índice???.
 943  8D1D
 944  8D1D 2A 23 8A     	ld hl,(Puntero_indice_album_de_fotos)
 945  8D20 01 F2 84     	ld bc,Indice_album_de_fotos+6
 946  8D23 A7           	and a
 947  8D24 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 948  8D26 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 949  8D28
 950  8D28 21 F8 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 951  8D2B CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 952  8D2D 76           	halt
 953  8D2E C9           	ret
 954  8D2F
 955  8D2F 2A 23 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 956  8D32 23           	inc hl
 957  8D33 23           	inc hl
 958  8D34 22 23 8A     	ld (Puntero_indice_album_de_fotos),hl
 959  8D37 CD 8A 8D     	call Extrae_address
 960  8D3A 22 0F 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 961  8D3D
 962  8D3D 2A 27 8A     	ld hl,(Puntero_indice_End_Snapshot)
 963  8D40 23           	inc hl
 964  8D41 23           	inc hl
 965  8D42 22 27 8A     	ld (Puntero_indice_End_Snapshot),hl
 966  8D45 CD 8A 8D     	call Extrae_address
 967  8D48 22 2B 8A     	ld (Puntero_de_End_Snapshot),hl
 968  8D4B
 969  8D4B C9           	ret
 970  8D4C
 971  8D4C              ; *************************************************************************************************************************************************************
 972  8D4C              ;
 973  8D4C              ; 8/1/23
 974  8D4C              ;
 975  8D4C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 976  8D4C
 977  8D4C 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 978  8D4F 22 30 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 979  8D52 C9           	ret
 980  8D53 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 981  8D56 22 32 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 982  8D59 C9           	ret
 983  8D5A
 984  8D5A              ; -------------------------------------------------------------------------------------------------------------
 985  8D5A              ;
 986  8D5A              ; 3/8/23
 987  8D5A              ;
 988  8D5A
 989  8D5A              Calcula_numero_de_malotes
 990  8D5A
 991  8D5A 21 00 70     	ld hl,Album_de_fotos
 992  8D5D EB           	ex de,hl
 993  8D5E 2A 13 8A     	ld hl,(End_Snapshot)
 994  8D61
 995  8D61 06 00        	ld b,0
 996  8D63 7D           	ld a,l
 997  8D64 93           	sub e
 998  8D65 28 07        	jr z,1F
 999  8D67
1000  8D67              ; Nº de malotes no es "0".
1001  8D67
1002  8D67 D6 06        2 sub 6
1003  8D69 04           	inc b
1004  8D6A A7           	and a
1005  8D6B 20 FA        	jr nz,2B
1006  8D6D 78           	ld a,b
1007  8D6E
1008  8D6E 32 04 8A     1 ld (Numero_de_malotes),a
1009  8D71 C9           	ret
1010  8D72
1011  8D72              ; -------------------------------------------------------------------------------------------------------------
1012  8D72              ;
1013  8D72              ; 28/2/23
1014  8D72              ;
1015  8D72
1016  8D72              Calcula_numero_de_disparotes
1017  8D72
1018  8D72 21 0D 72     	ld hl,Album_de_fotos_disparos
1019  8D75 EB           	ex de,hl
1020  8D76 2A 2D 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1021  8D79
1022  8D79 06 00        	ld b,0
1023  8D7B 7D           	ld a,l
1024  8D7C 93           	sub e
1025  8D7D 28 07        	jr z,1F
1026  8D7F
1027  8D7F              ; Nº de malotes no es "0".
1028  8D7F
1029  8D7F D6 06        2 sub 6
1030  8D81 04           	inc b
1031  8D82 A7           	and a
1032  8D83 20 FA        	jr nz,2B
1033  8D85 78           	ld a,b
1034  8D86
1035  8D86 32 2F 8A     1 ld (Numero_de_disparotes),a
1036  8D89 C9           	ret
1037  8D8A
1038  8D8A              ; *************************************************************************************************************************************************************
1039  8D8A              ;
1040  8D8A              ; 20/10/22
1041  8D8A              ;
1042  8D8A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1043  8D8A              ;
1044  8D8A              ; Destruye el puntero y DE !!!!!
1045  8D8A
1046  8D8A 5E           Extrae_address ld e,(hl)
1047  8D8B 23           	inc hl
1048  8D8C 56           	ld d,(hl)
1049  8D8D 2B           	dec hl
1050  8D8E EB           	ex de,hl
1051  8D8F C9           	ret
1052  8D90
1053  8D90              ; *************************************************************************************************************************************************************
1054  8D90              ;
1055  8D90              ;	7/2/23
1056  8D90              ;
1057  8D90              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1058  8D90              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1059  8D90              ;
1060  8D90              ;   Destruye HL y BC !!!!!,
1061  8D90              ;
1062  8D90              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1063  8D90              ;					"0" ..... Izquierda.
1064  8D90
1065  8D90              Inicia_Puntero_objeto
1066  8D90
1067  8D90 3A C9 89     	ld a,(Cuad_objeto)
1068  8D93 E6 01        	and 1
1069  8D95 F5           	push af
1070  8D96 CC B4 8D     	call z,Inicia_puntero_objeto_izq
1071  8D99 F1           	pop af
1072  8D9A 28 2B        	jr z,1F
1073  8D9C CD A1 8D     	call Inicia_puntero_objeto_der
1074  8D9F 18 26        	jr 1F
1075  8DA1
1076  8DA1              ; Arrancamos desde la parte izquierda de la pantalla.
1077  8DA1              ; Iniciamos (Indice_Sprite_der).
1078  8DA1
1079  8DA1 2A BF 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1080  8DA4 22 C3 89     	ld (Puntero_DESPLZ_der),hl
1081  8DA7 CD 8A 8D     	call Extrae_address
1082  8DAA 22 B9 89     	ld (Puntero_objeto),hl
1083  8DAD
1084  8DAD 2A C1 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1085  8DB0 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1086  8DB3 C9           	ret
1087  8DB4
1088  8DB4              ; Arrancamos desde la parte derecha de la pantalla.
1089  8DB4              ; Iniciamos (Indice_Sprite_izq).
1090  8DB4
1091  8DB4 2A C1 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1092  8DB7 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1093  8DBA CD 8A 8D     	call Extrae_address
1094  8DBD 22 B9 89     	ld (Puntero_objeto),hl
1095  8DC0
1096  8DC0 2A BF 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1097  8DC3 22 C3 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1098  8DC6 C9           	ret
1099  8DC7
1100  8DC7              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1101  8DC7
1102  8DC7 21 40 83     1 ld hl,Amadeus
1103  8DCA ED 4B B9 89  	ld bc,(Puntero_objeto)
1104  8DCE B7 ED 42     	sub hl,bc
1105  8DD1 C0           	ret nz
1106  8DD2 21 E3 89     	ld hl,Ctrl_0
1107  8DD5 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1108  8DD7 C9           	ret 												; _de nuestra nave en los extremos.
1109  8DD8
1110  8DD8              ; *************************************************************************************************************************************************************
1111  8DD8              ;
1112  8DD8              ;	14/5/23
1113  8DD8              ;
1114  8DD8              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1115  8DD8              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1116  8DD8
1117  8DD8              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1118  8DD8              ;	_de la 2ª y 3ª entidad respectivamente.
1119  8DD8
1120  8DD8              Store_Restore_cajas
1121  8DD8
1122  8DD8 E5           	push hl
1123  8DD9 D5           	push de
1124  8DDA C5            	push bc
1125  8DDB
1126  8DDB              ;	STORE !!!!!
1127  8DDB              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1128  8DDB
1129  8DDB 21 B5 89     	ld hl,Filas
1130  8DDE ED 5B FB 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1131  8DE2 01 43 00     	ld bc,67
1132  8DE5 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1133  8DE7
1134  8DE7              ; 	Entidad_sospechosa. 20/4/23
1135  8DE7
1136  8DE7 3A CE 89     	ld a,(Impacto)
1137  8DEA A7           	and a
1138  8DEB 28 0C        	jr z,1F
1139  8DED
1140  8DED 2A FB 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1141  8DF0 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1142  8DF3 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1143  8DF4 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1144  8DF6 22 35 8A     	ld (Entidad_sospechosa_de_colision),hl
1145  8DF9
1146  8DF9              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1147  8DF9
1148  8DF9 2A FD 89     1 ld hl,(Puntero_restore_caja)
1149  8DFC 7E           	ld a,(hl)
1150  8DFD A7           	and a
1151  8DFE F5           	push af
1152  8DFF 28 08        	jr z,2F
1153  8E01
1154  8E01 11 B5 89     	ld de,Filas
1155  8E04 01 43 00     	ld bc,67
1156  8E07 ED B0        	ldir
1157  8E09
1158  8E09 CD 25 8E     2 call Incrementa_punteros_de_cajas
1159  8E0C F1           	pop af
1160  8E0D 28 EA        	jr z,1B
1161  8E0F
1162  8E0F C1           	pop bc
1163  8E10 D1           	pop de
1164  8E11 E1           	pop hl
1165  8E12
1166  8E12 C9           	ret
1167  8E13
1168  8E13              ; **************************************************************************************************
1169  8E13              ;
1170  8E13              ;	12/05/23
1171  8E13              ;
1172  8E13              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1173  8E13
1174  8E13 E5           Restore_entidad push hl
1175  8E14 D5           	push de
1176  8E15 C5            	push bc
1177  8E16
1178  8E16 2A FB 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1179  8E19 11 B5 89     	ld de,Filas
1180  8E1C 01 43 00     	ld bc,67
1181  8E1F ED B0        	ldir
1182  8E21
1183  8E21 C1           	pop bc
1184  8E22 D1           	pop de
1185  8E23 E1           	pop hl
1186  8E24 C9           	ret
1187  8E25
1188  8E25
1189  8E25              ; **************************************************************************************************
1190  8E25              ;
1191  8E25              ;	08/05/23
1192  8E25              ;
1193  8E25              ;	Incrementamos los dos punteros de entidades. (+1).
1194  8E25
1195  8E25 2A FD 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1196  8E28 22 FB 89     	ld (Puntero_store_caja),hl
1197  8E2B 2A FF 89     	ld hl,(Indice_restore_caja)
1198  8E2E 23           	inc hl
1199  8E2F 23           	inc hl
1200  8E30 22 FF 89     	ld (Indice_restore_caja),hl
1201  8E33 CD 8A 8D         call Extrae_address
1202  8E36 22 FD 89         ld (Puntero_restore_caja),hl
1203  8E39 C9               ret
1204  8E3A
1205  8E3A              ; **************************************************************************************************
1206  8E3A              ;
1207  8E3A              ;	25/01/23
1208  8E3A              ;
1209  8E3A              ;	Restore_Amadeus
1210  8E3A              ;
1211  8E3A              ;	Cargamos en DRAW los parámetros de Amadeus.
1212  8E3A              ;
1213  8E3A
1214  8E3A E5           Restore_Amadeus	push hl
1215  8E3B D5           	push de
1216  8E3C C5            	push bc
1217  8E3D 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1218  8E40 11 B5 89     	ld de,Filas
1219  8E43 01 43 00     	ld bc,67
1220  8E46 ED B0        	ldir
1221  8E48 C1           	pop bc
1222  8E49 D1           	pop de
1223  8E4A E1           	pop hl
1224  8E4B C9           	ret
1225  8E4C
1226  8E4C              ; *************************************************************************************************************************************************************
1227  8E4C              ;
1228  8E4C              ;	29/04/23
1229  8E4C              ;
1230  8E4C              ;	Store_Amadeus
1231  8E4C              ;
1232  8E4C              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1233  8E4C              ;
1234  8E4C              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1235  8E4C              ;
1236  8E4C              ;	DESTRUYE: HL y BC y DE.
1237  8E4C
1238  8E4C 21 B5 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1239  8E4F 01 43 00     	ld bc,67
1240  8E52 ED B0        	ldir
1241  8E54 C9           	ret
1242  8E55
1243  8E55              ; -----------------------------------------------------------
1244  8E55              ;
1245  8E55              ;	27/04/23
1246  8E55              ;
1247  8E55              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1248  8E55              ;
1249  8E55              ;	Destruye: HL,BC,DE,A
1250  8E55
1251  8E55 21 B5 89     Borra_datos_entidad ld hl,Filas
1252  8E58 01 42 00     	ld bc,66
1253  8E5B AF           	xor a
1254  8E5C 77           	ld (hl),a
1255  8E5D 11 B6 89     	ld de,Filas+1
1256  8E60 ED B0        	ldir
1257  8E62 C9           	ret
1258  8E63
1259  8E63              ; -----------------------------------------------------------
1260  8E63
1261  8E63              ; Teclado.
1262  8E63
1263  8E63 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1264  8E65 DB FE        	in a,($fe)
1265  8E67 E6 01        	and $01
1266  8E69 28 02        	jr z,1f
1267  8E6B 18 F6        	jr Pulsa_ENTER
1268  8E6D C9           1 ret
1269  8E6E
1270  8E6E              ; **************************************************************************************************
1271  8E6E              ;
1272  8E6E              ; Temporización.
1273  8E6E
1274  8E6E              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1275  8E6E              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1276  8E6E              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1277  8E6E              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1278  8E6E
1279  8E6E              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1280  8E6E              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1281  8E6E              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1282  8E6E
1283  8E6E              ; A partir de $4f61 no hace falta DELAY.
1284  8E6E
1285  8E6E              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1286  8E6E
1287  8E6E 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1288  8E71 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1289  8E72 78           	LD A,B
1290  8E73 A7           	AND A
1291  8E74 20 FB        	JR NZ,wait
1292  8E76 C9           	RET
1293  8E77
1294  8E77              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1295  8E77              ;
1296  8E77              ;	5/3/23
1297  8E77              ;
1298  8E77              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1299  8E77
1300  8E77              Movimiento_Amadeus
1301  8E77
1302  8E77              ; Disparo.
1303  8E77
1304  8E77 3A 47 8A     	ld a,(Disparo_Amadeus)
1305  8E7A A7           	and a
1306  8E7B 20 02        	jr nz,1F
1307  8E7D 18 15        	jr 2F
1308  8E7F
1309  8E7F 3E F7        1 ld a,$f7													; "5" para disparar.
1310  8E81 DB FE        	in a,($fe)
1311  8E83 E6 10        	and $10
1312  8E85
1313  8E85 F5           	push af
1314  8E86 CC 3F 8F     	call z,Genera_disparo
1315  8E89 F1           	pop af
1316  8E8A 20 08        	jr nz,2F
1317  8E8C
1318  8E8C 3A 47 8A     	ld a,(Disparo_Amadeus)
1319  8E8F EE 01        	xor 1
1320  8E91 32 47 8A     	ld (Disparo_Amadeus),a
1321  8E94
1322  8E94 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1323  8E96 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1324  8E98 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1325  8E9A CC CD 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1326  8E9D 3E F7        	ld a,$f7
1327  8E9F DB FE        	in a,($fe)
1328  8EA1 E6 01        	and $01
1329  8EA3 C8           	ret z
1330  8EA4
1331  8EA4 3E F7        	ld a,$f7
1332  8EA6 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1333  8EA8 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1334  8EAA CC AF 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1335  8EAD C9           	ret
1336  8EAE
1337  8EAE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1338  8EAE              ;
1339  8EAE              ;	Rutina provisional para que los malotes cagen balas.
1340  8EAE
1341  8EAE              Detecta_disparo_entidad
1342  8EAE
1343  8EAE 3A 4A 8A     	ld a,(Disparo_entidad)
1344  8EB1 A7           	and a
1345  8EB2 C8           	ret z
1346  8EB3
1347  8EB3              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1348  8EB3
1349  8EB3              ;	ld a,$7f				; Detecta SPACE.
1350  8EB3              ;	in a,($fe)
1351  8EB3              ;	and 1
1352  8EB3              ;	ret nz
1353  8EB3
1354  8EB3              ;	call Genera_disparo
1355  8EB3 C9           	ret
1356  8EB4
1357  8EB4              ; ----------------------------------------------------------------------
1358  8EB4              ;
1359  8EB4              ;	11/8/23
1360  8EB4
1361  8EB4              Frame
1362  8EB4
1363  8EB4              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1364  8EB4              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1365  8EB4
1366  8EB4              ; PINTAMOS.
1367  8EB4
1368  8EB4 ED 73 0D 8A  	ld (Stack_3),sp
1369  8EB8
1370  8EB8 08           	ex af,af'
1371  8EB9 F5           	push af	;af'
1372  8EBA
1373  8EBA D9           	exx
1374  8EBB E5           	push hl	;hl'
1375  8EBC D5           	push de	;de'
1376  8EBD C5           	push bc	;bc'
1377  8EBE
1378  8EBE D9           	exx
1379  8EBF E5           	push hl	;hl
1380  8EC0 D5           	push de	;de
1381  8EC1 C5           	push bc	;bc
1382  8EC2
1383  8EC2 08           	ex af,af'
1384  8EC3 F5           	push af	;af
1385  8EC4
1386  8EC4 DD E5        	push ix
1387  8EC6 FD E5        	push iy
1388  8EC8
1389  8EC8 3E 02        	ld a,2
1390  8ECA D3 FE            out ($fe),a											; Rojo.
1391  8ECC
1392  8ECC              ; Consultamos Frame_ctrl. Necesitamos saber en que parte de MAIN nos encontramos.
1393  8ECC              ; Hemos llegado/completado [Guarda_foto_entidad_a_borrar] ???
1394  8ECC
1395  8ECC              ;	call Consulta_Frame_ctrl
1396  8ECC
1397  8ECC              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1398  8ECC              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1399  8ECC
1400  8ECC 2A 23 8A     	ld hl,(Puntero_indice_album_de_fotos)
1401  8ECF 01 EC 84     	ld bc,Indice_album_de_fotos
1402  8ED2 A7           	and a
1403  8ED3 ED 42        	sbc hl,bc
1404  8ED5 28 4E        	jr z,6F
1405  8ED7
1406  8ED7              ; $63,$6d,$79,$84,$89,...Frames en los que no se llega a completar el cuadro.
1407  8ED7
1408  8ED7 CD 5A 8D     	call Calcula_numero_de_malotes
1409  8EDA
1410  8EDA CD 43 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1411  8EDD
1412  8EDD              ;	call Extrae_foto_disparos
1413  8EDD 3E 01            ld a,1
1414  8EDF D3 FE            out ($fe),a											; Azul.
1415  8EE1
1416  8EE1              ; 	Gestiona albumes de fotos.
1417  8EE1
1418  8EE1              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1419  8EE1 CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1420  8EE4
1421  8EE4              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1422  8EE4
1423  8EE4 3A F8 89     	ld a,(Ctrl_1)
1424  8EE7 CB 6F        	bit 5,a
1425  8EE9 20 24        	jr nz,1F
1426  8EEB
1427  8EEB              ; No hemos terminado de guardar el último FRAME.
1428  8EEB
1429  8EEB 2A 23 8A     	ld hl,(Puntero_indice_album_de_fotos)
1430  8EEE              ;	ld bc,Indice_album_de_fotos
1431  8EEE 2B           	dec hl
1432  8EEF 2B           	dec hl
1433  8EF0
1434  8EF0              ;	ld a,l
1435  8EF0              ;	sub c
1436  8EF0              ;	jr z,$
1437  8EF0
1438  8EF0 22 23 8A     	ld (Puntero_indice_album_de_fotos),hl
1439  8EF3
1440  8EF3 2A 27 8A     	ld hl,(Puntero_indice_End_Snapshot)
1441  8EF6 2B           	dec hl
1442  8EF7 2B           	dec hl
1443  8EF8 22 27 8A     	ld (Puntero_indice_End_Snapshot),hl
1444  8EFB CD 8A 8D     	call Extrae_address
1445  8EFE 22 2B 8A     	ld (Puntero_de_End_Snapshot),hl
1446  8F01
1447  8F01 CD 8A 8D     	call Extrae_address
1448  8F04
1449  8F04              ; Esta vacío este album???
1450  8F04
1451  8F04 24           	inc h
1452  8F05 25           	dec h
1453  8F06 20 02        	jr nz,5F
1454  8F08
1455  8F08              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1456  8F08
1457  8F08 18 05        	jr 1F
1458  8F0A
1459  8F0A 22 0F 8A     5 ld (Stack_snapshot),hl
1460  8F0D 18 09        	jr 2F
1461  8F0F
1462  8F0F              ; FRAME completo.
1463  8F0F
1464  8F0F 2A 23 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1465  8F12 CD 8A 8D     	call Extrae_address
1466  8F15 22 0F 8A     	ld (Stack_snapshot),hl
1467  8F18
1468  8F18              ;	En este punto:
1469  8F18
1470  8F18              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1471  8F18              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1472  8F18
1473  8F18              ; RELOJES.
1474  8F18
1475  8F18 21 42 8A     2 ld hl,Contador_de_frames
1476  8F1B 7E           	ld a,(hl)
1477  8F1C FE FF        	cp $ff
1478  8F1E 20 04        	jr nz,3F
1479  8F20 34           	inc (hl)
1480  8F21 21 43 8A     	ld hl,Contador_de_frames_2
1481  8F24 34           3 inc (hl)											; 0 - 255
1482  8F25
1483  8F25 21 F8 89     6 ld hl,Ctrl_1
1484  8F28 CB AE        	res 5,(hl)
1485  8F2A
1486  8F2A
1487  8F2A
1488  8F2A FD E1        	pop iy
1489  8F2C DD E1        	pop ix
1490  8F2E
1491  8F2E F1           	pop af
1492  8F2F C1           	pop bc
1493  8F30 D1           	pop de
1494  8F31 E1           	pop hl
1495  8F32 D9           	exx
1496  8F33 C1           	pop bc
1497  8F34 D1           	pop de
1498  8F35 E1           	pop hl
1499  8F36 08           	ex af,af'
1500  8F37 F1           	pop af
1501  8F38
1502  8F38 08           	ex af,af'
1503  8F39 D9           	exx
1504  8F3A
1505  8F3A ED 7B 0D 8A  	ld sp,(Stack_3)
1506  8F3E
1507  8F3E
1508  8F3E C9           	ret
1509  8F3F
1510  8F3F              ; ---------------------------------------------------------------
1511  8F3F
1512  8F3F              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F3F              ; ******************************************************************************************************************************************************************************************
   2+ 8F3F              ;
   3+ 8F3F              ;   21/07/23
   4+ 8F3F              ;
   5+ 8F3F              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F3F              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F3F              ;
   8+ 8F3F              ;
   9+ 8F3F              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F3F              ;
  11+ 8F3F              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F3F              ;               _ hacen las entidades hacia abajo.
  13+ 8F3F              ;
  14+ 8F3F              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F3F              ;
  16+ 8F3F              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F3F              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F3F              ;
  19+ 8F3F              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F3F              ;           _ la bala.
  21+ 8F3F              ;
  22+ 8F3F              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F3F              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F3F              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F3F              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F3F              ;           _ en el momento de generarse la bala)).
  27+ 8F3F
  28+ 8F3F              Genera_disparo
  29+ 8F3F
  30+ 8F3F              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F3F              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F3F              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F3F              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F3F              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F3F              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F3F              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F3F
  38+ 8F3F              ; Exclusiones:
  39+ 8F3F
  40+ 8F3F 3A CD 89         ld a,(Vel_down)
  41+ 8F42 47               ld b,a
  42+ 8F43 3A 41 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F46 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F47 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F48 3A F2 89         ld a,(Columnas)
  46+ 8F4B 47               ld b,a
  47+ 8F4C 3A B6 89         ld a,(Columns)
  48+ 8F4F B8               cp b
  49+ 8F50 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F51
  51+ 8F51              ; ----- ----- -----
  52+ 8F51
  53+ 8F51 3A E3 89         ld a,(Ctrl_0)
  54+ 8F54 CB 77            bit 6,a
  55+ 8F56 20 06            jr nz,14F
  56+ 8F58
  57+ 8F58 3A BC 89         ld a,(Coordenada_y)
  58+ 8F5B FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F5D D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F5E
  61+ 8F5E 21 00 80     14 ld hl,Indice_disparo
  62+ 8F61 3A BD 89         ld a,(CTRL_DESPLZ)
  63+ 8F64 4F               ld c,a
  64+ 8F65 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F67              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F67              ;                                            ""        ""       "f9", B="1"
  67+ 8F67              ;                                            ""        ""       "fb", B="2"
  68+ 8F67              ;                                            ""        ""       "fb", B="3"
  69+ 8F67 A7               and a
  70+ 8F68 28 10            jr z,1F
  71+ 8F6A E6 01            and 1
  72+ 8F6C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F6D
  74+ 8F6D 79               ld a,c
  75+ 8F6E 16 F9            ld d,$f9
  76+ 8F70 23           2 inc hl
  77+ 8F71 23               inc hl
  78+ 8F72 04               inc b
  79+ 8F73 BA               cp d
  80+ 8F74 28 04            jr z,1F
  81+ 8F76 14               inc d
  82+ 8F77 14               inc d
  83+ 8F78 18 F6            jr 2B
  84+ 8F7A
  85+ 8F7A CD 8A 8D     1 call Extrae_address
  86+ 8F7D E5               push hl
  87+ 8F7E FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F80 DD 21 C8 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F84
  90+ 8F84              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F84              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F84
  93+ 8F84 3A E3 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F87 CB 77            bit 6,a
  95+ 8F89 20 04            jr nz,19F
  96+ 8F8B
  97+ 8F8B AF               xor a
  98+ 8F8C 32 4A 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F8F
 100+ 8F8F 3A C9 89     19 ld a,(Cuad_objeto)
 101+ 8F92 FE 02            cp 2
 102+ 8F94 38 66            jr c,3F
 103+ 8F96 28 64            jr z,3F
 104+ 8F98
 105+ 8F98              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F98
 107+ 8F98 E6 01            and 1
 108+ 8F9A 28 30            jr z,4F
 109+ 8F9C
 110+ 8F9C              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F9C              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F9C              ;
 113+ 8F9C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F9C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F9C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F9C
 117+ 8F9C 2A B7 89     	ld hl,(Posicion_actual)
 118+ 8F9F
 119+ 8F9F              ;   Amadeus o entidad ???.
 120+ 8F9F
 121+ 8F9F 3A E3 89         ld a,(Ctrl_0)
 122+ 8FA2 CB 77            bit 6,a
 123+ 8FA4 28 0A            jr z,8F
 124+ 8FA6
 125+ 8FA6              ; 	Dispara Amadeus.
 126+ 8FA6
 127+ 8FA6 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8FA8 CD 34 97         call PreviousScan
 129+ 8FAB CD 34 97         call PreviousScan
 130+ 8FAE
 131+ 8FAE              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8FAE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8FAE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8FAE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8FAE
 136+ 8FAE 18 11            jr 10F
 137+ 8FB0
 138+ 8FB0              ; 	Dispara Entidad.
 139+ 8FB0
 140+ 8FB0 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8FB3              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8FB3
 143+ 8FB3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8FB3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8FB3
 146+ 8FB3 C5               push bc
 147+ 8FB4 06 10            ld b,16
 148+ 8FB6 CD 25 97     9 call NextScan
 149+ 8FB9 10 FB            djnz 9B
 150+ 8FBB C1               pop bc
 151+ 8FBC CD 26 90         call Ajusta_disparo_parte_izquierda
 152+ 8FBF 18 06            jr 17F
 153+ 8FC1
 154+ 8FC1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FC1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FC1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FC1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FC1
 159+ 8FC1 CD 26 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FC4 CD 9B 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FC7              ;                                                      ; _al generar el disparo.
 162+ 8FC7
 163+ 8FC7              ; 	LLegados a este punto tendremos:
 164+ 8FC7              ;
 165+ 8FC7              ;       Puntero_objeto_disparo en IY.
 166+ 8FC7              ;       Rutinas_de_impresion en IX.
 167+ 8FC7              ;       Puntero_de_impresion en HL.
 168+ 8FC7              ;       Impacto/Dirección en BC.
 169+ 8FC7
 170+ 8FC7 CD 2E 90     17 call Almacena_disparo
 171+ 8FCA 18 52            jr 6F                                             ; RET.
 172+ 8FCC
 173+ 8FCC              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FCC              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FCC              ;
 176+ 8FCC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FCC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FCC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FCC
 180+ 8FCC 2A B7 89     4 ld hl,(Posicion_actual)
 181+ 8FCF
 182+ 8FCF              ;   Amadeus o entidad ???.
 183+ 8FCF
 184+ 8FCF 3A E3 89         ld a,(Ctrl_0)
 185+ 8FD2 CB 77            bit 6,a
 186+ 8FD4 28 0A            jr z,11F
 187+ 8FD6
 188+ 8FD6              ; 	Dispara Amadeus.
 189+ 8FD6
 190+ 8FD6 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FD8 CD 34 97         call PreviousScan
 192+ 8FDB CD 34 97         call PreviousScan
 193+ 8FDE
 194+ 8FDE              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FDE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FDE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FDE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FDE
 199+ 8FDE 18 11            jr 13F
 200+ 8FE0
 201+ 8FE0              ; 	Dispara Entidad.
 202+ 8FE0
 203+ 8FE0 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FE3              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FE3
 206+ 8FE3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FE3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FE3
 209+ 8FE3 C5               push bc
 210+ 8FE4 06 10            ld b,16
 211+ 8FE6 CD 25 97     12 call NextScan
 212+ 8FE9 10 FB            djnz 12B
 213+ 8FEB C1               pop bc
 214+ 8FEC
 215+ 8FEC CD 1F 90         call Ajusta_disparo_parte_derecha
 216+ 8FEF 18 06            jr 18F
 217+ 8FF1
 218+ 8FF1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FF1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FF1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FF1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FF1
 223+ 8FF1 CD 1F 90     13 call Ajusta_disparo_parte_derecha
 224+ 8FF4 CD 9B 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FF7              ;                                                       ; _al generar el disparo.
 226+ 8FF7
 227+ 8FF7              ; LLegados a este punto tendremos:
 228+ 8FF7              ;
 229+ 8FF7              ;       Puntero_objeto_disparo en IY.
 230+ 8FF7              ;       Rutinas_de_impresion en IX.
 231+ 8FF7              ;       Puntero_de_impresion en HL.
 232+ 8FF7              ;       Impacto/Dirección en BC.
 233+ 8FF7
 234+ 8FF7 CD 2E 90     18 call Almacena_disparo
 235+ 8FFA 18 22            jr 6F                                               ; RET.
 236+ 8FFC
 237+ 8FFC              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FFC
 239+ 8FFC 28 11        3 jr z,5F
 240+ 8FFE
 241+ 8FFE              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FFE              ;
 243+ 8FFE              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FFE              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FFE              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FFE              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FFE
 248+ 8FFE              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FFE              ;	   ""        ""       "f9", B="1"
 250+ 8FFE              ;	   ""        ""       "fb", B="2"
 251+ 8FFE              ; 	   ""        ""       "fb", B="3"
 252+ 8FFE
 253+ 8FFE 2A B7 89     	ld hl,(Posicion_actual)
 254+ 9001 CD 25 97     	call NextScan
 255+ 9004
 256+ 9004              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9004              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9004              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9004              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9004
 261+ 9004 CD 26 90         call Ajusta_disparo_parte_izquierda
 262+ 9007
 263+ 9007              ; 	No se produce impacto. B="$80"
 264+ 9007              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9007
 266+ 9007 01 80 80         ld bc,$8080
 267+ 900A
 268+ 900A              ; 	LLegados a este punto tendremos:
 269+ 900A              ;
 270+ 900A              ;       Puntero_objeto_disparo en IY.
 271+ 900A              ;       Rutinas_de_impresion en IX.
 272+ 900A              ;       Puntero_de_impresion en HL.
 273+ 900A              ;       Impacto/Dirección en BC.
 274+ 900A
 275+ 900A CD 2E 90         call Almacena_disparo
 276+ 900D 18 0F            jr 6F                                           ; RET.
 277+ 900F
 278+ 900F              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 900F              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 900F              ;
 281+ 900F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 900F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 900F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 900F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 900F
 286+ 900F 2A B7 89     5 ld hl,(Posicion_actual)
 287+ 9012 CD 25 97     	call NextScan
 288+ 9015
 289+ 9015              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9015              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9015              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9015              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9015
 294+ 9015 CD 1F 90         call Ajusta_disparo_parte_derecha
 295+ 9018
 296+ 9018              ; 	No se produce impacto. B="$80"
 297+ 9018              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9018
 299+ 9018 01 80 80     15 ld bc,$8080
 300+ 901B
 301+ 901B              ; 	LLegados a este punto tendremos:
 302+ 901B              ;
 303+ 901B              ;       Puntero_objeto_disparo en IY.
 304+ 901B              ;       Rutinas_de_impresion en IX.
 305+ 901B              ;       Puntero_de_impresion en HL.
 306+ 901B              ;       Impacto/Dirección en BC.
 307+ 901B
 308+ 901B CD 2E 90         call Almacena_disparo
 309+ 901E
 310+ 901E C9           6 ret
 311+ 901F
 312+ 901F              ; ----------------------------------------------------------------
 313+ 901F              ;
 314+ 901F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 901F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 901F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 901F
 318+ 901F 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9020 FE 02            cp 2
 320+ 9022 38 01            jr c,1F
 321+ 9024 23               inc hl
 322+ 9025 C9           1 ret
 323+ 9026
 324+ 9026 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9027 FE 01        	cp 1
 326+ 9029 20 01        	jr nz,1F
 327+ 902B 2B           	dec hl
 328+ 902C 2B           1 dec hl
 329+ 902D C9               ret
 330+ 902E
 331+ 902E              ; ----------------------------------------------------------------
 332+ 902E              ;
 333+ 902E              ;   25/02/23
 334+ 902E              ;
 335+ 902E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 902E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 902E              ;
 338+ 902E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 902E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 902E
 341+ 902E              Almacena_disparo
 342+ 902E
 343+ 902E E5               push hl  										; HL contiene el puntero de impresión.
 344+ 902F F1               pop af
 345+ 9030 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9031
 347+ 9031 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9032 E6 01            and 1
 349+ 9034 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9036              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9036              ; 	Dispara AMADEUS.
 352+ 9036
 353+ 9036              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9036              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9036              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9036              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9036
 358+ 9036 C5               push bc
 359+ 9037 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 903A 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 903D A7               and a
 362+ 903E ED 42            sbc hl,bc
 363+ 9040 CC 53 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9043 C1               pop bc
 365+ 9044 28 54            jr z,4F
 366+ 9046
 367+ 9046 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9049 23               inc hl
 369+ 904A 23               inc hl
 370+ 904B 22 32 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 904E              ;                                                   ; _ Disparo_(+1).
 372+ 904E 18 18            jr 2F
 373+ 9050
 374+ 9050              ; Dispara una entidad.
 375+ 9050
 376+ 9050 C5           1 push bc
 377+ 9051 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9054 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9057 A7               and a
 380+ 9058 ED 42            sbc hl,bc
 381+ 905A CC 4C 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 905D C1               pop bc
 383+ 905E 28 3A            jr z,4F
 384+ 9060
 385+ 9060 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9063 23               inc hl
 387+ 9064 23               inc hl
 388+ 9065 22 30 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9068              ;                                                   ; _ Disparo_(+1).
 390+ 9068 CD 8A 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 906B              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 906B              ;
 393+ 906B              ;                                                     Puntero_objeto_disparo en IY.
 394+ 906B              ;                                                     Rutinas_de_impresion en IX.
 395+ 906B              ;                                                     Puntero_de_impresion en HL.
 396+ 906B              ;                                                     Impacto/Dirección en BC.
 397+ 906B
 398+ 906B 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 906C 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 906D 23               inc hl                                          ; _ al siguiente.
 401+ 906E A7               and a
 402+ 906F 20 C0            jr nz,3B
 403+ 9071
 404+ 9071 08               ex af,af
 405+ 9072 ED 73 09 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9076 F9               ld sp,hl
 407+ 9077
 408+ 9077 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9079 F5               push af                                         ; Puntero de impresión.
 410+ 907A FD E5            push iy                                         ; Puntero objeto.
 411+ 907C C5               push bc                                         ; Control.
 412+ 907D
 413+ 907D ED 7B 09 8A      ld sp,(Stack)
 414+ 9081
 415+ 9081              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9081
 417+ 9081 21 F8 89     	ld hl,Ctrl_1
 418+ 9084 CB C6        	set 0,(hl)
 419+ 9086
 420+ 9086 DD E5        	push ix
 421+ 9088 E1               pop hl
 422+ 9089 F5               push af
 423+ 908A DD E1            pop ix
 424+ 908C
 425+ 908C CD A0 7F     	call Guarda_foto_registros
 426+ 908F
 427+ 908F 21 F8 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9092 CB 86        	res 0,(hl)
 429+ 9094
 430+ 9094              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9094              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9094
 433+ 9094 CD 53 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9097 CD 4C 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 909A
 436+ 909A C9           4 ret
 437+ 909B
 438+ 909B              ; ----------------------------------------------------------------
 439+ 909B              ;
 440+ 909B              ;   4/3/23
 441+ 909B              ;
 442+ 909B              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 909B              ;   _ al generarse el disparo.
 444+ 909B              ;
 445+ 909B              ;       "$80" ..... No se produce colisión.
 446+ 909B              ;       "$81" ..... Se produce colisión.
 447+ 909B              ;
 448+ 909B              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 909B              ;         _ que forman el disparo.
 450+ 909B
 451+ 909B
 452+ 909B              Comprueba_Colision
 453+ 909B
 454+ 909B              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 909B
 456+ 909B FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 909D E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 909E
 459+ 909E CD D4 90         call Modifica_H_Velocidad_disparo
 460+ 90A1
 461+ 90A1 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 90A2 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 90A4 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 90A6
 465+ 90A6 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 90A8 CD C4 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 90AB
 468+ 90AB 7B               ld a,e
 469+ 90AC E6 01            and 1
 470+ 90AE 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 90B0              ;                                                  ; _ para activar IMPACTO.
 472+ 90B0 E1               pop hl
 473+ 90B1 E5               push hl
 474+ 90B2 CD 25 97         call NextScan
 475+ 90B5
 476+ 90B5 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 90B6 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 90B8 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 90BA              ;                                                  ; _ 2º scanline si esto es así.
 480+ 90BA 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 90BC CD C4 90         call Bucle_2
 482+ 90BF
 483+ 90BF 43           1 ld b,e
 484+ 90C0 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90C1 FD E1            pop iy
 486+ 90C3 C9               ret
 487+ 90C4
 488+ 90C4              ; ---------- ----------
 489+ 90C4
 490+ 90C4 06 02        Bucle_2 ld b,2
 491+ 90C6 FD 7E 00     2 ld a,(iy)
 492+ 90C9 A6               and (hl)
 493+ 90CA 28 02            jr z,1F
 494+ 90CC 1E 81            ld e,$81
 495+ 90CE 23           1 inc hl
 496+ 90CF FD 23            inc iy
 497+ 90D1 10 F3            djnz 2B
 498+ 90D3 C9               ret
 499+ 90D4
 500+ 90D4              ; ---------- ----------
 501+ 90D4              ;
 502+ 90D4              ;   21/7/23
 503+ 90D4
 504+ 90D4              Modifica_H_Velocidad_disparo
 505+ 90D4
 506+ 90D4 3A 41 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90D7 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90D9 D0               ret nc                                         ; _ incrementamos H.
 509+ 90DA 24               inc h
 510+ 90DB
 511+ 90DB C9               ret
 512+ 90DC
 513+ 90DC              ; -------------------------------------------------------------------------------------------------------------
 514+ 90DC              ;
 515+ 90DC              ;   11/04/23
 516+ 90DC              ;
 517+ 90DC              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90DC              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90DC              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90DC              ;
 521+ 90DC              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90DC
 523+ 90DC              Compara_coordenadas_X
 524+ 90DC
 525+ 90DC              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90DC              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90DC
 528+ 90DC              ; Preparamos registros:
 529+ 90DC
 530+ 90DC 21 BB 89         ld hl,Filas+6
 531+ 90DF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90E0 23               inc hl
 533+ 90E1 23               inc hl
 534+ 90E2 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90E3 43               ld b,e
 536+ 90E4
 537+ 90E4 21 C9 89         ld hl,Filas+20
 538+ 90E7 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90E8 21 3C 8A         ld hl,Coordenadas_X_Entidad
 540+ 90EB CD 07 93         call Guarda_coordenadas_X
 541+ 90EE
 542+ 90EE              ; Preparamos registros:
 543+ 90EE
 544+ 90EE 21 AA 85         ld hl,Amadeus_db+6
 545+ 90F1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90F2 23               inc hl
 547+ 90F3 23               inc hl
 548+ 90F4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90F5 7B               ld a,e
 550+ 90F6 08               ex af,af'
 551+ 90F7 21 B8 85         ld hl,Amadeus_db+20
 552+ 90FA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90FB 21 39 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90FE CD 07 93         call Guarda_coordenadas_X
 555+ 9101
 556+ 9101              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9101              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9101
 559+ 9101 04               inc b
 560+ 9102 05               dec b
 561+ 9103 28 04            jr z,1F
 562+ 9105 06 03            ld b,3
 563+ 9107 18 02            jr 2F
 564+ 9109 06 02        1 ld b,2
 565+ 910B 08           2 ex af,af'
 566+ 910C 3C               inc a
 567+ 910D 3D               dec a
 568+ 910E 28 04            jr z,5F
 569+ 9110 0E 03            ld c,3
 570+ 9112 18 02            jr 6F
 571+ 9114 0E 02        5 ld c,2
 572+ 9116 79           6 ld a,c
 573+ 9117 08               ex af,af'
 574+ 9118 11 3C 8A         ld de,Coordenadas_X_Entidad
 575+ 911B 1A           4 ld a,(de)
 576+ 911C 21 39 8A         ld hl,Coordenadas_X_Amadeus
 577+ 911F BE           3 cp (hl)
 578+ 9120 28 0E            jr z,7F
 579+ 9122 23               inc hl
 580+ 9123 0D               dec c
 581+ 9124 20 F9            jr nz,3B
 582+ 9126 13               inc de
 583+ 9127 08               ex af,af'
 584+ 9128 4F               ld c,a
 585+ 9129 08               ex af,af'
 586+ 912A 10 EF            djnz 4B
 587+ 912C
 588+ 912C              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 912C
 590+ 912C CD 43 93     8 call Limpia_Coordenadas_X
 591+ 912F C9               ret
 592+ 9130
 593+ 9130 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9132 32 CE 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9135 21 34 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9138 CB D6            set 2,(hl)
 597+ 913A 18 F0            jr 8B
 598+ 913C
 599+ 913C              ; -----------------------------------------------------------------------
 600+ 913C              ;
 601+ 913C              ;   17/04/23
 602+ 913C              ;
 603+ 913C
 604+ 913C              Detecta_colision_nave_entidad
 605+ 913C
 606+ 913C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 913C
 608+ 913C 2A B7 89         ld hl,(Posicion_actual)
 609+ 913F CD 80 96         call Calcula_puntero_de_impresion
 610+ 9142
 611+ 9142              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9142              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9142
 614+ 9142 DD E5            push ix
 615+ 9144 E1               pop hl
 616+ 9145 E5               push hl
 617+ 9146
 618+ 9146              ; ----- ----- -----
 619+ 9146 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9148 06 0A            ld b,10
 621+ 914A CD 7A 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 914D 7B               ld a,e
 623+ 914E FE 05            cp 5
 624+ 9150 38 0E            jr c,3F
 625+ 9152
 626+ 9152              ; LLegados a este punto:
 627+ 9152              ;
 628+ 9152              ;   HAY COLISIÓN !!!!!.
 629+ 9152              ;
 630+ 9152              ;   .db (Impacto) de Amadeus a "1".
 631+ 9152              ;   SET el bit3 de (Impacto2).
 632+ 9152              ;
 633+ 9152              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9152
 635+ 9152 21 BD 85         ld hl,Amadeus_db+25
 636+ 9155 36 01            ld (hl),1
 637+ 9157 21 34 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 915A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 915C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 915E 18 18            jr 1F
 641+ 9160
 642+ 9160              ; -----
 643+ 9160
 644+ 9160 E1           3 pop hl
 645+ 9161 CD 25 97         call NextScan
 646+ 9164 E5               push hl
 647+ 9165 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9166 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9168 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 916A 30 0C            jr nc,1F
 651+ 916C              ;                                                  ; _ 2º scanline si esto es así.
 652+ 916C 10 DC            djnz 2B
 653+ 916E
 654+ 916E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 916E
 656+ 916E              ; LLegados a este punto:
 657+ 916E              ;
 658+ 916E              ;   NO HAY COLISIÓN !!!!!.
 659+ 916E              ;
 660+ 916E              ;   .db (Impacto) de Amadeus a "0".
 661+ 916E              ;   RES el bit2 de (Impacto2).
 662+ 916E              ;
 663+ 916E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 916E              ;   Lo colocamos a "0".
 665+ 916E
 666+ 916E 21 34 8A         ld hl,Impacto2
 667+ 9171 CB 96            res 2,(hl)
 668+ 9173 2A 35 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9176 36 00            ld (hl),0
 670+ 9178
 671+ 9178 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9179 C9               ret
 673+ 917A
 674+ 917A               ; ---------- ----------
 675+ 917A
 676+ 917A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 917B 3A B6 89         ld a,(Columns)
 678+ 917E 47               ld b,a
 679+ 917F FD 7E 00     2 ld a,(iy)
 680+ 9182 BE               cp (hl)
 681+ 9183 28 01            jr z,1F
 682+ 9185
 683+ 9185 1C               inc e
 684+ 9186
 685+ 9186 23           1 inc hl
 686+ 9187 FD 23            inc iy
 687+ 9189 10 F4            djnz 2B
 688+ 918B C1               pop bc
 689+ 918C C9               ret
 690+ 918D
 691+ 918D              ; -------------------------------------------------------------------------------------------------------------
 692+ 918D              ;
 693+ 918D              ;   13/03/23
 694+ 918D              ;
 695+ 918D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 918D              ;
 697+ 918D              ;   DESTRUYE: HL,BC,DE y A.
 698+ 918D
 699+ 918D 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9190 7E               ld a,(hl)
 701+ 9191 A7               and a
 702+ 9192 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9193
 704+ 9193 44               ld b,h
 705+ 9194 4D               ld c,l
 706+ 9195 2A 11 8A         ld hl,(Stack_snapshot_disparos)
 707+ 9198 E5               push hl
 708+ 9199 A7               and a
 709+ 919A ED 42            sbc hl,bc
 710+ 919C E5               push hl
 711+ 919D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 919E
 713+ 919E E1               pop hl
 714+ 919F 54               ld d,h
 715+ 91A0 5D               ld e,l
 716+ 91A1 1B               dec de
 717+ 91A2 ED B8            lddr                                                ; Limpiamos.
 718+ 91A4
 719+ 91A4 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 91A7 22 11 8A         ld (Stack_snapshot_disparos),hl
 721+ 91AA
 722+ 91AA C9               ret
 723+ 91AB
 724+ 91AB              ; -------------------------------------------------------------------------------------------------------------
 725+ 91AB              ;
 726+ 91AB              ;   18/07/23
 727+ 91AB              ;
 728+ 91AB
 729+ 91AB              Motor_de_disparos
 730+ 91AB
 731+ 91AB              ; Gestiona DISPAROS DE AMADEUS.
 732+ 91AB
 733+ 91AB 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 91AE 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 91B1
 736+ 91B1 CD 8A 8D     2 call Extrae_address
 737+ 91B4 7E               ld a,(hl)
 738+ 91B5 A7               and a
 739+ 91B6 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 91B8
 741+ 91B8              ; ----- ----- ----- ----- ----- -----
 742+ 91B8
 743+ 91B8 C5               push bc
 744+ 91B9 CD 7D 92         call foto_disparo_a_borrar
 745+ 91BC
 746+ 91BC              ; Existe colisión con este disparo???
 747+ 91BC
 748+ 91BC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 91BD 7E               ld a,(hl)
 750+ 91BE 2B               dec hl
 751+ 91BF E6 01            and 1
 752+ 91C1 28 1D            jr z,9F
 753+ 91C3
 754+ 91C3              ;   En este punto:
 755+ 91C3              ;
 756+ 91C3              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91C3              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91C3              ;   _con la entidad).
 759+ 91C3              ;
 760+ 91C3              ;   Disparo_2A defw 0                                ; Control.
 761+ 91C3              ;    defw 0                                          ; Puntero objeto.
 762+ 91C3              ;    defw 0                                          ; Puntero de impresión.
 763+ 91C3              ;    defw 0                                          ; Rutina de impresión.
 764+ 91C3
 765+ 91C3 E5               push hl
 766+ 91C4
 767+ 91C4 06 04            ld b,4
 768+ 91C6 23           19 inc hl
 769+ 91C7 10 FD            djnz 19B
 770+ 91C9
 771+ 91C9 CD 8A 8D         call Extrae_address
 772+ 91CC CD AB 9D         call Genera_coordenadas_disparo
 773+ 91CF
 774+ 91CF              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91CF
 776+ 91CF 21 37 8A         ld hl,Coordenadas_disparo_certero
 777+ 91D2 72               ld (hl),d
 778+ 91D3 23               inc hl
 779+ 91D4 73               ld (hl),e
 780+ 91D5
 781+ 91D5              ; Elimino el disparo de la base de datos.
 782+ 91D5
 783+ 91D5 E1               pop hl
 784+ 91D6 CD FC 92         call Elimina_disparo_de_base_de_datos
 785+ 91D9 21 34 8A         ld hl,Impacto2
 786+ 91DC CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91DE
 788+ 91DE 18 06            jr 11F
 789+ 91E0
 790+ 91E0 CD A6 92     9 call Mueve_disparo
 791+ 91E3 CD 7D 92         call foto_disparo_a_borrar
 792+ 91E6
 793+ 91E6 C1           11 pop bc
 794+ 91E7 18 04            jr 7F
 795+ 91E9
 796+ 91E9              ; ----- ----- ----- ----- ----- -----
 797+ 91E9
 798+ 91E9 ED 42        1 sbc hl,bc
 799+ 91EB 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91ED
 801+ 91ED 2A 32 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91F0 23               inc hl
 803+ 91F1 23               inc hl
 804+ 91F2 22 32 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91F5 18 BA            jr 2B
 806+ 91F7
 807+ 91F7 CD 53 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91FA              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91FA
 810+ 91FA              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91FA
 812+ 91FA 01 8A 85         ld bc,Disparo_11
 813+ 91FD 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9200
 815+ 9200 CD 8A 8D     5 call Extrae_address
 816+ 9203 7E               ld a,(hl)
 817+ 9204 A7               and a
 818+ 9205 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9207
 820+ 9207              ; ----- ----- ----- ----- ----- -----
 821+ 9207
 822+ 9207 C5               push bc
 823+ 9208 CD 7D 92         call foto_disparo_a_borrar
 824+ 920B
 825+ 920B              ; Existe colisión con este disparo???
 826+ 920B
 827+ 920B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 920C 7E               ld a,(hl)
 829+ 920D 2B               dec hl
 830+ 920E E6 01            and 1
 831+ 9210 28 4D            jr z,10F
 832+ 9212
 833+ 9212              ;! La colisión se produce con Amadeus???
 834+ 9212              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9212
 836+ 9212 E5               push hl
 837+ 9213
 838+ 9213 06 04            ld b,4
 839+ 9215 23           16 inc hl
 840+ 9216 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9218
 842+ 9218 CD 8A 8D         call Extrae_address
 843+ 921B CD AB 9D         call Genera_coordenadas_disparo
 844+ 921E
 845+ 921E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 921F FE 16            cp $16
 847+ 9221 38 2A            jr c,15F
 848+ 9223
 849+ 9223
 850+ 9223              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9223
 852+ 9223 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9224
 854+ 9224              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9224
 856+ 9224
 857+ 9224 2A 3F 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9227
 859+ 9227              ; Coordenada X de Amadeus en D.
 860+ 9227
 861+ 9227 7D               ld a,l
 862+ 9228 E6 1F            and $1F
 863+ 922A 57               ld d,a
 864+ 922B
 865+ 922B 21 AC 85         ld hl,Amadeus_db+8
 866+ 922E 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 922F
 868+ 922F 21 39 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9232 CD 07 93         call Guarda_coordenadas_X
 870+ 9235
 871+ 9235 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9236
 873+ 9236              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9236
 875+ 9236 06 02            ld b,2
 876+ 9238 C5           20 push bc
 877+ 9239
 878+ 9239 06 03            ld b,3
 879+ 923B 21 39 8A         ld hl,Coordenadas_X_Amadeus
 880+ 923E 7E           18 ld a,(hl)
 881+ 923F BA               cp d
 882+ 9240 20 04            jr nz,17F
 883+ 9242
 884+ 9242              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9242
 886+ 9242 C1               pop bc
 887+ 9243 E1               pop hl
 888+ 9244 18 0D            jr 14F
 889+ 9246
 890+ 9246 23           17 inc hl
 891+ 9247 10 F5            djnz 18B
 892+ 9249
 893+ 9249 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 924A
 895+ 924A C1               pop bc
 896+ 924B 10 EB            djnz 20B
 897+ 924D
 898+ 924D
 899+ 924D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 924D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 924D
 902+ 924D E1           15 pop hl
 903+ 924E 23               inc hl
 904+ 924F 35               dec (hl)
 905+ 9250 2B               dec hl
 906+ 9251 18 0C            jr 10F
 907+ 9253
 908+ 9253              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9253              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9253
 911+ 9253 E5           14 push hl
 912+ 9254 CD FC 92         call Elimina_disparo_de_base_de_datos
 913+ 9257 21 34 8A         ld hl,Impacto2
 914+ 925A CB CE            set 1,(hl)
 915+ 925C E1               pop hl
 916+ 925D 18 06            jr 12F
 917+ 925F
 918+ 925F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 925F
 920+ 925F CD A6 92     10 call Mueve_disparo
 921+ 9262 CD 7D 92         call foto_disparo_a_borrar
 922+ 9265 C1           12 pop bc
 923+ 9266
 924+ 9266 18 04            jr 8F
 925+ 9268
 926+ 9268              ; ----- ----- ----- ----- ----- -----
 927+ 9268
 928+ 9268 ED 42        4 sbc hl,bc
 929+ 926A 28 0A            jr z,6F
 930+ 926C
 931+ 926C 2A 30 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 926F 23               inc hl
 933+ 9270 23               inc hl
 934+ 9271 22 30 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9274 18 8A            jr 5B
 936+ 9276
 937+ 9276 CD 4C 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9279 CD 43 93         call Limpia_Coordenadas_X
 939+ 927C C9               ret
 940+ 927D
 941+ 927D              ; ------------------------------------------------------------------
 942+ 927D
 943+ 927D              foto_disparo_a_borrar
 944+ 927D
 945+ 927D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 927E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 927F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9280
 949+ 9280 E5               push hl
 950+ 9281 23               inc hl
 951+ 9282 23               inc hl
 952+ 9283 ED 73 09 8A      ld (Stack),sp
 953+ 9287 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9288 FD E1            pop iy
 955+ 928A DD E1            pop ix
 956+ 928C E1               pop hl
 957+ 928D ED 7B 09 8A      ld sp,(Stack)
 958+ 9291 3A F8 89         ld a,(Ctrl_1)
 959+ 9294 CB C7            set 0,a
 960+ 9296 32 F8 89         ld (Ctrl_1),a
 961+ 9299 CD A0 7F         call Guarda_foto_registros
 962+ 929C 3A F8 89         ld a,(Ctrl_1)
 963+ 929F CB 87            res 0,a
 964+ 92A1 32 F8 89         ld (Ctrl_1),a
 965+ 92A4 E1               pop hl
 966+ 92A5 C9               ret
 967+ 92A6
 968+ 92A6              ;---------------------------------------------------
 969+ 92A6              ;
 970+ 92A6              ;   18/07/23
 971+ 92A6              ;
 972+ 92A6
 973+ 92A6              Mueve_disparo
 974+ 92A6
 975+ 92A6              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 92A6              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 92A6              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 92A6
 979+ 92A6 E5               push hl
 980+ 92A7
 981+ 92A7 7E               ld a,(hl)
 982+ 92A8
 983+ 92A8 06 04            ld b,4
 984+ 92AA 23           1 inc hl
 985+ 92AB 10 FD            djnz 1B
 986+ 92AD
 987+ 92AD              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 92AD
 989+ 92AD CD 8A 8D         call Extrae_address
 990+ 92B0
 991+ 92B0 E6 01            and 1
 992+ 92B2 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 92B4
 994+ 92B4              ; Disparo hacia arriba, (Amadeus).
 995+ 92B4
 996+ 92B4              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 92B4              ; _ de la dificultad.
 998+ 92B4
 999+ 92B4 CD 34 97         call PreviousScan
1000+ 92B7 CD 34 97         call PreviousScan
1001+ 92BA CD 34 97         call PreviousScan
1002+ 92BD CD 34 97         call PreviousScan
1003+ 92C0
1004+ 92C0              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92C0
1006+ 92C0 7C               ld a,h
1007+ 92C1 FE 40            cp $40
1008+ 92C3 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92C5
1010+ 92C5              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92C5
1012+ 92C5 EB               ex de,hl
1013+ 92C6 06 04            ld b,4
1014+ 92C8 2B           6 dec hl
1015+ 92C9 10 FD            djnz 6B
1016+ 92CB
1017+ 92CB CD FC 92         call Elimina_disparo_de_base_de_datos
1018+ 92CE E1               pop hl
1019+ 92CF 18 10            jr 7F
1020+ 92D1
1021+ 92D1              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92D1              ; HL contiene el puntero de impresión del disparo.
1023+ 92D1              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92D1
1025+ 92D1 D5           3 push de
1026+ 92D2 C5               push bc
1027+ 92D3
1028+ 92D3 CD 9B 90         call Comprueba_Colision
1029+ 92D6
1030+ 92D6              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92D6
1032+ 92D6 78               ld a,b
1033+ 92D7
1034+ 92D7 C1               pop bc
1035+ 92D8 D1               pop de
1036+ 92D9
1037+ 92D9 EB               ex de,hl
1038+ 92DA
1039+ 92DA 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92DB 23               inc hl                                      ; _ movimiento.
1041+ 92DC 72               ld (hl),d
1042+ 92DD
1043+ 92DD E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92DE
1045+ 92DE 23               inc hl                                      ; _ en curso.
1046+ 92DF 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92E0 2B               dec hl
1048+ 92E1
1049+ 92E1 C9           7 ret
1050+ 92E2
1051+ 92E2              ; Disparo hacia abajo, (Entidad).
1052+ 92E2
1053+ 92E2 3A 41 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92E5 47               ld b,a
1055+ 92E6
1056+ 92E6 CD 25 97     4 call NextScan
1057+ 92E9 10 FB            djnz 4B
1058+ 92EB
1059+ 92EB              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92EB
1061+ 92EB 7C               ld a,h
1062+ 92EC FE 58            cp $58
1063+ 92EE 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92F0
1065+ 92F0 EB               ex de,hl
1066+ 92F1 06 04            ld b,4
1067+ 92F3 2B           5 dec hl
1068+ 92F4 10 FD            djnz 5B
1069+ 92F6
1070+ 92F6 CD FC 92         call Elimina_disparo_de_base_de_datos
1071+ 92F9 E1               pop hl
1072+ 92FA 18 E5            jr 7B
1073+ 92FC
1074+ 92FC              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92FC
1076+ 92FC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92FF AF               xor a
1078+ 9300 77               ld (hl),a
1079+ 9301 54               ld d,h
1080+ 9302 5D               ld e,l
1081+ 9303 13               inc de
1082+ 9304 ED B0            ldir
1083+ 9306 C9               ret
1084+ 9307
1085+ 9307              ; -----------------------------------------------------------------
1086+ 9307              ;
1087+ 9307              ;   19/7/23
1088+ 9307              ;
1089+ 9307              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9307              ;
1091+ 9307              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9307              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9307              ;
1094+ 9307              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9307              ;
1096+ 9307              ;   INPUTS:
1097+ 9307              ;
1098+ 9307              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9307              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9307
1101+ 9307              ;   MODIFICA: A, HL, BC y DE.
1102+ 9307
1103+ 9307              Guarda_coordenadas_X
1104+ 9307
1105+ 9307 7B               ld a,e
1106+ 9308 A7               and a
1107+ 9309 20 04            jr nz,1F
1108+ 930B
1109+ 930B 06 02            ld b,2
1110+ 930D 18 02            jr 2F
1111+ 930F
1112+ 930F 06 03        1 ld b,3
1113+ 9311 72           2 ld (hl),d
1114+ 9312 23               inc hl
1115+ 9313 14               inc d
1116+ 9314 10 FB            djnz 2B
1117+ 9316
1118+ 9316 C9               ret
1119+ 9317
1120+ 9317              ; -----------------------------------------------------------------
1121+ 9317              ;
1122+ 9317              ;   12/04/23
1123+ 9317              ;
1124+ 9317
1125+ 9317 3A 34 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 931A A7               and a
1127+ 931B C8               ret z
1128+ 931C
1129+ 931C FE 04            cp 4
1130+ 931E 20 09            jr nz,1F
1131+ 9320
1132+ 9320
1133+ 9320              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9320
1135+ 9320 CD 3C 91         call Detecta_colision_nave_entidad
1136+ 9323
1137+ 9323 21 34 8A         ld hl,Impacto2
1138+ 9326 CB 5E            bit 3,(hl)
1139+ 9328 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9329
1141+ 9329              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9329              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9329
1144+ 9329 21 34 8A     1 ld hl,Impacto2
1145+ 932C CB 4E            bit 1,(hl)
1146+ 932E 28 07            jr z,2F
1147+ 9330
1148+ 9330 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9333 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9335 18 0B            jr 3F
1151+ 9337
1152+ 9337 21 34 8A     2 ld hl,Impacto2
1153+ 933A CB 46            bit 0,(hl)
1154+ 933C C8               ret z
1155+ 933D
1156+ 933D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 933D
1158+ 933D 21 F8 89         ld hl,Ctrl_1
1159+ 9340 CB D6            set 2,(hl)
1160+ 9342
1161+ 9342 C9           3 ret
1162+ 9343
1163+ 9343              ; -----------------------------------------------------------------
1164+ 9343              ;
1165+ 9343              ;   19/7/23
1166+ 9343              ;
1167+ 9343              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9343
1169+ 9343 AF           Limpia_Coordenadas_X xor a
1170+ 9344 06 06            ld b,6
1171+ 9346 21 39 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9349 77           1 ld (hl),a
1173+ 934A 23               inc hl
1174+ 934B 10 FC            djnz 1B
1175+ 934D C9               ret
1176+ 934E
1177+ 934E              ; -----------------------------------------------------------------
1178+ 934E              ;
1179+ 934E              ;   25/04/23
1180+ 934E              ;
1181+ 934E
1182+ 934E              Determina_resultado_comparativa
1183+ 934E
1184+ 934E              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 934E              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 934E              ;
1187+ 934E              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 934E              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 934E              ;
1190+ 934E              ;   SBC HL,DE
1191+ 934E
1192+ 934E              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 934E              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 934E
1195+ 934E              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 934E              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 934E
1198+ 934E
1199+ 934E 3A C9 89         ld a,(Cuad_objeto)
1200+ 9351 FE 02            cp 2
1201+ 9353 28 26            jr z,2F
1202+ 9355 38 24            jr c,2F
1203+ 9357
1204+ 9357              ; Cuadrantes 3º y 4º
1205+ 9357
1206+ 9357 E6 01            and 1
1207+ 9359 28 10            jr z,4F
1208+ 935B
1209+ 935B              ; Cuadrante 3º
1210+ 935B
1211+ 935B 7C               ld a,h
1212+ 935C 06 00            ld b,0
1213+ 935E
1214+ 935E CD E9 93         call Compara_cositas_H3
1215+ 9361
1216+ 9361 04               inc b
1217+ 9362 05               dec b
1218+ 9363 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9364
1220+ 9364 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9365 06 00            ld b,0
1222+ 9367
1223+ 9367 CD FB 93         call Compara_cositas_L3
1224+ 936A C9               ret
1225+ 936B
1226+ 936B              ; Cuadrante 4º
1227+ 936B
1228+ 936B 7C           4 ld a,h
1229+ 936C 06 00            ld b,0
1230+ 936E
1231+ 936E CD 0D 94         call Compara_cositas_H4
1232+ 9371
1233+ 9371 04               inc b
1234+ 9372 05               dec b
1235+ 9373 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9374
1237+ 9374 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9375 06 00            ld b,0
1239+ 9377
1240+ 9377 CD 23 94         call Compara_cositas_L4
1241+ 937A C9               ret
1242+ 937B
1243+ 937B              ; Cuadrantes 1º y 2º.
1244+ 937B
1245+ 937B 28 10        2 jr z,3F
1246+ 937D
1247+ 937D              ; 1er Cuadrante
1248+ 937D
1249+ 937D 7C               ld a,h
1250+ 937E 06 00            ld b,0
1251+ 9380
1252+ 9380 CD C1 93         call Compara_cositas_H1
1253+ 9383
1254+ 9383 04               inc b
1255+ 9384 05               dec b
1256+ 9385 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9386
1258+ 9386 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9387 06 00            ld b,0
1260+ 9389
1261+ 9389 CD D7 93         call Compara_cositas_L1
1262+ 938C C9               ret
1263+ 938D
1264+ 938D
1265+ 938D              ; 2º Cuadrante
1266+ 938D
1267+ 938D 7C           3 ld a,h
1268+ 938E 06 00            ld b,0
1269+ 9390
1270+ 9390 CD 9D 93         call Compara_cositas_H2
1271+ 9393
1272+ 9393 04               inc b
1273+ 9394 05               dec b
1274+ 9395 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9396
1276+ 9396 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9397 06 00            ld b,0
1278+ 9399
1279+ 9399 CD AF 93         call Compara_cositas_L2
1280+ 939C C9               ret
1281+ 939D
1282+ 939D A7           Compara_cositas_H2 and a
1283+ 939E 28 0D            jr z,1F
1284+ 93A0              ;    cp $fd
1285+ 93A0              ;    jr z,1F
1286+ 93A0              ;    cp $fe
1287+ 93A0              ;    jr z,1F
1288+ 93A0 FE FF            cp $ff
1289+ 93A2 28 09            jr z,1F
1290+ 93A4 FE 01            cp $01
1291+ 93A6 28 05            jr z,1F
1292+ 93A8 FE 02            cp $02
1293+ 93AA 28 01            jr z,1F
1294+ 93AC C0               ret nz
1295+ 93AD 04           1 inc b
1296+ 93AE C9               ret
1297+ 93AF
1298+ 93AF A7           Compara_cositas_L2 and a
1299+ 93B0 28 0D            jr z,1F
1300+ 93B2              ;    cp $fd
1301+ 93B2              ;    jr z,1F
1302+ 93B2 FE FE            cp $fe
1303+ 93B4 28 09            jr z,1F
1304+ 93B6 FE FF            cp $ff
1305+ 93B8 28 05            jr z,1F
1306+ 93BA FE 01            cp $01
1307+ 93BC 28 01            jr z,1F
1308+ 93BE              ;    cp $02
1309+ 93BE              ;    jr z,1F
1310+ 93BE C0               ret nz
1311+ 93BF 04           1 inc b
1312+ 93C0 C9               ret
1313+ 93C1
1314+ 93C1 A7           Compara_cositas_H1 and a
1315+ 93C2 28 11            jr z,1F
1316+ 93C4              ;    cp $fd
1317+ 93C4              ;    jr z,1F
1318+ 93C4              ;    cp $fe
1319+ 93C4              ;    jr z,1F
1320+ 93C4 FE FF            cp $ff
1321+ 93C6 28 0D            jr z,1F
1322+ 93C8 FE 01            cp $01
1323+ 93CA 28 09            jr z,1F
1324+ 93CC FE 02            cp $02
1325+ 93CE 28 05            jr z,1F
1326+ 93D0 FE 03            cp $03
1327+ 93D2 28 01            jr z,1F
1328+ 93D4 C0               ret nz
1329+ 93D5 04           1 inc b
1330+ 93D6 C9               ret
1331+ 93D7
1332+ 93D7 A7           Compara_cositas_L1 and a
1333+ 93D8 28 0D            jr z,1F
1334+ 93DA              ;    cp $fd
1335+ 93DA              ;    jr z,1F
1336+ 93DA              ;    cp $fe
1337+ 93DA              ;    jr z,1F
1338+ 93DA              ;    cp $ff
1339+ 93DA              ;    jr z,1F
1340+ 93DA FE 01            cp $01
1341+ 93DC 28 09            jr z,1F
1342+ 93DE FE 02            cp $02
1343+ 93E0 28 05            jr z,1F
1344+ 93E2 FE 03            cp $03
1345+ 93E4 28 01            jr z,1F
1346+ 93E6 C0               ret nz
1347+ 93E7 04           1 inc b
1348+ 93E8 C9               ret
1349+ 93E9
1350+ 93E9 A7           Compara_cositas_H3 and a
1351+ 93EA 28 0D            jr z,1F
1352+ 93EC              ;    cp $fd
1353+ 93EC              ;    jr z,1F
1354+ 93EC FE FE            cp $fe
1355+ 93EE 28 09            jr z,1F
1356+ 93F0 FE FF            cp $ff
1357+ 93F2 28 05            jr z,1F
1358+ 93F4 FE 01            cp $01
1359+ 93F6 28 01            jr z,1F
1360+ 93F8              ;    cp $02
1361+ 93F8              ;    jr z,1F
1362+ 93F8              ;    cp $03
1363+ 93F8              ;    jr z,1F
1364+ 93F8 C0               ret nz
1365+ 93F9 04           1 inc b
1366+ 93FA C9               ret
1367+ 93FB
1368+ 93FB A7           Compara_cositas_L3 and a
1369+ 93FC 28 0D            jr z,1F
1370+ 93FE              ;    cp $fd
1371+ 93FE              ;    jr z,1F
1372+ 93FE              ;    cp $fe
1373+ 93FE              ;    jr z,1F
1374+ 93FE              ;    cp $ff
1375+ 93FE              ;    jr z,1F
1376+ 93FE FE 01            cp $01
1377+ 9400 28 09            jr z,1F
1378+ 9402 FE 02            cp $02
1379+ 9404 28 05            jr z,1F
1380+ 9406 FE 03            cp $03
1381+ 9408 28 01            jr z,1F
1382+ 940A C0               ret nz
1383+ 940B 04           1 inc b
1384+ 940C C9               ret
1385+ 940D
1386+ 940D A7           Compara_cositas_H4 and a
1387+ 940E 28 11            jr z,1F
1388+ 9410 FE FD            cp $fd
1389+ 9412 28 0D            jr z,1F
1390+ 9414 FE FE            cp $fe
1391+ 9416 28 09            jr z,1F
1392+ 9418 FE FF            cp $ff
1393+ 941A 28 05            jr z,1F
1394+ 941C FE 01            cp $01
1395+ 941E 28 01            jr z,1F
1396+ 9420              ;    cp $02
1397+ 9420              ;    jr z,1F
1398+ 9420              ;    cp $03
1399+ 9420              ;    jr z,1F
1400+ 9420 C0               ret nz
1401+ 9421 04           1 inc b
1402+ 9422 C9               ret
1403+ 9423
1404+ 9423 A7           Compara_cositas_L4 and a
1405+ 9424 28 0D            jr z,1F
1406+ 9426              ;    cp $fd
1407+ 9426              ;    jr z,1F
1408+ 9426 FE FE            cp $fe
1409+ 9428 28 09            jr z,1F
1410+ 942A FE FF            cp $ff
1411+ 942C 28 05            jr z,1F
1412+ 942E FE 01            cp $01
1413+ 9430 28 01            jr z,1F
1414+ 9432              ;    cp $02
1415+ 9432              ;    jr z,1F
1416+ 9432              ;    cp $03
1417+ 9432              ;    jr z,1F
1418+ 9432 C0               ret nz
1419+ 9433 04           1 inc b
1420+ 9434 C9               ret
# file closed: Disparo.asm
1513  9435              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9435              ; ******************************************************************************************************************************************************************************************
   2+ 9435              ;
   3+ 9435              ; 26/06/23
   4+ 9435              ;
   5+ 9435              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9435
   7+ 9435 CD 19 97     Draw call Prepara_draw
   8+ 9438 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9439 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 943A 28 05        	jr z,2F
  11+ 943C
  12+ 943C 3A C9 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 943F 18 0C        	jr 1F
  14+ 9441
  15+ 9441 2A C7 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9444 22 B7 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9447 CD D6 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 944A              ;													; _la esquina superior izquierda de la pantalla.
  19+ 944A CD 27 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 944D
  21+ 944D 3A E3 89     1 ld a,(Ctrl_0)
  22+ 9450 CB 6F        	bit 5,a
  23+ 9452 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9454
  25+ 9454 CD 6C 94     	call Comprueba_limite_horizontal
  26+ 9457 CD FC 94     	call Comprueba_limite_vertical
  27+ 945A
  28+ 945A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 945A              ; -----------------------
  30+ 945A              ; -----------------------
  31+ 945A              ; -----------------------
  32+ 945A
  33+ 945A CD 49 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 945D CD 80 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9460 CD DF 96     	call Define_rutina_de_impresion
  36+ 9463
  37+ 9463 3A E3 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9466 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9468 32 E3 89     	ld (Ctrl_0),a
  40+ 946B
  41+ 946B C9           	ret
  42+ 946C
  43+ 946C              ; *******************************************************************************************************************************************************************************************
  44+ 946C              ;	21/01/23
  45+ 946C              ;
  46+ 946C              ; 	Comprueba_limite_horizontal.
  47+ 946C              ;
  48+ 946C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 946C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 946C              ;
  51+ 946C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 946C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 946C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 946C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 946C
  56+ 946C
  57+ 946C
  58+ 946C 3A E3 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 946F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9471 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9473 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9475 32 E3 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9478 18 09            jr 6F
  64+ 947A CB 5F        1 bit 3,a
  65+ 947C 28 0A            jr z,2F
  66+ 947E E6 F7            and $f7
  67+ 9480 32 E3 89         ld (Ctrl_0),a
  68+ 9483 CD D6 95     6 call Inicializacion
  69+ 9486 18 5B            jr 5F
  70+ 9488 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9489
  72+ 9489              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9489              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9489
  75+ 9489 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 948A 2A F3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 948D CD F5 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9490 67           	ld h,a
  79+ 9491 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9492 CD F5 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9495 67           	ld h,a
  82+ 9496 A7           	and a
  83+ 9497 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9499 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 949A 3A C9 89     	ld a,(Cuad_objeto)
  86+ 949D FE 02        	cp 2
  87+ 949F 38 1E        	jr c,3F
  88+ 94A1 28 1C        	jr z,3F
  89+ 94A3 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 94A4 28 23            jr z,7F
  91+ 94A6 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 94A8 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 94AA E1           	pop hl
  94+ 94AB
  95+ 94AB              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 94AB              ; _para indicar con E="2" en caso necesario.
  97+ 94AB
  98+ 94AB E5               push hl
  99+ 94AC C5               push bc
 100+ 94AD CD F5 99     	call calcula_tercio
 101+ 94B0 FE 01        	cp 1
 102+ 94B2 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 94B4 CD E4 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 94B7 28 26            jr z,9F
 105+ 94B9 38 24            jr c,9F
 106+ 94BB 1E 00        11 ld e,0
 107+ 94BD 18 22            jr 8F
 108+ 94BF 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94C0 28 07        	jr z, 7F
 110+ 94C2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94C4 1E 00         	ld e,0
 112+ 94C6 E1           	pop hl
 113+ 94C7 18 04        	jr 4F
 114+ 94C9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94CB 18 15            jr 10F
 116+ 94CD
 117+ 94CD              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94CD              ; _para indicar con E="2" en caso necesario.
 119+ 94CD
 120+ 94CD E5           4 push hl
 121+ 94CE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94CF CD F5 99     	call calcula_tercio
 123+ 94D2 FE 01        	cp 1
 124+ 94D4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94D6 CD E4 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94D9 28 04            jr z,9F
 127+ 94DB 30 02            jr nc,9F
 128+ 94DD 18 02        	jr 8F
 129+ 94DF 1E 02        9 ld e,2
 130+ 94E1 C1           8 pop bc
 131+ 94E2 E1           10 pop hl
 132+ 94E3 C9           5 ret
 133+ 94E4
 134+ 94E4              ; --------------------
 135+ 94E4              ;
 136+ 94E4              ; 25/08/22
 137+ 94E4
 138+ 94E4 CD F5 99     Comprueba_centro call calcula_tercio
 139+ 94E7 67               ld h,a
 140+ 94E8 08           	ex af,af
 141+ 94E9 FE 02        	cp 2
 142+ 94EB 38 07        	jr c,1F
 143+ 94ED 28 05        	jr z,1F
 144+ 94EF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94F2 18 03        	jr 2F
 146+ 94F4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94F7 08           2 ex af,af
 148+ 94F8 A7               and a
 149+ 94F9 ED 42            sbc hl,bc
 150+ 94FB C9               ret
 151+ 94FC
 152+ 94FC              ; *********************************************************************************************************************************************************************************************
 153+ 94FC              ;
 154+ 94FC              ;   16/8/22
 155+ 94FC              ;
 156+ 94FC              ;	Comprueba_limite_vertical
 157+ 94FC              ;
 158+ 94FC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94FC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94FC              ;
 161+ 94FC
 162+ 94FC 2A B7 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94FF 7D           	ld a,l
 164+ 9500 E6 1F        	and $1F
 165+ 9502 57           	ld d,a
 166+ 9503 3A F5 89     	ld a,(Limite_vertical)
 167+ 9506 BA           	cp d 											; Límite - Posición.
 168+ 9507 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9508 3A C9 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 950B CB 47        	bit 0,a
 171+ 950D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 950F
 173+ 950F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 950F
 175+ 950F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9510 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9512
 178+ 9512              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9512              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9512
 181+ 9512 3A BB 89         ld a,(Coordenada_X)
 182+ 9515 16 0F            ld d,Centro_izquierda
 183+ 9517 A7               and a
 184+ 9518 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9519 28 1E            jr z,3F
 186+ 951B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 951D              ;                                                    ; _salimos sin modificar nada.
 188+ 951D 18 0E            jr 2F
 189+ 951F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9520 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9522
 192+ 9522              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9522              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9522
 195+ 9522 3A BB 89         ld a,(Coordenada_X)
 196+ 9525 16 10            ld d,Centro_derecha
 197+ 9527 A7               and a
 198+ 9528 92               sub d
 199+ 9529 28 0E            jr z,3F
 200+ 952B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 952D              ;                                                    ; _salimos sin modificar nada.
 202+ 952D CB 43        2 bit 0,e
 203+ 952F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9531 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9532 CD C6 95         call Modificaccionne
 206+ 9535 C1           	pop bc
 207+ 9536 CD D6 95         call Inicializacion
 208+ 9539 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 953A
 210+ 953A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 953A
 212+ 953A C5           4 push bc
 213+ 953B 01 B6 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 953E 0A           	ld a,(bc)
 215+ 953F 3D           	dec a
 216+ 9540 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9541 7D           	ld a,l
 218+ 9542 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9543 CB 47        	bit 0,a
 220+ 9545 28 03        	jr z,5F
 221+ 9547 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9548 18 2E        	jr 7F
 223+ 954A
 224+ 954A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 954A
 226+ 954A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 954B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 954C 3A E3 89     	ld a,(Ctrl_0)
 229+ 954F CB 4F        	bit 1,a
 230+ 9551 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9553 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9554
 233+ 9554              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9554
 235+ 9554 1C               inc e
 236+ 9555 1D               dec e
 237+ 9556 20 07            jr nz,12F
 238+ 9558 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9559 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 955A 22 B7 89     	ld (Posicion_actual),hl
 241+ 955D 18 44        13 jr 9F
 242+ 955F CB 43        12 bit 0,e
 243+ 9561 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9563              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9563 C1           	pop bc
 246+ 9564 18 D3        	jr 3B
 247+ 9566 80           14 add b
 248+ 9567 6F               ld l,a
 249+ 9568 22 B7 89     	ld (Posicion_actual),hl
 250+ 956B CD C6 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 956E 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9570 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9572 32 E3 89         ld (Ctrl_0),a
 254+ 9575 F1           	pop af
 255+ 9576 18 2B        	jr 9F
 256+ 9578
 257+ 9578              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9578
 259+ 9578 F5           7 push af
 260+ 9579 3A E3 89     	ld a,(Ctrl_0)
 261+ 957C CB 47        	bit 0,a
 262+ 957E 20 1D        	jr nz,8F
 263+ 9580 F1           	pop af
 264+ 9581
 265+ 9581              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9581
 267+ 9581 1C           	inc e
 268+ 9582 1D               dec e
 269+ 9583 20 07            jr nz,10F
 270+ 9585 90           	sub b
 271+ 9586 6F               ld l,a
 272+ 9587 22 B7 89     	ld (Posicion_actual),hl
 273+ 958A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 958C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 958C CB 43        10 bit 0,e
 276+ 958E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9590              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9590 C1           	pop bc
 279+ 9591 18 A6        	jr 3B
 280+ 9593 90           16 sub b
 281+ 9594 6F               ld l,a
 282+ 9595 22 B7 89     	ld (Posicion_actual),hl
 283+ 9598 CD C6 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 959B 18 06            jr 9F
 285+ 959D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 959F 32 E3 89         ld (Ctrl_0),a
 287+ 95A2 F1           	pop af
 288+ 95A3 C1           9 pop bc
 289+ 95A4 1E 00        	ld e,0
 290+ 95A6 CD D6 95         call Inicializacion
 291+ 95A9 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 95AA 08           	ex af,af
 293+ 95AB F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 95AC 18 8B            jr 3B
 295+ 95AE
 296+ 95AE              ; --------------------
 297+ 95AE
 298+ 95AE 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 95B0 CD 34 97     1 call PreviousScan
 300+ 95B3 10 FB            djnz 1B
 301+ 95B5 22 B7 89     	ld (Posicion_actual),hl
 302+ 95B8 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 95B9 C9           	ret
 304+ 95BA
 305+ 95BA              ; --------------------
 306+ 95BA
 307+ 95BA 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 95BC CD 25 97     1 call NextScan
 309+ 95BF 10 FB            djnz 1B
 310+ 95C1 22 B7 89     	ld (Posicion_actual),hl
 311+ 95C4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95C5 C9           	ret
 313+ 95C6
 314+ 95C6              ; --------------------
 315+ 95C6              ;
 316+ 95C6              ;	22/01/23
 317+ 95C6              ;
 318+ 95C6              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95C6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95C6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95C6
 322+ 95C6
 323+ 95C6              Modificaccionne
 324+ 95C6
 325+ 95C6 3A C9 89     	ld a,(Cuad_objeto)
 326+ 95C9 FE 02        	cp 2
 327+ 95CB CC AE 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95CE DC AE 95         call c,Modifica_Pos_actual
 329+ 95D1 C8           	ret z
 330+ 95D2 CD BA 95         call Modifica_Pos_actual2
 331+ 95D5 C9               ret
 332+ 95D6
 333+ 95D6              ; *************************************************************************************************************************************************************************************************
 334+ 95D6              ;
 335+ 95D6              ;	13/8/22
 336+ 95D6              ;
 337+ 95D6              ;	Inicializacion
 338+ 95D6              ;
 339+ 95D6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95D6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95D6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95D6              ;
 343+ 95D6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95D6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95D6              ;	_ desaparece/aparece.
 346+ 95D6
 347+ 95D6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95D6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95D6              ;
 350+ 95D6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95D6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95D6              ; 		   [E] ="0"
 353+ 95D6
 354+ 95D6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95D6
 356+ 95D6 CD F5 99     Inicializacion call calcula_tercio
 357+ 95D9 28 36        	jr z,primit
 358+ 95DB E6 02        	and 2
 359+ 95DD 20 07        	jr nz,segmit
 360+ 95DF 7D           	ld a,l
 361+ 95E0 FE 7F        	cp $7f
 362+ 95E2 38 2D        	jr c,primit
 363+ 95E4 28 2B        	jr z,primit
 364+ 95E6 CD 43 96     segmit call column
 365+ 95E9 38 13        	jr c,tercuad
 366+ 95EB 3E 04        cuarcuad ld a,4
 367+ 95ED 32 C9 89     	ld (Cuad_objeto),a
 368+ 95F0 21 20 48     	ld hl,$4820
 369+ 95F3 22 F3 89     	ld (Limite_horizontal),hl
 370+ 95F6 21 F5 89     	ld hl,Limite_vertical
 371+ 95F9 36 0D        	ld (hl),$0d
 372+ 95FB 08           	ex af,af
 373+ 95FC 18 3C        	jr 1F
 374+ 95FE              tercuad
 375+ 95FE 3E 03        	ld a,3
 376+ 9600 32 C9 89     	ld (Cuad_objeto),a
 377+ 9603 21 20 48     	ld hl,$4820
 378+ 9606 22 F3 89     	ld (Limite_horizontal),hl
 379+ 9609 21 F5 89     	ld hl,Limite_vertical
 380+ 960C 36 12        	ld (hl),$12
 381+ 960E 08           	ex af,af
 382+ 960F 18 29        	jr 1F
 383+ 9611 CD 43 96     primit call column
 384+ 9614 38 13        	jr c, primcuad
 385+ 9616              segcuad
 386+ 9616 3E 02        	ld a,2
 387+ 9618 32 C9 89     	ld (Cuad_objeto),a
 388+ 961B 21 C0 4F     	ld hl,$4fc0
 389+ 961E 22 F3 89     	ld (Limite_horizontal),hl
 390+ 9621 21 F5 89     	ld hl,Limite_vertical
 391+ 9624 36 0D        	ld (hl),$0d
 392+ 9626 08           	ex af,af
 393+ 9627 18 11        	jr 1F
 394+ 9629              primcuad
 395+ 9629 3E 01        	ld a,1
 396+ 962B 32 C9 89     	ld (Cuad_objeto),a
 397+ 962E 21 C0 4F     	ld hl,$4fc0
 398+ 9631 22 F3 89     	ld (Limite_horizontal),hl
 399+ 9634 21 F5 89     	ld hl,Limite_vertical
 400+ 9637 36 12        	ld (hl),$12
 401+ 9639 08           	ex af,af
 402+ 963A CD 80 9D     1 call Genera_coordenadas
 403+ 963D 21 E3 89     	ld hl,Ctrl_0
 404+ 9640 CB EE        	set 5,(hl)
 405+ 9642 C9           	ret
 406+ 9643
 407+ 9643              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9643
 409+ 9643              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9643              ;
 411+ 9643              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9643
 413+ 9643 7D           column ld a,l
 414+ 9644 E6 1F        	and $1f
 415+ 9646 FE 10         	cp $10
 416+ 9648 C9            	ret
 417+ 9649
 418+ 9649              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9649              ;
 420+ 9649              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9649              ;
 422+ 9649              ; 14/12/22
 423+ 9649              ;
 424+ 9649              ;	Modifica: A y BC.
 425+ 9649
 426+ 9649 3A C9 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 964C E6 01        	and 1
 428+ 964E 28 17        	jr z,1F
 429+ 9650
 430+ 9650              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9650
 432+ 9650 3A BB 89     	ld a,(Coordenada_X)
 433+ 9653 47           	ld b,a
 434+ 9654 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9655 79           	ld a,c
 436+ 9656 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9657 38 08        	jr c,2F
 438+ 9659 47           	ld b,a
 439+ 965A 79           	ld a,c
 440+ 965B 90           	sub b
 441+ 965C 32 F2 89     	ld (Columnas),a
 442+ 965F 18 1B        	jr 4F
 443+ 9661 79           2 ld a,c
 444+ 9662 32 F2 89     	ld (Columnas),a
 445+ 9665 18 15        	jr 4F
 446+ 9667
 447+ 9667              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9667
 449+ 9667 3A BB 89     1 ld a,(Coordenada_X)
 450+ 966A 81           	add c
 451+ 966B 3D           	dec a
 452+ 966C D6 1F        	sub $1f
 453+ 966E 38 08        	jr c,3F
 454+ 9670 47           	ld b,a
 455+ 9671 79           	ld a,c
 456+ 9672 90           	sub b
 457+ 9673 32 F2 89     	ld (Columnas),a
 458+ 9676 18 04        	jr 4F
 459+ 9678 79           3 ld a,c
 460+ 9679 32 F2 89     	ld (Columnas),a
 461+ 967C D9           4 exx
 462+ 967D 4F           	ld c,a
 463+ 967E D9           	exx
 464+ 967F C9            ret
 465+ 9680
 466+ 9680              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9680              ;
 468+ 9680              ;   19/7/23
 469+ 9680              ;
 470+ 9680              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9680              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9680              ;
 473+ 9680              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9680              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9680              ;
 476+ 9680              ;	DESTRUYE: HL,B Y A.
 477+ 9680
 478+ 9680 3A C9 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9683 FE 02        	cp 2
 480+ 9685 38 18        	jr c,1F
 481+ 9687 28 16        	jr z,1F
 482+ 9689 E6 01        	and 1
 483+ 968B 28 0D        	jr z,3F
 484+ 968D
 485+ 968D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 968D
 487+ 968D CD D3 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9690
 489+ 9690 7D           9 ld a,l
 490+ 9691 E6 1F        	and $1f
 491+ 9693 28 2A        	jr z,7F
 492+ 9695 2B           	dec hl
 493+ 9696 10 F8        	djnz 9B
 494+ 9698 18 25        	jr 7F
 495+ 969A
 496+ 969A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 969A
 498+ 969A 2A B7 89     3 ld hl,(Posicion_actual)
 499+ 969D 18 20        	jr 7F
 500+ 969F
 501+ 969F 28 14        1 jr z,2F
 502+ 96A1
 503+ 96A1              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 96A1
 505+ 96A1 CD D3 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 96A4
 507+ 96A4 7D           4 ld a,l
 508+ 96A5 E6 1F        	and $1f
 509+ 96A7 28 03        	jr z,6F
 510+ 96A9 2B           	dec hl
 511+ 96AA 10 F8        	djnz 4B
 512+ 96AC 06 0F        6 ld b,15
 513+ 96AE CD 34 97     5 call PreviousScan
 514+ 96B1 10 FB        	djnz 5B
 515+ 96B3 18 0A        	jr 7F
 516+ 96B5
 517+ 96B5              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 96B5
 519+ 96B5 CD D3 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 96B8 06 0F        	ld b,15
 521+ 96BA CD 34 97     8 call PreviousScan
 522+ 96BD 10 FB        	djnz 8B
 523+ 96BF
 524+ 96BF E5           7 push hl
 525+ 96C0 DD E1        	pop ix
 526+ 96C2
 527+ 96C2 2A B9 89     	ld hl,(Puntero_objeto)
 528+ 96C5 E5           	push hl
 529+ 96C6 FD E1        	pop iy
 530+ 96C8
 531+ 96C8              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96C8
 533+ 96C8 3A E3 89     	ld a,(Ctrl_0)
 534+ 96CB CB 77        	bit 6,a
 535+ 96CD C8           	ret z
 536+ 96CE
 537+ 96CE              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96CE              ; _ entidad / Amadeus´.
 539+ 96CE
 540+ 96CE DD 22 3F 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96D2
 542+ 96D2 C9           	ret
 543+ 96D3
 544+ 96D3              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96D3              ;
 546+ 96D3              ;	2/1/23
 547+ 96D3              ;
 548+ 96D3              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96D3              ;
 550+ 96D3              ;	Tras esta rutina tenemos:
 551+ 96D3              ;
 552+ 96D3              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96D3              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96D3              ;
 555+ 96D3              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96D3
 557+ 96D3 2A B7 89     Operandos ld hl,(Posicion_actual)
 558+ 96D6 3A F2 89     	ld a,(Columnas)
 559+ 96D9 3D           	dec a
 560+ 96DA 20 01        	jr nz,1F
 561+ 96DC 3C           	inc a
 562+ 96DD 47           1 ld b,a
 563+ 96DE C9           	ret
 564+ 96DF
 565+ 96DF              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96DF              ;
 567+ 96DF              ;	3/1/23
 568+ 96DF              ;
 569+ 96DF              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96DF              ;
 571+ 96DF              ;	Destruye: A,B,HL y DE.
 572+ 96DF
 573+ 96DF              Define_rutina_de_impresion
 574+ 96DF
 575+ 96DF 3A B6 89     	ld a,(Columns)
 576+ 96E2 47           	ld b,a
 577+ 96E3 3A F2 89     	ld a,(Columnas)
 578+ 96E6 B8           	cp b
 579+ 96E7 20 0D        	jr nz,2f
 580+ 96E9
 581+ 96E9              ;	La entidad se imprime entera.
 582+ 96E9
 583+ 96E9 21 C5 97     	ld hl, Indice_entidades_completas
 584+ 96EC E6 01        	and 1
 585+ 96EE 28 02        	jr z,1F
 586+ 96F0
 587+ 96F0 23           	inc hl
 588+ 96F1 23           	inc hl
 589+ 96F2
 590+ 96F2 CD 8A 8D     1 call Extrae_address
 591+ 96F5 C9           	ret		;	ret
 592+ 96F6
 593+ 96F6              ;	La entidad no se imprime entera en pantalla.
 594+ 96F6
 595+ 96F6 3A C9 89     2 ld a,(Cuad_objeto)
 596+ 96F9 E6 01        	and 1
 597+ 96FB 28 17        	jr z,3F
 598+ 96FD
 599+ 96FD              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96FD
 601+ 96FD 21 C9 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9700 3A B6 89     4 ld a,(Columns)
 603+ 9703 E6 01        	and 1
 604+ 9705 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9707
 606+ 9707 23           	inc hl
 607+ 9708 23           	inc hl
 608+ 9709
 609+ 9709 3A F2 89     	ld a,(Columnas)
 610+ 970C E6 01        	and 1
 611+ 970E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9710
 613+ 9710 23           	inc hl
 614+ 9711 23           	inc hl
 615+ 9712
 616+ 9712 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9714
 618+ 9714 21 CF 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9717 18 E7        	jr 4B
 620+ 9719
 621+ 9719              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9719              ;
 623+ 9719              ;	Prepara_draw
 624+ 9719              ;
 625+ 9719              ;	Es una rutina de carga.
 626+ 9719              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9719              ;
 628+ 9719              ;	FUNCIONAMIENTO:
 629+ 9719              ;
 630+ 9719              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9719              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9719              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9719              ;
 634+ 9719              ;	DESTRUYE:
 635+ 9719              ;
 636+ 9719              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9719
 638+ 9719 21 B5 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 971C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 971D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 971E 4E           	ld c,(hl)
 642+ 971F 2A B7 89     	ld hl,(Posicion_actual)
 643+ 9722 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9724 C9           	ret
 645+ 9725
 646+ 9725              ;----------------------------------------------------------------------------------------------------------------
 647+ 9725              ;
 648+ 9725              ;	5/08/22
 649+ 9725              ;
 650+ 9725              ;   NextScan.
 651+ 9725              ;
 652+ 9725              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9725              ;
 654+ 9725              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9725              ;
 656+ 9725              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9725              ;
 658+ 9725              ;       DESTRUIDOS: AF y HL !!!
 659+ 9725              ;
 660+ 9725              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9725              ;
 662+ 9725
 663+ 9725 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9726 7C               ld a,h
 665+ 9727 E6 07            and 7
 666+ 9729 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 972A
 668+ 972A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 972B C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 972D 6F               ld l,a
 671+ 972E D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 972F
 673+ 972F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9730 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9732 67               ld h,a
 676+ 9733 C9               ret
 677+ 9734
 678+ 9734              ;----------------------------------------------------------------------------------------------------------------
 679+ 9734              ;
 680+ 9734              ;	5/08/22
 681+ 9734              ;
 682+ 9734              ;   PreviousScan.
 683+ 9734              ;
 684+ 9734              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9734              ;
 686+ 9734              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9734              ;
 688+ 9734              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9734              ;
 690+ 9734              ;       DESTRUIDOS: AF y HL !!!
 691+ 9734              ;
 692+ 9734              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9734              ;
 694+ 9734
 695+ 9734 7C           PreviousScan ld a,h
 696+ 9735 25               dec h               ; Dec H.
 697+ 9736 E6 07            and 7
 698+ 9738 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9739
 700+ 9739 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 973A D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 973C 6F               ld l,a
 703+ 973D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 973E
 705+ 973E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 973F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9741 67               ld h,a
 708+ 9742 C9               ret
 709+ 9743
 710+ 9743              ; -----------------------------------------------------------------------------------
 711+ 9743              ;
 712+ 9743              ;	31/7/23
 713+ 9743              ;
 714+ 9743              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9743              ;	Extrae fotos de Album_de_fotos.
 716+ 9743
 717+ 9743              Extrae_foto_entidades
 718+ 9743
 719+ 9743 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9746 7E           	ld a,(hl)
 721+ 9747 A7           	and a
 722+ 9748 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9749
 724+ 9749 3A 04 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 974C A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 974D C8           	ret z
 727+ 974E
 728+ 974E              ; -----------------------------------
 729+ 974E
 730+ 974E ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9752 31 00 70     	ld sp,Album_de_fotos
 732+ 9755
 733+ 9755 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9757 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9758 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9759
 737+ 9759 ED 73 0B 8A  	ld (Stack_2),sp
 738+ 975D ED 7B 09 8A  	ld sp,(Stack)
 739+ 9761
 740+ 9761              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9761
 742+ 9761 3E CD        	ld a,$cd
 743+ 9763 32 6B 97     	ld (Imprime),a
 744+ 9766 EB           	ex de,hl
 745+ 9767 22 6C 97     	ld (Imprime+1),hl
 746+ 976A EB           	ex de,hl
 747+ 976B
 748+ 976B              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 976B
 750+ 976B 00 00 00     Imprime db 0,0,0
 751+ 976E
 752+ 976E ED 73 09 8A  	ld (Stack),sp
 753+ 9772
 754+ 9772 3A 04 8A     	ld a,(Numero_de_malotes)
 755+ 9775 3D           	dec a
 756+ 9776 28 09        	jr z,1F
 757+ 9778 32 04 8A      	ld (Numero_de_malotes),a
 758+ 977B
 759+ 977B ED 7B 0B 8A  	ld sp,(Stack_2)
 760+ 977F 18 D4        	jr 2B
 761+ 9781
 762+ 9781 AF           1 xor a
 763+ 9782 32 0B 8A     	ld (Stack_2),a
 764+ 9785
 765+ 9785 C9           	ret
 766+ 9786
 767+ 9786              ; -----------------------------------------------------------------------------------
 768+ 9786              ;
 769+ 9786              ;	28/2/23
 770+ 9786              ;
 771+ 9786              ;	Pinta los disparos generados.
 772+ 9786
 773+ 9786              Extrae_foto_disparos
 774+ 9786
 775+ 9786 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 776+ 9789 7E               ld a,(hl)
 777+ 978A A7               and a
 778+ 978B C8               ret z
 779+ 978C
 780+ 978C 3A 2F 8A     	ld a,(Numero_de_disparotes)
 781+ 978F A7           	and a
 782+ 9790 C8           	ret z
 783+ 9791 ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9795 31 0D 72     	ld sp,Album_de_fotos_disparos
 785+ 9798
 786+ 9798 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 979A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 979B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 979C
 790+ 979C ED 73 0B 8A  	ld (Stack_2),sp
 791+ 97A0 ED 7B 09 8A  	ld sp,(Stack)
 792+ 97A4
 793+ 97A4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 97A4
 795+ 97A4 3E CD        	ld a,$cd
 796+ 97A6 32 AE 97     	ld (Imprime2),a
 797+ 97A9 EB           	ex de,hl
 798+ 97AA 22 AF 97     	ld (Imprime2+1),hl
 799+ 97AD EB           	ex de,hl
 800+ 97AE
 801+ 97AE              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 97AE
 803+ 97AE 00 00 00     Imprime2 db 0,0,0
 804+ 97B1
 805+ 97B1 3A 2F 8A     	ld a,(Numero_de_disparotes)
 806+ 97B4 3D           	dec a
 807+ 97B5 28 09        	jr z,1F
 808+ 97B7 32 2F 8A      	ld (Numero_de_disparotes),a
 809+ 97BA
 810+ 97BA ED 7B 0B 8A  	ld sp,(Stack_2)
 811+ 97BE 18 D8        	jr 2B
 812+ 97C0
 813+ 97C0 AF           1 xor a
 814+ 97C1 32 0B 8A     	ld (Stack_2),a
 815+ 97C4 C9           	ret
 816+ 97C5
# file closed: Draw_XOR.asm
1514  97C5              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97C5              ;   índices de Rutinas de impresión.
   2+ 97C5
   3+ 97C5 D5 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97C7 02 98            defw Pinta_Amadeus_3x2
   5+ 97C9
   6+ 97C9 58 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97CB F8 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97CD AC 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97CF
  10+ 97CF 82 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97D1 86 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97D3 3A 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97D5
  14+ 97D5
  15+ 97D5              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97D5              ;
  17+ 97D5              ;   12/12/22
  18+ 97D5              ;
  19+ 97D5              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97D5              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97D5              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97D5              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97D5              ;
  24+ 97D5              ;   Modifica: DE y HL.
  25+ 97D5
  26+ 97D5 ED 73 09 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97D9 FD F9        	ld sp,iy
  28+ 97DB 06 10            ld b,16
  29+ 97DD D1           1 pop de
  30+ 97DE 7B               ld a,e
  31+ 97DF AE               xor (hl)
  32+ 97E0 77           	ld (hl),a
  33+ 97E1 23           	inc hl
  34+ 97E2 7A               ld a,d
  35+ 97E3 AE               xor (hl)
  36+ 97E4 77           	ld (hl),a
  37+ 97E5 2B           	dec hl
  38+ 97E6 24           	inc h
  39+ 97E7 7C               ld a,h
  40+ 97E8 E6 07            and 7
  41+ 97EA 20 0A            jr nz,2F
  42+ 97EC 7D               ld a,l
  43+ 97ED C6 20            add a,$20
  44+ 97EF 6F               ld l,a
  45+ 97F0 38 04            jr c,2F
  46+ 97F2 7C               ld a,h
  47+ 97F3 D6 08            sub 8
  48+ 97F5 67               ld h,a
  49+ 97F6 7C           2 ld a,h
  50+ 97F7 FE 58            cp $58
  51+ 97F9 28 02            jr z,3F
  52+ 97FB 10 E0            djnz 1B
  53+ 97FD ED 7B 09 8A  3 ld sp,(Stack)
  54+ 9801 C9           	ret
  55+ 9802
  56+ 9802 ED 73 09 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9806 FD F9        	ld sp,iy
  58+ 9808 06 08            ld b,8
  59+ 980A D1           1 pop de
  60+ 980B 7B               ld a,e
  61+ 980C AE               xor (hl)
  62+ 980D 77           	ld (hl),a
  63+ 980E 23           	inc hl
  64+ 980F 7A               ld a,d
  65+ 9810 AE               xor (hl)
  66+ 9811 77           	ld (hl),a
  67+ 9812 23           	inc hl
  68+ 9813 D1           	pop de
  69+ 9814 7B               ld a,e
  70+ 9815 AE               xor (hl)
  71+ 9816 77           	ld (hl),a
  72+ 9817 2B           	dec hl
  73+ 9818 2B           	dec hl
  74+ 9819 24           	inc h
  75+ 981A 7C               ld a,h
  76+ 981B E6 07            and 7
  77+ 981D 20 0A            jr nz,2F
  78+ 981F 7D               ld a,l
  79+ 9820 C6 20            add a,$20
  80+ 9822 6F               ld l,a
  81+ 9823 38 04            jr c,2F
  82+ 9825 7C               ld a,h
  83+ 9826 D6 08            sub 8
  84+ 9828 67               ld h,a
  85+ 9829 7C           2 ld a,h
  86+ 982A FE 58            cp $58
  87+ 982C 28 25            jr z,4F
  88+ 982E 7A               ld a,d
  89+ 982F AE               xor (hl)
  90+ 9830 77               ld (hl),a
  91+ 9831 D1           	pop de
  92+ 9832 23           	inc hl
  93+ 9833 7B               ld a,e
  94+ 9834 AE               xor (hl)
  95+ 9835 77           	ld (hl),a
  96+ 9836 23           	inc hl
  97+ 9837 7A               ld a,d
  98+ 9838 AE               xor (hl)
  99+ 9839 77           	ld (hl),a
 100+ 983A 2B           	dec hl
 101+ 983B 2B           	dec hl
 102+ 983C 24           	inc h
 103+ 983D 7C               ld a,h
 104+ 983E E6 07            and 7
 105+ 9840 20 0A            jr nz,3F
 106+ 9842 7D               ld a,l
 107+ 9843 C6 20            add a,$20
 108+ 9845 6F               ld l,a
 109+ 9846 38 04            jr c,3F
 110+ 9848 7C               ld a,h
 111+ 9849 D6 08            sub 8
 112+ 984B 67               ld h,a
 113+ 984C 7C           3 ld a,h
 114+ 984D FE 58            cp $58
 115+ 984F 28 02            jr z,4F
 116+ 9851 10 B7            djnz 1B
 117+ 9853 ED 7B 09 8A  4 ld sp,(Stack)
 118+ 9857 C9           	ret
 119+ 9858
 120+ 9858              ; ---------------------------------------------------
 121+ 9858
 122+ 9858 ED 73 09 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 985C FD F9        	ld sp,iy
 124+ 985E
 125+ 985E              ; >>>
 126+ 985E
 127+ 985E 06 10            ld b,16
 128+ 9860 D1           1 pop de
 129+ 9861 7A           	ld a,d
 130+ 9862 AE           	xor (hl)
 131+ 9863 77           	ld (hl),a
 132+ 9864 24           	inc h
 133+ 9865 7C               ld a,h
 134+ 9866 E6 07            and 7
 135+ 9868 20 0C            jr nz,2F
 136+ 986A 7D               ld a,l
 137+ 986B C6 20            add a,$20
 138+ 986D 6F               ld l,a
 139+ 986E 38 06            jr c,2F
 140+ 9870 7C               ld a,h
 141+ 9871 D6 08            sub 8
 142+ 9873 67               ld h,a
 143+ 9874 18 00            jr 2F
 144+ 9876 7C           2 ld a,h
 145+ 9877 FE 58            cp $58
 146+ 9879 28 02            jr z,3F
 147+ 987B 10 E3            djnz 1B
 148+ 987D ED 7B 09 8A  3 ld sp,(Stack)
 149+ 9881 C9           	ret
 150+ 9882
 151+ 9882 ED 73 09 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9886 FD F9        	ld sp,iy
 153+ 9888
 154+ 9888              ; >>>
 155+ 9888
 156+ 9888 06 10            ld b,16
 157+ 988A D1           1 pop de
 158+ 988B 7B           	ld a,e
 159+ 988C AE           	xor (hl)
 160+ 988D 77           	ld (hl),a
 161+ 988E 24           	inc h
 162+ 988F 7C               ld a,h
 163+ 9890 E6 07            and 7
 164+ 9892 20 0C            jr nz,2F
 165+ 9894 7D               ld a,l
 166+ 9895 C6 20            add a,$20
 167+ 9897 6F               ld l,a
 168+ 9898 38 06            jr c,2F
 169+ 989A 7C               ld a,h
 170+ 989B D6 08            sub 8
 171+ 989D 67               ld h,a
 172+ 989E 18 00            jr 2F
 173+ 98A0 7C           2 ld a,h
 174+ 98A1 FE 58            cp $58
 175+ 98A3 28 02            jr z,3F
 176+ 98A5 10 E3            djnz 1B
 177+ 98A7 ED 7B 09 8A  3 ld sp,(Stack)
 178+ 98AB C9           	ret
 179+ 98AC
 180+ 98AC              ; ---------------------------------------------------
 181+ 98AC
 182+ 98AC ED 73 09 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 98B0 FD F9        	ld sp,iy
 184+ 98B2 06 08            ld b,8
 185+ 98B4 D1           1 pop de
 186+ 98B5 7A           	ld a,d
 187+ 98B6 AE           	xor (hl)
 188+ 98B7 77           	ld (hl),a
 189+ 98B8 23           	inc hl
 190+ 98B9 D1           	pop de
 191+ 98BA 7B           	ld a,e
 192+ 98BB AE           	xor (hl)
 193+ 98BC 77           	ld (hl),a
 194+ 98BD 2B           	dec hl
 195+ 98BE 24            	inc h
 196+ 98BF 7C               ld a,h
 197+ 98C0 E6 07            and 7
 198+ 98C2 20 0A            jr nz,2F
 199+ 98C4 7D               ld a,l
 200+ 98C5 C6 20            add a,$20
 201+ 98C7 6F               ld l,a
 202+ 98C8 38 04            jr c,2F
 203+ 98CA 7C               ld a,h
 204+ 98CB D6 08            sub 8
 205+ 98CD 67               ld h,a
 206+ 98CE 7C           2 ld a,h
 207+ 98CF FE 58            cp $58
 208+ 98D1 28 20            jr z,4F
 209+ 98D3 D1               pop de
 210+ 98D4 7B           	ld a,e
 211+ 98D5 AE           	xor (hl)
 212+ 98D6 77           	ld (hl),a
 213+ 98D7 23           	inc hl
 214+ 98D8 7A           	ld a,d
 215+ 98D9 AE           	xor (hl)
 216+ 98DA 77           	ld (hl),a
 217+ 98DB 2B           	dec hl
 218+ 98DC 24           	inc h
 219+ 98DD 7C               ld a,h
 220+ 98DE E6 07            and 7
 221+ 98E0 20 0A            jr nz,3F
 222+ 98E2 7D               ld a,l
 223+ 98E3 C6 20            add a,$20
 224+ 98E5 6F               ld l,a
 225+ 98E6 38 04            jr c,3F
 226+ 98E8 7C               ld a,h
 227+ 98E9 D6 08            sub 8
 228+ 98EB 67               ld h,a
 229+ 98EC 7C           3 ld a,h
 230+ 98ED FE 58            cp $58
 231+ 98EF 28 02            jr z,4F
 232+ 98F1 10 C1            djnz 1B
 233+ 98F3 ED 7B 09 8A  4 ld sp,(Stack)
 234+ 98F7 C9           	ret
 235+ 98F8
 236+ 98F8 ED 73 09 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98FC FD F9        	ld sp,iy
 238+ 98FE 06 08            ld b,8
 239+ 9900 D1           1 pop de
 240+ 9901 D1           	pop de
 241+ 9902 7B           	ld a,e
 242+ 9903 AE           	xor (hl)
 243+ 9904 77           	ld (hl),a
 244+ 9905 24            	inc h
 245+ 9906 7C               ld a,h
 246+ 9907 E6 07            and 7
 247+ 9909 20 0A            jr nz,2F
 248+ 990B 7D               ld a,l
 249+ 990C C6 20            add a,$20
 250+ 990E 6F               ld l,a
 251+ 990F 38 04            jr c,2F
 252+ 9911 7C               ld a,h
 253+ 9912 D6 08            sub 8
 254+ 9914 67               ld h,a
 255+ 9915 7C           2 ld a,h
 256+ 9916 FE 58            cp $58
 257+ 9918 28 1B            jr z,4F
 258+ 991A D1               pop de
 259+ 991B 7A           	ld a,d
 260+ 991C AE           	xor (hl)
 261+ 991D 77           	ld (hl),a
 262+ 991E 24           	inc h
 263+ 991F 7C               ld a,h
 264+ 9920 E6 07            and 7
 265+ 9922 20 0A            jr nz,3F
 266+ 9924 7D               ld a,l
 267+ 9925 C6 20            add a,$20
 268+ 9927 6F               ld l,a
 269+ 9928 38 04            jr c,3F
 270+ 992A 7C               ld a,h
 271+ 992B D6 08            sub 8
 272+ 992D 67               ld h,a
 273+ 992E 7C           3 ld a,h
 274+ 992F FE 58            cp $58
 275+ 9931 28 02            jr z,4F
 276+ 9933 10 CB            djnz 1B
 277+ 9935 ED 7B 09 8A  4 ld sp,(Stack)
 278+ 9939 C9           	ret
 279+ 993A
 280+ 993A ED 73 09 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 993E FD F9        	ld sp,iy
 282+ 9940 06 08            ld b,8
 283+ 9942 D1           1 pop de
 284+ 9943 7B           	ld a,e
 285+ 9944 AE           	xor (hl)
 286+ 9945 77           	ld (hl),a
 287+ 9946 23           	inc hl
 288+ 9947 7A           	ld a,d
 289+ 9948 AE           	xor (hl)
 290+ 9949 77           	ld (hl),a
 291+ 994A 2B           	dec hl
 292+ 994B 24             	inc h
 293+ 994C 7C               ld a,h
 294+ 994D E6 07            and 7
 295+ 994F 20 0A            jr nz,2F
 296+ 9951 7D               ld a,l
 297+ 9952 C6 20            add a,$20
 298+ 9954 6F               ld l,a
 299+ 9955 38 04            jr c,2F
 300+ 9957 7C               ld a,h
 301+ 9958 D6 08            sub 8
 302+ 995A 67               ld h,a
 303+ 995B 7C           2 ld a,h
 304+ 995C FE 58            cp $58
 305+ 995E 28 21            jr z,4F
 306+ 9960 D1               pop de
 307+ 9961 7A           	ld a,d
 308+ 9962 AE           	xor (hl)
 309+ 9963 77           	ld (hl),a
 310+ 9964 23           	inc hl
 311+ 9965 D1               pop de
 312+ 9966 7B           	ld a,e
 313+ 9967 AE           	xor (hl)
 314+ 9968 77           	ld (hl),a
 315+ 9969 2B           	dec hl
 316+ 996A 24           	inc h
 317+ 996B 7C               ld a,h
 318+ 996C E6 07            and 7
 319+ 996E 20 0A            jr nz,3F
 320+ 9970 7D               ld a,l
 321+ 9971 C6 20            add a,$20
 322+ 9973 6F               ld l,a
 323+ 9974 38 04            jr c,3F
 324+ 9976 7C               ld a,h
 325+ 9977 D6 08            sub 8
 326+ 9979 67               ld h,a
 327+ 997A 7C           3 ld a,h
 328+ 997B FE 58            cp $58
 329+ 997D 28 02            jr z,4F
 330+ 997F 10 C1            djnz 1B
 331+ 9981 ED 7B 09 8A  4 ld sp,(Stack)
 332+ 9985 C9           	ret
 333+ 9986
 334+ 9986 ED 73 09 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 998A FD F9        	ld sp,iy
 336+ 998C 06 08            ld b,8
 337+ 998E D1           1 pop de
 338+ 998F 7B           	ld a,e
 339+ 9990 AE           	xor (hl)
 340+ 9991 77           	ld (hl),a
 341+ 9992 24            	inc h
 342+ 9993 7C               ld a,h
 343+ 9994 E6 07            and 7
 344+ 9996 20 0A            jr nz,2F
 345+ 9998 7D               ld a,l
 346+ 9999 C6 20            add a,$20
 347+ 999B 6F               ld l,a
 348+ 999C 38 04            jr c,2F
 349+ 999E 7C               ld a,h
 350+ 999F D6 08            sub 8
 351+ 99A1 67               ld h,a
 352+ 99A2 7C           2 ld a,h
 353+ 99A3 FE 58            cp $58
 354+ 99A5 28 1C            jr z,4F
 355+ 99A7 D1               pop de
 356+ 99A8 7A           	ld a,d
 357+ 99A9 AE           	xor (hl)
 358+ 99AA 77           	ld (hl),a
 359+ 99AB 24           	inc h
 360+ 99AC 7C               ld a,h
 361+ 99AD E6 07            and 7
 362+ 99AF 20 0A            jr nz,3F
 363+ 99B1 7D               ld a,l
 364+ 99B2 C6 20            add a,$20
 365+ 99B4 6F               ld l,a
 366+ 99B5 38 04            jr c,3F
 367+ 99B7 7C               ld a,h
 368+ 99B8 D6 08            sub 8
 369+ 99BA 67               ld h,a
 370+ 99BB 7C           3 ld a,h
 371+ 99BC FE 58            cp $58
 372+ 99BE 28 03            jr z,4F
 373+ 99C0 D1               pop de
 374+ 99C1 10 CB            djnz 1B
 375+ 99C3 ED 7B 09 8A  4 ld sp,(Stack)
 376+ 99C7 C9           	ret
 377+ 99C8
 378+ 99C8              ; ---------------------------------------------------
 379+ 99C8              ;
 380+ 99C8              ;   27/02/23
 381+ 99C8              ;
 382+ 99C8              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99C8              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99C8              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99C8
 386+ 99C8 ED 73 09 8A  Pinta_Disparo ld (Stack),sp
 387+ 99CC FD F9            ld sp,iy
 388+ 99CE 06 03            ld b,3
 389+ 99D0 D1           1 pop de
 390+ 99D1 7B               ld a,e
 391+ 99D2 AE               xor (hl)
 392+ 99D3 77               ld (hl),a
 393+ 99D4 23               inc hl
 394+ 99D5 7A               ld a,d
 395+ 99D6 AE               xor (hl)
 396+ 99D7 77               ld (hl),a
 397+ 99D8 2B               dec hl
 398+ 99D9
 399+ 99D9 24               inc h
 400+ 99DA 7C               ld a,h
 401+ 99DB E6 07            and 7
 402+ 99DD 20 0A            jr nz,2F
 403+ 99DF 7D               ld a,l
 404+ 99E0 C6 20            add a,$20
 405+ 99E2 6F               ld l,a
 406+ 99E3 38 04            jr c,2F
 407+ 99E5 7C               ld a,h
 408+ 99E6 D6 08            sub 8
 409+ 99E8 67               ld h,a
 410+ 99E9 7C           2 ld a,h
 411+ 99EA FE 58            cp $58
 412+ 99EC 28 02            jr z,3F
 413+ 99EE
 414+ 99EE 10 E0            djnz 1B
 415+ 99F0 ED 7B 09 8A  3 ld sp,(Stack)
 416+ 99F4 C9               ret
 417+ 99F5
# file closed: Rutinas_de_impresion_sprites.asm
1515  99F5              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99F5              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99F5              ;
   3+ 99F5              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99F5              ;
   5+ 99F5              ; *****************************************************************************************************************************************************************************************
   6+ 99F5              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99F5
   8+ 99F5 7C           calcula_tercio ld a,h
   9+ 99F6 E6 18        	and $18
  10+ 99F8 CB 2F        	sra a
  11+ 99FA CB 2F        	sra a
  12+ 99FC CB 2F        	sra a
  13+ 99FE C9           	ret
  14+ 99FF
# file closed: calcula_tercio.asm
1516  99FF              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99FF              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99FF              ;
   3+ 99FF              ;
   4+ 99FF              ;	CLS.
   5+ 99FF              ;
   6+ 99FF              ;	Limpia la pantalla y define sus atributos.
   7+ 99FF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99FF              ;
   9+ 99FF              ;	COLORES: 0 ..... NEGRO
  10+ 99FF              ;    		 1 ..... AZUL
  11+ 99FF              ; 			 2 ..... ROJO
  12+ 99FF              ;			 3 ..... MAGENTA
  13+ 99FF              ; 			 4 ..... VERDE
  14+ 99FF              ; 			 5 ..... CIAN
  15+ 99FF              ;			 6 ..... AMARILLO
  16+ 99FF              ; 			 7 ..... BLANCO
  17+ 99FF              ;
  18+ 99FF              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99FF              ;
  20+ 99FF              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99FF
  22+ 99FF
  23+ 99FF 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9A02 11 01 40     	LD DE,$4001
  25+ 9A05 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9A08 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9A0A ED B0        	LDIR
  28+ 9A0C 01 FF 02     	LD BC,767
  29+ 9A0F 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9A10 ED B0        	LDIR
  31+ 9A12 C9           	ret
  32+ 9A13
# file closed: Cls.asm
1517  9A13              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A13              ; ******************************************************************************************************************************************************************************************
   2+ 9A13              ;
   3+ 9A13              ;   20/05/23
   4+ 9A13              ;
   5+ 9A13              ;	Recompone_posicion_inicio
   6+ 9A13              ;
   7+ 9A13              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9A13              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9A13              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9A13              ;	_ a una u otra rutina.
  11+ 9A13
  12+ 9A13              Recompone_posicion_inicio
  13+ 9A13
  14+ 9A13 2A C7 89     	ld hl,(Posicion_inicio)
  15+ 9A16 7D           	ld a,l
  16+ 9A17 E6 1F        	and $1f
  17+ 9A19 28 16        	jr z,1F
  18+ 9A1B
  19+ 9A1B FE 1F        	cp $1f
  20+ 9A1D 28 0D        	jr z,3F
  21+ 9A1F
  22+ 9A1F 21 F6 89     	ld hl,Ctrl_2
  23+ 9A22 CB C6        	set 0,(hl)
  24+ 9A24 2A B9 89     	ld hl,(Puntero_objeto)
  25+ 9A27 22 F9 89     	ld (Repone_puntero_objeto),hl
  26+ 9A2A 18 08        	jr 2F
  27+ 9A2C
  28+ 9A2C CD CD 9B     3 call Mov_left
  29+ 9A2F 18 03        	jr 2F
  30+ 9A31
  31+ 9A31 CD AF 9A     1 call Mov_right
  32+ 9A34 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A37 22 B9 89     	ld (Puntero_objeto),hl
  34+ 9A3A C9           	ret
  35+ 9A3B
  36+ 9A3B              ; ******************************************************************************************************************************************************************************************
  37+ 9A3B              ;
  38+ 9A3B              ;   27/05/23
  39+ 9A3B              ;
  40+ 9A3B              ;	Mov_down
  41+ 9A3B              ;
  42+ 9A3B              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A3B              ;
  44+ 9A3B              ;
  45+ 9A3B              Mov_down
  46+ 9A3B
  47+ 9A3B CD 9D 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A3E              ;																	; _ repone (Puntero_objeto).
  49+ 9A3E 21 E3 89     	ld hl,Ctrl_0
  50+ 9A41 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A43              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A43              ; 																	; _ en el caso de que no lo haya.
  53+ 9A43 3A CD 89     	ld a,(Vel_down)
  54+ 9A46 47           	ld b,a
  55+ 9A47 2A B7 89         ld hl,(Posicion_actual)
  56+ 9A4A CD F5 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A4D E6 02        	and 2
  58+ 9A4F 28 0F        	jr z,1F
  59+ 9A51
  60+ 9A51              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A51              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A51
  63+ 9A51 7C           	ld a,h
  64+ 9A52 FE 57        	cp $57
  65+ 9A54 20 0A        	jr nz,1F
  66+ 9A56
  67+ 9A56 7D           	ld a,l
  68+ 9A57 C6 20        	add $20
  69+ 9A59 30 05        	jr nc,1F
  70+ 9A5B
  71+ 9A5B              ; ------------------------------
  72+ 9A5B              ;	call Reaparece_arriba
  73+ 9A5B CD 5A 9D     	call Reinicio
  74+ 9A5E              ; ------------------------------
  75+ 9A5E
  76+ 9A5E 18 08        	jr 3F
  77+ 9A60 CD 25 97     1 call NextScan
  78+ 9A63 22 B7 89     	ld (Posicion_actual),hl
  79+ 9A66 10 E2            djnz 2B
  80+ 9A68 CD 80 9D     3 call Genera_coordenadas
  81+ 9A6B C9           	ret
  82+ 9A6C
  83+ 9A6C              ; ******************************************************************************************************************************************************************************************
  84+ 9A6C              ;
  85+ 9A6C              ;   27/05/23
  86+ 9A6C              ;
  87+ 9A6C              ;	Mov_up
  88+ 9A6C              ;
  89+ 9A6C              ; 	Mueve el Sprite hacia arriba.
  90+ 9A6C              ;
  91+ 9A6C              ;
  92+ 9A6C              Mov_up
  93+ 9A6C
  94+ 9A6C CD 9D 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A6F              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A6F 21 E3 89     	ld hl,Ctrl_0
  97+ 9A72 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A74              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A74              ; 																		; _ en el caso de que no lo haya.
 100+ 9A74 3A CC 89     	ld a,(Vel_up)
 101+ 9A77 47           	ld b,a
 102+ 9A78 2A B7 89     	ld hl,(Posicion_actual)
 103+ 9A7B CD F5 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A7E A7           	and a
 105+ 9A7F 20 10        	jr nz,1F
 106+ 9A81
 107+ 9A81              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A81              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A81
 110+ 9A81 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A82 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A84 20 0B            jr nz,1F
 113+ 9A86 7D               ld a,l
 114+ 9A87 D6 20            sub $20
 115+ 9A89 30 06            jr nc,1F
 116+ 9A8B 25               dec h
 117+ 9A8C
 118+ 9A8C              ; -----------------------------
 119+ 9A8C CD 3B 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A8F              ;	call Reinicio
 121+ 9A8F              ; -----------------------------
 122+ 9A8F
 123+ 9A8F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A91 CD 34 97     1 call PreviousScan
 125+ 9A94 22 B7 89     	ld (Posicion_actual),hl
 126+ 9A97 10 E2            djnz 3B
 127+ 9A99 CD 80 9D     2 call Genera_coordenadas
 128+ 9A9C C9           	ret
 129+ 9A9D
 130+ 9A9D              ; -----------------------------
 131+ 9A9D              ;
 132+ 9A9D              ;	27/5/23
 133+ 9A9D              ;
 134+ 9A9D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A9D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A9D              ;
 137+ 9A9D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A9D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A9D              ;
 140+ 9A9D              ;	Modifica: A y (Puntero_objeto).
 141+ 9A9D
 142+ 9A9D 3A F6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9AA0 CB 47        	bit 0,a
 144+ 9AA2 C8           	ret z
 145+ 9AA3 CB 87        	res 0,a
 146+ 9AA5 32 F6 89     	ld (Ctrl_2),a
 147+ 9AA8 2A F9 89     	ld hl,(Repone_puntero_objeto)
 148+ 9AAB 22 B9 89     	ld (Puntero_objeto),hl
 149+ 9AAE C9           	ret
 150+ 9AAF
 151+ 9AAF              ; ******************************************************************************************************************************************************************************************
 152+ 9AAF              ;
 153+ 9AAF              ;	19/10/22
 154+ 9AAF              ;
 155+ 9AAF              ;	Mov_right.
 156+ 9AAF              ;
 157+ 9AAF              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9AAF              ;
 159+ 9AAF
 160+ 9AAF 21 E3 89     Mov_right ld hl,Ctrl_0
 161+ 9AB2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9AB4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9AB4              ; 																	; _ en el caso de que no lo haya.
 164+ 9AB4 3A E3 89     	ld a,(Ctrl_0)
 165+ 9AB7 CB 77        	bit 6,a
 166+ 9AB9 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9ABB
 168+ 9ABB CD E9 9C     	call Stop_Amadeus_right
 169+ 9ABE C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9ABF 18 4D        	jr 8F
 171+ 9AC1
 172+ 9AC1 3A BB 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AC4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9AC6 20 46        	jr nz,8F
 175+ 9AC8
 176+ 9AC8 3A BD 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9ACB A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9ACC 28 40        	jr z,8F
 179+ 9ACE
 180+ 9ACE              ; ---------- ---------- ----------
 181+ 9ACE              ;
 182+ 9ACE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9ACE
 184+ 9ACE 3A CB 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AD1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AD3 28 11        	jr z,1F
 187+ 9AD5 38 06        	jr c,6F
 188+ 9AD7 FE 04        	cp 4
 189+ 9AD9 28 14        	jr z,7F
 190+ 9ADB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9ADD
 192+ 9ADD              ; ---------- ---------- ----------
 193+ 9ADD              ;
 194+ 9ADD              ; Perfiles de velocidad
 195+ 9ADD              ;
 196+ 9ADD
 197+ 9ADD 3A BD 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AE0 FE FE        	cp $fe
 199+ 9AE2 20 2A        	jr nz,8F
 200+ 9AE4 18 10        	jr 3F
 201+ 9AE6 3A BD 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AE9 FE FD        	cp $fd
 203+ 9AEB 20 21        	jr nz,8F
 204+ 9AED 18 07        	jr 3F
 205+ 9AEF 3A BD 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AF2 FE FB        	cp $fb
 207+ 9AF4 20 18        	jr nz,8F
 208+ 9AF6
 209+ 9AF6              ; ---------- ---------- ----------
 210+ 9AF6
 211+ 9AF6              3
 212+ 9AF6 CD 29 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AF9              ;	call Reinicio
 214+ 9AF9
 215+ 9AF9              ; ---------- ---------- ----------
 216+ 9AF9              ;
 217+ 9AF9              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AF9
 219+ 9AF9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AFB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AFC CD 15 9B     	call DESPLZ_DER
 222+ 9AFF C1           	pop bc
 223+ 9B00 10 F9        	djnz 5B
 224+ 9B02 2A B7 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9B05 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9B06 22 B7 89     	ld (Posicion_actual),hl
 227+ 9B09 CD 80 9D     	call Genera_coordenadas
 228+ 9B0C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9B0E
 230+ 9B0E              ; ---------- ---------- ----------
 231+ 9B0E
 232+ 9B0E 2A B7 89     8 ld hl,(Posicion_actual)
 233+ 9B11 CD 15 9B     	call DESPLZ_DER
 234+ 9B14 C9           2 ret
 235+ 9B15
 236+ 9B15              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9B15              ;
 238+ 9B15              ;	22/9/22
 239+ 9B15              ;
 240+ 9B15
 241+ 9B15 CD 24 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9B18 CD 70 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9B1B CD 99 9B         call Ciclo_completo
 244+ 9B1E 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B21 CB FE        	set 7,(hl)
 246+ 9B23 C9           	ret
 247+ 9B24
 248+ 9B24              ; ******************************************************************************************************************************************************************************************
 249+ 9B24              ;	15/02/23
 250+ 9B24              ;
 251+ 9B24
 252+ 9B24 3A CB 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B27 47           	ld b,a
 254+ 9B28 2A C3 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B2B 23           1 inc hl
 256+ 9B2C 23           	inc hl
 257+ 9B2D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B2F 22 C3 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B32 CD 8A 8D     	call Extrae_address
 260+ 9B35 22 B9 89     	ld (Puntero_objeto),hl
 261+ 9B38
 262+ 9B38              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B38
 264+ 9B38              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B38              ; Cuántos movimientos hemos hecho ??
 266+ 9B38              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B38
 268+ 9B38 2A BF 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B3B EB           	ex de,hl
 270+ 9B3C A7           	and a
 271+ 9B3D ED 52        	sbc hl,de
 272+ 9B3F CB 3D        	srl l
 273+ 9B41 3E 08        6 ld a,8
 274+ 9B43 95           	sub l
 275+ 9B44 30 1E        	jr nc,3F
 276+ 9B46
 277+ 9B46              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B46              ; B="0".
 279+ 9B46
 280+ 9B46 04           4 inc b
 281+ 9B47 3C           	inc a
 282+ 9B48 20 FC        	jr nz,4B
 283+ 9B4A 78           	ld a,b
 284+ 9B4B 08           	ex af,af
 285+ 9B4C 2A BF 89     	ld hl,(Indice_Sprite_der)
 286+ 9B4F 23           5 inc hl
 287+ 9B50 23           	inc hl
 288+ 9B51 10 FC        	djnz 5B
 289+ 9B53 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B56 CD 8A 8D     	call Extrae_address
 291+ 9B59 22 B9 89     	ld (Puntero_objeto),hl
 292+ 9B5C
 293+ 9B5C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B5C              ; _(Posicion_actual).
 295+ 9B5C
 296+ 9B5C 21 B7 89     	ld hl,Posicion_actual
 297+ 9B5F 34           	inc (hl)
 298+ 9B60 08               ex af,af
 299+ 9B61 6F           	ld l,a
 300+ 9B62 18 DD        	jr 6B
 301+ 9B64
 302+ 9B64              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B64
 304+ 9B64 47           3 ld b,a
 305+ 9B65 2A C1 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B68 23           2 inc hl
 307+ 9B69 23           	inc hl
 308+ 9B6A 10 FC        	djnz 2B
 309+ 9B6C 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B6F C9           8 ret
 311+ 9B70
 312+ 9B70              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B70              ;
 314+ 9B70              ;	24/7/22
 315+ 9B70              ;
 316+ 9B70              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B70              ;
 318+ 9B70              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B70              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B70              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B70
 322+ 9B70 3A BD 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B73 A7           	and a
 324+ 9B74 20 1F        	jr nz,1F
 325+ 9B76 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B78 32 BD 89         ld (CTRL_DESPLZ),a
 327+ 9B7B
 328+ 9B7B 21 B6 89     	ld hl,Columns
 329+ 9B7E 34           	inc (hl)
 330+ 9B7F 3A C9 89     	ld a,(Cuad_objeto)
 331+ 9B82 E6 01        	and 1
 332+ 9B84 28 0F        	jr z,1F
 333+ 9B86 2A B7 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B89 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B8A 22 B7 89     	ld (Posicion_actual),hl
 336+ 9B8D CD 80 9D     	call Genera_coordenadas
 337+ 9B90 CD F5 9C     	call Inc_CTRL_DESPLZ
 338+ 9B93 18 03        	jr 2F
 339+ 9B95 CD F5 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B98 C9           2 ret
 341+ 9B99
 342+ 9B99              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B99              ;
 344+ 9B99              ;	24/7/22
 345+ 9B99              ;
 346+ 9B99              ;	Ciclo_completo.
 347+ 9B99              ;
 348+ 9B99              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B99              ;
 350+ 9B99              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B99              ; 	Decrementamos (Columns).
 352+ 9B99              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B99              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B99
 355+ 9B99
 356+ 9B99 3A BD 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B9C FE FF        	cp $ff
 358+ 9B9E 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9BA0 E6 F0        	and $f0
 360+ 9BA2 20 28        	jr nz,3F
 361+ 9BA4
 362+ 9BA4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9BA4
 364+ 9BA4 3A BD 89     	ld a,(CTRL_DESPLZ)
 365+ 9BA7 47           	ld b,a
 366+ 9BA8 3E F8        	ld a,$f8
 367+ 9BAA 80           	add b
 368+ 9BAB 32 BD 89     	ld (CTRL_DESPLZ),a
 369+ 9BAE 18 1C        	jr 3F
 370+ 9BB0 21 B6 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9BB3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9BB4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9BB5 32 BD 89     	ld (CTRL_DESPLZ),a
 374+ 9BB8 3A C9 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9BBB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BBD 20 0A        	jr nz,2F
 377+ 9BBF 2A B7 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BC2 23           	inc hl
 379+ 9BC3 22 B7 89     	ld (Posicion_actual),hl
 380+ 9BC6 CD 80 9D     	call Genera_coordenadas
 381+ 9BC9
 382+ 9BC9              ; Inicia el puntero de Sprite.
 383+ 9BC9
 384+ 9BC9 CD A1 8D     2 call Inicia_puntero_objeto_der
 385+ 9BCC C9           3 ret
 386+ 9BCD
 387+ 9BCD              ; ******************************************************************************************************************************************************************************************
 388+ 9BCD              ;
 389+ 9BCD              ;	15/02/23
 390+ 9BCD              ;
 391+ 9BCD              ;	Mov_left.
 392+ 9BCD              ;
 393+ 9BCD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BCD              ;
 395+ 9BCD 21 E3 89     Mov_left ld hl,Ctrl_0
 396+ 9BD0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BD2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BD2              ; 																	; _ en el caso de que no lo haya.
 399+ 9BD2 3A E3 89     	ld a,(Ctrl_0)
 400+ 9BD5 CB 77        	bit 6,a
 401+ 9BD7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BD9
 403+ 9BD9 CD EF 9C     	call Stop_Amadeus_left
 404+ 9BDC C8           	ret z
 405+ 9BDD 20 4A        	jr nz,8F
 406+ 9BDF
 407+ 9BDF 3A BB 89     11 ld a,(Coordenada_X)
 408+ 9BE2 A7           	and a
 409+ 9BE3 20 44        	jr nz,8F
 410+ 9BE5
 411+ 9BE5 3A BD 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BE8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BE9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BEB
 415+ 9BEB              ; ---------- ---------- ----------
 416+ 9BEB
 417+ 9BEB 3A CA 89     	ld a,(Vel_left)
 418+ 9BEE FE 02        	cp 2
 419+ 9BF0 28 0F        	jr z,1F
 420+ 9BF2 38 04        	jr c,6F
 421+ 9BF4 FE 04        	cp 4
 422+ 9BF6 28 12        	jr z,7F
 423+ 9BF8
 424+ 9BF8              ; ---------- ---------- ----------
 425+ 9BF8
 426+ 9BF8 3A BD 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BFB FE F8        	cp $f8
 428+ 9BFD 20 2A        	jr nz,8F
 429+ 9BFF 18 10        	jr 4F
 430+ 9C01 3A BD 89     1 ld a,(CTRL_DESPLZ)
 431+ 9C04 FE F9        	cp $f9
 432+ 9C06 20 21        	jr nz,8F
 433+ 9C08 18 07        	jr 4F
 434+ 9C0A 3A BD 89     7 ld a,(CTRL_DESPLZ)
 435+ 9C0D FE FB        	cp $fb
 436+ 9C0F 20 18        	jr nz,8F
 437+ 9C11
 438+ 9C11              ; ---------- ---------- ----------
 439+ 9C11
 440+ 9C11              4
 441+ 9C11 CD 17 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9C14              ;	call Reinicio
 443+ 9C14
 444+ 9C14              ; ---------- ---------- ----------
 445+ 9C14
 446+ 9C14 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9C16 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9C17
 449+ 9C17              ;	ld hl,(Indice_Sprite_izq)
 450+ 9C17              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9C17
 452+ 9C17 CD 30 9C     	call DESPLZ_IZQ
 453+ 9C1A C1           	pop bc
 454+ 9C1B 10 F9        	djnz 5B
 455+ 9C1D 2A B7 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C20 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C21 22 B7 89     	ld (Posicion_actual),hl
 458+ 9C24 CD 80 9D     	call Genera_coordenadas
 459+ 9C27 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C29
 461+ 9C29              ; ---------- ---------- ----------
 462+ 9C29
 463+ 9C29              ; Movemos, no hay recolocación.
 464+ 9C29
 465+ 9C29 2A B7 89     8 ld hl,(Posicion_actual)
 466+ 9C2C CD 30 9C     	call DESPLZ_IZQ
 467+ 9C2F C9           2 ret
 468+ 9C30
 469+ 9C30              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C30              ;
 471+ 9C30              ;	22/9/22
 472+ 9C30
 473+ 9C30              DESPLZ_IZQ
 474+ 9C30
 475+ 9C30 CD 3F 9C     	call Desplaza_izquierda
 476+ 9C33 CD 8B 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C36 CD B3 9C     	call Ciclo_completo_2
 478+ 9C39 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C3C CB BE        	res 7,(hl)
 480+ 9C3E C9           	ret
 481+ 9C3F
 482+ 9C3F              Desplaza_izquierda
 483+ 9C3F
 484+ 9C3F 3A CA 89     	ld a,(Vel_left)
 485+ 9C42 47           	ld b,a
 486+ 9C43 2A C5 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C46 23           1 inc hl
 488+ 9C47 23           	inc hl
 489+ 9C48 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C4A 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C4D CD 8A 8D     	call Extrae_address
 492+ 9C50 22 B9 89     	ld (Puntero_objeto),hl
 493+ 9C53
 494+ 9C53              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C53
 496+ 9C53              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C53              ; Cuántos movimientos hemos hecho ??
 498+ 9C53              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C53
 500+ 9C53 2A C1 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C56 EB           	ex de,hl
 502+ 9C57 A7           	and a
 503+ 9C58 ED 52        	sbc hl,de
 504+ 9C5A CB 3D        	srl l
 505+ 9C5C 3E 08        6 ld a,8
 506+ 9C5E 95           	sub l
 507+ 9C5F 30 1E        	jr nc,3F
 508+ 9C61
 509+ 9C61              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C61              ; B="0".
 511+ 9C61
 512+ 9C61 04           4 inc b
 513+ 9C62 3C           	inc a
 514+ 9C63 20 FC        	jr nz,4B
 515+ 9C65 78           	ld a,b
 516+ 9C66 08           	ex af,af
 517+ 9C67 2A C1 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C6A 23           5 inc hl
 519+ 9C6B 23           	inc hl
 520+ 9C6C 10 FC        	djnz 5B
 521+ 9C6E 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C71 CD 8A 8D     	call Extrae_address
 523+ 9C74 22 B9 89     	ld (Puntero_objeto),hl
 524+ 9C77
 525+ 9C77              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C77              ; _(Posicion_actual).
 527+ 9C77
 528+ 9C77 21 B7 89     	ld hl,Posicion_actual
 529+ 9C7A 35           	dec (hl)
 530+ 9C7B 08           	ex af,af
 531+ 9C7C 6F           	ld l,a
 532+ 9C7D 18 DD        	jr 6B
 533+ 9C7F
 534+ 9C7F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C7F
 536+ 9C7F 47           3 ld b,a
 537+ 9C80 2A BF 89     	ld hl,(Indice_Sprite_der)
 538+ 9C83 23           2 inc hl
 539+ 9C84 23           	inc hl
 540+ 9C85 10 FC        	djnz 2B
 541+ 9C87 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C8A C9           8 ret
 543+ 9C8B
 544+ 9C8B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C8B              ;
 546+ 9C8B              ;	modifica_parametros_1er_DESPLZ
 547+ 9C8B              ;
 548+ 9C8B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C8B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C8B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C8B
 552+ 9C8B 3A BD 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C8E A7           	and a
 554+ 9C8F 20 1E        	jr nz,1F
 555+ 9C91 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C92 32 BD 89         ld (CTRL_DESPLZ),a
 557+ 9C95 21 B6 89     	ld hl,Columns
 558+ 9C98 34           	inc (hl)
 559+ 9C99 3A C9 89     	ld a,(Cuad_objeto)
 560+ 9C9C E6 01        	and 1
 561+ 9C9E 20 0F        	jr nz,1F
 562+ 9CA0 2A B7 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9CA3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9CA4 22 B7 89     	ld (Posicion_actual),hl
 565+ 9CA7 CD 80 9D     	call Genera_coordenadas
 566+ 9CAA CD 06 9D     	call Dec_CTRL_DESPLZ
 567+ 9CAD 18 03        	jr 2F
 568+ 9CAF CD 06 9D     1 call Dec_CTRL_DESPLZ
 569+ 9CB2 C9           2 ret
 570+ 9CB3
 571+ 9CB3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9CB3
 573+ 9CB3 3A BD 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9CB6 FE F7        	cp $f7
 575+ 9CB8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9CBA 30 2C        	jr nc,3F
 577+ 9CBC
 578+ 9CBC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9CBC
 580+ 9CBC 06 00        	ld b,0
 581+ 9CBE 04           4 inc b
 582+ 9CBF 3C           	inc a
 583+ 9CC0 FE F7        	cp $f7
 584+ 9CC2 20 FA        	jr nz,4B
 585+ 9CC4 3E FF        	ld a,$ff
 586+ 9CC6 90           	sub b
 587+ 9CC7 32 BD 89     	ld (CTRL_DESPLZ),a
 588+ 9CCA 18 1C        	jr 3F
 589+ 9CCC
 590+ 9CCC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CCC
 592+ 9CCC 21 B6 89     1 ld hl,Columns
 593+ 9CCF 35           	dec (hl)
 594+ 9CD0 AF           	xor a
 595+ 9CD1 32 BD 89     	ld (CTRL_DESPLZ),a
 596+ 9CD4 3A C9 89     	ld a,(Cuad_objeto)
 597+ 9CD7 E6 01        	and 1
 598+ 9CD9 28 0A        	jr z,2F
 599+ 9CDB 2A B7 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CDE 2B           	dec hl
 601+ 9CDF 22 B7 89     	ld (Posicion_actual),hl
 602+ 9CE2 CD 80 9D     	call Genera_coordenadas
 603+ 9CE5
 604+ 9CE5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CE5
 606+ 9CE5 CD B4 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CE8 C9           3 ret
 608+ 9CE9
 609+ 9CE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CE9              ;
 611+ 9CE9              ;	19/10/22
 612+ 9CE9              ;
 613+ 9CE9              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CE9              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CE9
 616+ 9CE9 3A BB 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CEC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CEE C9           	ret
 619+ 9CEF
 620+ 9CEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CEF              ;
 622+ 9CEF              ;	19/10/22
 623+ 9CEF              ;
 624+ 9CEF              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CEF              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CEF
 627+ 9CEF 3A BB 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CF2 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CF4 C9           	ret
 630+ 9CF5
 631+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CF5              ;
 633+ 9CF5              ;	24/7/22
 634+ 9CF5              ;
 635+ 9CF5              ;	Inc_CTRL_DESPLZ
 636+ 9CF5              ;
 637+ 9CF5              ;
 638+ 9CF5              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CF5
 640+ 9CF5 21 BD 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CF8 3A CB 89     	ld a,(Vel_right)
 642+ 9CFB A7           	and a
 643+ 9CFC 28 06        	jr z,1F
 644+ 9CFE 47           	ld b,a
 645+ 9CFF 34           3 inc (hl)
 646+ 9D00 10 FD        	djnz 3B
 647+ 9D02 18 01        	jr 2F
 648+ 9D04 34           1 inc (hl)
 649+ 9D05 C9           2 ret
 650+ 9D06
 651+ 9D06              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9D06              ;
 653+ 9D06              ;	5/2/23
 654+ 9D06              ;
 655+ 9D06              ;	Dec_CTRL_DESPLZ
 656+ 9D06              ;
 657+ 9D06              ;
 658+ 9D06              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9D06
 660+ 9D06 21 BD 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9D09 3A CA 89     	ld a,(Vel_left)
 662+ 9D0C A7           	and a
 663+ 9D0D 28 06        	jr z,1F
 664+ 9D0F 47           	ld b,a
 665+ 9D10 35           3 dec (hl)
 666+ 9D11 10 FD        	djnz 3B
 667+ 9D13 18 01        	jr 2F
 668+ 9D15 35           1 dec (hl)
 669+ 9D16 C9           2 ret
 670+ 9D17
 671+ 9D17              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9D17
 673+ 9D17 2A B7 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9D1A 01 1F 00     	ld bc,31
 675+ 9D1D A7           	and a
 676+ 9D1E ED 4A        	adc hl,bc
 677+ 9D20 22 B7 89     	ld (Posicion_actual),hl
 678+ 9D23 21 E3 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D26 CB C6        	set 0,(hl)
 680+ 9D28 C9           	ret
 681+ 9D29
 682+ 9D29              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D29
 684+ 9D29 2A B7 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D2C 01 1F 00     	ld bc,31
 686+ 9D2F A7           	and a
 687+ 9D30 ED 42        	sbc hl,bc
 688+ 9D32 22 B7 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D35 21 E3 89     	ld hl,Ctrl_0
 690+ 9D38 CB CE        	set 1,(hl)
 691+ 9D3A C9           	ret
 692+ 9D3B
 693+ 9D3B              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D3B
 695+ 9D3B 24           Reaparece_abajo inc h
 696+ 9D3C 01 E0 17     	ld bc,$17e0
 697+ 9D3F A7           	and a
 698+ 9D40 ED 4A        	adc hl,bc
 699+ 9D42 22 B7 89     	ld (Posicion_actual),hl
 700+ 9D45 21 E3 89     	ld hl,Ctrl_0
 701+ 9D48 CB D6        	set 2,(hl)
 702+ 9D4A C9           	ret
 703+ 9D4B
 704+ 9D4B              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D4B
 706+ 9D4B 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D4E A7           	and a
 708+ 9D4F ED 42        	sbc hl,bc
 709+ 9D51 22 B7 89     	ld (Posicion_actual),hl
 710+ 9D54 21 E3 89     	ld hl,Ctrl_0
 711+ 9D57 CB DE        	set 3,(hl)
 712+ 9D59 C9           	ret
 713+ 9D5A
 714+ 9D5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D5A              ;
 716+ 9D5A              ;	15/07/23
 717+ 9D5A
 718+ 9D5A              Reinicio
 719+ 9D5A
 720+ 9D5A              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D5A
 722+ 9D5A AF           	xor a
 723+ 9D5B 21 EA 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D5E CD 7C 9D     	call Limpia_contenido_hl
 725+ 9D61
 726+ 9D61 21 B7 89     	ld hl,Posicion_actual
 727+ 9D64 CD 7C 9D     	call Limpia_contenido_hl
 728+ 9D67
 729+ 9D67 CD 9D A0     	call Inicializa_Puntero_indice_mov
 730+ 9D6A CD 27 A0     	call Inicia_Puntero_mov
 731+ 9D6D
 732+ 9D6D 21 EC 89     	ld hl,Incrementa_puntero
 733+ 9D70 06 05        	ld b,5
 734+ 9D72 77           1 ld (hl),a
 735+ 9D73 23           	inc hl
 736+ 9D74 10 FC        	djnz 1B
 737+ 9D76
 738+ 9D76 21 F6 89     	ld hl,Ctrl_2
 739+ 9D79 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D7B
 741+ 9D7B C9           	ret
 742+ 9D7C
 743+ 9D7C 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D7D 23           	inc hl
 745+ 9D7E 77           	ld (hl),a
 746+ 9D7F C9           	ret
 747+ 9D80
 748+ 9D80
# file closed: Direcciones.asm
1518  9D80              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D80              ; ------------------------------------------------------------------------
   2+ 9D80              ;
   3+ 9D80              ;	02/04/23
   4+ 9D80              ;
   5+ 9D80              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D80              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D80              ;
   8+ 9D80              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D80              ;
  10+ 9D80              ;	Modifica: A,BC y DE.
  11+ 9D80
  12+ 9D80 C5           Genera_coordenadas push bc
  13+ 9D81 E5           	push hl
  14+ 9D82 D5           	push de
  15+ 9D83
  16+ 9D83 2A B7 89     	ld hl,(Posicion_actual)
  17+ 9D86
  18+ 9D86 7D           	ld a,l
  19+ 9D87 E6 1F        	and $1f
  20+ 9D89 32 BB 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D8C
  22+ 9D8C CD F5 99     	call calcula_tercio
  23+ 9D8F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D90
  25+ 9D90 1E 00        	ld e,0
  26+ 9D92 7D           	ld a,l
  27+ 9D93 E6 E0        	and $e0
  28+ 9D95 28 01        	jr z,1F
  29+ 9D97 04           	inc b
  30+ 9D98
  31+ 9D98 04           1 inc b
  32+ 9D99 05           	dec b
  33+ 9D9A 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D9C              ;														; _ , salimos.
  35+ 9D9C 1C           3 inc e
  36+ 9D9D D6 20        	sub 32
  37+ 9D9F 20 FB        	jr nz,3B
  38+ 9DA1 10 F5        	djnz 1B
  39+ 9DA3
  40+ 9DA3 7B           2 ld a,e
  41+ 9DA4 32 BC 89     	ld (Coordenada_y),a
  42+ 9DA7
  43+ 9DA7 D1           	pop de
  44+ 9DA8 E1           	pop hl
  45+ 9DA9 C1           	pop bc
  46+ 9DAA
  47+ 9DAA C9           	ret
  48+ 9DAB
  49+ 9DAB              ; ------------------------------------------------------------------------
  50+ 9DAB              ;	28/05/23
  51+ 9DAB              ;
  52+ 9DAB              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9DAB              ;	Fila superior "0", Columna izquierda "0".
  54+ 9DAB              ;
  55+ 9DAB              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9DAB              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9DAB              ;
  58+ 9DAB              ;		DE="$120d"
  59+ 9DAB              ;
  60+ 9DAB              ;		D, (Coordenada_X), Columnas, $12
  61+ 9DAB              ;		E, (Coordenada_y), Filas, $0d
  62+ 9DAB              ;
  63+ 9DAB              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9DAB
  65+ 9DAB              ;	Modifica: A,BC y DE.
  66+ 9DAB
  67+ 9DAB
  68+ 9DAB              Genera_coordenadas_disparo
  69+ 9DAB
  70+ 9DAB              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9DAB
  72+ 9DAB 7D           	ld a,l
  73+ 9DAC E6 1F        	and $1f
  74+ 9DAE 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9DAF CD F5 99     	call calcula_tercio
  76+ 9DB2 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9DB3 1E 00        	ld e,0
  78+ 9DB5 7D           	ld a,l
  79+ 9DB6 E6 E0        	and $e0
  80+ 9DB8 28 01        	jr z,1F
  81+ 9DBA 04           	inc b
  82+ 9DBB 1C           1 inc e
  83+ 9DBC D6 20        	sub 32
  84+ 9DBE 20 FB        	jr nz,1B
  85+ 9DC0 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DC2 C9           	ret
  87+ 9DC3
# file closed: Genera_coordenadas.asm
1519  9DC3              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DC3
   2+ 9DC3
   3+ 9DC3              ;   07/07/23
   4+ 9DC3              ;
   5+ 9DC3              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DC3              ;
   7+ 9DC3              ;   Codificación:
   8+ 9DC3              ;
   9+ 9DC3              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DC3              ;
  11+ 9DC3              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DC3              ;
  13+ 9DC3              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DC3              ;
  15+ 9DC3              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DC3              ;
  17+ 9DC3              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DC3              ;                               ..... %01000010 Vel_up 4
  19+ 9DC3              ;                                               Vel_down 2
  20+ 9DC3              ;                               ..... $42
  21+ 9DC3              ;
  22+ 9DC3              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DC3              ;
  24+ 9DC3              ;                               ..... %01000010 Vel_left 4
  25+ 9DC3              ;                                               Vel_right 2
  26+ 9DC3              ;                               ..... $42
  27+ 9DC3              ;
  28+ 9DC3              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DC3              ;
  30+ 9DC3              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DC3              ;
  32+ 9DC3              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DC3              ;
  34+ 9DC3              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DC3              ;                                     $53
  36+ 9DC3              ;
  37+ 9DC3              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DC3              ;
  39+ 9DC3              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DC3              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DC3              ;
  42+ 9DC3              ;                       Arriba ..... $81
  43+ 9DC3              ;                       Arriba - izquierda ..... $a1
  44+ 9DC3              ;                       Arriba - derecha ..... $91
  45+ 9DC3              ;
  46+ 9DC3              ;                       Abajo ..... $41
  47+ 9DC3              ;                       Abajo - izquierda ..... $61
  48+ 9DC3              ;                       Abajo - derecha ..... $51
  49+ 9DC3              ;
  50+ 9DC3              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DC3              ;
  52+ 9DC3              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DC3              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DC3              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DC3              ;
  56+ 9DC3              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DC3              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DC3              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DC3              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DC3              ;
  61+ 9DC3              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DC3              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DC3              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DC3              ;
  65+ 9DC3              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DC3              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DC3              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DC3              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DC3
  70+ 9DC3              ; ----- ----- ----- ----- -----
  71+ 9DC3
  72+ 9DC3 EF 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DC5 F7 9D            defw F_1
  74+ 9DC7 01 9E            defw F_2
  75+ 9DC9 0B 9E            defw Codo_abajo_derecha
  76+ 9DCB 3F 9E            defw Derecha_y_subiendo
  77+ 9DCD 49 9E            defw Derecha_y_subiendo_1
  78+ 9DCF 53 9E            defw F_3
  79+ 9DD1 5D 9E            defw F_4
  80+ 9DD3 67 9E            defw Derecha_y_bajando
  81+ 9DD5 71 9E            defw Derecha_y_bajando_1
  82+ 9DD7 7B 9E            defw Derecha_y_bajando_2
  83+ 9DD9 85 9E            defw Codo_derecha_abajo
  84+ 9DDB B5 9E            defw Codo_abajo_izq.
  85+ 9DDD E9 9E            defw Izquierda_y_subiendo
  86+ 9DDF F3 9E            defw Izquierda_y_subiendo_1
  87+ 9DE1 FD 9E            defw F_5
  88+ 9DE3 07 9F            defw F_6
  89+ 9DE5 11 9F            defw Izquierda_y_bajando
  90+ 9DE7 1B 9F            defw Izquierda_y_bajando_1
  91+ 9DE9 25 9F            defw Izquierda_y_bajando_2
  92+ 9DEB 2F 9F            defw Codo_izquierda_abajo
  93+ 9DED 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DEF
  95+ 9DEF 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DF3 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DF7
  98+ 9DF7 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DFB 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DFF 08 00
 100+ 9E01 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9E05 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9E09 0F FE
 102+ 9E0B
 103+ 9E0B 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9E0F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E13 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E17 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E1B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E1F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E23 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E27 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E2B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E2F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E33 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E37 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E3B 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E3F
 117+ 9E3F 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E43 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E47 06 00
 119+ 9E49
 120+ 9E49 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E4D 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E51 02 00
 122+ 9E53
 123+ 9E53 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E57 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E5B 04 00
 125+ 9E5D 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E61 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E65 08 00
 127+ 9E67
 128+ 9E67 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E6B 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E6F 02 00
 130+ 9E71
 131+ 9E71 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E75 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E79 06 00
 133+ 9E7B
 134+ 9E7B 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E7F 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E83 06 00
 136+ 9E85
 137+ 9E85              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E85
 139+ 9E85 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E89 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E8D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E91 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E95 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E99 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E9D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9EA1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9EA5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9EA9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9EAD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9EB1 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EB5
 152+ 9EB5 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EB9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EBD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EC1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EC5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EC9 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9ECD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9ED1 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9ED5 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9ED9 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EDD 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EE1 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EE5 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EE9
 166+ 9EE9 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EED 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EF1 06 00
 168+ 9EF3
 169+ 9EF3 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EF7 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EFB 02 00
 171+ 9EFD
 172+ 9EFD 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9F01 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9F05 04 00
 174+ 9F07 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9F0B 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9F0F 08 00
 176+ 9F11
 177+ 9F11 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F15 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F19 02 00
 179+ 9F1B
 180+ 9F1B 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F1F 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F23 06 00
 182+ 9F25
 183+ 9F25 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F29 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F2D 06 00
 185+ 9F2F
 186+ 9F2F 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F33 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F37 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F3B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F3F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F43 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F47 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F4B 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F4F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F53 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F57 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F5B 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F5F
 199+ 9F5F              ; ----- ----- ----- ----- -----
 200+ 9F5F              ;
 201+ 9F5F              ;   27/06/23
 202+ 9F5F
 203+ 9F5F              Movimiento
 204+ 9F5F
 205+ 9F5F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F5F
 207+ 9F5F              ;    ld hl,(Posicion_actual)
 208+ 9F5F
 209+ 9F5F 3A F6 89         ld a,(Ctrl_2)
 210+ 9F62 CB 57            bit 2,a
 211+ 9F64 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F66
 213+ 9F66 2A E8 89         ld hl,(Puntero_mov)
 214+ 9F69 7E               ld a,(hl)
 215+ 9F6A
 216+ 9F6A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F6A
 218+ 9F6A              Inicia_desplazamiento.
 219+ 9F6A
 220+ 9F6A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F6A
 222+ 9F6A CD 5E A0         call Ajusta_velocidad_desplazamiento
 223+ 9F6D
 224+ 9F6D              ; Iniciamos (Repetimos_mov).
 225+ 9F6D
 226+ 9F6D 7E               ld a,(hl)
 227+ 9F6E E6 0F            and $0f
 228+ 9F70 32 EE 89         ld (Repetimos_desplazamiento),a
 229+ 9F73 32 EF 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F76
 231+ 9F76              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F76
 233+ 9F76 23               inc hl
 234+ 9F77 7E               ld a,(hl)
 235+ 9F78 32 F1 89         ld (Cola_de_desplazamiento),a
 236+ 9F7B 2B               dec hl
 237+ 9F7C
 238+ 9F7C 21 F6 89         ld hl,Ctrl_2
 239+ 9F7F CB D6            set 2,(hl)
 240+ 9F81
 241+ 9F81              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F81              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F81
 244+ 9F81              Desplazamiento_iniciado
 245+ 9F81
 246+ 9F81 CD 32 A0         call Aplica_desplazamiento
 247+ 9F84
 248+ 9F84 3A F6 89         ld a,(Ctrl_2)
 249+ 9F87 CB 67            bit 4,a
 250+ 9F89 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F8A
 252+ 9F8A 21 EE 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F8D 35               dec (hl)
 254+ 9F8E C0               ret nz
 255+ 9F8F
 256+ 9F8F              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F8F              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F8F              ; Analiza (Cola_de_desplazamiento).
 259+ 9F8F
 260+ 9F8F 3A F1 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F92 A7               and a
 262+ 9F93 CC 87 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F96 28 30            jr z,Reinicia_el_movimiento
 264+ 9F98
 265+ 9F98 FE FF            cp $ff
 266+ 9F9A 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F9C
 268+ 9F9C FE FE            cp $fe
 269+ 9F9E CC 0B A0         call z,Fijamos_bucle
 270+ 9FA1 28 25            jr z,Reinicia_el_movimiento
 271+ 9FA3
 272+ 9FA3 FE FD            cp $fd
 273+ 9FA5 20 11            jr nz,1F
 274+ 9FA7
 275+ 9FA7              ; ---
 276+ 9FA7              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9FA7
 278+ 9FA7 3A F6 89         ld a,(Ctrl_2)
 279+ 9FAA CB 5F            bit 3,a
 280+ 9FAC 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9FAE
 282+ 9FAE              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9FAE
 284+ 9FAE 21 F6 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9FB1 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9FB3
 287+ 9FB3 CD 1C A0         call Inicia_Repetimos_movimiento
 288+ 9FB6 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9FB8              ; ---
 290+ 9FB8
 291+ 9FB8 FE 01        1 cp 1
 292+ 9FBA CA F5 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FBD
 294+ 9FBD 3D               dec a
 295+ 9FBE 32 F1 89         ld (Cola_de_desplazamiento),a
 296+ 9FC1
 297+ 9FC1 3A EF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FC4 32 EE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FC7              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FC7 C9               ret
 301+ 9FC8
 302+ 9FC8              Reinicia_el_movimiento
 303+ 9FC8
 304+ 9FC8 3A F6 89         ld a,(Ctrl_2)
 305+ 9FCB CB 5F            bit 3,a
 306+ 9FCD 28 1B            jr z,2F
 307+ 9FCF
 308+ 9FCF              ; (Cola_de_desplazamiento)="254".
 309+ 9FCF
 310+ 9FCF 21 F0 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FD2 35               dec (hl)
 312+ 9FD3 20 15            jr nz,2F
 313+ 9FD5
 314+ 9FD5              ; Fin de las repeticiones del último movimiento.
 315+ 9FD5
 316+ 9FD5 21 F6 89         ld hl,Ctrl_2
 317+ 9FD8 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FDA
 319+ 9FDA 2A E8 89         ld hl,(Puntero_mov)
 320+ 9FDD 23               inc hl
 321+ 9FDE 23               inc hl
 322+ 9FDF 23               inc hl
 323+ 9FE0 22 E8 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FE3              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FE3 7E               ld a,(hl)
 326+ 9FE4 32 F1 89         ld (Cola_de_desplazamiento),a
 327+ 9FE7
 328+ 9FE7 C3 8F 9F         jp Cola
 329+ 9FEA
 330+ 9FEA
 331+ 9FEA CD 27 A0     2 call Inicia_Puntero_mov
 332+ 9FED
 333+ 9FED 21 F6 89         ld hl,Ctrl_2
 334+ 9FF0 CB 96            res 2,(hl)
 335+ 9FF2
 336+ 9FF2 C3 5F 9F         jp Movimiento
 337+ 9FF5
 338+ 9FF5              Siguiente_desplazamiento
 339+ 9FF5
 340+ 9FF5              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FF5              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FF5
 343+ 9FF5 21 F6 89         ld hl,Ctrl_2
 344+ 9FF8 CB 96            res 2,(hl)
 345+ 9FFA
 346+ 9FFA 2A E8 89         ld hl,(Puntero_mov)
 347+ 9FFD 23               inc hl
 348+ 9FFE 23               inc hl
 349+ 9FFF 22 E8 89         ld (Puntero_mov),hl
 350+ A002
 351+ A002 7E               ld a,(hl)
 352+ A003 A7               and a
 353+ A004 CC 87 A0         call z,Incrementa_Puntero_indice_mov
 354+ A007 CA C8 9F         jp z,Reinicia_el_movimiento
 355+ A00A
 356+ A00A C9               ret
 357+ A00B              ; Subrutinas -----------------------------------------
 358+ A00B              ; ---------- --------- --------- ---------- ----------
 359+ A00B              ;
 360+ A00B              ;   24/07/23
 361+ A00B              ;
 362+ A00B              ;   Fijamos_bucle
 363+ A00B              ;
 364+ A00B              ;
 365+ A00B
 366+ A00B              Fijamos_bucle
 367+ A00B
 368+ A00B 3A EC 89         ld a,(Incrementa_puntero)
 369+ A00E 3C               inc a
 370+ A00F 32 ED 89         ld (Incrementa_puntero_backup),a
 371+ A012
 372+ A012 CD 87 A0         call Incrementa_Puntero_indice_mov
 373+ A015 2A E6 89         ld hl,(Puntero_indice_mov)
 374+ A018 22 EA 89         ld (Puntero_indice_mov_bucle),hl
 375+ A01B C9               ret
 376+ A01C
 377+ A01C              ; ---------- --------- --------- ---------- ----------
 378+ A01C              ;
 379+ A01C              ;   07/7/23
 380+ A01C              ;
 381+ A01C              ;   Inicia_Repetimos_movimiento
 382+ A01C              ;
 383+ A01C              ;
 384+ A01C
 385+ A01C              Inicia_Repetimos_movimiento
 386+ A01C
 387+ A01C              ; Iniciamos (Repetimos_movimiento).
 388+ A01C
 389+ A01C DD 2A E8 89      ld ix,(Puntero_mov)
 390+ A020 DD 7E 02         ld a,(ix+2)
 391+ A023 32 F0 89         ld (Repetimos_movimiento),a
 392+ A026
 393+ A026 C9               ret
 394+ A027
 395+ A027              ; ---------- --------- --------- ---------- ----------
 396+ A027              ;
 397+ A027              ;   26/6/23
 398+ A027              ;
 399+ A027              ;   Inicia_Puntero_mov
 400+ A027              ;
 401+ A027              ;
 402+ A027
 403+ A027 2A E6 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A02A 5E               ld e,(hl)
 405+ A02B 23               inc hl
 406+ A02C 56               ld d,(hl)
 407+ A02D EB               ex de,hl
 408+ A02E 22 E8 89         ld (Puntero_mov),hl
 409+ A031 C9               ret
 410+ A032
 411+ A032              ; ---------- --------- --------- ---------- ----------
 412+ A032              ;
 413+ A032              ;   27/06/23
 414+ A032              ;
 415+ A032              ;   Aplica_movimiento.
 416+ A032
 417+ A032              Aplica_desplazamiento
 418+ A032
 419+ A032              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A032
 421+ A032 2A E8 89         ld hl, (Puntero_mov)
 422+ A035
 423+ A035 7E               ld a,(hl)
 424+ A036 E6 F0            and $f0
 425+ A038 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A039
 427+ A039 CB 7E            bit 7,(hl)
 428+ A03B 28 03            jr z,1F
 429+ A03D CD 6C 9A         call Mov_up
 430+ A040 2A E8 89     1 ld hl, (Puntero_mov)
 431+ A043 CB 76            bit 6,(hl)
 432+ A045 28 03            jr z,2F
 433+ A047 CD 3B 9A         call Mov_down
 434+ A04A 2A E8 89     2 ld hl, (Puntero_mov)
 435+ A04D CB 6E            bit 5,(hl)
 436+ A04F 28 03            jr z,3F
 437+ A051 CD CD 9B         call Mov_left
 438+ A054 2A E8 89     3 ld hl, (Puntero_mov)
 439+ A057 CB 66            bit 4,(hl)
 440+ A059 C8               ret z
 441+ A05A CD AF 9A         call Mov_right
 442+ A05D C9               ret
 443+ A05E
 444+ A05E              ; ---------- --------- --------- ---------- ----------
 445+ A05E              ;
 446+ A05E              ;   26/06/23
 447+ A05E              ;
 448+ A05E              ;   Ajusta_velocidad_desplazamiento.
 449+ A05E
 450+ A05E              Ajusta_velocidad_desplazamiento
 451+ A05E
 452+ A05E              ; 1er byte de la cadena de movimiento.
 453+ A05E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A05E
 455+ A05E CD 7C A0         call Extrae_nibble_alto
 456+ A061
 457+ A061 32 CC 89         ld (Vel_up),a
 458+ A064 79               ld a,c
 459+ A065 E6 0F            and $0f
 460+ A067 32 CD 89         ld (Vel_down),a
 461+ A06A
 462+ A06A              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A06A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A06A
 465+ A06A 23               inc hl
 466+ A06B CD 7C A0         call Extrae_nibble_alto
 467+ A06E
 468+ A06E 32 CA 89         ld (Vel_left),a
 469+ A071 79               ld a,c
 470+ A072 E6 0F            and $0f
 471+ A074 32 CB 89         ld (Vel_right),a
 472+ A077
 473+ A077              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A077
 475+ A077 23               inc hl
 476+ A078 22 E8 89         ld (Puntero_mov),hl
 477+ A07B C9               ret
 478+ A07C
 479+ A07C 06 04        Extrae_nibble_alto ld b,4
 480+ A07E 7E               ld a,(hl)
 481+ A07F 4F               ld c,a
 482+ A080 E6 F0            and $f0
 483+ A082 CB 3F        1 srl a
 484+ A084 10 FC            djnz 1B
 485+ A086 C9               ret
 486+ A087
 487+ A087              ; ---------- --------- --------- ---------- ----------
 488+ A087              ;
 489+ A087              ;   5/7/23
 490+ A087              ;
 491+ A087              ;   Incrementa_Puntero_indice_mov
 492+ A087
 493+ A087              Incrementa_Puntero_indice_mov
 494+ A087
 495+ A087 21 EC 89         ld hl,Incrementa_puntero
 496+ A08A 34               inc (hl)
 497+ A08B
 498+ A08B 2A E6 89         ld hl,(Puntero_indice_mov)
 499+ A08E 01 02 00         ld bc,2
 500+ A091 A7               and a
 501+ A092 09               add hl,bc
 502+ A093 22 E6 89         ld (Puntero_indice_mov),hl
 503+ A096
 504+ A096 7E               ld a,(hl)
 505+ A097 A7               and a
 506+ A098
 507+ A098              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A098
 509+ A098              ;    jr z,$
 510+ A098
 511+ A098              ;! Reinicia el Patrón de movimiento.
 512+ A098
 513+ A098 CC 9D A0         call z,Inicializa_Puntero_indice_mov
 514+ A09B
 515+ A09B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A09C
 517+ A09C C9               ret
 518+ A09D
 519+ A09D
 520+ A09D              ; ---------- --------- --------- ---------- ----------
 521+ A09D              ;
 522+ A09D              ;   24/07/23
 523+ A09D              ;
 524+ A09D              ;   Inicializa_Puntero_indice_mov
 525+ A09D
 526+ A09D              Inicializa_Puntero_indice_mov
 527+ A09D
 528+ A09D              ; Existe etiqueta de bucle principal???
 529+ A09D
 530+ A09D 2A EA 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A0A0 24               inc h
 532+ A0A1 25               dec h
 533+ A0A2 28 05            jr z,2F
 534+ A0A4
 535+ A0A4 22 E6 89         ld (Puntero_indice_mov),hl
 536+ A0A7 18 14            jr 3F
 537+ A0A9
 538+ A0A9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A0A9
 540+ A0A9 3A EC 89     2 ld a,(Incrementa_puntero)
 541+ A0AC 47               ld b,a
 542+ A0AD
 543+ A0AD 2A E6 89         ld hl,(Puntero_indice_mov)
 544+ A0B0 2B           1 dec hl
 545+ A0B1 2B               dec hl
 546+ A0B2 10 FC            djnz 1B
 547+ A0B4 22 E6 89         ld (Puntero_indice_mov),hl
 548+ A0B7
 549+ A0B7 AF               xor a
 550+ A0B8 32 EC 89         ld (Incrementa_puntero),a
 551+ A0BB 18 06            jr 4F
 552+ A0BD
 553+ A0BD 3A ED 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0C0 32 EC 89         ld (Incrementa_puntero),a
 555+ A0C3 C9           4 ret
 556+ A0C4
 557+ A0C4
 558+ A0C4
# file closed: Patrones_de_mov.asm
1520  A0C4              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A0C4              ; Relojes y temporizaciones.
   2+ A0C4
   3+ A0C4              ; ------------------------------------------------------
   4+ A0C4              ;
   5+ A0C4              ;	16/7/23
   6+ A0C4              ;
   7+ A0C4              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A0C4              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A0C4              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A0C4              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A0C4              ;
  12+ A0C4              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A0C4              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A0C4
  15+ A0C4              ; Disparo_entidad db 1
  16+ A0C4              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A0C4              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A0C4
  19+ A0C4              Habilita_disparos
  20+ A0C4
  21+ A0C4 7E           	ld a,(hl)
  22+ A0C5 A7           	and a
  23+ A0C6 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A0C7
  25+ A0C7 EB           	ex de,hl
  26+ A0C8
  27+ A0C8 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A0C9 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A0CA
  30+ A0CA              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A0CA
  32+ A0CA 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0CB 7E           	ld a,(hl)
  34+ A0CC 23           	inc hl
  35+ A0CD 77           	ld (hl),a
  36+ A0CE
  37+ A0CE EB           	ex de,hl						; Habilitamos disparo.
  38+ A0CF 3E 01        	ld a,1
  39+ A0D1 77           	ld (hl),a
  40+ A0D2 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1521  A0D3              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0D3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0D3              ;
   3+ A0D3              ;	9/8/23
   4+ A0D3              ;
   5+ A0D3              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0D3
   7+ A0D3              ;	ADC HL,SP	LD (addr),SP
   8+ A0D3              ;	ADD HL,SP	LD SP,(addr)
   9+ A0D3              ;	ADD IX,SP	LD SP,nn
  10+ A0D3              ; 	ADD IY,SP	LD SP,HL
  11+ A0D3              ;				LD SP,IX
  12+ A0D3              ;	DEC SP		LD SP,IY
  13+ A0D3
  14+ A0D3              ;	EX (SP),HL
  15+ A0D3              ;	EX (SP),IX
  16+ A0D3              ;	EX (SP),IY
  17+ A0D3
  18+ A0D3              ;	INC SP
  19+ A0D3
  20+ A0D3                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 09 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A F8 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 11 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 0F 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 11 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 0F 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 09 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 2B 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 13 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 13 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 17 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 13 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 17 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 17 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 1B 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 17 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 1B 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 1B 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 1F 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 1B 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 1F 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 1F 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1522  74C8
1523  74C8              	SAVESNA "Pruebas.sna", START
1524  74C8
1525  74C8
1526  74C8
1527  74C8
# file closed: Banco_de_pruebas.asm
