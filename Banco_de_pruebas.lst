# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD BC 8E     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 11 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 15 8A        	defw End_Snapshot_1
 267+ 8500 19 8A        	defw End_Snapshot_2
 268+ 8502 1D 8A        	defw End_Snapshot_3
 269+ 8504 13 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 17 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1B 8A        	defw End_Snapshot_disparos_2
 272+ 850A 1F 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  20  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 8B 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 8B 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  21  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BB 88        	defw Nivel_2
   7+ 88AD C8 88        	defw Nivel_3
   8+ 88AF D8 88        	defw Nivel_4
   9+ 88B1 EA 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 03           Nivel_1 db 3	                                ; Nº de entidades.
  19+ 88B8 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BB 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C0 01 02
  22+ 88C2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C6 01 02
  23+ 88C8 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88C9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CD 01
  25+ 88CE 03 01 01 01  	db 3,1,1,1,1
  25+ 88D2 01
  26+ 88D3 03 01 01 01  	db 3,1,1,1,1
  26+ 88D7 01
  27+ 88D8 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88D9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DD 01
  29+ 88DE 04 01 01 01  	db 4,1,1,1,1
  29+ 88E2 01
  30+ 88E3 04 01 01 01  	db 4,1,1,1,1
  30+ 88E7 01
  31+ 88E8 02 03        	db 2,3
  32+ 88EA 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88EF 01
  34+ 88F0 05 01 01 01  	db 5,1,1,1,1
  34+ 88F4 01
  35+ 88F5 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88F9 01
  36+ 88FA 05 01 01 01  	db 5,1,1,1,1
  36+ 88FE 01
  37+ 88FF
  38+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  39+ 88FF              ;
  40+ 88FF              ;   21/5/23
  41+ 88FF              ;
  42+ 88FF              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88FF              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88FF              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88FF              ;	_en la caja DRAW correspondiente.
  46+ 88FF              ;
  47+ 88FF              ;	MODIFICA: HL,DE y A.
  48+ 88FF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88FF
  50+ 88FF              Inicializa_Punteros_de_nivel
  51+ 88FF
  52+ 88FF 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8902 22 4B 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8905 CD 92 8D     	call Extrae_address
  55+ 8908 7E           	ld a,(hl)
  56+ 8909 32 01 8A     	ld (Numero_de_entidades),a
  57+ 890C 23           	inc hl
  58+ 890D 22 4D 8A     	ld (Datos_de_nivel),hl
  59+ 8910 C9           	ret
  60+ 8911
  61+ 8911              ;---------------------------------------------------------------------------------------------------------------
  62+ 8911              ;
  63+ 8911              ;   13/5/23
  64+ 8911              ;
  65+ 8911              ;	Destruye A,BC,HL,DE
  66+ 8911
  67+ 8911              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8911              ;	_del juego.
  69+ 8911
  70+ 8911              Prepara_cajas
  71+ 8911
  72+ 8911              ; Preparamos los punteros de las cajas.
  73+ 8911
  74+ 8911 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8914 CD 92 8D     	call Extrae_address
  76+ 8917 CD 54 89     	call Avanza_caja
  77+ 891A
  78+ 891A CD 98 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891D
  80+ 891D 2A 4D 8A     	ld hl,(Datos_de_nivel)
  81+ 8920
  82+ 8920              ; HL está en los datos del nivel correspondiente.
  83+ 8920              ; B actuará como contador de cajas.
  84+ 8920
  85+ 8920 C5           1 push bc
  86+ 8921
  87+ 8921 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8922 CD 45 89     	call PreparaBC
  89+ 8925
  90+ 8925 21 85 88     	ld hl,Indice_de_entidades
  91+ 8928 CD 4D 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892B 22 07 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892E
  94+ 892E CD 5E 89     	call Datos_de_entidad_a_caja
  95+ 8931
  96+ 8931 2A FF 89     	ld hl,(Indice_restore_caja)
  97+ 8934 CD 92 8D     	call Extrae_address
  98+ 8937 CD 54 89     	call Avanza_caja
  99+ 893A
 100+ 893A 2A 4D 8A     	ld hl,(Datos_de_nivel)
 101+ 893D 23           	inc hl
 102+ 893E 22 4D 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8941
 104+ 8941 C1           	pop bc
 105+ 8942 10 DC        	djnz 1B
 106+ 8944 C9           	ret
 107+ 8945
 108+ 8945 CB 27        PreparaBC sla a
 109+ 8947 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8949 4F           	ld c,a
 111+ 894A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894C C9           	ret
 113+ 894D
 114+ 894D A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894E ED 4A        	adc hl,bc
 116+ 8950 CD 92 8D     	call Extrae_address
 117+ 8953 C9           	ret
 118+ 8954
 119+ 8954 22 FB 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8957 13           	inc de
 121+ 8958 13           	inc de
 122+ 8959 EB           	ex de,hl
 123+ 895A 22 FF 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895D C9           	ret
 125+ 895E
 126+ 895E              Datos_de_entidad_a_caja
 127+ 895E
 128+ 895E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895E
 130+ 895E
 131+ 895E ED 5B FB 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8962
 133+ 8962 01 02 00     	ld bc,2
 134+ 8965 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8967
 136+ 8967 01 07 00     	ld bc,7
 137+ 896A CD 92 89     	call Situa_DE
 138+ 896D
 139+ 896D 01 05 00     	ld bc,5
 140+ 8970 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8972
 142+ 8972 01 04 00     	ld bc,4
 143+ 8975 CD 92 89     	call Situa_DE
 144+ 8978
 145+ 8978 01 07 00     	ld bc,7
 146+ 897B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897D
 148+ 897D 01 18 00     	ld bc,24
 149+ 8980 CD 92 89     	call Situa_DE
 150+ 8983
 151+ 8983 01 02 00     	ld bc,2
 152+ 8986 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8988
 154+ 8988              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8988              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8988
 157+ 8988 01 0F 00     	ld bc,15									; *****
 158+ 898B CD 92 89     	call Situa_DE
 159+ 898E
 160+ 898E 3E 03        	ld a,3
 161+ 8990 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8991
 163+ 8991 C9           	ret
 164+ 8992
 165+ 8992 EB           Situa_DE ex de,hl
 166+ 8993 A7           	and a
 167+ 8994 ED 4A        	adc hl,bc
 168+ 8996 EB           	ex de,hl
 169+ 8997 C9           	ret
 170+ 8998
 171+ 8998              ;---------------------------------------------------------------------------------------------------------------
 172+ 8998              ;
 173+ 8998              ;	21/5/23
 174+ 8998              ;
 175+ 8998              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8998              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8998              ;
 178+ 8998              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8998              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8998              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8998              ;
 182+ 8998              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8998              ;	MODIFICA: A y B.
 184+ 8998              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8998
 186+ 8998              Admin_num_entidades
 187+ 8998
 188+ 8998              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8998
 190+ 8998 3A 01 8A     	ld a,(Numero_de_entidades)
 191+ 899B A7           	and a
 192+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899C              ;	jr z,$
 194+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899C
 196+ 899C 20 03        	jr nz,3F
 197+ 899E
 198+ 899E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899E
 200+ 899E CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A1
 202+ 89A1 3A 01 8A     3 ld a,(Numero_de_entidades)
 203+ 89A4 FE 0A        	cp 10
 204+ 89A6 38 08        	jr c,1F
 205+ 89A8
 206+ 89A8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 89A8              ; Actualizamos variables.
 208+ 89A8
 209+ 89A8 3E 0A        	ld a,10
 210+ 89AA 32 02 8A     	ld (Numero_parcial_de_entidades),a
 211+ 89AD 47           	ld b,a
 212+ 89AE 18 04        	jr 2F
 213+ 89B0
 214+ 89B0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 89B0              ; (Numero_de_entidades)="0".
 216+ 89B0
 217+ 89B0 32 02 8A     1 ld (Numero_parcial_de_entidades),a
 218+ 89B3 47           	ld b,a
 219+ 89B4 C9           2 ret
# file closed: Niveles.asm
  22  89B5
  23  89B5              ; ******************************************************************************************************************************************************************************************
  24  89B5              ; Constantes.
  25  89B5              ; ******************************************************************************************************************************************************************************************
  26  89B5              ;
  27  89B5              ; 25/05/23
  28  89B5              ;
  29  89B5              ; Constantes generales.
  30  89B5              ;
  31  89B5
  32  89B5              Sprite_vacio equ $f000
  33  89B5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  34  89B5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  35  89B5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  36  89B5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  37  89B5
  38  89B5              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  39  89B5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  40  89B5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  41  89B5              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  42  89B5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  43  89B5              ;                               				        ; De momento situamos este almacén en $7060.
  44  89B5              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  45  89B5              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  46  89B5              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  47  89B5              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  48  89B5              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  49  89B5              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  50  89B5
  51  89B5              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  52  89B5
  53  89B5              ; ******************************************************************************************************************************************************************************************
  54  89B5              ; Variables.
  55  89B5              ; ******************************************************************************************************************************************************************************************
  56  89B5              ;
  57  89B5              ; 28/07/23
  58  89B5              ;
  59  89B5              ; Variables de DRAW. (Motor principal).
  60  89B5              ;
  61  89B5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  62  89B5
  63  89B5 00           Filas db 0												; Filas. [DRAW]
  64  89B6 00           Columns db 0  											; Nº de columnas. [DRAW]
  65  89B7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  66  89B9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  67  89BB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  68  89BC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  69  89BD
  70  89BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  71  89BD
  72  89BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  73  89BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  74  89BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  75  89BE 00           Attr db 0												; Atributos de la entidad:
  76  89BF
  77  89BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  78  89BF              ;
  79  89BF              ;	COLORES: 0 ..... NEGRO
  80  89BF              ;    		 1 ..... AZUL
  81  89BF              ; 			 2 ..... ROJO
  82  89BF              ;			 3 ..... MAGENTA
  83  89BF              ; 			 4 ..... VERDE
  84  89BF              ; 			 5 ..... CIAN
  85  89BF              ;			 6 ..... AMARILLO
  86  89BF              ; 			 7 ..... BLANCO
  87  89BF
  88  89BF 00 00        Indice_Sprite_der defw 0
  89  89C1 00 00        Indice_Sprite_izq defw 0
  90  89C3 00 00        Puntero_DESPLZ_der defw 0
  91  89C5 00 00        Puntero_DESPLZ_izq defw 0
  92  89C7
  93  89C7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  94  89C9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  95  89CA
  96  89CA              ; Variables de objeto. (Características).
  97  89CA
  98  89CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  99  89CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 101  89CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 102  89CE
 103  89CE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 104  89CF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 105  89CF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 106  89CF
 107  89CF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89D1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  89D3 00 00        	defw 0
 110  89D5 00 00 00 00  	db 0,0,0,0
 111  89D9
 112  89D9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 113  89DB 00 00        	defw 0
 114  89DD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 115  89DF 00 00 00 00  	db 0,0,0,0
 116  89E3
 117  89E3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 118  89E3
 119  89E3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 120  89E4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 121  89E4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 122  89E4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 123  89E4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 124  89E4              ;
 125  89E4              ; 														DESCRIPCIÖN:
 126  89E4              ;
 127  89E4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 128  89E4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 129  89E4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 130  89E4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 131  89E4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 132  89E4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 133  89E4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 134  89E4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 135  89E4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 136  89E4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 137  89E4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 138  89E4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 139  89E4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 140  89E4              ;
 141  89E4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 142  89E4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 143  89E4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 144  89E4
 145  89E4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 146  89E5
 147  89E5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 148  89E5
 149  89E5 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 150  89E6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 151  89E8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 152  89EA 00 00        Puntero_indice_mov_bucle defw 0							;
 153  89EC              ;
 154  89EC              ;
 155  89EC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 156  89ED              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 157  89ED              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 158  89ED 00           Incrementa_puntero_backup db 0
 159  89EE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 160  89EF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 161  89EF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 162  89F0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 163  89F1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 164  89F2              ;
 165  89F2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 166  89F2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 167  89F2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 168  89F2              ;
 169  89F2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 170  89F2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 171  89F2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 172  89F2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 173  89F2              ;
 174  89F2              ;														;	"$ff" ..... Bucle infinito de repetición.
 175  89F2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 176  89F2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 177  89F2
 178  89F2
 179  89F2              ; Variables de funcionamiento. [DRAW].
 180  89F2
 181  89F2 00           Columnas db 0
 182  89F3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 183  89F5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 184  89F5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6
 186  89F6              ; variables de control general.
 187  89F6
 188  89F6 00           Ctrl_2 db 0
 189  89F7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 190  89F7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 191  89F7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 192  89F7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 193  89F7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 194  89F7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 195  89F7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 196  89F7              ;
 197  89F7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 198  89F7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 199  89F7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 200  89F7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 201  89F7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 202  89F7
 203  89F7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 204  89F8
 205  89F8              ;! 67 Bytes por entidad.
 206  89F8
 207  89F8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 208  89F8              ;					         		---------;      ;---------
 209  89F8
 210  89F8
 211  89F8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 212  89F8
 213  89F8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 214  89F9
 215  89F9              ;														DESCRIPCIÓN:
 216  89F9              ;
 217  89F9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 218  89F9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 219  89F9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 220  89F9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 221  89F9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 222  89F9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 223  89F9
 224  89F9              ;														BIT 3, Recarga de nueva oleada.
 225  89F9              ;														BIT 4, Recarga de nueva oleada.
 226  89F9              ;														BIT 5, ****
 227  89F9
 228  89F9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 229  89FB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 230  89FB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 231  89FB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 232  89FB
 233  89FB
 234  89FB
 235  89FB              ; Gestión de ENTIDADES y CAJAS.
 236  89FB
 237  89FB 00 00        Puntero_store_caja defw 0
 238  89FD 00 00        Puntero_restore_caja defw 0
 239  89FF 00 00        Indice_restore_caja defw 0
 240  8A01 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 241  8A02 00           Numero_parcial_de_entidades db 0
 242  8A03 00           Entidades_en_curso db 0									; ..... ..... .....
 243  8A04 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 244  8A05              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 245  8A05              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 246  8A05              ;														; _ (Numero_de_malotes)="0".
 247  8A05 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 248  8A07 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 249  8A09              ;														; _ puntero (Indice_entidades).
 250  8A09
 251  8A09
 252  8A09              ;---------------------------------------------------------------------------------------------------------------
 253  8A09              ;
 254  8A09              ;	9/8/23
 255  8A09              ;
 256  8A09              ;	Álbumes.
 257  8A09
 258  8A09 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 259  8A0B              ;														; _variable para almacenar lo posición del puntero_
 260  8A0B              ; 														; _de pila, SP.
 261  8A0B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 262  8A0D              ;														; La utiliza la rutina [Extrae_foto_registros].
 263  8A0D 00 00        Stack_snapshot defw 0
 264  8A0F 00 00        Stack_snapshot_disparos defw 0
 265  8A11
 266  8A11 00 00        End_Snapshot defw 0
 267  8A13              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 268  8A13 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 269  8A15              ;														; _el snapshot de los registros del siguiente disparo.
 270  8A15              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 271  8A15 00 00        End_Snapshot_1 defw 0
 272  8A17 00 00        End_Snapshot_disparos_1 defw 0
 273  8A19 00 00        End_Snapshot_2 defw 0
 274  8A1B 00 00        End_Snapshot_disparos_2 defw 0
 275  8A1D 00 00        End_Snapshot_3 defw 0
 276  8A1F 00 00        End_Snapshot_disparos_3 defw 0
 277  8A21
 278  8A21 00 00        Puntero_indice_album_de_fotos defw 0
 279  8A23 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 280  8A25
 281  8A25 00 00        Puntero_indice_End_Snapshot defw 0
 282  8A27 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 283  8A29 00 00        Puntero_de_End_Snapshot defw 0
 284  8A2B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 285  8A2D
 286  8A2D              ;---------------------------------------------------------------------------------------------------------------
 287  8A2D
 288  8A2D              ; Gestión de Disparos.
 289  8A2D
 290  8A2D 00           Numero_de_disparotes db 0
 291  8A2E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 292  8A30 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 293  8A32 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 294  8A33              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 295  8A33              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 296  8A33 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 297  8A35              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 298  8A35              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 299  8A35              ;														; _produzca colisión.
 300  8A35 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 301  8A37              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 302  8A37 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 303  8A3A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 304  8A3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8A3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 306  8A3D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 307  8A3F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 308  8A40
 309  8A40              ;---------------------------------------------------------------------------------------------------------------
 310  8A40
 311  8A40              ; Relojes y temporizaciones.
 312  8A40
 313  8A40 00           Contador_de_frames db 0
 314  8A41 04           Clock_explosion db 4
 315  8A42 1E           Clock_Entidades_en_curso db 30
 316  8A43 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 317  8A44              ;														; Repite la oleada de entidades.
 318  8A44 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 319  8A45 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 320  8A46 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 321  8A47
 322  8A47 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 323  8A48 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 324  8A49 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 325  8A4A
 326  8A4A              ;---------------------------------------------------------------------------------------------------------------
 327  8A4A
 328  8A4A              ; Gestión de NIVELES.
 329  8A4A
 330  8A4A 00           Nivel db 0												; Nivel actual del juego.
 331  8A4B 00 00        Puntero_indice_NIVELES defw 0
 332  8A4D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 333  8A4F              ; 														; _ que definen el NIVEL.
 334  8A4F              ; Y todo comienza aquí .....
 335  8A4F              ;
 336  8A4F              ; Rutina principal *************************************************************************************************************************************************************************
 337  8A4F              ;
 338  8A4F              ;	14/11/22
 339  8A4F
 340  8A4F              START
 341  8A4F
 342  8A4F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 343  8A52 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 344  8A54 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 345  8A56 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 346  8A58 F3           	DI
 347  8A59
 348  8A59 3E 07        	ld a,%00000111
 349  8A5B CD C7 99     	call Cls
 350  8A5E
 351  8A5E CD 6B 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 352  8A61
 353  8A61              ; INICIALIZACIÓN.
 354  8A61
 355  8A61 CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 356  8A64
 357  8A64 CD 11 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 358  8A67
 359  8A67 CD DE 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 360  8A6A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 361  8A6A CD F4 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 362  8A6D              ;													     ; _ malotes antes de guardar ninguna foto.
 363  8A6D              ; ----------
 364  8A6D
 365  8A6D CD 1B 8E     	call Restore_entidad
 366  8A70
 367  8A70 21 02 8A     	ld hl,Numero_parcial_de_entidades
 368  8A73 46           	ld b,(hl)
 369  8A74 04           	inc b
 370  8A75 05           	dec b
 371  8A76 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 372  8A78
 373  8A78              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 374  8A78              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 375  8A78              ;	Pintamos el resto de entidades:
 376  8A78
 377  8A78              ;	INICIA ENTIDADES !!!!!
 378  8A78
 379  8A78 C5           1 push bc  												; Guardo el contador de entidades.
 380  8A79
 381  8A79 CD 85 8C     	call Inicia_entidad
 382  8A7C
 383  8A7C C1           	pop bc
 384  8A7D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 385  8A7F
 386  8A7F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 387  8A7F              ; (Esto se dá cuando se inicia una nueva oleada).
 388  8A7F
 389  8A7F 3A F8 89     	ld a,(Ctrl_1)
 390  8A82 CB 5F        	bit 3,a
 391  8A84 20 18        	jr nz,5F											; Loop
 392  8A86
 393  8A86              ; 	INICIA AMADEUS !!!!!
 394  8A86
 395  8A86 CD 42 8E     3 call Restore_Amadeus
 396  8A89 CD 98 8D     	call Inicia_Puntero_objeto
 397  8A8C CD 01 94     	call Draw
 398  8A8F CD A0 7F     	call Guarda_foto_registros
 399  8A92 11 A4 85     	ld de,Amadeus_db
 400  8A95 CD 54 8E     	call Store_Amadeus
 401  8A98
 402  8A98              ; 	INICIA DISPAROS !!!!!
 403  8A98
 404  8A98 CD 54 8D     	call Inicia_Puntero_Disparo_Entidades
 405  8A9B CD 5B 8D     	call Inicia_Puntero_Disparo_Amadeus
 406  8A9E
 407  8A9E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 408  8A9E
 409  8A9E CD DE 8C     5 call Inicia_punteros_de_cajas
 410  8AA1 CD 1B 8E     	call Restore_entidad
 411  8AA4
 412  8AA4 3A F8 89     	ld a,(Ctrl_1)
 413  8AA7 CB 5F        	bit 3,a
 414  8AA9 28 0A        	jr z,6F
 415  8AAB
 416  8AAB              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 417  8AAB
 418  8AAB 21 F8 89     	ld hl,Ctrl_1
 419  8AAE CB 9E        	res 3,(hl)
 420  8AB0 CD 62 8D     	call Calcula_numero_de_malotes
 421  8AB3 18 0A        	jr Main
 422  8AB5
 423  8AB5              ; ----------
 424  8AB5
 425  8AB5 3A 02 8A     6 ld a,(Numero_parcial_de_entidades)
 426  8AB8 3C           	inc a
 427  8AB9 32 04 8A     	ld (Numero_de_malotes),a
 428  8ABC
 429  8ABC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 430  8ABC              ; _ tenemos calculado (Numero_de_malotes).
 431  8ABC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 432  8ABC              ; _ para situarnos en el siguiente album.
 433  8ABC
 434  8ABC CD 25 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 435  8ABF
 436  8ABF              ; ------------------------------------
 437  8ABF
 438  8ABF              Main
 439  8ABF
 440  8ABF FB           	ei ; Interrupciones habilitadas.
 441  8AC0
 442  8AC0              ; -----------------------------------------------------------------------
 443  8AC0              ;
 444  8AC0              ;	3/8/23
 445  8AC0
 446  8AC0 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 447  8AC3 47           	ld b,a
 448  8AC4 3A 40 8A     	ld a,(Contador_de_frames)
 449  8AC7 B8           	cp b
 450  8AC8 20 18        	jr nz,13F
 451  8ACA              ;
 452  8ACA              ;!debuggg
 453  8ACA              ;    ld a,(Contador_de_frames)
 454  8ACA              ;    ld hl,(Stack_snapshot)
 455  8ACA              ;    jr $
 456  8ACA              ;!debuggg
 457  8ACA
 458  8ACA 3A 02 8A     	ld a,(Numero_parcial_de_entidades)
 459  8ACD 47           	ld b,a
 460  8ACE 3A 03 8A     	ld a,(Entidades_en_curso)
 461  8AD1 B8           	cp b
 462  8AD2 28 0E        	jr z,13F
 463  8AD4 30 0C        	jr nc,13F
 464  8AD6
 465  8AD6 3C           	inc a
 466  8AD7 32 03 8A     	ld (Entidades_en_curso),a
 467  8ADA
 468  8ADA 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 469  8ADD
 470  8ADD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 471  8ADD              ;! _ IMPREDECIBLE !!!!
 472  8ADD
 473  8ADD C6 64        	add 100
 474  8ADF 32 42 8A     	ld (Clock_Entidades_en_curso),a
 475  8AE2
 476  8AE2              ; Habilita disparos.
 477  8AE2
 478  8AE2 21 44 8A     13 ld hl,Disparo_Amadeus
 479  8AE5 11 46 8A     	ld de,CLOCK_repone_disparo_Amadeus
 480  8AE8 CD 8C A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 481  8AEB
 482  8AEB 21 47 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 483  8AEE 11 49 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 484  8AF1 CD 8C A0     	call Habilita_disparos
 485  8AF4
 486  8AF4              ; COLISIONES.
 487  8AF4
 488  8AF4 CD E3 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 489  8AF7
 490  8AF7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 491  8AF7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 492  8AF7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 493  8AF7
 494  8AF7 AF           	xor a
 495  8AF8 32 32 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 496  8AFB
 497  8AFB CD DE 8C     	call Inicia_punteros_de_cajas
 498  8AFE CD 1B 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 499  8B01              ; 														; _ en DRAW.
 500  8B01 3A B5 89     	ld a,(Filas)
 501  8B04 A7           	and a
 502  8B05 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 503  8B07 CD 2D 8E     	call Incrementa_punteros_de_cajas
 504  8B0A 18 F2        	jr 12B
 505  8B0C
 506  8B0C              ; ---------------------------------------------------------------------------------------
 507  8B0C
 508  8B0C 3A 02 8A     10 ld a,(Numero_parcial_de_entidades)
 509  8B0F 47               ld b,a
 510  8B10 A7           	and a
 511  8B11 20 14        	jr nz,11F
 512  8B13
 513  8B13 21 F8 89     	ld hl,Ctrl_1
 514  8B16 CB 66        	bit 4,(hl)
 515  8B18 C2 A4 8B     	jp nz,16F
 516  8B1B
 517  8B1B 21 F8 89     	ld hl,Ctrl_1
 518  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 519  8B20
 520  8B20 3A 40 8A     	ld a,(Contador_de_frames)
 521  8B23 3C           	inc a
 522  8B24 32 43 8A     	ld (Activa_recarga_cajas),a
 523  8B27
 524  8B27              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 525  8B27
 526  8B27 3A 03 8A     11 ld a,(Entidades_en_curso)
 527  8B2A A7           	and a
 528  8B2B CA A4 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 529  8B2E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 530  8B2F
 531  8B2F              ; Código que ejecutamos con cada entidad:
 532  8B2F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 533  8B2F
 534  8B2F C5           15 push bc 												; Nº de entidades en curso.
 535  8B30
 536  8B30              ; Impacto ???
 537  8B30
 538  8B30 3A CE 89     	ld a,(Impacto)
 539  8B33 A7           	and a
 540  8B34 28 2D        	jr z,8F
 541  8B36
 542  8B36              ; Hay Impacto en esta entidad.
 543  8B36
 544  8B36 21 41 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 545  8B39 35           	dec (hl)
 546  8B3A 20 62        	jr nz,17F
 547  8B3C
 548  8B3C              ;! Velocidad de la animación de la explosión.
 549  8B3C
 550  8B3C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 551  8B3E              ;														; _,(velocidad de la explosión).
 552  8B3E CD 95 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 553  8B41
 554  8B41              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 555  8B41
 556  8B41 3A F6 89     	ld a,(Ctrl_2)
 557  8B44 CB 4F        	bit 1,a
 558  8B46 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 559  8B48
 560  8B48              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 561  8B48
 562  8B48 3A BD 89     	ld a,(CTRL_DESPLZ)
 563  8B4B A7           	and a
 564  8B4C 20 08        	jr nz,18F
 565  8B4E
 566  8B4E 21 84 84     	ld hl,Indice_Explosion_2x2-2
 567  8B51 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 568  8B54 18 06        	jr 19F
 569  8B56
 570  8B56 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 571  8B59 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 572  8B5C
 573  8B5C 21 F6 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 574  8B5F CB CE        	set 1,(hl)
 575  8B61 18 22        	jr 7F
 576  8B63
 577  8B63              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 578  8B63              ; _con las coordenadas de la entidad almacenada en DRAW.
 579  8B63
 580  8B63 3A F8 89     8 ld a,(Ctrl_1)
 581  8B66 CB 57        	bit 2,a
 582  8B68 28 1B        	jr z,7F
 583  8B6A
 584  8B6A 2A 35 8A     	ld hl,(Coordenadas_disparo_certero)
 585  8B6D EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 586  8B6E              ;														; E contiene la coordenada_X del disparo.
 587  8B6E 2A BB 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 588  8B71              ;														; H FILA, (Coordenada_y de la entidad).
 589  8B71 A7           	and a
 590  8B72 ED 52        	sbc hl,de
 591  8B74
 592  8B74 CD 1A 93     	call Determina_resultado_comparativa
 593  8B77
 594  8B77 78           	ld a,b
 595  8B78 A7           	and a
 596  8B79 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 597  8B7B
 598  8B7B              ; ----- ----- -----
 599  8B7B
 600  8B7B 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 601  8B7D 32 CE 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 602  8B80
 603  8B80 21 F8 89     	ld hl,Ctrl_1
 604  8B83 CB 96        	res 2,(hl)
 605  8B85
 606  8B85 CD 07 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 607  8B88
 608  8B88 3A E3 89     	ld a,(Ctrl_0)
 609  8B8B CB 67        	bit 4,a
 610  8B8D 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 611  8B8F
 612  8B8F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 613  8B8F              ; [[[
 614  8B8F CD B6 8E     	call Detecta_disparo_entidad
 615  8B92              ; ]]]
 616  8B92 CD A5 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 617  8B95
 618  8B95 21 E3 89     	ld hl,Ctrl_0
 619  8B98 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 620  8B9A AF           	xor a
 621  8B9B 32 E4 89     	ld (Obj_dibujado),a
 622  8B9E
 623  8B9E CD E0 8D     17 call Store_Restore_cajas
 624  8BA1
 625  8BA1 C1           	pop bc
 626  8BA2 10 8B        	djnz 15B
 627  8BA4
 628  8BA4              ; ------------------------------------
 629  8BA4
 630  8BA4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 631  8BA4              ; Hemos gestionado todas las unidades.
 632  8BA4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 633  8BA4
 634  8BA4              ;	ld hl,Ctrl_1
 635  8BA4              ;	res 2,(hl)
 636  8BA4
 637  8BA4              ; ------------------------------------
 638  8BA4
 639  8BA4              ; Tras la gestión de las entidades, ... AMADEUS.
 640  8BA4
 641  8BA4 CD 42 8E     16 call Restore_Amadeus
 642  8BA7
 643  8BA7 3A CE 89     	ld a,(Impacto)
 644  8BAA A7           	and a
 645  8BAB 20 FE        	jr nz,$
 646  8BAD
 647  8BAD CD 66 8C     	call Mov_Amadeus
 648  8BB0
 649  8BB0 3A E3 89     	ld a,(Ctrl_0)
 650  8BB3 CB 67        	bit 4,a
 651  8BB5 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 652  8BB7
 653  8BB7 CD A5 8C     	call Guarda_foto_entidad_a_pintar
 654  8BBA
 655  8BBA 21 E3 89     14 ld hl,Ctrl_0
 656  8BBD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 657  8BBF AF           	xor a
 658  8BC0 32 E4 89     	ld (Obj_dibujado),a
 659  8BC3
 660  8BC3 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 661  8BC6 CD 54 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 662  8BC9
 663  8BC9 CD 77 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 664  8BCC
 665  8BCC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 666  8BCC
 667  8BCC              ;	call Calcula_numero_de_disparotes
 668  8BCC CD 62 8D     9 call Calcula_numero_de_malotes
 669  8BCF
 670  8BCF CD 25 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 671  8BD2
 672  8BD2 21 F8 89     	ld hl,Ctrl_1
 673  8BD5 CB AE        	res 5,(hl)
 674  8BD7
 675  8BD7 3E 04        	ld a,4
 676  8BD9 D3 FE        	out ($fe),a
 677  8BDB
 678  8BDB              ; ----------------------------------------
 679  8BDB
 680  8BDB 3A F8 89     	ld a,(Ctrl_1) 										; Existe Loop?
 681  8BDE CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 682  8BE0 CA BF 8A     	jp z,Main
 683  8BE3
 684  8BE3              ; -----
 685  8BE3              ;	(((
 686  8BE3
 687  8BE3 3A 40 8A     	ld a,(Contador_de_frames)
 688  8BE6 47           	ld b,a
 689  8BE7 3A 43 8A     	ld a,(Activa_recarga_cajas)
 690  8BEA B8           	cp b
 691  8BEB 28 08        	jr z,20F
 692  8BED
 693  8BED 21 F8 89     	ld hl,Ctrl_1
 694  8BF0 CB E6        	set 4,(hl)
 695  8BF2 C3 BF 8A     	jp Main
 696  8BF5
 697  8BF5 21 F8 89     20 ld hl,Ctrl_1
 698  8BF8 CB A6        	res 4,(hl)
 699  8BFA F3           	di
 700  8BFB
 701  8BFB 3A 40 8A     	ld a,(Contador_de_frames)
 702  8BFE
 703  8BFE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 704  8BFE              ;! _ IMPREDECIBLE !!!!
 705  8BFE
 706  8BFE C6 0A        	add 10
 707  8C00 32 42 8A     	ld (Clock_Entidades_en_curso),a
 708  8C03
 709  8C03 C3 64 8A     	jp 4B
 710  8C06
 711  8C06 C9           	ret
 712  8C07
 713  8C07              ; --------------------------------------------------------------------------------------------------------------
 714  8C07              ;
 715  8C07              ;	27/05/23
 716  8C07
 717  8C07              Mov_obj
 718  8C07
 719  8C07              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 720  8C07
 721  8C07 3A F6 89     	ld a,(Ctrl_2)
 722  8C0A CB 4F        	bit 1,a
 723  8C0C 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 724  8C0E
 725  8C0E              ; Explosión:
 726  8C0E
 727  8C0E 3A F7 89     	ld a,(Frames_explosion)
 728  8C11 A7           	and a
 729  8C12 20 11        	jr nz,4F
 730  8C14
 731  8C14              ; Una alimaña menos!!!!!!!!!1
 732  8C14
 733  8C14 CD 5D 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 734  8C17 21 02 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 735  8C1A 35           	dec (hl)
 736  8C1B 21 03 8A     	ld hl,Entidades_en_curso
 737  8C1E 35           	dec (hl)
 738  8C1F 21 01 8A     	ld hl,Numero_de_entidades
 739  8C22 35           	dec (hl)
 740  8C23 18 40        	jr 3F
 741  8C25
 742  8C25              ; -----
 743  8C25
 744  8C25              ;	`Movemos´ la explosión.
 745  8C25
 746  8C25 2A C3 89     4 ld hl,(Puntero_DESPLZ_der)
 747  8C28 23           	inc hl
 748  8C29 23           	inc hl
 749  8C2A 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 750  8C2D CD 92 8D     	call Extrae_address
 751  8C30 22 B9 89     	ld (Puntero_objeto),hl
 752  8C33
 753  8C33 21 F7 89     	ld hl,Frames_explosion
 754  8C36 35           	dec (hl)
 755  8C37
 756  8C37 CD 95 8C     	call Guarda_foto_entidad_a_borrar
 757  8C3A 18 29        	jr 3F
 758  8C3C
 759  8C3C AF           2 xor a
 760  8C3D 32 E4 89     	ld (Obj_dibujado),a
 761  8C40 32 E3 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 762  8C43              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 763  8C43              ; 														; _de la entidad.
 764  8C43 CD AF 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 765  8C46              ;														; Obj_dibujado="0".
 766  8C46              ; Movemos Entidades malignas.
 767  8C46
 768  8C46              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 769  8C46              ;	and a 												; _a movernos. (Limitador_de_entidades).
 770  8C46              ;	ret z
 771  8C46
 772  8C46 CD 27 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 773  8C49
 774  8C49 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 775  8C4C CB 67        	bit 4,a
 776  8C4E C8           	ret z
 777  8C4F
 778  8C4F              ; Ha habido desplazamiento de la entidad maligna.
 779  8C4F              ; Ha llegado a zona de AMADEUS ???
 780  8C4F
 781  8C4F 3A BC 89     	ld a,(Coordenada_y)
 782  8C52 FE 14        	cp $14
 783  8C54 D4 A8 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 784  8C57              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 785  8C57              ; ---------
 786  8C57
 787  8C57 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 788  8C59 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 789  8C5C CD AF 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 790  8C5F CD C6 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 791  8C62 CD 95 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 792  8C65 C9           3 ret													; _de la misma.
 793  8C66
 794  8C66              ; --------------------------------------------------------------------------------------------------------------
 795  8C66              ;
 796  8C66              ;	29/1/23
 797  8C66
 798  8C66              Mov_Amadeus
 799  8C66
 800  8C66 AF           	xor a
 801  8C67 32 E4 89     	ld (Obj_dibujado),a
 802  8C6A CD AF 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 803  8C6D              ;														; Obj_dibujado="0".
 804  8C6D              ; Movemos Amadeus.
 805  8C6D
 806  8C6D CD 7F 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 807  8C70 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 808  8C73 CB 67        	bit 4,a
 809  8C75 C8           	ret z
 810  8C76
 811  8C76              ; ---------
 812  8C76
 813  8C76 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 814  8C78 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 815  8C7B CD AF 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 816  8C7E CD C6 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 817  8C81 CD 95 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 818  8C84 C9           	ret													; _de la nave.
 819  8C85
 820  8C85              ; -----------------------------------------------------------------------------------
 821  8C85
 822  8C85 CD 98 8D     Inicia_entidad	call Inicia_Puntero_objeto
 823  8C88 CD DB 99     	call Recompone_posicion_inicio
 824  8C8B CD 01 94     	call Draw
 825  8C8E CD A0 7F     	call Guarda_foto_registros
 826  8C91 CD E0 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 827  8C94 C9           	ret
 828  8C95
 829  8C95              ; --------------------------------------------------------------------------------------------------------------
 830  8C95              ;
 831  8C95              ;	31/01/23
 832  8C95              ;
 833  8C95              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 834  8C95
 835  8C95              Guarda_foto_entidad_a_borrar
 836  8C95
 837  8C95 CD E5 96     	call Prepara_draw
 838  8C98 CD 15 96     	call calcula_CColumnass
 839  8C9B CD 4C 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 840  8C9E CD AB 96     	call Define_rutina_de_impresion
 841  8CA1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 842  8CA4 C9           	ret
 843  8CA5
 844  8CA5              ; --------------------------------------------------------------------------------------------------------------
 845  8CA5              ;
 846  8CA5              ;	31/01/23
 847  8CA5              ;
 848  8CA5              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 849  8CA5              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 850  8CA5
 851  8CA5              Guarda_foto_entidad_a_pintar
 852  8CA5
 853  8CA5 CD D2 8C     	call Repone_pintar
 854  8CA8 CD 01 94     	call Draw
 855  8CAB CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 856  8CAE C9           	ret
 857  8CAF
 858  8CAF              ; --------------------------------------------------------------------------------------------------------------
 859  8CAF              ;
 860  8CAF              ;
 861  8CAF
 862  8CAF 21 B5 89     Prepara_var_pintado_borrado	ld hl,Filas
 863  8CB2 3A E4 89     	ld a,(Obj_dibujado)
 864  8CB5 A7           	and a
 865  8CB6 28 05        	jr z,1F
 866  8CB8 11 D9 89     	ld de,Variables_de_pintado
 867  8CBB 18 03        	jr 2F
 868  8CBD 11 CF 89     1 ld de,Variables_de_borrado
 869  8CC0 01 08 00     2 ld bc,8
 870  8CC3 ED B0        	ldir
 871  8CC5 C9           	ret
 872  8CC6
 873  8CC6              ; --------------------------------------------------------------------------------------------------------------
 874  8CC6
 875  8CC6 21 CF 89     Repone_borrar ld hl,Variables_de_borrado
 876  8CC9 11 B5 89     	ld de,Filas
 877  8CCC 01 08 00     	ld bc,8
 878  8CCF ED B0        	ldir
 879  8CD1 C9           	ret
 880  8CD2
 881  8CD2 21 D9 89     Repone_pintar ld hl,Variables_de_pintado
 882  8CD5 11 B5 89     	ld de,Filas
 883  8CD8 01 08 00     	ld bc,8
 884  8CDB ED B0        	ldir
 885  8CDD C9           	ret
 886  8CDE
 887  8CDE              ; *************************************************************************************************************************************************************
 888  8CDE              ;
 889  8CDE              ; 8/1/23
 890  8CDE              ;
 891  8CDE              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 892  8CDE              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 893  8CDE              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 894  8CDE
 895  8CDE              ; Destruye HL y DE !!!!!
 896  8CDE
 897  8CDE              Inicia_punteros_de_cajas
 898  8CDE
 899  8CDE 21 8C 85     	ld hl,Indice_de_cajas
 900  8CE1 CD 92 8D         call Extrae_address
 901  8CE4 22 FB 89         ld (Puntero_store_caja),hl
 902  8CE7 21 8E 85     	ld hl,Indice_de_cajas+2
 903  8CEA 22 FF 89     	ld (Indice_restore_caja),hl
 904  8CED CD 92 8D     	call Extrae_address
 905  8CF0 22 FD 89     	ld (Puntero_restore_caja),hl
 906  8CF3 C9               ret
 907  8CF4
 908  8CF4              ; ---------------------------------------------------------------
 909  8CF4              ;
 910  8CF4              ;	9/8/23
 911  8CF4              ;
 912  8CF4              ;	Inicialización y gestión de álbumes de fotos y cajas.
 913  8CF4
 914  8CF4              Inicia_punteros_de_albumes_y_malotes
 915  8CF4
 916  8CF4 21 EC 84     	ld hl,Indice_album_de_fotos
 917  8CF7 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 918  8CFA CD 92 8D     	call Extrae_address
 919  8CFD 22 0D 8A     	ld (Stack_snapshot),hl
 920  8D00
 921  8D00 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 922  8D03 22 23 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 923  8D06 CD 92 8D     	call Extrae_address
 924  8D09 22 0F 8A     	ld (Stack_snapshot_disparos),hl
 925  8D0C
 926  8D0C 21 FC 84     	ld hl,Indice_End_Snapshot
 927  8D0F 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 928  8D12 CD 92 8D     	call Extrae_address
 929  8D15 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 930  8D18
 931  8D18 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 932  8D1B 22 27 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 933  8D1E CD 92 8D     	call Extrae_address
 934  8D21 22 2B 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 935  8D24
 936  8D24 C9           	ret
 937  8D25
 938  8D25              ;	12/8/23
 939  8D25
 940  8D25              Avanza_puntero_de_album_de_fotos_y_malotes
 941  8D25
 942  8D25              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 943  8D25
 944  8D25              ; Estamos en el último álbum del índice???.
 945  8D25
 946  8D25 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
 947  8D28 01 F2 84     	ld bc,Indice_album_de_fotos+6
 948  8D2B A7           	and a
 949  8D2C ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 950  8D2E 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 951  8D30
 952  8D30 21 F8 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 953  8D33 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 954  8D35 76           	halt
 955  8D36 C9           	ret
 956  8D37
 957  8D37 2A 21 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 958  8D3A 23           	inc hl
 959  8D3B 23           	inc hl
 960  8D3C 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 961  8D3F CD 92 8D     	call Extrae_address
 962  8D42 22 0D 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 963  8D45
 964  8D45 2A 25 8A     	ld hl,(Puntero_indice_End_Snapshot)
 965  8D48 23           	inc hl
 966  8D49 23           	inc hl
 967  8D4A 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 968  8D4D CD 92 8D     	call Extrae_address
 969  8D50 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 970  8D53
 971  8D53 C9           	ret
 972  8D54
 973  8D54              ; *************************************************************************************************************************************************************
 974  8D54              ;
 975  8D54              ; 8/1/23
 976  8D54              ;
 977  8D54              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 978  8D54
 979  8D54 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 980  8D57 22 2E 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 981  8D5A C9           	ret
 982  8D5B 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 983  8D5E 22 30 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 984  8D61 C9           	ret
 985  8D62
 986  8D62              ; -------------------------------------------------------------------------------------------------------------
 987  8D62              ;
 988  8D62              ; 3/8/23
 989  8D62              ;
 990  8D62
 991  8D62              Calcula_numero_de_malotes
 992  8D62
 993  8D62 21 00 70     	ld hl,Album_de_fotos
 994  8D65 EB           	ex de,hl
 995  8D66 2A 11 8A     	ld hl,(End_Snapshot)
 996  8D69
 997  8D69 06 00        	ld b,0
 998  8D6B 7D           	ld a,l
 999  8D6C 93           	sub e
1000  8D6D 28 07        	jr z,1F
1001  8D6F
1002  8D6F              ; Nº de malotes no es "0".
1003  8D6F
1004  8D6F D6 06        2 sub 6
1005  8D71 04           	inc b
1006  8D72 A7           	and a
1007  8D73 20 FA        	jr nz,2B
1008  8D75 78           	ld a,b
1009  8D76
1010  8D76 32 04 8A     1 ld (Numero_de_malotes),a
1011  8D79 C9           	ret
1012  8D7A
1013  8D7A              ; -------------------------------------------------------------------------------------------------------------
1014  8D7A              ;
1015  8D7A              ; 28/2/23
1016  8D7A              ;
1017  8D7A
1018  8D7A              Calcula_numero_de_disparotes
1019  8D7A
1020  8D7A 21 0D 72     	ld hl,Album_de_fotos_disparos
1021  8D7D EB           	ex de,hl
1022  8D7E 2A 2B 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1023  8D81
1024  8D81 06 00        	ld b,0
1025  8D83 7D           	ld a,l
1026  8D84 93           	sub e
1027  8D85 28 07        	jr z,1F
1028  8D87
1029  8D87              ; Nº de malotes no es "0".
1030  8D87
1031  8D87 D6 06        2 sub 6
1032  8D89 04           	inc b
1033  8D8A A7           	and a
1034  8D8B 20 FA        	jr nz,2B
1035  8D8D 78           	ld a,b
1036  8D8E
1037  8D8E 32 2D 8A     1 ld (Numero_de_disparotes),a
1038  8D91 C9           	ret
1039  8D92
1040  8D92              ; *************************************************************************************************************************************************************
1041  8D92              ;
1042  8D92              ; 20/10/22
1043  8D92              ;
1044  8D92              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1045  8D92              ;
1046  8D92              ; Destruye el puntero y DE !!!!!
1047  8D92
1048  8D92 5E           Extrae_address ld e,(hl)
1049  8D93 23           	inc hl
1050  8D94 56           	ld d,(hl)
1051  8D95 2B           	dec hl
1052  8D96 EB           	ex de,hl
1053  8D97 C9           	ret
1054  8D98
1055  8D98              ; *************************************************************************************************************************************************************
1056  8D98              ;
1057  8D98              ;	7/2/23
1058  8D98              ;
1059  8D98              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1060  8D98              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1061  8D98              ;
1062  8D98              ;   Destruye HL y BC !!!!!,
1063  8D98              ;
1064  8D98              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1065  8D98              ;					"0" ..... Izquierda.
1066  8D98
1067  8D98              Inicia_Puntero_objeto
1068  8D98
1069  8D98 3A C9 89     	ld a,(Cuad_objeto)
1070  8D9B E6 01        	and 1
1071  8D9D F5           	push af
1072  8D9E CC BC 8D     	call z,Inicia_puntero_objeto_izq
1073  8DA1 F1           	pop af
1074  8DA2 28 2B        	jr z,1F
1075  8DA4 CD A9 8D     	call Inicia_puntero_objeto_der
1076  8DA7 18 26        	jr 1F
1077  8DA9
1078  8DA9              ; Arrancamos desde la parte izquierda de la pantalla.
1079  8DA9              ; Iniciamos (Indice_Sprite_der).
1080  8DA9
1081  8DA9 2A BF 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1082  8DAC 22 C3 89     	ld (Puntero_DESPLZ_der),hl
1083  8DAF CD 92 8D     	call Extrae_address
1084  8DB2 22 B9 89     	ld (Puntero_objeto),hl
1085  8DB5
1086  8DB5 2A C1 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1087  8DB8 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1088  8DBB C9           	ret
1089  8DBC
1090  8DBC              ; Arrancamos desde la parte derecha de la pantalla.
1091  8DBC              ; Iniciamos (Indice_Sprite_izq).
1092  8DBC
1093  8DBC 2A C1 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1094  8DBF 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1095  8DC2 CD 92 8D     	call Extrae_address
1096  8DC5 22 B9 89     	ld (Puntero_objeto),hl
1097  8DC8
1098  8DC8 2A BF 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1099  8DCB 22 C3 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1100  8DCE C9           	ret
1101  8DCF
1102  8DCF              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1103  8DCF
1104  8DCF 21 40 83     1 ld hl,Amadeus
1105  8DD2 ED 4B B9 89  	ld bc,(Puntero_objeto)
1106  8DD6 B7 ED 42     	sub hl,bc
1107  8DD9 C0           	ret nz
1108  8DDA 21 E3 89     	ld hl,Ctrl_0
1109  8DDD CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1110  8DDF C9           	ret 												; _de nuestra nave en los extremos.
1111  8DE0
1112  8DE0              ; *************************************************************************************************************************************************************
1113  8DE0              ;
1114  8DE0              ;	14/5/23
1115  8DE0              ;
1116  8DE0              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1117  8DE0              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1118  8DE0
1119  8DE0              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1120  8DE0              ;	_de la 2ª y 3ª entidad respectivamente.
1121  8DE0
1122  8DE0              Store_Restore_cajas
1123  8DE0
1124  8DE0 E5           	push hl
1125  8DE1 D5           	push de
1126  8DE2 C5            	push bc
1127  8DE3
1128  8DE3              ;	STORE !!!!!
1129  8DE3              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1130  8DE3
1131  8DE3 21 B5 89     	ld hl,Filas
1132  8DE6 ED 5B FB 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1133  8DEA 01 43 00     	ld bc,67
1134  8DED ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1135  8DEF
1136  8DEF              ; 	Entidad_sospechosa. 20/4/23
1137  8DEF
1138  8DEF 3A CE 89     	ld a,(Impacto)
1139  8DF2 A7           	and a
1140  8DF3 28 0C        	jr z,1F
1141  8DF5
1142  8DF5 2A FB 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1143  8DF8 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1144  8DFB A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1145  8DFC ED 4A        	adc hl,bc 											; _ "0" más adelante.
1146  8DFE 22 33 8A     	ld (Entidad_sospechosa_de_colision),hl
1147  8E01
1148  8E01              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1149  8E01
1150  8E01 2A FD 89     1 ld hl,(Puntero_restore_caja)
1151  8E04 7E           	ld a,(hl)
1152  8E05 A7           	and a
1153  8E06 F5           	push af
1154  8E07 28 08        	jr z,2F
1155  8E09
1156  8E09 11 B5 89     	ld de,Filas
1157  8E0C 01 43 00     	ld bc,67
1158  8E0F ED B0        	ldir
1159  8E11
1160  8E11 CD 2D 8E     2 call Incrementa_punteros_de_cajas
1161  8E14 F1           	pop af
1162  8E15 28 EA        	jr z,1B
1163  8E17
1164  8E17 C1           	pop bc
1165  8E18 D1           	pop de
1166  8E19 E1           	pop hl
1167  8E1A
1168  8E1A C9           	ret
1169  8E1B
1170  8E1B              ; **************************************************************************************************
1171  8E1B              ;
1172  8E1B              ;	12/05/23
1173  8E1B              ;
1174  8E1B              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1175  8E1B
1176  8E1B E5           Restore_entidad push hl
1177  8E1C D5           	push de
1178  8E1D C5            	push bc
1179  8E1E
1180  8E1E 2A FB 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1181  8E21 11 B5 89     	ld de,Filas
1182  8E24 01 43 00     	ld bc,67
1183  8E27 ED B0        	ldir
1184  8E29
1185  8E29 C1           	pop bc
1186  8E2A D1           	pop de
1187  8E2B E1           	pop hl
1188  8E2C C9           	ret
1189  8E2D
1190  8E2D
1191  8E2D              ; **************************************************************************************************
1192  8E2D              ;
1193  8E2D              ;	08/05/23
1194  8E2D              ;
1195  8E2D              ;	Incrementamos los dos punteros de entidades. (+1).
1196  8E2D
1197  8E2D 2A FD 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1198  8E30 22 FB 89     	ld (Puntero_store_caja),hl
1199  8E33 2A FF 89     	ld hl,(Indice_restore_caja)
1200  8E36 23           	inc hl
1201  8E37 23           	inc hl
1202  8E38 22 FF 89     	ld (Indice_restore_caja),hl
1203  8E3B CD 92 8D         call Extrae_address
1204  8E3E 22 FD 89         ld (Puntero_restore_caja),hl
1205  8E41 C9               ret
1206  8E42
1207  8E42              ; **************************************************************************************************
1208  8E42              ;
1209  8E42              ;	25/01/23
1210  8E42              ;
1211  8E42              ;	Restore_Amadeus
1212  8E42              ;
1213  8E42              ;	Cargamos en DRAW los parámetros de Amadeus.
1214  8E42              ;
1215  8E42
1216  8E42 E5           Restore_Amadeus	push hl
1217  8E43 D5           	push de
1218  8E44 C5            	push bc
1219  8E45 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1220  8E48 11 B5 89     	ld de,Filas
1221  8E4B 01 43 00     	ld bc,67
1222  8E4E ED B0        	ldir
1223  8E50 C1           	pop bc
1224  8E51 D1           	pop de
1225  8E52 E1           	pop hl
1226  8E53 C9           	ret
1227  8E54
1228  8E54              ; *************************************************************************************************************************************************************
1229  8E54              ;
1230  8E54              ;	29/04/23
1231  8E54              ;
1232  8E54              ;	Store_Amadeus
1233  8E54              ;
1234  8E54              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1235  8E54              ;
1236  8E54              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1237  8E54              ;
1238  8E54              ;	DESTRUYE: HL y BC y DE.
1239  8E54
1240  8E54 21 B5 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1241  8E57 01 43 00     	ld bc,67
1242  8E5A ED B0        	ldir
1243  8E5C C9           	ret
1244  8E5D
1245  8E5D              ; -----------------------------------------------------------
1246  8E5D              ;
1247  8E5D              ;	27/04/23
1248  8E5D              ;
1249  8E5D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1250  8E5D              ;
1251  8E5D              ;	Destruye: HL,BC,DE,A
1252  8E5D
1253  8E5D 21 B5 89     Borra_datos_entidad ld hl,Filas
1254  8E60 01 42 00     	ld bc,66
1255  8E63 AF           	xor a
1256  8E64 77           	ld (hl),a
1257  8E65 11 B6 89     	ld de,Filas+1
1258  8E68 ED B0        	ldir
1259  8E6A C9           	ret
1260  8E6B
1261  8E6B              ; -----------------------------------------------------------
1262  8E6B
1263  8E6B              ; Teclado.
1264  8E6B
1265  8E6B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1266  8E6D DB FE        	in a,($fe)
1267  8E6F E6 01        	and $01
1268  8E71 28 02        	jr z,1f
1269  8E73 18 F6        	jr Pulsa_ENTER
1270  8E75 C9           1 ret
1271  8E76
1272  8E76              ; **************************************************************************************************
1273  8E76              ;
1274  8E76              ; Temporización.
1275  8E76
1276  8E76              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1277  8E76              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1278  8E76              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1279  8E76              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1280  8E76
1281  8E76              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1282  8E76              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1283  8E76              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1284  8E76
1285  8E76              ; A partir de $4f61 no hace falta DELAY.
1286  8E76
1287  8E76              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1288  8E76
1289  8E76 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1290  8E79 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1291  8E7A 78           	LD A,B
1292  8E7B A7           	AND A
1293  8E7C 20 FB        	JR NZ,wait
1294  8E7E C9           	RET
1295  8E7F
1296  8E7F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1297  8E7F              ;
1298  8E7F              ;	5/3/23
1299  8E7F              ;
1300  8E7F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1301  8E7F
1302  8E7F              Movimiento_Amadeus
1303  8E7F
1304  8E7F              ; Disparo.
1305  8E7F
1306  8E7F 3A 44 8A     	ld a,(Disparo_Amadeus)
1307  8E82 A7           	and a
1308  8E83 20 02        	jr nz,1F
1309  8E85 18 15        	jr 2F
1310  8E87
1311  8E87 3E F7        1 ld a,$f7													; "5" para disparar.
1312  8E89 DB FE        	in a,($fe)
1313  8E8B E6 10        	and $10
1314  8E8D
1315  8E8D F5           	push af
1316  8E8E CC 0B 8F     	call z,Genera_disparo
1317  8E91 F1           	pop af
1318  8E92 20 08        	jr nz,2F
1319  8E94
1320  8E94 3A 44 8A     	ld a,(Disparo_Amadeus)
1321  8E97 EE 01        	xor 1
1322  8E99 32 44 8A     	ld (Disparo_Amadeus),a
1323  8E9C
1324  8E9C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1325  8E9E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1326  8EA0 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1327  8EA2 CC 95 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1328  8EA5 3E F7        	ld a,$f7
1329  8EA7 DB FE        	in a,($fe)
1330  8EA9 E6 01        	and $01
1331  8EAB C8           	ret z
1332  8EAC
1333  8EAC 3E F7        	ld a,$f7
1334  8EAE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1335  8EB0 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1336  8EB2 CC 77 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1337  8EB5 C9           	ret
1338  8EB6
1339  8EB6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1340  8EB6              ;
1341  8EB6              ;	Rutina provisional para que los malotes cagen balas.
1342  8EB6
1343  8EB6              Detecta_disparo_entidad
1344  8EB6
1345  8EB6 3A 47 8A     	ld a,(Disparo_entidad)
1346  8EB9 A7           	and a
1347  8EBA C8           	ret z
1348  8EBB
1349  8EBB              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1350  8EBB
1351  8EBB              ;	ld a,$7f				; Detecta SPACE.
1352  8EBB              ;	in a,($fe)
1353  8EBB              ;	and 1
1354  8EBB              ;	ret nz
1355  8EBB
1356  8EBB              ;	call Genera_disparo
1357  8EBB C9           	ret
1358  8EBC
1359  8EBC              ; ----------------------------------------------------------------------
1360  8EBC              ;
1361  8EBC              ;	11/8/23
1362  8EBC
1363  8EBC              Frame
1364  8EBC
1365  8EBC              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1366  8EBC              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1367  8EBC
1368  8EBC              ; PINTAMOS.
1369  8EBC
1370  8EBC F5           	push af
1371  8EBD C5           	push bc
1372  8EBE D5           	push de
1373  8EBF E5           	push hl
1374  8EC0
1375  8EC0 3E 02            ld a,2
1376  8EC2 D3 FE            out ($fe),a											; Rojo.
1377  8EC4 CD 0F 97     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1378  8EC7 CD 4E 97     	call Extrae_foto_disparos
1379  8ECA 3E 01            ld a,1
1380  8ECC D3 FE            out ($fe),a											; Azul.
1381  8ECE
1382  8ECE              ; 	Gestiona los álbumes de fotos.
1383  8ECE
1384  8ECE CD 59 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1385  8ED1 CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1386  8ED4
1387  8ED4              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1388  8ED4
1389  8ED4              ;	ld a,(Contador_de_frames)
1390  8ED4              ;	cp $e5	; 1er FRAME, (sin mover AMADEUS), donde nos pasamos del FRAME RATE.!!!!!
1391  8ED4              ;	jr z,$
1392  8ED4
1393  8ED4 3A F8 89     	ld a,(Ctrl_1)
1394  8ED7 CB 6F        	bit 5,a
1395  8ED9 20 1E        	jr nz,1F
1396  8EDB
1397  8EDB              ; No hemos terminado de guardar el último FRAME.
1398  8EDB
1399  8EDB 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
1400  8EDE 2B           	dec hl
1401  8EDF 2B           	dec hl
1402  8EE0 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
1403  8EE3
1404  8EE3 2A 25 8A     	ld hl,(Puntero_indice_End_Snapshot)
1405  8EE6 2B           	dec hl
1406  8EE7 2B           	dec hl
1407  8EE8 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
1408  8EEB CD 92 8D     	call Extrae_address
1409  8EEE 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
1410  8EF1 CD 92 8D     	call Extrae_address
1411  8EF4 22 0D 8A     	ld (Stack_snapshot),hl
1412  8EF7
1413  8EF7 18 09        	jr 2F
1414  8EF9
1415  8EF9              ; FRAME completo.
1416  8EF9
1417  8EF9 2A 21 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1418  8EFC CD 92 8D     	call Extrae_address
1419  8EFF 22 0D 8A     	ld (Stack_snapshot),hl
1420  8F02
1421  8F02              ;	En este punto:
1422  8F02
1423  8F02              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1424  8F02              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1425  8F02
1426  8F02              ; RELOJES.
1427  8F02
1428  8F02 21 40 8A     2 ld hl,Contador_de_frames
1429  8F05 34           	inc (hl)											; 0 - 255
1430  8F06
1431  8F06 E1           	pop hl
1432  8F07 D1           	pop de
1433  8F08 C1           	pop bc
1434  8F09 F1           	pop af
1435  8F0A
1436  8F0A C9           	ret
1437  8F0B
1438  8F0B              ; ---------------------------------------------------------------
1439  8F0B
1440  8F0B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F0B              ; ******************************************************************************************************************************************************************************************
   2+ 8F0B              ;
   3+ 8F0B              ;   21/07/23
   4+ 8F0B              ;
   5+ 8F0B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F0B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F0B              ;
   8+ 8F0B              ;
   9+ 8F0B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F0B              ;
  11+ 8F0B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F0B              ;               _ hacen las entidades hacia abajo.
  13+ 8F0B              ;
  14+ 8F0B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F0B              ;
  16+ 8F0B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F0B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F0B              ;
  19+ 8F0B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F0B              ;           _ la bala.
  21+ 8F0B              ;
  22+ 8F0B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F0B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F0B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F0B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F0B              ;           _ en el momento de generarse la bala)).
  27+ 8F0B
  28+ 8F0B              Genera_disparo
  29+ 8F0B
  30+ 8F0B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F0B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F0B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F0B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F0B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F0B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F0B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F0B
  38+ 8F0B              ; Exclusiones:
  39+ 8F0B
  40+ 8F0B 3A CD 89         ld a,(Vel_down)
  41+ 8F0E 47               ld b,a
  42+ 8F0F 3A 3F 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F12 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F13 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F14 3A F2 89         ld a,(Columnas)
  46+ 8F17 47               ld b,a
  47+ 8F18 3A B6 89         ld a,(Columns)
  48+ 8F1B B8               cp b
  49+ 8F1C C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F1D
  51+ 8F1D              ; ----- ----- -----
  52+ 8F1D
  53+ 8F1D 3A E3 89         ld a,(Ctrl_0)
  54+ 8F20 CB 77            bit 6,a
  55+ 8F22 20 06            jr nz,14F
  56+ 8F24
  57+ 8F24 3A BC 89         ld a,(Coordenada_y)
  58+ 8F27 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F29 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F2A
  61+ 8F2A 21 00 80     14 ld hl,Indice_disparo
  62+ 8F2D 3A BD 89         ld a,(CTRL_DESPLZ)
  63+ 8F30 4F               ld c,a
  64+ 8F31 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F33              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F33              ;                                            ""        ""       "f9", B="1"
  67+ 8F33              ;                                            ""        ""       "fb", B="2"
  68+ 8F33              ;                                            ""        ""       "fb", B="3"
  69+ 8F33 A7               and a
  70+ 8F34 28 10            jr z,1F
  71+ 8F36 E6 01            and 1
  72+ 8F38 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F39
  74+ 8F39 79               ld a,c
  75+ 8F3A 16 F9            ld d,$f9
  76+ 8F3C 23           2 inc hl
  77+ 8F3D 23               inc hl
  78+ 8F3E 04               inc b
  79+ 8F3F BA               cp d
  80+ 8F40 28 04            jr z,1F
  81+ 8F42 14               inc d
  82+ 8F43 14               inc d
  83+ 8F44 18 F6            jr 2B
  84+ 8F46
  85+ 8F46 CD 92 8D     1 call Extrae_address
  86+ 8F49 E5               push hl
  87+ 8F4A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F4C DD 21 90 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F50
  90+ 8F50              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F50              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F50
  93+ 8F50 3A E3 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F53 CB 77            bit 6,a
  95+ 8F55 20 04            jr nz,19F
  96+ 8F57
  97+ 8F57 AF               xor a
  98+ 8F58 32 47 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F5B
 100+ 8F5B 3A C9 89     19 ld a,(Cuad_objeto)
 101+ 8F5E FE 02            cp 2
 102+ 8F60 38 66            jr c,3F
 103+ 8F62 28 64            jr z,3F
 104+ 8F64
 105+ 8F64              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F64
 107+ 8F64 E6 01            and 1
 108+ 8F66 28 30            jr z,4F
 109+ 8F68
 110+ 8F68              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F68              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F68              ;
 113+ 8F68              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F68              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F68              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F68
 117+ 8F68 2A B7 89     	ld hl,(Posicion_actual)
 118+ 8F6B
 119+ 8F6B              ;   Amadeus o entidad ???.
 120+ 8F6B
 121+ 8F6B 3A E3 89         ld a,(Ctrl_0)
 122+ 8F6E CB 77            bit 6,a
 123+ 8F70 28 0A            jr z,8F
 124+ 8F72
 125+ 8F72              ; 	Dispara Amadeus.
 126+ 8F72
 127+ 8F72 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F74 CD 00 97         call PreviousScan
 129+ 8F77 CD 00 97         call PreviousScan
 130+ 8F7A
 131+ 8F7A              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F7A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F7A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F7A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F7A
 136+ 8F7A 18 11            jr 10F
 137+ 8F7C
 138+ 8F7C              ; 	Dispara Entidad.
 139+ 8F7C
 140+ 8F7C 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F7F              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F7F
 143+ 8F7F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F7F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F7F
 146+ 8F7F C5               push bc
 147+ 8F80 06 10            ld b,16
 148+ 8F82 CD F1 96     9 call NextScan
 149+ 8F85 10 FB            djnz 9B
 150+ 8F87 C1               pop bc
 151+ 8F88 CD F2 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F8B 18 06            jr 17F
 153+ 8F8D
 154+ 8F8D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F8D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F8D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F8D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F8D
 159+ 8F8D CD F2 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F90 CD 67 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F93              ;                                                      ; _al generar el disparo.
 162+ 8F93
 163+ 8F93              ; 	LLegados a este punto tendremos:
 164+ 8F93              ;
 165+ 8F93              ;       Puntero_objeto_disparo en IY.
 166+ 8F93              ;       Rutinas_de_impresion en IX.
 167+ 8F93              ;       Puntero_de_impresion en HL.
 168+ 8F93              ;       Impacto/Dirección en BC.
 169+ 8F93
 170+ 8F93 CD FA 8F     17 call Almacena_disparo
 171+ 8F96 18 52            jr 6F                                             ; RET.
 172+ 8F98
 173+ 8F98              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F98              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F98              ;
 176+ 8F98              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F98              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F98              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F98
 180+ 8F98 2A B7 89     4 ld hl,(Posicion_actual)
 181+ 8F9B
 182+ 8F9B              ;   Amadeus o entidad ???.
 183+ 8F9B
 184+ 8F9B 3A E3 89         ld a,(Ctrl_0)
 185+ 8F9E CB 77            bit 6,a
 186+ 8FA0 28 0A            jr z,11F
 187+ 8FA2
 188+ 8FA2              ; 	Dispara Amadeus.
 189+ 8FA2
 190+ 8FA2 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FA4 CD 00 97         call PreviousScan
 192+ 8FA7 CD 00 97         call PreviousScan
 193+ 8FAA
 194+ 8FAA              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FAA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FAA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FAA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FAA
 199+ 8FAA 18 11            jr 13F
 200+ 8FAC
 201+ 8FAC              ; 	Dispara Entidad.
 202+ 8FAC
 203+ 8FAC 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FAF              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FAF
 206+ 8FAF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FAF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FAF
 209+ 8FAF C5               push bc
 210+ 8FB0 06 10            ld b,16
 211+ 8FB2 CD F1 96     12 call NextScan
 212+ 8FB5 10 FB            djnz 12B
 213+ 8FB7 C1               pop bc
 214+ 8FB8
 215+ 8FB8 CD EB 8F         call Ajusta_disparo_parte_derecha
 216+ 8FBB 18 06            jr 18F
 217+ 8FBD
 218+ 8FBD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FBD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FBD              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FBD              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FBD
 223+ 8FBD CD EB 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8FC0 CD 67 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FC3              ;                                                       ; _al generar el disparo.
 226+ 8FC3
 227+ 8FC3              ; LLegados a este punto tendremos:
 228+ 8FC3              ;
 229+ 8FC3              ;       Puntero_objeto_disparo en IY.
 230+ 8FC3              ;       Rutinas_de_impresion en IX.
 231+ 8FC3              ;       Puntero_de_impresion en HL.
 232+ 8FC3              ;       Impacto/Dirección en BC.
 233+ 8FC3
 234+ 8FC3 CD FA 8F     18 call Almacena_disparo
 235+ 8FC6 18 22            jr 6F                                               ; RET.
 236+ 8FC8
 237+ 8FC8              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FC8
 239+ 8FC8 28 11        3 jr z,5F
 240+ 8FCA
 241+ 8FCA              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FCA              ;
 243+ 8FCA              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FCA              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FCA              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FCA              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FCA
 248+ 8FCA              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FCA              ;	   ""        ""       "f9", B="1"
 250+ 8FCA              ;	   ""        ""       "fb", B="2"
 251+ 8FCA              ; 	   ""        ""       "fb", B="3"
 252+ 8FCA
 253+ 8FCA 2A B7 89     	ld hl,(Posicion_actual)
 254+ 8FCD CD F1 96     	call NextScan
 255+ 8FD0
 256+ 8FD0              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FD0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FD0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FD0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FD0
 261+ 8FD0 CD F2 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FD3
 263+ 8FD3              ; 	No se produce impacto. B="$80"
 264+ 8FD3              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FD3
 266+ 8FD3 01 80 80         ld bc,$8080
 267+ 8FD6
 268+ 8FD6              ; 	LLegados a este punto tendremos:
 269+ 8FD6              ;
 270+ 8FD6              ;       Puntero_objeto_disparo en IY.
 271+ 8FD6              ;       Rutinas_de_impresion en IX.
 272+ 8FD6              ;       Puntero_de_impresion en HL.
 273+ 8FD6              ;       Impacto/Dirección en BC.
 274+ 8FD6
 275+ 8FD6 CD FA 8F         call Almacena_disparo
 276+ 8FD9 18 0F            jr 6F                                           ; RET.
 277+ 8FDB
 278+ 8FDB              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FDB              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FDB              ;
 281+ 8FDB              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FDB              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FDB              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FDB              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FDB
 286+ 8FDB 2A B7 89     5 ld hl,(Posicion_actual)
 287+ 8FDE CD F1 96     	call NextScan
 288+ 8FE1
 289+ 8FE1              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FE1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FE1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FE1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FE1
 294+ 8FE1 CD EB 8F         call Ajusta_disparo_parte_derecha
 295+ 8FE4
 296+ 8FE4              ; 	No se produce impacto. B="$80"
 297+ 8FE4              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FE4
 299+ 8FE4 01 80 80     15 ld bc,$8080
 300+ 8FE7
 301+ 8FE7              ; 	LLegados a este punto tendremos:
 302+ 8FE7              ;
 303+ 8FE7              ;       Puntero_objeto_disparo en IY.
 304+ 8FE7              ;       Rutinas_de_impresion en IX.
 305+ 8FE7              ;       Puntero_de_impresion en HL.
 306+ 8FE7              ;       Impacto/Dirección en BC.
 307+ 8FE7
 308+ 8FE7 CD FA 8F         call Almacena_disparo
 309+ 8FEA
 310+ 8FEA C9           6 ret
 311+ 8FEB
 312+ 8FEB              ; ----------------------------------------------------------------
 313+ 8FEB              ;
 314+ 8FEB              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FEB              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FEB              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FEB
 318+ 8FEB 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FEC FE 02            cp 2
 320+ 8FEE 38 01            jr c,1F
 321+ 8FF0 23               inc hl
 322+ 8FF1 C9           1 ret
 323+ 8FF2
 324+ 8FF2 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FF3 FE 01        	cp 1
 326+ 8FF5 20 01        	jr nz,1F
 327+ 8FF7 2B           	dec hl
 328+ 8FF8 2B           1 dec hl
 329+ 8FF9 C9               ret
 330+ 8FFA
 331+ 8FFA              ; ----------------------------------------------------------------
 332+ 8FFA              ;
 333+ 8FFA              ;   25/02/23
 334+ 8FFA              ;
 335+ 8FFA              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FFA              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FFA              ;
 338+ 8FFA              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FFA              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FFA
 341+ 8FFA              Almacena_disparo
 342+ 8FFA
 343+ 8FFA E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FFB F1               pop af
 345+ 8FFC 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FFD
 347+ 8FFD 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FFE E6 01            and 1
 349+ 9000 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9002              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9002              ; 	Dispara AMADEUS.
 352+ 9002
 353+ 9002              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9002              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9002              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9002              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9002
 358+ 9002 C5               push bc
 359+ 9003 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9006 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9009 A7               and a
 362+ 900A ED 42            sbc hl,bc
 363+ 900C CC 5B 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 900F C1               pop bc
 365+ 9010 28 54            jr z,4F
 366+ 9012
 367+ 9012 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9015 23               inc hl
 369+ 9016 23               inc hl
 370+ 9017 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 901A              ;                                                   ; _ Disparo_(+1).
 372+ 901A 18 18            jr 2F
 373+ 901C
 374+ 901C              ; Dispara una entidad.
 375+ 901C
 376+ 901C C5           1 push bc
 377+ 901D 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9020 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9023 A7               and a
 380+ 9024 ED 42            sbc hl,bc
 381+ 9026 CC 54 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9029 C1               pop bc
 383+ 902A 28 3A            jr z,4F
 384+ 902C
 385+ 902C 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 902F 23               inc hl
 387+ 9030 23               inc hl
 388+ 9031 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9034              ;                                                   ; _ Disparo_(+1).
 390+ 9034 CD 92 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9037              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9037              ;
 393+ 9037              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9037              ;                                                     Rutinas_de_impresion en IX.
 395+ 9037              ;                                                     Puntero_de_impresion en HL.
 396+ 9037              ;                                                     Impacto/Dirección en BC.
 397+ 9037
 398+ 9037 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9038 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9039 23               inc hl                                          ; _ al siguiente.
 401+ 903A A7               and a
 402+ 903B 20 C0            jr nz,3B
 403+ 903D
 404+ 903D 08               ex af,af
 405+ 903E ED 73 09 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9042 F9               ld sp,hl
 407+ 9043
 408+ 9043 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9045 F5               push af                                         ; Puntero de impresión.
 410+ 9046 FD E5            push iy                                         ; Puntero objeto.
 411+ 9048 C5               push bc                                         ; Control.
 412+ 9049
 413+ 9049 ED 7B 09 8A      ld sp,(Stack)
 414+ 904D
 415+ 904D              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 904D
 417+ 904D 21 F8 89     	ld hl,Ctrl_1
 418+ 9050 CB C6        	set 0,(hl)
 419+ 9052
 420+ 9052 DD E5        	push ix
 421+ 9054 E1               pop hl
 422+ 9055 F5               push af
 423+ 9056 DD E1            pop ix
 424+ 9058
 425+ 9058 CD A0 7F     	call Guarda_foto_registros
 426+ 905B
 427+ 905B 21 F8 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 905E CB 86        	res 0,(hl)
 429+ 9060
 430+ 9060              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9060              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9060
 433+ 9060 CD 5B 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9063 CD 54 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 9066
 436+ 9066 C9           4 ret
 437+ 9067
 438+ 9067              ; ----------------------------------------------------------------
 439+ 9067              ;
 440+ 9067              ;   4/3/23
 441+ 9067              ;
 442+ 9067              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9067              ;   _ al generarse el disparo.
 444+ 9067              ;
 445+ 9067              ;       "$80" ..... No se produce colisión.
 446+ 9067              ;       "$81" ..... Se produce colisión.
 447+ 9067              ;
 448+ 9067              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9067              ;         _ que forman el disparo.
 450+ 9067
 451+ 9067
 452+ 9067              Comprueba_Colision
 453+ 9067
 454+ 9067              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9067
 456+ 9067 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9069 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 906A
 459+ 906A CD A0 90         call Modifica_H_Velocidad_disparo
 460+ 906D
 461+ 906D 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 906E FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9070 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9072
 465+ 9072 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9074 CD 90 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9077
 468+ 9077 7B               ld a,e
 469+ 9078 E6 01            and 1
 470+ 907A 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 907C              ;                                                  ; _ para activar IMPACTO.
 472+ 907C E1               pop hl
 473+ 907D E5               push hl
 474+ 907E CD F1 96         call NextScan
 475+ 9081
 476+ 9081 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9082 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9084 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9086              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9086 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9088 CD 90 90         call Bucle_2
 482+ 908B
 483+ 908B 43           1 ld b,e
 484+ 908C E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 908D FD E1            pop iy
 486+ 908F C9               ret
 487+ 9090
 488+ 9090              ; ---------- ----------
 489+ 9090
 490+ 9090 06 02        Bucle_2 ld b,2
 491+ 9092 FD 7E 00     2 ld a,(iy)
 492+ 9095 A6               and (hl)
 493+ 9096 28 02            jr z,1F
 494+ 9098 1E 81            ld e,$81
 495+ 909A 23           1 inc hl
 496+ 909B FD 23            inc iy
 497+ 909D 10 F3            djnz 2B
 498+ 909F C9               ret
 499+ 90A0
 500+ 90A0              ; ---------- ----------
 501+ 90A0              ;
 502+ 90A0              ;   21/7/23
 503+ 90A0
 504+ 90A0              Modifica_H_Velocidad_disparo
 505+ 90A0
 506+ 90A0 3A 3F 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90A3 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90A5 D0               ret nc                                         ; _ incrementamos H.
 509+ 90A6 24               inc h
 510+ 90A7
 511+ 90A7 C9               ret
 512+ 90A8
 513+ 90A8              ; -------------------------------------------------------------------------------------------------------------
 514+ 90A8              ;
 515+ 90A8              ;   11/04/23
 516+ 90A8              ;
 517+ 90A8              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90A8              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90A8              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90A8              ;
 521+ 90A8              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90A8
 523+ 90A8              Compara_coordenadas_X
 524+ 90A8
 525+ 90A8              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90A8              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90A8
 528+ 90A8              ; Preparamos registros:
 529+ 90A8
 530+ 90A8 21 BB 89         ld hl,Filas+6
 531+ 90AB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90AC 23               inc hl
 533+ 90AD 23               inc hl
 534+ 90AE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90AF 43               ld b,e
 536+ 90B0
 537+ 90B0 21 C9 89         ld hl,Filas+20
 538+ 90B3 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90B4 21 3A 8A         ld hl,Coordenadas_X_Entidad
 540+ 90B7 CD D3 92         call Guarda_coordenadas_X
 541+ 90BA
 542+ 90BA              ; Preparamos registros:
 543+ 90BA
 544+ 90BA 21 AA 85         ld hl,Amadeus_db+6
 545+ 90BD 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90BE 23               inc hl
 547+ 90BF 23               inc hl
 548+ 90C0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90C1 7B               ld a,e
 550+ 90C2 08               ex af,af'
 551+ 90C3 21 B8 85         ld hl,Amadeus_db+20
 552+ 90C6 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90C7 21 37 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90CA CD D3 92         call Guarda_coordenadas_X
 555+ 90CD
 556+ 90CD              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90CD              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90CD
 559+ 90CD 04               inc b
 560+ 90CE 05               dec b
 561+ 90CF 28 04            jr z,1F
 562+ 90D1 06 03            ld b,3
 563+ 90D3 18 02            jr 2F
 564+ 90D5 06 02        1 ld b,2
 565+ 90D7 08           2 ex af,af'
 566+ 90D8 3C               inc a
 567+ 90D9 3D               dec a
 568+ 90DA 28 04            jr z,5F
 569+ 90DC 0E 03            ld c,3
 570+ 90DE 18 02            jr 6F
 571+ 90E0 0E 02        5 ld c,2
 572+ 90E2 79           6 ld a,c
 573+ 90E3 08               ex af,af'
 574+ 90E4 11 3A 8A         ld de,Coordenadas_X_Entidad
 575+ 90E7 1A           4 ld a,(de)
 576+ 90E8 21 37 8A         ld hl,Coordenadas_X_Amadeus
 577+ 90EB BE           3 cp (hl)
 578+ 90EC 28 0E            jr z,7F
 579+ 90EE 23               inc hl
 580+ 90EF 0D               dec c
 581+ 90F0 20 F9            jr nz,3B
 582+ 90F2 13               inc de
 583+ 90F3 08               ex af,af'
 584+ 90F4 4F               ld c,a
 585+ 90F5 08               ex af,af'
 586+ 90F6 10 EF            djnz 4B
 587+ 90F8
 588+ 90F8              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90F8
 590+ 90F8 CD 0F 93     8 call Limpia_Coordenadas_X
 591+ 90FB C9               ret
 592+ 90FC
 593+ 90FC 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90FE 32 CE 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9101 21 32 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9104 CB D6            set 2,(hl)
 597+ 9106 18 F0            jr 8B
 598+ 9108
 599+ 9108              ; -----------------------------------------------------------------------
 600+ 9108              ;
 601+ 9108              ;   17/04/23
 602+ 9108              ;
 603+ 9108
 604+ 9108              Detecta_colision_nave_entidad
 605+ 9108
 606+ 9108              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9108
 608+ 9108 2A B7 89         ld hl,(Posicion_actual)
 609+ 910B CD 4C 96         call Calcula_puntero_de_impresion
 610+ 910E
 611+ 910E              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 910E              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 910E
 614+ 910E DD E5            push ix
 615+ 9110 E1               pop hl
 616+ 9111 E5               push hl
 617+ 9112
 618+ 9112              ; ----- ----- -----
 619+ 9112 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9114 06 0A            ld b,10
 621+ 9116 CD 46 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9119 7B               ld a,e
 623+ 911A FE 05            cp 5
 624+ 911C 38 0E            jr c,3F
 625+ 911E
 626+ 911E              ; LLegados a este punto:
 627+ 911E              ;
 628+ 911E              ;   HAY COLISIÓN !!!!!.
 629+ 911E              ;
 630+ 911E              ;   .db (Impacto) de Amadeus a "1".
 631+ 911E              ;   SET el bit3 de (Impacto2).
 632+ 911E              ;
 633+ 911E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 911E
 635+ 911E 21 BD 85         ld hl,Amadeus_db+25
 636+ 9121 36 01            ld (hl),1
 637+ 9123 21 32 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9126 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9128 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 912A 18 18            jr 1F
 641+ 912C
 642+ 912C              ; -----
 643+ 912C
 644+ 912C E1           3 pop hl
 645+ 912D CD F1 96         call NextScan
 646+ 9130 E5               push hl
 647+ 9131 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9132 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9134 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9136 30 0C            jr nc,1F
 651+ 9138              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9138 10 DC            djnz 2B
 653+ 913A
 654+ 913A              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 913A
 656+ 913A              ; LLegados a este punto:
 657+ 913A              ;
 658+ 913A              ;   NO HAY COLISIÓN !!!!!.
 659+ 913A              ;
 660+ 913A              ;   .db (Impacto) de Amadeus a "0".
 661+ 913A              ;   RES el bit2 de (Impacto2).
 662+ 913A              ;
 663+ 913A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 913A              ;   Lo colocamos a "0".
 665+ 913A
 666+ 913A 21 32 8A         ld hl,Impacto2
 667+ 913D CB 96            res 2,(hl)
 668+ 913F 2A 33 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9142 36 00            ld (hl),0
 670+ 9144
 671+ 9144 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9145 C9               ret
 673+ 9146
 674+ 9146               ; ---------- ----------
 675+ 9146
 676+ 9146 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9147 3A B6 89         ld a,(Columns)
 678+ 914A 47               ld b,a
 679+ 914B FD 7E 00     2 ld a,(iy)
 680+ 914E BE               cp (hl)
 681+ 914F 28 01            jr z,1F
 682+ 9151
 683+ 9151 1C               inc e
 684+ 9152
 685+ 9152 23           1 inc hl
 686+ 9153 FD 23            inc iy
 687+ 9155 10 F4            djnz 2B
 688+ 9157 C1               pop bc
 689+ 9158 C9               ret
 690+ 9159
 691+ 9159              ; -------------------------------------------------------------------------------------------------------------
 692+ 9159              ;
 693+ 9159              ;   13/03/23
 694+ 9159              ;
 695+ 9159              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9159              ;
 697+ 9159              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9159
 699+ 9159 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 915C 7E               ld a,(hl)
 701+ 915D A7               and a
 702+ 915E C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 915F
 704+ 915F 44               ld b,h
 705+ 9160 4D               ld c,l
 706+ 9161 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
 707+ 9164 E5               push hl
 708+ 9165 A7               and a
 709+ 9166 ED 42            sbc hl,bc
 710+ 9168 E5               push hl
 711+ 9169 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 916A
 713+ 916A E1               pop hl
 714+ 916B 54               ld d,h
 715+ 916C 5D               ld e,l
 716+ 916D 1B               dec de
 717+ 916E ED B8            lddr                                                ; Limpiamos.
 718+ 9170
 719+ 9170 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 9173 22 0F 8A         ld (Stack_snapshot_disparos),hl
 721+ 9176
 722+ 9176 C9               ret
 723+ 9177
 724+ 9177              ; -------------------------------------------------------------------------------------------------------------
 725+ 9177              ;
 726+ 9177              ;   18/07/23
 727+ 9177              ;
 728+ 9177
 729+ 9177              Motor_de_disparos
 730+ 9177
 731+ 9177              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9177
 733+ 9177 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 917A 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 917D
 736+ 917D CD 92 8D     2 call Extrae_address
 737+ 9180 7E               ld a,(hl)
 738+ 9181 A7               and a
 739+ 9182 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9184
 741+ 9184              ; ----- ----- ----- ----- ----- -----
 742+ 9184
 743+ 9184 C5               push bc
 744+ 9185 CD 49 92         call foto_disparo_a_borrar
 745+ 9188
 746+ 9188              ; Existe colisión con este disparo???
 747+ 9188
 748+ 9188 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9189 7E               ld a,(hl)
 750+ 918A 2B               dec hl
 751+ 918B E6 01            and 1
 752+ 918D 28 1D            jr z,9F
 753+ 918F
 754+ 918F              ;   En este punto:
 755+ 918F              ;
 756+ 918F              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 918F              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 918F              ;   _con la entidad).
 759+ 918F              ;
 760+ 918F              ;   Disparo_2A defw 0                                ; Control.
 761+ 918F              ;    defw 0                                          ; Puntero objeto.
 762+ 918F              ;    defw 0                                          ; Puntero de impresión.
 763+ 918F              ;    defw 0                                          ; Rutina de impresión.
 764+ 918F
 765+ 918F E5               push hl
 766+ 9190
 767+ 9190 06 04            ld b,4
 768+ 9192 23           19 inc hl
 769+ 9193 10 FD            djnz 19B
 770+ 9195
 771+ 9195 CD 92 8D         call Extrae_address
 772+ 9198 CD 73 9D         call Genera_coordenadas_disparo
 773+ 919B
 774+ 919B              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 919B
 776+ 919B 21 35 8A         ld hl,Coordenadas_disparo_certero
 777+ 919E 72               ld (hl),d
 778+ 919F 23               inc hl
 779+ 91A0 73               ld (hl),e
 780+ 91A1
 781+ 91A1              ; Elimino el disparo de la base de datos.
 782+ 91A1
 783+ 91A1 E1               pop hl
 784+ 91A2 CD C8 92         call Elimina_disparo_de_base_de_datos
 785+ 91A5 21 32 8A         ld hl,Impacto2
 786+ 91A8 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91AA
 788+ 91AA 18 06            jr 11F
 789+ 91AC
 790+ 91AC CD 72 92     9 call Mueve_disparo
 791+ 91AF CD 49 92         call foto_disparo_a_borrar
 792+ 91B2
 793+ 91B2 C1           11 pop bc
 794+ 91B3 18 04            jr 7F
 795+ 91B5
 796+ 91B5              ; ----- ----- ----- ----- ----- -----
 797+ 91B5
 798+ 91B5 ED 42        1 sbc hl,bc
 799+ 91B7 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91B9
 801+ 91B9 2A 30 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91BC 23               inc hl
 803+ 91BD 23               inc hl
 804+ 91BE 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91C1 18 BA            jr 2B
 806+ 91C3
 807+ 91C3 CD 5B 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91C6              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91C6
 810+ 91C6              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91C6
 812+ 91C6 01 8A 85         ld bc,Disparo_11
 813+ 91C9 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91CC
 815+ 91CC CD 92 8D     5 call Extrae_address
 816+ 91CF 7E               ld a,(hl)
 817+ 91D0 A7               and a
 818+ 91D1 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91D3
 820+ 91D3              ; ----- ----- ----- ----- ----- -----
 821+ 91D3
 822+ 91D3 C5               push bc
 823+ 91D4 CD 49 92         call foto_disparo_a_borrar
 824+ 91D7
 825+ 91D7              ; Existe colisión con este disparo???
 826+ 91D7
 827+ 91D7 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91D8 7E               ld a,(hl)
 829+ 91D9 2B               dec hl
 830+ 91DA E6 01            and 1
 831+ 91DC 28 4D            jr z,10F
 832+ 91DE
 833+ 91DE              ;! La colisión se produce con Amadeus???
 834+ 91DE              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91DE
 836+ 91DE E5               push hl
 837+ 91DF
 838+ 91DF 06 04            ld b,4
 839+ 91E1 23           16 inc hl
 840+ 91E2 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91E4
 842+ 91E4 CD 92 8D         call Extrae_address
 843+ 91E7 CD 73 9D         call Genera_coordenadas_disparo
 844+ 91EA
 845+ 91EA 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91EB FE 16            cp $16
 847+ 91ED 38 2A            jr c,15F
 848+ 91EF
 849+ 91EF
 850+ 91EF              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91EF
 852+ 91EF D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91F0
 854+ 91F0              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91F0
 856+ 91F0
 857+ 91F0 2A 3D 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91F3
 859+ 91F3              ; Coordenada X de Amadeus en D.
 860+ 91F3
 861+ 91F3 7D               ld a,l
 862+ 91F4 E6 1F            and $1F
 863+ 91F6 57               ld d,a
 864+ 91F7
 865+ 91F7 21 AC 85         ld hl,Amadeus_db+8
 866+ 91FA 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91FB
 868+ 91FB 21 37 8A         ld hl,Coordenadas_X_Amadeus
 869+ 91FE CD D3 92         call Guarda_coordenadas_X
 870+ 9201
 871+ 9201 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9202
 873+ 9202              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9202
 875+ 9202 06 02            ld b,2
 876+ 9204 C5           20 push bc
 877+ 9205
 878+ 9205 06 03            ld b,3
 879+ 9207 21 37 8A         ld hl,Coordenadas_X_Amadeus
 880+ 920A 7E           18 ld a,(hl)
 881+ 920B BA               cp d
 882+ 920C 20 04            jr nz,17F
 883+ 920E
 884+ 920E              ;! Colisión Amadeus !!!!!!!!!!
 885+ 920E
 886+ 920E C1               pop bc
 887+ 920F E1               pop hl
 888+ 9210 18 0D            jr 14F
 889+ 9212
 890+ 9212 23           17 inc hl
 891+ 9213 10 F5            djnz 18B
 892+ 9215
 893+ 9215 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9216
 895+ 9216 C1               pop bc
 896+ 9217 10 EB            djnz 20B
 897+ 9219
 898+ 9219
 899+ 9219              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9219              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9219
 902+ 9219 E1           15 pop hl
 903+ 921A 23               inc hl
 904+ 921B 35               dec (hl)
 905+ 921C 2B               dec hl
 906+ 921D 18 0C            jr 10F
 907+ 921F
 908+ 921F              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 921F              ; _ almacén de coordenadas_X de Amadeus.
 910+ 921F
 911+ 921F E5           14 push hl
 912+ 9220 CD C8 92         call Elimina_disparo_de_base_de_datos
 913+ 9223 21 32 8A         ld hl,Impacto2
 914+ 9226 CB CE            set 1,(hl)
 915+ 9228 E1               pop hl
 916+ 9229 18 06            jr 12F
 917+ 922B
 918+ 922B              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 922B
 920+ 922B CD 72 92     10 call Mueve_disparo
 921+ 922E CD 49 92         call foto_disparo_a_borrar
 922+ 9231 C1           12 pop bc
 923+ 9232
 924+ 9232 18 04            jr 8F
 925+ 9234
 926+ 9234              ; ----- ----- ----- ----- ----- -----
 927+ 9234
 928+ 9234 ED 42        4 sbc hl,bc
 929+ 9236 28 0A            jr z,6F
 930+ 9238
 931+ 9238 2A 2E 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 923B 23               inc hl
 933+ 923C 23               inc hl
 934+ 923D 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9240 18 8A            jr 5B
 936+ 9242
 937+ 9242 CD 54 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9245 CD 0F 93         call Limpia_Coordenadas_X
 939+ 9248 C9               ret
 940+ 9249
 941+ 9249              ; ------------------------------------------------------------------
 942+ 9249
 943+ 9249              foto_disparo_a_borrar
 944+ 9249
 945+ 9249 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 924A A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 924B C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 924C
 949+ 924C E5               push hl
 950+ 924D 23               inc hl
 951+ 924E 23               inc hl
 952+ 924F ED 73 09 8A      ld (Stack),sp
 953+ 9253 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9254 FD E1            pop iy
 955+ 9256 DD E1            pop ix
 956+ 9258 E1               pop hl
 957+ 9259 ED 7B 09 8A      ld sp,(Stack)
 958+ 925D 3A F8 89         ld a,(Ctrl_1)
 959+ 9260 CB C7            set 0,a
 960+ 9262 32 F8 89         ld (Ctrl_1),a
 961+ 9265 CD A0 7F         call Guarda_foto_registros
 962+ 9268 3A F8 89         ld a,(Ctrl_1)
 963+ 926B CB 87            res 0,a
 964+ 926D 32 F8 89         ld (Ctrl_1),a
 965+ 9270 E1               pop hl
 966+ 9271 C9               ret
 967+ 9272
 968+ 9272              ;---------------------------------------------------
 969+ 9272              ;
 970+ 9272              ;   18/07/23
 971+ 9272              ;
 972+ 9272
 973+ 9272              Mueve_disparo
 974+ 9272
 975+ 9272              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9272              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9272              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9272
 979+ 9272 E5               push hl
 980+ 9273
 981+ 9273 7E               ld a,(hl)
 982+ 9274
 983+ 9274 06 04            ld b,4
 984+ 9276 23           1 inc hl
 985+ 9277 10 FD            djnz 1B
 986+ 9279
 987+ 9279              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9279
 989+ 9279 CD 92 8D         call Extrae_address
 990+ 927C
 991+ 927C E6 01            and 1
 992+ 927E 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9280
 994+ 9280              ; Disparo hacia arriba, (Amadeus).
 995+ 9280
 996+ 9280              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9280              ; _ de la dificultad.
 998+ 9280
 999+ 9280 CD 00 97         call PreviousScan
1000+ 9283 CD 00 97         call PreviousScan
1001+ 9286 CD 00 97         call PreviousScan
1002+ 9289 CD 00 97         call PreviousScan
1003+ 928C
1004+ 928C              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 928C
1006+ 928C 7C               ld a,h
1007+ 928D FE 40            cp $40
1008+ 928F 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9291
1010+ 9291              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9291
1012+ 9291 EB               ex de,hl
1013+ 9292 06 04            ld b,4
1014+ 9294 2B           6 dec hl
1015+ 9295 10 FD            djnz 6B
1016+ 9297
1017+ 9297 CD C8 92         call Elimina_disparo_de_base_de_datos
1018+ 929A E1               pop hl
1019+ 929B 18 10            jr 7F
1020+ 929D
1021+ 929D              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 929D              ; HL contiene el puntero de impresión del disparo.
1023+ 929D              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 929D
1025+ 929D D5           3 push de
1026+ 929E C5               push bc
1027+ 929F
1028+ 929F CD 67 90         call Comprueba_Colision
1029+ 92A2
1030+ 92A2              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92A2
1032+ 92A2 78               ld a,b
1033+ 92A3
1034+ 92A3 C1               pop bc
1035+ 92A4 D1               pop de
1036+ 92A5
1037+ 92A5 EB               ex de,hl
1038+ 92A6
1039+ 92A6 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92A7 23               inc hl                                      ; _ movimiento.
1041+ 92A8 72               ld (hl),d
1042+ 92A9
1043+ 92A9 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92AA
1045+ 92AA 23               inc hl                                      ; _ en curso.
1046+ 92AB 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92AC 2B               dec hl
1048+ 92AD
1049+ 92AD C9           7 ret
1050+ 92AE
1051+ 92AE              ; Disparo hacia abajo, (Entidad).
1052+ 92AE
1053+ 92AE 3A 3F 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92B1 47               ld b,a
1055+ 92B2
1056+ 92B2 CD F1 96     4 call NextScan
1057+ 92B5 10 FB            djnz 4B
1058+ 92B7
1059+ 92B7              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92B7
1061+ 92B7 7C               ld a,h
1062+ 92B8 FE 58            cp $58
1063+ 92BA 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92BC
1065+ 92BC EB               ex de,hl
1066+ 92BD 06 04            ld b,4
1067+ 92BF 2B           5 dec hl
1068+ 92C0 10 FD            djnz 5B
1069+ 92C2
1070+ 92C2 CD C8 92         call Elimina_disparo_de_base_de_datos
1071+ 92C5 E1               pop hl
1072+ 92C6 18 E5            jr 7B
1073+ 92C8
1074+ 92C8              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92C8
1076+ 92C8 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92CB AF               xor a
1078+ 92CC 77               ld (hl),a
1079+ 92CD 54               ld d,h
1080+ 92CE 5D               ld e,l
1081+ 92CF 13               inc de
1082+ 92D0 ED B0            ldir
1083+ 92D2 C9               ret
1084+ 92D3
1085+ 92D3              ; -----------------------------------------------------------------
1086+ 92D3              ;
1087+ 92D3              ;   19/7/23
1088+ 92D3              ;
1089+ 92D3              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92D3              ;
1091+ 92D3              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92D3              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92D3              ;
1094+ 92D3              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92D3              ;
1096+ 92D3              ;   INPUTS:
1097+ 92D3              ;
1098+ 92D3              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92D3              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92D3
1101+ 92D3              ;   MODIFICA: A, HL, BC y DE.
1102+ 92D3
1103+ 92D3              Guarda_coordenadas_X
1104+ 92D3
1105+ 92D3 7B               ld a,e
1106+ 92D4 A7               and a
1107+ 92D5 20 04            jr nz,1F
1108+ 92D7
1109+ 92D7 06 02            ld b,2
1110+ 92D9 18 02            jr 2F
1111+ 92DB
1112+ 92DB 06 03        1 ld b,3
1113+ 92DD 72           2 ld (hl),d
1114+ 92DE 23               inc hl
1115+ 92DF 14               inc d
1116+ 92E0 10 FB            djnz 2B
1117+ 92E2
1118+ 92E2 C9               ret
1119+ 92E3
1120+ 92E3              ; -----------------------------------------------------------------
1121+ 92E3              ;
1122+ 92E3              ;   12/04/23
1123+ 92E3              ;
1124+ 92E3
1125+ 92E3 3A 32 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92E6 A7               and a
1127+ 92E7 C8               ret z
1128+ 92E8
1129+ 92E8 FE 04            cp 4
1130+ 92EA 20 09            jr nz,1F
1131+ 92EC
1132+ 92EC
1133+ 92EC              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92EC
1135+ 92EC CD 08 91         call Detecta_colision_nave_entidad
1136+ 92EF
1137+ 92EF 21 32 8A         ld hl,Impacto2
1138+ 92F2 CB 5E            bit 3,(hl)
1139+ 92F4 C0               ret nz                                               ; Existe colisión, RET.
1140+ 92F5
1141+ 92F5              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92F5              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92F5
1144+ 92F5 21 32 8A     1 ld hl,Impacto2
1145+ 92F8 CB 4E            bit 1,(hl)
1146+ 92FA 28 07            jr z,2F
1147+ 92FC
1148+ 92FC 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92FF 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9301 18 0B            jr 3F
1151+ 9303
1152+ 9303 21 32 8A     2 ld hl,Impacto2
1153+ 9306 CB 46            bit 0,(hl)
1154+ 9308 C8               ret z
1155+ 9309
1156+ 9309              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9309
1158+ 9309 21 F8 89         ld hl,Ctrl_1
1159+ 930C CB D6            set 2,(hl)
1160+ 930E
1161+ 930E C9           3 ret
1162+ 930F
1163+ 930F              ; -----------------------------------------------------------------
1164+ 930F              ;
1165+ 930F              ;   19/7/23
1166+ 930F              ;
1167+ 930F              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 930F
1169+ 930F AF           Limpia_Coordenadas_X xor a
1170+ 9310 06 06            ld b,6
1171+ 9312 21 37 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9315 77           1 ld (hl),a
1173+ 9316 23               inc hl
1174+ 9317 10 FC            djnz 1B
1175+ 9319 C9               ret
1176+ 931A
1177+ 931A              ; -----------------------------------------------------------------
1178+ 931A              ;
1179+ 931A              ;   25/04/23
1180+ 931A              ;
1181+ 931A
1182+ 931A              Determina_resultado_comparativa
1183+ 931A
1184+ 931A              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 931A              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 931A              ;
1187+ 931A              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 931A              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 931A              ;
1190+ 931A              ;   SBC HL,DE
1191+ 931A
1192+ 931A              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 931A              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 931A
1195+ 931A              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 931A              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 931A
1198+ 931A
1199+ 931A 3A C9 89         ld a,(Cuad_objeto)
1200+ 931D FE 02            cp 2
1201+ 931F 28 26            jr z,2F
1202+ 9321 38 24            jr c,2F
1203+ 9323
1204+ 9323              ; Cuadrantes 3º y 4º
1205+ 9323
1206+ 9323 E6 01            and 1
1207+ 9325 28 10            jr z,4F
1208+ 9327
1209+ 9327              ; Cuadrante 3º
1210+ 9327
1211+ 9327 7C               ld a,h
1212+ 9328 06 00            ld b,0
1213+ 932A
1214+ 932A CD B5 93         call Compara_cositas_H3
1215+ 932D
1216+ 932D 04               inc b
1217+ 932E 05               dec b
1218+ 932F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9330
1220+ 9330 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9331 06 00            ld b,0
1222+ 9333
1223+ 9333 CD C7 93         call Compara_cositas_L3
1224+ 9336 C9               ret
1225+ 9337
1226+ 9337              ; Cuadrante 4º
1227+ 9337
1228+ 9337 7C           4 ld a,h
1229+ 9338 06 00            ld b,0
1230+ 933A
1231+ 933A CD D9 93         call Compara_cositas_H4
1232+ 933D
1233+ 933D 04               inc b
1234+ 933E 05               dec b
1235+ 933F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9340
1237+ 9340 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9341 06 00            ld b,0
1239+ 9343
1240+ 9343 CD EF 93         call Compara_cositas_L4
1241+ 9346 C9               ret
1242+ 9347
1243+ 9347              ; Cuadrantes 1º y 2º.
1244+ 9347
1245+ 9347 28 10        2 jr z,3F
1246+ 9349
1247+ 9349              ; 1er Cuadrante
1248+ 9349
1249+ 9349 7C               ld a,h
1250+ 934A 06 00            ld b,0
1251+ 934C
1252+ 934C CD 8D 93         call Compara_cositas_H1
1253+ 934F
1254+ 934F 04               inc b
1255+ 9350 05               dec b
1256+ 9351 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9352
1258+ 9352 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9353 06 00            ld b,0
1260+ 9355
1261+ 9355 CD A3 93         call Compara_cositas_L1
1262+ 9358 C9               ret
1263+ 9359
1264+ 9359
1265+ 9359              ; 2º Cuadrante
1266+ 9359
1267+ 9359 7C           3 ld a,h
1268+ 935A 06 00            ld b,0
1269+ 935C
1270+ 935C CD 69 93         call Compara_cositas_H2
1271+ 935F
1272+ 935F 04               inc b
1273+ 9360 05               dec b
1274+ 9361 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9362
1276+ 9362 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9363 06 00            ld b,0
1278+ 9365
1279+ 9365 CD 7B 93         call Compara_cositas_L2
1280+ 9368 C9               ret
1281+ 9369
1282+ 9369 A7           Compara_cositas_H2 and a
1283+ 936A 28 0D            jr z,1F
1284+ 936C              ;    cp $fd
1285+ 936C              ;    jr z,1F
1286+ 936C              ;    cp $fe
1287+ 936C              ;    jr z,1F
1288+ 936C FE FF            cp $ff
1289+ 936E 28 09            jr z,1F
1290+ 9370 FE 01            cp $01
1291+ 9372 28 05            jr z,1F
1292+ 9374 FE 02            cp $02
1293+ 9376 28 01            jr z,1F
1294+ 9378 C0               ret nz
1295+ 9379 04           1 inc b
1296+ 937A C9               ret
1297+ 937B
1298+ 937B A7           Compara_cositas_L2 and a
1299+ 937C 28 0D            jr z,1F
1300+ 937E              ;    cp $fd
1301+ 937E              ;    jr z,1F
1302+ 937E FE FE            cp $fe
1303+ 9380 28 09            jr z,1F
1304+ 9382 FE FF            cp $ff
1305+ 9384 28 05            jr z,1F
1306+ 9386 FE 01            cp $01
1307+ 9388 28 01            jr z,1F
1308+ 938A              ;    cp $02
1309+ 938A              ;    jr z,1F
1310+ 938A C0               ret nz
1311+ 938B 04           1 inc b
1312+ 938C C9               ret
1313+ 938D
1314+ 938D A7           Compara_cositas_H1 and a
1315+ 938E 28 11            jr z,1F
1316+ 9390              ;    cp $fd
1317+ 9390              ;    jr z,1F
1318+ 9390              ;    cp $fe
1319+ 9390              ;    jr z,1F
1320+ 9390 FE FF            cp $ff
1321+ 9392 28 0D            jr z,1F
1322+ 9394 FE 01            cp $01
1323+ 9396 28 09            jr z,1F
1324+ 9398 FE 02            cp $02
1325+ 939A 28 05            jr z,1F
1326+ 939C FE 03            cp $03
1327+ 939E 28 01            jr z,1F
1328+ 93A0 C0               ret nz
1329+ 93A1 04           1 inc b
1330+ 93A2 C9               ret
1331+ 93A3
1332+ 93A3 A7           Compara_cositas_L1 and a
1333+ 93A4 28 0D            jr z,1F
1334+ 93A6              ;    cp $fd
1335+ 93A6              ;    jr z,1F
1336+ 93A6              ;    cp $fe
1337+ 93A6              ;    jr z,1F
1338+ 93A6              ;    cp $ff
1339+ 93A6              ;    jr z,1F
1340+ 93A6 FE 01            cp $01
1341+ 93A8 28 09            jr z,1F
1342+ 93AA FE 02            cp $02
1343+ 93AC 28 05            jr z,1F
1344+ 93AE FE 03            cp $03
1345+ 93B0 28 01            jr z,1F
1346+ 93B2 C0               ret nz
1347+ 93B3 04           1 inc b
1348+ 93B4 C9               ret
1349+ 93B5
1350+ 93B5 A7           Compara_cositas_H3 and a
1351+ 93B6 28 0D            jr z,1F
1352+ 93B8              ;    cp $fd
1353+ 93B8              ;    jr z,1F
1354+ 93B8 FE FE            cp $fe
1355+ 93BA 28 09            jr z,1F
1356+ 93BC FE FF            cp $ff
1357+ 93BE 28 05            jr z,1F
1358+ 93C0 FE 01            cp $01
1359+ 93C2 28 01            jr z,1F
1360+ 93C4              ;    cp $02
1361+ 93C4              ;    jr z,1F
1362+ 93C4              ;    cp $03
1363+ 93C4              ;    jr z,1F
1364+ 93C4 C0               ret nz
1365+ 93C5 04           1 inc b
1366+ 93C6 C9               ret
1367+ 93C7
1368+ 93C7 A7           Compara_cositas_L3 and a
1369+ 93C8 28 0D            jr z,1F
1370+ 93CA              ;    cp $fd
1371+ 93CA              ;    jr z,1F
1372+ 93CA              ;    cp $fe
1373+ 93CA              ;    jr z,1F
1374+ 93CA              ;    cp $ff
1375+ 93CA              ;    jr z,1F
1376+ 93CA FE 01            cp $01
1377+ 93CC 28 09            jr z,1F
1378+ 93CE FE 02            cp $02
1379+ 93D0 28 05            jr z,1F
1380+ 93D2 FE 03            cp $03
1381+ 93D4 28 01            jr z,1F
1382+ 93D6 C0               ret nz
1383+ 93D7 04           1 inc b
1384+ 93D8 C9               ret
1385+ 93D9
1386+ 93D9 A7           Compara_cositas_H4 and a
1387+ 93DA 28 11            jr z,1F
1388+ 93DC FE FD            cp $fd
1389+ 93DE 28 0D            jr z,1F
1390+ 93E0 FE FE            cp $fe
1391+ 93E2 28 09            jr z,1F
1392+ 93E4 FE FF            cp $ff
1393+ 93E6 28 05            jr z,1F
1394+ 93E8 FE 01            cp $01
1395+ 93EA 28 01            jr z,1F
1396+ 93EC              ;    cp $02
1397+ 93EC              ;    jr z,1F
1398+ 93EC              ;    cp $03
1399+ 93EC              ;    jr z,1F
1400+ 93EC C0               ret nz
1401+ 93ED 04           1 inc b
1402+ 93EE C9               ret
1403+ 93EF
1404+ 93EF A7           Compara_cositas_L4 and a
1405+ 93F0 28 0D            jr z,1F
1406+ 93F2              ;    cp $fd
1407+ 93F2              ;    jr z,1F
1408+ 93F2 FE FE            cp $fe
1409+ 93F4 28 09            jr z,1F
1410+ 93F6 FE FF            cp $ff
1411+ 93F8 28 05            jr z,1F
1412+ 93FA FE 01            cp $01
1413+ 93FC 28 01            jr z,1F
1414+ 93FE              ;    cp $02
1415+ 93FE              ;    jr z,1F
1416+ 93FE              ;    cp $03
1417+ 93FE              ;    jr z,1F
1418+ 93FE C0               ret nz
1419+ 93FF 04           1 inc b
1420+ 9400 C9               ret
# file closed: Disparo.asm
1441  9401              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9401              ; ******************************************************************************************************************************************************************************************
   2+ 9401              ;
   3+ 9401              ; 26/06/23
   4+ 9401              ;
   5+ 9401              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9401
   7+ 9401 CD E5 96     Draw call Prepara_draw
   8+ 9404 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9405 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9406 28 05        	jr z,2F
  11+ 9408
  12+ 9408 3A C9 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 940B 18 0C        	jr 1F
  14+ 940D
  15+ 940D 2A C7 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9410 22 B7 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9413 CD A2 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9416              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9416 CD EF 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9419
  21+ 9419 3A E3 89     1 ld a,(Ctrl_0)
  22+ 941C CB 6F        	bit 5,a
  23+ 941E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9420
  25+ 9420 CD 38 94     	call Comprueba_limite_horizontal
  26+ 9423 CD C8 94     	call Comprueba_limite_vertical
  27+ 9426
  28+ 9426              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9426              ; -----------------------
  30+ 9426              ; -----------------------
  31+ 9426              ; -----------------------
  32+ 9426
  33+ 9426 CD 15 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9429 CD 4C 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 942C CD AB 96     	call Define_rutina_de_impresion
  36+ 942F
  37+ 942F 3A E3 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9432 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9434 32 E3 89     	ld (Ctrl_0),a
  40+ 9437
  41+ 9437 C9           	ret
  42+ 9438
  43+ 9438              ; *******************************************************************************************************************************************************************************************
  44+ 9438              ;	21/01/23
  45+ 9438              ;
  46+ 9438              ; 	Comprueba_limite_horizontal.
  47+ 9438              ;
  48+ 9438              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9438              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9438              ;
  51+ 9438              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9438              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9438              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9438              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9438
  56+ 9438
  57+ 9438
  58+ 9438 3A E3 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 943B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 943D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 943F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9441 32 E3 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9444 18 09            jr 6F
  64+ 9446 CB 5F        1 bit 3,a
  65+ 9448 28 0A            jr z,2F
  66+ 944A E6 F7            and $f7
  67+ 944C 32 E3 89         ld (Ctrl_0),a
  68+ 944F CD A2 95     6 call Inicializacion
  69+ 9452 18 5B            jr 5F
  70+ 9454 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9455
  72+ 9455              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9455              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9455
  75+ 9455 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9456 2A F3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9459 CD BD 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 945C 67           	ld h,a
  79+ 945D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 945E CD BD 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9461 67           	ld h,a
  82+ 9462 A7           	and a
  83+ 9463 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9465 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9466 3A C9 89     	ld a,(Cuad_objeto)
  86+ 9469 FE 02        	cp 2
  87+ 946B 38 1E        	jr c,3F
  88+ 946D 28 1C        	jr z,3F
  89+ 946F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9470 28 23            jr z,7F
  91+ 9472 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9474 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9476 E1           	pop hl
  94+ 9477
  95+ 9477              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9477              ; _para indicar con E="2" en caso necesario.
  97+ 9477
  98+ 9477 E5               push hl
  99+ 9478 C5               push bc
 100+ 9479 CD BD 99     	call calcula_tercio
 101+ 947C FE 01        	cp 1
 102+ 947E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9480 CD B0 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9483 28 26            jr z,9F
 105+ 9485 38 24            jr c,9F
 106+ 9487 1E 00        11 ld e,0
 107+ 9489 18 22            jr 8F
 108+ 948B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 948C 28 07        	jr z, 7F
 110+ 948E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9490 1E 00         	ld e,0
 112+ 9492 E1           	pop hl
 113+ 9493 18 04        	jr 4F
 114+ 9495 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9497 18 15            jr 10F
 116+ 9499
 117+ 9499              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9499              ; _para indicar con E="2" en caso necesario.
 119+ 9499
 120+ 9499 E5           4 push hl
 121+ 949A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 949B CD BD 99     	call calcula_tercio
 123+ 949E FE 01        	cp 1
 124+ 94A0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94A2 CD B0 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94A5 28 04            jr z,9F
 127+ 94A7 30 02            jr nc,9F
 128+ 94A9 18 02        	jr 8F
 129+ 94AB 1E 02        9 ld e,2
 130+ 94AD C1           8 pop bc
 131+ 94AE E1           10 pop hl
 132+ 94AF C9           5 ret
 133+ 94B0
 134+ 94B0              ; --------------------
 135+ 94B0              ;
 136+ 94B0              ; 25/08/22
 137+ 94B0
 138+ 94B0 CD BD 99     Comprueba_centro call calcula_tercio
 139+ 94B3 67               ld h,a
 140+ 94B4 08           	ex af,af
 141+ 94B5 FE 02        	cp 2
 142+ 94B7 38 07        	jr c,1F
 143+ 94B9 28 05        	jr z,1F
 144+ 94BB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94BE 18 03        	jr 2F
 146+ 94C0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94C3 08           2 ex af,af
 148+ 94C4 A7               and a
 149+ 94C5 ED 42            sbc hl,bc
 150+ 94C7 C9               ret
 151+ 94C8
 152+ 94C8              ; *********************************************************************************************************************************************************************************************
 153+ 94C8              ;
 154+ 94C8              ;   16/8/22
 155+ 94C8              ;
 156+ 94C8              ;	Comprueba_limite_vertical
 157+ 94C8              ;
 158+ 94C8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94C8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94C8              ;
 161+ 94C8
 162+ 94C8 2A B7 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94CB 7D           	ld a,l
 164+ 94CC E6 1F        	and $1F
 165+ 94CE 57           	ld d,a
 166+ 94CF 3A F5 89     	ld a,(Limite_vertical)
 167+ 94D2 BA           	cp d 											; Límite - Posición.
 168+ 94D3 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94D4 3A C9 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94D7 CB 47        	bit 0,a
 171+ 94D9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94DB
 173+ 94DB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94DB
 175+ 94DB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94DC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94DE
 178+ 94DE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94DE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94DE
 181+ 94DE 3A BB 89         ld a,(Coordenada_X)
 182+ 94E1 16 0F            ld d,Centro_izquierda
 183+ 94E3 A7               and a
 184+ 94E4 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94E5 28 1E            jr z,3F
 186+ 94E7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94E9              ;                                                    ; _salimos sin modificar nada.
 188+ 94E9 18 0E            jr 2F
 189+ 94EB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94EC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94EE
 192+ 94EE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94EE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94EE
 195+ 94EE 3A BB 89         ld a,(Coordenada_X)
 196+ 94F1 16 10            ld d,Centro_derecha
 197+ 94F3 A7               and a
 198+ 94F4 92               sub d
 199+ 94F5 28 0E            jr z,3F
 200+ 94F7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94F9              ;                                                    ; _salimos sin modificar nada.
 202+ 94F9 CB 43        2 bit 0,e
 203+ 94FB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94FD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94FE CD 92 95         call Modificaccionne
 206+ 9501 C1           	pop bc
 207+ 9502 CD A2 95         call Inicializacion
 208+ 9505 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9506
 210+ 9506              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9506
 212+ 9506 C5           4 push bc
 213+ 9507 01 B6 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 950A 0A           	ld a,(bc)
 215+ 950B 3D           	dec a
 216+ 950C 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 950D 7D           	ld a,l
 218+ 950E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 950F CB 47        	bit 0,a
 220+ 9511 28 03        	jr z,5F
 221+ 9513 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9514 18 2E        	jr 7F
 223+ 9516
 224+ 9516              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9516
 226+ 9516 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9517 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9518 3A E3 89     	ld a,(Ctrl_0)
 229+ 951B CB 4F        	bit 1,a
 230+ 951D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 951F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9520
 233+ 9520              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9520
 235+ 9520 1C               inc e
 236+ 9521 1D               dec e
 237+ 9522 20 07            jr nz,12F
 238+ 9524 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9525 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9526 22 B7 89     	ld (Posicion_actual),hl
 241+ 9529 18 44        13 jr 9F
 242+ 952B CB 43        12 bit 0,e
 243+ 952D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 952F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 952F C1           	pop bc
 246+ 9530 18 D3        	jr 3B
 247+ 9532 80           14 add b
 248+ 9533 6F               ld l,a
 249+ 9534 22 B7 89     	ld (Posicion_actual),hl
 250+ 9537 CD 92 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 953A 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 953C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 953E 32 E3 89         ld (Ctrl_0),a
 254+ 9541 F1           	pop af
 255+ 9542 18 2B        	jr 9F
 256+ 9544
 257+ 9544              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9544
 259+ 9544 F5           7 push af
 260+ 9545 3A E3 89     	ld a,(Ctrl_0)
 261+ 9548 CB 47        	bit 0,a
 262+ 954A 20 1D        	jr nz,8F
 263+ 954C F1           	pop af
 264+ 954D
 265+ 954D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 954D
 267+ 954D 1C           	inc e
 268+ 954E 1D               dec e
 269+ 954F 20 07            jr nz,10F
 270+ 9551 90           	sub b
 271+ 9552 6F               ld l,a
 272+ 9553 22 B7 89     	ld (Posicion_actual),hl
 273+ 9556 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9558              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9558 CB 43        10 bit 0,e
 276+ 955A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 955C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 955C C1           	pop bc
 279+ 955D 18 A6        	jr 3B
 280+ 955F 90           16 sub b
 281+ 9560 6F               ld l,a
 282+ 9561 22 B7 89     	ld (Posicion_actual),hl
 283+ 9564 CD 92 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9567 18 06            jr 9F
 285+ 9569 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 956B 32 E3 89         ld (Ctrl_0),a
 287+ 956E F1           	pop af
 288+ 956F C1           9 pop bc
 289+ 9570 1E 00        	ld e,0
 290+ 9572 CD A2 95         call Inicializacion
 291+ 9575 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9576 08           	ex af,af
 293+ 9577 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9578 18 8B            jr 3B
 295+ 957A
 296+ 957A              ; --------------------
 297+ 957A
 298+ 957A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 957C CD 00 97     1 call PreviousScan
 300+ 957F 10 FB            djnz 1B
 301+ 9581 22 B7 89     	ld (Posicion_actual),hl
 302+ 9584 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9585 C9           	ret
 304+ 9586
 305+ 9586              ; --------------------
 306+ 9586
 307+ 9586 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9588 CD F1 96     1 call NextScan
 309+ 958B 10 FB            djnz 1B
 310+ 958D 22 B7 89     	ld (Posicion_actual),hl
 311+ 9590 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9591 C9           	ret
 313+ 9592
 314+ 9592              ; --------------------
 315+ 9592              ;
 316+ 9592              ;	22/01/23
 317+ 9592              ;
 318+ 9592              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9592              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9592              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9592
 322+ 9592
 323+ 9592              Modificaccionne
 324+ 9592
 325+ 9592 3A C9 89     	ld a,(Cuad_objeto)
 326+ 9595 FE 02        	cp 2
 327+ 9597 CC 7A 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 959A DC 7A 95         call c,Modifica_Pos_actual
 329+ 959D C8           	ret z
 330+ 959E CD 86 95         call Modifica_Pos_actual2
 331+ 95A1 C9               ret
 332+ 95A2
 333+ 95A2              ; *************************************************************************************************************************************************************************************************
 334+ 95A2              ;
 335+ 95A2              ;	13/8/22
 336+ 95A2              ;
 337+ 95A2              ;	Inicializacion
 338+ 95A2              ;
 339+ 95A2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95A2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95A2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95A2              ;
 343+ 95A2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95A2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95A2              ;	_ desaparece/aparece.
 346+ 95A2
 347+ 95A2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95A2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95A2              ;
 350+ 95A2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95A2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95A2              ; 		   [E] ="0"
 353+ 95A2
 354+ 95A2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95A2
 356+ 95A2 CD BD 99     Inicializacion call calcula_tercio
 357+ 95A5 28 36        	jr z,primit
 358+ 95A7 E6 02        	and 2
 359+ 95A9 20 07        	jr nz,segmit
 360+ 95AB 7D           	ld a,l
 361+ 95AC FE 7F        	cp $7f
 362+ 95AE 38 2D        	jr c,primit
 363+ 95B0 28 2B        	jr z,primit
 364+ 95B2 CD 0F 96     segmit call column
 365+ 95B5 38 13        	jr c,tercuad
 366+ 95B7 3E 04        cuarcuad ld a,4
 367+ 95B9 32 C9 89     	ld (Cuad_objeto),a
 368+ 95BC 21 20 48     	ld hl,$4820
 369+ 95BF 22 F3 89     	ld (Limite_horizontal),hl
 370+ 95C2 21 F5 89     	ld hl,Limite_vertical
 371+ 95C5 36 0D        	ld (hl),$0d
 372+ 95C7 08           	ex af,af
 373+ 95C8 18 3C        	jr 1F
 374+ 95CA              tercuad
 375+ 95CA 3E 03        	ld a,3
 376+ 95CC 32 C9 89     	ld (Cuad_objeto),a
 377+ 95CF 21 20 48     	ld hl,$4820
 378+ 95D2 22 F3 89     	ld (Limite_horizontal),hl
 379+ 95D5 21 F5 89     	ld hl,Limite_vertical
 380+ 95D8 36 12        	ld (hl),$12
 381+ 95DA 08           	ex af,af
 382+ 95DB 18 29        	jr 1F
 383+ 95DD CD 0F 96     primit call column
 384+ 95E0 38 13        	jr c, primcuad
 385+ 95E2              segcuad
 386+ 95E2 3E 02        	ld a,2
 387+ 95E4 32 C9 89     	ld (Cuad_objeto),a
 388+ 95E7 21 C0 4F     	ld hl,$4fc0
 389+ 95EA 22 F3 89     	ld (Limite_horizontal),hl
 390+ 95ED 21 F5 89     	ld hl,Limite_vertical
 391+ 95F0 36 0D        	ld (hl),$0d
 392+ 95F2 08           	ex af,af
 393+ 95F3 18 11        	jr 1F
 394+ 95F5              primcuad
 395+ 95F5 3E 01        	ld a,1
 396+ 95F7 32 C9 89     	ld (Cuad_objeto),a
 397+ 95FA 21 C0 4F     	ld hl,$4fc0
 398+ 95FD 22 F3 89     	ld (Limite_horizontal),hl
 399+ 9600 21 F5 89     	ld hl,Limite_vertical
 400+ 9603 36 12        	ld (hl),$12
 401+ 9605 08           	ex af,af
 402+ 9606 CD 48 9D     1 call Genera_coordenadas
 403+ 9609 21 E3 89     	ld hl,Ctrl_0
 404+ 960C CB EE        	set 5,(hl)
 405+ 960E C9           	ret
 406+ 960F
 407+ 960F              ; ------------------------------------------------------------------------------------------------------------------
 408+ 960F
 409+ 960F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 960F              ;
 411+ 960F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 960F
 413+ 960F 7D           column ld a,l
 414+ 9610 E6 1F        	and $1f
 415+ 9612 FE 10         	cp $10
 416+ 9614 C9            	ret
 417+ 9615
 418+ 9615              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9615              ;
 420+ 9615              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9615              ;
 422+ 9615              ; 14/12/22
 423+ 9615              ;
 424+ 9615              ;	Modifica: A y BC.
 425+ 9615
 426+ 9615 3A C9 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9618 E6 01        	and 1
 428+ 961A 28 17        	jr z,1F
 429+ 961C
 430+ 961C              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 961C
 432+ 961C 3A BB 89     	ld a,(Coordenada_X)
 433+ 961F 47           	ld b,a
 434+ 9620 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9621 79           	ld a,c
 436+ 9622 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9623 38 08        	jr c,2F
 438+ 9625 47           	ld b,a
 439+ 9626 79           	ld a,c
 440+ 9627 90           	sub b
 441+ 9628 32 F2 89     	ld (Columnas),a
 442+ 962B 18 1B        	jr 4F
 443+ 962D 79           2 ld a,c
 444+ 962E 32 F2 89     	ld (Columnas),a
 445+ 9631 18 15        	jr 4F
 446+ 9633
 447+ 9633              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9633
 449+ 9633 3A BB 89     1 ld a,(Coordenada_X)
 450+ 9636 81           	add c
 451+ 9637 3D           	dec a
 452+ 9638 D6 1F        	sub $1f
 453+ 963A 38 08        	jr c,3F
 454+ 963C 47           	ld b,a
 455+ 963D 79           	ld a,c
 456+ 963E 90           	sub b
 457+ 963F 32 F2 89     	ld (Columnas),a
 458+ 9642 18 04        	jr 4F
 459+ 9644 79           3 ld a,c
 460+ 9645 32 F2 89     	ld (Columnas),a
 461+ 9648 D9           4 exx
 462+ 9649 4F           	ld c,a
 463+ 964A D9           	exx
 464+ 964B C9            ret
 465+ 964C
 466+ 964C              ; --------------------------------------------------------------------------------------------------------------------
 467+ 964C              ;
 468+ 964C              ;   19/7/23
 469+ 964C              ;
 470+ 964C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 964C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 964C              ;
 473+ 964C              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 964C              ;			HL e IY Contienen (Puntero_objeto).
 475+ 964C              ;
 476+ 964C              ;	DESTRUYE: HL,B Y A.
 477+ 964C
 478+ 964C 3A C9 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 964F FE 02        	cp 2
 480+ 9651 38 18        	jr c,1F
 481+ 9653 28 16        	jr z,1F
 482+ 9655 E6 01        	and 1
 483+ 9657 28 0D        	jr z,3F
 484+ 9659
 485+ 9659              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9659
 487+ 9659 CD 9F 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 965C
 489+ 965C 7D           9 ld a,l
 490+ 965D E6 1F        	and $1f
 491+ 965F 28 2A        	jr z,7F
 492+ 9661 2B           	dec hl
 493+ 9662 10 F8        	djnz 9B
 494+ 9664 18 25        	jr 7F
 495+ 9666
 496+ 9666              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9666
 498+ 9666 2A B7 89     3 ld hl,(Posicion_actual)
 499+ 9669 18 20        	jr 7F
 500+ 966B
 501+ 966B 28 14        1 jr z,2F
 502+ 966D
 503+ 966D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 966D
 505+ 966D CD 9F 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9670
 507+ 9670 7D           4 ld a,l
 508+ 9671 E6 1F        	and $1f
 509+ 9673 28 03        	jr z,6F
 510+ 9675 2B           	dec hl
 511+ 9676 10 F8        	djnz 4B
 512+ 9678 06 0F        6 ld b,15
 513+ 967A CD 00 97     5 call PreviousScan
 514+ 967D 10 FB        	djnz 5B
 515+ 967F 18 0A        	jr 7F
 516+ 9681
 517+ 9681              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9681
 519+ 9681 CD 9F 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9684 06 0F        	ld b,15
 521+ 9686 CD 00 97     8 call PreviousScan
 522+ 9689 10 FB        	djnz 8B
 523+ 968B
 524+ 968B E5           7 push hl
 525+ 968C DD E1        	pop ix
 526+ 968E
 527+ 968E 2A B9 89     	ld hl,(Puntero_objeto)
 528+ 9691 E5           	push hl
 529+ 9692 FD E1        	pop iy
 530+ 9694
 531+ 9694              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9694
 533+ 9694 3A E3 89     	ld a,(Ctrl_0)
 534+ 9697 CB 77        	bit 6,a
 535+ 9699 C8           	ret z
 536+ 969A
 537+ 969A              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 969A              ; _ entidad / Amadeus´.
 539+ 969A
 540+ 969A DD 22 3D 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 969E
 542+ 969E C9           	ret
 543+ 969F
 544+ 969F              ; --------------------------------------------------------------------------------------------------------------------
 545+ 969F              ;
 546+ 969F              ;	2/1/23
 547+ 969F              ;
 548+ 969F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 969F              ;
 550+ 969F              ;	Tras esta rutina tenemos:
 551+ 969F              ;
 552+ 969F              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 969F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 969F              ;
 555+ 969F              ;	DESTRUYE!!!!! HL,B y A.
 556+ 969F
 557+ 969F 2A B7 89     Operandos ld hl,(Posicion_actual)
 558+ 96A2 3A F2 89     	ld a,(Columnas)
 559+ 96A5 3D           	dec a
 560+ 96A6 20 01        	jr nz,1F
 561+ 96A8 3C           	inc a
 562+ 96A9 47           1 ld b,a
 563+ 96AA C9           	ret
 564+ 96AB
 565+ 96AB              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96AB              ;
 567+ 96AB              ;	3/1/23
 568+ 96AB              ;
 569+ 96AB              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96AB              ;
 571+ 96AB              ;	Destruye: A,B,HL y DE.
 572+ 96AB
 573+ 96AB              Define_rutina_de_impresion
 574+ 96AB
 575+ 96AB 3A B6 89     	ld a,(Columns)
 576+ 96AE 47           	ld b,a
 577+ 96AF 3A F2 89     	ld a,(Columnas)
 578+ 96B2 B8           	cp b
 579+ 96B3 20 0D        	jr nz,2f
 580+ 96B5
 581+ 96B5              ;	La entidad se imprime entera.
 582+ 96B5
 583+ 96B5 21 8D 97     	ld hl, Indice_entidades_completas
 584+ 96B8 E6 01        	and 1
 585+ 96BA 28 02        	jr z,1F
 586+ 96BC
 587+ 96BC 23           	inc hl
 588+ 96BD 23           	inc hl
 589+ 96BE
 590+ 96BE CD 92 8D     1 call Extrae_address
 591+ 96C1 C9           	ret		;	ret
 592+ 96C2
 593+ 96C2              ;	La entidad no se imprime entera en pantalla.
 594+ 96C2
 595+ 96C2 3A C9 89     2 ld a,(Cuad_objeto)
 596+ 96C5 E6 01        	and 1
 597+ 96C7 28 17        	jr z,3F
 598+ 96C9
 599+ 96C9              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96C9
 601+ 96C9 21 91 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96CC 3A B6 89     4 ld a,(Columns)
 603+ 96CF E6 01        	and 1
 604+ 96D1 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96D3
 606+ 96D3 23           	inc hl
 607+ 96D4 23           	inc hl
 608+ 96D5
 609+ 96D5 3A F2 89     	ld a,(Columnas)
 610+ 96D8 E6 01        	and 1
 611+ 96DA 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96DC
 613+ 96DC 23           	inc hl
 614+ 96DD 23           	inc hl
 615+ 96DE
 616+ 96DE 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96E0
 618+ 96E0 21 97 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96E3 18 E7        	jr 4B
 620+ 96E5
 621+ 96E5              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96E5              ;
 623+ 96E5              ;	Prepara_draw
 624+ 96E5              ;
 625+ 96E5              ;	Es una rutina de carga.
 626+ 96E5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96E5              ;
 628+ 96E5              ;	FUNCIONAMIENTO:
 629+ 96E5              ;
 630+ 96E5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96E5              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96E5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96E5              ;
 634+ 96E5              ;	DESTRUYE:
 635+ 96E5              ;
 636+ 96E5              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96E5
 638+ 96E5 21 B5 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96E8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96E9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96EA 4E           	ld c,(hl)
 642+ 96EB 2A B7 89     	ld hl,(Posicion_actual)
 643+ 96EE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96F0 C9           	ret
 645+ 96F1
 646+ 96F1              ;----------------------------------------------------------------------------------------------------------------
 647+ 96F1              ;
 648+ 96F1              ;	5/08/22
 649+ 96F1              ;
 650+ 96F1              ;   NextScan.
 651+ 96F1              ;
 652+ 96F1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96F1              ;
 654+ 96F1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96F1              ;
 656+ 96F1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96F1              ;
 658+ 96F1              ;       DESTRUIDOS: AF y HL !!!
 659+ 96F1              ;
 660+ 96F1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96F1              ;
 662+ 96F1
 663+ 96F1 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96F2 7C               ld a,h
 665+ 96F3 E6 07            and 7
 666+ 96F5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96F6
 668+ 96F6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96F7 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96F9 6F               ld l,a
 671+ 96FA D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96FB
 673+ 96FB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96FC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96FE 67               ld h,a
 676+ 96FF C9               ret
 677+ 9700
 678+ 9700              ;----------------------------------------------------------------------------------------------------------------
 679+ 9700              ;
 680+ 9700              ;	5/08/22
 681+ 9700              ;
 682+ 9700              ;   PreviousScan.
 683+ 9700              ;
 684+ 9700              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9700              ;
 686+ 9700              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9700              ;
 688+ 9700              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9700              ;
 690+ 9700              ;       DESTRUIDOS: AF y HL !!!
 691+ 9700              ;
 692+ 9700              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9700              ;
 694+ 9700
 695+ 9700 7C           PreviousScan ld a,h
 696+ 9701 25               dec h               ; Dec H.
 697+ 9702 E6 07            and 7
 698+ 9704 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9705
 700+ 9705 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9706 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9708 6F               ld l,a
 703+ 9709 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 970A
 705+ 970A 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 970B C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 970D 67               ld h,a
 708+ 970E C9               ret
 709+ 970F
 710+ 970F              ; -----------------------------------------------------------------------------------
 711+ 970F              ;
 712+ 970F              ;	31/7/23
 713+ 970F              ;
 714+ 970F              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 970F              ;	Extrae fotos de Album_de_fotos.
 716+ 970F
 717+ 970F              Extrae_foto_entidades
 718+ 970F
 719+ 970F              ;	ld a,(Contador_de_frames)
 720+ 970F              ;	cp $1e
 721+ 970F              ;	jr z,$
 722+ 970F
 723+ 970F 21 01 70     	ld hl,Album_de_fotos+1
 724+ 9712 7E           	ld a,(hl)
 725+ 9713 A7           	and a
 726+ 9714 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 9715
 728+ 9715 3A 04 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 9718 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 730+ 9719 C8           	ret z
 731+ 971A
 732+ 971A              ; -----------------------------------
 733+ 971A
 734+ 971A ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 971E 31 00 70     	ld sp,Album_de_fotos
 736+ 9721
 737+ 9721 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 9723 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 9724 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 9725
 741+ 9725 ED 73 0B 8A  	ld (Stack_2),sp
 742+ 9729 ED 7B 09 8A  	ld sp,(Stack)
 743+ 972D
 744+ 972D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 972D
 746+ 972D 3E CD        	ld a,$cd
 747+ 972F 32 37 97     	ld (Imprime),a
 748+ 9732 EB           	ex de,hl
 749+ 9733 22 38 97     	ld (Imprime+1),hl
 750+ 9736 EB           	ex de,hl
 751+ 9737
 752+ 9737              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 9737
 754+ 9737 00 00 00     Imprime db 0,0,0
 755+ 973A
 756+ 973A 3A 04 8A     	ld a,(Numero_de_malotes)
 757+ 973D 3D           	dec a
 758+ 973E 28 09        	jr z,1F
 759+ 9740 32 04 8A      	ld (Numero_de_malotes),a
 760+ 9743
 761+ 9743 ED 7B 0B 8A   	ld sp,(Stack_2)
 762+ 9747 18 D8        	jr 2B
 763+ 9749
 764+ 9749 AF           1 xor a
 765+ 974A 32 0B 8A     	ld (Stack_2),a
 766+ 974D C9           	ret
 767+ 974E
 768+ 974E              ; -----------------------------------------------------------------------------------
 769+ 974E              ;
 770+ 974E              ;	28/2/23
 771+ 974E              ;
 772+ 974E              ;	Pinta los disparos generados.
 773+ 974E
 774+ 974E              Extrae_foto_disparos
 775+ 974E
 776+ 974E 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 777+ 9751 7E               ld a,(hl)
 778+ 9752 A7               and a
 779+ 9753 C8               ret z
 780+ 9754
 781+ 9754 3A 2D 8A     	ld a,(Numero_de_disparotes)
 782+ 9757 A7           	and a
 783+ 9758 C8           	ret z
 784+ 9759 ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 785+ 975D 31 0D 72     	ld sp,Album_de_fotos_disparos
 786+ 9760
 787+ 9760 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 788+ 9762 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 789+ 9763 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 790+ 9764
 791+ 9764 ED 73 0B 8A  	ld (Stack_2),sp
 792+ 9768 ED 7B 09 8A  	ld sp,(Stack)
 793+ 976C
 794+ 976C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 795+ 976C
 796+ 976C 3E CD        	ld a,$cd
 797+ 976E 32 76 97     	ld (Imprime2),a
 798+ 9771 EB           	ex de,hl
 799+ 9772 22 77 97     	ld (Imprime2+1),hl
 800+ 9775 EB           	ex de,hl
 801+ 9776
 802+ 9776              ; Ejecuta la llamada:	CALL $xx,xx
 803+ 9776
 804+ 9776 00 00 00     Imprime2 db 0,0,0
 805+ 9779
 806+ 9779 3A 2D 8A     	ld a,(Numero_de_disparotes)
 807+ 977C 3D           	dec a
 808+ 977D 28 09        	jr z,1F
 809+ 977F 32 2D 8A      	ld (Numero_de_disparotes),a
 810+ 9782
 811+ 9782 ED 7B 0B 8A  	ld sp,(Stack_2)
 812+ 9786 18 D8        	jr 2B
 813+ 9788
 814+ 9788 AF           1 xor a
 815+ 9789 32 0B 8A     	ld (Stack_2),a
 816+ 978C C9           	ret
 817+ 978D
# file closed: Draw_XOR.asm
1442  978D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 978D              ;   índices de Rutinas de impresión.
   2+ 978D
   3+ 978D 9D 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 978F CA 97            defw Pinta_Amadeus_3x2
   5+ 9791
   6+ 9791 20 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9793 C0 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9795 74 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9797
  10+ 9797 4A 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9799 4E 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 979B 02 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 979D
  14+ 979D
  15+ 979D              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 979D              ;
  17+ 979D              ;   12/12/22
  18+ 979D              ;
  19+ 979D              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 979D              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 979D              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 979D              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 979D              ;
  24+ 979D              ;   Modifica: DE y HL.
  25+ 979D
  26+ 979D ED 73 09 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97A1 FD F9        	ld sp,iy
  28+ 97A3 06 10            ld b,16
  29+ 97A5 D1           1 pop de
  30+ 97A6 7B               ld a,e
  31+ 97A7 AE               xor (hl)
  32+ 97A8 77           	ld (hl),a
  33+ 97A9 23           	inc hl
  34+ 97AA 7A               ld a,d
  35+ 97AB AE               xor (hl)
  36+ 97AC 77           	ld (hl),a
  37+ 97AD 2B           	dec hl
  38+ 97AE 24           	inc h
  39+ 97AF 7C               ld a,h
  40+ 97B0 E6 07            and 7
  41+ 97B2 20 0A            jr nz,2F
  42+ 97B4 7D               ld a,l
  43+ 97B5 C6 20            add a,$20
  44+ 97B7 6F               ld l,a
  45+ 97B8 38 04            jr c,2F
  46+ 97BA 7C               ld a,h
  47+ 97BB D6 08            sub 8
  48+ 97BD 67               ld h,a
  49+ 97BE 7C           2 ld a,h
  50+ 97BF FE 58            cp $58
  51+ 97C1 28 02            jr z,3F
  52+ 97C3 10 E0            djnz 1B
  53+ 97C5 ED 7B 09 8A  3 ld sp,(Stack)
  54+ 97C9 C9           	ret
  55+ 97CA
  56+ 97CA ED 73 09 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97CE FD F9        	ld sp,iy
  58+ 97D0 06 08            ld b,8
  59+ 97D2 D1           1 pop de
  60+ 97D3 7B               ld a,e
  61+ 97D4 AE               xor (hl)
  62+ 97D5 77           	ld (hl),a
  63+ 97D6 23           	inc hl
  64+ 97D7 7A               ld a,d
  65+ 97D8 AE               xor (hl)
  66+ 97D9 77           	ld (hl),a
  67+ 97DA 23           	inc hl
  68+ 97DB D1           	pop de
  69+ 97DC 7B               ld a,e
  70+ 97DD AE               xor (hl)
  71+ 97DE 77           	ld (hl),a
  72+ 97DF 2B           	dec hl
  73+ 97E0 2B           	dec hl
  74+ 97E1 24           	inc h
  75+ 97E2 7C               ld a,h
  76+ 97E3 E6 07            and 7
  77+ 97E5 20 0A            jr nz,2F
  78+ 97E7 7D               ld a,l
  79+ 97E8 C6 20            add a,$20
  80+ 97EA 6F               ld l,a
  81+ 97EB 38 04            jr c,2F
  82+ 97ED 7C               ld a,h
  83+ 97EE D6 08            sub 8
  84+ 97F0 67               ld h,a
  85+ 97F1 7C           2 ld a,h
  86+ 97F2 FE 58            cp $58
  87+ 97F4 28 25            jr z,4F
  88+ 97F6 7A               ld a,d
  89+ 97F7 AE               xor (hl)
  90+ 97F8 77               ld (hl),a
  91+ 97F9 D1           	pop de
  92+ 97FA 23           	inc hl
  93+ 97FB 7B               ld a,e
  94+ 97FC AE               xor (hl)
  95+ 97FD 77           	ld (hl),a
  96+ 97FE 23           	inc hl
  97+ 97FF 7A               ld a,d
  98+ 9800 AE               xor (hl)
  99+ 9801 77           	ld (hl),a
 100+ 9802 2B           	dec hl
 101+ 9803 2B           	dec hl
 102+ 9804 24           	inc h
 103+ 9805 7C               ld a,h
 104+ 9806 E6 07            and 7
 105+ 9808 20 0A            jr nz,3F
 106+ 980A 7D               ld a,l
 107+ 980B C6 20            add a,$20
 108+ 980D 6F               ld l,a
 109+ 980E 38 04            jr c,3F
 110+ 9810 7C               ld a,h
 111+ 9811 D6 08            sub 8
 112+ 9813 67               ld h,a
 113+ 9814 7C           3 ld a,h
 114+ 9815 FE 58            cp $58
 115+ 9817 28 02            jr z,4F
 116+ 9819 10 B7            djnz 1B
 117+ 981B ED 7B 09 8A  4 ld sp,(Stack)
 118+ 981F C9           	ret
 119+ 9820
 120+ 9820              ; ---------------------------------------------------
 121+ 9820
 122+ 9820 ED 73 09 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9824 FD F9        	ld sp,iy
 124+ 9826
 125+ 9826              ; >>>
 126+ 9826
 127+ 9826 06 10            ld b,16
 128+ 9828 D1           1 pop de
 129+ 9829 7A           	ld a,d
 130+ 982A AE           	xor (hl)
 131+ 982B 77           	ld (hl),a
 132+ 982C 24           	inc h
 133+ 982D 7C               ld a,h
 134+ 982E E6 07            and 7
 135+ 9830 20 0C            jr nz,2F
 136+ 9832 7D               ld a,l
 137+ 9833 C6 20            add a,$20
 138+ 9835 6F               ld l,a
 139+ 9836 38 06            jr c,2F
 140+ 9838 7C               ld a,h
 141+ 9839 D6 08            sub 8
 142+ 983B 67               ld h,a
 143+ 983C 18 00            jr 2F
 144+ 983E 7C           2 ld a,h
 145+ 983F FE 58            cp $58
 146+ 9841 28 02            jr z,3F
 147+ 9843 10 E3            djnz 1B
 148+ 9845 ED 7B 09 8A  3 ld sp,(Stack)
 149+ 9849 C9           	ret
 150+ 984A
 151+ 984A ED 73 09 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 984E FD F9        	ld sp,iy
 153+ 9850
 154+ 9850              ; >>>
 155+ 9850
 156+ 9850 06 10            ld b,16
 157+ 9852 D1           1 pop de
 158+ 9853 7B           	ld a,e
 159+ 9854 AE           	xor (hl)
 160+ 9855 77           	ld (hl),a
 161+ 9856 24           	inc h
 162+ 9857 7C               ld a,h
 163+ 9858 E6 07            and 7
 164+ 985A 20 0C            jr nz,2F
 165+ 985C 7D               ld a,l
 166+ 985D C6 20            add a,$20
 167+ 985F 6F               ld l,a
 168+ 9860 38 06            jr c,2F
 169+ 9862 7C               ld a,h
 170+ 9863 D6 08            sub 8
 171+ 9865 67               ld h,a
 172+ 9866 18 00            jr 2F
 173+ 9868 7C           2 ld a,h
 174+ 9869 FE 58            cp $58
 175+ 986B 28 02            jr z,3F
 176+ 986D 10 E3            djnz 1B
 177+ 986F ED 7B 09 8A  3 ld sp,(Stack)
 178+ 9873 C9           	ret
 179+ 9874
 180+ 9874              ; ---------------------------------------------------
 181+ 9874
 182+ 9874 ED 73 09 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9878 FD F9        	ld sp,iy
 184+ 987A 06 08            ld b,8
 185+ 987C D1           1 pop de
 186+ 987D 7A           	ld a,d
 187+ 987E AE           	xor (hl)
 188+ 987F 77           	ld (hl),a
 189+ 9880 23           	inc hl
 190+ 9881 D1           	pop de
 191+ 9882 7B           	ld a,e
 192+ 9883 AE           	xor (hl)
 193+ 9884 77           	ld (hl),a
 194+ 9885 2B           	dec hl
 195+ 9886 24            	inc h
 196+ 9887 7C               ld a,h
 197+ 9888 E6 07            and 7
 198+ 988A 20 0A            jr nz,2F
 199+ 988C 7D               ld a,l
 200+ 988D C6 20            add a,$20
 201+ 988F 6F               ld l,a
 202+ 9890 38 04            jr c,2F
 203+ 9892 7C               ld a,h
 204+ 9893 D6 08            sub 8
 205+ 9895 67               ld h,a
 206+ 9896 7C           2 ld a,h
 207+ 9897 FE 58            cp $58
 208+ 9899 28 20            jr z,4F
 209+ 989B D1               pop de
 210+ 989C 7B           	ld a,e
 211+ 989D AE           	xor (hl)
 212+ 989E 77           	ld (hl),a
 213+ 989F 23           	inc hl
 214+ 98A0 7A           	ld a,d
 215+ 98A1 AE           	xor (hl)
 216+ 98A2 77           	ld (hl),a
 217+ 98A3 2B           	dec hl
 218+ 98A4 24           	inc h
 219+ 98A5 7C               ld a,h
 220+ 98A6 E6 07            and 7
 221+ 98A8 20 0A            jr nz,3F
 222+ 98AA 7D               ld a,l
 223+ 98AB C6 20            add a,$20
 224+ 98AD 6F               ld l,a
 225+ 98AE 38 04            jr c,3F
 226+ 98B0 7C               ld a,h
 227+ 98B1 D6 08            sub 8
 228+ 98B3 67               ld h,a
 229+ 98B4 7C           3 ld a,h
 230+ 98B5 FE 58            cp $58
 231+ 98B7 28 02            jr z,4F
 232+ 98B9 10 C1            djnz 1B
 233+ 98BB ED 7B 09 8A  4 ld sp,(Stack)
 234+ 98BF C9           	ret
 235+ 98C0
 236+ 98C0 ED 73 09 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98C4 FD F9        	ld sp,iy
 238+ 98C6 06 08            ld b,8
 239+ 98C8 D1           1 pop de
 240+ 98C9 D1           	pop de
 241+ 98CA 7B           	ld a,e
 242+ 98CB AE           	xor (hl)
 243+ 98CC 77           	ld (hl),a
 244+ 98CD 24            	inc h
 245+ 98CE 7C               ld a,h
 246+ 98CF E6 07            and 7
 247+ 98D1 20 0A            jr nz,2F
 248+ 98D3 7D               ld a,l
 249+ 98D4 C6 20            add a,$20
 250+ 98D6 6F               ld l,a
 251+ 98D7 38 04            jr c,2F
 252+ 98D9 7C               ld a,h
 253+ 98DA D6 08            sub 8
 254+ 98DC 67               ld h,a
 255+ 98DD 7C           2 ld a,h
 256+ 98DE FE 58            cp $58
 257+ 98E0 28 1B            jr z,4F
 258+ 98E2 D1               pop de
 259+ 98E3 7A           	ld a,d
 260+ 98E4 AE           	xor (hl)
 261+ 98E5 77           	ld (hl),a
 262+ 98E6 24           	inc h
 263+ 98E7 7C               ld a,h
 264+ 98E8 E6 07            and 7
 265+ 98EA 20 0A            jr nz,3F
 266+ 98EC 7D               ld a,l
 267+ 98ED C6 20            add a,$20
 268+ 98EF 6F               ld l,a
 269+ 98F0 38 04            jr c,3F
 270+ 98F2 7C               ld a,h
 271+ 98F3 D6 08            sub 8
 272+ 98F5 67               ld h,a
 273+ 98F6 7C           3 ld a,h
 274+ 98F7 FE 58            cp $58
 275+ 98F9 28 02            jr z,4F
 276+ 98FB 10 CB            djnz 1B
 277+ 98FD ED 7B 09 8A  4 ld sp,(Stack)
 278+ 9901 C9           	ret
 279+ 9902
 280+ 9902 ED 73 09 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9906 FD F9        	ld sp,iy
 282+ 9908 06 08            ld b,8
 283+ 990A D1           1 pop de
 284+ 990B 7B           	ld a,e
 285+ 990C AE           	xor (hl)
 286+ 990D 77           	ld (hl),a
 287+ 990E 23           	inc hl
 288+ 990F 7A           	ld a,d
 289+ 9910 AE           	xor (hl)
 290+ 9911 77           	ld (hl),a
 291+ 9912 2B           	dec hl
 292+ 9913 24             	inc h
 293+ 9914 7C               ld a,h
 294+ 9915 E6 07            and 7
 295+ 9917 20 0A            jr nz,2F
 296+ 9919 7D               ld a,l
 297+ 991A C6 20            add a,$20
 298+ 991C 6F               ld l,a
 299+ 991D 38 04            jr c,2F
 300+ 991F 7C               ld a,h
 301+ 9920 D6 08            sub 8
 302+ 9922 67               ld h,a
 303+ 9923 7C           2 ld a,h
 304+ 9924 FE 58            cp $58
 305+ 9926 28 21            jr z,4F
 306+ 9928 D1               pop de
 307+ 9929 7A           	ld a,d
 308+ 992A AE           	xor (hl)
 309+ 992B 77           	ld (hl),a
 310+ 992C 23           	inc hl
 311+ 992D D1               pop de
 312+ 992E 7B           	ld a,e
 313+ 992F AE           	xor (hl)
 314+ 9930 77           	ld (hl),a
 315+ 9931 2B           	dec hl
 316+ 9932 24           	inc h
 317+ 9933 7C               ld a,h
 318+ 9934 E6 07            and 7
 319+ 9936 20 0A            jr nz,3F
 320+ 9938 7D               ld a,l
 321+ 9939 C6 20            add a,$20
 322+ 993B 6F               ld l,a
 323+ 993C 38 04            jr c,3F
 324+ 993E 7C               ld a,h
 325+ 993F D6 08            sub 8
 326+ 9941 67               ld h,a
 327+ 9942 7C           3 ld a,h
 328+ 9943 FE 58            cp $58
 329+ 9945 28 02            jr z,4F
 330+ 9947 10 C1            djnz 1B
 331+ 9949 ED 7B 09 8A  4 ld sp,(Stack)
 332+ 994D C9           	ret
 333+ 994E
 334+ 994E ED 73 09 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9952 FD F9        	ld sp,iy
 336+ 9954 06 08            ld b,8
 337+ 9956 D1           1 pop de
 338+ 9957 7B           	ld a,e
 339+ 9958 AE           	xor (hl)
 340+ 9959 77           	ld (hl),a
 341+ 995A 24            	inc h
 342+ 995B 7C               ld a,h
 343+ 995C E6 07            and 7
 344+ 995E 20 0A            jr nz,2F
 345+ 9960 7D               ld a,l
 346+ 9961 C6 20            add a,$20
 347+ 9963 6F               ld l,a
 348+ 9964 38 04            jr c,2F
 349+ 9966 7C               ld a,h
 350+ 9967 D6 08            sub 8
 351+ 9969 67               ld h,a
 352+ 996A 7C           2 ld a,h
 353+ 996B FE 58            cp $58
 354+ 996D 28 1C            jr z,4F
 355+ 996F D1               pop de
 356+ 9970 7A           	ld a,d
 357+ 9971 AE           	xor (hl)
 358+ 9972 77           	ld (hl),a
 359+ 9973 24           	inc h
 360+ 9974 7C               ld a,h
 361+ 9975 E6 07            and 7
 362+ 9977 20 0A            jr nz,3F
 363+ 9979 7D               ld a,l
 364+ 997A C6 20            add a,$20
 365+ 997C 6F               ld l,a
 366+ 997D 38 04            jr c,3F
 367+ 997F 7C               ld a,h
 368+ 9980 D6 08            sub 8
 369+ 9982 67               ld h,a
 370+ 9983 7C           3 ld a,h
 371+ 9984 FE 58            cp $58
 372+ 9986 28 03            jr z,4F
 373+ 9988 D1               pop de
 374+ 9989 10 CB            djnz 1B
 375+ 998B ED 7B 09 8A  4 ld sp,(Stack)
 376+ 998F C9           	ret
 377+ 9990
 378+ 9990              ; ---------------------------------------------------
 379+ 9990              ;
 380+ 9990              ;   27/02/23
 381+ 9990              ;
 382+ 9990              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9990              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9990              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9990
 386+ 9990 ED 73 09 8A  Pinta_Disparo ld (Stack),sp
 387+ 9994 FD F9            ld sp,iy
 388+ 9996 06 03            ld b,3
 389+ 9998 D1           1 pop de
 390+ 9999 7B               ld a,e
 391+ 999A AE               xor (hl)
 392+ 999B 77               ld (hl),a
 393+ 999C 23               inc hl
 394+ 999D 7A               ld a,d
 395+ 999E AE               xor (hl)
 396+ 999F 77               ld (hl),a
 397+ 99A0 2B               dec hl
 398+ 99A1
 399+ 99A1 24               inc h
 400+ 99A2 7C               ld a,h
 401+ 99A3 E6 07            and 7
 402+ 99A5 20 0A            jr nz,2F
 403+ 99A7 7D               ld a,l
 404+ 99A8 C6 20            add a,$20
 405+ 99AA 6F               ld l,a
 406+ 99AB 38 04            jr c,2F
 407+ 99AD 7C               ld a,h
 408+ 99AE D6 08            sub 8
 409+ 99B0 67               ld h,a
 410+ 99B1 7C           2 ld a,h
 411+ 99B2 FE 58            cp $58
 412+ 99B4 28 02            jr z,3F
 413+ 99B6
 414+ 99B6 10 E0            djnz 1B
 415+ 99B8 ED 7B 09 8A  3 ld sp,(Stack)
 416+ 99BC C9               ret
 417+ 99BD
# file closed: Rutinas_de_impresion_sprites.asm
1443  99BD              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99BD              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99BD              ;
   3+ 99BD              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99BD              ;
   5+ 99BD              ; *****************************************************************************************************************************************************************************************
   6+ 99BD              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99BD
   8+ 99BD 7C           calcula_tercio ld a,h
   9+ 99BE E6 18        	and $18
  10+ 99C0 CB 2F        	sra a
  11+ 99C2 CB 2F        	sra a
  12+ 99C4 CB 2F        	sra a
  13+ 99C6 C9           	ret
  14+ 99C7
# file closed: calcula_tercio.asm
1444  99C7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99C7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99C7              ;
   3+ 99C7              ;
   4+ 99C7              ;	CLS.
   5+ 99C7              ;
   6+ 99C7              ;	Limpia la pantalla y define sus atributos.
   7+ 99C7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99C7              ;
   9+ 99C7              ;	COLORES: 0 ..... NEGRO
  10+ 99C7              ;    		 1 ..... AZUL
  11+ 99C7              ; 			 2 ..... ROJO
  12+ 99C7              ;			 3 ..... MAGENTA
  13+ 99C7              ; 			 4 ..... VERDE
  14+ 99C7              ; 			 5 ..... CIAN
  15+ 99C7              ;			 6 ..... AMARILLO
  16+ 99C7              ; 			 7 ..... BLANCO
  17+ 99C7              ;
  18+ 99C7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99C7              ;
  20+ 99C7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99C7
  22+ 99C7
  23+ 99C7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99CA 11 01 40     	LD DE,$4001
  25+ 99CD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99D0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99D2 ED B0        	LDIR
  28+ 99D4 01 FF 02     	LD BC,767
  29+ 99D7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99D8 ED B0        	LDIR
  31+ 99DA C9           	ret
  32+ 99DB
# file closed: Cls.asm
1445  99DB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99DB              ; ******************************************************************************************************************************************************************************************
   2+ 99DB              ;
   3+ 99DB              ;   20/05/23
   4+ 99DB              ;
   5+ 99DB              ;	Recompone_posicion_inicio
   6+ 99DB              ;
   7+ 99DB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99DB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99DB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99DB              ;	_ a una u otra rutina.
  11+ 99DB
  12+ 99DB              Recompone_posicion_inicio
  13+ 99DB
  14+ 99DB 2A C7 89     	ld hl,(Posicion_inicio)
  15+ 99DE 7D           	ld a,l
  16+ 99DF E6 1F        	and $1f
  17+ 99E1 28 16        	jr z,1F
  18+ 99E3
  19+ 99E3 FE 1F        	cp $1f
  20+ 99E5 28 0D        	jr z,3F
  21+ 99E7
  22+ 99E7 21 F6 89     	ld hl,Ctrl_2
  23+ 99EA CB C6        	set 0,(hl)
  24+ 99EC 2A B9 89     	ld hl,(Puntero_objeto)
  25+ 99EF 22 F9 89     	ld (Repone_puntero_objeto),hl
  26+ 99F2 18 08        	jr 2F
  27+ 99F4
  28+ 99F4 CD 95 9B     3 call Mov_left
  29+ 99F7 18 03        	jr 2F
  30+ 99F9
  31+ 99F9 CD 77 9A     1 call Mov_right
  32+ 99FC 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99FF 22 B9 89     	ld (Puntero_objeto),hl
  34+ 9A02 C9           	ret
  35+ 9A03
  36+ 9A03              ; ******************************************************************************************************************************************************************************************
  37+ 9A03              ;
  38+ 9A03              ;   27/05/23
  39+ 9A03              ;
  40+ 9A03              ;	Mov_down
  41+ 9A03              ;
  42+ 9A03              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A03              ;
  44+ 9A03              ;
  45+ 9A03              Mov_down
  46+ 9A03
  47+ 9A03 CD 65 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A06              ;																	; _ repone (Puntero_objeto).
  49+ 9A06 21 E3 89     	ld hl,Ctrl_0
  50+ 9A09 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A0B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A0B              ; 																	; _ en el caso de que no lo haya.
  53+ 9A0B 3A CD 89     	ld a,(Vel_down)
  54+ 9A0E 47           	ld b,a
  55+ 9A0F 2A B7 89         ld hl,(Posicion_actual)
  56+ 9A12 CD BD 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A15 E6 02        	and 2
  58+ 9A17 28 0F        	jr z,1F
  59+ 9A19
  60+ 9A19              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A19              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A19
  63+ 9A19 7C           	ld a,h
  64+ 9A1A FE 57        	cp $57
  65+ 9A1C 20 0A        	jr nz,1F
  66+ 9A1E
  67+ 9A1E 7D           	ld a,l
  68+ 9A1F C6 20        	add $20
  69+ 9A21 30 05        	jr nc,1F
  70+ 9A23
  71+ 9A23              ; ------------------------------
  72+ 9A23              ;	call Reaparece_arriba
  73+ 9A23 CD 22 9D     	call Reinicio
  74+ 9A26              ; ------------------------------
  75+ 9A26
  76+ 9A26 18 08        	jr 3F
  77+ 9A28 CD F1 96     1 call NextScan
  78+ 9A2B 22 B7 89     	ld (Posicion_actual),hl
  79+ 9A2E 10 E2            djnz 2B
  80+ 9A30 CD 48 9D     3 call Genera_coordenadas
  81+ 9A33 C9           	ret
  82+ 9A34
  83+ 9A34              ; ******************************************************************************************************************************************************************************************
  84+ 9A34              ;
  85+ 9A34              ;   27/05/23
  86+ 9A34              ;
  87+ 9A34              ;	Mov_up
  88+ 9A34              ;
  89+ 9A34              ; 	Mueve el Sprite hacia arriba.
  90+ 9A34              ;
  91+ 9A34              ;
  92+ 9A34              Mov_up
  93+ 9A34
  94+ 9A34 CD 65 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A37              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A37 21 E3 89     	ld hl,Ctrl_0
  97+ 9A3A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A3C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A3C              ; 																		; _ en el caso de que no lo haya.
 100+ 9A3C 3A CC 89     	ld a,(Vel_up)
 101+ 9A3F 47           	ld b,a
 102+ 9A40 2A B7 89     	ld hl,(Posicion_actual)
 103+ 9A43 CD BD 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A46 A7           	and a
 105+ 9A47 20 10        	jr nz,1F
 106+ 9A49
 107+ 9A49              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A49              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A49
 110+ 9A49 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A4A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A4C 20 0B            jr nz,1F
 113+ 9A4E 7D               ld a,l
 114+ 9A4F D6 20            sub $20
 115+ 9A51 30 06            jr nc,1F
 116+ 9A53 25               dec h
 117+ 9A54
 118+ 9A54              ; -----------------------------
 119+ 9A54 CD 03 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A57              ;	call Reinicio
 121+ 9A57              ; -----------------------------
 122+ 9A57
 123+ 9A57 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A59 CD 00 97     1 call PreviousScan
 125+ 9A5C 22 B7 89     	ld (Posicion_actual),hl
 126+ 9A5F 10 E2            djnz 3B
 127+ 9A61 CD 48 9D     2 call Genera_coordenadas
 128+ 9A64 C9           	ret
 129+ 9A65
 130+ 9A65              ; -----------------------------
 131+ 9A65              ;
 132+ 9A65              ;	27/5/23
 133+ 9A65              ;
 134+ 9A65              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A65              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A65              ;
 137+ 9A65              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A65              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A65              ;
 140+ 9A65              ;	Modifica: A y (Puntero_objeto).
 141+ 9A65
 142+ 9A65 3A F6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A68 CB 47        	bit 0,a
 144+ 9A6A C8           	ret z
 145+ 9A6B CB 87        	res 0,a
 146+ 9A6D 32 F6 89     	ld (Ctrl_2),a
 147+ 9A70 2A F9 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A73 22 B9 89     	ld (Puntero_objeto),hl
 149+ 9A76 C9           	ret
 150+ 9A77
 151+ 9A77              ; ******************************************************************************************************************************************************************************************
 152+ 9A77              ;
 153+ 9A77              ;	19/10/22
 154+ 9A77              ;
 155+ 9A77              ;	Mov_right.
 156+ 9A77              ;
 157+ 9A77              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A77              ;
 159+ 9A77
 160+ 9A77 21 E3 89     Mov_right ld hl,Ctrl_0
 161+ 9A7A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A7C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A7C              ; 																	; _ en el caso de que no lo haya.
 164+ 9A7C 3A E3 89     	ld a,(Ctrl_0)
 165+ 9A7F CB 77        	bit 6,a
 166+ 9A81 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A83
 168+ 9A83 CD B1 9C     	call Stop_Amadeus_right
 169+ 9A86 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A87 18 4D        	jr 8F
 171+ 9A89
 172+ 9A89 3A BB 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A8C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A8E 20 46        	jr nz,8F
 175+ 9A90
 176+ 9A90 3A BD 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A93 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A94 28 40        	jr z,8F
 179+ 9A96
 180+ 9A96              ; ---------- ---------- ----------
 181+ 9A96              ;
 182+ 9A96              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A96
 184+ 9A96 3A CB 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A99 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A9B 28 11        	jr z,1F
 187+ 9A9D 38 06        	jr c,6F
 188+ 9A9F FE 04        	cp 4
 189+ 9AA1 28 14        	jr z,7F
 190+ 9AA3 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AA5
 192+ 9AA5              ; ---------- ---------- ----------
 193+ 9AA5              ;
 194+ 9AA5              ; Perfiles de velocidad
 195+ 9AA5              ;
 196+ 9AA5
 197+ 9AA5 3A BD 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AA8 FE FE        	cp $fe
 199+ 9AAA 20 2A        	jr nz,8F
 200+ 9AAC 18 10        	jr 3F
 201+ 9AAE 3A BD 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AB1 FE FD        	cp $fd
 203+ 9AB3 20 21        	jr nz,8F
 204+ 9AB5 18 07        	jr 3F
 205+ 9AB7 3A BD 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9ABA FE FB        	cp $fb
 207+ 9ABC 20 18        	jr nz,8F
 208+ 9ABE
 209+ 9ABE              ; ---------- ---------- ----------
 210+ 9ABE
 211+ 9ABE              3
 212+ 9ABE CD F1 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AC1              ;	call Reinicio
 214+ 9AC1
 215+ 9AC1              ; ---------- ---------- ----------
 216+ 9AC1              ;
 217+ 9AC1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AC1
 219+ 9AC1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AC3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AC4 CD DD 9A     	call DESPLZ_DER
 222+ 9AC7 C1           	pop bc
 223+ 9AC8 10 F9        	djnz 5B
 224+ 9ACA 2A B7 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9ACD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9ACE 22 B7 89     	ld (Posicion_actual),hl
 227+ 9AD1 CD 48 9D     	call Genera_coordenadas
 228+ 9AD4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AD6
 230+ 9AD6              ; ---------- ---------- ----------
 231+ 9AD6
 232+ 9AD6 2A B7 89     8 ld hl,(Posicion_actual)
 233+ 9AD9 CD DD 9A     	call DESPLZ_DER
 234+ 9ADC C9           2 ret
 235+ 9ADD
 236+ 9ADD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9ADD              ;
 238+ 9ADD              ;	22/9/22
 239+ 9ADD              ;
 240+ 9ADD
 241+ 9ADD CD EC 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AE0 CD 38 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AE3 CD 61 9B         call Ciclo_completo
 244+ 9AE6 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AE9 CB FE        	set 7,(hl)
 246+ 9AEB C9           	ret
 247+ 9AEC
 248+ 9AEC              ; ******************************************************************************************************************************************************************************************
 249+ 9AEC              ;	15/02/23
 250+ 9AEC              ;
 251+ 9AEC
 252+ 9AEC 3A CB 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9AEF 47           	ld b,a
 254+ 9AF0 2A C3 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AF3 23           1 inc hl
 256+ 9AF4 23           	inc hl
 257+ 9AF5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AF7 22 C3 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AFA CD 92 8D     	call Extrae_address
 260+ 9AFD 22 B9 89     	ld (Puntero_objeto),hl
 261+ 9B00
 262+ 9B00              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B00
 264+ 9B00              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B00              ; Cuántos movimientos hemos hecho ??
 266+ 9B00              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B00
 268+ 9B00 2A BF 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B03 EB           	ex de,hl
 270+ 9B04 A7           	and a
 271+ 9B05 ED 52        	sbc hl,de
 272+ 9B07 CB 3D        	srl l
 273+ 9B09 3E 08        6 ld a,8
 274+ 9B0B 95           	sub l
 275+ 9B0C 30 1E        	jr nc,3F
 276+ 9B0E
 277+ 9B0E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B0E              ; B="0".
 279+ 9B0E
 280+ 9B0E 04           4 inc b
 281+ 9B0F 3C           	inc a
 282+ 9B10 20 FC        	jr nz,4B
 283+ 9B12 78           	ld a,b
 284+ 9B13 08           	ex af,af
 285+ 9B14 2A BF 89     	ld hl,(Indice_Sprite_der)
 286+ 9B17 23           5 inc hl
 287+ 9B18 23           	inc hl
 288+ 9B19 10 FC        	djnz 5B
 289+ 9B1B 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B1E CD 92 8D     	call Extrae_address
 291+ 9B21 22 B9 89     	ld (Puntero_objeto),hl
 292+ 9B24
 293+ 9B24              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B24              ; _(Posicion_actual).
 295+ 9B24
 296+ 9B24 21 B7 89     	ld hl,Posicion_actual
 297+ 9B27 34           	inc (hl)
 298+ 9B28 08               ex af,af
 299+ 9B29 6F           	ld l,a
 300+ 9B2A 18 DD        	jr 6B
 301+ 9B2C
 302+ 9B2C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B2C
 304+ 9B2C 47           3 ld b,a
 305+ 9B2D 2A C1 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B30 23           2 inc hl
 307+ 9B31 23           	inc hl
 308+ 9B32 10 FC        	djnz 2B
 309+ 9B34 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B37 C9           8 ret
 311+ 9B38
 312+ 9B38              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B38              ;
 314+ 9B38              ;	24/7/22
 315+ 9B38              ;
 316+ 9B38              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B38              ;
 318+ 9B38              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B38              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B38              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B38
 322+ 9B38 3A BD 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B3B A7           	and a
 324+ 9B3C 20 1F        	jr nz,1F
 325+ 9B3E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B40 32 BD 89         ld (CTRL_DESPLZ),a
 327+ 9B43
 328+ 9B43 21 B6 89     	ld hl,Columns
 329+ 9B46 34           	inc (hl)
 330+ 9B47 3A C9 89     	ld a,(Cuad_objeto)
 331+ 9B4A E6 01        	and 1
 332+ 9B4C 28 0F        	jr z,1F
 333+ 9B4E 2A B7 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B51 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B52 22 B7 89     	ld (Posicion_actual),hl
 336+ 9B55 CD 48 9D     	call Genera_coordenadas
 337+ 9B58 CD BD 9C     	call Inc_CTRL_DESPLZ
 338+ 9B5B 18 03        	jr 2F
 339+ 9B5D CD BD 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B60 C9           2 ret
 341+ 9B61
 342+ 9B61              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B61              ;
 344+ 9B61              ;	24/7/22
 345+ 9B61              ;
 346+ 9B61              ;	Ciclo_completo.
 347+ 9B61              ;
 348+ 9B61              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B61              ;
 350+ 9B61              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B61              ; 	Decrementamos (Columns).
 352+ 9B61              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B61              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B61
 355+ 9B61
 356+ 9B61 3A BD 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B64 FE FF        	cp $ff
 358+ 9B66 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B68 E6 F0        	and $f0
 360+ 9B6A 20 28        	jr nz,3F
 361+ 9B6C
 362+ 9B6C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B6C
 364+ 9B6C 3A BD 89     	ld a,(CTRL_DESPLZ)
 365+ 9B6F 47           	ld b,a
 366+ 9B70 3E F8        	ld a,$f8
 367+ 9B72 80           	add b
 368+ 9B73 32 BD 89     	ld (CTRL_DESPLZ),a
 369+ 9B76 18 1C        	jr 3F
 370+ 9B78 21 B6 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B7B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B7C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B7D 32 BD 89     	ld (CTRL_DESPLZ),a
 374+ 9B80 3A C9 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B83 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B85 20 0A        	jr nz,2F
 377+ 9B87 2A B7 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B8A 23           	inc hl
 379+ 9B8B 22 B7 89     	ld (Posicion_actual),hl
 380+ 9B8E CD 48 9D     	call Genera_coordenadas
 381+ 9B91
 382+ 9B91              ; Inicia el puntero de Sprite.
 383+ 9B91
 384+ 9B91 CD A9 8D     2 call Inicia_puntero_objeto_der
 385+ 9B94 C9           3 ret
 386+ 9B95
 387+ 9B95              ; ******************************************************************************************************************************************************************************************
 388+ 9B95              ;
 389+ 9B95              ;	15/02/23
 390+ 9B95              ;
 391+ 9B95              ;	Mov_left.
 392+ 9B95              ;
 393+ 9B95              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B95              ;
 395+ 9B95 21 E3 89     Mov_left ld hl,Ctrl_0
 396+ 9B98 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B9A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B9A              ; 																	; _ en el caso de que no lo haya.
 399+ 9B9A 3A E3 89     	ld a,(Ctrl_0)
 400+ 9B9D CB 77        	bit 6,a
 401+ 9B9F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BA1
 403+ 9BA1 CD B7 9C     	call Stop_Amadeus_left
 404+ 9BA4 C8           	ret z
 405+ 9BA5 20 4A        	jr nz,8F
 406+ 9BA7
 407+ 9BA7 3A BB 89     11 ld a,(Coordenada_X)
 408+ 9BAA A7           	and a
 409+ 9BAB 20 44        	jr nz,8F
 410+ 9BAD
 411+ 9BAD 3A BD 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BB0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BB1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BB3
 415+ 9BB3              ; ---------- ---------- ----------
 416+ 9BB3
 417+ 9BB3 3A CA 89     	ld a,(Vel_left)
 418+ 9BB6 FE 02        	cp 2
 419+ 9BB8 28 0F        	jr z,1F
 420+ 9BBA 38 04        	jr c,6F
 421+ 9BBC FE 04        	cp 4
 422+ 9BBE 28 12        	jr z,7F
 423+ 9BC0
 424+ 9BC0              ; ---------- ---------- ----------
 425+ 9BC0
 426+ 9BC0 3A BD 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BC3 FE F8        	cp $f8
 428+ 9BC5 20 2A        	jr nz,8F
 429+ 9BC7 18 10        	jr 4F
 430+ 9BC9 3A BD 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BCC FE F9        	cp $f9
 432+ 9BCE 20 21        	jr nz,8F
 433+ 9BD0 18 07        	jr 4F
 434+ 9BD2 3A BD 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BD5 FE FB        	cp $fb
 436+ 9BD7 20 18        	jr nz,8F
 437+ 9BD9
 438+ 9BD9              ; ---------- ---------- ----------
 439+ 9BD9
 440+ 9BD9              4
 441+ 9BD9 CD DF 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BDC              ;	call Reinicio
 443+ 9BDC
 444+ 9BDC              ; ---------- ---------- ----------
 445+ 9BDC
 446+ 9BDC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BDE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BDF
 449+ 9BDF              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BDF              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BDF
 452+ 9BDF CD F8 9B     	call DESPLZ_IZQ
 453+ 9BE2 C1           	pop bc
 454+ 9BE3 10 F9        	djnz 5B
 455+ 9BE5 2A B7 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BE8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BE9 22 B7 89     	ld (Posicion_actual),hl
 458+ 9BEC CD 48 9D     	call Genera_coordenadas
 459+ 9BEF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BF1
 461+ 9BF1              ; ---------- ---------- ----------
 462+ 9BF1
 463+ 9BF1              ; Movemos, no hay recolocación.
 464+ 9BF1
 465+ 9BF1 2A B7 89     8 ld hl,(Posicion_actual)
 466+ 9BF4 CD F8 9B     	call DESPLZ_IZQ
 467+ 9BF7 C9           2 ret
 468+ 9BF8
 469+ 9BF8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9BF8              ;
 471+ 9BF8              ;	22/9/22
 472+ 9BF8
 473+ 9BF8              DESPLZ_IZQ
 474+ 9BF8
 475+ 9BF8 CD 07 9C     	call Desplaza_izquierda
 476+ 9BFB CD 53 9C         call modifica_parametros_1er_DESPLZ
 477+ 9BFE CD 7B 9C     	call Ciclo_completo_2
 478+ 9C01 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C04 CB BE        	res 7,(hl)
 480+ 9C06 C9           	ret
 481+ 9C07
 482+ 9C07              Desplaza_izquierda
 483+ 9C07
 484+ 9C07 3A CA 89     	ld a,(Vel_left)
 485+ 9C0A 47           	ld b,a
 486+ 9C0B 2A C5 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C0E 23           1 inc hl
 488+ 9C0F 23           	inc hl
 489+ 9C10 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C12 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C15 CD 92 8D     	call Extrae_address
 492+ 9C18 22 B9 89     	ld (Puntero_objeto),hl
 493+ 9C1B
 494+ 9C1B              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C1B
 496+ 9C1B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C1B              ; Cuántos movimientos hemos hecho ??
 498+ 9C1B              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C1B
 500+ 9C1B 2A C1 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C1E EB           	ex de,hl
 502+ 9C1F A7           	and a
 503+ 9C20 ED 52        	sbc hl,de
 504+ 9C22 CB 3D        	srl l
 505+ 9C24 3E 08        6 ld a,8
 506+ 9C26 95           	sub l
 507+ 9C27 30 1E        	jr nc,3F
 508+ 9C29
 509+ 9C29              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C29              ; B="0".
 511+ 9C29
 512+ 9C29 04           4 inc b
 513+ 9C2A 3C           	inc a
 514+ 9C2B 20 FC        	jr nz,4B
 515+ 9C2D 78           	ld a,b
 516+ 9C2E 08           	ex af,af
 517+ 9C2F 2A C1 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C32 23           5 inc hl
 519+ 9C33 23           	inc hl
 520+ 9C34 10 FC        	djnz 5B
 521+ 9C36 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C39 CD 92 8D     	call Extrae_address
 523+ 9C3C 22 B9 89     	ld (Puntero_objeto),hl
 524+ 9C3F
 525+ 9C3F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C3F              ; _(Posicion_actual).
 527+ 9C3F
 528+ 9C3F 21 B7 89     	ld hl,Posicion_actual
 529+ 9C42 35           	dec (hl)
 530+ 9C43 08           	ex af,af
 531+ 9C44 6F           	ld l,a
 532+ 9C45 18 DD        	jr 6B
 533+ 9C47
 534+ 9C47              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C47
 536+ 9C47 47           3 ld b,a
 537+ 9C48 2A BF 89     	ld hl,(Indice_Sprite_der)
 538+ 9C4B 23           2 inc hl
 539+ 9C4C 23           	inc hl
 540+ 9C4D 10 FC        	djnz 2B
 541+ 9C4F 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C52 C9           8 ret
 543+ 9C53
 544+ 9C53              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C53              ;
 546+ 9C53              ;	modifica_parametros_1er_DESPLZ
 547+ 9C53              ;
 548+ 9C53              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C53              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C53              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C53
 552+ 9C53 3A BD 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C56 A7           	and a
 554+ 9C57 20 1E        	jr nz,1F
 555+ 9C59 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C5A 32 BD 89         ld (CTRL_DESPLZ),a
 557+ 9C5D 21 B6 89     	ld hl,Columns
 558+ 9C60 34           	inc (hl)
 559+ 9C61 3A C9 89     	ld a,(Cuad_objeto)
 560+ 9C64 E6 01        	and 1
 561+ 9C66 20 0F        	jr nz,1F
 562+ 9C68 2A B7 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C6B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C6C 22 B7 89     	ld (Posicion_actual),hl
 565+ 9C6F CD 48 9D     	call Genera_coordenadas
 566+ 9C72 CD CE 9C     	call Dec_CTRL_DESPLZ
 567+ 9C75 18 03        	jr 2F
 568+ 9C77 CD CE 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C7A C9           2 ret
 570+ 9C7B
 571+ 9C7B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C7B
 573+ 9C7B 3A BD 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C7E FE F7        	cp $f7
 575+ 9C80 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C82 30 2C        	jr nc,3F
 577+ 9C84
 578+ 9C84              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C84
 580+ 9C84 06 00        	ld b,0
 581+ 9C86 04           4 inc b
 582+ 9C87 3C           	inc a
 583+ 9C88 FE F7        	cp $f7
 584+ 9C8A 20 FA        	jr nz,4B
 585+ 9C8C 3E FF        	ld a,$ff
 586+ 9C8E 90           	sub b
 587+ 9C8F 32 BD 89     	ld (CTRL_DESPLZ),a
 588+ 9C92 18 1C        	jr 3F
 589+ 9C94
 590+ 9C94              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C94
 592+ 9C94 21 B6 89     1 ld hl,Columns
 593+ 9C97 35           	dec (hl)
 594+ 9C98 AF           	xor a
 595+ 9C99 32 BD 89     	ld (CTRL_DESPLZ),a
 596+ 9C9C 3A C9 89     	ld a,(Cuad_objeto)
 597+ 9C9F E6 01        	and 1
 598+ 9CA1 28 0A        	jr z,2F
 599+ 9CA3 2A B7 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CA6 2B           	dec hl
 601+ 9CA7 22 B7 89     	ld (Posicion_actual),hl
 602+ 9CAA CD 48 9D     	call Genera_coordenadas
 603+ 9CAD
 604+ 9CAD              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CAD
 606+ 9CAD CD BC 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CB0 C9           3 ret
 608+ 9CB1
 609+ 9CB1              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CB1              ;
 611+ 9CB1              ;	19/10/22
 612+ 9CB1              ;
 613+ 9CB1              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CB1              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CB1
 616+ 9CB1 3A BB 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CB4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CB6 C9           	ret
 619+ 9CB7
 620+ 9CB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CB7              ;
 622+ 9CB7              ;	19/10/22
 623+ 9CB7              ;
 624+ 9CB7              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CB7              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CB7
 627+ 9CB7 3A BB 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CBA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CBC C9           	ret
 630+ 9CBD
 631+ 9CBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CBD              ;
 633+ 9CBD              ;	24/7/22
 634+ 9CBD              ;
 635+ 9CBD              ;	Inc_CTRL_DESPLZ
 636+ 9CBD              ;
 637+ 9CBD              ;
 638+ 9CBD              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CBD
 640+ 9CBD 21 BD 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CC0 3A CB 89     	ld a,(Vel_right)
 642+ 9CC3 A7           	and a
 643+ 9CC4 28 06        	jr z,1F
 644+ 9CC6 47           	ld b,a
 645+ 9CC7 34           3 inc (hl)
 646+ 9CC8 10 FD        	djnz 3B
 647+ 9CCA 18 01        	jr 2F
 648+ 9CCC 34           1 inc (hl)
 649+ 9CCD C9           2 ret
 650+ 9CCE
 651+ 9CCE              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CCE              ;
 653+ 9CCE              ;	5/2/23
 654+ 9CCE              ;
 655+ 9CCE              ;	Dec_CTRL_DESPLZ
 656+ 9CCE              ;
 657+ 9CCE              ;
 658+ 9CCE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CCE
 660+ 9CCE 21 BD 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CD1 3A CA 89     	ld a,(Vel_left)
 662+ 9CD4 A7           	and a
 663+ 9CD5 28 06        	jr z,1F
 664+ 9CD7 47           	ld b,a
 665+ 9CD8 35           3 dec (hl)
 666+ 9CD9 10 FD        	djnz 3B
 667+ 9CDB 18 01        	jr 2F
 668+ 9CDD 35           1 dec (hl)
 669+ 9CDE C9           2 ret
 670+ 9CDF
 671+ 9CDF              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CDF
 673+ 9CDF 2A B7 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CE2 01 1F 00     	ld bc,31
 675+ 9CE5 A7           	and a
 676+ 9CE6 ED 4A        	adc hl,bc
 677+ 9CE8 22 B7 89     	ld (Posicion_actual),hl
 678+ 9CEB 21 E3 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CEE CB C6        	set 0,(hl)
 680+ 9CF0 C9           	ret
 681+ 9CF1
 682+ 9CF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CF1
 684+ 9CF1 2A B7 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CF4 01 1F 00     	ld bc,31
 686+ 9CF7 A7           	and a
 687+ 9CF8 ED 42        	sbc hl,bc
 688+ 9CFA 22 B7 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9CFD 21 E3 89     	ld hl,Ctrl_0
 690+ 9D00 CB CE        	set 1,(hl)
 691+ 9D02 C9           	ret
 692+ 9D03
 693+ 9D03              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D03
 695+ 9D03 24           Reaparece_abajo inc h
 696+ 9D04 01 E0 17     	ld bc,$17e0
 697+ 9D07 A7           	and a
 698+ 9D08 ED 4A        	adc hl,bc
 699+ 9D0A 22 B7 89     	ld (Posicion_actual),hl
 700+ 9D0D 21 E3 89     	ld hl,Ctrl_0
 701+ 9D10 CB D6        	set 2,(hl)
 702+ 9D12 C9           	ret
 703+ 9D13
 704+ 9D13              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D13
 706+ 9D13 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D16 A7           	and a
 708+ 9D17 ED 42        	sbc hl,bc
 709+ 9D19 22 B7 89     	ld (Posicion_actual),hl
 710+ 9D1C 21 E3 89     	ld hl,Ctrl_0
 711+ 9D1F CB DE        	set 3,(hl)
 712+ 9D21 C9           	ret
 713+ 9D22
 714+ 9D22              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D22              ;
 716+ 9D22              ;	15/07/23
 717+ 9D22
 718+ 9D22              Reinicio
 719+ 9D22
 720+ 9D22              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D22
 722+ 9D22 AF           	xor a
 723+ 9D23 21 EA 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D26 CD 44 9D     	call Limpia_contenido_hl
 725+ 9D29
 726+ 9D29 21 B7 89     	ld hl,Posicion_actual
 727+ 9D2C CD 44 9D     	call Limpia_contenido_hl
 728+ 9D2F
 729+ 9D2F CD 65 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D32 CD EF 9F     	call Inicia_Puntero_mov
 731+ 9D35
 732+ 9D35 21 EC 89     	ld hl,Incrementa_puntero
 733+ 9D38 06 05        	ld b,5
 734+ 9D3A 77           1 ld (hl),a
 735+ 9D3B 23           	inc hl
 736+ 9D3C 10 FC        	djnz 1B
 737+ 9D3E
 738+ 9D3E 21 F6 89     	ld hl,Ctrl_2
 739+ 9D41 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D43
 741+ 9D43 C9           	ret
 742+ 9D44
 743+ 9D44 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D45 23           	inc hl
 745+ 9D46 77           	ld (hl),a
 746+ 9D47 C9           	ret
 747+ 9D48
 748+ 9D48
# file closed: Direcciones.asm
1446  9D48              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D48              ; ------------------------------------------------------------------------
   2+ 9D48              ;
   3+ 9D48              ;	02/04/23
   4+ 9D48              ;
   5+ 9D48              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D48              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D48              ;
   8+ 9D48              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D48              ;
  10+ 9D48              ;	Modifica: A,BC y DE.
  11+ 9D48
  12+ 9D48 C5           Genera_coordenadas push bc
  13+ 9D49 E5           	push hl
  14+ 9D4A D5           	push de
  15+ 9D4B
  16+ 9D4B 2A B7 89     	ld hl,(Posicion_actual)
  17+ 9D4E
  18+ 9D4E 7D           	ld a,l
  19+ 9D4F E6 1F        	and $1f
  20+ 9D51 32 BB 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D54
  22+ 9D54 CD BD 99     	call calcula_tercio
  23+ 9D57 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D58
  25+ 9D58 1E 00        	ld e,0
  26+ 9D5A 7D           	ld a,l
  27+ 9D5B E6 E0        	and $e0
  28+ 9D5D 28 01        	jr z,1F
  29+ 9D5F 04           	inc b
  30+ 9D60
  31+ 9D60 04           1 inc b
  32+ 9D61 05           	dec b
  33+ 9D62 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D64              ;														; _ , salimos.
  35+ 9D64 1C           3 inc e
  36+ 9D65 D6 20        	sub 32
  37+ 9D67 20 FB        	jr nz,3B
  38+ 9D69 10 F5        	djnz 1B
  39+ 9D6B
  40+ 9D6B 7B           2 ld a,e
  41+ 9D6C 32 BC 89     	ld (Coordenada_y),a
  42+ 9D6F
  43+ 9D6F D1           	pop de
  44+ 9D70 E1           	pop hl
  45+ 9D71 C1           	pop bc
  46+ 9D72
  47+ 9D72 C9           	ret
  48+ 9D73
  49+ 9D73              ; ------------------------------------------------------------------------
  50+ 9D73              ;	28/05/23
  51+ 9D73              ;
  52+ 9D73              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D73              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D73              ;
  55+ 9D73              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D73              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D73              ;
  58+ 9D73              ;		DE="$120d"
  59+ 9D73              ;
  60+ 9D73              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D73              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D73              ;
  63+ 9D73              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D73
  65+ 9D73              ;	Modifica: A,BC y DE.
  66+ 9D73
  67+ 9D73
  68+ 9D73              Genera_coordenadas_disparo
  69+ 9D73
  70+ 9D73              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D73
  72+ 9D73 7D           	ld a,l
  73+ 9D74 E6 1F        	and $1f
  74+ 9D76 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D77 CD BD 99     	call calcula_tercio
  76+ 9D7A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D7B 1E 00        	ld e,0
  78+ 9D7D 7D           	ld a,l
  79+ 9D7E E6 E0        	and $e0
  80+ 9D80 28 01        	jr z,1F
  81+ 9D82 04           	inc b
  82+ 9D83 1C           1 inc e
  83+ 9D84 D6 20        	sub 32
  84+ 9D86 20 FB        	jr nz,1B
  85+ 9D88 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D8A C9           	ret
  87+ 9D8B
# file closed: Genera_coordenadas.asm
1447  9D8B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D8B
   2+ 9D8B
   3+ 9D8B              ;   07/07/23
   4+ 9D8B              ;
   5+ 9D8B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D8B              ;
   7+ 9D8B              ;   Codificación:
   8+ 9D8B              ;
   9+ 9D8B              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D8B              ;
  11+ 9D8B              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D8B              ;
  13+ 9D8B              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D8B              ;
  15+ 9D8B              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D8B              ;
  17+ 9D8B              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D8B              ;                               ..... %01000010 Vel_up 4
  19+ 9D8B              ;                                               Vel_down 2
  20+ 9D8B              ;                               ..... $42
  21+ 9D8B              ;
  22+ 9D8B              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D8B              ;
  24+ 9D8B              ;                               ..... %01000010 Vel_left 4
  25+ 9D8B              ;                                               Vel_right 2
  26+ 9D8B              ;                               ..... $42
  27+ 9D8B              ;
  28+ 9D8B              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D8B              ;
  30+ 9D8B              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D8B              ;
  32+ 9D8B              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D8B              ;
  34+ 9D8B              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D8B              ;                                     $53
  36+ 9D8B              ;
  37+ 9D8B              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D8B              ;
  39+ 9D8B              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D8B              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D8B              ;
  42+ 9D8B              ;                       Arriba ..... $81
  43+ 9D8B              ;                       Arriba - izquierda ..... $a1
  44+ 9D8B              ;                       Arriba - derecha ..... $91
  45+ 9D8B              ;
  46+ 9D8B              ;                       Abajo ..... $41
  47+ 9D8B              ;                       Abajo - izquierda ..... $61
  48+ 9D8B              ;                       Abajo - derecha ..... $51
  49+ 9D8B              ;
  50+ 9D8B              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D8B              ;
  52+ 9D8B              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D8B              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D8B              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D8B              ;
  56+ 9D8B              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D8B              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D8B              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D8B              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D8B              ;
  61+ 9D8B              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D8B              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D8B              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D8B              ;
  65+ 9D8B              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D8B              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D8B              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D8B              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D8B
  70+ 9D8B              ; ----- ----- ----- ----- -----
  71+ 9D8B
  72+ 9D8B B7 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D8D BF 9D            defw F_1
  74+ 9D8F C9 9D            defw F_2
  75+ 9D91 D3 9D            defw Codo_abajo_derecha
  76+ 9D93 07 9E            defw Derecha_y_subiendo
  77+ 9D95 11 9E            defw Derecha_y_subiendo_1
  78+ 9D97 1B 9E            defw F_3
  79+ 9D99 25 9E            defw F_4
  80+ 9D9B 2F 9E            defw Derecha_y_bajando
  81+ 9D9D 39 9E            defw Derecha_y_bajando_1
  82+ 9D9F 43 9E            defw Derecha_y_bajando_2
  83+ 9DA1 4D 9E            defw Codo_derecha_abajo
  84+ 9DA3 7D 9E            defw Codo_abajo_izq.
  85+ 9DA5 B1 9E            defw Izquierda_y_subiendo
  86+ 9DA7 BB 9E            defw Izquierda_y_subiendo_1
  87+ 9DA9 C5 9E            defw F_5
  88+ 9DAB CF 9E            defw F_6
  89+ 9DAD D9 9E            defw Izquierda_y_bajando
  90+ 9DAF E3 9E            defw Izquierda_y_bajando_1
  91+ 9DB1 ED 9E            defw Izquierda_y_bajando_2
  92+ 9DB3 F7 9E            defw Codo_izquierda_abajo
  93+ 9DB5 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DB7
  95+ 9DB7 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DBB 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DBF
  98+ 9DBF 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DC3 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DC7 08 00
 100+ 9DC9 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DCD 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DD1 0F FE
 102+ 9DD3
 103+ 9DD3 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DD7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DDB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DDF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DE3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DE7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DEB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DEF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DF3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DF7 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DFB 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DFF 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E03 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E07
 117+ 9E07 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E0B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E0F 06 00
 119+ 9E11
 120+ 9E11 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E15 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E19 02 00
 122+ 9E1B
 123+ 9E1B 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E1F 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E23 04 00
 125+ 9E25 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E29 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E2D 08 00
 127+ 9E2F
 128+ 9E2F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E33 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E37 02 00
 130+ 9E39
 131+ 9E39 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E3D 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E41 06 00
 133+ 9E43
 134+ 9E43 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E47 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E4B 06 00
 136+ 9E4D
 137+ 9E4D              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E4D
 139+ 9E4D 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E51 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E55 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E59 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E5D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E61 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E65 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E69 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E6D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E71 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E75 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E79 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E7D
 152+ 9E7D 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E81 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E85 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E89 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E8D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E91 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E95 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E99 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E9D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EA1 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EA5 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EA9 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EAD 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EB1
 166+ 9EB1 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EB5 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EB9 06 00
 168+ 9EBB
 169+ 9EBB 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EBF 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EC3 02 00
 171+ 9EC5
 172+ 9EC5 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EC9 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ECD 04 00
 174+ 9ECF 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ED3 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9ED7 08 00
 176+ 9ED9
 177+ 9ED9 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EDD 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EE1 02 00
 179+ 9EE3
 180+ 9EE3 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EE7 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EEB 06 00
 182+ 9EED
 183+ 9EED 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EF1 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EF5 06 00
 185+ 9EF7
 186+ 9EF7 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EFB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EFF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F03 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F07 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F0B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F0F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F13 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F17 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F1B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F1F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F23 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F27
 199+ 9F27              ; ----- ----- ----- ----- -----
 200+ 9F27              ;
 201+ 9F27              ;   27/06/23
 202+ 9F27
 203+ 9F27              Movimiento
 204+ 9F27
 205+ 9F27              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F27
 207+ 9F27              ;    ld hl,(Posicion_actual)
 208+ 9F27
 209+ 9F27 3A F6 89         ld a,(Ctrl_2)
 210+ 9F2A CB 57            bit 2,a
 211+ 9F2C 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F2E
 213+ 9F2E 2A E8 89         ld hl,(Puntero_mov)
 214+ 9F31 7E               ld a,(hl)
 215+ 9F32
 216+ 9F32              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F32
 218+ 9F32              Inicia_desplazamiento.
 219+ 9F32
 220+ 9F32              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F32
 222+ 9F32 CD 26 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F35
 224+ 9F35              ; Iniciamos (Repetimos_mov).
 225+ 9F35
 226+ 9F35 7E               ld a,(hl)
 227+ 9F36 E6 0F            and $0f
 228+ 9F38 32 EE 89         ld (Repetimos_desplazamiento),a
 229+ 9F3B 32 EF 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F3E
 231+ 9F3E              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F3E
 233+ 9F3E 23               inc hl
 234+ 9F3F 7E               ld a,(hl)
 235+ 9F40 32 F1 89         ld (Cola_de_desplazamiento),a
 236+ 9F43 2B               dec hl
 237+ 9F44
 238+ 9F44 21 F6 89         ld hl,Ctrl_2
 239+ 9F47 CB D6            set 2,(hl)
 240+ 9F49
 241+ 9F49              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F49              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F49
 244+ 9F49              Desplazamiento_iniciado
 245+ 9F49
 246+ 9F49 CD FA 9F         call Aplica_desplazamiento
 247+ 9F4C
 248+ 9F4C 3A F6 89         ld a,(Ctrl_2)
 249+ 9F4F CB 67            bit 4,a
 250+ 9F51 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F52
 252+ 9F52 21 EE 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F55 35               dec (hl)
 254+ 9F56 C0               ret nz
 255+ 9F57
 256+ 9F57              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F57              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F57              ; Analiza (Cola_de_desplazamiento).
 259+ 9F57
 260+ 9F57 3A F1 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F5A A7               and a
 262+ 9F5B CC 4F A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F5E 28 30            jr z,Reinicia_el_movimiento
 264+ 9F60
 265+ 9F60 FE FF            cp $ff
 266+ 9F62 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F64
 268+ 9F64 FE FE            cp $fe
 269+ 9F66 CC D3 9F         call z,Fijamos_bucle
 270+ 9F69 28 25            jr z,Reinicia_el_movimiento
 271+ 9F6B
 272+ 9F6B FE FD            cp $fd
 273+ 9F6D 20 11            jr nz,1F
 274+ 9F6F
 275+ 9F6F              ; ---
 276+ 9F6F              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F6F
 278+ 9F6F 3A F6 89         ld a,(Ctrl_2)
 279+ 9F72 CB 5F            bit 3,a
 280+ 9F74 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F76
 282+ 9F76              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F76
 284+ 9F76 21 F6 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F79 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F7B
 287+ 9F7B CD E4 9F         call Inicia_Repetimos_movimiento
 288+ 9F7E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F80              ; ---
 290+ 9F80
 291+ 9F80 FE 01        1 cp 1
 292+ 9F82 CA BD 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F85
 294+ 9F85 3D               dec a
 295+ 9F86 32 F1 89         ld (Cola_de_desplazamiento),a
 296+ 9F89
 297+ 9F89 3A EF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F8C 32 EE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F8F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F8F C9               ret
 301+ 9F90
 302+ 9F90              Reinicia_el_movimiento
 303+ 9F90
 304+ 9F90 3A F6 89         ld a,(Ctrl_2)
 305+ 9F93 CB 5F            bit 3,a
 306+ 9F95 28 1B            jr z,2F
 307+ 9F97
 308+ 9F97              ; (Cola_de_desplazamiento)="254".
 309+ 9F97
 310+ 9F97 21 F0 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F9A 35               dec (hl)
 312+ 9F9B 20 15            jr nz,2F
 313+ 9F9D
 314+ 9F9D              ; Fin de las repeticiones del último movimiento.
 315+ 9F9D
 316+ 9F9D 21 F6 89         ld hl,Ctrl_2
 317+ 9FA0 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FA2
 319+ 9FA2 2A E8 89         ld hl,(Puntero_mov)
 320+ 9FA5 23               inc hl
 321+ 9FA6 23               inc hl
 322+ 9FA7 23               inc hl
 323+ 9FA8 22 E8 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FAB              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FAB 7E               ld a,(hl)
 326+ 9FAC 32 F1 89         ld (Cola_de_desplazamiento),a
 327+ 9FAF
 328+ 9FAF C3 57 9F         jp Cola
 329+ 9FB2
 330+ 9FB2
 331+ 9FB2 CD EF 9F     2 call Inicia_Puntero_mov
 332+ 9FB5
 333+ 9FB5 21 F6 89         ld hl,Ctrl_2
 334+ 9FB8 CB 96            res 2,(hl)
 335+ 9FBA
 336+ 9FBA C3 27 9F         jp Movimiento
 337+ 9FBD
 338+ 9FBD              Siguiente_desplazamiento
 339+ 9FBD
 340+ 9FBD              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FBD              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FBD
 343+ 9FBD 21 F6 89         ld hl,Ctrl_2
 344+ 9FC0 CB 96            res 2,(hl)
 345+ 9FC2
 346+ 9FC2 2A E8 89         ld hl,(Puntero_mov)
 347+ 9FC5 23               inc hl
 348+ 9FC6 23               inc hl
 349+ 9FC7 22 E8 89         ld (Puntero_mov),hl
 350+ 9FCA
 351+ 9FCA 7E               ld a,(hl)
 352+ 9FCB A7               and a
 353+ 9FCC CC 4F A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FCF CA 90 9F         jp z,Reinicia_el_movimiento
 355+ 9FD2
 356+ 9FD2 C9               ret
 357+ 9FD3              ; Subrutinas -----------------------------------------
 358+ 9FD3              ; ---------- --------- --------- ---------- ----------
 359+ 9FD3              ;
 360+ 9FD3              ;   24/07/23
 361+ 9FD3              ;
 362+ 9FD3              ;   Fijamos_bucle
 363+ 9FD3              ;
 364+ 9FD3              ;
 365+ 9FD3
 366+ 9FD3              Fijamos_bucle
 367+ 9FD3
 368+ 9FD3 3A EC 89         ld a,(Incrementa_puntero)
 369+ 9FD6 3C               inc a
 370+ 9FD7 32 ED 89         ld (Incrementa_puntero_backup),a
 371+ 9FDA
 372+ 9FDA CD 4F A0         call Incrementa_Puntero_indice_mov
 373+ 9FDD 2A E6 89         ld hl,(Puntero_indice_mov)
 374+ 9FE0 22 EA 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FE3 C9               ret
 376+ 9FE4
 377+ 9FE4              ; ---------- --------- --------- ---------- ----------
 378+ 9FE4              ;
 379+ 9FE4              ;   07/7/23
 380+ 9FE4              ;
 381+ 9FE4              ;   Inicia_Repetimos_movimiento
 382+ 9FE4              ;
 383+ 9FE4              ;
 384+ 9FE4
 385+ 9FE4              Inicia_Repetimos_movimiento
 386+ 9FE4
 387+ 9FE4              ; Iniciamos (Repetimos_movimiento).
 388+ 9FE4
 389+ 9FE4 DD 2A E8 89      ld ix,(Puntero_mov)
 390+ 9FE8 DD 7E 02         ld a,(ix+2)
 391+ 9FEB 32 F0 89         ld (Repetimos_movimiento),a
 392+ 9FEE
 393+ 9FEE C9               ret
 394+ 9FEF
 395+ 9FEF              ; ---------- --------- --------- ---------- ----------
 396+ 9FEF              ;
 397+ 9FEF              ;   26/6/23
 398+ 9FEF              ;
 399+ 9FEF              ;   Inicia_Puntero_mov
 400+ 9FEF              ;
 401+ 9FEF              ;
 402+ 9FEF
 403+ 9FEF 2A E6 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FF2 5E               ld e,(hl)
 405+ 9FF3 23               inc hl
 406+ 9FF4 56               ld d,(hl)
 407+ 9FF5 EB               ex de,hl
 408+ 9FF6 22 E8 89         ld (Puntero_mov),hl
 409+ 9FF9 C9               ret
 410+ 9FFA
 411+ 9FFA              ; ---------- --------- --------- ---------- ----------
 412+ 9FFA              ;
 413+ 9FFA              ;   27/06/23
 414+ 9FFA              ;
 415+ 9FFA              ;   Aplica_movimiento.
 416+ 9FFA
 417+ 9FFA              Aplica_desplazamiento
 418+ 9FFA
 419+ 9FFA              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9FFA
 421+ 9FFA 2A E8 89         ld hl, (Puntero_mov)
 422+ 9FFD
 423+ 9FFD 7E               ld a,(hl)
 424+ 9FFE E6 F0            and $f0
 425+ A000 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A001
 427+ A001 CB 7E            bit 7,(hl)
 428+ A003 28 03            jr z,1F
 429+ A005 CD 34 9A         call Mov_up
 430+ A008 2A E8 89     1 ld hl, (Puntero_mov)
 431+ A00B CB 76            bit 6,(hl)
 432+ A00D 28 03            jr z,2F
 433+ A00F CD 03 9A         call Mov_down
 434+ A012 2A E8 89     2 ld hl, (Puntero_mov)
 435+ A015 CB 6E            bit 5,(hl)
 436+ A017 28 03            jr z,3F
 437+ A019 CD 95 9B         call Mov_left
 438+ A01C 2A E8 89     3 ld hl, (Puntero_mov)
 439+ A01F CB 66            bit 4,(hl)
 440+ A021 C8               ret z
 441+ A022 CD 77 9A         call Mov_right
 442+ A025 C9               ret
 443+ A026
 444+ A026              ; ---------- --------- --------- ---------- ----------
 445+ A026              ;
 446+ A026              ;   26/06/23
 447+ A026              ;
 448+ A026              ;   Ajusta_velocidad_desplazamiento.
 449+ A026
 450+ A026              Ajusta_velocidad_desplazamiento
 451+ A026
 452+ A026              ; 1er byte de la cadena de movimiento.
 453+ A026              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A026
 455+ A026 CD 44 A0         call Extrae_nibble_alto
 456+ A029
 457+ A029 32 CC 89         ld (Vel_up),a
 458+ A02C 79               ld a,c
 459+ A02D E6 0F            and $0f
 460+ A02F 32 CD 89         ld (Vel_down),a
 461+ A032
 462+ A032              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A032              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A032
 465+ A032 23               inc hl
 466+ A033 CD 44 A0         call Extrae_nibble_alto
 467+ A036
 468+ A036 32 CA 89         ld (Vel_left),a
 469+ A039 79               ld a,c
 470+ A03A E6 0F            and $0f
 471+ A03C 32 CB 89         ld (Vel_right),a
 472+ A03F
 473+ A03F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A03F
 475+ A03F 23               inc hl
 476+ A040 22 E8 89         ld (Puntero_mov),hl
 477+ A043 C9               ret
 478+ A044
 479+ A044 06 04        Extrae_nibble_alto ld b,4
 480+ A046 7E               ld a,(hl)
 481+ A047 4F               ld c,a
 482+ A048 E6 F0            and $f0
 483+ A04A CB 3F        1 srl a
 484+ A04C 10 FC            djnz 1B
 485+ A04E C9               ret
 486+ A04F
 487+ A04F              ; ---------- --------- --------- ---------- ----------
 488+ A04F              ;
 489+ A04F              ;   5/7/23
 490+ A04F              ;
 491+ A04F              ;   Incrementa_Puntero_indice_mov
 492+ A04F
 493+ A04F              Incrementa_Puntero_indice_mov
 494+ A04F
 495+ A04F 21 EC 89         ld hl,Incrementa_puntero
 496+ A052 34               inc (hl)
 497+ A053
 498+ A053 2A E6 89         ld hl,(Puntero_indice_mov)
 499+ A056 01 02 00         ld bc,2
 500+ A059 A7               and a
 501+ A05A 09               add hl,bc
 502+ A05B 22 E6 89         ld (Puntero_indice_mov),hl
 503+ A05E
 504+ A05E 7E               ld a,(hl)
 505+ A05F A7               and a
 506+ A060
 507+ A060              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A060
 509+ A060              ;    jr z,$
 510+ A060
 511+ A060              ;! Reinicia el Patrón de movimiento.
 512+ A060
 513+ A060 CC 65 A0         call z,Inicializa_Puntero_indice_mov
 514+ A063
 515+ A063 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A064
 517+ A064 C9               ret
 518+ A065
 519+ A065
 520+ A065              ; ---------- --------- --------- ---------- ----------
 521+ A065              ;
 522+ A065              ;   24/07/23
 523+ A065              ;
 524+ A065              ;   Inicializa_Puntero_indice_mov
 525+ A065
 526+ A065              Inicializa_Puntero_indice_mov
 527+ A065
 528+ A065              ; Existe etiqueta de bucle principal???
 529+ A065
 530+ A065 2A EA 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A068 24               inc h
 532+ A069 25               dec h
 533+ A06A 28 05            jr z,2F
 534+ A06C
 535+ A06C 22 E6 89         ld (Puntero_indice_mov),hl
 536+ A06F 18 14            jr 3F
 537+ A071
 538+ A071              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A071
 540+ A071 3A EC 89     2 ld a,(Incrementa_puntero)
 541+ A074 47               ld b,a
 542+ A075
 543+ A075 2A E6 89         ld hl,(Puntero_indice_mov)
 544+ A078 2B           1 dec hl
 545+ A079 2B               dec hl
 546+ A07A 10 FC            djnz 1B
 547+ A07C 22 E6 89         ld (Puntero_indice_mov),hl
 548+ A07F
 549+ A07F AF               xor a
 550+ A080 32 EC 89         ld (Incrementa_puntero),a
 551+ A083 18 06            jr 4F
 552+ A085
 553+ A085 3A ED 89     3 ld a,(Incrementa_puntero_backup)
 554+ A088 32 EC 89         ld (Incrementa_puntero),a
 555+ A08B C9           4 ret
 556+ A08C
 557+ A08C
 558+ A08C
# file closed: Patrones_de_mov.asm
1448  A08C              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A08C              ; Relojes y temporizaciones.
   2+ A08C
   3+ A08C              ; ------------------------------------------------------
   4+ A08C              ;
   5+ A08C              ;	16/7/23
   6+ A08C              ;
   7+ A08C              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A08C              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A08C              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A08C              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A08C              ;
  12+ A08C              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A08C              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A08C
  15+ A08C              ; Disparo_entidad db 1
  16+ A08C              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A08C              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A08C
  19+ A08C              Habilita_disparos
  20+ A08C
  21+ A08C 7E           	ld a,(hl)
  22+ A08D A7           	and a
  23+ A08E C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A08F
  25+ A08F EB           	ex de,hl
  26+ A090
  27+ A090 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A091 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A092
  30+ A092              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A092
  32+ A092 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A093 7E           	ld a,(hl)
  34+ A094 23           	inc hl
  35+ A095 77           	ld (hl),a
  36+ A096
  37+ A096 EB           	ex de,hl						; Habilitamos disparo.
  38+ A097 3E 01        	ld a,1
  39+ A099 77           	ld (hl),a
  40+ A09A C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1449  A09B              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A09B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A09B              ;
   3+ A09B              ;	9/8/23
   4+ A09B              ;
   5+ A09B              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A09B
   7+ A09B              ;	ADC HL,SP	LD (addr),SP
   8+ A09B              ;	ADD HL,SP	LD SP,(addr)
   9+ A09B              ;	ADD IX,SP	LD SP,nn
  10+ A09B              ; 	ADD IY,SP	LD SP,HL
  11+ A09B              ;				LD SP,IX
  12+ A09B              ;	DEC SP		LD SP,IY
  13+ A09B
  14+ A09B              ;	EX (SP),HL
  15+ A09B              ;	EX (SP),IX
  16+ A09B              ;	EX (SP),IY
  17+ A09B
  18+ A09B              ;	INC SP
  19+ A09B
  20+ A09B                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;	ld a,(Contador_de_frames)
  32+ 7FA0              ;	cp $e7
  33+ 7FA0              ;	jr z,$
  34+ 7FA0
  35+ 7FA0
  36+ 7FA0 ED 73 09 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  38+ 7FA7
  39+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  40+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  41+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  42+ 7FAC
  43+ 7FAC 3A F8 89         ld a,(Ctrl_1)
  44+ 7FAF CB 47            bit 0,a
  45+ 7FB1 28 05            jr z,2F
  46+ 7FB3
  47+ 7FB3 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
  48+ 7FB6 18 03            jr 4F
  49+ 7FB8
  50+ 7FB8 2A 0D 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  51+ 7FBB
  52+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  53+ 7FBD
  54+ 7FBD D1           1 pop de
  55+ 7FBE 73               ld (hl),e
  56+ 7FBF 23               inc hl
  57+ 7FC0 72               ld (hl),d
  58+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  59+ 7FC2 10 F9            djnz 1B
  60+ 7FC4
  61+ 7FC4 CB 47            bit 0,a
  62+ 7FC6 28 05            jr z,5F
  63+ 7FC8
  64+ 7FC8 22 0F 8A         ld (Stack_snapshot_disparos),hl
  65+ 7FCB 18 03            jr 6F
  66+ 7FCD
  67+ 7FCD 22 0D 8A     5 ld (Stack_snapshot),hl
  68+ 7FD0 ED 7B 09 8A  6 ld sp,(Stack)
  69+ 7FD4
  70+ 7FD4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  71+ 7FD4
  72+ 7FD4 5D               ld e,l
  73+ 7FD5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  74+ 7FD6
  75+ 7FD6 2A 29 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  76+ 7FD9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  77+ 7FDA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  78+ 7FDB 72               ld (hl),d                                     ; _ álbum a otro.
  79+ 7FDC
  80+ 7FDC C9               ret
  81+ 7FDD
  82+ 7FDD              ; ------------------------------------------------
  83+ 7FDD              ;
  84+ 7FDD              ;   3/08/23
  85+ 7FDD              ;
  86+ 7FDD              ;   La rutina estará situada justo después de:
  87+ 7FDD              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  88+ 7FDD              ;
  89+ 7FDD              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  90+ 7FDD              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  91+ 7FDD
  92+ 7FDD                  org $7419
  93+ 7419
  94+ 7419              Gestiona_albumes_de_fotos
  95+ 7419
  96+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  97+ 7419              ;   Vaciamos Album_de_fotos.
  98+ 7419
  99+ 7419              ;   Album_de_fotos. Contiene datos ???
 100+ 7419
 101+ 7419 21 01 70         ld hl,Album_de_fotos+1
 102+ 741C 7E               ld a,(hl)
 103+ 741D A7               and a
 104+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 105+ 7420
 106+ 7420 2A 11 8A         ld hl,(End_Snapshot)
 107+ 7423 01 00 70         ld bc,Album_de_fotos
 108+ 7426 11 01 70         ld de,Album_de_fotos+1
 109+ 7429 AF               xor a
 110+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 111+ 742B
 112+ 742B CD BB 74         call Limpia_album
 113+ 742E
 114+ 742E 21 00 00         ld hl,0
 115+ 7431 22 11 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 116+ 7434
 117+ 7434              ; ----- ----- ----- -----
 118+ 7434
 119+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 120+ 7434
 121+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 122+ 7437 7E               ld a,(hl)
 123+ 7438 A7               and a
 124+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 125+ 743B              ;                               ; _ información del album2 al album1.
 126+ 743B
 127+ 743B              ; ----- ----- ----- -----
 128+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 129+ 743B
 130+ 743B 2A 15 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 131+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 132+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 133+ 7444
 134+ 7444 CD BB 74         call Limpia_album
 135+ 7447
 136+ 7447              ;   Calculamos (End_Snapshot)
 137+ 7447
 138+ 7447 A7               and a
 139+ 7448 ED 4A            adc hl,bc
 140+ 744A 22 11 8A         ld (End_Snapshot),hl
 141+ 744D
 142+ 744D              ;   Limpiamos Album_de_fotos_1.
 143+ 744D
 144+ 744D 2A 15 8A         ld hl,(End_Snapshot_1)
 145+ 7450 01 84 70         ld bc,Album_de_fotos_1
 146+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 147+ 7456 AF               xor a
 148+ 7457 02               ld (bc),a
 149+ 7458
 150+ 7458 CD BB 74         call Limpia_album
 151+ 745B
 152+ 745B 21 00 00         ld hl,0
 153+ 745E 22 15 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 154+ 7461
 155+ 7461              ; ----- ----- ----- -----
 156+ 7461
 157+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 158+ 7461
 159+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 160+ 7464 7E               ld a,(hl)
 161+ 7465 A7               and a
 162+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 163+ 7468              ;                               ; _ información del album3 al album2.
 164+ 7468              ; ----- ----- ----- -----
 165+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 166+ 7468
 167+ 7468 2A 19 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 168+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 169+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 170+ 7471
 171+ 7471 CD BB 74         call Limpia_album
 172+ 7474
 173+ 7474              ;   Calculamos (End_Snapshot_1):
 174+ 7474
 175+ 7474 A7               and a
 176+ 7475 ED 4A            adc hl,bc
 177+ 7477 22 15 8A         ld (End_Snapshot_1),hl
 178+ 747A
 179+ 747A              ;   Limpiamos Album_de_fotos_2.
 180+ 747A
 181+ 747A 2A 19 8A         ld hl,(End_Snapshot_2)
 182+ 747D 01 07 71         ld bc,Album_de_fotos_2
 183+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 184+ 7483 AF               xor a
 185+ 7484 02               ld (bc),a
 186+ 7485
 187+ 7485 CD BB 74         call Limpia_album
 188+ 7488
 189+ 7488 21 00 00         ld hl,0
 190+ 748B 22 19 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 191+ 748E
 192+ 748E              ; ----- ----- ----- -----
 193+ 748E
 194+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 195+ 748E
 196+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 197+ 7491 7E               ld a,(hl)
 198+ 7492 A7               and a
 199+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 200+ 7494
 201+ 7494              ; ----- ----- ----- -----
 202+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 203+ 7494
 204+ 7494 2A 1D 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 205+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 206+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 207+ 749D
 208+ 749D CD BB 74         call Limpia_album
 209+ 74A0
 210+ 74A0              ;   Calculamos (End_Snapshot_2):
 211+ 74A0
 212+ 74A0 A7               and a
 213+ 74A1 ED 4A            adc hl,bc
 214+ 74A3 22 19 8A         ld (End_Snapshot_2),hl
 215+ 74A6
 216+ 74A6              ;   Limpiamos Album_de_fotos_3.
 217+ 74A6
 218+ 74A6 2A 1D 8A         ld hl,(End_Snapshot_3)
 219+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 220+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 221+ 74AF AF               xor a
 222+ 74B0 02               ld (bc),a
 223+ 74B1
 224+ 74B1 CD BB 74         call Limpia_album
 225+ 74B4
 226+ 74B4 21 00 00         ld hl,0
 227+ 74B7 22 1D 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 228+ 74BA C9               ret
 229+ 74BB
 230+ 74BB              ; ----------------------------------------------------
 231+ 74BB              ;
 232+ 74BB              ;   10/8/23
 233+ 74BB              ;
 234+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 235+ 74BB              ;
 236+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 237+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 238+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 239+ 74BB
 240+ 74BB              ;    ld hl,(End_Snapshot)
 241+ 74BB              ;    ld bc,Album_de_fotos
 242+ 74BB              ;    ld de,Album_de_fotos+1
 243+ 74BB
 244+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 245+ 74BB
 246+ 74BB              Limpia_album
 247+ 74BB D5               push de            ; Guardo DESTINO.
 248+ 74BC C5               push bc            ; Guardo ORIGEN.
 249+ 74BD ED 42            sbc hl,bc
 250+ 74BF 4D               ld c,l
 251+ 74C0 44               ld b,h
 252+ 74C1 E1               pop hl
 253+ 74C2 C5               push bc
 254+ 74C3 ED B0            ldir
 255+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 256+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 257+ 74C7 C9               ret                         ; _ a otro).
 258+ 74C8              ;
 259+ 74C8
 260+ 74C8              ; -----------------------------------------------
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
 265+ 74C8
# file closed: Guarda_foto_registros.asm
1450  74C8
1451  74C8              	SAVESNA "Pruebas.sna", START
1452  74C8
1453  74C8
1454  74C8
1455  74C8
# file closed: Banco_de_pruebas.asm
