# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 4D 8A     	call Frame
  15  A104
  16  A104 3A 79 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8 EE 83        Indice_Explosion_3x3 defw Explosion_3x3_1
 206+ 83EA 1E 84        	defw Explosion_3x3_2
 207+ 83EC 4E 84        	defw Explosion_3x3_3
 208+ 83EE
 209+ 83EE 0D ED E0 0D  Explosion_3x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 209+ 83F2 ED E0 0D ED
 210+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 210+ 83FA 0D ED E0 0D
 211+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 211+ 8402 E0 0D ED E0
 212+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 212+ 840A ED E0 0D ED
 213+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 213+ 8412 0D ED E0 0D
 214+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 214+ 841A E0 0D ED E0
 215+ 841E
 216+ 841E 01 8F 80 01  Explosion_3x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 216+ 8422 8F 80 01 8F
 217+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 217+ 842A 01 8F 80 01
 218+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 218+ 8432 80 01 8F 80
 219+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 219+ 843A 8F 80 01 8F
 220+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 220+ 8442 01 8F 80 01
 221+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 221+ 844A 80 01 8F 80
 222+ 844E
 223+ 844E 01 11 10 01  Explosion_3x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 223+ 8452 11 10 01 11
 224+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 224+ 845A 01 11 10 01
 225+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 225+ 8462 10 01 11 10
 226+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 226+ 846A 11 10 01 11
 227+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 227+ 8472 01 11 10 01
 228+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 228+ 847A 10 01 11 10
 229+ 847E
 230+ 847E
 231+ 847E DE DE DE DE  Explosion_2x2 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 231+ 8482 DE DE DE DE
 232+ 8486 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 232+ 848A DE DE DE DE
 233+ 848E DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 233+ 8492 DE DE DE DE
 234+ 8496 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 234+ 849A DE DE DE DE
# file closed: Sprites_e_indices.asm
  23  849E              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 849E
   2+ 849E              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 849E
   4+ 849E              ; 13/05/23
   5+ 849E
   6+ 849E              ; Control. %00000001 00000001
   7+ 849E              ;
   8+ 849E              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 849E              ;                    _ hacen las entidades hacia abajo.
  10+ 849E              ;
  11+ 849E              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 849E
  13+ 849E A4 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84A0 AC 84        	defw Disparo_2A
  15+ 84A2 B4 84        	defw Disparo_3A
  16+ 84A4
  17+ 84A4 00 00        Disparo_1A defw 0									; Control.
  18+ 84A6 00 00        	defw 0											; Puntero objeto.
  19+ 84A8 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84AA 00 00        	defw 0											; Rutina de impresión.
  21+ 84AC
  22+ 84AC 00 00        Disparo_2A defw 0									; Control.
  23+ 84AE 00 00        	defw 0											; Puntero objeto.
  24+ 84B0 00 00        	defw 0											; Puntero de impresión.
  25+ 84B2 00 00        	defw 0											; Rutina de impresión.
  26+ 84B4
  27+ 84B4 00 00        Disparo_3A defw 0
  28+ 84B6
  29+ 84B6 CC 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 84B8 D4 84        	defw Disparo_2
  31+ 84BA DC 84        	defw Disparo_3
  32+ 84BC E4 84        	defw Disparo_4
  33+ 84BE EC 84        	defw Disparo_5
  34+ 84C0 F4 84        	defw Disparo_6
  35+ 84C2 FC 84        	defw Disparo_7
  36+ 84C4 04 85        	defw Disparo_8
  37+ 84C6 0C 85        	defw Disparo_9
  38+ 84C8 14 85        	defw Disparo_10
  39+ 84CA 1C 85        	defw Disparo_11
  40+ 84CC
  41+ 84CC 00 00        Disparo_1 defw 0									; Control.
  42+ 84CE 00 00        	defw 0											; Puntero objeto.
  43+ 84D0 00 00        	defw 0											; Puntero de impresión.
  44+ 84D2 00 00        	defw 0											; Rutina de impresión.
  45+ 84D4
  46+ 84D4 00 00        Disparo_2 defw 0									; Control.
  47+ 84D6 00 00        	defw 0											; Puntero objeto.
  48+ 84D8 00 00        	defw 0											; Puntero de impresión.
  49+ 84DA 00 00        	defw 0											; Rutina de impresión.
  50+ 84DC
  51+ 84DC 00 00        Disparo_3 defw 0									; Control.
  52+ 84DE 00 00        	defw 0											; Puntero objeto.
  53+ 84E0 00 00        	defw 0											; Puntero de impresión.
  54+ 84E2 00 00        	defw 0											; Rutina de impresión.
  55+ 84E4
  56+ 84E4 00 00        Disparo_4 defw 0									; Control.
  57+ 84E6 00 00        	defw 0											; Puntero objeto.
  58+ 84E8 00 00        	defw 0											; Puntero de impresión.
  59+ 84EA 00 00        	defw 0											; Rutina de impresión.
  60+ 84EC
  61+ 84EC 00 00        Disparo_5 defw 0									; Control.
  62+ 84EE 00 00        	defw 0											; Puntero objeto.
  63+ 84F0 00 00        	defw 0											; Puntero de impresión.
  64+ 84F2 00 00        	defw 0											; Rutina de impresión.
  65+ 84F4
  66+ 84F4 00 00        Disparo_6 defw 0									; Control.
  67+ 84F6 00 00        	defw 0											; Puntero objeto.
  68+ 84F8 00 00        	defw 0											; Puntero de impresión.
  69+ 84FA 00 00        	defw 0											; Rutina de impresión.
  70+ 84FC
  71+ 84FC 00 00        Disparo_7 defw 0									; Control.
  72+ 84FE 00 00        	defw 0											; Puntero objeto.
  73+ 8500 00 00        	defw 0											; Puntero de impresión.
  74+ 8502 00 00        	defw 0											; Rutina de impresión.
  75+ 8504
  76+ 8504 00 00        Disparo_8 defw 0									; Control.
  77+ 8506 00 00        	defw 0											; Puntero objeto.
  78+ 8508 00 00        	defw 0											; Puntero de impresión.
  79+ 850A 00 00        	defw 0											; Rutina de impresión.
  80+ 850C
  81+ 850C 00 00        Disparo_9 defw 0									; Control.
  82+ 850E 00 00        	defw 0											; Puntero objeto.
  83+ 8510 00 00        	defw 0											; Puntero de impresión.
  84+ 8512 00 00        	defw 0											; Rutina de impresión.
  85+ 8514
  86+ 8514 00 00        Disparo_10 defw 0									; Control.
  87+ 8516 00 00        	defw 0											; Puntero objeto.
  88+ 8518 00 00        	defw 0											; Puntero de impresión.
  89+ 851A 00 00        	defw 0											; Rutina de impresión.
  90+ 851C
  91+ 851C 00 00        Disparo_11 defw 0
  92+ 851E
  93+ 851E              ; -------------------------------------------------------------------------------------
  94+ 851E
  95+ 851E              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 851E
  97+ 851E 74 85        	defw Caja_1
  98+ 8520 B2 85        	defw Caja_2
  99+ 8522 F0 85        	defw Caja_3
 100+ 8524 2E 86        	defw Caja_4
 101+ 8526 6C 86        	defw Caja_5
 102+ 8528 AA 86        	defw Caja_6
 103+ 852A E8 86        	defw Caja_7
 104+ 852C 26 87        	defw Caja_8
 105+ 852E 64 87        	defw Caja_9
 106+ 8530 A2 87        	defw Caja_10
 107+ 8532              ;	...
 108+ 8532              ;	...
 109+ 8532              ;	+ entidades ...
 110+ 8532 00 00        	defw 0
 111+ 8534 00 00        	defw 0
 112+ 8536
 113+ 8536              ; ---------- ---------- ---------- ---------- ----------
 114+ 8536
 115+ 8536 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8538 00 00        	defw 0		 									; (Posicion_actual).
 117+ 853A 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 853C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 853F
 120+ 853F 05           	db %00000101									; (Attr).
 121+ 8540 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8542 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8544
 124+ 8544 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8546 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8548
 127+ 8548 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 854A 04           	db 4 											; (Cuad_objeto).
 129+ 854B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 854F
 131+ 854F 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 132+ 8550
 133+ 8550 00 00        	db 0,0											; Variables_de_borrado
 134+ 8552 00 00        	defw 0											;	" " " " " " "
 135+ 8554 00 00        	defw 0											;	" " " " " " "
 136+ 8556 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 855A
 138+ 855A 00 00        	db 0,0											; Variables_de_pintado
 139+ 855C 00 00        	defw 0											;	" " " " " " "
 140+ 855E 00 00        	defw 0											;	" " " " " " "
 141+ 8560 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 8564
 143+ 8564 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 8567
 145+ 8567 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 856B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 856E
 148+ 856E 00           	db 0 											; (Columnas).
 149+ 856F 00 00        	defw 0											; (Limite_horizontal).
 150+ 8571 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2).
 151+ 8574
 152+ 8574              ; ---------- ---------- ---------- ---------- ----------
 153+ 8574
 154+ 8574 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 8576 00 00        	defw 0											; (Posicion_actual).
 156+ 8578 00 00        	defw 0 											; (Puntero_objeto).
 157+ 857A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 857D
 159+ 857D 00           	db %00000000 									; (Attr).
 160+ 857E
 161+ 857E 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 8580 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 8582 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 8584 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 8586
 166+ 8586 00 00        	defw 0											; (Posicion_inicio).
 167+ 8588 00           	db 0											; (Cuad_objeto).
 168+ 8589
 169+ 8589 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 858D
 171+ 858D 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 172+ 858E
 173+ 858E 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 8590 00 00        	defw 0											;	" " " " " " "
 175+ 8592 00 00        	defw 0											;	" " " " " " "
 176+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 8598
 178+ 8598 00 00        	db 0,0											; Variables_de_pintado
 179+ 859A 00 00        	defw 0											;	" " " " " " "
 180+ 859C 00 00        	defw 0											;	" " " " " " "
 181+ 859E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85A2
 183+ 85A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85A5
 185+ 85A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85AC
 188+ 85AC 00           	db 0 											; (Columnas).
 189+ 85AD 00 00        	defw 0											; (Limite_horizontal).
 190+ 85AF 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 191+ 85B2
 192+ 85B2              ; ---------- ---------- ---------- ---------- ----------
 193+ 85B2
 194+ 85B2 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85B4 00 00        	defw 0											; (Posicion_actual).
 196+ 85B6 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 85BB
 199+ 85BB 00           	db %00000000 									; (Attr).
 200+ 85BC
 201+ 85BC 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 85BE 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 85C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 85C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 85C4
 206+ 85C4 00 00        	defw 0											; (Posicion_inicio).
 207+ 85C6 00           	db 0											; (Cuad_objeto).
 208+ 85C7
 209+ 85C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 85CB
 211+ 85CB 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 212+ 85CC
 213+ 85CC 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 85CE 00 00        	defw 0											;	" " " " " " "
 215+ 85D0 00 00        	defw 0											;	" " " " " " "
 216+ 85D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 85D6
 218+ 85D6 00 00        	db 0,0											; Variables_de_pintado
 219+ 85D8 00 00        	defw 0											;	" " " " " " "
 220+ 85DA 00 00        	defw 0											;	" " " " " " "
 221+ 85DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 85E0
 223+ 85E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 85E3
 225+ 85E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 85E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 85EA
 228+ 85EA 00           	db 0 											; (Columnas).
 229+ 85EB 00 00        	defw 0											; (Limite_horizontal).
 230+ 85ED 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 231+ 85F0
 232+ 85F0              ; ---------- ---------- ---------- ---------- ----------
 233+ 85F0
 234+ 85F0 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 85F2 00 00        	defw 0											; (Posicion_actual).
 236+ 85F4 00 00        	defw 0 											; (Puntero_objeto).
 237+ 85F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 85F9
 239+ 85F9 00           	db %00000000 									; (Attr).
 240+ 85FA
 241+ 85FA 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 85FC 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 85FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8600 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8602
 246+ 8602 00 00        	defw 0											; (Posicion_inicio).
 247+ 8604 00           	db 0											; (Cuad_objeto).
 248+ 8605
 249+ 8605 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8609
 251+ 8609 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 252+ 860A
 253+ 860A 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 860C 00 00        	defw 0											;	" " " " " " "
 255+ 860E 00 00        	defw 0											;	" " " " " " "
 256+ 8610 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8614
 258+ 8614 00 00        	db 0,0											; Variables_de_pintado
 259+ 8616 00 00        	defw 0											;	" " " " " " "
 260+ 8618 00 00        	defw 0											;	" " " " " " "
 261+ 861A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 861E
 263+ 861E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8621
 265+ 8621 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 8625 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 8628
 268+ 8628 00           	db 0 											; (Columnas).
 269+ 8629 00 00        	defw 0											; (Limite_horizontal).
 270+ 862B 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 271+ 862E
 272+ 862E              ; ---------- ---------- ---------- ---------- ----------
 273+ 862E
 274+ 862E 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8630 00 00        	defw 0											; (Posicion_actual).
 276+ 8632 00 00        	defw 0 											; (Puntero_objeto).
 277+ 8634 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 8637
 279+ 8637 00           	db %00000000 									; (Attr).
 280+ 8638
 281+ 8638 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 863A 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 863C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 863E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8640
 286+ 8640 00 00        	defw 0											; (Posicion_inicio).
 287+ 8642 00           	db 0											; (Cuad_objeto).
 288+ 8643
 289+ 8643 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 8647
 291+ 8647 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 292+ 8648
 293+ 8648 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 864A 00 00        	defw 0											;	" " " " " " "
 295+ 864C 00 00        	defw 0											;	" " " " " " "
 296+ 864E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8652
 298+ 8652 00 00        	db 0,0											; Variables_de_pintado
 299+ 8654 00 00        	defw 0											;	" " " " " " "
 300+ 8656 00 00        	defw 0											;	" " " " " " "
 301+ 8658 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 865C
 303+ 865C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 865F
 305+ 865F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 8663 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 8666
 308+ 8666 00           	db 0 											; (Columnas).
 309+ 8667 00 00        	defw 0											; (Limite_horizontal).
 310+ 8669 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 311+ 866C
 312+ 866C              ; ---------- ---------- ---------- ---------- ----------
 313+ 866C
 314+ 866C 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 866E 00 00        	defw 0											; (Posicion_actual).
 316+ 8670 00 00        	defw 0 											; (Puntero_objeto).
 317+ 8672 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 8675
 319+ 8675 00           	db %00000000 									; (Attr).
 320+ 8676
 321+ 8676 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 8678 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 867A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 867C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 867E
 326+ 867E 00 00        	defw 0											; (Posicion_inicio).
 327+ 8680 00           	db 0											; (Cuad_objeto).
 328+ 8681
 329+ 8681 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 8685
 331+ 8685 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 332+ 8686
 333+ 8686 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 8688 00 00        	defw 0											;	" " " " " " "
 335+ 868A 00 00        	defw 0											;	" " " " " " "
 336+ 868C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 8690
 338+ 8690 00 00        	db 0,0											; Variables_de_pintado
 339+ 8692 00 00        	defw 0											;	" " " " " " "
 340+ 8694 00 00        	defw 0											;	" " " " " " "
 341+ 8696 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 869A
 343+ 869A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 869D
 345+ 869D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86A4
 348+ 86A4 00           	db 0 											; (Columnas).
 349+ 86A5 00 00        	defw 0											; (Limite_horizontal).
 350+ 86A7 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 351+ 86AA
 352+ 86AA              ; ---------- ---------- ---------- ---------- ----------
 353+ 86AA
 354+ 86AA 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86AC 00 00        	defw 0											; (Posicion_actual).
 356+ 86AE 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86B3
 359+ 86B3 00           	db %00000000 									; (Attr).
 360+ 86B4
 361+ 86B4 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86B6 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 86BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 86BC
 366+ 86BC 00 00        	defw 0											; (Posicion_inicio).
 367+ 86BE 00           	db 0											; (Cuad_objeto).
 368+ 86BF
 369+ 86BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 86C3
 371+ 86C3 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 372+ 86C4
 373+ 86C4 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 86C6 00 00        	defw 0											;	" " " " " " "
 375+ 86C8 00 00        	defw 0											;	" " " " " " "
 376+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 86CE
 378+ 86CE 00 00        	db 0,0											; Variables_de_pintado
 379+ 86D0 00 00        	defw 0											;	" " " " " " "
 380+ 86D2 00 00        	defw 0											;	" " " " " " "
 381+ 86D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 86D8
 383+ 86D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 86DB
 385+ 86DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 86DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 86E2
 388+ 86E2 00           	db 0 											; (Columnas).
 389+ 86E3 00 00        	defw 0											; (Limite_horizontal).
 390+ 86E5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 391+ 86E8
 392+ 86E8              ; ---------- ---------- ---------- ---------- ----------
 393+ 86E8
 394+ 86E8 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 86EA 00 00        	defw 0											; (Posicion_actual).
 396+ 86EC 00 00        	defw 0 											; (Puntero_objeto).
 397+ 86EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 86F1
 399+ 86F1 00           	db %00000000 									; (Attr).
 400+ 86F2
 401+ 86F2 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 86F4 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 86F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 86F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 86FA
 406+ 86FA 00 00        	defw 0											; (Posicion_inicio).
 407+ 86FC 00           	db 0											; (Cuad_objeto).
 408+ 86FD
 409+ 86FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8701
 411+ 8701 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 412+ 8702
 413+ 8702 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 8704 00 00        	defw 0											;	" " " " " " "
 415+ 8706 00 00        	defw 0											;	" " " " " " "
 416+ 8708 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 870C
 418+ 870C 00 00        	db 0,0											; Variables_de_pintado
 419+ 870E 00 00        	defw 0											;	" " " " " " "
 420+ 8710 00 00        	defw 0											;	" " " " " " "
 421+ 8712 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 8716
 423+ 8716 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 8719
 425+ 8719 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 871D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8720
 428+ 8720 00           	db 0 											; (Columnas).
 429+ 8721 00 00        	defw 0											; (Limite_horizontal).
 430+ 8723 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 431+ 8726
 432+ 8726              ; ---------- ---------- ---------- ---------- ----------
 433+ 8726
 434+ 8726 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 8728 00 00        	defw 0											; (Posicion_actual).
 436+ 872A 00 00        	defw 0 											; (Puntero_objeto).
 437+ 872C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 872F
 439+ 872F 00           	db %00000000 									; (Attr).
 440+ 8730
 441+ 8730 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8732 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 8734 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 8736 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 8738
 446+ 8738 00 00        	defw 0											; (Posicion_inicio).
 447+ 873A 00           	db 0											; (Cuad_objeto).
 448+ 873B
 449+ 873B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 873F
 451+ 873F 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 452+ 8740
 453+ 8740 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8742 00 00        	defw 0											;	" " " " " " "
 455+ 8744 00 00        	defw 0											;	" " " " " " "
 456+ 8746 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 874A
 458+ 874A 00 00        	db 0,0											; Variables_de_pintado
 459+ 874C 00 00        	defw 0											;	" " " " " " "
 460+ 874E 00 00        	defw 0											;	" " " " " " "
 461+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 8754
 463+ 8754 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 8757
 465+ 8757 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 875B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 875E
 468+ 875E 00           	db 0 											; (Columnas).
 469+ 875F 00 00        	defw 0											; (Limite_horizontal).
 470+ 8761 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 471+ 8764
 472+ 8764              ; ---------- ---------- ---------- ---------- ----------
 473+ 8764
 474+ 8764 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 8766 00 00        	defw 0											; (Posicion_actual).
 476+ 8768 00 00        	defw 0 											; (Puntero_objeto).
 477+ 876A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 876D
 479+ 876D 00           	db %00000000 									; (Attr).
 480+ 876E
 481+ 876E 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 8770 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 8772 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 8774 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 8776
 486+ 8776 00 00        	defw 0											; (Posicion_inicio).
 487+ 8778 00           	db 0											; (Cuad_objeto).
 488+ 8779
 489+ 8779 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 877D
 491+ 877D 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 492+ 877E
 493+ 877E 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 8780 00 00        	defw 0											;	" " " " " " "
 495+ 8782 00 00        	defw 0											;	" " " " " " "
 496+ 8784 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 8788
 498+ 8788 00 00        	db 0,0											; Variables_de_pintado
 499+ 878A 00 00        	defw 0											;	" " " " " " "
 500+ 878C 00 00        	defw 0											;	" " " " " " "
 501+ 878E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 8792
 503+ 8792 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 8795
 505+ 8795 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 8799 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 879C
 508+ 879C 00           	db 0 											; (Columnas).
 509+ 879D 00 00        	defw 0											; (Limite_horizontal).
 510+ 879F 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2).
 511+ 87A2
 512+ 87A2              ; ---------- ---------- ---------- ---------- ----------
 513+ 87A2
 514+ 87A2 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87A4 00 00        	defw 0											; (Posicion_actual).
 516+ 87A6 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87A8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87AB
 519+ 87AB 00           	db %00000000 									; (Attr).
 520+ 87AC
 521+ 87AC 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87AE 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87B0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87B2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87B4
 526+ 87B4 00 00        	defw 0											; (Posicion_inicio).
 527+ 87B6 00           	db 0											; (Cuad_objeto).
 528+ 87B7
 529+ 87B7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 87BB
 531+ 87BB 00           	db 0											; Impacto. "1" existe impacto en la entidad./Frames_explosion.
 532+ 87BC
 533+ 87BC 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 87BE 00 00        	defw 0											;	" " " " " " "
 535+ 87C0 00 00        	defw 0											;	" " " " " " "
 536+ 87C2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 87C6
 538+ 87C6 00 00        	db 0,0											; Variables_de_pintado
 539+ 87C8 00 00        	defw 0											;	" " " " " " "
 540+ 87CA 00 00        	defw 0											;	" " " " " " "
 541+ 87CC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 87D0
 543+ 87D0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 87D3
 545+ 87D3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 87D7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 87DA
 548+ 87DA 00           	db 0 											; (Columnas).
 549+ 87DB 00 00        	defw 0											; (Limite_horizontal).
 550+ 87DD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2).
 551+ 87E0
 552+ 87E0              ; -------------------------------------------------------------------------------------
 553+ 87E0              ;
 554+ 87E0              ;	20/05/23
 555+ 87E0              ;
 556+ 87E0              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 87E0              ;
 558+ 87E0              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 87E0              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 87E0              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 87E0              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 87E0
 563+ 87E0              Indice_de_entidades
 564+ 87E0
 565+ 87E0 EA 87        	defw Entidad_1
 566+ 87E2 FA 87        	defw Entidad_2
 567+ 87E4 0A 88        	defw Entidad_3
 568+ 87E6 1A 88        	defw Entidad_4
 569+ 87E8 2A 88        	defw Entidad_5
 570+ 87EA
 571+ 87EA              ;	BADSAT, (Satélite malvado).
 572+ 87EA
 573+ 87EA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 87EC 04           	db %00000100									; (Attr).
 575+ 87ED 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 87EF 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 87F1 60 47        	defw $4760	                             	    ; (Posicion_inicio).
 578+ 87F3 01           	db 1											; (Cuad_objeto).
 579+ 87F4 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 87F8 D2 9B        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 581+ 87FA
 582+ 87FA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 87FC 02           	db %00000010									; (Attr).
 584+ 87FD 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 87FF 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8801 5F 48        	defw $485f                                      ; (Posicion_inicio).
 587+ 8803 01           	db 1											; (Cuad_objeto).
 588+ 8804 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 8808 D0 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 590+ 880A
 591+ 880A 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 880C 04           	db %00000100									; (Attr).
 593+ 880D 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 880F 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8811 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8813 01           	db 1											; (Cuad_objeto).
 597+ 8814 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 8818 C4 9B        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 599+ 881A
 600+ 881A 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 881C 01           	db %00000001									; (Attr).
 602+ 881D 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 881F 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8821 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8823 01           	db 1											; (Cuad_objeto).
 606+ 8824 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 8828 D0 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 882A
 609+ 882A 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 882C 01           	db %00000001									; (Attr).
 611+ 882D 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 882F 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8831 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8833 01           	db 1											; (Cuad_objeto).
 615+ 8834 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 8838 C6 9B        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 617+ 883A
# file closed: Cajas_y_disparos.asm
  24  883A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 883A              ; 13/05/23
   2+ 883A
   3+ 883A              Indice_de_niveles
   4+ 883A
   5+ 883A 48 88        	defw Nivel_1
   6+ 883C 4A 88        	defw Nivel_2
   7+ 883E 57 88        	defw Nivel_3
   8+ 8840 67 88        	defw Nivel_4
   9+ 8842 79 88        	defw Nivel_5
  10+ 8844
  11+ 8844              ;	...
  12+ 8844              ;	...
  13+ 8844              ;	+ Niveles ...
  14+ 8844
  15+ 8844 00 00        	defw 0
  16+ 8846 00 00        	defw 0
  17+ 8848
  18+ 8848 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 8849 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 884A
  21+ 884A 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 884B 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 884F 01 02
  23+ 8851 02 01 01 01  	db 2,1,1,1,1,2
  23+ 8855 01 02
  24+ 8857 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 8858 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 885C 01
  26+ 885D 03 01 01 01  	db 3,1,1,1,1
  26+ 8861 01
  27+ 8862 03 01 01 01  	db 3,1,1,1,1
  27+ 8866 01
  28+ 8867 11           Nivel_4 db 17									; Nº de entidades.
  29+ 8868 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 886C 01
  30+ 886D 04 01 01 01  	db 4,1,1,1,1
  30+ 8871 01
  31+ 8872 04 01 01 01  	db 4,1,1,1,1
  31+ 8876 01
  32+ 8877 02 03        	db 2,3
  33+ 8879 14           Nivel_5 db 20									; Nº de entidades.
  34+ 887A 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 887E 01
  35+ 887F 05 01 01 01  	db 5,1,1,1,1
  35+ 8883 01
  36+ 8884 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 8888 01
  37+ 8889 05 01 01 01  	db 5,1,1,1,1
  37+ 888D 01
  38+ 888E
  39+ 888E              ;---------------------------------------------------------------------------------------------------------------
  40+ 888E              ;
  41+ 888E              ;   21/5/23
  42+ 888E              ;
  43+ 888E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 888E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 888E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 888E              ;	_en la caja DRAW correspondiente.
  47+ 888E              ;
  48+ 888E              ;	MODIFICA: HL,DE y A.
  49+ 888E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 888E
  51+ 888E              Inicializa_Punteros_de_nivel
  52+ 888E
  53+ 888E 21 3A 88     	ld hl,Indice_de_niveles
  54+ 8891 22 AF 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 8894 CD A5 8C     	call Extrae_address
  56+ 8897 7E           	ld a,(hl)
  57+ 8898 32 82 89     	ld (Numero_de_entidades),a
  58+ 889B 23           	inc hl
  59+ 889C 22 B1 89     	ld (Datos_de_nivel),hl
  60+ 889F C9           	ret
  61+ 88A0
  62+ 88A0              ;---------------------------------------------------------------------------------------------------------------
  63+ 88A0              ;
  64+ 88A0              ;   13/5/23
  65+ 88A0              ;
  66+ 88A0              ;	Destruye A,BC,HL,DE
  67+ 88A0
  68+ 88A0              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88A0              ;	_del juego.
  70+ 88A0
  71+ 88A0              Prepara_cajas
  72+ 88A0
  73+ 88A0              ; Preparamos los punteros de las cajas.
  74+ 88A0
  75+ 88A0 21 1E 85     	ld hl,Indice_de_cajas
  76+ 88A3 CD A5 8C     	call Extrae_address
  77+ 88A6 CD E3 88     	call Avanza_caja
  78+ 88A9
  79+ 88A9 CD 1E 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 88AC
  81+ 88AC 2A B1 89     	ld hl,(Datos_de_nivel)
  82+ 88AF
  83+ 88AF              ; HL está en los datos del nivel correspondiente.
  84+ 88AF              ; B actuará como contador de cajas.
  85+ 88AF
  86+ 88AF C5           1 push bc
  87+ 88B0
  88+ 88B0 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 88B1 CD D4 88     	call PreparaBC
  90+ 88B4
  91+ 88B4 21 E0 87     	ld hl,Indice_de_entidades
  92+ 88B7 CD DC 88     	call SBC_HL_con_BC_y_Extrae
  93+ 88BA 22 88 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 88BD
  95+ 88BD CD ED 88     	call Datos_de_entidad_a_caja
  96+ 88C0
  97+ 88C0 2A 80 89     	ld hl,(Indice_restore_caja)
  98+ 88C3 CD A5 8C     	call Extrae_address
  99+ 88C6 CD E3 88     	call Avanza_caja
 100+ 88C9
 101+ 88C9 2A B1 89     	ld hl,(Datos_de_nivel)
 102+ 88CC 23           	inc hl
 103+ 88CD 22 B1 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 88D0
 105+ 88D0 C1           	pop bc
 106+ 88D1 10 DC        	djnz 1B
 107+ 88D3 C9           	ret
 108+ 88D4
 109+ 88D4 CB 27        PreparaBC sla a
 110+ 88D6 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 88D8 4F           	ld c,a
 112+ 88D9 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 88DB C9           	ret
 114+ 88DC
 115+ 88DC A7           SBC_HL_con_BC_y_Extrae and a
 116+ 88DD ED 4A        	adc hl,bc
 117+ 88DF CD A5 8C     	call Extrae_address
 118+ 88E2 C9           	ret
 119+ 88E3
 120+ 88E3 22 7C 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 88E6 13           	inc de
 122+ 88E7 13           	inc de
 123+ 88E8 EB           	ex de,hl
 124+ 88E9 22 80 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 88EC C9           	ret
 126+ 88ED
 127+ 88ED              Datos_de_entidad_a_caja
 128+ 88ED
 129+ 88ED              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 88ED
 131+ 88ED ED 5B 7C 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 88F1
 133+ 88F1 01 02 00     	ld bc,2
 134+ 88F4 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 88F6
 136+ 88F6 01 07 00     	ld bc,7
 137+ 88F9 CD 18 89     	call Situa_DE
 138+ 88FC
 139+ 88FC 01 05 00     	ld bc,5
 140+ 88FF ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8901
 142+ 8901 01 04 00     	ld bc,4
 143+ 8904 CD 18 89     	call Situa_DE
 144+ 8907
 145+ 8907 01 07 00     	ld bc,7
 146+ 890A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 890C
 148+ 890C 01 18 00     	ld bc,24
 149+ 890F CD 18 89     	call Situa_DE
 150+ 8912
 151+ 8912 01 02 00     	ld bc,2
 152+ 8915 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8917
 154+ 8917 C9           	ret
 155+ 8918
 156+ 8918 EB           Situa_DE ex de,hl
 157+ 8919 A7           	and a
 158+ 891A ED 4A        	adc hl,bc
 159+ 891C EB           	ex de,hl
 160+ 891D C9           	ret
 161+ 891E
 162+ 891E              ;---------------------------------------------------------------------------------------------------------------
 163+ 891E              ;
 164+ 891E              ;	21/5/23
 165+ 891E              ;
 166+ 891E              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 167+ 891E              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 168+ 891E              ;
 169+ 891E              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 170+ 891E              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 171+ 891E              ;	_ total de entidades que contiene (Numero_de_entidades).
 172+ 891E              ;
 173+ 891E              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 174+ 891E              ;	MODIFICA: A y B.
 175+ 891E              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 176+ 891E
 177+ 891E              Admin_num_entidades
 178+ 891E
 179+ 891E              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 180+ 891E
 181+ 891E 3A 82 89     	ld a,(Numero_de_entidades)
 182+ 8921 A7           	and a
 183+ 8922              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 184+ 8922              ;	jr z,$
 185+ 8922              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 186+ 8922
 187+ 8922 20 03        	jr nz,3F
 188+ 8924
 189+ 8924 CD 8E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 190+ 8927
 191+ 8927
 192+ 8927 3A 82 89     3 ld a,(Numero_de_entidades)
 193+ 892A FE 0A        	cp 10
 194+ 892C 38 08        	jr c,1F
 195+ 892E
 196+ 892E              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 197+ 892E              ; Actualizamos variables.
 198+ 892E
 199+ 892E 3E 0A        	ld a,10
 200+ 8930 32 83 89     	ld (Numero_parcial_de_entidades),a
 201+ 8933 47           	ld b,a
 202+ 8934 18 04        	jr 2F
 203+ 8936
 204+ 8936              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 205+ 8936              ; (Numero_de_entidades)="0".
 206+ 8936
 207+ 8936 32 83 89     1 ld (Numero_parcial_de_entidades),a
 208+ 8939 47           	ld b,a
 209+ 893A C9           2 ret
# file closed: Niveles.asm
  25  893B
  26  893B              ; ******************************************************************************************************************************************************************************************
  27  893B              ; Constantes.
  28  893B              ; ******************************************************************************************************************************************************************************************
  29  893B              ;
  30  893B              ; 25/05/23
  31  893B              ;
  32  893B              ; Constantes generales.
  33  893B              ;
  34  893B
  35  893B              Sprite_vacio equ $f000
  36  893B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  893B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  893B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  893B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  893B
  41  893B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  893B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  893B              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  893B              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  893B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  893B              ;                               				        ; De momento situamos este almacén en $7060.
  47  893B
  48  893B              ; ******************************************************************************************************************************************************************************************
  49  893B              ; Variables.
  50  893B              ; ******************************************************************************************************************************************************************************************
  51  893B              ;
  52  893B              ; 10/11/22
  53  893B              ;
  54  893B              ; Variables de DRAW. (Motor principal).
  55  893B              ;
  56  893B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  893B
  58  893B 00           Filas db 0												; Filas. [DRAW]
  59  893C 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  893D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  893F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8941 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  8942 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  8943
  65  8943              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  8943
  67  8943 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  8944              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  8944              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  8944 00           Attr db 0												; Atributos de la entidad:
  71  8945
  72  8945              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  8945              ;
  74  8945              ;	COLORES: 0 ..... NEGRO
  75  8945              ;    		 1 ..... AZUL
  76  8945              ; 			 2 ..... ROJO
  77  8945              ;			 3 ..... MAGENTA
  78  8945              ; 			 4 ..... VERDE
  79  8945              ; 			 5 ..... CIAN
  80  8945              ;			 6 ..... AMARILLO
  81  8945              ; 			 7 ..... BLANCO
  82  8945
  83  8945 00 00        Indice_Sprite_der defw 0
  84  8947 00 00        Indice_Sprite_izq defw 0
  85  8949 00 00        Puntero_DESPLZ_der defw 0
  86  894B 00 00        Puntero_DESPLZ_izq defw 0
  87  894D
  88  894D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  894F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  8950
  91  8950              ; Variables de objeto. (Características).
  92  8950
  93  8950 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  8951 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  8952 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  8953 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  8954
  98  8954 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  8955              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  8955              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  8955
 102  8955 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  8957 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  8959 00 00        	defw 0
 105  895B 00 00 00 00  	db 0,0,0,0
 106  895F
 107  895F 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  8961 00 00        	defw 0
 109  8963 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  8965 00 00 00 00  	db 0,0,0,0
 111  8969
 112  8969              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  8969
 114  8969 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  896A              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  896A              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  896A              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  896A              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  896A              ;
 120  896A              ; 														DESCRIPCIÖN:
 121  896A              ;
 122  896A              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  896A              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  896A              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  896A              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  896A              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  896A              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  896A              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  896A              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  896A              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  896A              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  896A              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  896A              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  896A              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  896A              ;
 136  896A              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  896A              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  896A              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  896A
 140  896A 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  896B
 142  896B              ; Movimiento.
 143  896B
 144  896B 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  896C 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  896E 00 00        Puntero_mov defw 0
 147  8970 00           Contador_db_mov db 0
 148  8971 00           Incrementa_puntero db 0
 149  8972 00           Repetimos_db db 0
 150  8973
 151  8973              ; Variables de funcionamiento. [DRAW].
 152  8973
 153  8973 00           Columnas db 0
 154  8974 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  8976              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  8976 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  8977
 158  8977              ; variables de control general.
 159  8977
 160  8977 00           Ctrl_2 db 0
 161  8978              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  8978              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  8978              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  8978              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  8978              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  8978              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  8978              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  8978
 169  8978 00           Frames_explosion db 0
 170  8979
 171  8979              ; 62 Bytes por entidad.
 172  8979              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 173  8979              ;					         		---------;      ;---------
 174  8979
 175  8979
 176  8979              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 177  8979
 178  8979 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 179  897A
 180  897A              ;														DESCRIPCIÓN:
 181  897A              ;
 182  897A              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 183  897A              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 184  897A              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 185  897A              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 186  897A              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 187  897A              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 188  897A              ;														BIT 3, .............
 189  897A              ;														BIT 4, .............
 190  897A
 191  897A 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 192  897C              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 193  897C              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 194  897C              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 195  897C
 196  897C
 197  897C
 198  897C              ; Gestión de ENTIDADES y CAJAS.
 199  897C
 200  897C              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 201  897C 00 00        Puntero_store_caja defw 0
 202  897E 00 00        Puntero_restore_caja defw 0
 203  8980 00 00        Indice_restore_caja defw 0
 204  8982 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 205  8983 00           Numero_parcial_de_entidades db 0
 206  8984 00           Entidades_en_curso db 0									; ..... ..... .....
 207  8985 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 208  8986              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 209  8986              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 210  8986              ;														; _ (Numero_de_malotes)="0".
 211  8986 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 212  8988 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 213  898A              ;														; _ puntero (Indice_entidades).
 214  898A
 215  898A
 216  898A              ;---------------------------------------------------------------------------------------------------------------
 217  898A              ;
 218  898A              ; Sirven para PINTAR.
 219  898A
 220  898A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 221  898C              ;														; _variable para almacenar lo posición del puntero_
 222  898C              ; 														; _de pila, SP.
 223  898C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 224  898E              ;														; La utiliza la rutina [Extrae_foto_registros].
 225  898E 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 226  8990              ;														; _el snapshot de los registros de la siguiente entidad.
 227  8990              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 228  8990 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 229  8992              ;														; _el snapshot de los registros del siguiente disparo.
 230  8992              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 231  8992
 232  8992              ;---------------------------------------------------------------------------------------------------------------
 233  8992
 234  8992              ; Gestión de Disparos.
 235  8992
 236  8992 00           Numero_de_disparotes db 0
 237  8993 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 238  8995 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 239  8997 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 240  8998              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 241  8998              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 242  8998 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 243  899A              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 244  899A              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 245  899A              ;														; _produzca colisión.
 246  899A 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 247  899C              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 248  899C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 249  899F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 250  899F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89A2              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 252  89A2
 253  89A2              ;---------------------------------------------------------------------------------------------------------------
 254  89A2
 255  89A2              ; Relojes y temporizaciones.
 256  89A2
 257  89A2 00           Contador_de_frames db 0
 258  89A3 00           Secundero db 0
 259  89A4 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 260  89A5              ;														; Repite la oleada de entidades.
 261  89A5 01           Habilita_disparo_Amadeus db 1
 262  89A6 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 263  89A7 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 264  89A8
 265  89A8 01           Habilita_disparo_entidad db 1
 266  89A9 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 267  89AA 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 268  89AB
 269  89AB              ;---------------------------------------------------------------------------------------------------------------
 270  89AB
 271  89AB              ; Gestión de FRAMES.
 272  89AB
 273  89AB 00           Switch db 0
 274  89AC
 275  89AC              ; Variables de Raster y localización en pantalla.
 276  89AC
 277  89AC 00 FF        Temp_Raster defw $ff00
 278  89AE
 279  89AE              ;---------------------------------------------------------------------------------------------------------------
 280  89AE
 281  89AE              ; Gestión de NIVELES.
 282  89AE
 283  89AE 00           Nivel db 0												 ; Nivel actual del juego.
 284  89AF 00 00        Puntero_indice_NIVELES defw 0
 285  89B1 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 286  89B3              ; 														 ; _ que definen el NIVEL.
 287  89B3
 288  89B3
 289  89B3              ; Y todo comienza aquí .....
 290  89B3              ;
 291  89B3              ; Rutina principal *************************************************************************************************************************************************************************
 292  89B3              ;
 293  89B3              ;	14/11/22
 294  89B3
 295  89B3              START
 296  89B3
 297  89B3 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 298  89B6 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 299  89B8 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 300  89BA ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 301  89BC F3           	DI
 302  89BD
 303  89BD 3E 07        	ld a,%00000111
 304  89BF CD A6 97     	call Cls
 305  89C2
 306  89C2              ;	call Pinta_marco
 307  89C2
 308  89C2 CD 8E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 309  89C5 CD 7E 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 310  89C8
 311  89C8 CD A0 88     4 call Prepara_cajas
 312  89CB
 313  89CB CD 51 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 314  89CE              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 315  89CE CD 2E 8D     	call Restore_entidad
 316  89D1
 317  89D1 21 83 89     	ld hl,Numero_parcial_de_entidades
 318  89D4 46           	ld b,(hl)
 319  89D5 04           	inc b
 320  89D6 05           	dec b
 321  89D7 28 1F        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 322  89D9
 323  89D9              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 324  89D9              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 325  89D9              ;	Pintamos el resto de entidades:
 326  89D9
 327  89D9              ;	INICIA ENTIDADES !!!!!
 328  89D9
 329  89D9 C5           1 push bc  												; Guardo el contador de entidades.
 330  89DA CD AB 8C     	call Inicia_Puntero_objeto
 331  89DD
 332  89DD 3E 03        	ld a,3
 333  89DF 32 78 89     	ld (Frames_explosion),a
 334  89E2
 335  89E2 CD BA 97     	call Recompone_posicion_inicio
 336  89E5 CD F6 91     	call Draw
 337  89E8 CD A0 7F     	call Guarda_foto_registros
 338  89EB CD F3 8C      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 339  89EE C1           	pop bc
 340  89EF 10 E8        	djnz 1B  											; Decremento el contador de entidades.
 341  89F1
 342  89F1              ;	call Pinta_marco
 343  89F1
 344  89F1              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 345  89F1
 346  89F1 3A 79 89     	ld a,(Ctrl_1)
 347  89F4 CB 5F        	bit 3,a
 348  89F6 20 18        	jr nz,5F											; Loop
 349  89F8
 350  89F8              ; 	INICIA AMADEUS !!!!!
 351  89F8
 352  89F8 CD 55 8D     3 call Restore_Amadeus
 353  89FB CD AB 8C     	call Inicia_Puntero_objeto
 354  89FE CD F6 91     	call Draw
 355  8A01 CD A0 7F     	call Guarda_foto_registros
 356  8A04 11 36 85     	ld de,Amadeus_db
 357  8A07 CD 67 8D     	call Store_Amadeus
 358  8A0A
 359  8A0A              ; 	INICIA DISPAROS !!!!!
 360  8A0A
 361  8A0A CD 67 8C     	call Inicia_Puntero_Disparo_Entidades
 362  8A0D CD 6E 8C     	call Inicia_Puntero_Disparo_Amadeus
 363  8A10
 364  8A10              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 365  8A10
 366  8A10 CD 51 8C     5 call Inicia_punteros_de_cajas
 367  8A13 CD 2E 8D     	call Restore_entidad
 368  8A16
 369  8A16 3A 79 89     	ld a,(Ctrl_1)
 370  8A19 CB 5F        	bit 3,a
 371  8A1B 28 0A        	jr z,6F
 372  8A1D
 373  8A1D              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 374  8A1D
 375  8A1D 21 79 89     	ld hl,Ctrl_1
 376  8A20 CB 9E        	res 3,(hl)
 377  8A22 CD 75 8C     	call Calcula_numero_de_malotes
 378  8A25 18 07        	jr 7F
 379  8A27
 380  8A27              ; ----------
 381  8A27
 382  8A27 3A 83 89     6 ld a,(Numero_parcial_de_entidades)
 383  8A2A 3C           	inc a
 384  8A2B 32 85 89     	ld (Numero_de_malotes),a
 385  8A2E
 386  8A2E AF           7 xor a
 387  8A2F FB           2 ei
 388  8A30 28 FD        	jr z,2B
 389  8A32
 390  8A32 3A A3 89     	ld a,(Secundero)
 391  8A35 47           	ld b,a
 392  8A36 3A A4 89     	ld a,(Activa_recarga_cajas)
 393  8A39 B8           	cp b
 394  8A3A 28 08        	jr z,8F
 395  8A3C
 396  8A3C 21 79 89     	ld hl,Ctrl_1
 397  8A3F CB E6        	set 4,(hl)
 398  8A41 AF           	xor a
 399  8A42 18 EB        	jr 2B
 400  8A44
 401  8A44 21 79 89     8 ld hl,Ctrl_1
 402  8A47 CB A6        	res 4,(hl)
 403  8A49 F3           	di
 404  8A4A
 405  8A4A C3 C8 89     	jp 4B
 406  8A4D
 407  8A4D              ; -----------------------------------------------------------------------------------
 408  8A4D
 409  8A4D              Frame
 410  8A4D
 411  8A4D              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 412  8A4D              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 413  8A4D
 414  8A4D              ; PINTAMOS.
 415  8A4D
 416  8A4D 3E 02            ld a,2
 417  8A4F D3 FE            out ($fe),a
 418  8A51 CD FA 94     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 419  8A54 CD 33 95     	call Extrae_foto_disparos
 420  8A57 3E 01            ld a,1
 421  8A59 D3 FE            out ($fe),a
 422  8A5B
 423  8A5B              ; ----------------------------------------------------------------------
 424  8A5B
 425  8A5B              ; RELOJES.
 426  8A5B
 427  8A5B 21 A2 89     	ld hl,Contador_de_frames
 428  8A5E 34           	inc (hl)											; 0 - 255
 429  8A5F
 430  8A5F 3E 3C        	ld a,60
 431  8A61 BE           	cp (hl)
 432  8A62 20 22        	jr nz,13F
 433  8A64
 434  8A64 36 00        	ld (hl),0
 435  8A66
 436  8A66 21 A3 89     	ld hl,Secundero
 437  8A69 34           	inc (hl)
 438  8A6A
 439  8A6A 7E           	ld a,(hl)
 440  8A6B E6 01        	and %00000001
 441  8A6D 20 10        	jr nz,20F
 442  8A6F
 443  8A6F 3A 83 89     	ld a,(Numero_parcial_de_entidades)
 444  8A72 47           	ld b,a
 445  8A73 3A 84 89     	ld a,(Entidades_en_curso)
 446  8A76 B8           	cp b
 447  8A77 28 06        	jr z,20F
 448  8A79 30 04        	jr nc,20F
 449  8A7B
 450  8A7B 3C           	inc a
 451  8A7C 32 84 89     	ld (Entidades_en_curso),a
 452  8A7F
 453  8A7F 3E 3C        20 ld a,60
 454  8A81 BE           	cp (hl)
 455  8A82 20 02        	jr nz,13F
 456  8A84
 457  8A84 36 00        	ld (hl),0
 458  8A86
 459  8A86 21 A5 89     13 ld hl,Habilita_disparo_Amadeus
 460  8A89 11 A7 89     	ld de,Temporiza_disparo_Amadeus
 461  8A8C CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 462  8A8F
 463  8A8F 21 A8 89     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 464  8A92 11 AA 89     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 465  8A95 CD D5 7F     	call Habilita_disparos
 466  8A98
 467  8A98              ; COLISIONES.
 468  8A98
 469  8A98 CD 90 91     	call Selector_de_impactos
 470  8A9B
 471  8A9B              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 472  8A9B              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 473  8A9B              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 474  8A9B
 475  8A9B AF           	xor a
 476  8A9C 32 97 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 477  8A9F
 478  8A9F CD 51 8C     	call Inicia_punteros_de_cajas
 479  8AA2 CD 2E 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 480  8AA5              ; 														; _ en DRAW.
 481  8AA5 3A 3B 89     	ld a,(Filas)
 482  8AA8 A7           	and a
 483  8AA9 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 484  8AAB CD 40 8D     	call Incrementa_punteros_de_cajas
 485  8AAE 18 F2        	jr 12B
 486  8AB0
 487  8AB0              ; ---------------------------------------------------------------------------------------
 488  8AB0
 489  8AB0 CD 0E 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 490  8AB3 21 00 70     	ld hl,Album_de_fotos
 491  8AB6 22 8E 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 492  8AB9              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 493  8AB9 3A 83 89     	ld a,(Numero_parcial_de_entidades)
 494  8ABC 47               ld b,a
 495  8ABD A7           	and a
 496  8ABE 20 16        	jr nz,2F
 497  8AC0
 498  8AC0 21 79 89     	ld hl,Ctrl_1
 499  8AC3 CB 66        	bit 4,(hl)
 500  8AC5 C2 51 8B     	jp nz,4F
 501  8AC8
 502  8AC8 21 79 89     	ld hl,Ctrl_1
 503  8ACB CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 504  8ACD 3A A3 89     	ld a,(Secundero)
 505  8AD0 3C           	inc a
 506  8AD1 32 A4 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 507  8AD4
 508  8AD4 18 7B        	jr 4F
 509  8AD6
 510  8AD6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 511  8AD6
 512  8AD6              ; Código que ejecutamos con cada entidad:
 513  8AD6
 514  8AD6              ; Impacto ???
 515  8AD6
 516  8AD6 3A 84 89     2 ld a,(Entidades_en_curso)
 517  8AD9 A7           	and a
 518  8ADA 28 75        	jr z,4F
 519  8ADC 47           	ld b,a
 520  8ADD
 521  8ADD C5           15 push bc 												; Nº de entidades en curso.
 522  8ADE
 523  8ADE 3A 54 89     	ld a,(Impacto)
 524  8AE1 A7           	and a
 525  8AE2 28 25        	jr z,8F
 526  8AE4
 527  8AE4              ; Hay Impacto en esta entidad.
 528  8AE4
 529  8AE4 CD 08 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 530  8AE7
 531  8AE7              ;!!!!!! DEBUGGIN Desintegración/Explosión!!!!!!!!!!!
 532  8AE7
 533  8AE7 3A 77 89     	ld a,(Ctrl_2)
 534  8AEA CB 4F        	bit 1,a
 535  8AEC 20 44        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 536  8AEE 3A 43 89     	ld a,(CTRL_DESPLZ)
 537  8AF1 A7           	and a
 538  8AF2 20 08        	jr nz,21F
 539  8AF4 21 7E 84     	ld hl,Explosion_2x2
 540  8AF7 22 3F 89     	ld (Puntero_objeto),hl
 541  8AFA 18 06        	jr 22F
 542  8AFC 21 E6 83     21 ld hl,Indice_Explosion_3x3-2
 543  8AFF 22 49 89     	ld (Puntero_DESPLZ_der),hl
 544  8B02 21 77 89     22 ld hl,Ctrl_2
 545  8B05 CB CE        	set 1,(hl)
 546  8B07 18 29        	jr 7F
 547  8B09
 548  8B09              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 549  8B09              ; _con las coordenadas de la entidad almacenada en DRAW.
 550  8B09
 551  8B09 3A 79 89     8 ld a,(Ctrl_1)
 552  8B0C CB 57        	bit 2,a
 553  8B0E 28 22        	jr z,7F
 554  8B10
 555  8B10 2A 9A 89     	ld hl,(Coordenadas_disparo_certero)
 556  8B13 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 557  8B14              ;														; E contiene la coordenada_X del disparo.
 558  8B14 2A 41 89     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 559  8B17              ;														; H Coordenado_y de la entidad.
 560  8B17 A7           	and a
 561  8B18 ED 52        	sbc hl,de
 562  8B1A
 563  8B1A CD C7 91     	call Determina_resultado_comparativa
 564  8B1D 04           	inc b
 565  8B1E 05           	dec b
 566  8B1F
 567  8B1F              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 568  8B1F 28 FE        	jr z,$
 569  8B21              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 570  8B21
 571  8B21 28 0F        	jr z,7F
 572  8B23
 573  8B23              ; ----- ----- -----
 574  8B23
 575  8B23 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 576  8B25 32 54 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 577  8B28 21 79 89     	ld hl,Ctrl_1
 578  8B2B CB 96        	res 2,(hl)
 579  8B2D 21 9A 89     	ld hl,Coordenadas_disparo_certero
 580  8B30 36 00        	ld (hl),0
 581  8B32
 582  8B32 CD 84 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 583  8B35
 584  8B35 3A 69 89     	ld a,(Ctrl_0)
 585  8B38 CB 67        	bit 4,a
 586  8B3A 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 587  8B3C
 588  8B3C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 589  8B3C              ; [[[
 590  8B3C CD C9 8D     	call Detecta_disparo_entidad
 591  8B3F              ; ]]]
 592  8B3F CD 18 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 593  8B42
 594  8B42 21 69 89     	ld hl,Ctrl_0
 595  8B45 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 596  8B47 AF           	xor a
 597  8B48 32 6A 89     	ld (Obj_dibujado),a
 598  8B4B
 599  8B4B CD F3 8C     6 call Store_Restore_cajas
 600  8B4E
 601  8B4E C1           	pop bc
 602  8B4F 10 8C        	djnz 15B
 603  8B51
 604  8B51              ; Tras la gestión de las entidades, ... AMADEUS.
 605  8B51
 606  8B51 CD 55 8D     4 call Restore_Amadeus
 607  8B54
 608  8B54 3A 54 89     	ld a,(Impacto)
 609  8B57 A7           	and a
 610  8B58 20 FE        	jr nz,$
 611  8B5A
 612  8B5A              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 613  8B5A
 614  8B5A CD E9 8B     	call Mov_Amadeus
 615  8B5D
 616  8B5D 3A 69 89     	ld a,(Ctrl_0)
 617  8B60 CB 67        	bit 4,a
 618  8B62 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 619  8B64
 620  8B64 CD 18 8C     	call Guarda_foto_entidad_a_pintar
 621  8B67
 622  8B67 21 69 89     3 ld hl,Ctrl_0
 623  8B6A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 624  8B6C AF           	xor a
 625  8B6D 32 6A 89     	ld (Obj_dibujado),a
 626  8B70
 627  8B70 11 36 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 628  8B73 CD 67 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 629  8B76
 630  8B76 CD 2C 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 631  8B79
 632  8B79              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 633  8B79
 634  8B79 CD 8D 8C     	call Calcula_numero_de_disparotes
 635  8B7C CD 75 8C     9 call Calcula_numero_de_malotes
 636  8B7F
 637  8B7F 3E 04        	ld a,4
 638  8B81 D3 FE        	out ($fe),a
 639  8B83
 640  8B83 C9           	ret
 641  8B84
 642  8B84              ; --------------------------------------------------------------------------------------------------------------
 643  8B84              ;
 644  8B84              ;	27/05/23
 645  8B84
 646  8B84              Mov_obj
 647  8B84
 648  8B84              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 649  8B84
 650  8B84 3A 77 89     	ld a,(Ctrl_2)
 651  8B87 CB 4F        	bit 1,a
 652  8B89 28 2E        	jr z,2F
 653  8B8B
 654  8B8B              ; Explosión:
 655  8B8B
 656  8B8B 3A 78 89     	ld a,(Frames_explosion)
 657  8B8E A7           	and a
 658  8B8F 20 11        	jr nz,4F
 659  8B91
 660  8B91              ; Una alimaña menos!!!!!!!!!1
 661  8B91
 662  8B91 CD 70 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 663  8B94 21 83 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 664  8B97 35           	dec (hl)
 665  8B98 21 84 89     	ld hl,Entidades_en_curso
 666  8B9B 35           	dec (hl)
 667  8B9C 21 82 89     	ld hl,Numero_de_entidades
 668  8B9F 35           	dec (hl)
 669  8BA0 18 46        	jr 3F
 670  8BA2
 671  8BA2              ; -----
 672  8BA2
 673  8BA2 2A 49 89     4 ld hl,(Puntero_DESPLZ_der)
 674  8BA5 23           	inc hl
 675  8BA6 23           	inc hl
 676  8BA7 22 49 89     	ld (Puntero_DESPLZ_der),hl
 677  8BAA CD A5 8C     	call Extrae_address
 678  8BAD 22 3F 89     	ld (Puntero_objeto),hl
 679  8BB0
 680  8BB0 21 78 89     	ld hl,Frames_explosion
 681  8BB3 35           	dec (hl)
 682  8BB4
 683  8BB4 CD 08 8C     	call Guarda_foto_entidad_a_borrar
 684  8BB7 18 2F        	jr 3F
 685  8BB9
 686  8BB9 AF           2 xor a
 687  8BBA 32 6A 89     	ld (Obj_dibujado),a
 688  8BBD 32 69 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 689  8BC0              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 690  8BC0              ; 														; _de la entidad.
 691  8BC0 CD 22 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 692  8BC3              ;														; Obj_dibujado="0".
 693  8BC3              ; Movemos Entidades malignas.
 694  8BC3
 695  8BC3 21 6C 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 696  8BC6 34           	inc (hl)
 697  8BC7 35           	dec (hl)                                            ; Salimos de la rutina.
 698  8BC8 C8           	ret z
 699  8BC9
 700  8BC9 CD D4 9B     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 701  8BCC
 702  8BCC 3A 69 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 703  8BCF CB 67        	bit 4,a
 704  8BD1 C8           	ret z
 705  8BD2
 706  8BD2              ; Ha habido desplazamiento de la entidad maligna.
 707  8BD2              ; Ha llegado a zona de AMADEUS ???
 708  8BD2
 709  8BD2 3A 42 89     	ld a,(Coordenada_y)
 710  8BD5 FE 14        	cp $14
 711  8BD7 D4 5D 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 712  8BDA              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 713  8BDA              ; ---------
 714  8BDA
 715  8BDA 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 716  8BDC 32 6A 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 717  8BDF CD 22 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 718  8BE2 CD 39 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 719  8BE5 CD 08 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 720  8BE8 C9           3 ret													; _de la misma.
 721  8BE9
 722  8BE9              ; --------------------------------------------------------------------------------------------------------------
 723  8BE9              ;
 724  8BE9              ;	29/1/23
 725  8BE9
 726  8BE9              Mov_Amadeus
 727  8BE9
 728  8BE9 AF           	xor a
 729  8BEA 32 6A 89     	ld (Obj_dibujado),a
 730  8BED CD 22 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 731  8BF0              ;														; Obj_dibujado="0".
 732  8BF0              ; Movemos Amadeus.
 733  8BF0
 734  8BF0 CD 92 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 735  8BF3 3A 69 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 736  8BF6 CB 67        	bit 4,a
 737  8BF8 C8           	ret z
 738  8BF9
 739  8BF9              ; ---------
 740  8BF9
 741  8BF9 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 742  8BFB 32 6A 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 743  8BFE CD 22 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 744  8C01 CD 39 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 745  8C04 CD 08 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 746  8C07 C9           	ret													; _de la nave.
 747  8C08
 748  8C08              ; --------------------------------------------------------------------------------------------------------------
 749  8C08              ;
 750  8C08              ;	31/01/23
 751  8C08              ;
 752  8C08              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 753  8C08
 754  8C08              Guarda_foto_entidad_a_borrar
 755  8C08
 756  8C08 CD D0 94     	call Prepara_draw
 757  8C0B CD 0A 94     	call calcula_CColumnass
 758  8C0E CD 41 94     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 759  8C11 CD 96 94     	call Define_rutina_de_impresion
 760  8C14 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 761  8C17 C9           	ret
 762  8C18
 763  8C18              ; --------------------------------------------------------------------------------------------------------------
 764  8C18              ;
 765  8C18              ;	31/01/23
 766  8C18              ;
 767  8C18              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 768  8C18              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 769  8C18
 770  8C18              Guarda_foto_entidad_a_pintar
 771  8C18
 772  8C18 CD 45 8C     	call Repone_pintar
 773  8C1B CD F6 91     	call Draw
 774  8C1E CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 775  8C21 C9           	ret
 776  8C22
 777  8C22              ; --------------------------------------------------------------------------------------------------------------
 778  8C22              ;
 779  8C22              ;
 780  8C22
 781  8C22 21 3B 89     Prepara_var_pintado_borrado	ld hl,Filas
 782  8C25 3A 6A 89     	ld a,(Obj_dibujado)
 783  8C28 A7           	and a
 784  8C29 28 05        	jr z,1F
 785  8C2B 11 5F 89     	ld de,Variables_de_pintado
 786  8C2E 18 03        	jr 2F
 787  8C30 11 55 89     1 ld de,Variables_de_borrado
 788  8C33 01 08 00     2 ld bc,8
 789  8C36 ED B0        	ldir
 790  8C38 C9           	ret
 791  8C39
 792  8C39              ; --------------------------------------------------------------------------------------------------------------
 793  8C39
 794  8C39 21 55 89     Repone_borrar ld hl,Variables_de_borrado
 795  8C3C 11 3B 89     	ld de,Filas
 796  8C3F 01 08 00     	ld bc,8
 797  8C42 ED B0        	ldir
 798  8C44 C9           	ret
 799  8C45
 800  8C45 21 5F 89     Repone_pintar ld hl,Variables_de_pintado
 801  8C48 11 3B 89     	ld de,Filas
 802  8C4B 01 08 00     	ld bc,8
 803  8C4E ED B0        	ldir
 804  8C50 C9           	ret
 805  8C51
 806  8C51              ; *************************************************************************************************************************************************************
 807  8C51              ;
 808  8C51              ; 8/1/23
 809  8C51              ;
 810  8C51              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 811  8C51              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 812  8C51              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 813  8C51
 814  8C51              ; Destruye HL y DE !!!!!
 815  8C51
 816  8C51              Inicia_punteros_de_cajas
 817  8C51
 818  8C51 21 1E 85     	ld hl,Indice_de_cajas
 819  8C54 CD A5 8C         call Extrae_address
 820  8C57 22 7C 89         ld (Puntero_store_caja),hl
 821  8C5A 21 20 85     	ld hl,Indice_de_cajas+2
 822  8C5D 22 80 89     	ld (Indice_restore_caja),hl
 823  8C60 CD A5 8C     	call Extrae_address
 824  8C63 22 7E 89     	ld (Puntero_restore_caja),hl
 825  8C66 C9               ret
 826  8C67
 827  8C67              ; *************************************************************************************************************************************************************
 828  8C67              ;
 829  8C67              ; 8/1/23
 830  8C67              ;
 831  8C67              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 832  8C67
 833  8C67 21 B6 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 834  8C6A 22 93 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 835  8C6D C9           	ret
 836  8C6E 21 9E 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 837  8C71 22 95 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 838  8C74 C9           	ret
 839  8C75
 840  8C75              ; -------------------------------------------------------------------------------------------------------------
 841  8C75              ;
 842  8C75              ; 28/2/23
 843  8C75              ;
 844  8C75
 845  8C75              Calcula_numero_de_malotes
 846  8C75
 847  8C75 21 00 70     	ld hl,Album_de_fotos
 848  8C78 EB           	ex de,hl
 849  8C79 2A 8E 89     	ld hl,(Stack_snapshot)
 850  8C7C
 851  8C7C 06 00        	ld b,0
 852  8C7E 7D           	ld a,l
 853  8C7F 93           	sub e
 854  8C80 28 07        	jr z,1F
 855  8C82
 856  8C82              ; Nº de malotes no es "0".
 857  8C82
 858  8C82 D6 06        2 sub 6
 859  8C84 04           	inc b
 860  8C85 A7           	and a
 861  8C86 20 FA        	jr nz,2B
 862  8C88 78           	ld a,b
 863  8C89
 864  8C89 32 85 89     1 ld (Numero_de_malotes),a
 865  8C8C C9           	ret
 866  8C8D
 867  8C8D              ; -------------------------------------------------------------------------------------------------------------
 868  8C8D              ;
 869  8C8D              ; 28/2/23
 870  8C8D              ;
 871  8C8D
 872  8C8D              Calcula_numero_de_disparotes
 873  8C8D
 874  8C8D 21 85 70     	ld hl,Album_de_fotos_disparos
 875  8C90 EB           	ex de,hl
 876  8C91 2A 90 89     	ld hl,(Stack_snapshot_disparos)
 877  8C94
 878  8C94 06 00        	ld b,0
 879  8C96 7D           	ld a,l
 880  8C97 93           	sub e
 881  8C98 28 07        	jr z,1F
 882  8C9A
 883  8C9A              ; Nº de malotes no es "0".
 884  8C9A
 885  8C9A D6 06        2 sub 6
 886  8C9C 04           	inc b
 887  8C9D A7           	and a
 888  8C9E 20 FA        	jr nz,2B
 889  8CA0 78           	ld a,b
 890  8CA1
 891  8CA1 32 92 89     1 ld (Numero_de_disparotes),a
 892  8CA4 C9           	ret
 893  8CA5              ; *************************************************************************************************************************************************************
 894  8CA5              ;
 895  8CA5              ; 20/10/22
 896  8CA5              ;
 897  8CA5              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 898  8CA5              ;
 899  8CA5              ; Destruye el puntero y DE !!!!!
 900  8CA5
 901  8CA5 5E           Extrae_address ld e,(hl)
 902  8CA6 23           	inc hl
 903  8CA7 56           	ld d,(hl)
 904  8CA8 2B           	dec hl
 905  8CA9 EB           	ex de,hl
 906  8CAA C9           	ret
 907  8CAB
 908  8CAB              ; *************************************************************************************************************************************************************
 909  8CAB              ;
 910  8CAB              ;	7/2/23
 911  8CAB              ;
 912  8CAB              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 913  8CAB              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 914  8CAB              ;
 915  8CAB              ;   Destruye HL y BC !!!!!,
 916  8CAB              ;
 917  8CAB              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 918  8CAB              ;					"0" ..... Izquierda.
 919  8CAB
 920  8CAB              Inicia_Puntero_objeto
 921  8CAB
 922  8CAB 3A 4F 89     	ld a,(Cuad_objeto)
 923  8CAE E6 01        	and 1
 924  8CB0 F5           	push af
 925  8CB1 CC CF 8C     	call z,Inicia_puntero_objeto_izq
 926  8CB4 F1           	pop af
 927  8CB5 28 2B        	jr z,1F
 928  8CB7 CD BC 8C     	call Inicia_puntero_objeto_der
 929  8CBA 18 26        	jr 1F
 930  8CBC
 931  8CBC              ; Arrancamos desde la parte izquierda de la pantalla.
 932  8CBC              ; Iniciamos (Indice_Sprite_der).
 933  8CBC
 934  8CBC 2A 45 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 935  8CBF 22 49 89     	ld (Puntero_DESPLZ_der),hl
 936  8CC2 CD A5 8C     	call Extrae_address
 937  8CC5 22 3F 89     	ld (Puntero_objeto),hl
 938  8CC8
 939  8CC8 2A 47 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 940  8CCB 22 4B 89     	ld (Puntero_DESPLZ_izq),hl
 941  8CCE C9           	ret
 942  8CCF
 943  8CCF              ; Arrancamos desde la parte derecha de la pantalla.
 944  8CCF              ; Iniciamos (Indice_Sprite_izq).
 945  8CCF
 946  8CCF 2A 47 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 947  8CD2 22 4B 89     	ld (Puntero_DESPLZ_izq),hl
 948  8CD5 CD A5 8C     	call Extrae_address
 949  8CD8 22 3F 89     	ld (Puntero_objeto),hl
 950  8CDB
 951  8CDB 2A 45 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 952  8CDE 22 49 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 953  8CE1 C9           	ret
 954  8CE2
 955  8CE2              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 956  8CE2
 957  8CE2 21 38 83     1 ld hl,Amadeus
 958  8CE5 ED 4B 3F 89  	ld bc,(Puntero_objeto)
 959  8CE9 B7 ED 42     	sub hl,bc
 960  8CEC C0           	ret nz
 961  8CED 21 69 89     	ld hl,Ctrl_0
 962  8CF0 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 963  8CF2 C9           	ret 												; _de nuestra nave en los extremos.
 964  8CF3
 965  8CF3              ; *************************************************************************************************************************************************************
 966  8CF3              ;
 967  8CF3              ;	14/5/23
 968  8CF3              ;
 969  8CF3              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 970  8CF3              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 971  8CF3
 972  8CF3              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 973  8CF3              ;	_de la 2ª y 3ª entidad respectivamente.
 974  8CF3
 975  8CF3              Store_Restore_cajas
 976  8CF3
 977  8CF3 E5           	push hl
 978  8CF4 D5           	push de
 979  8CF5 C5            	push bc
 980  8CF6
 981  8CF6              ;	STORE !!!!!
 982  8CF6              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 983  8CF6
 984  8CF6 21 3B 89     	ld hl,Filas
 985  8CF9 ED 5B 7C 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 986  8CFD 01 3E 00     	ld bc,62
 987  8D00 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 988  8D02
 989  8D02              ; 	Entidad_sospechosa. 20/4/23
 990  8D02
 991  8D02 3A 54 89     	ld a,(Impacto)
 992  8D05 A7           	and a
 993  8D06 28 0C        	jr z,1F
 994  8D08
 995  8D08 2A 7C 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 996  8D0B 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 997  8D0E A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 998  8D0F ED 4A        	adc hl,bc 											; _ "0" más adelante.
 999  8D11 22 98 89     	ld (Entidad_sospechosa_de_colision),hl
1000  8D14
1001  8D14              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1002  8D14
1003  8D14 2A 7E 89     1 ld hl,(Puntero_restore_caja)
1004  8D17 7E           	ld a,(hl)
1005  8D18 A7           	and a
1006  8D19 F5           	push af
1007  8D1A 28 08        	jr z,2F
1008  8D1C
1009  8D1C 11 3B 89     	ld de,Filas
1010  8D1F 01 3E 00     	ld bc,62
1011  8D22 ED B0        	ldir
1012  8D24
1013  8D24 CD 40 8D     2 call Incrementa_punteros_de_cajas
1014  8D27 F1           	pop af
1015  8D28 28 EA        	jr z,1B
1016  8D2A
1017  8D2A C1           	pop bc
1018  8D2B D1           	pop de
1019  8D2C E1           	pop hl
1020  8D2D
1021  8D2D C9           	ret
1022  8D2E
1023  8D2E              ; **************************************************************************************************
1024  8D2E              ;
1025  8D2E              ;	12/05/23
1026  8D2E              ;
1027  8D2E              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1028  8D2E
1029  8D2E E5           Restore_entidad push hl
1030  8D2F D5           	push de
1031  8D30 C5            	push bc
1032  8D31
1033  8D31 2A 7C 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1034  8D34 11 3B 89     	ld de,Filas
1035  8D37 01 3E 00     	ld bc,62
1036  8D3A ED B0        	ldir
1037  8D3C
1038  8D3C C1           	pop bc
1039  8D3D D1           	pop de
1040  8D3E E1           	pop hl
1041  8D3F C9           	ret
1042  8D40
1043  8D40
1044  8D40              ; **************************************************************************************************
1045  8D40              ;
1046  8D40              ;	08/05/23
1047  8D40              ;
1048  8D40              ;	Incrementamos los dos punteros de entidades. (+1).
1049  8D40
1050  8D40 2A 7E 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1051  8D43 22 7C 89     	ld (Puntero_store_caja),hl
1052  8D46 2A 80 89     	ld hl,(Indice_restore_caja)
1053  8D49 23           	inc hl
1054  8D4A 23           	inc hl
1055  8D4B 22 80 89     	ld (Indice_restore_caja),hl
1056  8D4E CD A5 8C         call Extrae_address
1057  8D51 22 7E 89         ld (Puntero_restore_caja),hl
1058  8D54 C9               ret
1059  8D55
1060  8D55              ; **************************************************************************************************
1061  8D55              ;
1062  8D55              ;	25/01/23
1063  8D55              ;
1064  8D55              ;	Restore_Amadeus
1065  8D55              ;
1066  8D55              ;	Cargamos en DRAW los parámetros de Amadeus.
1067  8D55              ;
1068  8D55
1069  8D55 E5           Restore_Amadeus	push hl
1070  8D56 D5           	push de
1071  8D57 C5            	push bc
1072  8D58 21 36 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1073  8D5B 11 3B 89     	ld de,Filas
1074  8D5E 01 3E 00     	ld bc,62
1075  8D61 ED B0        	ldir
1076  8D63 C1           	pop bc
1077  8D64 D1           	pop de
1078  8D65 E1           	pop hl
1079  8D66 C9           	ret
1080  8D67
1081  8D67              ; *************************************************************************************************************************************************************
1082  8D67              ;
1083  8D67              ;	29/04/23
1084  8D67              ;
1085  8D67              ;	Store_Amadeus
1086  8D67              ;
1087  8D67              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1088  8D67              ;
1089  8D67              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1090  8D67              ;
1091  8D67              ;	DESTRUYE: HL y BC y DE.
1092  8D67
1093  8D67 21 3B 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1094  8D6A 01 3E 00     	ld bc,62
1095  8D6D ED B0        	ldir
1096  8D6F C9           	ret
1097  8D70
1098  8D70              ; -----------------------------------------------------------
1099  8D70              ;
1100  8D70              ;	27/04/23
1101  8D70              ;
1102  8D70              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1103  8D70              ;
1104  8D70              ;	Destruye: HL,BC,DE,A
1105  8D70
1106  8D70 21 3B 89     Borra_datos_entidad ld hl,Filas
1107  8D73 01 3D 00     	ld bc,61
1108  8D76 AF           	xor a
1109  8D77 77           	ld (hl),a
1110  8D78 11 3C 89     	ld de,Filas+1
1111  8D7B ED B0        	ldir
1112  8D7D C9           	ret
1113  8D7E
1114  8D7E              ; -----------------------------------------------------------
1115  8D7E
1116  8D7E              ; Teclado.
1117  8D7E
1118  8D7E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1119  8D80 DB FE        	in a,($fe)
1120  8D82 E6 01        	and $01
1121  8D84 28 02        	jr z,1f
1122  8D86 18 F6        	jr Pulsa_ENTER
1123  8D88 C9           1 ret
1124  8D89
1125  8D89              ; **************************************************************************************************
1126  8D89              ;
1127  8D89              ; Temporización.
1128  8D89
1129  8D89              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1130  8D89              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1131  8D89              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1132  8D89              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1133  8D89
1134  8D89              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1135  8D89              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1136  8D89              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1137  8D89
1138  8D89              ; A partir de $4f61 no hace falta DELAY.
1139  8D89
1140  8D89              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1141  8D89
1142  8D89 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1143  8D8C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1144  8D8D 78           	LD A,B
1145  8D8E A7           	AND A
1146  8D8F 20 FB        	JR NZ,wait
1147  8D91 C9           	RET
1148  8D92
1149  8D92              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1150  8D92              ;
1151  8D92              ;	5/3/23
1152  8D92              ;
1153  8D92              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1154  8D92
1155  8D92              Movimiento_Amadeus
1156  8D92
1157  8D92              ; Disparo.
1158  8D92
1159  8D92 3A A5 89     	ld a,(Habilita_disparo_Amadeus)
1160  8D95 A7           	and a
1161  8D96 20 02        	jr nz,1F
1162  8D98 18 15        	jr 2F
1163  8D9A
1164  8D9A 3E F7        1 ld a,$f7													; "5" para disparar.
1165  8D9C DB FE        	in a,($fe)
1166  8D9E E6 10        	and $10
1167  8DA0
1168  8DA0 F5           	push af
1169  8DA1 CC D9 8D     	call z,Genera_disparo
1170  8DA4 F1           	pop af
1171  8DA5 20 08        	jr nz,2F
1172  8DA7
1173  8DA7 3A A5 89     	ld a,(Habilita_disparo_Amadeus)
1174  8DAA EE 01        	xor 1
1175  8DAC 32 A5 89     	ld (Habilita_disparo_Amadeus),a
1176  8DAF
1177  8DAF 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1178  8DB1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1179  8DB3 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1180  8DB5 CC 74 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1181  8DB8 3E F7        	ld a,$f7
1182  8DBA DB FE        	in a,($fe)
1183  8DBC E6 01        	and $01
1184  8DBE C8           	ret z
1185  8DBF
1186  8DBF 3E F7        	ld a,$f7
1187  8DC1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1188  8DC3 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1189  8DC5 CC 56 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1190  8DC8 C9           	ret
1191  8DC9
1192  8DC9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1193  8DC9              ;
1194  8DC9              ;	Rutina provisional para que los malotes cagen balas.
1195  8DC9
1196  8DC9              Detecta_disparo_entidad
1197  8DC9
1198  8DC9 3A A8 89     	ld a,(Habilita_disparo_entidad)
1199  8DCC A7           	and a
1200  8DCD C8           	ret z
1201  8DCE 3E 7F        	ld a,$7f
1202  8DD0 DB FE        	in a,($fe)
1203  8DD2 E6 01        	and 1
1204  8DD4 C0           	ret nz
1205  8DD5 CD D9 8D     	call Genera_disparo
1206  8DD8 C9           	ret
1207  8DD9
1208  8DD9              ; ---------------------------------------------------------------
1209  8DD9
1210  8DD9              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DD9              ; ******************************************************************************************************************************************************************************************
   2+ 8DD9              ;
   3+ 8DD9              ;   17/04/23
   4+ 8DD9              ;
   5+ 8DD9              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DD9              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DD9              ;
   8+ 8DD9              ;
   9+ 8DD9              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DD9              ;
  11+ 8DD9              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DD9              ;               _ hacen las entidades hacia abajo.
  13+ 8DD9              ;
  14+ 8DD9              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DD9              ;
  16+ 8DD9              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DD9              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DD9              ;
  19+ 8DD9              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DD9              ;           _ la bala.
  21+ 8DD9              ;
  22+ 8DD9              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DD9              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DD9              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DD9              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DD9              ;           _ en el momento de generarse la bala)).
  27+ 8DD9
  28+ 8DD9              Genera_disparo
  29+ 8DD9
  30+ 8DD9              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DD9              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DD9              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DD9              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DD9              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DD9              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DD9              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DD9
  38+ 8DD9              ; Exclusiones:
  39+ 8DD9
  40+ 8DD9 3A 73 89         ld a,(Columnas)
  41+ 8DDC 47               ld b,a
  42+ 8DDD 3A 3C 89         ld a,(Columns)
  43+ 8DE0 B8               cp b
  44+ 8DE1 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8DE2
  46+ 8DE2              ; ----- ----- -----
  47+ 8DE2
  48+ 8DE2 3A 69 89         ld a,(Ctrl_0)
  49+ 8DE5 CB 77            bit 6,a
  50+ 8DE7 20 06            jr nz,14F
  51+ 8DE9
  52+ 8DE9 3A 42 89         ld a,(Coordenada_y)
  53+ 8DEC FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8DEE D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8DEF
  56+ 8DEF 21 00 80     14 ld hl,Indice_disparo
  57+ 8DF2 3A 43 89         ld a,(CTRL_DESPLZ)
  58+ 8DF5 4F               ld c,a
  59+ 8DF6 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8DF8              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8DF8              ;                                            ""        ""       "f9", B="1"
  62+ 8DF8              ;                                            ""        ""       "fb", B="2"
  63+ 8DF8              ;                                            ""        ""       "fb", B="3"
  64+ 8DF8 A7               and a
  65+ 8DF9 28 10            jr z,1F
  66+ 8DFB E6 01            and 1
  67+ 8DFD C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8DFE
  69+ 8DFE 79               ld a,c
  70+ 8DFF 16 F9            ld d,$f9
  71+ 8E01 23           2 inc hl
  72+ 8E02 23               inc hl
  73+ 8E03 04               inc b
  74+ 8E04 BA               cp d
  75+ 8E05 28 04            jr z,1F
  76+ 8E07 14               inc d
  77+ 8E08 14               inc d
  78+ 8E09 18 F6            jr 2B
  79+ 8E0B
  80+ 8E0B CD A5 8C     1 call Extrae_address
  81+ 8E0E E5               push hl
  82+ 8E0F FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E11 DD 21 6F 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E15
  85+ 8E15              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E15              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E15
  88+ 8E15 3A 69 89         ld a,(Ctrl_0)
  89+ 8E18 CB 77            bit 6,a
  90+ 8E1A 20 04            jr nz,19F
  91+ 8E1C
  92+ 8E1C AF               xor a
  93+ 8E1D 32 A8 89         ld (Habilita_disparo_entidad),a
  94+ 8E20
  95+ 8E20 3A 4F 89     19 ld a,(Cuad_objeto)
  96+ 8E23 FE 02            cp 2
  97+ 8E25 38 66            jr c,3F
  98+ 8E27 28 64            jr z,3F
  99+ 8E29
 100+ 8E29              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E29
 102+ 8E29 E6 01            and 1
 103+ 8E2B 28 30            jr z,4F
 104+ 8E2D
 105+ 8E2D              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E2D              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E2D              ;
 108+ 8E2D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E2D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E2D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E2D
 112+ 8E2D 2A 3D 89     	ld hl,(Posicion_actual)
 113+ 8E30
 114+ 8E30              ;   Amadeus o entidad ???.
 115+ 8E30
 116+ 8E30 3A 69 89         ld a,(Ctrl_0)
 117+ 8E33 CB 77            bit 6,a
 118+ 8E35 28 0A            jr z,8F
 119+ 8E37
 120+ 8E37              ; 	Dispara Amadeus.
 121+ 8E37
 122+ 8E37 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E39 CD EB 94         call PreviousScan
 124+ 8E3C CD EB 94         call PreviousScan
 125+ 8E3F
 126+ 8E3F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E3F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E3F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E3F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E3F
 131+ 8E3F 18 11            jr 10F
 132+ 8E41
 133+ 8E41              ; 	Dispara Entidad.
 134+ 8E41
 135+ 8E41 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E44              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E44
 138+ 8E44              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E44              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E44
 141+ 8E44 C5               push bc
 142+ 8E45 06 10            ld b,16
 143+ 8E47 CD DC 94     9 call NextScan
 144+ 8E4A 10 FB            djnz 9B
 145+ 8E4C C1               pop bc
 146+ 8E4D CD B7 8E         call Ajusta_disparo_parte_izquierda
 147+ 8E50 18 06            jr 17F
 148+ 8E52
 149+ 8E52              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8E52              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8E52              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8E52              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8E52
 154+ 8E52 CD B7 8E     10 call Ajusta_disparo_parte_izquierda
 155+ 8E55 CD 2C 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8E58              ;                                                      ; _al generar el disparo.
 157+ 8E58
 158+ 8E58              ; 	LLegados a este punto tendremos:
 159+ 8E58              ;
 160+ 8E58              ;       Puntero_objeto_disparo en IY.
 161+ 8E58              ;       Rutinas_de_impresion en IX.
 162+ 8E58              ;       Puntero_de_impresion en HL.
 163+ 8E58              ;       Impacto/Dirección en BC.
 164+ 8E58
 165+ 8E58 CD BF 8E     17 call Almacena_disparo
 166+ 8E5B 18 52            jr 6F                                             ; RET.
 167+ 8E5D
 168+ 8E5D              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8E5D              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8E5D              ;
 171+ 8E5D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8E5D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8E5D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8E5D
 175+ 8E5D 2A 3D 89     4 ld hl,(Posicion_actual)
 176+ 8E60
 177+ 8E60              ;   Amadeus o entidad ???.
 178+ 8E60
 179+ 8E60 3A 69 89         ld a,(Ctrl_0)
 180+ 8E63 CB 77            bit 6,a
 181+ 8E65 28 0A            jr z,11F
 182+ 8E67
 183+ 8E67              ; 	Dispara Amadeus.
 184+ 8E67
 185+ 8E67 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8E69 CD EB 94         call PreviousScan
 187+ 8E6C CD EB 94         call PreviousScan
 188+ 8E6F
 189+ 8E6F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8E6F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8E6F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8E6F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8E6F
 194+ 8E6F 18 11            jr 13F
 195+ 8E71
 196+ 8E71              ; 	Dispara Entidad.
 197+ 8E71
 198+ 8E71 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8E74              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8E74
 201+ 8E74              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8E74              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8E74
 204+ 8E74 C5               push bc
 205+ 8E75 06 10            ld b,16
 206+ 8E77 CD DC 94     12 call NextScan
 207+ 8E7A 10 FB            djnz 12B
 208+ 8E7C C1               pop bc
 209+ 8E7D
 210+ 8E7D CD B0 8E         call Ajusta_disparo_parte_derecha
 211+ 8E80 18 06            jr 18F
 212+ 8E82
 213+ 8E82              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8E82              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8E82              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8E82              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8E82
 218+ 8E82 CD B0 8E     13 call Ajusta_disparo_parte_derecha
 219+ 8E85 CD 2C 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8E88              ;                                                       ; _al generar el disparo.
 221+ 8E88
 222+ 8E88              ; LLegados a este punto tendremos:
 223+ 8E88              ;
 224+ 8E88              ;       Puntero_objeto_disparo en IY.
 225+ 8E88              ;       Rutinas_de_impresion en IX.
 226+ 8E88              ;       Puntero_de_impresion en HL.
 227+ 8E88              ;       Impacto/Dirección en BC.
 228+ 8E88
 229+ 8E88 CD BF 8E     18 call Almacena_disparo
 230+ 8E8B 18 22            jr 6F                                               ; RET.
 231+ 8E8D
 232+ 8E8D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8E8D
 234+ 8E8D 28 11        3 jr z,5F
 235+ 8E8F
 236+ 8E8F              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8E8F              ;
 238+ 8E8F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8E8F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8E8F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8E8F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8E8F
 243+ 8E8F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8E8F              ;	   ""        ""       "f9", B="1"
 245+ 8E8F              ;	   ""        ""       "fb", B="2"
 246+ 8E8F              ; 	   ""        ""       "fb", B="3"
 247+ 8E8F
 248+ 8E8F 2A 3D 89     	ld hl,(Posicion_actual)
 249+ 8E92 CD DC 94     	call NextScan
 250+ 8E95
 251+ 8E95              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8E95              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8E95              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8E95              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8E95
 256+ 8E95 CD B7 8E         call Ajusta_disparo_parte_izquierda
 257+ 8E98
 258+ 8E98              ; 	No se produce impacto. B="$80"
 259+ 8E98              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8E98
 261+ 8E98 01 80 80         ld bc,$8080
 262+ 8E9B
 263+ 8E9B              ; 	LLegados a este punto tendremos:
 264+ 8E9B              ;
 265+ 8E9B              ;       Puntero_objeto_disparo en IY.
 266+ 8E9B              ;       Rutinas_de_impresion en IX.
 267+ 8E9B              ;       Puntero_de_impresion en HL.
 268+ 8E9B              ;       Impacto/Dirección en BC.
 269+ 8E9B
 270+ 8E9B CD BF 8E         call Almacena_disparo
 271+ 8E9E 18 0F            jr 6F                                           ; RET.
 272+ 8EA0
 273+ 8EA0              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EA0              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EA0              ;
 276+ 8EA0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EA0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EA0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EA0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EA0
 281+ 8EA0 2A 3D 89     5 ld hl,(Posicion_actual)
 282+ 8EA3 CD DC 94     	call NextScan
 283+ 8EA6
 284+ 8EA6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EA6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EA6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EA6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EA6
 289+ 8EA6 CD B0 8E         call Ajusta_disparo_parte_derecha
 290+ 8EA9
 291+ 8EA9              ; 	No se produce impacto. B="$80"
 292+ 8EA9              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EA9
 294+ 8EA9 01 80 80     15 ld bc,$8080
 295+ 8EAC
 296+ 8EAC              ; 	LLegados a este punto tendremos:
 297+ 8EAC              ;
 298+ 8EAC              ;       Puntero_objeto_disparo en IY.
 299+ 8EAC              ;       Rutinas_de_impresion en IX.
 300+ 8EAC              ;       Puntero_de_impresion en HL.
 301+ 8EAC              ;       Impacto/Dirección en BC.
 302+ 8EAC
 303+ 8EAC CD BF 8E         call Almacena_disparo
 304+ 8EAF
 305+ 8EAF C9           6 ret
 306+ 8EB0
 307+ 8EB0              ; ----------------------------------------------------------------
 308+ 8EB0              ;
 309+ 8EB0              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8EB0              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8EB0              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8EB0
 313+ 8EB0 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8EB1 FE 02            cp 2
 315+ 8EB3 38 01            jr c,1F
 316+ 8EB5 23               inc hl
 317+ 8EB6 C9           1 ret
 318+ 8EB7
 319+ 8EB7 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8EB8 FE 01        	cp 1
 321+ 8EBA 20 01        	jr nz,1F
 322+ 8EBC 2B           	dec hl
 323+ 8EBD 2B           1 dec hl
 324+ 8EBE C9               ret
 325+ 8EBF
 326+ 8EBF              ; ----------------------------------------------------------------
 327+ 8EBF              ;
 328+ 8EBF              ;   25/02/23
 329+ 8EBF              ;
 330+ 8EBF              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8EBF              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8EBF              ;
 333+ 8EBF              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8EBF              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8EBF
 336+ 8EBF              Almacena_disparo
 337+ 8EBF
 338+ 8EBF E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8EC0 F1               pop af
 340+ 8EC1 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8EC2
 342+ 8EC2 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8EC3 E6 01            and 1
 344+ 8EC5 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8EC7              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8EC7              ; 	Dispara AMADEUS.
 347+ 8EC7
 348+ 8EC7              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8EC7              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8EC7              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8EC7              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8EC7
 353+ 8EC7 C5               push bc
 354+ 8EC8 01 A2 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8ECB 2A 95 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8ECE A7               and a
 357+ 8ECF ED 42            sbc hl,bc
 358+ 8ED1 CC 6E 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8ED4 C1               pop bc
 360+ 8ED5 28 54            jr z,4F
 361+ 8ED7
 362+ 8ED7 2A 95 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8EDA 23               inc hl
 364+ 8EDB 23               inc hl
 365+ 8EDC 22 95 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8EDF              ;                                                   ; _ Disparo_(+1).
 367+ 8EDF 18 18            jr 2F
 368+ 8EE1
 369+ 8EE1              ; Dispara una entidad.
 370+ 8EE1
 371+ 8EE1 C5           1 push bc
 372+ 8EE2 01 CA 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8EE5 2A 93 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8EE8 A7               and a
 375+ 8EE9 ED 42            sbc hl,bc
 376+ 8EEB CC 67 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8EEE C1               pop bc
 378+ 8EEF 28 3A            jr z,4F
 379+ 8EF1
 380+ 8EF1 2A 93 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8EF4 23               inc hl
 382+ 8EF5 23               inc hl
 383+ 8EF6 22 93 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8EF9              ;                                                   ; _ Disparo_(+1).
 385+ 8EF9 CD A5 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8EFC              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8EFC              ;
 388+ 8EFC              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8EFC              ;                                                     Rutinas_de_impresion en IX.
 390+ 8EFC              ;                                                     Puntero_de_impresion en HL.
 391+ 8EFC              ;                                                     Impacto/Dirección en BC.
 392+ 8EFC
 393+ 8EFC 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8EFD 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8EFE 23               inc hl                                          ; _ al siguiente.
 396+ 8EFF A7               and a
 397+ 8F00 20 C0            jr nz,3B
 398+ 8F02
 399+ 8F02 08               ex af,af
 400+ 8F03 ED 73 8A 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F07 F9               ld sp,hl
 402+ 8F08
 403+ 8F08 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F0A F5               push af                                         ; Puntero de impresión.
 405+ 8F0B FD E5            push iy                                         ; Puntero objeto.
 406+ 8F0D C5               push bc                                         ; Control.
 407+ 8F0E
 408+ 8F0E ED 7B 8A 89      ld sp,(Stack)
 409+ 8F12
 410+ 8F12              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F12
 412+ 8F12 21 79 89     	ld hl,Ctrl_1
 413+ 8F15 CB C6        	set 0,(hl)
 414+ 8F17
 415+ 8F17 DD E5        	push ix
 416+ 8F19 E1               pop hl
 417+ 8F1A F5               push af
 418+ 8F1B DD E1            pop ix
 419+ 8F1D
 420+ 8F1D CD A0 7F     	call Guarda_foto_registros
 421+ 8F20
 422+ 8F20 21 79 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F23 CB 86        	res 0,(hl)
 424+ 8F25
 425+ 8F25              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F25              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F25
 428+ 8F25 CD 6E 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F28 CD 67 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F2B
 431+ 8F2B C9           4 ret
 432+ 8F2C
 433+ 8F2C              ; ----------------------------------------------------------------
 434+ 8F2C              ;
 435+ 8F2C              ;   4/3/23
 436+ 8F2C              ;
 437+ 8F2C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F2C              ;   _ al generarse el disparo.
 439+ 8F2C              ;
 440+ 8F2C              ;       "$80" ..... No se produce colisión.
 441+ 8F2C              ;       "$81" ..... Se produce colisión.
 442+ 8F2C
 443+ 8F2C              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F2C              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F2C
 446+ 8F2C
 447+ 8F2C FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F2E E5               push hl                                        ; Puntero de impresión.
 449+ 8F2F
 450+ 8F2F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F31 CD 4D 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F34
 453+ 8F34 7B               ld a,e
 454+ 8F35 E6 01            and 1
 455+ 8F37 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F39
 457+ 8F39 E1               pop hl
 458+ 8F3A E5               push hl
 459+ 8F3B CD DC 94         call NextScan
 460+ 8F3E
 461+ 8F3E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F3F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F41 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F43              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F43 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F45 CD 4D 8F         call Bucle_2
 467+ 8F48
 468+ 8F48 43           2 ld b,e
 469+ 8F49 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F4A FD E1            pop iy
 471+ 8F4C C9               ret
 472+ 8F4D
 473+ 8F4D               ; ---------- ----------
 474+ 8F4D
 475+ 8F4D 06 02        Bucle_2 ld b,2
 476+ 8F4F FD 7E 00     2 ld a,(iy)
 477+ 8F52 A6               and (hl)
 478+ 8F53 28 02            jr z,1F
 479+ 8F55 1E 81            ld e,$81
 480+ 8F57 23           1 inc hl
 481+ 8F58 FD 23            inc iy
 482+ 8F5A 10 F3            djnz 2B
 483+ 8F5C C9               ret
 484+ 8F5D
 485+ 8F5D              ; -------------------------------------------------------------------------------------------------------------
 486+ 8F5D              ;
 487+ 8F5D              ;   11/04/23
 488+ 8F5D              ;
 489+ 8F5D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8F5D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8F5D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8F5D              ;
 493+ 8F5D              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8F5D
 495+ 8F5D              Compara_coordenadas_X
 496+ 8F5D
 497+ 8F5D              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8F5D              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8F5D
 500+ 8F5D              ; Preparamos registros:
 501+ 8F5D
 502+ 8F5D 21 41 89         ld hl,Filas+6
 503+ 8F60 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8F61 23               inc hl
 505+ 8F62 23               inc hl
 506+ 8F63 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8F64 43               ld b,e
 508+ 8F65 21 4F 89         ld hl,Filas+20
 509+ 8F68 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8F69 21 9F 89         ld hl,Coordenadas_X_Entidad
 511+ 8F6C CD 7D 91         call Guarda_coordenadas_X
 512+ 8F6F
 513+ 8F6F              ; Preparamos registros:
 514+ 8F6F
 515+ 8F6F 21 3C 85         ld hl,Amadeus_db+6
 516+ 8F72 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8F73 23               inc hl
 518+ 8F74 23               inc hl
 519+ 8F75 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8F76 7B               ld a,e
 521+ 8F77 08               ex af,af'
 522+ 8F78 21 4A 85         ld hl,Amadeus_db+20
 523+ 8F7B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8F7C 21 9C 89         ld hl,Coordenadas_X_Amadeus
 525+ 8F7F CD 7D 91         call Guarda_coordenadas_X
 526+ 8F82
 527+ 8F82              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8F82              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8F82
 530+ 8F82 04               inc b
 531+ 8F83 05               dec b
 532+ 8F84 28 04            jr z,1F
 533+ 8F86 06 03            ld b,3
 534+ 8F88 18 02            jr 2F
 535+ 8F8A 06 02        1 ld b,2
 536+ 8F8C 08           2 ex af,af'
 537+ 8F8D 3C               inc a
 538+ 8F8E 3D               dec a
 539+ 8F8F 28 04            jr z,5F
 540+ 8F91 0E 03            ld c,3
 541+ 8F93 18 02            jr 6F
 542+ 8F95 0E 02        5 ld c,2
 543+ 8F97 79           6 ld a,c
 544+ 8F98 08               ex af,af'
 545+ 8F99 11 9F 89         ld de,Coordenadas_X_Entidad
 546+ 8F9C 1A           4 ld a,(de)
 547+ 8F9D 21 9C 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FA0 BE           3 cp (hl)
 549+ 8FA1 28 0E            jr z,7F
 550+ 8FA3 23               inc hl
 551+ 8FA4 0D               dec c
 552+ 8FA5 20 F9            jr nz,3B
 553+ 8FA7 13               inc de
 554+ 8FA8 08               ex af,af'
 555+ 8FA9 4F               ld c,a
 556+ 8FAA 08               ex af,af'
 557+ 8FAB 10 EF            djnz 4B
 558+ 8FAD
 559+ 8FAD              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8FAD
 561+ 8FAD CD BC 91     8 call Limpia_Coordenadas_X
 562+ 8FB0 C9               ret
 563+ 8FB1
 564+ 8FB1              7
 565+ 8FB1 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8FB3 32 54 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8FB6 21 97 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8FB9 CB D6            set 2,(hl)
 569+ 8FBB 18 F0            jr 8B
 570+ 8FBD
 571+ 8FBD              ; -----------------------------------------------------------------------
 572+ 8FBD              ;
 573+ 8FBD              ;   17/04/23
 574+ 8FBD              ;
 575+ 8FBD
 576+ 8FBD              Detecta_colision_nave_entidad
 577+ 8FBD
 578+ 8FBD              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8FBD
 580+ 8FBD 2A 3D 89         ld hl,(Posicion_actual)
 581+ 8FC0 CD 41 94         call Calcula_puntero_de_impresion
 582+ 8FC3
 583+ 8FC3              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8FC3              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8FC3
 586+ 8FC3 DD E5            push ix
 587+ 8FC5 E1               pop hl
 588+ 8FC6 E5               push hl
 589+ 8FC7
 590+ 8FC7              ; ----- ----- -----
 591+ 8FC7 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8FC9 06 0A            ld b,10
 593+ 8FCB CD FB 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8FCE 7B               ld a,e
 595+ 8FCF FE 05            cp 5
 596+ 8FD1 38 0E            jr c,3F
 597+ 8FD3
 598+ 8FD3              ; LLegados a este punto:
 599+ 8FD3              ;
 600+ 8FD3              ;   HAY COLISIÓN !!!!!.
 601+ 8FD3              ;
 602+ 8FD3              ;   .db (Impacto) de Amadeus a "1".
 603+ 8FD3              ;   SET el bit3 de (Impacto2).
 604+ 8FD3              ;
 605+ 8FD3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8FD3
 607+ 8FD3 21 4F 85         ld hl,Amadeus_db+25
 608+ 8FD6 36 01            ld (hl),1
 609+ 8FD8 21 97 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8FDB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8FDD CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8FDF 18 18            jr 1F
 613+ 8FE1
 614+ 8FE1              ; -----
 615+ 8FE1
 616+ 8FE1 E1           3 pop hl
 617+ 8FE2 CD DC 94         call NextScan
 618+ 8FE5 E5               push hl
 619+ 8FE6 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8FE7 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8FE9 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8FEB 30 0C            jr nc,1F
 623+ 8FED              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8FED 10 DC            djnz 2B
 625+ 8FEF
 626+ 8FEF              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8FEF
 628+ 8FEF              ; LLegados a este punto:
 629+ 8FEF              ;
 630+ 8FEF              ;   NO HAY COLISIÓN !!!!!.
 631+ 8FEF              ;
 632+ 8FEF              ;   .db (Impacto) de Amadeus a "0".
 633+ 8FEF              ;   RES el bit2 de (Impacto2).
 634+ 8FEF              ;
 635+ 8FEF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8FEF              ;   Lo colocamos a "0".
 637+ 8FEF
 638+ 8FEF 21 97 89         ld hl,Impacto2
 639+ 8FF2 CB 96            res 2,(hl)
 640+ 8FF4 2A 98 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8FF7 36 00            ld (hl),0
 642+ 8FF9
 643+ 8FF9 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8FFA C9               ret
 645+ 8FFB
 646+ 8FFB               ; ---------- ----------
 647+ 8FFB
 648+ 8FFB C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8FFC 3A 3C 89         ld a,(Columns)
 650+ 8FFF 47               ld b,a
 651+ 9000 FD 7E 00     2 ld a,(iy)
 652+ 9003 BE               cp (hl)
 653+ 9004 28 01            jr z,1F
 654+ 9006
 655+ 9006 1C               inc e
 656+ 9007
 657+ 9007 23           1 inc hl
 658+ 9008 FD 23            inc iy
 659+ 900A 10 F4            djnz 2B
 660+ 900C C1               pop bc
 661+ 900D C9               ret
 662+ 900E
 663+ 900E              ; -------------------------------------------------------------------------------------------------------------
 664+ 900E              ;
 665+ 900E              ;   13/03/23
 666+ 900E              ;
 667+ 900E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 900E              ;
 669+ 900E              ;   DESTRUYE: HL,BC,DE y A.
 670+ 900E
 671+ 900E 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9011 7E               ld a,(hl)
 673+ 9012 A7               and a
 674+ 9013 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9014
 676+ 9014 44               ld b,h
 677+ 9015 4D               ld c,l
 678+ 9016 2A 90 89         ld hl,(Stack_snapshot_disparos)
 679+ 9019 E5               push hl
 680+ 901A A7               and a
 681+ 901B ED 42            sbc hl,bc
 682+ 901D E5               push hl
 683+ 901E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 901F
 685+ 901F E1               pop hl
 686+ 9020 54               ld d,h
 687+ 9021 5D               ld e,l
 688+ 9022 1B               dec de
 689+ 9023 ED B8            lddr                                                ; Limpiamos.
 690+ 9025
 691+ 9025 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 9028 22 90 89         ld (Stack_snapshot_disparos),hl
 693+ 902B
 694+ 902B C9               ret
 695+ 902C
 696+ 902C              ; -------------------------------------------------------------------------------------------------------------
 697+ 902C              ;
 698+ 902C              ;   28/03/23
 699+ 902C              ;
 700+ 902C
 701+ 902C 01 B4 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 902F 2A 95 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9032
 704+ 9032 CD A5 8C     2 call Extrae_address
 705+ 9035 7E               ld a,(hl)
 706+ 9036 A7               and a
 707+ 9037 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 9039
 709+ 9039              ; ----- ----- ----- ----- ----- -----
 710+ 9039
 711+ 9039 C5               push bc
 712+ 903A CD F6 90         call foto_disparo_a_borrar
 713+ 903D
 714+ 903D              ; Existe colisión con este disparo???
 715+ 903D
 716+ 903D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 903E 7E               ld a,(hl)
 718+ 903F 2B               dec hl
 719+ 9040 E6 01            and 1
 720+ 9042 28 1D            jr z,9F
 721+ 9044
 722+ 9044              ;   En este punto:
 723+ 9044              ;
 724+ 9044              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 9044              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 9044              ;   _con la entidad).
 727+ 9044              ;
 728+ 9044              ;   Disparo_2A defw 0                                ; Control.
 729+ 9044              ;    defw 0                                          ; Puntero objeto.
 730+ 9044              ;    defw 0                                          ; Puntero de impresión.
 731+ 9044              ;    defw 0                                          ; Rutina de impresión.
 732+ 9044
 733+ 9044 E5               push hl
 734+ 9045
 735+ 9045 06 04            ld b,4
 736+ 9047 23           19 inc hl
 737+ 9048 10 FD            djnz 19B
 738+ 904A
 739+ 904A CD A5 8C         call Extrae_address
 740+ 904D CD 33 9B         call Genera_coordenadas_disparo
 741+ 9050
 742+ 9050              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 9050
 744+ 9050 21 9A 89         ld hl,Coordenadas_disparo_certero
 745+ 9053 72               ld (hl),d
 746+ 9054 23               inc hl
 747+ 9055 73               ld (hl),e
 748+ 9056
 749+ 9056              ; Elimino el disparo de la base de datos.
 750+ 9056
 751+ 9056 E1               pop hl
 752+ 9057 CD 72 91         call Elimina_disparo_de_base_de_datos
 753+ 905A 21 97 89         ld hl,Impacto2
 754+ 905D CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 905F
 756+ 905F 18 06            jr 11F
 757+ 9061
 758+ 9061 CD 1F 91     9 call Mueve_disparo
 759+ 9064 CD F6 90         call foto_disparo_a_borrar
 760+ 9067
 761+ 9067 C1           11 pop bc
 762+ 9068 18 04            jr 7F
 763+ 906A
 764+ 906A              ; ----- ----- ----- ----- ----- -----
 765+ 906A
 766+ 906A ED 42        1 sbc hl,bc
 767+ 906C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 906E 2A 95 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 9071 23               inc hl
 770+ 9072 23               inc hl
 771+ 9073 22 95 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 9076 18 BA            jr 2B
 773+ 9078 CD 6E 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 907B
 775+ 907B 01 1C 85         ld bc,Disparo_11
 776+ 907E 2A 93 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 9081
 778+ 9081 CD A5 8C     5 call Extrae_address
 779+ 9084 7E               ld a,(hl)
 780+ 9085 A7               and a
 781+ 9086 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 9088
 783+ 9088              ; ----- ----- ----- ----- ----- -----
 784+ 9088
 785+ 9088 C5               push bc
 786+ 9089 CD F6 90         call foto_disparo_a_borrar
 787+ 908C
 788+ 908C              ; Existe colisión con este disparo???
 789+ 908C
 790+ 908C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 908D 7E               ld a,(hl)
 792+ 908E 2B               dec hl
 793+ 908F E6 01            and 1
 794+ 9091 28 48            jr z,10F
 795+ 9093
 796+ 9093              ; La colisión se produce con Amadeus???
 797+ 9093              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 9093
 799+ 9093 E5               push hl
 800+ 9094
 801+ 9094 06 04            ld b,4
 802+ 9096 23           16 inc hl
 803+ 9097 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 9099 CD A5 8C         call Extrae_address
 805+ 909C CD 33 9B         call Genera_coordenadas_disparo
 806+ 909F
 807+ 909F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90A0 FE 16            cp $16
 809+ 90A2 38 22            jr c,15F
 810+ 90A4
 811+ 90A4              ; (Colisiones en filas 16 y 17).
 812+ 90A4
 813+ 90A4 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90A5
 815+ 90A5              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90A5
 817+ 90A5 21 3C 85         ld hl,Amadeus_db+6
 818+ 90A8 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90A9 23               inc hl
 820+ 90AA 23               inc hl
 821+ 90AB 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 90AC 21 4A 85         ld hl,Amadeus_db+20
 823+ 90AF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 90B0 21 9C 89         ld hl,Coordenadas_X_Amadeus
 825+ 90B3 CD 7D 91         call Guarda_coordenadas_X
 826+ 90B6
 827+ 90B6 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 90B7
 829+ 90B7              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 90B7
 831+ 90B7 06 03            ld b,3
 832+ 90B9 21 9C 89         ld hl,Coordenadas_X_Amadeus
 833+ 90BC 7E           18 ld a,(hl)
 834+ 90BD BA               cp d
 835+ 90BE 20 03            jr nz,17F
 836+ 90C0
 837+ 90C0              ; Colisión Amadeus !!!!!!!!!!
 838+ 90C0
 839+ 90C0 E1               pop hl
 840+ 90C1 18 09            jr 14F
 841+ 90C3
 842+ 90C3 23           17 inc hl
 843+ 90C4 10 F6            djnz 18B
 844+ 90C6
 845+ 90C6              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 90C6              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 90C6
 848+ 90C6 E1           15 pop hl
 849+ 90C7 23               inc hl
 850+ 90C8 35               dec (hl)
 851+ 90C9 2B               dec hl
 852+ 90CA 18 0F            jr 10F
 853+ 90CC
 854+ 90CC              ; -----------------------debug
 855+ 90CC
 856+ 90CC              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 90CC              ; _ almacén de coordenadas_X de Amadeus.
 858+ 90CC
 859+ 90CC E5           14 push hl
 860+ 90CD CD 72 91         call Elimina_disparo_de_base_de_datos
 861+ 90D0 21 97 89         ld hl,Impacto2
 862+ 90D3 CB CE            set 1,(hl)
 863+ 90D5 CD BC 91         call Limpia_Coordenadas_X
 864+ 90D8
 865+ 90D8 E1               pop hl
 866+ 90D9 18 06            jr 12F
 867+ 90DB
 868+ 90DB CD 1F 91     10 call Mueve_disparo
 869+ 90DE CD F6 90         call foto_disparo_a_borrar
 870+ 90E1 C1           12 pop bc
 871+ 90E2
 872+ 90E2 18 04            jr 8F
 873+ 90E4
 874+ 90E4              ; ----- ----- ----- ----- ----- -----
 875+ 90E4
 876+ 90E4 ED 42        4 sbc hl,bc
 877+ 90E6 28 0A            jr z,6F
 878+ 90E8
 879+ 90E8 2A 93 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 90EB 23               inc hl
 881+ 90EC 23               inc hl
 882+ 90ED 22 93 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 90F0 18 8F            jr 5B
 884+ 90F2
 885+ 90F2 CD 67 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 90F5 C9               ret
 887+ 90F6
 888+ 90F6              ; ------------------------------------------------------------------
 889+ 90F6
 890+ 90F6              foto_disparo_a_borrar
 891+ 90F6
 892+ 90F6 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 90F7 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 90F8 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 90F9
 896+ 90F9 E5               push hl
 897+ 90FA 23               inc hl
 898+ 90FB 23               inc hl
 899+ 90FC ED 73 8A 89      ld (Stack),sp
 900+ 9100 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9101 FD E1            pop iy
 902+ 9103 DD E1            pop ix
 903+ 9105 E1               pop hl
 904+ 9106 ED 7B 8A 89      ld sp,(Stack)
 905+ 910A 3A 79 89         ld a,(Ctrl_1)
 906+ 910D CB C7            set 0,a
 907+ 910F 32 79 89         ld (Ctrl_1),a
 908+ 9112 CD A0 7F         call Guarda_foto_registros
 909+ 9115 3A 79 89         ld a,(Ctrl_1)
 910+ 9118 CB 87            res 0,a
 911+ 911A 32 79 89         ld (Ctrl_1),a
 912+ 911D E1               pop hl
 913+ 911E C9               ret
 914+ 911F
 915+ 911F E5           Mueve_disparo push hl
 916+ 9120 7E               ld a,(hl)
 917+ 9121 06 04            ld b,4
 918+ 9123 23           1 inc hl
 919+ 9124 10 FD            djnz 1B
 920+ 9126
 921+ 9126              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9126
 923+ 9126 CD A5 8C         call Extrae_address
 924+ 9129
 925+ 9129 E6 01            and 1
 926+ 912B 28 2B            jr z,2F
 927+ 912D
 928+ 912D              ; Disparo hacia arriba, (Amadeus).
 929+ 912D
 930+ 912D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 912D              ; _ de la dificultad.
 932+ 912D
 933+ 912D CD EB 94         call PreviousScan
 934+ 9130 CD EB 94         call PreviousScan
 935+ 9133 CD EB 94         call PreviousScan
 936+ 9136
 937+ 9136              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9136
 939+ 9136 7C               ld a,h
 940+ 9137 FE 40            cp $40
 941+ 9139 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 913B
 943+ 913B              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 913B
 945+ 913B EB               ex de,hl
 946+ 913C 06 04            ld b,4
 947+ 913E 2B           6 dec hl
 948+ 913F 10 FD            djnz 6B
 949+ 9141
 950+ 9141 CD 72 91         call Elimina_disparo_de_base_de_datos
 951+ 9144 E1               pop hl
 952+ 9145 18 10            jr 7F
 953+ 9147
 954+ 9147              ; Se ha desplazado la bala, compruebo colisión.
 955+ 9147
 956+ 9147 D5           3 push de
 957+ 9148 C5               push bc
 958+ 9149
 959+ 9149 CD 2C 8F         call Comprueba_Colision
 960+ 914C
 961+ 914C              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 914C
 963+ 914C 78               ld a,b
 964+ 914D
 965+ 914D C1               pop bc
 966+ 914E D1               pop de
 967+ 914F
 968+ 914F EB               ex de,hl
 969+ 9150
 970+ 9150 73               ld (hl),e
 971+ 9151 23               inc hl
 972+ 9152 72               ld (hl),d
 973+ 9153
 974+ 9153 E1           4 pop hl
 975+ 9154 23               inc hl
 976+ 9155 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 9156 2B               dec hl
 978+ 9157 C9           7 ret
 979+ 9158
 980+ 9158              ; Disparo hacia abajo, (Entidad).
 981+ 9158
 982+ 9158              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 9158              ; _ de la dificultad.
 984+ 9158
 985+ 9158 CD DC 94     2 call NextScan
 986+ 915B CD DC 94         call NextScan
 987+ 915E CD DC 94         call NextScan
 988+ 9161
 989+ 9161              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 9161
 991+ 9161 7C               ld a,h
 992+ 9162 FE 58            cp $58
 993+ 9164 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 9166
 995+ 9166 EB               ex de,hl
 996+ 9167 06 04            ld b,4
 997+ 9169 2B           5 dec hl
 998+ 916A 10 FD            djnz 5B
 999+ 916C
1000+ 916C CD 72 91         call Elimina_disparo_de_base_de_datos
1001+ 916F E1               pop hl
1002+ 9170 18 E5            jr 7B
1003+ 9172
1004+ 9172              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 9172
1006+ 9172 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 9175 AF               xor a
1008+ 9176 77               ld (hl),a
1009+ 9177 54               ld d,h
1010+ 9178 5D               ld e,l
1011+ 9179 13               inc de
1012+ 917A ED B0            ldir
1013+ 917C C9               ret
1014+ 917D
1015+ 917D              ; -----------------------------------------------------------------
1016+ 917D              ;
1017+ 917D              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 917D              ;
1019+ 917D              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 917D              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 917D              ;
1022+ 917D              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 917D              ;
1024+ 917D              ;   INPUTS:
1025+ 917D              ;
1026+ 917D              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 917D              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 917D              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 917D
1030+ 917D              ;   MODIFICA: A, HL, DE y C
1031+ 917D
1032+ 917D 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 917E 79               ld a,c
1034+ 917F E6 01            and 1
1035+ 9181 20 03            jr nz,1F
1036+ 9183 14               inc d
1037+ 9184 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 9186
1039+ 9186              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 9186              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 9186
1042+ 9186 15           1 dec d
1043+ 9187 23           2 inc hl
1044+ 9188 72               ld (hl),d
1045+ 9189
1046+ 9189 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 918A A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 918B C8               ret z
1049+ 918C
1050+ 918C AF               xor a
1051+ 918D 5F               ld e,a
1052+ 918E 18 ED            jr Guarda_coordenadas_X
1053+ 9190
1054+ 9190              ; -----------------------------------------------------------------
1055+ 9190              ;
1056+ 9190              ;   12/04/23
1057+ 9190              ;
1058+ 9190
1059+ 9190 3A 97 89     Selector_de_impactos ld a,(Impacto2)
1060+ 9193 A7               and a
1061+ 9194 C8               ret z
1062+ 9195
1063+ 9195 FE 04            cp 4
1064+ 9197 20 09            jr nz,1F
1065+ 9199
1066+ 9199
1067+ 9199              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 9199
1069+ 9199 CD BD 8F         call Detecta_colision_nave_entidad
1070+ 919C
1071+ 919C 21 97 89         ld hl,Impacto2
1072+ 919F CB 5E            bit 3,(hl)
1073+ 91A1 C0               ret nz                                               ; Existe colisión, RET.
1074+ 91A2
1075+ 91A2              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91A2              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91A2
1078+ 91A2 21 97 89     1 ld hl,Impacto2
1079+ 91A5 CB 4E            bit 1,(hl)
1080+ 91A7 28 07            jr z,2F
1081+ 91A9
1082+ 91A9 21 4F 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 91AC 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 91AE 18 0B            jr 3F
1085+ 91B0
1086+ 91B0 21 97 89     2 ld hl,Impacto2
1087+ 91B3 CB 46            bit 0,(hl)
1088+ 91B5 C8               ret z
1089+ 91B6
1090+ 91B6              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 91B6
1092+ 91B6 21 79 89         ld hl,Ctrl_1
1093+ 91B9 CB D6            set 2,(hl)
1094+ 91BB
1095+ 91BB C9           3 ret
1096+ 91BC
1097+ 91BC              ; -----------------------------------------------------------------
1098+ 91BC              ;
1099+ 91BC              ;   16/04/23
1100+ 91BC              ;
1101+ 91BC
1102+ 91BC AF           Limpia_Coordenadas_X xor a
1103+ 91BD 06 06            ld b,6
1104+ 91BF 21 9C 89         ld hl,Coordenadas_X_Amadeus
1105+ 91C2 77           1 ld (hl),a
1106+ 91C3 23               inc hl
1107+ 91C4 10 FC            djnz 1B
1108+ 91C6 C9               ret
1109+ 91C7
1110+ 91C7              ; -----------------------------------------------------------------
1111+ 91C7              ;
1112+ 91C7              ;   25/04/23
1113+ 91C7              ;
1114+ 91C7
1115+ 91C7              Determina_resultado_comparativa
1116+ 91C7
1117+ 91C7              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 91C7              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 91C7              ;
1120+ 91C7              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 91C7              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 91C7              ;
1123+ 91C7              ;   SBC HL,DE
1124+ 91C7
1125+ 91C7 7C               ld a,h
1126+ 91C8 06 00            ld b,0
1127+ 91CA
1128+ 91CA CD DA 91         call Compara_cositas
1129+ 91CD
1130+ 91CD 04               inc b
1131+ 91CE 05               dec b
1132+ 91CF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 91D0
1134+ 91D0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 91D1 06 00            ld b,0
1136+ 91D3
1137+ 91D3 CD DA 91         call Compara_cositas
1138+ 91D6 18 01            jr 2F
1139+ 91D8
1140+ 91D8 04           1 inc b
1141+ 91D9 C9           2 ret
1142+ 91DA
1143+ 91DA A7           Compara_cositas and a
1144+ 91DB 28 17            jr z,1F
1145+ 91DD
1146+ 91DD FE FD            cp $fd
1147+ 91DF 28 13            jr z,1F
1148+ 91E1 FE FE            cp $fe
1149+ 91E3 28 0F            jr z,1F
1150+ 91E5 FE FF            cp $ff
1151+ 91E7 28 0B            jr z,1F
1152+ 91E9 FE 01            cp $01
1153+ 91EB 28 07            jr z,1F
1154+ 91ED FE 02            cp $02
1155+ 91EF 28 03            jr z,1F
1156+ 91F1 FE 03            cp $03
1157+ 91F3 C0               ret nz
1158+ 91F4
1159+ 91F4 04           1 inc b
1160+ 91F5 C9               ret
1161+ 91F6
# file closed: Disparo.asm
1211  91F6              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91F6              ; ******************************************************************************************************************************************************************************************
   2+ 91F6              ;
   3+ 91F6              ; 01/23
   4+ 91F6              ;
   5+ 91F6              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91F6
   7+ 91F6 CD D0 94     Draw call Prepara_draw
   8+ 91F9 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 91FA A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 91FB 28 05        	jr z,2F
  11+ 91FD
  12+ 91FD 3A 4F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9200 18 0C        	jr 1F
  14+ 9202 2A 4D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9205 22 3D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9208 CD 97 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 920B              ;													; _la esquina superior izquierda de la pantalla.
  18+ 920B CD 56 9C     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 920E 3A 69 89     1 ld a,(Ctrl_0)
  20+ 9211 CB 6F        	bit 5,a
  21+ 9213 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9215
  23+ 9215 CD 2D 92     	call Comprueba_limite_horizontal
  24+ 9218 CD BD 92     	call Comprueba_limite_vertical
  25+ 921B
  26+ 921B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 921B
  28+ 921B CD 0A 94     3 call calcula_CColumnass
  29+ 921E CD 41 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9221 CD 96 94     	call Define_rutina_de_impresion
  31+ 9224
  32+ 9224 3A 69 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9227 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9229 32 69 89     	ld (Ctrl_0),a
  35+ 922C
  36+ 922C C9           	ret
  37+ 922D
  38+ 922D              ; *******************************************************************************************************************************************************************************************
  39+ 922D              ;	21/01/23
  40+ 922D              ;
  41+ 922D              ; 	Comprueba_limite_horizontal.
  42+ 922D              ;
  43+ 922D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 922D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 922D              ;
  46+ 922D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 922D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 922D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 922D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 922D
  51+ 922D
  52+ 922D
  53+ 922D 3A 69 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9230 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9232 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9234 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9236 32 69 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9239 18 09            jr 6F
  59+ 923B CB 5F        1 bit 3,a
  60+ 923D 28 0A            jr z,2F
  61+ 923F E6 F7            and $f7
  62+ 9241 32 69 89         ld (Ctrl_0),a
  63+ 9244 CD 97 93     6 call Inicializacion
  64+ 9247 18 5B            jr 5F
  65+ 9249 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 924A
  67+ 924A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 924A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 924A
  70+ 924A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 924B 2A 74 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 924E CD 9C 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9251 67           	ld h,a
  74+ 9252 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9253 CD 9C 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9256 67           	ld h,a
  77+ 9257 A7           	and a
  78+ 9258 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 925A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 925B 3A 4F 89     	ld a,(Cuad_objeto)
  81+ 925E FE 02        	cp 2
  82+ 9260 38 1E        	jr c,3F
  83+ 9262 28 1C        	jr z,3F
  84+ 9264 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9265 28 23            jr z,7F
  86+ 9267 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9269 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 926B E1           	pop hl
  89+ 926C
  90+ 926C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 926C              ; _para indicar con E="2" en caso necesario.
  92+ 926C
  93+ 926C E5               push hl
  94+ 926D C5               push bc
  95+ 926E CD 9C 97     	call calcula_tercio
  96+ 9271 FE 01        	cp 1
  97+ 9273 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9275 CD A5 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9278 28 26            jr z,9F
 100+ 927A 38 24            jr c,9F
 101+ 927C 1E 00        11 ld e,0
 102+ 927E 18 22            jr 8F
 103+ 9280 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 9281 28 07        	jr z, 7F
 105+ 9283 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 9285 1E 00         	ld e,0
 107+ 9287 E1           	pop hl
 108+ 9288 18 04        	jr 4F
 109+ 928A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 928C 18 15            jr 10F
 111+ 928E
 112+ 928E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 928E              ; _para indicar con E="2" en caso necesario.
 114+ 928E
 115+ 928E E5           4 push hl
 116+ 928F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9290 CD 9C 97     	call calcula_tercio
 118+ 9293 FE 01        	cp 1
 119+ 9295 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 9297 CD A5 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 929A 28 04            jr z,9F
 122+ 929C 30 02            jr nc,9F
 123+ 929E 18 02        	jr 8F
 124+ 92A0 1E 02        9 ld e,2
 125+ 92A2 C1           8 pop bc
 126+ 92A3 E1           10 pop hl
 127+ 92A4 C9           5 ret
 128+ 92A5
 129+ 92A5              ; --------------------
 130+ 92A5              ;
 131+ 92A5              ; 25/08/22
 132+ 92A5
 133+ 92A5 CD 9C 97     Comprueba_centro call calcula_tercio
 134+ 92A8 67               ld h,a
 135+ 92A9 08           	ex af,af
 136+ 92AA FE 02        	cp 2
 137+ 92AC 38 07        	jr c,1F
 138+ 92AE 28 05        	jr z,1F
 139+ 92B0 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 92B3 18 03        	jr 2F
 141+ 92B5 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 92B8 08           2 ex af,af
 143+ 92B9 A7               and a
 144+ 92BA ED 42            sbc hl,bc
 145+ 92BC C9               ret
 146+ 92BD
 147+ 92BD              ; *********************************************************************************************************************************************************************************************
 148+ 92BD              ;
 149+ 92BD              ;   16/8/22
 150+ 92BD              ;
 151+ 92BD              ;	Comprueba_limite_vertical
 152+ 92BD              ;
 153+ 92BD              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 92BD              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 92BD              ;
 156+ 92BD
 157+ 92BD 2A 3D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 92C0 7D           	ld a,l
 159+ 92C1 E6 1F        	and $1F
 160+ 92C3 57           	ld d,a
 161+ 92C4 3A 76 89     	ld a,(Limite_vertical)
 162+ 92C7 BA           	cp d 											; Límite - Posición.
 163+ 92C8 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 92C9 3A 4F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 92CC CB 47        	bit 0,a
 166+ 92CE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 92D0
 168+ 92D0              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 92D0
 170+ 92D0 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 92D1 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 92D3
 173+ 92D3              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 92D3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 92D3
 176+ 92D3 3A 41 89         ld a,(Coordenada_X)
 177+ 92D6 16 0F            ld d,Centro_izquierda
 178+ 92D8 A7               and a
 179+ 92D9 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 92DA 28 1E            jr z,3F
 181+ 92DC 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 92DE              ;                                                    ; _salimos sin modificar nada.
 183+ 92DE 18 0E            jr 2F
 184+ 92E0 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 92E1 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 92E3
 187+ 92E3              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 92E3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 92E3
 190+ 92E3 3A 41 89         ld a,(Coordenada_X)
 191+ 92E6 16 10            ld d,Centro_derecha
 192+ 92E8 A7               and a
 193+ 92E9 92               sub d
 194+ 92EA 28 0E            jr z,3F
 195+ 92EC 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 92EE              ;                                                    ; _salimos sin modificar nada.
 197+ 92EE CB 43        2 bit 0,e
 198+ 92F0 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 92F2 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 92F3 CD 87 93         call Modificaccionne
 201+ 92F6 C1           	pop bc
 202+ 92F7 CD 97 93         call Inicializacion
 203+ 92FA C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 92FB
 205+ 92FB              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 92FB
 207+ 92FB C5           4 push bc
 208+ 92FC 01 3C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 92FF 0A           	ld a,(bc)
 210+ 9300 3D           	dec a
 211+ 9301 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9302 7D           	ld a,l
 213+ 9303 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9304 CB 47        	bit 0,a
 215+ 9306 28 03        	jr z,5F
 216+ 9308 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9309 18 2E        	jr 7F
 218+ 930B
 219+ 930B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 930B
 221+ 930B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 930C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 930D 3A 69 89     	ld a,(Ctrl_0)
 224+ 9310 CB 4F        	bit 1,a
 225+ 9312 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9314 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9315
 228+ 9315              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9315
 230+ 9315 1C               inc e
 231+ 9316 1D               dec e
 232+ 9317 20 07            jr nz,12F
 233+ 9319 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 931A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 931B 22 3D 89     	ld (Posicion_actual),hl
 236+ 931E 18 44        13 jr 9F
 237+ 9320 CB 43        12 bit 0,e
 238+ 9322 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9324              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9324 C1           	pop bc
 241+ 9325 18 D3        	jr 3B
 242+ 9327 80           14 add b
 243+ 9328 6F               ld l,a
 244+ 9329 22 3D 89     	ld (Posicion_actual),hl
 245+ 932C CD 87 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 932F 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9331 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9333 32 69 89         ld (Ctrl_0),a
 249+ 9336 F1           	pop af
 250+ 9337 18 2B        	jr 9F
 251+ 9339
 252+ 9339              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9339
 254+ 9339 F5           7 push af
 255+ 933A 3A 69 89     	ld a,(Ctrl_0)
 256+ 933D CB 47        	bit 0,a
 257+ 933F 20 1D        	jr nz,8F
 258+ 9341 F1           	pop af
 259+ 9342
 260+ 9342              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9342
 262+ 9342 1C           	inc e
 263+ 9343 1D               dec e
 264+ 9344 20 07            jr nz,10F
 265+ 9346 90           	sub b
 266+ 9347 6F               ld l,a
 267+ 9348 22 3D 89     	ld (Posicion_actual),hl
 268+ 934B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 934D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 934D CB 43        10 bit 0,e
 271+ 934F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9351              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9351 C1           	pop bc
 274+ 9352 18 A6        	jr 3B
 275+ 9354 90           16 sub b
 276+ 9355 6F               ld l,a
 277+ 9356 22 3D 89     	ld (Posicion_actual),hl
 278+ 9359 CD 87 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 935C 18 06            jr 9F
 280+ 935E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9360 32 69 89         ld (Ctrl_0),a
 282+ 9363 F1           	pop af
 283+ 9364 C1           9 pop bc
 284+ 9365 1E 00        	ld e,0
 285+ 9367 CD 97 93         call Inicializacion
 286+ 936A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 936B 08           	ex af,af
 288+ 936C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 936D 18 8B            jr 3B
 290+ 936F
 291+ 936F              ; --------------------
 292+ 936F
 293+ 936F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9371 CD EB 94     1 call PreviousScan
 295+ 9374 10 FB            djnz 1B
 296+ 9376 22 3D 89     	ld (Posicion_actual),hl
 297+ 9379 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 937A C9           	ret
 299+ 937B
 300+ 937B              ; --------------------
 301+ 937B
 302+ 937B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 937D CD DC 94     1 call NextScan
 304+ 9380 10 FB            djnz 1B
 305+ 9382 22 3D 89     	ld (Posicion_actual),hl
 306+ 9385 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 9386 C9           	ret
 308+ 9387
 309+ 9387              ; --------------------
 310+ 9387              ;
 311+ 9387              ;	22/01/23
 312+ 9387              ;
 313+ 9387              ;	E="1". Hemos cambiado de cuadrante.
 314+ 9387              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 9387              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 9387
 317+ 9387
 318+ 9387              Modificaccionne
 319+ 9387
 320+ 9387 3A 4F 89     	ld a,(Cuad_objeto)
 321+ 938A FE 02        	cp 2
 322+ 938C CC 6F 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 938F DC 6F 93         call c,Modifica_Pos_actual
 324+ 9392 C8           	ret z
 325+ 9393 CD 7B 93         call Modifica_Pos_actual2
 326+ 9396 C9               ret
 327+ 9397
 328+ 9397              ; *************************************************************************************************************************************************************************************************
 329+ 9397              ;
 330+ 9397              ;	13/8/22
 331+ 9397              ;
 332+ 9397              ;	Inicializacion
 333+ 9397              ;
 334+ 9397              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9397              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 9397              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 9397              ;
 338+ 9397              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 9397              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 9397              ;	_ desaparece/aparece.
 341+ 9397
 342+ 9397              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 9397              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 9397              ;
 345+ 9397              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 9397              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 9397              ; 		   [E] ="0"
 348+ 9397
 349+ 9397              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 9397
 351+ 9397 CD 9C 97     Inicializacion call calcula_tercio
 352+ 939A 28 36        	jr z,primit
 353+ 939C E6 02        	and 2
 354+ 939E 20 07        	jr nz,segmit
 355+ 93A0 7D           	ld a,l
 356+ 93A1 FE 7F        	cp $7f
 357+ 93A3 38 2D        	jr c,primit
 358+ 93A5 28 2B        	jr z,primit
 359+ 93A7 CD 04 94     segmit call column
 360+ 93AA 38 13        	jr c,tercuad
 361+ 93AC 3E 04        cuarcuad ld a,4
 362+ 93AE 32 4F 89     	ld (Cuad_objeto),a
 363+ 93B1 21 20 48     	ld hl,$4820
 364+ 93B4 22 74 89     	ld (Limite_horizontal),hl
 365+ 93B7 21 76 89     	ld hl,Limite_vertical
 366+ 93BA 36 0D        	ld (hl),$0d
 367+ 93BC 08           	ex af,af
 368+ 93BD 18 3C        	jr 1F
 369+ 93BF              tercuad
 370+ 93BF 3E 03        	ld a,3
 371+ 93C1 32 4F 89     	ld (Cuad_objeto),a
 372+ 93C4 21 20 48     	ld hl,$4820
 373+ 93C7 22 74 89     	ld (Limite_horizontal),hl
 374+ 93CA 21 76 89     	ld hl,Limite_vertical
 375+ 93CD 36 12        	ld (hl),$12
 376+ 93CF 08           	ex af,af
 377+ 93D0 18 29        	jr 1F
 378+ 93D2 CD 04 94     primit call column
 379+ 93D5 38 13        	jr c, primcuad
 380+ 93D7              segcuad
 381+ 93D7 3E 02        	ld a,2
 382+ 93D9 32 4F 89     	ld (Cuad_objeto),a
 383+ 93DC 21 C0 4F     	ld hl,$4fc0
 384+ 93DF 22 74 89     	ld (Limite_horizontal),hl
 385+ 93E2 21 76 89     	ld hl,Limite_vertical
 386+ 93E5 36 0D        	ld (hl),$0d
 387+ 93E7 08           	ex af,af
 388+ 93E8 18 11        	jr 1F
 389+ 93EA              primcuad
 390+ 93EA 3E 01        	ld a,1
 391+ 93EC 32 4F 89     	ld (Cuad_objeto),a
 392+ 93EF 21 C0 4F     	ld hl,$4fc0
 393+ 93F2 22 74 89     	ld (Limite_horizontal),hl
 394+ 93F5 21 76 89     	ld hl,Limite_vertical
 395+ 93F8 36 12        	ld (hl),$12
 396+ 93FA 08           	ex af,af
 397+ 93FB CD 08 9B     1 call Genera_coordenadas
 398+ 93FE 21 69 89     	ld hl,Ctrl_0
 399+ 9401 CB EE        	set 5,(hl)
 400+ 9403 C9           	ret
 401+ 9404
 402+ 9404              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9404
 404+ 9404              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9404              ;
 406+ 9404              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9404
 408+ 9404 7D           column ld a,l
 409+ 9405 E6 1F        	and $1f
 410+ 9407 FE 10         	cp $10
 411+ 9409 C9            	ret
 412+ 940A
 413+ 940A              ; --------------------------------------------------------------------------------------------------------------------
 414+ 940A              ;
 415+ 940A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 940A              ;
 417+ 940A              ; 14/12/22
 418+ 940A              ;
 419+ 940A              ;	Modifica: A y BC.
 420+ 940A
 421+ 940A 3A 4F 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 940D E6 01        	and 1
 423+ 940F 28 17        	jr z,1F
 424+ 9411
 425+ 9411              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9411
 427+ 9411 3A 41 89     	ld a,(Coordenada_X)
 428+ 9414 47           	ld b,a
 429+ 9415 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9416 79           	ld a,c
 431+ 9417 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9418 38 08        	jr c,2F
 433+ 941A 47           	ld b,a
 434+ 941B 79           	ld a,c
 435+ 941C 90           	sub b
 436+ 941D 32 73 89     	ld (Columnas),a
 437+ 9420 18 1B        	jr 4F
 438+ 9422 79           2 ld a,c
 439+ 9423 32 73 89     	ld (Columnas),a
 440+ 9426 18 15        	jr 4F
 441+ 9428
 442+ 9428              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9428
 444+ 9428 3A 41 89     1 ld a,(Coordenada_X)
 445+ 942B 81           	add c
 446+ 942C 3D           	dec a
 447+ 942D D6 1F        	sub $1f
 448+ 942F 38 08        	jr c,3F
 449+ 9431 47           	ld b,a
 450+ 9432 79           	ld a,c
 451+ 9433 90           	sub b
 452+ 9434 32 73 89     	ld (Columnas),a
 453+ 9437 18 04        	jr 4F
 454+ 9439 79           3 ld a,c
 455+ 943A 32 73 89     	ld (Columnas),a
 456+ 943D D9           4 exx
 457+ 943E 4F           	ld c,a
 458+ 943F D9           	exx
 459+ 9440 C9            ret
 460+ 9441
 461+ 9441              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9441              ;
 463+ 9441              ; 7/1/23
 464+ 9441              ;
 465+ 9441              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9441              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9441              ;
 468+ 9441              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9441              ;	DESTRUYE: HL,B Y A.
 470+ 9441
 471+ 9441 3A 4F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9444 FE 02        	cp 2
 473+ 9446 38 18        	jr c,1F
 474+ 9448 28 16        	jr z,1F
 475+ 944A E6 01        	and 1
 476+ 944C 28 0D        	jr z,3F
 477+ 944E
 478+ 944E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 944E
 480+ 944E CD 8A 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9451
 482+ 9451 7D           9 ld a,l
 483+ 9452 E6 1F        	and $1f
 484+ 9454 28 2A        	jr z,7F
 485+ 9456 2B           	dec hl
 486+ 9457 10 F8        	djnz 9B
 487+ 9459 18 25        	jr 7F
 488+ 945B
 489+ 945B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 945B
 491+ 945B 2A 3D 89     3 ld hl,(Posicion_actual)
 492+ 945E 18 20        	jr 7F
 493+ 9460
 494+ 9460 28 14        1 jr z,2F
 495+ 9462
 496+ 9462              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9462
 498+ 9462 CD 8A 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9465 7D           4 ld a,l
 500+ 9466 E6 1F        	and $1f
 501+ 9468 28 03        	jr z,6F
 502+ 946A 2B           	dec hl
 503+ 946B 10 F8        	djnz 4B
 504+ 946D 06 0F        6 ld b,15
 505+ 946F CD EB 94     5 call PreviousScan
 506+ 9472 10 FB        	djnz 5B
 507+ 9474 18 0A        	jr 7F
 508+ 9476
 509+ 9476              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9476
 511+ 9476 CD 8A 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9479 06 0F        	ld b,15
 513+ 947B CD EB 94     8 call PreviousScan
 514+ 947E 10 FB        	djnz 8B
 515+ 9480
 516+ 9480 E5           7 push hl
 517+ 9481 DD E1        	pop ix
 518+ 9483
 519+ 9483 2A 3F 89     	ld hl,(Puntero_objeto)
 520+ 9486 E5           	push hl
 521+ 9487 FD E1        	pop iy
 522+ 9489
 523+ 9489 C9           	ret
 524+ 948A
 525+ 948A              ; --------------------------------------------------------------------------------------------------------------------
 526+ 948A              ;
 527+ 948A              ;	2/1/23
 528+ 948A              ;
 529+ 948A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 948A              ;
 531+ 948A              ;	Tras esta rutina tenemos:
 532+ 948A              ;
 533+ 948A              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 948A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 948A              ;
 536+ 948A              ;	DESTRUYE!!!!! HL,B y A.
 537+ 948A
 538+ 948A 2A 3D 89     Operandos ld hl,(Posicion_actual)
 539+ 948D 3A 73 89     	ld a,(Columnas)
 540+ 9490 3D           	dec a
 541+ 9491 20 01        	jr nz,1F
 542+ 9493 3C           	inc a
 543+ 9494 47           1 ld b,a
 544+ 9495 C9           	ret
 545+ 9496
 546+ 9496              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9496              ;
 548+ 9496              ;	3/1/23
 549+ 9496              ;
 550+ 9496              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9496              ;
 552+ 9496              ;	Destruye: A,B,HL y DE.
 553+ 9496
 554+ 9496              Define_rutina_de_impresion
 555+ 9496
 556+ 9496 3A 3C 89     	ld a,(Columns)
 557+ 9499 47           	ld b,a
 558+ 949A 3A 73 89     	ld a,(Columnas)
 559+ 949D B8           	cp b
 560+ 949E 20 0D        	jr nz,2f
 561+ 94A0
 562+ 94A0              ;	La entidad se imprime entera.
 563+ 94A0
 564+ 94A0 21 6C 95     	ld hl, Indice_entidades_completas
 565+ 94A3 E6 01        	and 1
 566+ 94A5 28 02        	jr z,1F
 567+ 94A7
 568+ 94A7 23           	inc hl
 569+ 94A8 23           	inc hl
 570+ 94A9
 571+ 94A9 CD A5 8C     1 call Extrae_address
 572+ 94AC C9           	ret		;	ret
 573+ 94AD
 574+ 94AD              ;	La entidad no se imprime entera en pantalla.
 575+ 94AD
 576+ 94AD 3A 4F 89     2 ld a,(Cuad_objeto)
 577+ 94B0 E6 01        	and 1
 578+ 94B2 28 17        	jr z,3F
 579+ 94B4
 580+ 94B4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 94B4
 582+ 94B4 21 70 95     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 94B7 3A 3C 89     4 ld a,(Columns)
 584+ 94BA E6 01        	and 1
 585+ 94BC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 94BE
 587+ 94BE 23           	inc hl
 588+ 94BF 23           	inc hl
 589+ 94C0
 590+ 94C0 3A 73 89     	ld a,(Columnas)
 591+ 94C3 E6 01        	and 1
 592+ 94C5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 94C7
 594+ 94C7 23           	inc hl
 595+ 94C8 23           	inc hl
 596+ 94C9
 597+ 94C9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 94CB
 599+ 94CB 21 76 95     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 94CE 18 E7        	jr 4B
 601+ 94D0
 602+ 94D0              ; --------------------------------------------------------------------------------------------------------------------
 603+ 94D0              ;
 604+ 94D0              ;	Prepara_draw
 605+ 94D0              ;
 606+ 94D0              ;	Es una rutina de carga.
 607+ 94D0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 94D0              ;
 609+ 94D0              ;	FUNCIONAMIENTO:
 610+ 94D0              ;
 611+ 94D0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 94D0              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 94D0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 94D0              ;
 615+ 94D0              ;	DESTRUYE:
 616+ 94D0              ;
 617+ 94D0              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 94D0
 619+ 94D0 21 3B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 94D3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 94D4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 94D5 4E           	ld c,(hl)
 623+ 94D6 2A 3D 89     	ld hl,(Posicion_actual)
 624+ 94D9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 94DB C9           	ret
 626+ 94DC
 627+ 94DC              ;----------------------------------------------------------------------------------------------------------------
 628+ 94DC              ;
 629+ 94DC              ;	5/08/22
 630+ 94DC              ;
 631+ 94DC              ;   NextScan.
 632+ 94DC              ;
 633+ 94DC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 94DC              ;
 635+ 94DC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 94DC              ;
 637+ 94DC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 94DC              ;
 639+ 94DC              ;       DESTRUIDOS: AF y HL !!!
 640+ 94DC              ;
 641+ 94DC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 94DC              ;
 643+ 94DC
 644+ 94DC 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 94DD 7C               ld a,h
 646+ 94DE E6 07            and 7
 647+ 94E0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 94E1
 649+ 94E1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 94E2 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 94E4 6F               ld l,a
 652+ 94E5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 94E6
 654+ 94E6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 94E7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 94E9 67               ld h,a
 657+ 94EA C9               ret
 658+ 94EB
 659+ 94EB              ;----------------------------------------------------------------------------------------------------------------
 660+ 94EB              ;
 661+ 94EB              ;	5/08/22
 662+ 94EB              ;
 663+ 94EB              ;   PreviousScan.
 664+ 94EB              ;
 665+ 94EB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 94EB              ;
 667+ 94EB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 94EB              ;
 669+ 94EB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 94EB              ;
 671+ 94EB              ;       DESTRUIDOS: AF y HL !!!
 672+ 94EB              ;
 673+ 94EB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 94EB              ;
 675+ 94EB
 676+ 94EB 7C           PreviousScan ld a,h
 677+ 94EC 25               dec h               ; Dec H.
 678+ 94ED E6 07            and 7
 679+ 94EF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 94F0
 681+ 94F0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 94F1 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 94F3 6F               ld l,a
 684+ 94F4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 94F5
 686+ 94F5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 94F6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 94F8 67               ld h,a
 689+ 94F9 C9               ret
 690+ 94FA
 691+ 94FA              ; -----------------------------------------------------------------------------------
 692+ 94FA              ;
 693+ 94FA              ;	28/2/23
 694+ 94FA              ;
 695+ 94FA              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 94FA              ;	Extrae fotos de Album_de_fotos.
 697+ 94FA
 698+ 94FA 3A 85 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 94FD A7           	and a
 700+ 94FE C8           	ret z
 701+ 94FF ED 73 8A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 9503 31 00 70     	ld sp,Album_de_fotos
 703+ 9506
 704+ 9506 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 9508 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 9509 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 950A
 708+ 950A ED 73 8C 89  	ld (Stack_2),sp
 709+ 950E ED 7B 8A 89  	ld sp,(Stack)
 710+ 9512
 711+ 9512              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 9512
 713+ 9512 3E CD        	ld a,$cd
 714+ 9514 32 1C 95     	ld (Imprime),a
 715+ 9517 EB           	ex de,hl
 716+ 9518 22 1D 95     	ld (Imprime+1),hl
 717+ 951B EB           	ex de,hl
 718+ 951C
 719+ 951C              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 951C
 721+ 951C 00 00 00     Imprime db 0,0,0
 722+ 951F
 723+ 951F 3A 85 89     	ld a,(Numero_de_malotes)
 724+ 9522 3D           	dec a
 725+ 9523 28 09        	jr z,1F
 726+ 9525 32 85 89      	ld (Numero_de_malotes),a
 727+ 9528
 728+ 9528 ED 7B 8C 89   	ld sp,(Stack_2)
 729+ 952C 18 D8        	jr 2B
 730+ 952E
 731+ 952E AF           1 xor a
 732+ 952F 32 8C 89     	ld (Stack_2),a
 733+ 9532 C9           	ret
 734+ 9533
 735+ 9533              ; -----------------------------------------------------------------------------------
 736+ 9533              ;
 737+ 9533              ;	28/2/23
 738+ 9533              ;
 739+ 9533              ;	Pinta los disparos generados.
 740+ 9533
 741+ 9533              Extrae_foto_disparos
 742+ 9533
 743+ 9533 3A 92 89     	ld a,(Numero_de_disparotes)
 744+ 9536 A7           	and a
 745+ 9537 C8           	ret z
 746+ 9538 ED 73 8A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 953C 31 85 70     	ld sp,Album_de_fotos_disparos
 748+ 953F
 749+ 953F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9541 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9542 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9543
 753+ 9543 ED 73 8C 89  	ld (Stack_2),sp
 754+ 9547 ED 7B 8A 89  	ld sp,(Stack)
 755+ 954B
 756+ 954B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 954B
 758+ 954B 3E CD        	ld a,$cd
 759+ 954D 32 55 95     	ld (Imprime2),a
 760+ 9550 EB           	ex de,hl
 761+ 9551 22 56 95     	ld (Imprime2+1),hl
 762+ 9554 EB           	ex de,hl
 763+ 9555
 764+ 9555              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9555
 766+ 9555 00 00 00     Imprime2 db 0,0,0
 767+ 9558
 768+ 9558 3A 92 89     	ld a,(Numero_de_disparotes)
 769+ 955B 3D           	dec a
 770+ 955C 28 09        	jr z,1F
 771+ 955E 32 92 89      	ld (Numero_de_disparotes),a
 772+ 9561
 773+ 9561 ED 7B 8C 89  	ld sp,(Stack_2)
 774+ 9565 18 D8        	jr 2B
 775+ 9567
 776+ 9567 AF           1 xor a
 777+ 9568 32 8C 89     	ld (Stack_2),a
 778+ 956B C9           	ret
 779+ 956C
# file closed: Draw_XOR.asm
1212  956C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 956C              ;   índices de Rutinas de impresión.
   2+ 956C
   3+ 956C 7C 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 956E A9 95            defw Pinta_Amadeus_3x2
   5+ 9570
   6+ 9570 FF 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9572 9F 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9574 53 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9576
  10+ 9576 29 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9578 2D 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 957A E1 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 957C
  14+ 957C
  15+ 957C              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 957C              ;
  17+ 957C              ;   12/12/22
  18+ 957C              ;
  19+ 957C              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 957C              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 957C              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 957C              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 957C              ;
  24+ 957C              ;   Modifica: DE y HL.
  25+ 957C
  26+ 957C ED 73 8A 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9580 FD F9        	ld sp,iy
  28+ 9582 06 10            ld b,16
  29+ 9584 D1           1 pop de
  30+ 9585 7B               ld a,e
  31+ 9586 AE               xor (hl)
  32+ 9587 77           	ld (hl),a
  33+ 9588 23           	inc hl
  34+ 9589 7A               ld a,d
  35+ 958A AE               xor (hl)
  36+ 958B 77           	ld (hl),a
  37+ 958C 2B           	dec hl
  38+ 958D 24           	inc h
  39+ 958E 7C               ld a,h
  40+ 958F E6 07            and 7
  41+ 9591 20 0A            jr nz,2F
  42+ 9593 7D               ld a,l
  43+ 9594 C6 20            add a,$20
  44+ 9596 6F               ld l,a
  45+ 9597 38 04            jr c,2F
  46+ 9599 7C               ld a,h
  47+ 959A D6 08            sub 8
  48+ 959C 67               ld h,a
  49+ 959D 7C           2 ld a,h
  50+ 959E FE 58            cp $58
  51+ 95A0 28 02            jr z,3F
  52+ 95A2 10 E0            djnz 1B
  53+ 95A4 ED 7B 8A 89  3 ld sp,(Stack)
  54+ 95A8 C9           	ret
  55+ 95A9
  56+ 95A9 ED 73 8A 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95AD FD F9        	ld sp,iy
  58+ 95AF 06 08            ld b,8
  59+ 95B1 D1           1 pop de
  60+ 95B2 7B               ld a,e
  61+ 95B3 AE               xor (hl)
  62+ 95B4 77           	ld (hl),a
  63+ 95B5 23           	inc hl
  64+ 95B6 7A               ld a,d
  65+ 95B7 AE               xor (hl)
  66+ 95B8 77           	ld (hl),a
  67+ 95B9 23           	inc hl
  68+ 95BA D1           	pop de
  69+ 95BB 7B               ld a,e
  70+ 95BC AE               xor (hl)
  71+ 95BD 77           	ld (hl),a
  72+ 95BE 2B           	dec hl
  73+ 95BF 2B           	dec hl
  74+ 95C0 24           	inc h
  75+ 95C1 7C               ld a,h
  76+ 95C2 E6 07            and 7
  77+ 95C4 20 0A            jr nz,2F
  78+ 95C6 7D               ld a,l
  79+ 95C7 C6 20            add a,$20
  80+ 95C9 6F               ld l,a
  81+ 95CA 38 04            jr c,2F
  82+ 95CC 7C               ld a,h
  83+ 95CD D6 08            sub 8
  84+ 95CF 67               ld h,a
  85+ 95D0 7C           2 ld a,h
  86+ 95D1 FE 58            cp $58
  87+ 95D3 28 25            jr z,4F
  88+ 95D5 7A               ld a,d
  89+ 95D6 AE               xor (hl)
  90+ 95D7 77               ld (hl),a
  91+ 95D8 D1           	pop de
  92+ 95D9 23           	inc hl
  93+ 95DA 7B               ld a,e
  94+ 95DB AE               xor (hl)
  95+ 95DC 77           	ld (hl),a
  96+ 95DD 23           	inc hl
  97+ 95DE 7A               ld a,d
  98+ 95DF AE               xor (hl)
  99+ 95E0 77           	ld (hl),a
 100+ 95E1 2B           	dec hl
 101+ 95E2 2B           	dec hl
 102+ 95E3 24           	inc h
 103+ 95E4 7C               ld a,h
 104+ 95E5 E6 07            and 7
 105+ 95E7 20 0A            jr nz,3F
 106+ 95E9 7D               ld a,l
 107+ 95EA C6 20            add a,$20
 108+ 95EC 6F               ld l,a
 109+ 95ED 38 04            jr c,3F
 110+ 95EF 7C               ld a,h
 111+ 95F0 D6 08            sub 8
 112+ 95F2 67               ld h,a
 113+ 95F3 7C           3 ld a,h
 114+ 95F4 FE 58            cp $58
 115+ 95F6 28 02            jr z,4F
 116+ 95F8 10 B7            djnz 1B
 117+ 95FA ED 7B 8A 89  4 ld sp,(Stack)
 118+ 95FE C9           	ret
 119+ 95FF
 120+ 95FF              ; ---------------------------------------------------
 121+ 95FF
 122+ 95FF ED 73 8A 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9603 FD F9        	ld sp,iy
 124+ 9605
 125+ 9605              ; >>>
 126+ 9605
 127+ 9605 06 10            ld b,16
 128+ 9607 D1           1 pop de
 129+ 9608 7A           	ld a,d
 130+ 9609 AE           	xor (hl)
 131+ 960A 77           	ld (hl),a
 132+ 960B 24           	inc h
 133+ 960C 7C               ld a,h
 134+ 960D E6 07            and 7
 135+ 960F 20 0C            jr nz,2F
 136+ 9611 7D               ld a,l
 137+ 9612 C6 20            add a,$20
 138+ 9614 6F               ld l,a
 139+ 9615 38 06            jr c,2F
 140+ 9617 7C               ld a,h
 141+ 9618 D6 08            sub 8
 142+ 961A 67               ld h,a
 143+ 961B 18 00            jr 2F
 144+ 961D 7C           2 ld a,h
 145+ 961E FE 58            cp $58
 146+ 9620 28 02            jr z,3F
 147+ 9622 10 E3            djnz 1B
 148+ 9624 ED 7B 8A 89  3 ld sp,(Stack)
 149+ 9628 C9           	ret
 150+ 9629
 151+ 9629 ED 73 8A 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 962D FD F9        	ld sp,iy
 153+ 962F
 154+ 962F              ; >>>
 155+ 962F
 156+ 962F 06 10            ld b,16
 157+ 9631 D1           1 pop de
 158+ 9632 7B           	ld a,e
 159+ 9633 AE           	xor (hl)
 160+ 9634 77           	ld (hl),a
 161+ 9635 24           	inc h
 162+ 9636 7C               ld a,h
 163+ 9637 E6 07            and 7
 164+ 9639 20 0C            jr nz,2F
 165+ 963B 7D               ld a,l
 166+ 963C C6 20            add a,$20
 167+ 963E 6F               ld l,a
 168+ 963F 38 06            jr c,2F
 169+ 9641 7C               ld a,h
 170+ 9642 D6 08            sub 8
 171+ 9644 67               ld h,a
 172+ 9645 18 00            jr 2F
 173+ 9647 7C           2 ld a,h
 174+ 9648 FE 58            cp $58
 175+ 964A 28 02            jr z,3F
 176+ 964C 10 E3            djnz 1B
 177+ 964E ED 7B 8A 89  3 ld sp,(Stack)
 178+ 9652 C9           	ret
 179+ 9653
 180+ 9653              ; ---------------------------------------------------
 181+ 9653
 182+ 9653 ED 73 8A 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9657 FD F9        	ld sp,iy
 184+ 9659 06 08            ld b,8
 185+ 965B D1           1 pop de
 186+ 965C 7A           	ld a,d
 187+ 965D AE           	xor (hl)
 188+ 965E 77           	ld (hl),a
 189+ 965F 23           	inc hl
 190+ 9660 D1           	pop de
 191+ 9661 7B           	ld a,e
 192+ 9662 AE           	xor (hl)
 193+ 9663 77           	ld (hl),a
 194+ 9664 2B           	dec hl
 195+ 9665 24            	inc h
 196+ 9666 7C               ld a,h
 197+ 9667 E6 07            and 7
 198+ 9669 20 0A            jr nz,2F
 199+ 966B 7D               ld a,l
 200+ 966C C6 20            add a,$20
 201+ 966E 6F               ld l,a
 202+ 966F 38 04            jr c,2F
 203+ 9671 7C               ld a,h
 204+ 9672 D6 08            sub 8
 205+ 9674 67               ld h,a
 206+ 9675 7C           2 ld a,h
 207+ 9676 FE 58            cp $58
 208+ 9678 28 20            jr z,4F
 209+ 967A D1               pop de
 210+ 967B 7B           	ld a,e
 211+ 967C AE           	xor (hl)
 212+ 967D 77           	ld (hl),a
 213+ 967E 23           	inc hl
 214+ 967F 7A           	ld a,d
 215+ 9680 AE           	xor (hl)
 216+ 9681 77           	ld (hl),a
 217+ 9682 2B           	dec hl
 218+ 9683 24           	inc h
 219+ 9684 7C               ld a,h
 220+ 9685 E6 07            and 7
 221+ 9687 20 0A            jr nz,3F
 222+ 9689 7D               ld a,l
 223+ 968A C6 20            add a,$20
 224+ 968C 6F               ld l,a
 225+ 968D 38 04            jr c,3F
 226+ 968F 7C               ld a,h
 227+ 9690 D6 08            sub 8
 228+ 9692 67               ld h,a
 229+ 9693 7C           3 ld a,h
 230+ 9694 FE 58            cp $58
 231+ 9696 28 02            jr z,4F
 232+ 9698 10 C1            djnz 1B
 233+ 969A ED 7B 8A 89  4 ld sp,(Stack)
 234+ 969E C9           	ret
 235+ 969F
 236+ 969F ED 73 8A 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96A3 FD F9        	ld sp,iy
 238+ 96A5 06 08            ld b,8
 239+ 96A7 D1           1 pop de
 240+ 96A8 D1           	pop de
 241+ 96A9 7B           	ld a,e
 242+ 96AA AE           	xor (hl)
 243+ 96AB 77           	ld (hl),a
 244+ 96AC 24            	inc h
 245+ 96AD 7C               ld a,h
 246+ 96AE E6 07            and 7
 247+ 96B0 20 0A            jr nz,2F
 248+ 96B2 7D               ld a,l
 249+ 96B3 C6 20            add a,$20
 250+ 96B5 6F               ld l,a
 251+ 96B6 38 04            jr c,2F
 252+ 96B8 7C               ld a,h
 253+ 96B9 D6 08            sub 8
 254+ 96BB 67               ld h,a
 255+ 96BC 7C           2 ld a,h
 256+ 96BD FE 58            cp $58
 257+ 96BF 28 1B            jr z,4F
 258+ 96C1 D1               pop de
 259+ 96C2 7A           	ld a,d
 260+ 96C3 AE           	xor (hl)
 261+ 96C4 77           	ld (hl),a
 262+ 96C5 24           	inc h
 263+ 96C6 7C               ld a,h
 264+ 96C7 E6 07            and 7
 265+ 96C9 20 0A            jr nz,3F
 266+ 96CB 7D               ld a,l
 267+ 96CC C6 20            add a,$20
 268+ 96CE 6F               ld l,a
 269+ 96CF 38 04            jr c,3F
 270+ 96D1 7C               ld a,h
 271+ 96D2 D6 08            sub 8
 272+ 96D4 67               ld h,a
 273+ 96D5 7C           3 ld a,h
 274+ 96D6 FE 58            cp $58
 275+ 96D8 28 02            jr z,4F
 276+ 96DA 10 CB            djnz 1B
 277+ 96DC ED 7B 8A 89  4 ld sp,(Stack)
 278+ 96E0 C9           	ret
 279+ 96E1
 280+ 96E1 ED 73 8A 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 96E5 FD F9        	ld sp,iy
 282+ 96E7 06 08            ld b,8
 283+ 96E9 D1           1 pop de
 284+ 96EA 7B           	ld a,e
 285+ 96EB AE           	xor (hl)
 286+ 96EC 77           	ld (hl),a
 287+ 96ED 23           	inc hl
 288+ 96EE 7A           	ld a,d
 289+ 96EF AE           	xor (hl)
 290+ 96F0 77           	ld (hl),a
 291+ 96F1 2B           	dec hl
 292+ 96F2 24             	inc h
 293+ 96F3 7C               ld a,h
 294+ 96F4 E6 07            and 7
 295+ 96F6 20 0A            jr nz,2F
 296+ 96F8 7D               ld a,l
 297+ 96F9 C6 20            add a,$20
 298+ 96FB 6F               ld l,a
 299+ 96FC 38 04            jr c,2F
 300+ 96FE 7C               ld a,h
 301+ 96FF D6 08            sub 8
 302+ 9701 67               ld h,a
 303+ 9702 7C           2 ld a,h
 304+ 9703 FE 58            cp $58
 305+ 9705 28 21            jr z,4F
 306+ 9707 D1               pop de
 307+ 9708 7A           	ld a,d
 308+ 9709 AE           	xor (hl)
 309+ 970A 77           	ld (hl),a
 310+ 970B 23           	inc hl
 311+ 970C D1               pop de
 312+ 970D 7B           	ld a,e
 313+ 970E AE           	xor (hl)
 314+ 970F 77           	ld (hl),a
 315+ 9710 2B           	dec hl
 316+ 9711 24           	inc h
 317+ 9712 7C               ld a,h
 318+ 9713 E6 07            and 7
 319+ 9715 20 0A            jr nz,3F
 320+ 9717 7D               ld a,l
 321+ 9718 C6 20            add a,$20
 322+ 971A 6F               ld l,a
 323+ 971B 38 04            jr c,3F
 324+ 971D 7C               ld a,h
 325+ 971E D6 08            sub 8
 326+ 9720 67               ld h,a
 327+ 9721 7C           3 ld a,h
 328+ 9722 FE 58            cp $58
 329+ 9724 28 02            jr z,4F
 330+ 9726 10 C1            djnz 1B
 331+ 9728 ED 7B 8A 89  4 ld sp,(Stack)
 332+ 972C C9           	ret
 333+ 972D
 334+ 972D ED 73 8A 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9731 FD F9        	ld sp,iy
 336+ 9733 06 08            ld b,8
 337+ 9735 D1           1 pop de
 338+ 9736 7B           	ld a,e
 339+ 9737 AE           	xor (hl)
 340+ 9738 77           	ld (hl),a
 341+ 9739 24            	inc h
 342+ 973A 7C               ld a,h
 343+ 973B E6 07            and 7
 344+ 973D 20 0A            jr nz,2F
 345+ 973F 7D               ld a,l
 346+ 9740 C6 20            add a,$20
 347+ 9742 6F               ld l,a
 348+ 9743 38 04            jr c,2F
 349+ 9745 7C               ld a,h
 350+ 9746 D6 08            sub 8
 351+ 9748 67               ld h,a
 352+ 9749 7C           2 ld a,h
 353+ 974A FE 58            cp $58
 354+ 974C 28 1C            jr z,4F
 355+ 974E D1               pop de
 356+ 974F 7A           	ld a,d
 357+ 9750 AE           	xor (hl)
 358+ 9751 77           	ld (hl),a
 359+ 9752 24           	inc h
 360+ 9753 7C               ld a,h
 361+ 9754 E6 07            and 7
 362+ 9756 20 0A            jr nz,3F
 363+ 9758 7D               ld a,l
 364+ 9759 C6 20            add a,$20
 365+ 975B 6F               ld l,a
 366+ 975C 38 04            jr c,3F
 367+ 975E 7C               ld a,h
 368+ 975F D6 08            sub 8
 369+ 9761 67               ld h,a
 370+ 9762 7C           3 ld a,h
 371+ 9763 FE 58            cp $58
 372+ 9765 28 03            jr z,4F
 373+ 9767 D1               pop de
 374+ 9768 10 CB            djnz 1B
 375+ 976A ED 7B 8A 89  4 ld sp,(Stack)
 376+ 976E C9           	ret
 377+ 976F
 378+ 976F              ; ---------------------------------------------------
 379+ 976F              ;
 380+ 976F              ;   27/02/23
 381+ 976F              ;
 382+ 976F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 976F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 976F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 976F
 386+ 976F ED 73 8A 89  Pinta_Disparo ld (Stack),sp
 387+ 9773 FD F9            ld sp,iy
 388+ 9775 06 02            ld b,2
 389+ 9777 D1           1 pop de
 390+ 9778 7B               ld a,e
 391+ 9779 AE               xor (hl)
 392+ 977A 77               ld (hl),a
 393+ 977B 23               inc hl
 394+ 977C 7A               ld a,d
 395+ 977D AE               xor (hl)
 396+ 977E 77               ld (hl),a
 397+ 977F 2B               dec hl
 398+ 9780
 399+ 9780 24               inc h
 400+ 9781 7C               ld a,h
 401+ 9782 E6 07            and 7
 402+ 9784 20 0A            jr nz,2F
 403+ 9786 7D               ld a,l
 404+ 9787 C6 20            add a,$20
 405+ 9789 6F               ld l,a
 406+ 978A 38 04            jr c,2F
 407+ 978C 7C               ld a,h
 408+ 978D D6 08            sub 8
 409+ 978F 67               ld h,a
 410+ 9790 7C           2 ld a,h
 411+ 9791 FE 58            cp $58
 412+ 9793 28 02            jr z,3F
 413+ 9795
 414+ 9795 10 E0            djnz 1B
 415+ 9797 ED 7B 8A 89  3 ld sp,(Stack)
 416+ 979B C9               ret
 417+ 979C
# file closed: Rutinas_de_impresion_sprites.asm
1213  979C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 979C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 979C              ;
   3+ 979C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 979C              ;
   5+ 979C              ; *****************************************************************************************************************************************************************************************
   6+ 979C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 979C
   8+ 979C 7C           calcula_tercio ld a,h
   9+ 979D E6 18        	and $18
  10+ 979F CB 2F        	sra a
  11+ 97A1 CB 2F        	sra a
  12+ 97A3 CB 2F        	sra a
  13+ 97A5 C9           	ret
  14+ 97A6
# file closed: calcula_tercio.asm
1214  97A6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97A6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97A6              ;
   3+ 97A6              ;
   4+ 97A6              ;	CLS.
   5+ 97A6              ;
   6+ 97A6              ;	Limpia la pantalla y define sus atributos.
   7+ 97A6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97A6              ;
   9+ 97A6              ;	COLORES: 0 ..... NEGRO
  10+ 97A6              ;    		 1 ..... AZUL
  11+ 97A6              ; 			 2 ..... ROJO
  12+ 97A6              ;			 3 ..... MAGENTA
  13+ 97A6              ; 			 4 ..... VERDE
  14+ 97A6              ; 			 5 ..... CIAN
  15+ 97A6              ;			 6 ..... AMARILLO
  16+ 97A6              ; 			 7 ..... BLANCO
  17+ 97A6              ;
  18+ 97A6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97A6              ;
  20+ 97A6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97A6
  22+ 97A6
  23+ 97A6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97A9 11 01 40     	LD DE,$4001
  25+ 97AC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97AF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97B1 ED B0        	LDIR
  28+ 97B3 01 FF 02     	LD BC,767
  29+ 97B6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 97B7 ED B0        	LDIR
  31+ 97B9 C9           	ret
  32+ 97BA
# file closed: Cls.asm
1215  97BA              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 97BA              ; ******************************************************************************************************************************************************************************************
   2+ 97BA              ;
   3+ 97BA              ;   20/05/23
   4+ 97BA              ;
   5+ 97BA              ;	Recompone_posicion_inicio
   6+ 97BA              ;
   7+ 97BA              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 97BA              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 97BA              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 97BA              ;	_ a una u otra rutina.
  11+ 97BA
  12+ 97BA              Recompone_posicion_inicio
  13+ 97BA
  14+ 97BA 2A 4D 89     	ld hl,(Posicion_inicio)
  15+ 97BD 7D           	ld a,l
  16+ 97BE E6 1F        	and $1f
  17+ 97C0 28 16        	jr z,1F
  18+ 97C2
  19+ 97C2 FE 1F        	cp $1f
  20+ 97C4 28 0D        	jr z,3F
  21+ 97C6
  22+ 97C6 21 77 89     	ld hl,Ctrl_2
  23+ 97C9 CB CE        	set 1,(hl)
  24+ 97CB 2A 3F 89     	ld hl,(Puntero_objeto)
  25+ 97CE 22 7A 89     	ld (Repone_puntero_objeto),hl
  26+ 97D1 18 08        	jr 2F
  27+ 97D3
  28+ 97D3 CD 74 99     3 call Mov_left
  29+ 97D6 18 03        	jr 2F
  30+ 97D8
  31+ 97D8 CD 56 98     1 call Mov_right
  32+ 97DB 21 00 F0     2 ld hl,Sprite_vacio
  33+ 97DE 22 3F 89     	ld (Puntero_objeto),hl
  34+ 97E1 C9           	ret
  35+ 97E2
  36+ 97E2              ; ******************************************************************************************************************************************************************************************
  37+ 97E2              ;
  38+ 97E2              ;   27/05/23
  39+ 97E2              ;
  40+ 97E2              ;	Mov_down
  41+ 97E2              ;
  42+ 97E2              ; 	Mueve el Sprite X px hacia abajo.
  43+ 97E2              ;
  44+ 97E2              ;
  45+ 97E2              Mov_down
  46+ 97E2
  47+ 97E2 CD 44 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 97E5              ;																	; _ repone (Puntero_objeto).
  49+ 97E5 21 69 89     	ld hl,Ctrl_0
  50+ 97E8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 97EA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 97EA              ; 																	; _ en el caso de que no lo haya.
  53+ 97EA 3A 53 89     	ld a,(Vel_down)
  54+ 97ED 47           	ld b,a
  55+ 97EE 2A 3D 89         ld hl,(Posicion_actual)
  56+ 97F1 CD 9C 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 97F4 E6 02        	and 2
  58+ 97F6 28 0F        	jr z,1F
  59+ 97F8
  60+ 97F8              ; Nos encontramos en el último tercio de pantalla.
  61+ 97F8              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 97F8
  63+ 97F8 7C           	ld a,h
  64+ 97F9 FE 57        	cp $57
  65+ 97FB 20 0A        	jr nz,1F
  66+ 97FD 7D           	ld a,l
  67+ 97FE C6 20        	add $20
  68+ 9800 30 05        	jr nc,1F
  69+ 9802
  70+ 9802              ; ------------------------------
  71+ 9802 CD F2 9A     	call Reaparece_arriba
  72+ 9805              ;	call Reinicio
  73+ 9805              ; ------------------------------
  74+ 9805
  75+ 9805 18 08        	jr 3F
  76+ 9807 CD DC 94     1 call NextScan
  77+ 980A 22 3D 89     	ld (Posicion_actual),hl
  78+ 980D 10 E2            djnz 2B
  79+ 980F CD 08 9B     3 call Genera_coordenadas
  80+ 9812 C9           	ret
  81+ 9813
  82+ 9813              ; ******************************************************************************************************************************************************************************************
  83+ 9813              ;
  84+ 9813              ;   27/05/23
  85+ 9813              ;
  86+ 9813              ;	Mov_up
  87+ 9813              ;
  88+ 9813              ; 	Mueve el Sprite hacia arriba.
  89+ 9813              ;
  90+ 9813              ;
  91+ 9813              Mov_up
  92+ 9813
  93+ 9813 CD 44 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9816              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9816 21 69 89     	ld hl,Ctrl_0
  96+ 9819 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 981B              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 981B              ; 																		; _ en el caso de que no lo haya.
  99+ 981B 3A 52 89     	ld a,(Vel_up)
 100+ 981E 47           	ld b,a
 101+ 981F 2A 3D 89     	ld hl,(Posicion_actual)
 102+ 9822 CD 9C 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9825 A7           	and a
 104+ 9826 20 10        	jr nz,1F
 105+ 9828
 106+ 9828              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9828              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9828
 109+ 9828 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9829 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 982B 20 0B            jr nz,1F
 112+ 982D 7D               ld a,l
 113+ 982E D6 20            sub $20
 114+ 9830 30 06            jr nc,1F
 115+ 9832 25               dec h
 116+ 9833
 117+ 9833              ; -----------------------------
 118+ 9833 CD E2 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9836              ;	call Reinicio
 120+ 9836              ; -----------------------------
 121+ 9836
 122+ 9836 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9838 CD EB 94     1 call PreviousScan
 124+ 983B 22 3D 89     	ld (Posicion_actual),hl
 125+ 983E 10 E2            djnz 3B
 126+ 9840 CD 08 9B     2 call Genera_coordenadas
 127+ 9843 C9           	ret
 128+ 9844
 129+ 9844              ; -----------------------------
 130+ 9844              ;
 131+ 9844              ;	27/5/23
 132+ 9844              ;
 133+ 9844              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9844              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9844              ;
 136+ 9844              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9844              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9844              ;
 139+ 9844              ;	Modifica: A y (Puntero_objeto).
 140+ 9844
 141+ 9844 3A 77 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9847 CB 4F        	bit 1,a
 143+ 9849 C8           	ret z
 144+ 984A CB 8F        	res 1,a
 145+ 984C 32 77 89     	ld (Ctrl_2),a
 146+ 984F 2A 7A 89     	ld hl,(Repone_puntero_objeto)
 147+ 9852 22 3F 89     	ld (Puntero_objeto),hl
 148+ 9855 C9           	ret
 149+ 9856
 150+ 9856              ; ******************************************************************************************************************************************************************************************
 151+ 9856              ;
 152+ 9856              ;	19/10/22
 153+ 9856              ;
 154+ 9856              ;	Mov_right.
 155+ 9856              ;
 156+ 9856              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9856              ;
 158+ 9856
 159+ 9856 21 69 89     Mov_right ld hl,Ctrl_0
 160+ 9859 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 985B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 985B              ; 																	; _ en el caso de que no lo haya.
 163+ 985B 3A 69 89     	ld a,(Ctrl_0)
 164+ 985E CB 77        	bit 6,a
 165+ 9860 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9862
 167+ 9862 CD 90 9A     	call Stop_Amadeus_right
 168+ 9865 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 9866 18 4D        	jr 8F
 170+ 9868
 171+ 9868 3A 41 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 986B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 986D 20 46        	jr nz,8F
 174+ 986F
 175+ 986F 3A 43 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 9872 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 9873 28 40        	jr z,8F
 178+ 9875
 179+ 9875              ; ---------- ---------- ----------
 180+ 9875              ;
 181+ 9875              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 9875
 183+ 9875 3A 51 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 9878 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 987A 28 11        	jr z,1F
 186+ 987C 38 06        	jr c,6F
 187+ 987E FE 04        	cp 4
 188+ 9880 28 14        	jr z,7F
 189+ 9882 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 9884
 191+ 9884              ; ---------- ---------- ----------
 192+ 9884              ;
 193+ 9884              ; Perfiles de velocidad
 194+ 9884              ;
 195+ 9884
 196+ 9884 3A 43 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 9887 FE FE        	cp $fe
 198+ 9889 20 2A        	jr nz,8F
 199+ 988B 18 10        	jr 3F
 200+ 988D 3A 43 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 9890 FE FD        	cp $fd
 202+ 9892 20 21        	jr nz,8F
 203+ 9894 18 07        	jr 3F
 204+ 9896 3A 43 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 9899 FE FB        	cp $fb
 206+ 989B 20 18        	jr nz,8F
 207+ 989D
 208+ 989D              ; ---------- ---------- ----------
 209+ 989D
 210+ 989D              3
 211+ 989D CD D0 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 98A0              ;	call Reinicio
 213+ 98A0
 214+ 98A0              ; ---------- ---------- ----------
 215+ 98A0              ;
 216+ 98A0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 98A0
 218+ 98A0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 98A2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 98A3 CD BC 98     	call DESPLZ_DER
 221+ 98A6 C1           	pop bc
 222+ 98A7 10 F9        	djnz 5B
 223+ 98A9 2A 3D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 98AC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 98AD 22 3D 89     	ld (Posicion_actual),hl
 226+ 98B0 CD 08 9B     	call Genera_coordenadas
 227+ 98B3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 98B5
 229+ 98B5              ; ---------- ---------- ----------
 230+ 98B5
 231+ 98B5 2A 3D 89     8 ld hl,(Posicion_actual)
 232+ 98B8 CD BC 98     	call DESPLZ_DER
 233+ 98BB C9           2 ret
 234+ 98BC
 235+ 98BC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 98BC              ;
 237+ 98BC              ;	22/9/22
 238+ 98BC              ;
 239+ 98BC
 240+ 98BC CD CB 98     DESPLZ_DER call Desplaza_derecha
 241+ 98BF CD 17 99         call modifica_parametros_1er_DESPLZ_2
 242+ 98C2 CD 40 99         call Ciclo_completo
 243+ 98C5 21 69 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 98C8 CB FE        	set 7,(hl)
 245+ 98CA C9           	ret
 246+ 98CB
 247+ 98CB              ; ******************************************************************************************************************************************************************************************
 248+ 98CB              ;	15/02/23
 249+ 98CB              ;
 250+ 98CB
 251+ 98CB 3A 51 89     Desplaza_derecha ld a,(Vel_right)
 252+ 98CE 47           	ld b,a
 253+ 98CF 2A 49 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 98D2 23           1 inc hl
 255+ 98D3 23           	inc hl
 256+ 98D4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 98D6 22 49 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 98D9 CD A5 8C     	call Extrae_address
 259+ 98DC 22 3F 89     	ld (Puntero_objeto),hl
 260+ 98DF
 261+ 98DF              ; Modifica (Puntero_DESPLZ_izq).
 262+ 98DF
 263+ 98DF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 98DF              ; Cuántos movimientos hemos hecho ??
 265+ 98DF              ; DE contiene (Puntero_DESPLZ_der).
 266+ 98DF
 267+ 98DF 2A 45 89     7 ld hl,(Indice_Sprite_der)
 268+ 98E2 EB           	ex de,hl
 269+ 98E3 A7           	and a
 270+ 98E4 ED 52        	sbc hl,de
 271+ 98E6 CB 3D        	srl l
 272+ 98E8 3E 08        6 ld a,8
 273+ 98EA 95           	sub l
 274+ 98EB 30 1E        	jr nc,3F
 275+ 98ED
 276+ 98ED              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 98ED              ; B="0".
 278+ 98ED
 279+ 98ED 04           4 inc b
 280+ 98EE 3C           	inc a
 281+ 98EF 20 FC        	jr nz,4B
 282+ 98F1 78           	ld a,b
 283+ 98F2 08           	ex af,af
 284+ 98F3 2A 45 89     	ld hl,(Indice_Sprite_der)
 285+ 98F6 23           5 inc hl
 286+ 98F7 23           	inc hl
 287+ 98F8 10 FC        	djnz 5B
 288+ 98FA 22 49 89     	ld (Puntero_DESPLZ_der),hl
 289+ 98FD CD A5 8C     	call Extrae_address
 290+ 9900 22 3F 89     	ld (Puntero_objeto),hl
 291+ 9903
 292+ 9903              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9903              ; _(Posicion_actual).
 294+ 9903
 295+ 9903 21 3D 89     	ld hl,Posicion_actual
 296+ 9906 34           	inc (hl)
 297+ 9907 08               ex af,af
 298+ 9908 6F           	ld l,a
 299+ 9909 18 DD        	jr 6B
 300+ 990B
 301+ 990B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 990B
 303+ 990B 47           3 ld b,a
 304+ 990C 2A 47 89     	ld hl,(Indice_Sprite_izq)
 305+ 990F 23           2 inc hl
 306+ 9910 23           	inc hl
 307+ 9911 10 FC        	djnz 2B
 308+ 9913 22 4B 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9916 C9           8 ret
 310+ 9917
 311+ 9917              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9917              ;
 313+ 9917              ;	24/7/22
 314+ 9917              ;
 315+ 9917              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9917              ;
 317+ 9917              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9917              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9917              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9917
 321+ 9917 3A 43 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 991A A7           	and a
 323+ 991B 20 1F        	jr nz,1F
 324+ 991D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 991F 32 43 89         ld (CTRL_DESPLZ),a
 326+ 9922
 327+ 9922 21 3C 89     	ld hl,Columns
 328+ 9925 34           	inc (hl)
 329+ 9926 3A 4F 89     	ld a,(Cuad_objeto)
 330+ 9929 E6 01        	and 1
 331+ 992B 28 0F        	jr z,1F
 332+ 992D 2A 3D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9930 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9931 22 3D 89     	ld (Posicion_actual),hl
 335+ 9934 CD 08 9B     	call Genera_coordenadas
 336+ 9937 CD 9C 9A     	call Inc_CTRL_DESPLZ
 337+ 993A 18 03        	jr 2F
 338+ 993C CD 9C 9A     1 call Inc_CTRL_DESPLZ
 339+ 993F C9           2 ret
 340+ 9940
 341+ 9940              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9940              ;
 343+ 9940              ;	24/7/22
 344+ 9940              ;
 345+ 9940              ;	Ciclo_completo.
 346+ 9940              ;
 347+ 9940              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9940              ;
 349+ 9940              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9940              ; 	Decrementamos (Columns).
 351+ 9940              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9940              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9940
 354+ 9940
 355+ 9940 3A 43 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9943 FE FF        	cp $ff
 357+ 9945 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9947 E6 F0        	and $f0
 359+ 9949 20 28        	jr nz,3F
 360+ 994B
 361+ 994B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 994B
 363+ 994B 3A 43 89     	ld a,(CTRL_DESPLZ)
 364+ 994E 47           	ld b,a
 365+ 994F 3E F8        	ld a,$f8
 366+ 9951 80           	add b
 367+ 9952 32 43 89     	ld (CTRL_DESPLZ),a
 368+ 9955 18 1C        	jr 3F
 369+ 9957 21 3C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 995A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 995B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 995C 32 43 89     	ld (CTRL_DESPLZ),a
 373+ 995F 3A 4F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9962 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9964 20 0A        	jr nz,2F
 376+ 9966 2A 3D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9969 23           	inc hl
 378+ 996A 22 3D 89     	ld (Posicion_actual),hl
 379+ 996D CD 08 9B     	call Genera_coordenadas
 380+ 9970
 381+ 9970              ; Inicia el puntero de Sprite.
 382+ 9970
 383+ 9970 CD BC 8C     2 call Inicia_puntero_objeto_der
 384+ 9973 C9           3 ret
 385+ 9974
 386+ 9974              ; ******************************************************************************************************************************************************************************************
 387+ 9974              ;
 388+ 9974              ;	15/02/23
 389+ 9974              ;
 390+ 9974              ;	Mov_left.
 391+ 9974              ;
 392+ 9974              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9974              ;
 394+ 9974 21 69 89     Mov_left ld hl,Ctrl_0
 395+ 9977 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9979              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9979              ; 																	; _ en el caso de que no lo haya.
 398+ 9979 3A 69 89     	ld a,(Ctrl_0)
 399+ 997C CB 77        	bit 6,a
 400+ 997E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9980
 402+ 9980 CD 96 9A     	call Stop_Amadeus_left
 403+ 9983 C8           	ret z
 404+ 9984 20 4A        	jr nz,8F
 405+ 9986
 406+ 9986 3A 41 89     11 ld a,(Coordenada_X)
 407+ 9989 A7           	and a
 408+ 998A 20 44        	jr nz,8F
 409+ 998C
 410+ 998C 3A 43 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 998F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9990 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9992
 414+ 9992              ; ---------- ---------- ----------
 415+ 9992
 416+ 9992 3A 50 89     	ld a,(Vel_left)
 417+ 9995 FE 02        	cp 2
 418+ 9997 28 0F        	jr z,1F
 419+ 9999 38 04        	jr c,6F
 420+ 999B FE 04        	cp 4
 421+ 999D 28 12        	jr z,7F
 422+ 999F
 423+ 999F              ; ---------- ---------- ----------
 424+ 999F
 425+ 999F 3A 43 89     6 ld a,(CTRL_DESPLZ)
 426+ 99A2 FE F8        	cp $f8
 427+ 99A4 20 2A        	jr nz,8F
 428+ 99A6 18 10        	jr 4F
 429+ 99A8 3A 43 89     1 ld a,(CTRL_DESPLZ)
 430+ 99AB FE F9        	cp $f9
 431+ 99AD 20 21        	jr nz,8F
 432+ 99AF 18 07        	jr 4F
 433+ 99B1 3A 43 89     7 ld a,(CTRL_DESPLZ)
 434+ 99B4 FE FB        	cp $fb
 435+ 99B6 20 18        	jr nz,8F
 436+ 99B8
 437+ 99B8              ; ---------- ---------- ----------
 438+ 99B8
 439+ 99B8              4
 440+ 99B8 CD BE 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 99BB              ;	call Reinicio
 442+ 99BB
 443+ 99BB              ; ---------- ---------- ----------
 444+ 99BB
 445+ 99BB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 99BD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 99BE
 448+ 99BE              ;	ld hl,(Indice_Sprite_izq)
 449+ 99BE              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 99BE
 451+ 99BE CD D7 99     	call DESPLZ_IZQ
 452+ 99C1 C1           	pop bc
 453+ 99C2 10 F9        	djnz 5B
 454+ 99C4 2A 3D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 99C7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 99C8 22 3D 89     	ld (Posicion_actual),hl
 457+ 99CB CD 08 9B     	call Genera_coordenadas
 458+ 99CE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 99D0
 460+ 99D0              ; ---------- ---------- ----------
 461+ 99D0
 462+ 99D0              ; Movemos, no hay recolocación.
 463+ 99D0
 464+ 99D0 2A 3D 89     8 ld hl,(Posicion_actual)
 465+ 99D3 CD D7 99     	call DESPLZ_IZQ
 466+ 99D6 C9           2 ret
 467+ 99D7
 468+ 99D7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 99D7              ;
 470+ 99D7              ;	22/9/22
 471+ 99D7
 472+ 99D7              DESPLZ_IZQ
 473+ 99D7
 474+ 99D7 CD E6 99     	call Desplaza_izquierda
 475+ 99DA CD 32 9A         call modifica_parametros_1er_DESPLZ
 476+ 99DD CD 5A 9A     	call Ciclo_completo_2
 477+ 99E0 21 69 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 99E3 CB BE        	res 7,(hl)
 479+ 99E5 C9           	ret
 480+ 99E6
 481+ 99E6              Desplaza_izquierda
 482+ 99E6
 483+ 99E6 3A 50 89     	ld a,(Vel_left)
 484+ 99E9 47           	ld b,a
 485+ 99EA 2A 4B 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 99ED 23           1 inc hl
 487+ 99EE 23           	inc hl
 488+ 99EF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 99F1 22 4B 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 99F4 CD A5 8C     	call Extrae_address
 491+ 99F7 22 3F 89     	ld (Puntero_objeto),hl
 492+ 99FA
 493+ 99FA              ; Modifica (Puntero_DESPLZ_der).
 494+ 99FA
 495+ 99FA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 99FA              ; Cuántos movimientos hemos hecho ??
 497+ 99FA              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 99FA
 499+ 99FA 2A 47 89     7 ld hl,(Indice_Sprite_izq)
 500+ 99FD EB           	ex de,hl
 501+ 99FE A7           	and a
 502+ 99FF ED 52        	sbc hl,de
 503+ 9A01 CB 3D        	srl l
 504+ 9A03 3E 08        6 ld a,8
 505+ 9A05 95           	sub l
 506+ 9A06 30 1E        	jr nc,3F
 507+ 9A08
 508+ 9A08              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9A08              ; B="0".
 510+ 9A08
 511+ 9A08 04           4 inc b
 512+ 9A09 3C           	inc a
 513+ 9A0A 20 FC        	jr nz,4B
 514+ 9A0C 78           	ld a,b
 515+ 9A0D 08           	ex af,af
 516+ 9A0E 2A 47 89     	ld hl,(Indice_Sprite_izq)
 517+ 9A11 23           5 inc hl
 518+ 9A12 23           	inc hl
 519+ 9A13 10 FC        	djnz 5B
 520+ 9A15 22 4B 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9A18 CD A5 8C     	call Extrae_address
 522+ 9A1B 22 3F 89     	ld (Puntero_objeto),hl
 523+ 9A1E
 524+ 9A1E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9A1E              ; _(Posicion_actual).
 526+ 9A1E
 527+ 9A1E 21 3D 89     	ld hl,Posicion_actual
 528+ 9A21 35           	dec (hl)
 529+ 9A22 08           	ex af,af
 530+ 9A23 6F           	ld l,a
 531+ 9A24 18 DD        	jr 6B
 532+ 9A26
 533+ 9A26              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9A26
 535+ 9A26 47           3 ld b,a
 536+ 9A27 2A 45 89     	ld hl,(Indice_Sprite_der)
 537+ 9A2A 23           2 inc hl
 538+ 9A2B 23           	inc hl
 539+ 9A2C 10 FC        	djnz 2B
 540+ 9A2E 22 49 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9A31 C9           8 ret
 542+ 9A32
 543+ 9A32              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9A32              ;
 545+ 9A32              ;	modifica_parametros_1er_DESPLZ
 546+ 9A32              ;
 547+ 9A32              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9A32              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9A32              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9A32
 551+ 9A32 3A 43 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9A35 A7           	and a
 553+ 9A36 20 1E        	jr nz,1F
 554+ 9A38 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9A39 32 43 89         ld (CTRL_DESPLZ),a
 556+ 9A3C 21 3C 89     	ld hl,Columns
 557+ 9A3F 34           	inc (hl)
 558+ 9A40 3A 4F 89     	ld a,(Cuad_objeto)
 559+ 9A43 E6 01        	and 1
 560+ 9A45 20 0F        	jr nz,1F
 561+ 9A47 2A 3D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9A4A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9A4B 22 3D 89     	ld (Posicion_actual),hl
 564+ 9A4E CD 08 9B     	call Genera_coordenadas
 565+ 9A51 CD AD 9A     	call Dec_CTRL_DESPLZ
 566+ 9A54 18 03        	jr 2F
 567+ 9A56 CD AD 9A     1 call Dec_CTRL_DESPLZ
 568+ 9A59 C9           2 ret
 569+ 9A5A
 570+ 9A5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9A5A
 572+ 9A5A 3A 43 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9A5D FE F7        	cp $f7
 574+ 9A5F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9A61 30 2C        	jr nc,3F
 576+ 9A63
 577+ 9A63              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9A63
 579+ 9A63 06 00        	ld b,0
 580+ 9A65 04           4 inc b
 581+ 9A66 3C           	inc a
 582+ 9A67 FE F7        	cp $f7
 583+ 9A69 20 FA        	jr nz,4B
 584+ 9A6B 3E FF        	ld a,$ff
 585+ 9A6D 90           	sub b
 586+ 9A6E 32 43 89     	ld (CTRL_DESPLZ),a
 587+ 9A71 18 1C        	jr 3F
 588+ 9A73
 589+ 9A73              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9A73
 591+ 9A73 21 3C 89     1 ld hl,Columns
 592+ 9A76 35           	dec (hl)
 593+ 9A77 AF           	xor a
 594+ 9A78 32 43 89     	ld (CTRL_DESPLZ),a
 595+ 9A7B 3A 4F 89     	ld a,(Cuad_objeto)
 596+ 9A7E E6 01        	and 1
 597+ 9A80 28 0A        	jr z,2F
 598+ 9A82 2A 3D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9A85 2B           	dec hl
 600+ 9A86 22 3D 89     	ld (Posicion_actual),hl
 601+ 9A89 CD 08 9B     	call Genera_coordenadas
 602+ 9A8C
 603+ 9A8C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9A8C
 605+ 9A8C CD CF 8C     2 call Inicia_puntero_objeto_izq
 606+ 9A8F C9           3 ret
 607+ 9A90
 608+ 9A90              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9A90              ;
 610+ 9A90              ;	19/10/22
 611+ 9A90              ;
 612+ 9A90              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9A90              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9A90
 615+ 9A90 3A 41 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9A93 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9A95 C9           	ret
 618+ 9A96
 619+ 9A96              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9A96              ;
 621+ 9A96              ;	19/10/22
 622+ 9A96              ;
 623+ 9A96              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9A96              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9A96
 626+ 9A96 3A 41 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9A99 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9A9B C9           	ret
 629+ 9A9C
 630+ 9A9C              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9A9C              ;
 632+ 9A9C              ;	24/7/22
 633+ 9A9C              ;
 634+ 9A9C              ;	Inc_CTRL_DESPLZ
 635+ 9A9C              ;
 636+ 9A9C              ;
 637+ 9A9C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9A9C
 639+ 9A9C 21 43 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9A9F 3A 51 89     	ld a,(Vel_right)
 641+ 9AA2 A7           	and a
 642+ 9AA3 28 06        	jr z,1F
 643+ 9AA5 47           	ld b,a
 644+ 9AA6 34           3 inc (hl)
 645+ 9AA7 10 FD        	djnz 3B
 646+ 9AA9 18 01        	jr 2F
 647+ 9AAB 34           1 inc (hl)
 648+ 9AAC C9           2 ret
 649+ 9AAD
 650+ 9AAD              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9AAD              ;
 652+ 9AAD              ;	5/2/23
 653+ 9AAD              ;
 654+ 9AAD              ;	Dec_CTRL_DESPLZ
 655+ 9AAD              ;
 656+ 9AAD              ;
 657+ 9AAD              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9AAD
 659+ 9AAD 21 43 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9AB0 3A 50 89     	ld a,(Vel_left)
 661+ 9AB3 A7           	and a
 662+ 9AB4 28 06        	jr z,1F
 663+ 9AB6 47           	ld b,a
 664+ 9AB7 35           3 dec (hl)
 665+ 9AB8 10 FD        	djnz 3B
 666+ 9ABA 18 01        	jr 2F
 667+ 9ABC 35           1 dec (hl)
 668+ 9ABD C9           2 ret
 669+ 9ABE
 670+ 9ABE              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9ABE
 672+ 9ABE 2A 3D 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9AC1 01 1F 00     	ld bc,31
 674+ 9AC4 A7           	and a
 675+ 9AC5 ED 4A        	adc hl,bc
 676+ 9AC7 22 3D 89     	ld (Posicion_actual),hl
 677+ 9ACA 21 69 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9ACD CB C6        	set 0,(hl)
 679+ 9ACF C9           	ret
 680+ 9AD0
 681+ 9AD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9AD0
 683+ 9AD0 2A 3D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9AD3 01 1F 00     	ld bc,31
 685+ 9AD6 A7           	and a
 686+ 9AD7 ED 42        	sbc hl,bc
 687+ 9AD9 22 3D 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9ADC 21 69 89     	ld hl,Ctrl_0
 689+ 9ADF CB CE        	set 1,(hl)
 690+ 9AE1 C9           	ret
 691+ 9AE2
 692+ 9AE2              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9AE2
 694+ 9AE2 24           Reaparece_abajo inc h
 695+ 9AE3 01 E0 17     	ld bc,$17e0
 696+ 9AE6 A7           	and a
 697+ 9AE7 ED 4A        	adc hl,bc
 698+ 9AE9 22 3D 89     	ld (Posicion_actual),hl
 699+ 9AEC 21 69 89     	ld hl,Ctrl_0
 700+ 9AEF CB D6        	set 2,(hl)
 701+ 9AF1 C9           	ret
 702+ 9AF2
 703+ 9AF2              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9AF2
 705+ 9AF2 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9AF5 A7           	and a
 707+ 9AF6 ED 42        	sbc hl,bc
 708+ 9AF8 22 3D 89     	ld (Posicion_actual),hl
 709+ 9AFB 21 69 89     	ld hl,Ctrl_0
 710+ 9AFE CB DE        	set 3,(hl)
 711+ 9B00 C9           	ret
 712+ 9B01
 713+ 9B01              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9B01
 715+ 9B01 2A 4D 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9B04 22 3D 89     	ld (Posicion_actual),hl
 717+ 9B07 C9           	ret
# file closed: Direcciones.asm
1216  9B08              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B08              ; ------------------------------------------------------------------------
   2+ 9B08              ;
   3+ 9B08              ;	02/04/23
   4+ 9B08              ;
   5+ 9B08              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B08              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B08              ;
   8+ 9B08              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B08              ;
  10+ 9B08              ;	Modifica: A,BC y DE.
  11+ 9B08
  12+ 9B08 C5           Genera_coordenadas push bc
  13+ 9B09 E5           	push hl
  14+ 9B0A D5           	push de
  15+ 9B0B
  16+ 9B0B 2A 3D 89     	ld hl,(Posicion_actual)
  17+ 9B0E
  18+ 9B0E 7D           	ld a,l
  19+ 9B0F E6 1F        	and $1f
  20+ 9B11 32 41 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9B14
  22+ 9B14 CD 9C 97     	call calcula_tercio
  23+ 9B17 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9B18
  25+ 9B18 1E 00        	ld e,0
  26+ 9B1A 7D           	ld a,l
  27+ 9B1B E6 E0        	and $e0
  28+ 9B1D 28 01        	jr z,1F
  29+ 9B1F 04           	inc b
  30+ 9B20
  31+ 9B20 04           1 inc b
  32+ 9B21 05           	dec b
  33+ 9B22 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9B24              ;														; _ , salimos.
  35+ 9B24 1C           3 inc e
  36+ 9B25 D6 20        	sub 32
  37+ 9B27 20 FB        	jr nz,3B
  38+ 9B29 10 F5        	djnz 1B
  39+ 9B2B
  40+ 9B2B 7B           2 ld a,e
  41+ 9B2C 32 42 89     	ld (Coordenada_y),a
  42+ 9B2F
  43+ 9B2F D1           	pop de
  44+ 9B30 E1           	pop hl
  45+ 9B31 C1           	pop bc
  46+ 9B32
  47+ 9B32 C9           	ret
  48+ 9B33
  49+ 9B33              ; ------------------------------------------------------------------------
  50+ 9B33              ;	28/05/23
  51+ 9B33              ;
  52+ 9B33              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9B33              ;	Fila superior "0", Columna izquierda "0".
  54+ 9B33              ;
  55+ 9B33              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9B33              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9B33              ;
  58+ 9B33              ;		DE="$120d"
  59+ 9B33              ;
  60+ 9B33              ;		D, (Coordenada_X), Columnas, $12
  61+ 9B33              ;		E, (Coordenada_y), Filas, $0d
  62+ 9B33              ;
  63+ 9B33              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9B33
  65+ 9B33              ;	Modifica: A,BC y DE.
  66+ 9B33
  67+ 9B33
  68+ 9B33              Genera_coordenadas_disparo
  69+ 9B33
  70+ 9B33              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9B33
  72+ 9B33 7D           	ld a,l
  73+ 9B34 E6 1F        	and $1f
  74+ 9B36 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9B37 CD 9C 97     	call calcula_tercio
  76+ 9B3A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9B3B 1E 00        	ld e,0
  78+ 9B3D 7D           	ld a,l
  79+ 9B3E E6 E0        	and $e0
  80+ 9B40 28 01        	jr z,1F
  81+ 9B42 04           	inc b
  82+ 9B43 1C           1 inc e
  83+ 9B44 D6 20        	sub 32
  84+ 9B46 20 FB        	jr nz,1B
  85+ 9B48 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9B4A C9           	ret
  87+ 9B4B
# file closed: Genera_coordenadas.asm
1217  9B4B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9B4B
   2+ 9B4B
   3+ 9B4B              ;   11/8/22
   4+ 9B4B              ;
   5+ 9B4B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9B4B              ;
   7+ 9B4B              ;   Mov_obj.asm
   8+ 9B4B              ;
   9+ 9B4B              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9B4B              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9B4B              ;
  12+ 9B4B              ;   Codificación:
  13+ 9B4B              ;
  14+ 9B4B              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9B4B
  16+ 9B4B              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9B4B
  18+ 9B4B 02 40 00     Arriba db 2,%01000000,0
  19+ 9B4E 02 80 00     Abajo db 2,%10000000,0
  20+ 9B51 02 20 00     Derecha db 2,%00100000,0
  21+ 9B54 02 10 00     Izquierda db 2,%00010000,0
  22+ 9B57 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9B5B 60 42 60 40
  22+ 9B5F 63
  23+ 9B60 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9B64 22 A3 80 A0
  24+ 9B68 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9B6C 84 A0 83 A0
  25+ 9B70 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9B74 80 A3 22 A0
  26+ 9B78 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9B7C 40 60 42 60
  27+ 9B80 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9B84
  29+ 9B84 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9B88 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9B8C 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9B90 84 00
  32+ 9B92 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9B96 84 00
  33+ 9B98 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9B9C 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9BA0 1F 1F 1F 1F
  35+ 9BA4 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9BA8 1F 1F 1F 1F
  35+ 9BAC 1F
  36+ 9BAD 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9BB1 2F 2F 2F 2F
  36+ 9BB5 2F 2F
  37+ 9BB7 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9BBB 2F 2F 00
  38+ 9BBE
  39+ 9BBE              ; ----- ----- ----- ----- -----
  40+ 9BBE
  41+ 9BBE 9C 9B        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9BC0 98 9B        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9BC2 54 9B        Indice_mov_Izquierda defw Izquierda
  44+ 9BC4 51 9B        Indice_mov_Derecha defw Derecha
  45+ 9BC6 4E 9B        Indice_mov_Abajo defw Abajo
  46+ 9BC8 4B 9B        Indice_mov_Arriba defw Arriba
  47+ 9BCA 88 9B        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9BCC 8C 9B        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9BCE 84 9B        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9BD0 92 9B        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9BD2 57 9B        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9BD4              ; ----- ----- ----- ----- -----
  53+ 9BD4
  54+ 9BD4 3A 70 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9BD7 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9BD8 28 02            jr z,1F
  57+ 9BDA 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9BDC 3A 71 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9BDF C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9BE1 32 71 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9BE4              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9BE4 2A 6E 89         ld hl,(Puntero_mov)
  63+ 9BE7 7E               ld a,(hl)
  64+ 9BE8 32 70 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9BEB 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9BEC 22 6E 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9BEF
  68+ 9BEF 3A 72 89     Decoder ld a,(Repetimos_db)
  69+ 9BF2 A7               and a
  70+ 9BF3 20 0C            jr nz,12F
  71+ 9BF5 2A 6E 89         ld hl,(Puntero_mov)
  72+ 9BF8 7E               ld a,(hl)
  73+ 9BF9 A7               and a
  74+ 9BFA 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9BFC E6 0F            and $0f
  76+ 9BFE 32 72 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9C01              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9C01 2A 6E 89     12 ld hl,(Puntero_mov)
  79+ 9C04 CB 7E            bit 7,(hl)
  80+ 9C06 28 03            jr z,2F
  81+ 9C08 CD E2 97         call Mov_down
  82+ 9C0B 2A 6E 89     2 ld hl, (Puntero_mov)
  83+ 9C0E CB 76            bit 6,(hl)
  84+ 9C10 28 03            jr z,3F
  85+ 9C12 CD 13 98         call Mov_up
  86+ 9C15 2A 6E 89     3 ld hl, (Puntero_mov)
  87+ 9C18 CB 6E            bit 5,(hl)
  88+ 9C1A 28 03            jr z,4F
  89+ 9C1C CD 56 98         call Mov_right
  90+ 9C1F 2A 6E 89     4 ld hl, (Puntero_mov)
  91+ 9C22 CB 66            bit 4,(hl)
  92+ 9C24 28 03            jr z,5F
  93+ 9C26 CD 74 99         call Mov_left
  94+ 9C29
  95+ 9C29              ; ---------- --------- --------- ---------- ----------
  96+ 9C29
  97+ 9C29 3A 72 89     5 ld a,(Repetimos_db)
  98+ 9C2C A7               and a
  99+ 9C2D 28 07            jr z,6F
 100+ 9C2F 3D               dec a
 101+ 9C30 32 72 89         ld (Repetimos_db),a
 102+ 9C33 28 01            jr z,6f
 103+ 9C35 C9           11 ret
 104+ 9C36 21 70 89     6 ld hl,Contador_db_mov
 105+ 9C39 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9C3A 2A 6E 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9C3D 23               inc hl
 108+ 9C3E 22 6E 89         ld (Puntero_mov),hl
 109+ 9C41 18 F2            jr 11B
 110+ 9C43 2A 6C 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9C46 3A 71 89         ld a,(Incrementa_puntero)
 112+ 9C49 47               ld b,a
 113+ 9C4A 23           8 inc hl
 114+ 9C4B 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9C4D 5E               ld e,(hl)
 116+ 9C4E 23               inc hl
 117+ 9C4F 56               ld d,(hl)
 118+ 9C50 EB               ex de,hl
 119+ 9C51 22 6E 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9C54 18 DF            jr 11B
 121+ 9C56
 122+ 9C56              ; ---------- --------- --------- ---------- ----------
 123+ 9C56              ;
 124+ 9C56              ;   11/8/22
 125+ 9C56              ;
 126+ 9C56              ;   Prepara_Puntero_mov
 127+ 9C56
 128+ 9C56 E5           Prepara_Puntero_mov push hl
 129+ 9C57 D5               push de
 130+ 9C58 2A 6C 89         ld hl,(Puntero_indice_mov)
 131+ 9C5B 5E               ld e,(hl)
 132+ 9C5C 23               inc hl
 133+ 9C5D 56               ld d,(hl)
 134+ 9C5E EB               ex de,hl
 135+ 9C5F 22 6E 89         ld (Puntero_mov),hl
 136+ 9C62 D1               pop de
 137+ 9C63 E1               pop hl
 138+ 9C64 C9               ret
 139+ 9C65
 140+ 9C65              ; ---------- --------- --------- ---------- ----------
 141+ 9C65              ;
 142+ 9C65              ;   11/8/22
 143+ 9C65              ;
 144+ 9C65              ;   Reinicia_el_movimiento
 145+ 9C65
 146+ 9C65 CD 56 9C     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9C68 AF               xor a
 148+ 9C69 32 70 89         ld (Contador_db_mov),a
 149+ 9C6C 32 71 89         ld (Incrementa_puntero),a
 150+ 9C6F C3 D4 9B         jp Movimiento
 151+ 9C72 C9               ret
 152+ 9C73              ; ---------- --------- --------- ---------- ----------
 153+ 9C73
 154+ 9C73
 155+ 9C73
 156+ 9C73
 157+ 9C73
 158+ 9C73
 159+ 9C73
 160+ 9C73
 161+ 9C73
 162+ 9C73
 163+ 9C73
 164+ 9C73
 165+ 9C73
 166+ 9C73
 167+ 9C73
 168+ 9C73
 169+ 9C73
 170+ 9C73
# file closed: Patrones_de_mov.asm
1218  9C73              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9C73              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9C73              ;
   3+ 9C73              ;	3/1/23
   4+ 9C73              ;
   5+ 9C73              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9C73
   7+ 9C73              ;	ADC HL,SP	LD (addr),SP
   8+ 9C73              ;	ADD HL,SP	LD SP,(addr)
   9+ 9C73              ;	ADD IX,SP	LD SP,nn
  10+ 9C73              ; 	ADD IY,SP	LD SP,HL
  11+ 9C73              ;				LD SP,IX
  12+ 9C73              ;	DEC SP		LD SP,IY
  13+ 9C73
  14+ 9C73              ;	EX (SP),HL
  15+ 9C73              ;	EX (SP),IX
  16+ 9C73              ;	EX (SP),IY
  17+ 9C73
  18+ 9C73              ;	INC SP
  19+ 9C73
  20+ 9C73
  21+ 9C73                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 8A 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 79 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 90 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 8E 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 90 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 8E 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 8A 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1219  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1220  7FE6
1221  7FE6              	SAVESNA "Pruebas.sna", START
1222  7FE6
1223  7FE6
1224  7FE6
1225  7FE6
# file closed: Banco_de_pruebas.asm
