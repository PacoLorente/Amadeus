# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 48 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 1B 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 0B 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 02           Vel_right db 2 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 04           Vel_down db 4 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Impacto. "1" existe impacto en la entidad.
  94  85B5
  95  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  96  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  97  85B9 00 00        	defw 0
  98  85BB 00 00 00 00  	db 0,0,0,0
  99  85BF
 100  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 101  85C1 00 00        	defw 0
 102  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 103  85C5 00 00 00 00  	db 0,0,0,0
 104  85C9
 105  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 106  85C9
 107  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 108  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 109  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 110  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 111  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 112  85CA              ;
 113  85CA              ; 														DESCRIPCIÖN:
 114  85CA              ;
 115  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 116  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 117  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 118  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 119  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 120  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 121  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 122  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 123  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 124  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 125  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 126  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 127  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 128  85CA              ;
 129  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 130  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 131  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 132  85CA
 133  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 134  85CB
 135  85CB              ; Movimiento.
 136  85CB
 137  85CB 15 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_derecha_abajo   ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 138  85CD 00 00        Puntero_mov defw 0
 139  85CF 00           Contador_db_mov db 0
 140  85D0 00           Incrementa_puntero db 0
 141  85D1 00           Repetimos_db db 0
 142  85D2
 143  85D2              ; Variables de funcionamiento. [DRAW].
 144  85D2
 145  85D2 00           Columnas db 0
 146  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 147  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 148  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D6
 150  85D6              ; 59 Bytes por entidad.
 151  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 152  85D6              ;					         		---------;      ;---------
 153  85D6
 154  85D6
 155  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 156  85D6
 157  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 158  85D7
 159  85D7              ;														DESCRIPCIÓN:
 160  85D7              ;
 161  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 162  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 163  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 164  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 165  85D7
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7              ; Gestión de ENTIDADES.
 172  85D7
 173  85D7 00 00        Puntero_store_entidades defw 0
 174  85D9 00 00        Puntero_restore_entidades defw 0
 175  85DB 00 00        Indice_restore defw 0
 176  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 177  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 178  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 179  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 180  85DF              ;														; _ (Numero_de_malotes)="0".
 181  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 182  85E1              ;														; _variable para almacenar lo posición del puntero_
 183  85E1              ; 														; _de pila, SP.
 184  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 185  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 186  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 188  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 189  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 190  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 191  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 192  85E7
 193  85E7              ; Gestión de Disparos.
 194  85E7
 195  85E7 00           Numero_de_disparotes db 0
 196  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 197  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 198  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 199  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 200  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 201  85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 202  85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 203  85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 204  85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 205  85F3
 206  85F3
 207  85F3              ; Gestión de FRAMES.
 208  85F3
 209  85F3 00           Switch db 0
 210  85F4
 211  85F4              ; Variables de Raster y localización en pantalla.
 212  85F4
 213  85F4 00 FF        Temp_Raster defw $ff00
 214  85F6
 215  85F6              ; Rutina principal *************************************************************************************************************************************************************************
 216  85F6              ;
 217  85F6              ;	14/11/22
 218  85F6
 219  85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 220  85F9
 221  85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 222  85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 223  85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 224  85FF F3           	DI
 225  8600
 226  8600 3E 07        	ld a,%00000111
 227  8602 CD 2F 92     	call Cls
 228  8605
 229  8605              ;	call Pinta_FILAS
 230  8605
 231  8605 CD 66 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 232  8608
 233  8608 21 DD 85     	ld hl,Numero_de_entidades
 234  860B 46           	ld b,(hl)
 235  860C 04           	inc b
 236  860D 05           	dec b
 237  860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 238  8610
 239  8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 240  8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 241  8610              ;	Pintamos el resto de entidades:
 242  8610
 243  8610 CD 5F 87     	call Inicia_punteros_de_entidades
 244  8613
 245  8613              ;	INICIA ENTIDADES!!!!!
 246  8613
 247  8613 C5           1 push bc  												; Guardo el contador de entidades.
 248  8614 CD B9 87      	call Inicia_Puntero_objeto
 249  8617 CD 7F 8C     	call Draw
 250  861A CD A0 7F     	call Guarda_foto_registros
 251  861D CD 01 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 252  8620 C1           	pop bc
 253  8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 254  8623
 255  8623              ; 	INICIA AMADEUS!!!!!
 256  8623
 257  8623 CD 42 88     3 call Restore_Amadeus
 258  8626 CD B9 87     	call Inicia_Puntero_objeto
 259  8629 CD 7F 8C     	call Draw
 260  862C CD A0 7F     	call Guarda_foto_registros
 261  862F CD 54 88     	call Store_Amadeus
 262  8632
 263  8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 264  8632
 265  8632 CD 75 87     	call Inicia_Puntero_Disparo_Entidades
 266  8635 CD 7C 87     	call Inicia_Puntero_Disparo_Amadeus
 267  8638
 268  8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 269  8638
 270  8638 CD 5F 87     	call Inicia_punteros_de_entidades
 271  863B CD 30 88     	call Restore_Primera_entidad
 272  863E
 273  863E 3A DD 85     	ld a,(Numero_de_entidades)
 274  8641 3C           	inc a
 275  8642 32 DE 85     	ld (Numero_de_malotes),a
 276  8645
 277  8645 FB           2 ei
 278  8646 18 FD        	jr 2B
 279  8648
 280  8648              ; -----------------------------------------------------------------------------------
 281  8648
 282  8648              Frame
 283  8648
 284  8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 285  8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 286  8648
 287  8648 3E 02            ld a,2
 288  864A D3 FE            out ($fe),a
 289  864C CD 83 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
 290  864F CD BC 8F     	call Extrae_foto_disparos
 291  8652 3E 01            ld a,1
 292  8654 D3 FE            out ($fe),a
 293  8656
 294  8656              ; ----------------------------------------------------------------------
 295  8656
 296  8656              ;	Existe colisión?????
 297  8656
 298  8656 3A EC 85     	ld a,(Impacto2)
 299  8659 A7           	and a
 300  865A 28 02        	jr z,5F
 301  865C
 302  865C              ; A="1" Impacto en entidad por disparo de Amadeus.
 303  865C              ; A="2"	Impacto en Amadeus por disparo en entidad.
 304  865C              ; A="3"	Colisión de Amadeus con una entidad sin disparo.
 305  865C
 306  865C 18 FE        	jr $
 307  865E
 308  865E AF           5 xor a
 309  865F 32 EC 85     	ld (Impacto2),a										; Flag (Impacto) a "0".
 310  8662
 311  8662 CD 11 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 312  8665 CD 2F 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 313  8668
 314  8668 21 00 70     	ld hl,Album_de_fotos
 315  866B 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 316  866E              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 317  866E 3A DD 85         ld a,(Numero_de_entidades)
 318  8671 47               ld b,a
 319  8672 A7           	and a
 320  8673 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 321  8675
 322  8675 C5           2 push bc
 323  8676 CD C2 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 324  8679
 325  8679 3A C9 85     	ld a,(Ctrl_0)
 326  867C CB 67        	bit 4,a
 327  867E 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 328  8680
 329  8680              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 330  8680              ; Las entidades sólo generan disparo cuando se mueven.
 331  8680              ; 16/02/23.
 332  8680              ; [[[
 333  8680 CD 9D 88     	call Detecta_disparo_entidad
 334  8683              ; ]]]
 335  8683 CD 26 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 336  8686
 337  8686 21 C9 85     1 ld hl,Ctrl_0
 338  8689 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 339  868B AF           	xor a
 340  868C 32 CA 85     	ld (Obj_dibujado),a
 341  868F
 342  868F CD 01 88     6 call Store_Restore_entidades
 343  8692 C1           	pop bc
 344  8693 10 E0        	djnz 2B
 345  8695
 346  8695              ; Tras la gestión de las entidades, ... AMADEUS.
 347  8695
 348  8695 CD 42 88     4 call Restore_Amadeus
 349  8698 CD F7 86     	call Mov_Amadeus
 350  869B 3A C9 85     	ld a,(Ctrl_0)
 351  869E CB 67        	bit 4,a
 352  86A0 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 353  86A2 CD 26 87     	call Guarda_foto_entidad_a_pintar
 354  86A5
 355  86A5 21 C9 85     3 ld hl,Ctrl_0
 356  86A8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 357  86AA AF           	xor a
 358  86AB 32 CA 85     	ld (Obj_dibujado),a
 359  86AE CD 54 88     	call Store_Amadeus
 360  86B1
 361  86B1              ; -----
 362  86B1
 363  86B1 CD 5F 87     	call Inicia_punteros_de_entidades
 364  86B4 CD 30 88     	call Restore_Primera_entidad
 365  86B7
 366  86B7              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 367  86B7
 368  86B7 CD 83 87     	call Calcula_numero_de_malotes
 369  86BA CD 9B 87     	call Calcula_numero_de_disparotes
 370  86BD
 371  86BD 3E 04        	ld a,4
 372  86BF D3 FE        	out ($fe),a
 373  86C1 C9           	ret
 374  86C2
 375  86C2              ; --------------------------------------------------------------------------------------------------------------
 376  86C2              ;
 377  86C2              ;	27/03/23
 378  86C2
 379  86C2              Mov_obj
 380  86C2
 381  86C2              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 382  86C2
 383  86C2 AF           	xor a
 384  86C3 32 CA 85     	ld (Obj_dibujado),a
 385  86C6 CD 30 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 386  86C9              ;														; Obj_dibujado="0".
 387  86C9              ; Movemos Entidades malignas.
 388  86C9
 389  86C9 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 390  86CC 24           	inc h                                               ; Salimos de la rutina.
 391  86CD 25           	dec h
 392  86CE C8           	ret z
 393  86CF
 394  86CF CD 1D 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 395  86D2
 396  86D2 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 397  86D5 CB 67        	bit 4,a
 398  86D7 C8           	ret z
 399  86D8
 400  86D8              ; Ha habido desplazamiento de la entidad maligna. :-).
 401  86D8              ; Ha llegado a zona de AMADEUS ???
 402  86D8
 403  86D8 3A A2 85     	ld a,(Coordenada_y)
 404  86DB FE 14        	cp $14
 405  86DD D4 59 8A     	call nc, Detecta_colision_nave_entidad
 406  86E0 7B           	ld a,e
 407  86E1 28 05        	jr z,1F
 408  86E3
 409  86E3 3E 03            ld a,3
 410  86E5 32 B4 85         ld (Impacto),a
 411  86E8
 412  86E8              ; ---------
 413  86E8
 414  86E8 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 415  86EA 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 416  86ED CD 30 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 417  86F0 CD 47 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 418  86F3 CD 16 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 419  86F6 C9           	ret													; _de la misma.
 420  86F7
 421  86F7              ; --------------------------------------------------------------------------------------------------------------
 422  86F7              ;
 423  86F7              ;	29/1/23
 424  86F7
 425  86F7              Mov_Amadeus
 426  86F7
 427  86F7 AF           	xor a
 428  86F8 32 CA 85     	ld (Obj_dibujado),a
 429  86FB CD 30 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 430  86FE              ;														; Obj_dibujado="0".
 431  86FE              ; Movemos Amadeus.
 432  86FE
 433  86FE CD 7A 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 434  8701 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 435  8704 CB 67        	bit 4,a
 436  8706 C8           	ret z
 437  8707
 438  8707              ; ---------
 439  8707
 440  8707 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 441  8709 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 442  870C CD 30 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 443  870F CD 47 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 444  8712 CD 16 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 445  8715 C9           	ret													; _de la nave.
 446  8716
 447  8716              ; --------------------------------------------------------------------------------------------------------------
 448  8716              ;
 449  8716              ;	31/01/23
 450  8716              ;
 451  8716              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 452  8716
 453  8716              Guarda_foto_entidad_a_borrar
 454  8716
 455  8716 CD 59 8F     	call Prepara_draw
 456  8719 CD 93 8E     	call calcula_CColumnass
 457  871C CD CA 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 458  871F CD 1F 8F     	call Define_rutina_de_impresion
 459  8722 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 460  8725 C9           	ret
 461  8726
 462  8726              ; --------------------------------------------------------------------------------------------------------------
 463  8726              ;
 464  8726              ;	31/01/23
 465  8726              ;
 466  8726              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 467  8726              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 468  8726
 469  8726              Guarda_foto_entidad_a_pintar
 470  8726
 471  8726 CD 53 87     	call Repone_pintar
 472  8729 CD 7F 8C     	call Draw
 473  872C CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 474  872F C9           	ret
 475  8730
 476  8730              ; --------------------------------------------------------------------------------------------------------------
 477  8730              ;
 478  8730              ;
 479  8730
 480  8730 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 481  8733 3A CA 85     	ld a,(Obj_dibujado)
 482  8736 A7           	and a
 483  8737 28 05        	jr z,1F
 484  8739 11 BF 85     	ld de,Variables_de_pintado
 485  873C 18 03        	jr 2F
 486  873E 11 B5 85     1 ld de,Variables_de_borrado
 487  8741 01 08 00     2 ld bc,8
 488  8744 ED B0        	ldir
 489  8746 C9           	ret
 490  8747
 491  8747              ; --------------------------------------------------------------------------------------------------------------
 492  8747
 493  8747 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 494  874A 11 9B 85     	ld de,Filas
 495  874D 01 08 00     	ld bc,8
 496  8750 ED B0        	ldir
 497  8752 C9           	ret
 498  8753
 499  8753 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 500  8756 11 9B 85     	ld de,Filas
 501  8759 01 08 00     	ld bc,8
 502  875C ED B0        	ldir
 503  875E C9           	ret
 504  875F
 505  875F              ; *************************************************************************************************************************************************************
 506  875F              ;
 507  875F              ; 8/1/23
 508  875F              ;
 509  875F              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 510  875F              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 511  875F              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 512  875F
 513  875F              ; Destruye HL y DE !!!!!
 514  875F
 515  875F              Inicia_punteros_de_entidades
 516  875F
 517  875F 21 68 84     	ld hl,Indice_de_entidades
 518  8762 CD B3 87         call Extrae_address
 519  8765 22 D7 85         ld (Puntero_store_entidades),hl
 520  8768 21 6A 84     	ld hl,Indice_de_entidades+2
 521  876B 22 DB 85     	ld (Indice_restore),hl
 522  876E CD B3 87     	call Extrae_address
 523  8771 22 D9 85     	ld (Puntero_restore_entidades),hl
 524  8774 C9               ret
 525  8775
 526  8775              ; *************************************************************************************************************************************************************
 527  8775              ;
 528  8775              ; 8/1/23
 529  8775              ;
 530  8775              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 531  8775
 532  8775 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 533  8778 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 534  877B C9           	ret
 535  877C 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 536  877F 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 537  8782 C9           	ret
 538  8783
 539  8783              ; -------------------------------------------------------------------------------------------------------------
 540  8783              ;
 541  8783              ; 28/2/23
 542  8783              ;
 543  8783
 544  8783              Calcula_numero_de_malotes
 545  8783
 546  8783 21 00 70     	ld hl,Album_de_fotos
 547  8786 EB           	ex de,hl
 548  8787 2A E3 85     	ld hl,(Stack_snapshot)
 549  878A
 550  878A 06 00        	ld b,0
 551  878C 7D           	ld a,l
 552  878D 93           	sub e
 553  878E 28 07        	jr z,1F
 554  8790
 555  8790              ; Nº de malotes no es "0".
 556  8790
 557  8790 D6 06        2 sub 6
 558  8792 04           	inc b
 559  8793 A7           	and a
 560  8794 20 FA        	jr nz,2B
 561  8796 78           	ld a,b
 562  8797
 563  8797 32 DE 85     1 ld (Numero_de_malotes),a
 564  879A C9           	ret
 565  879B
 566  879B              ; -------------------------------------------------------------------------------------------------------------
 567  879B              ;
 568  879B              ; 28/2/23
 569  879B              ;
 570  879B
 571  879B              Calcula_numero_de_disparotes
 572  879B
 573  879B 21 60 70     	ld hl,Album_de_fotos_disparos
 574  879E EB           	ex de,hl
 575  879F 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 576  87A2
 577  87A2 06 00        	ld b,0
 578  87A4 7D           	ld a,l
 579  87A5 93           	sub e
 580  87A6 28 07        	jr z,1F
 581  87A8
 582  87A8              ; Nº de malotes no es "0".
 583  87A8
 584  87A8 D6 06        2 sub 6
 585  87AA 04           	inc b
 586  87AB A7           	and a
 587  87AC 20 FA        	jr nz,2B
 588  87AE 78           	ld a,b
 589  87AF
 590  87AF 32 E7 85     1 ld (Numero_de_disparotes),a
 591  87B2 C9           	ret
 592  87B3              ; *************************************************************************************************************************************************************
 593  87B3              ;
 594  87B3              ; 20/10/22
 595  87B3              ;
 596  87B3              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 597  87B3              ;
 598  87B3              ; Destruye el puntero y DE !!!!!
 599  87B3
 600  87B3 5E           Extrae_address ld e,(hl)
 601  87B4 23           	inc hl
 602  87B5 56           	ld d,(hl)
 603  87B6 2B           	dec hl
 604  87B7 EB           	ex de,hl
 605  87B8 C9           	ret
 606  87B9
 607  87B9              ; *************************************************************************************************************************************************************
 608  87B9              ;
 609  87B9              ;	7/2/23
 610  87B9              ;
 611  87B9              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 612  87B9              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 613  87B9              ;
 614  87B9              ;   Destruye HL y BC !!!!!,
 615  87B9              ;
 616  87B9              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 617  87B9              ;					"0" ..... Izquierda.
 618  87B9
 619  87B9              Inicia_Puntero_objeto
 620  87B9
 621  87B9 3A AF 85     	ld a,(Cuad_objeto)
 622  87BC E6 01        	and 1
 623  87BE F5           	push af
 624  87BF CC DD 87     	call z,Inicia_puntero_objeto_izq
 625  87C2 F1           	pop af
 626  87C3 28 2B        	jr z,1F
 627  87C5 CD CA 87     	call Inicia_puntero_objeto_der
 628  87C8 18 26        	jr 1F
 629  87CA
 630  87CA              ; Arrancamos desde la parte izquierda de la pantalla.
 631  87CA              ; Iniciamos (Indice_Sprite_der).
 632  87CA
 633  87CA 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 634  87CD 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 635  87D0 CD B3 87     	call Extrae_address
 636  87D3 22 9F 85     	ld (Puntero_objeto),hl
 637  87D6
 638  87D6 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 639  87D9              ;	call Extrae_address
 640  87D9 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 641  87DC C9           	ret
 642  87DD
 643  87DD              ; Arrancamos desde la parte derecha de la pantalla.
 644  87DD              ; Iniciamos (Indice_Sprite_izq).
 645  87DD
 646  87DD 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 647  87E0 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 648  87E3 CD B3 87     	call Extrae_address
 649  87E6 22 9F 85     	ld (Puntero_objeto),hl
 650  87E9
 651  87E9 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 652  87EC              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 653  87EC 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 654  87EF C9           	ret
 655  87F0
 656  87F0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 657  87F0
 658  87F0 21 38 83     1 ld hl,Amadeus
 659  87F3 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 660  87F7 B7 ED 42     	sub hl,bc
 661  87FA C0           	ret nz
 662  87FB 21 C9 85     	ld hl,Ctrl_0
 663  87FE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 664  8800 C9           	ret 												; _de nuestra nave en los extremos.
 665  8801
 666  8801              ; *************************************************************************************************************************************************************
 667  8801              ;
 668  8801              ;	8/1/23
 669  8801              ;
 670  8801              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 671  8801              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 672  8801
 673  8801              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 674  8801              ;	_de la 2ª y 3ª entidad respectivamente.
 675  8801
 676  8801              Store_Restore_entidades
 677  8801
 678  8801 E5           	push hl
 679  8802 D5           	push de
 680  8803 C5            	push bc
 681  8804
 682  8804              ;	STORE !!!!!
 683  8804              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
 684  8804
 685  8804 21 9B 85     	ld hl,Filas
 686  8807 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 687  880B 01 3B 00     	ld bc,59
 688  880E ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 689  8810
 690  8810              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 691  8810
 692  8810 2A D9 85     	ld hl,(Puntero_restore_entidades)
 693  8813 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 694  8816 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 695  8819 01 3B 00     	ld bc,59
 696  881C ED B0        	ldir
 697  881E
 698  881E              ;	Incrementa RESTORE !!!!!
 699  881E
 700  881E 2A DB 85         ld hl,(Indice_restore)
 701  8821 23           	inc hl
 702  8822 23           	inc hl
 703  8823 22 DB 85     	ld (Indice_restore),hl
 704  8826 CD B3 87         call Extrae_address
 705  8829 22 D9 85         ld (Puntero_restore_entidades),hl
 706  882C C1           	pop bc
 707  882D D1           	pop de
 708  882E E1           	pop hl
 709  882F C9           	ret
 710  8830
 711  8830              ; **************************************************************************************************
 712  8830              ;
 713  8830              ;	29/10/22
 714  8830              ;
 715  8830              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 716  8830
 717  8830 E5           Restore_Primera_entidad push hl
 718  8831 D5           	push de
 719  8832 C5            	push bc
 720  8833 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 721  8836 11 9B 85     	ld de,Filas
 722  8839 01 3B 00     	ld bc,59
 723  883C ED B0        	ldir
 724  883E C1           	pop bc
 725  883F D1           	pop de
 726  8840 E1           	pop hl
 727  8841 C9           	ret
 728  8842
 729  8842              ; **************************************************************************************************
 730  8842              ;
 731  8842              ;	25/01/23
 732  8842              ;
 733  8842              ;	Restore_Amadeus
 734  8842              ;
 735  8842              ;	Cargamos en DRAW los parámetros de Amadeus.
 736  8842              ;
 737  8842
 738  8842 E5           Restore_Amadeus	push hl
 739  8843 D5           	push de
 740  8844 C5            	push bc
 741  8845 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 742  8848 11 9B 85     	ld de,Filas
 743  884B 01 3B 00     	ld bc,59
 744  884E ED B0        	ldir
 745  8850 C1           	pop bc
 746  8851 D1           	pop de
 747  8852 E1           	pop hl
 748  8853 C9           	ret
 749  8854
 750  8854              ; *************************************************************************************************************************************************************
 751  8854              ;
 752  8854              ;	29/01/23
 753  8854              ;
 754  8854              ;	Store_Amadeus
 755  8854              ;
 756  8854              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 757  8854              ;
 758  8854
 759  8854 E5           Store_Amadeus push hl
 760  8855 D5           	push de
 761  8856 C5            	push bc
 762  8857 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 763  885A 11 74 84     	ld de,Amadeus_db
 764  885D 01 3B 00     	ld bc,59
 765  8860 ED B0        	ldir
 766  8862 C1           	pop bc
 767  8863 D1           	pop de
 768  8864 E1           	pop hl
 769  8865 C9           	ret
 770  8866
 771  8866              ; **************************************************************************************************
 772  8866
 773  8866              ; Teclado.
 774  8866
 775  8866 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 776  8868 DB FE        	in a,($fe)
 777  886A E6 01        	and $01
 778  886C 28 02        	jr z,1f
 779  886E 18 F6        	jr Pulsa_ENTER
 780  8870 C9           1 ret
 781  8871
 782  8871              ; **************************************************************************************************
 783  8871              ;
 784  8871              ; Temporización.
 785  8871
 786  8871              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 787  8871              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 788  8871              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 789  8871              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 790  8871
 791  8871              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 792  8871              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 793  8871              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 794  8871
 795  8871              ; A partir de $4f61 no hace falta DELAY.
 796  8871
 797  8871              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 798  8871
 799  8871 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 800  8874 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 801  8875 78           	LD A,B
 802  8876 A7           	AND A
 803  8877 20 FB        	JR NZ,wait
 804  8879 C9           	RET
 805  887A
 806  887A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 807  887A              ;
 808  887A              ;	5/3/23
 809  887A              ;
 810  887A              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 811  887A
 812  887A              Movimiento_Amadeus
 813  887A
 814  887A              ; Disparo.
 815  887A
 816  887A 3E F7        	ld a,$f7												; "5" para disparar.
 817  887C DB FE        	in a,($fe)
 818  887E E6 10        	and $10
 819  8880 CC DA 88     	call z,Genera_disparo
 820  8883
 821  8883 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 822  8885 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 823  8887 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 824  8889 CC BD 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
 825  888C 3E F7        	ld a,$f7
 826  888E DB FE        	in a,($fe)
 827  8890 E6 01        	and $01
 828  8892 C8           	ret z
 829  8893
 830  8893 3E F7        	ld a,$f7
 831  8895 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 832  8897 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 833  8899 CC 9F 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 834  889C C9           	ret
 835  889D
 836  889D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 837  889D              ;
 838  889D              ;	Rutina provisional para que los malotes cagen balas.
 839  889D
 840  889D 3E 7F        Detecta_disparo_entidad ld a,$7f
 841  889F DB FE        	in a,($fe)
 842  88A1 E6 01        	and 1
 843  88A3 C0           	ret nz
 844  88A4 CD DA 88     	call Genera_disparo
 845  88A7 C9           	ret
 846  88A8
 847  88A8              ; Pinta indicadores de FILAS. ------------------------------------------------------
 848  88A8
 849  88A8 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 850  88AB
 851  88AB              ; ----------
 852  88AB 06 20        	ld b,32
 853  88AD E5           2 push hl
 854  88AE C5           	push bc
 855  88AF              ; ----------
 856  88AF
 857  88AF 06 BF        	ld b,$bf
 858  88B1 36 80        1 ld (hl),%10000000
 859  88B3 CD 65 8F     	call NextScan
 860  88B6 10 F9        	djnz 1B
 861  88B8
 862  88B8              ; ----------
 863  88B8 C1           	pop bc
 864  88B9 E1           	pop hl
 865  88BA 2C           	inc l
 866  88BB 10 F0        	djnz 2B
 867  88BD              ; ----------
 868  88BD
 869  88BD 06 03        	ld b,3
 870  88BF 21 00 47         ld hl,$4700
 871  88C2 CD C8 88     3 call Bucle_1
 872  88C5 10 FB            djnz 3B
 873  88C7 C9               ret
 874  88C8
 875  88C8 C5           Bucle_1 push bc
 876  88C9 E5                   push hl
 877  88CA D1                   pop de
 878  88CB 13                   inc de
 879  88CC 01 FF 00             ld bc,255
 880  88CF 36 FF                ld (hl),255
 881  88D1 ED B0                ldir
 882  88D3 23                   inc hl
 883  88D4 3E 07                ld a,7
 884  88D6 84                   add a,h
 885  88D7 67                   ld h,a
 886  88D8 C1                   pop bc
 887  88D9 C9                   ret
 888  88DA
 889  88DA              ; ---------------------------------------------------------------
 890  88DA
 891  88DA              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88DA              ; ******************************************************************************************************************************************************************************************
   2+ 88DA              ;
   3+ 88DA              ;   27/03/23
   4+ 88DA              ;
   5+ 88DA              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88DA              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88DA              ;
   8+ 88DA              ;
   9+ 88DA              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88DA              ;
  11+ 88DA              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88DA              ;               _ hacen las entidades hacia abajo.
  13+ 88DA              ;
  14+ 88DA              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88DA              ;
  16+ 88DA              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88DA              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88DA              ;
  19+ 88DA              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88DA              ;           _ la bala.
  21+ 88DA              ;
  22+ 88DA              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88DA              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88DA              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88DA              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88DA              ;           _ en el momento de generarse la bala)).
  27+ 88DA
  28+ 88DA              Genera_disparo
  29+ 88DA
  30+ 88DA              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88DA              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88DA              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88DA              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88DA              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
  35+ 88DA              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
  36+ 88DA              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88DA
  38+ 88DA              ; Exclusiones:
  39+ 88DA
  40+ 88DA 3A D2 85         ld a,(Columnas)
  41+ 88DD 47               ld b,a
  42+ 88DE 3A 9C 85         ld a,(Columns)
  43+ 88E1 B8               cp b
  44+ 88E2 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88E3
  46+ 88E3              ; ----- ----- -----
  47+ 88E3
  48+ 88E3 3A C9 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
  49+ 88E6 CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
  50+ 88E8 20 06            jr nz,16F
  51+ 88EA
  52+ 88EA 3A A2 85         ld a,(Coordenada_y)
  53+ 88ED FE 14            cp $14
  54+ 88EF D0               ret nc
  55+ 88F0
  56+ 88F0              ; ----- ----- -----
  57+ 88F0
  58+ 88F0              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  59+ 88F0
  60+ 88F0 21 F2 83     16 ld hl,ON_Disparo_2A
  61+ 88F3 CD B3 87         call Extrae_address
  62+ 88F6 24               inc h
  63+ 88F7 25               dec h
  64+ 88F8 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  65+ 88FA
  66+ 88FA 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
  67+ 88FD A7               and a
  68+ 88FE ED 52            sbc hl,de
  69+ 8900 D0               ret nc
  70+ 8901
  71+ 8901              ; ----- ----- -----
  72+ 8901
  73+ 8901 21 00 80     14 ld hl,Indice_disparo
  74+ 8904 3A A3 85         ld a,(CTRL_DESPLZ)
  75+ 8907 4F               ld c,a
  76+ 8908 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  77+ 890A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  78+ 890A              ;                                            ""        ""       "f9", B="1"
  79+ 890A              ;                                            ""        ""       "fb", B="2"
  80+ 890A              ;                                            ""        ""       "fb", B="3"
  81+ 890A A7               and a
  82+ 890B 28 10            jr z,1F
  83+ 890D E6 01            and 1
  84+ 890F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  85+ 8910
  86+ 8910 79               ld a,c
  87+ 8911 16 F9            ld d,$f9
  88+ 8913 23           2 inc hl
  89+ 8914 23               inc hl
  90+ 8915 04               inc b
  91+ 8916 BA               cp d
  92+ 8917 28 04            jr z,1F
  93+ 8919 14               inc d
  94+ 891A 14               inc d
  95+ 891B 18 F6            jr 2B
  96+ 891D
  97+ 891D CD B3 87     1 call Extrae_address
  98+ 8920 E5               push hl
  99+ 8921 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 100+ 8923 DD 21 F8 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 101+ 8927
 102+ 8927              ;	Se cumplen las condiciones necesarias para generar un disparo.
 103+ 8927              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 104+ 8927
 105+ 8927 3A AF 85     	ld a,(Cuad_objeto)
 106+ 892A FE 02            cp 2
 107+ 892C 38 60            jr c,3F
 108+ 892E 28 5E            jr z,3F
 109+ 8930
 110+ 8930              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 111+ 8930
 112+ 8930 E6 01            and 1
 113+ 8932 28 2D            jr z,4F
 114+ 8934
 115+ 8934              ; 	Estamos en el 3er cuadrante de pantalla.
 116+ 8934              ; 	3er CUAD. ----- ----- ----- ----- -----
 117+ 8934              ;
 118+ 8934              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 119+ 8934              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 120+ 8934              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 121+ 8934
 122+ 8934 2A 9D 85     	ld hl,(Posicion_actual)
 123+ 8937
 124+ 8937              ;   Amadeus o entidad ???.
 125+ 8937
 126+ 8937 3A C9 85         ld a,(Ctrl_0)
 127+ 893A CB 77            bit 6,a
 128+ 893C 28 0D            jr z,8F
 129+ 893E
 130+ 893E              ; 	Dispara Amadeus.
 131+ 893E
 132+ 893E 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 133+ 8940 CD 74 8F         call PreviousScan
 134+ 8943 CD 74 8F         call PreviousScan
 135+ 8946
 136+ 8946              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 137+ 8946              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 138+ 8946              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 139+ 8946              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 140+ 8946
 141+ 8946 CD B8 89         call Ajusta_disparo_parte_izquierda
 142+ 8949 18 0E            jr 10F
 143+ 894B
 144+ 894B              ; 	Dispara Entidad.
 145+ 894B
 146+ 894B 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
 147+ 894D
 148+ 894D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 149+ 894D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 150+ 894D
 151+ 894D C5               push bc
 152+ 894E 06 10            ld b,16
 153+ 8950 CD 65 8F     9 call NextScan
 154+ 8953 10 FB            djnz 9B
 155+ 8955 C1               pop bc
 156+ 8956
 157+ 8956              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 158+ 8956              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 159+ 8956              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 160+ 8956              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 161+ 8956
 162+ 8956 CD B8 89         call Ajusta_disparo_parte_izquierda
 163+ 8959
 164+ 8959 CD 2D 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 165+ 895C              ;                                                   ; _al generar el disparo.
 166+ 895C
 167+ 895C              ; 	LLegados a este punto tendremos:
 168+ 895C              ;
 169+ 895C              ;       Puntero_objeto_disparo en IY.
 170+ 895C              ;       Rutinas_de_impresion en IX.
 171+ 895C              ;       Puntero_de_impresion en HL.
 172+ 895C              ;       Impacto/Dirección en BC.
 173+ 895C
 174+ 895C CD C0 89         call Almacena_disparo
 175+ 895F 18 4F            jr 6F                                           ; RET.
 176+ 8961
 177+ 8961
 178+ 8961              ; 	Estamos en el 4º cuadrante de pantalla.
 179+ 8961              ; 	4º CUAD. ----- ----- ----- ----- -----
 180+ 8961              ;
 181+ 8961              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 182+ 8961              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 183+ 8961              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 184+ 8961
 185+ 8961 2A 9D 85     4 ld hl,(Posicion_actual)
 186+ 8964
 187+ 8964              ;   Amadeus o entidad ???.
 188+ 8964
 189+ 8964 3A C9 85         ld a,(Ctrl_0)
 190+ 8967 CB 77            bit 6,a
 191+ 8969 28 0D            jr z,11F
 192+ 896B
 193+ 896B              ; 	Dispara Amadeus.
 194+ 896B
 195+ 896B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 196+ 896D CD 74 8F         call PreviousScan
 197+ 8970 CD 74 8F         call PreviousScan
 198+ 8973
 199+ 8973              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 200+ 8973              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 201+ 8973              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 202+ 8973              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 203+ 8973
 204+ 8973 CD B1 89         call Ajusta_disparo_parte_derecha
 205+ 8976 18 0E            jr 13F
 206+ 8978
 207+ 8978              ; 	Dispara Entidad.
 208+ 8978
 209+ 8978 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
 210+ 897A
 211+ 897A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 212+ 897A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 213+ 897A
 214+ 897A C5               push bc
 215+ 897B
 216+ 897B 06 10            ld b,16
 217+ 897D CD 65 8F     12 call NextScan
 218+ 8980 10 FB            djnz 12B
 219+ 8982
 220+ 8982 C1               pop bc
 221+ 8983
 222+ 8983              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 223+ 8983              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 224+ 8983              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 225+ 8983              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 226+ 8983
 227+ 8983 CD B1 89         call Ajusta_disparo_parte_derecha
 228+ 8986
 229+ 8986 CD 2D 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 230+ 8989              ;                                                     ; _al generar el disparo.
 231+ 8989
 232+ 8989              ; LLegados a este punto tendremos:
 233+ 8989              ;
 234+ 8989              ;       Puntero_objeto_disparo en IY.
 235+ 8989              ;       Rutinas_de_impresion en IX.
 236+ 8989              ;       Puntero_de_impresion en HL.
 237+ 8989              ;       Impacto/Dirección en BC.
 238+ 8989
 239+ 8989 CD C0 89         call Almacena_disparo
 240+ 898C 18 22            jr 6F                                           ; RET.
 241+ 898E
 242+ 898E              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 243+ 898E
 244+ 898E 28 11        3 jr z,5F
 245+ 8990
 246+ 8990              ; 	1er CUAD. ----- ----- ----- ----- -----
 247+ 8990              ;
 248+ 8990              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 249+ 8990              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 250+ 8990              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 251+ 8990              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 252+ 8990
 253+ 8990              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 254+ 8990              ;	   ""        ""       "f9", B="1"
 255+ 8990              ;	   ""        ""       "fb", B="2"
 256+ 8990              ; 	   ""        ""       "fb", B="3"
 257+ 8990
 258+ 8990 2A 9D 85     	ld hl,(Posicion_actual)
 259+ 8993 CD 65 8F     	call NextScan
 260+ 8996
 261+ 8996              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 262+ 8996              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 263+ 8996              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 264+ 8996              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 265+ 8996
 266+ 8996 CD B8 89         call Ajusta_disparo_parte_izquierda
 267+ 8999
 268+ 8999              ; 	No se produce impacto. B="$80"
 269+ 8999              ; 	Dirección del proyectil hacia abajo. C="$80"
 270+ 8999
 271+ 8999 01 80 80         ld bc,$8080
 272+ 899C
 273+ 899C              ; 	LLegados a este punto tendremos:
 274+ 899C              ;
 275+ 899C              ;       Puntero_objeto_disparo en IY.
 276+ 899C              ;       Rutinas_de_impresion en IX.
 277+ 899C              ;       Puntero_de_impresion en HL.
 278+ 899C              ;       Impacto/Dirección en BC.
 279+ 899C
 280+ 899C CD C0 89         call Almacena_disparo
 281+ 899F 18 0F            jr 6F                                           ; RET.
 282+ 89A1
 283+ 89A1              ; 	Estamos en el 2º cuadrante de pantalla.
 284+ 89A1              ; 	2º CUAD. ----- ----- ----- ----- -----
 285+ 89A1              ;
 286+ 89A1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 287+ 89A1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 288+ 89A1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 289+ 89A1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 290+ 89A1
 291+ 89A1 2A 9D 85     5 ld hl,(Posicion_actual)
 292+ 89A4 CD 65 8F     	call NextScan
 293+ 89A7
 294+ 89A7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 295+ 89A7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 296+ 89A7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 297+ 89A7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 298+ 89A7
 299+ 89A7 CD B1 89         call Ajusta_disparo_parte_derecha
 300+ 89AA
 301+ 89AA              ; 	No se produce impacto. B="$80"
 302+ 89AA              ; 	Dirección del proyectil hacia abajo. C="80"
 303+ 89AA
 304+ 89AA 01 80 80     15 ld bc,$8080
 305+ 89AD
 306+ 89AD              ; 	LLegados a este punto tendremos:
 307+ 89AD              ;
 308+ 89AD              ;       Puntero_objeto_disparo en IY.
 309+ 89AD              ;       Rutinas_de_impresion en IX.
 310+ 89AD              ;       Puntero_de_impresion en HL.
 311+ 89AD              ;       Impacto/Dirección en BC.
 312+ 89AD
 313+ 89AD CD C0 89         call Almacena_disparo
 314+ 89B0
 315+ 89B0 C9           6 ret
 316+ 89B1
 317+ 89B1              ; ----------------------------------------------------------------
 318+ 89B1              ;
 319+ 89B1              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 320+ 89B1              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 321+ 89B1              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 322+ 89B1
 323+ 89B1 78           Ajusta_disparo_parte_derecha ld a,b
 324+ 89B2 FE 02            cp 2
 325+ 89B4 38 01            jr c,1F
 326+ 89B6 23               inc hl
 327+ 89B7 C9           1 ret
 328+ 89B8
 329+ 89B8 78           Ajusta_disparo_parte_izquierda ld a,b
 330+ 89B9 FE 01        	cp 1
 331+ 89BB 20 01        	jr nz,1F
 332+ 89BD 2B           	dec hl
 333+ 89BE 2B           1 dec hl
 334+ 89BF C9               ret
 335+ 89C0
 336+ 89C0              ; ----------------------------------------------------------------
 337+ 89C0              ;
 338+ 89C0              ;   25/02/23
 339+ 89C0              ;
 340+ 89C0              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 341+ 89C0              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 342+ 89C0
 343+ 89C0              Almacena_disparo
 344+ 89C0
 345+ 89C0 E5               push hl  										; HL contiene el puntero de impresión.
 346+ 89C1 F1               pop af
 347+ 89C2 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 348+ 89C3
 349+ 89C3 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 350+ 89C4 E6 01            and 1
 351+ 89C6 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 352+ 89C8              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 353+ 89C8              ; 	Dispara AMADEUS.
 354+ 89C8
 355+ 89C8              ;	Comprobamos que a Amadeus aún le quedan disparos.
 356+ 89C8              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 357+ 89C8              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 358+ 89C8              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 359+ 89C8
 360+ 89C8 C5               push bc
 361+ 89C9 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 362+ 89CC 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 89CF A7               and a
 364+ 89D0 ED 42            sbc hl,bc
 365+ 89D2 CC 7C 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 366+ 89D5 C1               pop bc
 367+ 89D6 28 54            jr z,4F
 368+ 89D8
 369+ 89D8 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 370+ 89DB 23               inc hl
 371+ 89DC 23               inc hl
 372+ 89DD 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 373+ 89E0              ;                                                   ; _ Disparo_(+1).
 374+ 89E0 18 18            jr 2F
 375+ 89E2
 376+ 89E2              ; Dispara una entidad.
 377+ 89E2
 378+ 89E2 C5           1 push bc
 379+ 89E3 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 380+ 89E6 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 89E9 A7               and a
 382+ 89EA ED 42            sbc hl,bc
 383+ 89EC CC 75 87         call z,Inicia_Puntero_Disparo_Entidades
 384+ 89EF C1               pop bc
 385+ 89F0 28 3A            jr z,4F
 386+ 89F2
 387+ 89F2 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 388+ 89F5 23               inc hl
 389+ 89F6 23               inc hl
 390+ 89F7 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 391+ 89FA              ;                                                   ; _ Disparo_(+1).
 392+ 89FA CD B3 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 393+ 89FD              ;                                                   ; _ los 8 bytes que definen el disparo:
 394+ 89FD              ;
 395+ 89FD              ;                                                     Puntero_objeto_disparo en IY.
 396+ 89FD              ;                                                     Rutinas_de_impresion en IX.
 397+ 89FD              ;                                                     Puntero_de_impresion en HL.
 398+ 89FD              ;                                                     Impacto/Dirección en BC.
 399+ 89FD
 400+ 89FD 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 401+ 89FE 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 402+ 89FF 23               inc hl                                          ; _ al siguiente.
 403+ 8A00 A7               and a
 404+ 8A01 20 C0            jr nz,3B
 405+ 8A03
 406+ 8A03 08               ex af,af
 407+ 8A04 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 408+ 8A08 F9               ld sp,hl
 409+ 8A09
 410+ 8A09 DD E5            push ix                                         ; Rutina de impresión.
 411+ 8A0B F5               push af                                         ; Puntero de impresión.
 412+ 8A0C FD E5            push iy                                         ; Puntero objeto.
 413+ 8A0E C5               push bc                                         ; Control.
 414+ 8A0F
 415+ 8A0F ED 7B DF 85      ld sp,(Stack)
 416+ 8A13
 417+ 8A13              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 418+ 8A13
 419+ 8A13 21 D6 85     	ld hl,Ctrl_1
 420+ 8A16 CB C6        	set 0,(hl)
 421+ 8A18
 422+ 8A18 DD E5        	push ix
 423+ 8A1A E1               pop hl
 424+ 8A1B F5               push af
 425+ 8A1C DD E1            pop ix
 426+ 8A1E
 427+ 8A1E CD A0 7F     	call Guarda_foto_registros
 428+ 8A21
 429+ 8A21 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 430+ 8A24 CB 86        	res 0,(hl)
 431+ 8A26
 432+ 8A26              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 433+ 8A26              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 434+ 8A26
 435+ 8A26 CD 7C 87         call Inicia_Puntero_Disparo_Amadeus
 436+ 8A29 CD 75 87         call Inicia_Puntero_Disparo_Entidades
 437+ 8A2C
 438+ 8A2C C9           4 ret
 439+ 8A2D
 440+ 8A2D              ; ----------------------------------------------------------------
 441+ 8A2D              ;
 442+ 8A2D              ;   4/3/23
 443+ 8A2D              ;
 444+ 8A2D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 445+ 8A2D              ;   _ al generarse el disparo.
 446+ 8A2D              ;
 447+ 8A2D              ;       "$80" ..... No se produce colisión.
 448+ 8A2D              ;       "$81" ..... Se produce colisión.
 449+ 8A2D
 450+ 8A2D              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 451+ 8A2D              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 452+ 8A2D
 453+ 8A2D
 454+ 8A2D FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 455+ 8A2F E5               push hl                                        ; Puntero de impresión.
 456+ 8A30 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 457+ 8A32 CD 49 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 458+ 8A35 E1               pop hl
 459+ 8A36 E5               push hl
 460+ 8A37 CD 65 8F         call NextScan
 461+ 8A3A
 462+ 8A3A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 463+ 8A3B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 464+ 8A3D 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 465+ 8A3F              ;                                                  ; _ 2º scanline si esto es así.
 466+ 8A3F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 467+ 8A41 CD 49 8A         call Bucle_2
 468+ 8A44
 469+ 8A44 43           2 ld b,e
 470+ 8A45 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 471+ 8A46 FD E1            pop iy
 472+ 8A48 C9               ret
 473+ 8A49
 474+ 8A49               ; ---------- ----------
 475+ 8A49
 476+ 8A49 06 02        Bucle_2 ld b,2
 477+ 8A4B FD 7E 00     2 ld a,(iy)
 478+ 8A4E A6               and (hl)
 479+ 8A4F 28 02            jr z,1F
 480+ 8A51 1E 81            ld e,$81
 481+ 8A53 23           1 inc hl
 482+ 8A54 FD 23            inc iy
 483+ 8A56 10 F3            djnz 2B
 484+ 8A58 C9               ret
 485+ 8A59
 486+ 8A59              ; -------------------------------------------------------------------------------------------------------------
 487+ 8A59              ;
 488+ 8A59              ;   01/04/23
 489+ 8A59              ;
 490+ 8A59              ;
 491+ 8A59              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 492+ 8A59              ;   Vamos a comprobar si existe colisión con Amadeus. Consideramos que se produce colisión_
 493+ 8A59              ;   _ si hay contacto de los dos scanlines inferiores que forman la entidad con la nave.
 494+ 8A59              ;
 495+ 8A59              ;   INPUTS: IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
 496+ 8A59              ;           IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
 497+ 8A59
 498+ 8A59              Detecta_colision_nave_entidad
 499+ 8A59
 500+ 8A59              ; Antes de nada, averiguaremos si la entidad ocupa alguna de las columnas que ocupa Amadeus en pantalla.
 501+ 8A59              ; Guardamos las coordenadas_X de la entidad en el almacen:
 502+ 8A59
 503+ 8A59 2A 9D 85         ld hl,(Posicion_actual)
 504+ 8A5C
 505+ 8A5C              ; Preparamos registros:
 506+ 8A5C
 507+ 8A5C 21 A1 85         ld hl,Filas+6
 508+ 8A5F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 509+ 8A60 23               inc hl
 510+ 8A61 23               inc hl
 511+ 8A62 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 512+ 8A63 43               ld b,e
 513+ 8A64 21 AF 85         ld hl,Filas+20
 514+ 8A67 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 515+ 8A68 21 F0 85         ld hl,Coordenadas_X_Entidad
 516+ 8A6B CD 6C 8C         call Guarda_coordenadas_X
 517+ 8A6E
 518+ 8A6E              ; Guardamos las coordenadas_X de Amadeus en el almacen:
 519+ 8A6E
 520+ 8A6E              ; Preparamos registros:
 521+ 8A6E
 522+ 8A6E 21 7A 84         ld hl,Amadeus_db+6
 523+ 8A71 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 524+ 8A72 23               inc hl
 525+ 8A73 23               inc hl
 526+ 8A74 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 527+ 8A75 7B               ld a,e
 528+ 8A76 08               ex af,af'
 529+ 8A77 21 88 84         ld hl,Amadeus_db+20
 530+ 8A7A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 531+ 8A7B 21 ED 85         ld hl,Coordenadas_X_Amadeus
 532+ 8A7E CD 6C 8C         call Guarda_coordenadas_X
 533+ 8A81
 534+ 8A81              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 535+ 8A81              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 536+ 8A81
 537+ 8A81 04               inc b
 538+ 8A82 05               dec b
 539+ 8A83 28 04            jr z,5F
 540+ 8A85 06 03            ld b,3
 541+ 8A87 18 02            jr 6F
 542+ 8A89 06 02        5 ld b,2
 543+ 8A8B
 544+ 8A8B 08           6 ex af,af'
 545+ 8A8C 3C               inc a
 546+ 8A8D 3D               dec a
 547+ 8A8E 28 04            jr z,9F
 548+ 8A90 0E 03            ld c,3
 549+ 8A92 18 02            jr 10F
 550+ 8A94 0E 02        9 ld c,2
 551+ 8A96 79           10 ld a,c
 552+ 8A97 08               ex af,af'
 553+ 8A98 11 F0 85         ld de,Coordenadas_X_Entidad
 554+ 8A9B 1A           8 ld a,(de)
 555+ 8A9C
 556+ 8A9C 21 ED 85         ld hl,Coordenadas_X_Amadeus
 557+ 8A9F BE           7 cp (hl)
 558+ 8AA0
 559+ 8AA0 28 0B            jr z,11F
 560+ 8AA2
 561+ 8AA2 23               inc hl
 562+ 8AA3 0D               dec c
 563+ 8AA4 20 F9            jr nz,7B
 564+ 8AA6
 565+ 8AA6 13               inc de
 566+ 8AA7 08               ex af,af'
 567+ 8AA8 4F               ld c,a
 568+ 8AA9 08               ex af,af'
 569+ 8AAA
 570+ 8AAA 10 EF            djnz 8B
 571+ 8AAC
 572+ 8AAC C9               ret
 573+ 8AAD
 574+ 8AAD              ; Si coinciden las columnas de la entidad con las de Amadeus, llamaremos a la rutina [Calcula_puntero_de_impresion]. Nos proporcionara:
 575+ 8AAD              ; Puntero_de_impresión de la entidad en IX y puntero_objeto en IY.
 576+ 8AAD
 577+ 8AAD              11
 578+ 8AAD
 579+ 8AAD 18 FE            jr $
 580+ 8AAF
 581+ 8AAF 2A 9D 85         ld hl,(Posicion_actual)
 582+ 8AB2 CD CA 8E         call Calcula_puntero_de_impresion
 583+ 8AB5
 584+ 8AB5              ; Con estos datos podremos situar HL en el penúltimo scanline del puntero_de_impresión de la entidad y_
 585+ 8AB5              ; _ el registro IY en el 1er dato del penúltimo scanline que forma la entidad, (Puntero_objeto).
 586+ 8AB5
 587+ 8AB5 06 0E            ld b,14
 588+ 8AB7 DD E5            push ix
 589+ 8AB9 E1               pop hl
 590+ 8ABA CD 65 8F     1 call NextScan
 591+ 8ABD 10 FB            djnz 1B
 592+ 8ABF E5               push hl
 593+ 8AC0 DD E1            pop ix                                         ; Puntero_de_impresion de la entidad implicada en el penúltimo scanline.
 594+ 8AC2
 595+ 8AC2 FD E5            push iy
 596+ 8AC4 E1               pop hl
 597+ 8AC5
 598+ 8AC5              ; Sumaremos 28/42 bytes en función de las (Columns) que formen la entidad.
 599+ 8AC5
 600+ 8AC5 3A 9C 85         ld a,(Columns)
 601+ 8AC8 E6 01            and 1
 602+ 8ACA 20 05            jr nz,2F
 603+ 8ACC 01 1C 00         ld bc,28
 604+ 8ACF 18 03            jr 3F
 605+ 8AD1 01 2A 00     2 ld bc,42
 606+ 8AD4 A7           3 and a
 607+ 8AD5 ED 4A            adc hl,bc
 608+ 8AD7 E5               push hl
 609+ 8AD8 FD E1            pop iy                                          ; Puntero_objeto de la entidad implicada apuntando al 1er dato del penúltimo_
 610+ 8ADA              ;                                                   ; _ scanline.
 611+ 8ADA DD E5            push ix
 612+ 8ADC E1               pop hl
 613+ 8ADD
 614+ 8ADD E5               push hl
 615+ 8ADE
 616+ 8ADE              ; Llegados a este punto, HL apunta al puntero de impresión del penúltimo scanline de pantalla de la entidad.
 617+ 8ADE              ; IY apunta a los "datos" del penúltimo scanline que forman la entidad.
 618+ 8ADE
 619+ 8ADE 1E 00            ld e,0                                         ; E,(Impacto)="0".
 620+ 8AE0 CD FF 8A         call Bucle_3                                   ; Comprobamos el 1er scanline.
 621+ 8AE3
 622+ 8AE3 7B               ld a,e
 623+ 8AE4 E6 01            and 1
 624+ 8AE6 28 15            jr z,4F
 625+ 8AE8
 626+ 8AE8 E1               pop hl
 627+ 8AE9 E5               push hl
 628+ 8AEA CD 65 8F         call NextScan
 629+ 8AED
 630+ 8AED 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 631+ 8AEE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 632+ 8AF0 28 0B            jr z,4F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 633+ 8AF2 30 09            jr nc,4F
 634+ 8AF4              ;                                                  ; _ 2º scanline si esto es así.
 635+ 8AF4 1E 00            ld e,0                                         ; ----- ( ) -----
 636+ 8AF6 CD FF 8A         call Bucle_3
 637+ 8AF9
 638+ 8AF9 7B               ld a,e
 639+ 8AFA A7               and a
 640+ 8AFB 20 FE            jr nz,$
 641+ 8AFD
 642+ 8AFD E1           4 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8AFE C9               ret
 644+ 8AFF
 645+ 8AFF               ; ---------- ----------
 646+ 8AFF
 647+ 8AFF 3A D2 85     Bucle_3 ld a,(Columnas)
 648+ 8B02 47               ld b,a
 649+ 8B03 FD 7E 00     2 ld a,(iy)
 650+ 8B06 A6               and (hl)
 651+ 8B07 28 02            jr z,1F
 652+ 8B09
 653+ 8B09 1E 01            ld e,1
 654+ 8B0B
 655+ 8B0B 23           1 inc hl
 656+ 8B0C FD 23            inc iy
 657+ 8B0E 10 F3            djnz 2B
 658+ 8B10 C9               ret
 659+ 8B11
 660+ 8B11              ; -------------------------------------------------------------------------------------------------------------
 661+ 8B11              ;
 662+ 8B11              ;   13/03/23
 663+ 8B11              ;
 664+ 8B11              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 665+ 8B11              ;
 666+ 8B11              ;   DESTRUYE: HL,BC,DE y A.
 667+ 8B11
 668+ 8B11 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 669+ 8B14 7E               ld a,(hl)
 670+ 8B15 A7               and a
 671+ 8B16 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 672+ 8B17
 673+ 8B17 44               ld b,h
 674+ 8B18 4D               ld c,l
 675+ 8B19 2A E5 85         ld hl,(Stack_snapshot_disparos)
 676+ 8B1C E5               push hl
 677+ 8B1D A7               and a
 678+ 8B1E ED 42            sbc hl,bc
 679+ 8B20 E5               push hl
 680+ 8B21 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 681+ 8B22
 682+ 8B22 E1               pop hl
 683+ 8B23 54               ld d,h
 684+ 8B24 5D               ld e,l
 685+ 8B25 1B               dec de
 686+ 8B26 ED B8            lddr                                                ; Limpiamos.
 687+ 8B28
 688+ 8B28 21 60 70         ld hl,Album_de_fotos_disparos
 689+ 8B2B 22 E5 85         ld (Stack_snapshot_disparos),hl
 690+ 8B2E
 691+ 8B2E C9               ret
 692+ 8B2F
 693+ 8B2F              ; -------------------------------------------------------------------------------------------------------------
 694+ 8B2F              ;
 695+ 8B2F              ;   28/03/23
 696+ 8B2F              ;
 697+ 8B2F
 698+ 8B2F 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 699+ 8B32 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 700+ 8B35
 701+ 8B35 CD B3 87     2 call Extrae_address
 702+ 8B38 7E               ld a,(hl)
 703+ 8B39 A7               and a
 704+ 8B3A 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 705+ 8B3C
 706+ 8B3C              ; ----- ----- ----- ----- ----- -----
 707+ 8B3C
 708+ 8B3C C5               push bc
 709+ 8B3D CD E7 8B         call foto_disparo_a_borrar
 710+ 8B40
 711+ 8B40              ; Existe colisión con este disparo???
 712+ 8B40
 713+ 8B40 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 714+ 8B41 7E               ld a,(hl)
 715+ 8B42 2B               dec hl
 716+ 8B43 E6 01            and 1
 717+ 8B45 28 0C            jr z,9F
 718+ 8B47
 719+ 8B47              ; Elimino el disparo de la base de datos.
 720+ 8B47
 721+ 8B47 E5               push hl
 722+ 8B48 CD 61 8C         call Elimina_disparo_de_base_de_datos
 723+ 8B4B E1               pop hl
 724+ 8B4C 3E 01            ld a,1
 725+ 8B4E 32 EC 85         ld (Impacto2),a                                       ; Indicamos que se ha producido Impacto en una entidad.
 726+ 8B51 18 06            jr 11F
 727+ 8B53
 728+ 8B53 CD 10 8C     9 call Mueve_disparo
 729+ 8B56 CD E7 8B         call foto_disparo_a_borrar
 730+ 8B59
 731+ 8B59 C1           11 pop bc
 732+ 8B5A
 733+ 8B5A 18 04            jr 7F
 734+ 8B5C
 735+ 8B5C              ; ----- ----- ----- ----- ----- -----
 736+ 8B5C
 737+ 8B5C ED 42        1 sbc hl,bc
 738+ 8B5E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 739+ 8B60
 740+ 8B60 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 741+ 8B63 23               inc hl
 742+ 8B64 23               inc hl
 743+ 8B65 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 744+ 8B68 18 CB            jr 2B
 745+ 8B6A
 746+ 8B6A CD 7C 87     3 call Inicia_Puntero_Disparo_Amadeus
 747+ 8B6D
 748+ 8B6D 01 66 84         ld bc,Disparo_11
 749+ 8B70 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 750+ 8B73
 751+ 8B73 CD B3 87     5 call Extrae_address
 752+ 8B76 7E               ld a,(hl)
 753+ 8B77 A7               and a
 754+ 8B78 28 5B            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 755+ 8B7A
 756+ 8B7A              ; ----- ----- ----- ----- ----- -----
 757+ 8B7A
 758+ 8B7A C5               push bc
 759+ 8B7B CD E7 8B         call foto_disparo_a_borrar
 760+ 8B7E
 761+ 8B7E              ; Existe colisión con este disparo???
 762+ 8B7E
 763+ 8B7E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 764+ 8B7F 7E               ld a,(hl)
 765+ 8B80 2B               dec hl
 766+ 8B81 E6 01            and 1
 767+ 8B83 28 47            jr z,10F
 768+ 8B85
 769+ 8B85              ; La colisión se produce con Amadeus???
 770+ 8B85              ; Amadeus siempre tiene (Coordenada_y)="$16".
 771+ 8B85
 772+ 8B85 E5               push hl
 773+ 8B86
 774+ 8B86 06 04            ld b,4
 775+ 8B88 23           16 inc hl
 776+ 8B89 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 777+ 8B8B
 778+ 8B8B CD B3 87         call Extrae_address
 779+ 8B8E CD 7C 95         call Genera_coordenadas_disparo
 780+ 8B91 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 781+ 8B92 FE 16            cp $16
 782+ 8B94 38 24            jr c,15F
 783+ 8B96
 784+ 8B96              ; (Colisiones en filas 16 y 17).
 785+ 8B96
 786+ 8B96 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 787+ 8B97
 788+ 8B97              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 789+ 8B97
 790+ 8B97 21 7A 84         ld hl,Amadeus_db+6
 791+ 8B9A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 792+ 8B9B 23               inc hl
 793+ 8B9C 23               inc hl
 794+ 8B9D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 795+ 8B9E 21 88 84         ld hl,Amadeus_db+20
 796+ 8BA1 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 797+ 8BA2 21 ED 85         ld hl,Coordenadas_X_Amadeus
 798+ 8BA5
 799+ 8BA5 CD 6C 8C         call Guarda_coordenadas_X
 800+ 8BA8
 801+ 8BA8 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 802+ 8BA9
 803+ 8BA9              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 804+ 8BA9
 805+ 8BA9 21 ED 85         ld hl,Coordenadas_X_Amadeus
 806+ 8BAC 7E               ld a,(hl)
 807+ 8BAD BA           18 cp d
 808+ 8BAE 20 03            jr nz,17F
 809+ 8BB0
 810+ 8BB0              ; Colisión Amadeus !!!!!!!!!!
 811+ 8BB0
 812+ 8BB0 E1               pop hl
 813+ 8BB1 18 0D            jr 14F
 814+ 8BB3
 815+ 8BB3 23           17 inc hl
 816+ 8BB4 7E               ld a,(hl)
 817+ 8BB5
 818+ 8BB5 A7               and a
 819+ 8BB6 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
 820+ 8BB8 18 F3            jr 18B
 821+ 8BBA
 822+ 8BBA              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 823+ 8BBA              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 824+ 8BBA
 825+ 8BBA E1           15  pop hl
 826+ 8BBB 23               inc hl
 827+ 8BBC 35               dec (hl)
 828+ 8BBD 2B               dec hl
 829+ 8BBE 18 0C            jr 10F
 830+ 8BC0
 831+ 8BC0              ; -----------------------debug
 832+ 8BC0
 833+ 8BC0              ; Elimino el disparo de la base de datos.
 834+ 8BC0
 835+ 8BC0 E5           14 push hl
 836+ 8BC1 CD 61 8C         call Elimina_disparo_de_base_de_datos
 837+ 8BC4 E1               pop hl
 838+ 8BC5
 839+ 8BC5 3E 02            ld a,2                                               ; Indicamos que se ha producido Impacto en Amadeus.
 840+ 8BC7 32 EC 85         ld (Impacto2),a
 841+ 8BCA 18 06            jr 12F
 842+ 8BCC
 843+ 8BCC CD 10 8C     10 call Mueve_disparo
 844+ 8BCF CD E7 8B         call foto_disparo_a_borrar
 845+ 8BD2 C1           12 pop bc
 846+ 8BD3
 847+ 8BD3 18 04            jr 8F
 848+ 8BD5
 849+ 8BD5              ; ----- ----- ----- ----- ----- -----
 850+ 8BD5
 851+ 8BD5 ED 42        4 sbc hl,bc
 852+ 8BD7 28 0A            jr z,6F
 853+ 8BD9
 854+ 8BD9 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 855+ 8BDC 23               inc hl
 856+ 8BDD 23               inc hl
 857+ 8BDE 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 858+ 8BE1 18 90            jr 5B
 859+ 8BE3
 860+ 8BE3 CD 75 87     6 call Inicia_Puntero_Disparo_Entidades
 861+ 8BE6 C9               ret
 862+ 8BE7
 863+ 8BE7              ; ------------------------------------------------------------------
 864+ 8BE7
 865+ 8BE7              foto_disparo_a_borrar
 866+ 8BE7
 867+ 8BE7 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 868+ 8BE8 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 869+ 8BE9 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 870+ 8BEA
 871+ 8BEA E5               push hl
 872+ 8BEB 23               inc hl
 873+ 8BEC 23               inc hl
 874+ 8BED ED 73 DF 85      ld (Stack),sp
 875+ 8BF1 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 876+ 8BF2 FD E1            pop iy
 877+ 8BF4 DD E1            pop ix
 878+ 8BF6 E1               pop hl
 879+ 8BF7 ED 7B DF 85      ld sp,(Stack)
 880+ 8BFB 3A D6 85         ld a,(Ctrl_1)
 881+ 8BFE CB C7            set 0,a
 882+ 8C00 32 D6 85         ld (Ctrl_1),a
 883+ 8C03 CD A0 7F         call Guarda_foto_registros
 884+ 8C06 3A D6 85         ld a,(Ctrl_1)
 885+ 8C09 CB 87            res 0,a
 886+ 8C0B 32 D6 85         ld (Ctrl_1),a
 887+ 8C0E E1               pop hl
 888+ 8C0F C9               ret
 889+ 8C10
 890+ 8C10 E5           Mueve_disparo push hl
 891+ 8C11 7E               ld a,(hl)
 892+ 8C12 06 04            ld b,4
 893+ 8C14 23           1 inc hl
 894+ 8C15 10 FD            djnz 1B
 895+ 8C17
 896+ 8C17              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 897+ 8C17
 898+ 8C17 CD B3 87         call Extrae_address
 899+ 8C1A
 900+ 8C1A E6 01            and 1
 901+ 8C1C 28 2A            jr z,2F
 902+ 8C1E
 903+ 8C1E              ; Disparo hacia arriba, (Amadeus).
 904+ 8C1E
 905+ 8C1E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 906+ 8C1E              ; _ de la dificultad.
 907+ 8C1E
 908+ 8C1E CD 74 8F         call PreviousScan
 909+ 8C21 CD 74 8F         call PreviousScan
 910+ 8C24 CD 74 8F         call PreviousScan
 911+ 8C27
 912+ 8C27              ; Detecta si el disparo de Amadeus sale de pantalla:
 913+ 8C27
 914+ 8C27 7C               ld a,h
 915+ 8C28 FE 40            cp $40
 916+ 8C2A 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 917+ 8C2C
 918+ 8C2C              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 919+ 8C2C
 920+ 8C2C EB               ex de,hl
 921+ 8C2D 06 04            ld b,4
 922+ 8C2F 2B           6 dec hl
 923+ 8C30 10 FD            djnz 6B
 924+ 8C32
 925+ 8C32 CD 61 8C         call Elimina_disparo_de_base_de_datos
 926+ 8C35
 927+ 8C35 18 0C            jr 4F
 928+ 8C37
 929+ 8C37              ; Se ha desplazado la bala, compruebo colisión.
 930+ 8C37
 931+ 8C37 D5           3 push de
 932+ 8C38 C5               push bc
 933+ 8C39 CD 2D 8A         call Comprueba_Colision
 934+ 8C3C 78               ld a,b
 935+ 8C3D C1               pop bc
 936+ 8C3E D1               pop de
 937+ 8C3F
 938+ 8C3F EB               ex de,hl
 939+ 8C40
 940+ 8C40 73               ld (hl),e
 941+ 8C41 23               inc hl
 942+ 8C42 72               ld (hl),d
 943+ 8C43
 944+ 8C43 E1           4 pop hl
 945+ 8C44 23               inc hl
 946+ 8C45 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 947+ 8C46 2B               dec hl
 948+ 8C47 C9               ret
 949+ 8C48
 950+ 8C48              ; Disparo hacia abajo, (Entidad).
 951+ 8C48
 952+ 8C48              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 953+ 8C48              ; _ de la dificultad.
 954+ 8C48
 955+ 8C48 CD 65 8F     2 call NextScan
 956+ 8C4B CD 65 8F         call NextScan
 957+ 8C4E CD 65 8F         call NextScan
 958+ 8C51
 959+ 8C51              ; Detecta si el disparo de la entidad sale de la pantalla.
 960+ 8C51
 961+ 8C51 7C               ld a,h
 962+ 8C52 FE 58            cp $58
 963+ 8C54 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 964+ 8C56
 965+ 8C56 EB               ex de,hl
 966+ 8C57 06 04            ld b,4
 967+ 8C59 2B           5 dec hl
 968+ 8C5A 10 FD            djnz 5B
 969+ 8C5C
 970+ 8C5C CD 61 8C         call Elimina_disparo_de_base_de_datos
 971+ 8C5F
 972+ 8C5F 18 E2            jr 4B
 973+ 8C61
 974+ 8C61              ; HL apunta al primer byte de la base de datos del disparo.
 975+ 8C61 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 976+ 8C64 AF               xor a
 977+ 8C65 77               ld (hl),a
 978+ 8C66 54               ld d,h
 979+ 8C67 5D               ld e,l
 980+ 8C68 13               inc de
 981+ 8C69 ED B0            ldir
 982+ 8C6B C9               ret
 983+ 8C6C
 984+ 8C6C              ; -----------------------------------------------------------------
 985+ 8C6C              ;
 986+ 8C6C              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 987+ 8C6C              ;
 988+ 8C6C              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 989+ 8C6C              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 990+ 8C6C              ;
 991+ 8C6C              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
 992+ 8C6C              ;
 993+ 8C6C              ;   INPUTS:
 994+ 8C6C              ;
 995+ 8C6C              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
 996+ 8C6C              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
 997+ 8C6C              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
 998+ 8C6C
 999+ 8C6C              ;   MODIFICA: A, HL, DE y C
1000+ 8C6C
1001+ 8C6C 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1002+ 8C6D 79               ld a,c
1003+ 8C6E E6 01            and 1
1004+ 8C70 20 03            jr nz,1F
1005+ 8C72 14               inc d
1006+ 8C73 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1007+ 8C75
1008+ 8C75              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1009+ 8C75              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1010+ 8C75
1011+ 8C75 15           1 dec d
1012+ 8C76 23           2 inc hl
1013+ 8C77 72               ld (hl),d
1014+ 8C78
1015+ 8C78 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1016+ 8C79 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1017+ 8C7A C8               ret z
1018+ 8C7B
1019+ 8C7B AF               xor a
1020+ 8C7C 5F               ld e,a
1021+ 8C7D 18 ED            jr Guarda_coordenadas_X
1022+ 8C7F
# file closed: Disparo.asm
 892  8C7F              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8C7F              ; ******************************************************************************************************************************************************************************************
   2+ 8C7F              ;
   3+ 8C7F              ; 01/23
   4+ 8C7F              ;
   5+ 8C7F              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8C7F
   7+ 8C7F CD 59 8F     Draw call Prepara_draw
   8+ 8C82 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8C83 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8C84 28 05        	jr z,2F
  11+ 8C86
  12+ 8C86 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8C89 18 0C        	jr 1F
  14+ 8C8B 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8C8E 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8C91 CD 20 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8C94              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8C94 CD 9F 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8C97 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8C9A CB 6F        	bit 5,a
  21+ 8C9C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8C9E
  23+ 8C9E CD B6 8C     	call Comprueba_limite_horizontal
  24+ 8CA1 CD 46 8D     	call Comprueba_limite_vertical
  25+ 8CA4
  26+ 8CA4              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8CA4
  28+ 8CA4 CD 93 8E     3 call calcula_CColumnass
  29+ 8CA7 CD CA 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8CAA CD 1F 8F     	call Define_rutina_de_impresion
  31+ 8CAD
  32+ 8CAD 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8CB0 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8CB2 32 C9 85     	ld (Ctrl_0),a
  35+ 8CB5
  36+ 8CB5 C9           	ret
  37+ 8CB6
  38+ 8CB6              ; *******************************************************************************************************************************************************************************************
  39+ 8CB6              ;	21/01/23
  40+ 8CB6              ;
  41+ 8CB6              ; 	Comprueba_limite_horizontal.
  42+ 8CB6              ;
  43+ 8CB6              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8CB6              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8CB6              ;
  46+ 8CB6              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8CB6              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8CB6              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8CB6              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8CB6
  51+ 8CB6
  52+ 8CB6
  53+ 8CB6 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8CB9 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8CBB 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8CBD E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8CBF 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8CC2 18 09            jr 6F
  59+ 8CC4 CB 5F        1 bit 3,a
  60+ 8CC6 28 0A            jr z,2F
  61+ 8CC8 E6 F7            and $f7
  62+ 8CCA 32 C9 85         ld (Ctrl_0),a
  63+ 8CCD CD 20 8E     6 call Inicializacion
  64+ 8CD0 18 5B            jr 5F
  65+ 8CD2 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8CD3
  67+ 8CD3              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8CD3              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8CD3
  70+ 8CD3 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8CD4 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8CD7 CD 25 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8CDA 67           	ld h,a
  74+ 8CDB EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8CDC CD 25 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8CDF 67           	ld h,a
  77+ 8CE0 A7           	and a
  78+ 8CE1 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8CE3 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8CE4 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8CE7 FE 02        	cp 2
  82+ 8CE9 38 1E        	jr c,3F
  83+ 8CEB 28 1C        	jr z,3F
  84+ 8CED 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8CEE 28 23            jr z,7F
  86+ 8CF0 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8CF2 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8CF4 E1           	pop hl
  89+ 8CF5
  90+ 8CF5              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8CF5              ; _para indicar con E="2" en caso necesario.
  92+ 8CF5
  93+ 8CF5 E5               push hl
  94+ 8CF6 C5               push bc
  95+ 8CF7 CD 25 92     	call calcula_tercio
  96+ 8CFA FE 01        	cp 1
  97+ 8CFC 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8CFE CD 2E 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8D01 28 26            jr z,9F
 100+ 8D03 38 24            jr c,9F
 101+ 8D05 1E 00        11 ld e,0
 102+ 8D07 18 22            jr 8F
 103+ 8D09 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8D0A 28 07        	jr z, 7F
 105+ 8D0C 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D0E 1E 00         	ld e,0
 107+ 8D10 E1           	pop hl
 108+ 8D11 18 04        	jr 4F
 109+ 8D13 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D15 18 15            jr 10F
 111+ 8D17
 112+ 8D17              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D17              ; _para indicar con E="2" en caso necesario.
 114+ 8D17
 115+ 8D17 E5           4 push hl
 116+ 8D18 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D19 CD 25 92     	call calcula_tercio
 118+ 8D1C FE 01        	cp 1
 119+ 8D1E 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D20 CD 2E 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D23 28 04            jr z,9F
 122+ 8D25 30 02            jr nc,9F
 123+ 8D27 18 02        	jr 8F
 124+ 8D29 1E 02        9 ld e,2
 125+ 8D2B C1           8 pop bc
 126+ 8D2C E1           10 pop hl
 127+ 8D2D C9           5 ret
 128+ 8D2E
 129+ 8D2E              ; --------------------
 130+ 8D2E              ;
 131+ 8D2E              ; 25/08/22
 132+ 8D2E
 133+ 8D2E CD 25 92     Comprueba_centro call calcula_tercio
 134+ 8D31 67               ld h,a
 135+ 8D32 08           	ex af,af
 136+ 8D33 FE 02        	cp 2
 137+ 8D35 38 07        	jr c,1F
 138+ 8D37 28 05        	jr z,1F
 139+ 8D39 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D3C 18 03        	jr 2F
 141+ 8D3E 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D41 08           2 ex af,af
 143+ 8D42 A7               and a
 144+ 8D43 ED 42            sbc hl,bc
 145+ 8D45 C9               ret
 146+ 8D46
 147+ 8D46              ; *********************************************************************************************************************************************************************************************
 148+ 8D46              ;
 149+ 8D46              ;   16/8/22
 150+ 8D46              ;
 151+ 8D46              ;	Comprueba_limite_vertical
 152+ 8D46              ;
 153+ 8D46              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D46              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D46              ;
 156+ 8D46
 157+ 8D46 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D49 7D           	ld a,l
 159+ 8D4A E6 1F        	and $1F
 160+ 8D4C 57           	ld d,a
 161+ 8D4D 3A D5 85     	ld a,(Limite_vertical)
 162+ 8D50 BA           	cp d 											; Límite - Posición.
 163+ 8D51 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8D52 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8D55 CB 47        	bit 0,a
 166+ 8D57 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8D59
 168+ 8D59              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8D59
 170+ 8D59 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8D5A 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8D5C
 173+ 8D5C              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8D5C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8D5C
 176+ 8D5C 3A A1 85         ld a,(Coordenada_X)
 177+ 8D5F 16 0F            ld d,Centro_izquierda
 178+ 8D61 A7               and a
 179+ 8D62 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8D63 28 1E            jr z,3F
 181+ 8D65 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8D67              ;                                                    ; _salimos sin modificar nada.
 183+ 8D67 18 0E            jr 2F
 184+ 8D69 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8D6A 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8D6C
 187+ 8D6C              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8D6C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8D6C
 190+ 8D6C 3A A1 85         ld a,(Coordenada_X)
 191+ 8D6F 16 10            ld d,Centro_derecha
 192+ 8D71 A7               and a
 193+ 8D72 92               sub d
 194+ 8D73 28 0E            jr z,3F
 195+ 8D75 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8D77              ;                                                    ; _salimos sin modificar nada.
 197+ 8D77 CB 43        2 bit 0,e
 198+ 8D79 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8D7B C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8D7C CD 10 8E         call Modificaccionne
 201+ 8D7F C1           	pop bc
 202+ 8D80 CD 20 8E         call Inicializacion
 203+ 8D83 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8D84
 205+ 8D84              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8D84
 207+ 8D84 C5           4 push bc
 208+ 8D85 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8D88 0A           	ld a,(bc)
 210+ 8D89 3D           	dec a
 211+ 8D8A 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8D8B 7D           	ld a,l
 213+ 8D8C 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8D8D CB 47        	bit 0,a
 215+ 8D8F 28 03        	jr z,5F
 216+ 8D91 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8D92 18 2E        	jr 7F
 218+ 8D94
 219+ 8D94              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8D94
 221+ 8D94 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8D95 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8D96 3A C9 85     	ld a,(Ctrl_0)
 224+ 8D99 CB 4F        	bit 1,a
 225+ 8D9B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8D9D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8D9E
 228+ 8D9E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8D9E
 230+ 8D9E 1C               inc e
 231+ 8D9F 1D               dec e
 232+ 8DA0 20 07            jr nz,12F
 233+ 8DA2 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8DA3 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8DA4 22 9D 85     	ld (Posicion_actual),hl
 236+ 8DA7 18 44        13 jr 9F
 237+ 8DA9 CB 43        12 bit 0,e
 238+ 8DAB 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8DAD              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8DAD C1           	pop bc
 241+ 8DAE 18 D3        	jr 3B
 242+ 8DB0 80           14 add b
 243+ 8DB1 6F               ld l,a
 244+ 8DB2 22 9D 85     	ld (Posicion_actual),hl
 245+ 8DB5 CD 10 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8DB8 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8DBA E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8DBC 32 C9 85         ld (Ctrl_0),a
 249+ 8DBF F1           	pop af
 250+ 8DC0 18 2B        	jr 9F
 251+ 8DC2
 252+ 8DC2              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8DC2
 254+ 8DC2 F5           7 push af
 255+ 8DC3 3A C9 85     	ld a,(Ctrl_0)
 256+ 8DC6 CB 47        	bit 0,a
 257+ 8DC8 20 1D        	jr nz,8F
 258+ 8DCA F1           	pop af
 259+ 8DCB
 260+ 8DCB              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8DCB
 262+ 8DCB 1C           	inc e
 263+ 8DCC 1D               dec e
 264+ 8DCD 20 07            jr nz,10F
 265+ 8DCF 90           	sub b
 266+ 8DD0 6F               ld l,a
 267+ 8DD1 22 9D 85     	ld (Posicion_actual),hl
 268+ 8DD4 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8DD6              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8DD6 CB 43        10 bit 0,e
 271+ 8DD8 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8DDA              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8DDA C1           	pop bc
 274+ 8DDB 18 A6        	jr 3B
 275+ 8DDD 90           16 sub b
 276+ 8DDE 6F               ld l,a
 277+ 8DDF 22 9D 85     	ld (Posicion_actual),hl
 278+ 8DE2 CD 10 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8DE5 18 06            jr 9F
 280+ 8DE7 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8DE9 32 C9 85         ld (Ctrl_0),a
 282+ 8DEC F1           	pop af
 283+ 8DED C1           9 pop bc
 284+ 8DEE 1E 00        	ld e,0
 285+ 8DF0 CD 20 8E         call Inicializacion
 286+ 8DF3 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8DF4 08           	ex af,af
 288+ 8DF5 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8DF6 18 8B            jr 3B
 290+ 8DF8
 291+ 8DF8              ; --------------------
 292+ 8DF8
 293+ 8DF8 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8DFA CD 74 8F     1 call PreviousScan
 295+ 8DFD 10 FB            djnz 1B
 296+ 8DFF 22 9D 85     	ld (Posicion_actual),hl
 297+ 8E02 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8E03 C9           	ret
 299+ 8E04
 300+ 8E04              ; --------------------
 301+ 8E04
 302+ 8E04 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8E06 CD 65 8F     1 call NextScan
 304+ 8E09 10 FB            djnz 1B
 305+ 8E0B 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E0E AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E0F C9           	ret
 308+ 8E10
 309+ 8E10              ; --------------------
 310+ 8E10              ;
 311+ 8E10              ;	22/01/23
 312+ 8E10              ;
 313+ 8E10              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E10              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E10              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E10
 317+ 8E10
 318+ 8E10              Modificaccionne
 319+ 8E10
 320+ 8E10 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E13 FE 02        	cp 2
 322+ 8E15 CC F8 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E18 DC F8 8D         call c,Modifica_Pos_actual
 324+ 8E1B C8           	ret z
 325+ 8E1C CD 04 8E         call Modifica_Pos_actual2
 326+ 8E1F C9               ret
 327+ 8E20
 328+ 8E20              ; *************************************************************************************************************************************************************************************************
 329+ 8E20              ;
 330+ 8E20              ;	13/8/22
 331+ 8E20              ;
 332+ 8E20              ;	Inicializacion
 333+ 8E20              ;
 334+ 8E20              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E20              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E20              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E20              ;
 338+ 8E20              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E20              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E20              ;	_ desaparece/aparece.
 341+ 8E20
 342+ 8E20              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E20              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E20              ;
 345+ 8E20              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E20              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E20              ; 		   [E] ="0"
 348+ 8E20
 349+ 8E20              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E20
 351+ 8E20 CD 25 92     Inicializacion call calcula_tercio
 352+ 8E23 28 36        	jr z,primit
 353+ 8E25 E6 02        	and 2
 354+ 8E27 20 07        	jr nz,segmit
 355+ 8E29 7D           	ld a,l
 356+ 8E2A FE 7F        	cp $7f
 357+ 8E2C 38 2D        	jr c,primit
 358+ 8E2E 28 2B        	jr z,primit
 359+ 8E30 CD 8D 8E     segmit call column
 360+ 8E33 38 13        	jr c,tercuad
 361+ 8E35 3E 04        cuarcuad ld a,4
 362+ 8E37 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E3A 21 20 48     	ld hl,$4820
 364+ 8E3D 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E40 21 D5 85     	ld hl,Limite_vertical
 366+ 8E43 36 0D        	ld (hl),$0d
 367+ 8E45 08           	ex af,af
 368+ 8E46 18 3C        	jr 1F
 369+ 8E48              tercuad
 370+ 8E48 3E 03        	ld a,3
 371+ 8E4A 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E4D 21 20 48     	ld hl,$4820
 373+ 8E50 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8E53 21 D5 85     	ld hl,Limite_vertical
 375+ 8E56 36 12        	ld (hl),$12
 376+ 8E58 08           	ex af,af
 377+ 8E59 18 29        	jr 1F
 378+ 8E5B CD 8D 8E     primit call column
 379+ 8E5E 38 13        	jr c, primcuad
 380+ 8E60              segcuad
 381+ 8E60 3E 02        	ld a,2
 382+ 8E62 32 AF 85     	ld (Cuad_objeto),a
 383+ 8E65 21 C0 4F     	ld hl,$4fc0
 384+ 8E68 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8E6B 21 D5 85     	ld hl,Limite_vertical
 386+ 8E6E 36 0D        	ld (hl),$0d
 387+ 8E70 08           	ex af,af
 388+ 8E71 18 11        	jr 1F
 389+ 8E73              primcuad
 390+ 8E73 3E 01        	ld a,1
 391+ 8E75 32 AF 85     	ld (Cuad_objeto),a
 392+ 8E78 21 C0 4F     	ld hl,$4fc0
 393+ 8E7B 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8E7E 21 D5 85     	ld hl,Limite_vertical
 395+ 8E81 36 12        	ld (hl),$12
 396+ 8E83 08           	ex af,af
 397+ 8E84 CD 51 95     1 call Genera_coordenadas
 398+ 8E87 21 C9 85     	ld hl,Ctrl_0
 399+ 8E8A CB EE        	set 5,(hl)
 400+ 8E8C C9           	ret
 401+ 8E8D
 402+ 8E8D              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8E8D
 404+ 8E8D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8E8D              ;
 406+ 8E8D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8E8D
 408+ 8E8D 7D           column ld a,l
 409+ 8E8E E6 1F        	and $1f
 410+ 8E90 FE 10         	cp $10
 411+ 8E92 C9            	ret
 412+ 8E93
 413+ 8E93              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8E93              ;
 415+ 8E93              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8E93              ;
 417+ 8E93              ; 14/12/22
 418+ 8E93              ;
 419+ 8E93              ;	Modifica: A y BC.
 420+ 8E93
 421+ 8E93 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8E96 E6 01        	and 1
 423+ 8E98 28 17        	jr z,1F
 424+ 8E9A
 425+ 8E9A              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8E9A
 427+ 8E9A 3A A1 85     	ld a,(Coordenada_X)
 428+ 8E9D 47           	ld b,a
 429+ 8E9E 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8E9F 79           	ld a,c
 431+ 8EA0 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8EA1 38 08        	jr c,2F
 433+ 8EA3 47           	ld b,a
 434+ 8EA4 79           	ld a,c
 435+ 8EA5 90           	sub b
 436+ 8EA6 32 D2 85     	ld (Columnas),a
 437+ 8EA9 18 1B        	jr 4F
 438+ 8EAB 79           2 ld a,c
 439+ 8EAC 32 D2 85     	ld (Columnas),a
 440+ 8EAF 18 15        	jr 4F
 441+ 8EB1
 442+ 8EB1              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8EB1
 444+ 8EB1 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8EB4 81           	add c
 446+ 8EB5 3D           	dec a
 447+ 8EB6 D6 1F        	sub $1f
 448+ 8EB8 38 08        	jr c,3F
 449+ 8EBA 47           	ld b,a
 450+ 8EBB 79           	ld a,c
 451+ 8EBC 90           	sub b
 452+ 8EBD 32 D2 85     	ld (Columnas),a
 453+ 8EC0 18 04        	jr 4F
 454+ 8EC2 79           3 ld a,c
 455+ 8EC3 32 D2 85     	ld (Columnas),a
 456+ 8EC6 D9           4 exx
 457+ 8EC7 4F           	ld c,a
 458+ 8EC8 D9           	exx
 459+ 8EC9 C9            ret
 460+ 8ECA
 461+ 8ECA              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8ECA              ;
 463+ 8ECA              ; 7/1/23
 464+ 8ECA              ;
 465+ 8ECA              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8ECA              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8ECA              ;
 468+ 8ECA              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8ECA              ;	DESTRUYE: HL,B Y A.
 470+ 8ECA
 471+ 8ECA 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8ECD FE 02        	cp 2
 473+ 8ECF 38 18        	jr c,1F
 474+ 8ED1 28 16        	jr z,1F
 475+ 8ED3 E6 01        	and 1
 476+ 8ED5 28 0D        	jr z,3F
 477+ 8ED7
 478+ 8ED7              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8ED7
 480+ 8ED7 CD 13 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8EDA
 482+ 8EDA 7D           9 ld a,l
 483+ 8EDB E6 1F        	and $1f
 484+ 8EDD 28 2A        	jr z,7F
 485+ 8EDF 2B           	dec hl
 486+ 8EE0 10 F8        	djnz 9B
 487+ 8EE2 18 25        	jr 7F
 488+ 8EE4
 489+ 8EE4              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8EE4
 491+ 8EE4 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8EE7 18 20        	jr 7F
 493+ 8EE9
 494+ 8EE9 28 14        1 jr z,2F
 495+ 8EEB
 496+ 8EEB              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8EEB
 498+ 8EEB CD 13 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8EEE 7D           4 ld a,l
 500+ 8EEF E6 1F        	and $1f
 501+ 8EF1 28 03        	jr z,6F
 502+ 8EF3 2B           	dec hl
 503+ 8EF4 10 F8        	djnz 4B
 504+ 8EF6 06 0F        6 ld b,15
 505+ 8EF8 CD 74 8F     5 call PreviousScan
 506+ 8EFB 10 FB        	djnz 5B
 507+ 8EFD 18 0A        	jr 7F
 508+ 8EFF
 509+ 8EFF              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8EFF
 511+ 8EFF CD 13 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8F02 06 0F        	ld b,15
 513+ 8F04 CD 74 8F     8 call PreviousScan
 514+ 8F07 10 FB        	djnz 8B
 515+ 8F09
 516+ 8F09 E5           7 push hl
 517+ 8F0A DD E1        	pop ix
 518+ 8F0C
 519+ 8F0C 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F0F E5           	push hl
 521+ 8F10 FD E1        	pop iy
 522+ 8F12
 523+ 8F12 C9           	ret
 524+ 8F13
 525+ 8F13              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F13              ;
 527+ 8F13              ;	2/1/23
 528+ 8F13              ;
 529+ 8F13              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F13              ;
 531+ 8F13              ;	Tras esta rutina tenemos:
 532+ 8F13              ;
 533+ 8F13              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F13              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F13              ;
 536+ 8F13              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F13
 538+ 8F13 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F16 3A D2 85     	ld a,(Columnas)
 540+ 8F19 3D           	dec a
 541+ 8F1A 20 01        	jr nz,1F
 542+ 8F1C 3C           	inc a
 543+ 8F1D 47           1 ld b,a
 544+ 8F1E C9           	ret
 545+ 8F1F
 546+ 8F1F              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F1F              ;
 548+ 8F1F              ;	3/1/23
 549+ 8F1F              ;
 550+ 8F1F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F1F              ;
 552+ 8F1F              ;	Destruye: A,B,HL y DE.
 553+ 8F1F
 554+ 8F1F              Define_rutina_de_impresion
 555+ 8F1F
 556+ 8F1F 3A 9C 85     	ld a,(Columns)
 557+ 8F22 47           	ld b,a
 558+ 8F23 3A D2 85     	ld a,(Columnas)
 559+ 8F26 B8           	cp b
 560+ 8F27 20 0D        	jr nz,2f
 561+ 8F29
 562+ 8F29              ;	La entidad se imprime entera.
 563+ 8F29
 564+ 8F29 21 F5 8F     	ld hl, Indice_entidades_completas
 565+ 8F2C E6 01        	and 1
 566+ 8F2E 28 02        	jr z,1F
 567+ 8F30
 568+ 8F30 23           	inc hl
 569+ 8F31 23           	inc hl
 570+ 8F32
 571+ 8F32 CD B3 87     1 call Extrae_address
 572+ 8F35 C9           	ret		;	ret
 573+ 8F36
 574+ 8F36              ;	La entidad no se imprime entera en pantalla.
 575+ 8F36
 576+ 8F36 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F39 E6 01        	and 1
 578+ 8F3B 28 17        	jr z,3F
 579+ 8F3D
 580+ 8F3D              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F3D
 582+ 8F3D 21 F9 8F     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F40 3A 9C 85     4 ld a,(Columns)
 584+ 8F43 E6 01        	and 1
 585+ 8F45 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F47
 587+ 8F47 23           	inc hl
 588+ 8F48 23           	inc hl
 589+ 8F49
 590+ 8F49 3A D2 85     	ld a,(Columnas)
 591+ 8F4C E6 01        	and 1
 592+ 8F4E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8F50
 594+ 8F50 23           	inc hl
 595+ 8F51 23           	inc hl
 596+ 8F52
 597+ 8F52 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8F54
 599+ 8F54 21 FF 8F     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8F57 18 E7        	jr 4B
 601+ 8F59
 602+ 8F59              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8F59              ;
 604+ 8F59              ;	Prepara_draw
 605+ 8F59              ;
 606+ 8F59              ;	Es una rutina de carga.
 607+ 8F59              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8F59              ;
 609+ 8F59              ;	FUNCIONAMIENTO:
 610+ 8F59              ;
 611+ 8F59              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8F59              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8F59              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8F59              ;
 615+ 8F59              ;	DESTRUYE:
 616+ 8F59              ;
 617+ 8F59              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8F59
 619+ 8F59 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8F5C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8F5D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8F5E 4E           	ld c,(hl)
 623+ 8F5F 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8F62 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8F64 C9           	ret
 626+ 8F65
 627+ 8F65              ;----------------------------------------------------------------------------------------------------------------
 628+ 8F65              ;
 629+ 8F65              ;	5/08/22
 630+ 8F65              ;
 631+ 8F65              ;   NextScan.
 632+ 8F65              ;
 633+ 8F65              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8F65              ;
 635+ 8F65              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8F65              ;
 637+ 8F65              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8F65              ;
 639+ 8F65              ;       DESTRUIDOS: AF y HL !!!
 640+ 8F65              ;
 641+ 8F65              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8F65              ;
 643+ 8F65
 644+ 8F65 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8F66 7C               ld a,h
 646+ 8F67 E6 07            and 7
 647+ 8F69 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8F6A
 649+ 8F6A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8F6B C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8F6D 6F               ld l,a
 652+ 8F6E D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8F6F
 654+ 8F6F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8F70 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8F72 67               ld h,a
 657+ 8F73 C9               ret
 658+ 8F74
 659+ 8F74              ;----------------------------------------------------------------------------------------------------------------
 660+ 8F74              ;
 661+ 8F74              ;	5/08/22
 662+ 8F74              ;
 663+ 8F74              ;   PreviousScan.
 664+ 8F74              ;
 665+ 8F74              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8F74              ;
 667+ 8F74              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8F74              ;
 669+ 8F74              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8F74              ;
 671+ 8F74              ;       DESTRUIDOS: AF y HL !!!
 672+ 8F74              ;
 673+ 8F74              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8F74              ;
 675+ 8F74
 676+ 8F74 7C           PreviousScan ld a,h
 677+ 8F75 25               dec h               ; Dec H.
 678+ 8F76 E6 07            and 7
 679+ 8F78 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8F79
 681+ 8F79 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8F7A D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8F7C 6F               ld l,a
 684+ 8F7D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8F7E
 686+ 8F7E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8F7F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8F81 67               ld h,a
 689+ 8F82 C9               ret
 690+ 8F83
 691+ 8F83              ; -----------------------------------------------------------------------------------
 692+ 8F83              ;
 693+ 8F83              ;	28/2/23
 694+ 8F83              ;
 695+ 8F83              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8F83              ;	Extrae fotos de Album_de_fotos.
 697+ 8F83
 698+ 8F83 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
 699+ 8F86 A7           	and a
 700+ 8F87 C8           	ret z
 701+ 8F88 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8F8C 31 00 70     	ld sp,Album_de_fotos
 703+ 8F8F
 704+ 8F8F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8F91 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8F92 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8F93
 708+ 8F93 ED 73 E1 85  	ld (Stack_2),sp
 709+ 8F97 ED 7B DF 85  	ld sp,(Stack)
 710+ 8F9B
 711+ 8F9B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8F9B
 713+ 8F9B 3E CD        	ld a,$cd
 714+ 8F9D 32 A5 8F     	ld (Imprime),a
 715+ 8FA0 EB           	ex de,hl
 716+ 8FA1 22 A6 8F     	ld (Imprime+1),hl
 717+ 8FA4 EB           	ex de,hl
 718+ 8FA5
 719+ 8FA5              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8FA5
 721+ 8FA5 00 00 00     Imprime db 0,0,0
 722+ 8FA8
 723+ 8FA8 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8FAB 3D           	dec a
 725+ 8FAC 28 09        	jr z,1F
 726+ 8FAE 32 DE 85      	ld (Numero_de_malotes),a
 727+ 8FB1
 728+ 8FB1 ED 7B E1 85   	ld sp,(Stack_2)
 729+ 8FB5 18 D8        	jr 2B
 730+ 8FB7
 731+ 8FB7 AF           1 xor a
 732+ 8FB8 32 E1 85     	ld (Stack_2),a
 733+ 8FBB C9           	ret
 734+ 8FBC
 735+ 8FBC              ; -----------------------------------------------------------------------------------
 736+ 8FBC              ;
 737+ 8FBC              ;	28/2/23
 738+ 8FBC              ;
 739+ 8FBC              ;	Pinta los disparos generados.
 740+ 8FBC
 741+ 8FBC              Extrae_foto_disparos
 742+ 8FBC
 743+ 8FBC 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 8FBF A7           	and a
 745+ 8FC0 C8           	ret z
 746+ 8FC1 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 8FC5 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 8FC8
 749+ 8FC8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 8FCA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 8FCB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 8FCC
 753+ 8FCC ED 73 E1 85  	ld (Stack_2),sp
 754+ 8FD0 ED 7B DF 85  	ld sp,(Stack)
 755+ 8FD4
 756+ 8FD4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 8FD4
 758+ 8FD4 3E CD        	ld a,$cd
 759+ 8FD6 32 DE 8F     	ld (Imprime2),a
 760+ 8FD9 EB           	ex de,hl
 761+ 8FDA 22 DF 8F     	ld (Imprime2+1),hl
 762+ 8FDD EB           	ex de,hl
 763+ 8FDE
 764+ 8FDE              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 8FDE
 766+ 8FDE 00 00 00     Imprime2 db 0,0,0
 767+ 8FE1
 768+ 8FE1 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 8FE4 3D           	dec a
 770+ 8FE5 28 09        	jr z,1F
 771+ 8FE7 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 8FEA
 773+ 8FEA ED 7B E1 85  	ld sp,(Stack_2)
 774+ 8FEE 18 D8        	jr 2B
 775+ 8FF0
 776+ 8FF0 AF           1 xor a
 777+ 8FF1 32 E1 85     	ld (Stack_2),a
 778+ 8FF4 C9           	ret
 779+ 8FF5
# file closed: Draw_XOR.asm
 893  8FF5              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 8FF5              ;   índices de Rutinas de impresión.
   2+ 8FF5
   3+ 8FF5 05 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 8FF7 32 90            defw Pinta_Amadeus_3x2
   5+ 8FF9
   6+ 8FF9 88 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 8FFB 28 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 8FFD DC 90            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 8FFF
  10+ 8FFF B2 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9001 B6 91            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9003 6A 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9005
  14+ 9005
  15+ 9005              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9005              ;
  17+ 9005              ;   12/12/22
  18+ 9005              ;
  19+ 9005              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9005              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9005              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9005              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9005              ;
  24+ 9005              ;   Modifica: DE y HL.
  25+ 9005
  26+ 9005 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9009 FD F9        	ld sp,iy
  28+ 900B 06 10            ld b,16
  29+ 900D D1           1 pop de
  30+ 900E 7B               ld a,e
  31+ 900F AE               xor (hl)
  32+ 9010 77           	ld (hl),a
  33+ 9011 23           	inc hl
  34+ 9012 7A               ld a,d
  35+ 9013 AE               xor (hl)
  36+ 9014 77           	ld (hl),a
  37+ 9015 2B           	dec hl
  38+ 9016 24           	inc h
  39+ 9017 7C               ld a,h
  40+ 9018 E6 07            and 7
  41+ 901A 20 0A            jr nz,2F
  42+ 901C 7D               ld a,l
  43+ 901D C6 20            add a,$20
  44+ 901F 6F               ld l,a
  45+ 9020 38 04            jr c,2F
  46+ 9022 7C               ld a,h
  47+ 9023 D6 08            sub 8
  48+ 9025 67               ld h,a
  49+ 9026 7C           2 ld a,h
  50+ 9027 FE 58            cp $58
  51+ 9029 28 02            jr z,3F
  52+ 902B 10 E0            djnz 1B
  53+ 902D ED 7B DF 85  3 ld sp,(Stack)
  54+ 9031 C9           	ret
  55+ 9032
  56+ 9032 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9036 FD F9        	ld sp,iy
  58+ 9038 06 08            ld b,8
  59+ 903A D1           1 pop de
  60+ 903B 7B               ld a,e
  61+ 903C AE               xor (hl)
  62+ 903D 77           	ld (hl),a
  63+ 903E 23           	inc hl
  64+ 903F 7A               ld a,d
  65+ 9040 AE               xor (hl)
  66+ 9041 77           	ld (hl),a
  67+ 9042 23           	inc hl
  68+ 9043 D1           	pop de
  69+ 9044 7B               ld a,e
  70+ 9045 AE               xor (hl)
  71+ 9046 77           	ld (hl),a
  72+ 9047 2B           	dec hl
  73+ 9048 2B           	dec hl
  74+ 9049 24           	inc h
  75+ 904A 7C               ld a,h
  76+ 904B E6 07            and 7
  77+ 904D 20 0A            jr nz,2F
  78+ 904F 7D               ld a,l
  79+ 9050 C6 20            add a,$20
  80+ 9052 6F               ld l,a
  81+ 9053 38 04            jr c,2F
  82+ 9055 7C               ld a,h
  83+ 9056 D6 08            sub 8
  84+ 9058 67               ld h,a
  85+ 9059 7C           2 ld a,h
  86+ 905A FE 58            cp $58
  87+ 905C 28 25            jr z,4F
  88+ 905E 7A               ld a,d
  89+ 905F AE               xor (hl)
  90+ 9060 77               ld (hl),a
  91+ 9061 D1           	pop de
  92+ 9062 23           	inc hl
  93+ 9063 7B               ld a,e
  94+ 9064 AE               xor (hl)
  95+ 9065 77           	ld (hl),a
  96+ 9066 23           	inc hl
  97+ 9067 7A               ld a,d
  98+ 9068 AE               xor (hl)
  99+ 9069 77           	ld (hl),a
 100+ 906A 2B           	dec hl
 101+ 906B 2B           	dec hl
 102+ 906C 24           	inc h
 103+ 906D 7C               ld a,h
 104+ 906E E6 07            and 7
 105+ 9070 20 0A            jr nz,3F
 106+ 9072 7D               ld a,l
 107+ 9073 C6 20            add a,$20
 108+ 9075 6F               ld l,a
 109+ 9076 38 04            jr c,3F
 110+ 9078 7C               ld a,h
 111+ 9079 D6 08            sub 8
 112+ 907B 67               ld h,a
 113+ 907C 7C           3 ld a,h
 114+ 907D FE 58            cp $58
 115+ 907F 28 02            jr z,4F
 116+ 9081 10 B7            djnz 1B
 117+ 9083 ED 7B DF 85  4 ld sp,(Stack)
 118+ 9087 C9           	ret
 119+ 9088
 120+ 9088              ; ---------------------------------------------------
 121+ 9088
 122+ 9088 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 908C FD F9        	ld sp,iy
 124+ 908E
 125+ 908E              ; >>>
 126+ 908E
 127+ 908E 06 10            ld b,16
 128+ 9090 D1           1 pop de
 129+ 9091 7A           	ld a,d
 130+ 9092 AE           	xor (hl)
 131+ 9093 77           	ld (hl),a
 132+ 9094 24           	inc h
 133+ 9095 7C               ld a,h
 134+ 9096 E6 07            and 7
 135+ 9098 20 0C            jr nz,2F
 136+ 909A 7D               ld a,l
 137+ 909B C6 20            add a,$20
 138+ 909D 6F               ld l,a
 139+ 909E 38 06            jr c,2F
 140+ 90A0 7C               ld a,h
 141+ 90A1 D6 08            sub 8
 142+ 90A3 67               ld h,a
 143+ 90A4 18 00            jr 2F
 144+ 90A6 7C           2 ld a,h
 145+ 90A7 FE 58            cp $58
 146+ 90A9 28 02            jr z,3F
 147+ 90AB 10 E3            djnz 1B
 148+ 90AD ED 7B DF 85  3 ld sp,(Stack)
 149+ 90B1 C9           	ret
 150+ 90B2
 151+ 90B2 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 90B6 FD F9        	ld sp,iy
 153+ 90B8
 154+ 90B8              ; >>>
 155+ 90B8
 156+ 90B8 06 10            ld b,16
 157+ 90BA D1           1 pop de
 158+ 90BB 7B           	ld a,e
 159+ 90BC AE           	xor (hl)
 160+ 90BD 77           	ld (hl),a
 161+ 90BE 24           	inc h
 162+ 90BF 7C               ld a,h
 163+ 90C0 E6 07            and 7
 164+ 90C2 20 0C            jr nz,2F
 165+ 90C4 7D               ld a,l
 166+ 90C5 C6 20            add a,$20
 167+ 90C7 6F               ld l,a
 168+ 90C8 38 06            jr c,2F
 169+ 90CA 7C               ld a,h
 170+ 90CB D6 08            sub 8
 171+ 90CD 67               ld h,a
 172+ 90CE 18 00            jr 2F
 173+ 90D0 7C           2 ld a,h
 174+ 90D1 FE 58            cp $58
 175+ 90D3 28 02            jr z,3F
 176+ 90D5 10 E3            djnz 1B
 177+ 90D7 ED 7B DF 85  3 ld sp,(Stack)
 178+ 90DB C9           	ret
 179+ 90DC
 180+ 90DC              ; ---------------------------------------------------
 181+ 90DC
 182+ 90DC ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 90E0 FD F9        	ld sp,iy
 184+ 90E2 06 08            ld b,8
 185+ 90E4 D1           1 pop de
 186+ 90E5 7A           	ld a,d
 187+ 90E6 AE           	xor (hl)
 188+ 90E7 77           	ld (hl),a
 189+ 90E8 23           	inc hl
 190+ 90E9 D1           	pop de
 191+ 90EA 7B           	ld a,e
 192+ 90EB AE           	xor (hl)
 193+ 90EC 77           	ld (hl),a
 194+ 90ED 2B           	dec hl
 195+ 90EE 24            	inc h
 196+ 90EF 7C               ld a,h
 197+ 90F0 E6 07            and 7
 198+ 90F2 20 0A            jr nz,2F
 199+ 90F4 7D               ld a,l
 200+ 90F5 C6 20            add a,$20
 201+ 90F7 6F               ld l,a
 202+ 90F8 38 04            jr c,2F
 203+ 90FA 7C               ld a,h
 204+ 90FB D6 08            sub 8
 205+ 90FD 67               ld h,a
 206+ 90FE 7C           2 ld a,h
 207+ 90FF FE 58            cp $58
 208+ 9101 28 20            jr z,4F
 209+ 9103 D1               pop de
 210+ 9104 7B           	ld a,e
 211+ 9105 AE           	xor (hl)
 212+ 9106 77           	ld (hl),a
 213+ 9107 23           	inc hl
 214+ 9108 7A           	ld a,d
 215+ 9109 AE           	xor (hl)
 216+ 910A 77           	ld (hl),a
 217+ 910B 2B           	dec hl
 218+ 910C 24           	inc h
 219+ 910D 7C               ld a,h
 220+ 910E E6 07            and 7
 221+ 9110 20 0A            jr nz,3F
 222+ 9112 7D               ld a,l
 223+ 9113 C6 20            add a,$20
 224+ 9115 6F               ld l,a
 225+ 9116 38 04            jr c,3F
 226+ 9118 7C               ld a,h
 227+ 9119 D6 08            sub 8
 228+ 911B 67               ld h,a
 229+ 911C 7C           3 ld a,h
 230+ 911D FE 58            cp $58
 231+ 911F 28 02            jr z,4F
 232+ 9121 10 C1            djnz 1B
 233+ 9123 ED 7B DF 85  4 ld sp,(Stack)
 234+ 9127 C9           	ret
 235+ 9128
 236+ 9128 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 912C FD F9        	ld sp,iy
 238+ 912E 06 08            ld b,8
 239+ 9130 D1           1 pop de
 240+ 9131 D1           	pop de
 241+ 9132 7B           	ld a,e
 242+ 9133 AE           	xor (hl)
 243+ 9134 77           	ld (hl),a
 244+ 9135 24            	inc h
 245+ 9136 7C               ld a,h
 246+ 9137 E6 07            and 7
 247+ 9139 20 0A            jr nz,2F
 248+ 913B 7D               ld a,l
 249+ 913C C6 20            add a,$20
 250+ 913E 6F               ld l,a
 251+ 913F 38 04            jr c,2F
 252+ 9141 7C               ld a,h
 253+ 9142 D6 08            sub 8
 254+ 9144 67               ld h,a
 255+ 9145 7C           2 ld a,h
 256+ 9146 FE 58            cp $58
 257+ 9148 28 1B            jr z,4F
 258+ 914A D1               pop de
 259+ 914B 7A           	ld a,d
 260+ 914C AE           	xor (hl)
 261+ 914D 77           	ld (hl),a
 262+ 914E 24           	inc h
 263+ 914F 7C               ld a,h
 264+ 9150 E6 07            and 7
 265+ 9152 20 0A            jr nz,3F
 266+ 9154 7D               ld a,l
 267+ 9155 C6 20            add a,$20
 268+ 9157 6F               ld l,a
 269+ 9158 38 04            jr c,3F
 270+ 915A 7C               ld a,h
 271+ 915B D6 08            sub 8
 272+ 915D 67               ld h,a
 273+ 915E 7C           3 ld a,h
 274+ 915F FE 58            cp $58
 275+ 9161 28 02            jr z,4F
 276+ 9163 10 CB            djnz 1B
 277+ 9165 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9169 C9           	ret
 279+ 916A
 280+ 916A ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 916E FD F9        	ld sp,iy
 282+ 9170 06 08            ld b,8
 283+ 9172 D1           1 pop de
 284+ 9173 7B           	ld a,e
 285+ 9174 AE           	xor (hl)
 286+ 9175 77           	ld (hl),a
 287+ 9176 23           	inc hl
 288+ 9177 7A           	ld a,d
 289+ 9178 AE           	xor (hl)
 290+ 9179 77           	ld (hl),a
 291+ 917A 2B           	dec hl
 292+ 917B 24             	inc h
 293+ 917C 7C               ld a,h
 294+ 917D E6 07            and 7
 295+ 917F 20 0A            jr nz,2F
 296+ 9181 7D               ld a,l
 297+ 9182 C6 20            add a,$20
 298+ 9184 6F               ld l,a
 299+ 9185 38 04            jr c,2F
 300+ 9187 7C               ld a,h
 301+ 9188 D6 08            sub 8
 302+ 918A 67               ld h,a
 303+ 918B 7C           2 ld a,h
 304+ 918C FE 58            cp $58
 305+ 918E 28 21            jr z,4F
 306+ 9190 D1               pop de
 307+ 9191 7A           	ld a,d
 308+ 9192 AE           	xor (hl)
 309+ 9193 77           	ld (hl),a
 310+ 9194 23           	inc hl
 311+ 9195 D1               pop de
 312+ 9196 7B           	ld a,e
 313+ 9197 AE           	xor (hl)
 314+ 9198 77           	ld (hl),a
 315+ 9199 2B           	dec hl
 316+ 919A 24           	inc h
 317+ 919B 7C               ld a,h
 318+ 919C E6 07            and 7
 319+ 919E 20 0A            jr nz,3F
 320+ 91A0 7D               ld a,l
 321+ 91A1 C6 20            add a,$20
 322+ 91A3 6F               ld l,a
 323+ 91A4 38 04            jr c,3F
 324+ 91A6 7C               ld a,h
 325+ 91A7 D6 08            sub 8
 326+ 91A9 67               ld h,a
 327+ 91AA 7C           3 ld a,h
 328+ 91AB FE 58            cp $58
 329+ 91AD 28 02            jr z,4F
 330+ 91AF 10 C1            djnz 1B
 331+ 91B1 ED 7B DF 85  4 ld sp,(Stack)
 332+ 91B5 C9           	ret
 333+ 91B6
 334+ 91B6 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 91BA FD F9        	ld sp,iy
 336+ 91BC 06 08            ld b,8
 337+ 91BE D1           1 pop de
 338+ 91BF 7B           	ld a,e
 339+ 91C0 AE           	xor (hl)
 340+ 91C1 77           	ld (hl),a
 341+ 91C2 24            	inc h
 342+ 91C3 7C               ld a,h
 343+ 91C4 E6 07            and 7
 344+ 91C6 20 0A            jr nz,2F
 345+ 91C8 7D               ld a,l
 346+ 91C9 C6 20            add a,$20
 347+ 91CB 6F               ld l,a
 348+ 91CC 38 04            jr c,2F
 349+ 91CE 7C               ld a,h
 350+ 91CF D6 08            sub 8
 351+ 91D1 67               ld h,a
 352+ 91D2 7C           2 ld a,h
 353+ 91D3 FE 58            cp $58
 354+ 91D5 28 1C            jr z,4F
 355+ 91D7 D1               pop de
 356+ 91D8 7A           	ld a,d
 357+ 91D9 AE           	xor (hl)
 358+ 91DA 77           	ld (hl),a
 359+ 91DB 24           	inc h
 360+ 91DC 7C               ld a,h
 361+ 91DD E6 07            and 7
 362+ 91DF 20 0A            jr nz,3F
 363+ 91E1 7D               ld a,l
 364+ 91E2 C6 20            add a,$20
 365+ 91E4 6F               ld l,a
 366+ 91E5 38 04            jr c,3F
 367+ 91E7 7C               ld a,h
 368+ 91E8 D6 08            sub 8
 369+ 91EA 67               ld h,a
 370+ 91EB 7C           3 ld a,h
 371+ 91EC FE 58            cp $58
 372+ 91EE 28 03            jr z,4F
 373+ 91F0 D1               pop de
 374+ 91F1 10 CB            djnz 1B
 375+ 91F3 ED 7B DF 85  4 ld sp,(Stack)
 376+ 91F7 C9           	ret
 377+ 91F8
 378+ 91F8              ; ---------------------------------------------------
 379+ 91F8              ;
 380+ 91F8              ;   27/02/23
 381+ 91F8              ;
 382+ 91F8              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 91F8              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 91F8              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 91F8
 386+ 91F8 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 91FC FD F9            ld sp,iy
 388+ 91FE 06 02            ld b,2
 389+ 9200 D1           1 pop de
 390+ 9201 7B               ld a,e
 391+ 9202 AE               xor (hl)
 392+ 9203 77               ld (hl),a
 393+ 9204 23               inc hl
 394+ 9205 7A               ld a,d
 395+ 9206 AE               xor (hl)
 396+ 9207 77               ld (hl),a
 397+ 9208 2B               dec hl
 398+ 9209
 399+ 9209 24               inc h
 400+ 920A 7C               ld a,h
 401+ 920B E6 07            and 7
 402+ 920D 20 0A            jr nz,2F
 403+ 920F 7D               ld a,l
 404+ 9210 C6 20            add a,$20
 405+ 9212 6F               ld l,a
 406+ 9213 38 04            jr c,2F
 407+ 9215 7C               ld a,h
 408+ 9216 D6 08            sub 8
 409+ 9218 67               ld h,a
 410+ 9219 7C           2 ld a,h
 411+ 921A FE 58            cp $58
 412+ 921C 28 02            jr z,3F
 413+ 921E
 414+ 921E 10 E0            djnz 1B
 415+ 9220 ED 7B DF 85  3 ld sp,(Stack)
 416+ 9224 C9               ret
 417+ 9225
# file closed: Rutinas_de_impresion_sprites.asm
 894  9225              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9225              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9225              ;
   3+ 9225              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9225              ;
   5+ 9225              ; *****************************************************************************************************************************************************************************************
   6+ 9225              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9225
   8+ 9225 7C           calcula_tercio ld a,h
   9+ 9226 E6 18        	and $18
  10+ 9228 CB 2F        	sra a
  11+ 922A CB 2F        	sra a
  12+ 922C CB 2F        	sra a
  13+ 922E C9           	ret
  14+ 922F
# file closed: calcula_tercio.asm
 895  922F              	include "Cls.asm"
# file opened: Cls.asm
   1+ 922F              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 922F              ;
   3+ 922F              ;
   4+ 922F              ;	CLS.
   5+ 922F              ;
   6+ 922F              ;	Limpia la pantalla y define sus atributos.
   7+ 922F              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 922F              ;
   9+ 922F              ;	COLORES: 0 ..... NEGRO
  10+ 922F              ;    		 1 ..... AZUL
  11+ 922F              ; 			 2 ..... ROJO
  12+ 922F              ;			 3 ..... MAGENTA
  13+ 922F              ; 			 4 ..... VERDE
  14+ 922F              ; 			 5 ..... CIAN
  15+ 922F              ;			 6 ..... AMARILLO
  16+ 922F              ; 			 7 ..... BLANCO
  17+ 922F              ;
  18+ 922F              ;	INPUT: A contiene los atributos de pantalla.
  19+ 922F              ;
  20+ 922F              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 922F
  22+ 922F
  23+ 922F 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9232 11 01 40     	LD DE,$4001
  25+ 9235 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9238 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 923A ED B0        	LDIR
  28+ 923C 01 FF 02     	LD BC,767
  29+ 923F 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9240 ED B0        	LDIR
  31+ 9242 C9           	ret
  32+ 9243
# file closed: Cls.asm
 896  9243              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9243              ; ******************************************************************************************************************************************************************************************
   2+ 9243              ;
   3+ 9243              ;   22/01/23
   4+ 9243              ;
   5+ 9243              ;	Mov_down
   6+ 9243              ;
   7+ 9243              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9243              ;
   9+ 9243              ;
  10+ 9243 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9246 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9248              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9248              ; 																	; _ en el caso de que no lo haya.
  14+ 9248 3A B3 85     	ld a,(Vel_down)
  15+ 924B 47           	ld b,a
  16+ 924C 2A 9D 85         ld hl,(Posicion_actual)
  17+ 924F CD 25 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9252 E6 02        	and 2
  19+ 9254 28 0F        	jr z,1F
  20+ 9256
  21+ 9256              ; Nos encontramos en el último tercio de pantalla.
  22+ 9256              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9256
  24+ 9256 7C           	ld a,h
  25+ 9257 FE 57        	cp $57
  26+ 9259 20 0A        	jr nz,1F
  27+ 925B 7D           	ld a,l
  28+ 925C C6 20        	add $20
  29+ 925E 30 05        	jr nc,1F
  30+ 9260
  31+ 9260              ; ------------------------------
  32+ 9260 CD 3B 95     	call Reaparece_arriba
  33+ 9263              ;	call Reinicio
  34+ 9263              ; ------------------------------
  35+ 9263
  36+ 9263 18 08        	jr 3F
  37+ 9265 CD 65 8F     1 call NextScan
  38+ 9268 22 9D 85     	ld (Posicion_actual),hl
  39+ 926B 10 E2            djnz 2B
  40+ 926D CD 51 95     3 call Genera_coordenadas
  41+ 9270 C9           	ret
  42+ 9271
  43+ 9271              ; ******************************************************************************************************************************************************************************************
  44+ 9271              ;
  45+ 9271              ;   22/01/23
  46+ 9271              ;
  47+ 9271              ;	Mov_up
  48+ 9271              ;
  49+ 9271              ; 	Mueve el Sprite hacia arriba.
  50+ 9271              ;
  51+ 9271              ;
  52+ 9271 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9274 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9276              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9276              ; 																		; _ en el caso de que no lo haya.
  56+ 9276 3A B2 85     	ld a,(Vel_up)
  57+ 9279 47           	ld b,a
  58+ 927A 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 927D CD 25 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9280 A7           	and a
  61+ 9281 20 10        	jr nz,1F
  62+ 9283
  63+ 9283              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9283              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9283
  66+ 9283 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9284 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9286 20 0B            jr nz,1F
  69+ 9288 7D               ld a,l
  70+ 9289 D6 20            sub $20
  71+ 928B 30 06            jr nc,1F
  72+ 928D 25               dec h
  73+ 928E
  74+ 928E              ; -----------------------------
  75+ 928E CD 2B 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9291              ;	call Reinicio
  77+ 9291              ; -----------------------------
  78+ 9291
  79+ 9291 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9293 CD 74 8F     1 call PreviousScan
  81+ 9296 22 9D 85     	ld (Posicion_actual),hl
  82+ 9299 10 E2            djnz 3B
  83+ 929B CD 51 95     2 call Genera_coordenadas
  84+ 929E C9           	ret
  85+ 929F
  86+ 929F              ; ******************************************************************************************************************************************************************************************
  87+ 929F              ;
  88+ 929F              ;	19/10/22
  89+ 929F              ;
  90+ 929F              ;	Mov_right.
  91+ 929F              ;
  92+ 929F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 929F              ;
  94+ 929F
  95+ 929F 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 92A2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 92A4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 92A4              ; 																	; _ en el caso de que no lo haya.
  99+ 92A4 3A C9 85     	ld a,(Ctrl_0)
 100+ 92A7 CB 77        	bit 6,a
 101+ 92A9 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 92AB
 103+ 92AB CD D9 94     	call Stop_Amadeus_right
 104+ 92AE C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 92AF 18 4D        	jr 8F
 106+ 92B1
 107+ 92B1 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 92B4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 92B6 20 46        	jr nz,8F
 110+ 92B8
 111+ 92B8 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 92BB A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 92BC 28 40        	jr z,8F
 114+ 92BE
 115+ 92BE              ; ---------- ---------- ----------
 116+ 92BE              ;
 117+ 92BE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 92BE
 119+ 92BE 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 92C1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 92C3 28 11        	jr z,1F
 122+ 92C5 38 06        	jr c,6F
 123+ 92C7 FE 04        	cp 4
 124+ 92C9 28 14        	jr z,7F
 125+ 92CB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 92CD
 127+ 92CD              ; ---------- ---------- ----------
 128+ 92CD              ;
 129+ 92CD              ; Perfiles de velocidad
 130+ 92CD              ;
 131+ 92CD
 132+ 92CD 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 92D0 FE FE        	cp $fe
 134+ 92D2 20 2A        	jr nz,8F
 135+ 92D4 18 10        	jr 3F
 136+ 92D6 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 92D9 FE FD        	cp $fd
 138+ 92DB 20 21        	jr nz,8F
 139+ 92DD 18 07        	jr 3F
 140+ 92DF 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 92E2 FE FB        	cp $fb
 142+ 92E4 20 18        	jr nz,8F
 143+ 92E6
 144+ 92E6              ; ---------- ---------- ----------
 145+ 92E6
 146+ 92E6              3
 147+ 92E6 CD 19 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 92E9              ;	call Reinicio
 149+ 92E9
 150+ 92E9              ; ---------- ---------- ----------
 151+ 92E9              ;
 152+ 92E9              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 92E9
 154+ 92E9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 92EB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 92EC CD 05 93     	call DESPLZ_DER
 157+ 92EF C1           	pop bc
 158+ 92F0 10 F9        	djnz 5B
 159+ 92F2 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 92F5 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 92F6 22 9D 85     	ld (Posicion_actual),hl
 162+ 92F9 CD 51 95     	call Genera_coordenadas
 163+ 92FC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 92FE
 165+ 92FE              ; ---------- ---------- ----------
 166+ 92FE
 167+ 92FE 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 9301 CD 05 93     	call DESPLZ_DER
 169+ 9304 C9           2 ret
 170+ 9305
 171+ 9305              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9305              ;
 173+ 9305              ;	22/9/22
 174+ 9305              ;
 175+ 9305
 176+ 9305 CD 14 93     DESPLZ_DER call Desplaza_derecha
 177+ 9308 CD 60 93         call modifica_parametros_1er_DESPLZ_2
 178+ 930B CD 89 93         call Ciclo_completo
 179+ 930E 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9311 CB FE        	set 7,(hl)
 181+ 9313 C9           	ret
 182+ 9314
 183+ 9314              ; ******************************************************************************************************************************************************************************************
 184+ 9314              ;	15/02/23
 185+ 9314              ;
 186+ 9314
 187+ 9314 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9317 47           	ld b,a
 189+ 9318 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 931B 23           1 inc hl
 191+ 931C 23           	inc hl
 192+ 931D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 931F 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9322 CD B3 87     	call Extrae_address
 195+ 9325 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9328
 197+ 9328              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9328
 199+ 9328              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9328              ; Cuántos movimientos hemos hecho ??
 201+ 9328              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9328
 203+ 9328 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 932B EB           	ex de,hl
 205+ 932C A7           	and a
 206+ 932D ED 52        	sbc hl,de
 207+ 932F CB 3D        	srl l
 208+ 9331 3E 08        6 ld a,8
 209+ 9333 95           	sub l
 210+ 9334 30 1E        	jr nc,3F
 211+ 9336
 212+ 9336              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9336              ; B="0".
 214+ 9336
 215+ 9336 04           4 inc b
 216+ 9337 3C           	inc a
 217+ 9338 20 FC        	jr nz,4B
 218+ 933A 78           	ld a,b
 219+ 933B 08           	ex af,af
 220+ 933C 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 933F 23           5 inc hl
 222+ 9340 23           	inc hl
 223+ 9341 10 FC        	djnz 5B
 224+ 9343 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9346 CD B3 87     	call Extrae_address
 226+ 9349 22 9F 85     	ld (Puntero_objeto),hl
 227+ 934C
 228+ 934C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 934C              ; _(Posicion_actual).
 230+ 934C
 231+ 934C 21 9D 85     	ld hl,Posicion_actual
 232+ 934F 34           	inc (hl)
 233+ 9350 08               ex af,af
 234+ 9351 6F           	ld l,a
 235+ 9352 18 DD        	jr 6B
 236+ 9354
 237+ 9354              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9354
 239+ 9354 47           3 ld b,a
 240+ 9355 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9358 23           2 inc hl
 242+ 9359 23           	inc hl
 243+ 935A 10 FC        	djnz 2B
 244+ 935C 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 935F C9           8 ret
 246+ 9360
 247+ 9360              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 9360              ;
 249+ 9360              ;	24/7/22
 250+ 9360              ;
 251+ 9360              ;	modifica_parametros_1er_DESPLZ_2
 252+ 9360              ;
 253+ 9360              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 9360              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 9360              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 9360
 257+ 9360 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9363 A7           	and a
 259+ 9364 20 1F        	jr nz,1F
 260+ 9366 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9368 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 936B
 263+ 936B 21 9C 85     	ld hl,Columns
 264+ 936E 34           	inc (hl)
 265+ 936F 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9372 E6 01        	and 1
 267+ 9374 28 0F        	jr z,1F
 268+ 9376 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9379 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 937A 22 9D 85     	ld (Posicion_actual),hl
 271+ 937D CD 51 95     	call Genera_coordenadas
 272+ 9380 CD E5 94     	call Inc_CTRL_DESPLZ
 273+ 9383 18 03        	jr 2F
 274+ 9385 CD E5 94     1 call Inc_CTRL_DESPLZ
 275+ 9388 C9           2 ret
 276+ 9389
 277+ 9389              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9389              ;
 279+ 9389              ;	24/7/22
 280+ 9389              ;
 281+ 9389              ;	Ciclo_completo.
 282+ 9389              ;
 283+ 9389              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9389              ;
 285+ 9389              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9389              ; 	Decrementamos (Columns).
 287+ 9389              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9389              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9389
 290+ 9389
 291+ 9389 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 938C FE FF        	cp $ff
 293+ 938E 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9390 E6 F0        	and $f0
 295+ 9392 20 28        	jr nz,3F
 296+ 9394
 297+ 9394              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9394
 299+ 9394 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9397 47           	ld b,a
 301+ 9398 3E F8        	ld a,$f8
 302+ 939A 80           	add b
 303+ 939B 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 939E 18 1C        	jr 3F
 305+ 93A0 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 93A3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 93A4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 93A5 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 93A8 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 93AB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 93AD 20 0A        	jr nz,2F
 312+ 93AF 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 93B2 23           	inc hl
 314+ 93B3 22 9D 85     	ld (Posicion_actual),hl
 315+ 93B6 CD 51 95     	call Genera_coordenadas
 316+ 93B9
 317+ 93B9              ; Inicia el puntero de Sprite.
 318+ 93B9
 319+ 93B9 CD CA 87     2 call Inicia_puntero_objeto_der
 320+ 93BC C9           3 ret
 321+ 93BD
 322+ 93BD              ; ******************************************************************************************************************************************************************************************
 323+ 93BD              ;
 324+ 93BD              ;	15/02/23
 325+ 93BD              ;
 326+ 93BD              ;	Mov_left.
 327+ 93BD              ;
 328+ 93BD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 93BD              ;
 330+ 93BD              Mov_left
 331+ 93BD
 332+ 93BD 21 C9 85     	ld hl,Ctrl_0
 333+ 93C0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 93C2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 93C2              ; 																	; _ en el caso de que no lo haya.
 336+ 93C2 3A C9 85     	ld a,(Ctrl_0)
 337+ 93C5 CB 77        	bit 6,a
 338+ 93C7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 93C9
 340+ 93C9 CD DF 94     	call Stop_Amadeus_left
 341+ 93CC C8           	ret z
 342+ 93CD 20 4A        	jr nz,8F
 343+ 93CF
 344+ 93CF 3A A1 85     11 ld a,(Coordenada_X)
 345+ 93D2 A7           	and a
 346+ 93D3 20 44        	jr nz,8F
 347+ 93D5
 348+ 93D5 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 93D8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 93D9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 93DB
 352+ 93DB              ; ---------- ---------- ----------
 353+ 93DB
 354+ 93DB 3A B0 85     	ld a,(Vel_left)
 355+ 93DE FE 02        	cp 2
 356+ 93E0 28 0F        	jr z,1F
 357+ 93E2 38 04        	jr c,6F
 358+ 93E4 FE 04        	cp 4
 359+ 93E6 28 12        	jr z,7F
 360+ 93E8
 361+ 93E8              ; ---------- ---------- ----------
 362+ 93E8
 363+ 93E8 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 93EB FE F9        	cp $f9
 365+ 93ED 20 2A        	jr nz,8F
 366+ 93EF 18 10        	jr 4F
 367+ 93F1 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 93F4 FE FA        	cp $fa
 369+ 93F6 20 21        	jr nz,8F
 370+ 93F8 18 07        	jr 4F
 371+ 93FA 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 93FD FE FC        	cp $fc
 373+ 93FF 20 18        	jr nz,8F
 374+ 9401
 375+ 9401              ; ---------- ---------- ----------
 376+ 9401
 377+ 9401              4
 378+ 9401 CD 07 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9404              ;	call Reinicio
 380+ 9404
 381+ 9404              ; ---------- ---------- ----------
 382+ 9404
 383+ 9404 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9406 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9407
 386+ 9407              ;	ld hl,(Indice_Sprite_izq)
 387+ 9407              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9407
 389+ 9407 CD 20 94     	call DESPLZ_IZQ
 390+ 940A C1           	pop bc
 391+ 940B 10 F9        	djnz 5B
 392+ 940D 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9410 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9411 22 9D 85     	ld (Posicion_actual),hl
 395+ 9414 CD 51 95     	call Genera_coordenadas
 396+ 9417 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9419
 398+ 9419              ; ---------- ---------- ----------
 399+ 9419
 400+ 9419              ; Movemos, no hay recolocación.
 401+ 9419
 402+ 9419 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 941C CD 20 94     	call DESPLZ_IZQ
 404+ 941F C9           2 ret
 405+ 9420
 406+ 9420              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9420              ;
 408+ 9420              ;	22/9/22
 409+ 9420
 410+ 9420              DESPLZ_IZQ
 411+ 9420
 412+ 9420 CD 2F 94     	call Desplaza_izquierda
 413+ 9423 CD 7B 94         call modifica_parametros_1er_DESPLZ
 414+ 9426 CD A3 94     	call Ciclo_completo_2
 415+ 9429 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 942C CB BE        	res 7,(hl)
 417+ 942E C9           	ret
 418+ 942F
 419+ 942F              Desplaza_izquierda
 420+ 942F
 421+ 942F 3A B0 85     	ld a,(Vel_left)
 422+ 9432 47           	ld b,a
 423+ 9433 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9436 23           1 inc hl
 425+ 9437 23           	inc hl
 426+ 9438 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 943A 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 943D CD B3 87     	call Extrae_address
 429+ 9440 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9443
 431+ 9443              ; Modifica (Puntero_DESPLZ_der).
 432+ 9443
 433+ 9443              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9443              ; Cuántos movimientos hemos hecho ??
 435+ 9443              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9443
 437+ 9443 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9446 EB           	ex de,hl
 439+ 9447 A7           	and a
 440+ 9448 ED 52        	sbc hl,de
 441+ 944A CB 3D        	srl l
 442+ 944C 3E 08        6 ld a,8
 443+ 944E 95           	sub l
 444+ 944F 30 1E        	jr nc,3F
 445+ 9451
 446+ 9451              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 9451              ; B="0".
 448+ 9451
 449+ 9451 04           4 inc b
 450+ 9452 3C           	inc a
 451+ 9453 20 FC        	jr nz,4B
 452+ 9455 78           	ld a,b
 453+ 9456 08           	ex af,af
 454+ 9457 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 945A 23           5 inc hl
 456+ 945B 23           	inc hl
 457+ 945C 10 FC        	djnz 5B
 458+ 945E 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 9461 CD B3 87     	call Extrae_address
 460+ 9464 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9467
 462+ 9467              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9467              ; _(Posicion_actual).
 464+ 9467
 465+ 9467 21 9D 85     	ld hl,Posicion_actual
 466+ 946A 35           	dec (hl)
 467+ 946B 08           	ex af,af
 468+ 946C 6F           	ld l,a
 469+ 946D 18 DD        	jr 6B
 470+ 946F
 471+ 946F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 946F
 473+ 946F 47           3 ld b,a
 474+ 9470 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9473 23           2 inc hl
 476+ 9474 23           	inc hl
 477+ 9475 10 FC        	djnz 2B
 478+ 9477 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 947A C9           8 ret
 480+ 947B
 481+ 947B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 947B              ;
 483+ 947B              ;	modifica_parametros_1er_DESPLZ
 484+ 947B              ;
 485+ 947B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 947B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 947B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 947B
 489+ 947B 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 947E A7           	and a
 491+ 947F 20 1E        	jr nz,1F
 492+ 9481 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9482 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9485 21 9C 85     	ld hl,Columns
 495+ 9488 34           	inc (hl)
 496+ 9489 3A AF 85     	ld a,(Cuad_objeto)
 497+ 948C E6 01        	and 1
 498+ 948E 20 0F        	jr nz,1F
 499+ 9490 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9493 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9494 22 9D 85     	ld (Posicion_actual),hl
 502+ 9497 CD 51 95     	call Genera_coordenadas
 503+ 949A CD F6 94     	call Dec_CTRL_DESPLZ
 504+ 949D 18 03        	jr 2F
 505+ 949F CD F6 94     1 call Dec_CTRL_DESPLZ
 506+ 94A2 C9           2 ret
 507+ 94A3
 508+ 94A3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 94A3
 510+ 94A3 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 94A6 FE F7        	cp $f7
 512+ 94A8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 94AA 30 2C        	jr nc,3F
 514+ 94AC
 515+ 94AC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 94AC
 517+ 94AC 06 00        	ld b,0
 518+ 94AE 04           4 inc b
 519+ 94AF 3C           	inc a
 520+ 94B0 FE F7        	cp $f7
 521+ 94B2 20 FA        	jr nz,4B
 522+ 94B4 3E FF        	ld a,$ff
 523+ 94B6 90           	sub b
 524+ 94B7 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 94BA 18 1C        	jr 3F
 526+ 94BC
 527+ 94BC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 94BC
 529+ 94BC 21 9C 85     1 ld hl,Columns
 530+ 94BF 35           	dec (hl)
 531+ 94C0 AF           	xor a
 532+ 94C1 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 94C4 3A AF 85     	ld a,(Cuad_objeto)
 534+ 94C7 E6 01        	and 1
 535+ 94C9 28 0A        	jr z,2F
 536+ 94CB 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 94CE 2B           	dec hl
 538+ 94CF 22 9D 85     	ld (Posicion_actual),hl
 539+ 94D2 CD 51 95     	call Genera_coordenadas
 540+ 94D5
 541+ 94D5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 94D5
 543+ 94D5 CD DD 87     2 call Inicia_puntero_objeto_izq
 544+ 94D8 C9           3 ret
 545+ 94D9
 546+ 94D9              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 94D9              ;
 548+ 94D9              ;	19/10/22
 549+ 94D9              ;
 550+ 94D9              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 94D9              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 94D9
 553+ 94D9 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 94DC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 94DE C9           	ret
 556+ 94DF
 557+ 94DF              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 94DF              ;
 559+ 94DF              ;	19/10/22
 560+ 94DF              ;
 561+ 94DF              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 94DF              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 94DF
 564+ 94DF 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 94E2 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 94E4 C9           	ret
 567+ 94E5
 568+ 94E5              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 94E5              ;
 570+ 94E5              ;	24/7/22
 571+ 94E5              ;
 572+ 94E5              ;	Inc_CTRL_DESPLZ
 573+ 94E5              ;
 574+ 94E5              ;
 575+ 94E5              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 94E5
 577+ 94E5 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 94E8 3A B1 85     	ld a,(Vel_right)
 579+ 94EB A7           	and a
 580+ 94EC 28 06        	jr z,1F
 581+ 94EE 47           	ld b,a
 582+ 94EF 34           3 inc (hl)
 583+ 94F0 10 FD        	djnz 3B
 584+ 94F2 18 01        	jr 2F
 585+ 94F4 34           1 inc (hl)
 586+ 94F5 C9           2 ret
 587+ 94F6
 588+ 94F6              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 94F6              ;
 590+ 94F6              ;	5/2/23
 591+ 94F6              ;
 592+ 94F6              ;	Dec_CTRL_DESPLZ
 593+ 94F6              ;
 594+ 94F6              ;
 595+ 94F6              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 94F6
 597+ 94F6 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 94F9 3A B0 85     	ld a,(Vel_left)
 599+ 94FC A7           	and a
 600+ 94FD 28 06        	jr z,1F
 601+ 94FF 47           	ld b,a
 602+ 9500 35           3 dec (hl)
 603+ 9501 10 FD        	djnz 3B
 604+ 9503 18 01        	jr 2F
 605+ 9505 35           1 dec (hl)
 606+ 9506 C9           2 ret
 607+ 9507
 608+ 9507              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9507
 610+ 9507 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 950A 01 1F 00     	ld bc,31
 612+ 950D A7           	and a
 613+ 950E ED 4A        	adc hl,bc
 614+ 9510 22 9D 85     	ld (Posicion_actual),hl
 615+ 9513 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9516 CB C6        	set 0,(hl)
 617+ 9518 C9           	ret
 618+ 9519
 619+ 9519              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9519
 621+ 9519 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 951C 01 1F 00     	ld bc,31
 623+ 951F A7           	and a
 624+ 9520 ED 42        	sbc hl,bc
 625+ 9522 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9525 21 C9 85     	ld hl,Ctrl_0
 627+ 9528 CB CE        	set 1,(hl)
 628+ 952A C9           	ret
 629+ 952B
 630+ 952B              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 952B
 632+ 952B 24           Reaparece_abajo inc h
 633+ 952C 01 E0 17     	ld bc,$17e0
 634+ 952F A7           	and a
 635+ 9530 ED 4A        	adc hl,bc
 636+ 9532 22 9D 85     	ld (Posicion_actual),hl
 637+ 9535 21 C9 85     	ld hl,Ctrl_0
 638+ 9538 CB D6        	set 2,(hl)
 639+ 953A C9           	ret
 640+ 953B
 641+ 953B              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 953B
 643+ 953B 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 953E A7           	and a
 645+ 953F ED 42        	sbc hl,bc
 646+ 9541 22 9D 85     	ld (Posicion_actual),hl
 647+ 9544 21 C9 85     	ld hl,Ctrl_0
 648+ 9547 CB DE        	set 3,(hl)
 649+ 9549 C9           	ret
 650+ 954A
 651+ 954A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 954A
 653+ 954A 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 954D 22 9D 85     	ld (Posicion_actual),hl
 655+ 9550 C9           	ret
# file closed: Direcciones.asm
 897  9551              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9551              ; ------------------------------------------------------------------------
   2+ 9551              ;
   3+ 9551              ;	02/04/23
   4+ 9551              ;
   5+ 9551              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9551              ;	Fila superior "0", Columna izquierda "0".
   7+ 9551              ;
   8+ 9551              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9551              ;
  10+ 9551              ;	Modifica: A,BC y DE.
  11+ 9551
  12+ 9551 C5           Genera_coordenadas push bc
  13+ 9552 E5           	push hl
  14+ 9553 D5           	push de
  15+ 9554
  16+ 9554 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9557
  18+ 9557 7D           	ld a,l
  19+ 9558 E6 1F        	and $1f
  20+ 955A 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 955D
  22+ 955D CD 25 92     	call calcula_tercio
  23+ 9560 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9561
  25+ 9561 1E 00        	ld e,0
  26+ 9563 7D           	ld a,l
  27+ 9564 E6 E0        	and $e0
  28+ 9566 28 01        	jr z,1F
  29+ 9568 04           	inc b
  30+ 9569
  31+ 9569 04           1 inc b
  32+ 956A 05           	dec b
  33+ 956B 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 956D              ;														; _ , salimos.
  35+ 956D 1C           3 inc e
  36+ 956E D6 20        	sub 32
  37+ 9570 20 FB        	jr nz,3B
  38+ 9572 10 F5        	djnz 1B
  39+ 9574
  40+ 9574 7B           2 ld a,e
  41+ 9575 32 A2 85     	ld (Coordenada_y),a
  42+ 9578
  43+ 9578 D1           	pop de
  44+ 9579 E1           	pop hl
  45+ 957A C1           	pop bc
  46+ 957B
  47+ 957B C9           	ret
  48+ 957C
  49+ 957C              ; ------------------------------------------------------------------------
  50+ 957C              ;	28/03/23
  51+ 957C              ;
  52+ 957C              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 957C              ;	Fila superior "0", Columna izquierda "0".
  54+ 957C              ;
  55+ 957C              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 957C              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 957C              ;
  58+ 957C              ;		DE="$120d"
  59+ 957C              ;
  60+ 957C              ;		D, (Coordenada_X), Columnas, $12
  61+ 957C              ;		E, (Coordenada_y), Filas, $0d
  62+ 957C              ;
  63+ 957C              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 957C
  65+ 957C              ;	Modifica: A,BC y DE.
  66+ 957C
  67+ 957C
  68+ 957C              Genera_coordenadas_disparo
  69+ 957C
  70+ 957C              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 957C
  72+ 957C 7D           	ld a,l
  73+ 957D E6 1F        	and $1f
  74+ 957F 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9580 CD 25 92     	call calcula_tercio
  76+ 9583 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9584 1E 00        	ld e,0
  78+ 9586 7D           	ld a,l
  79+ 9587 E6 E0        	and $e0
  80+ 9589 28 01        	jr z,1F
  81+ 958B 04           	inc b
  82+ 958C 1C           1 inc e
  83+ 958D D6 20        	sub 32
  84+ 958F 20 FB        	jr nz,1B
  85+ 9591 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9593 C9           	ret
  87+ 9594
# file closed: Genera_coordenadas.asm
 898  9594              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9594
   2+ 9594
   3+ 9594              ;   11/8/22
   4+ 9594              ;
   5+ 9594              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9594              ;
   7+ 9594              ;   Mov_obj.asm
   8+ 9594              ;
   9+ 9594              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9594              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9594              ;
  12+ 9594              ;   Codificación:
  13+ 9594              ;
  14+ 9594              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9594
  16+ 9594              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9594
  18+ 9594 02 40 00     Arriba db 2,%01000000,0
  19+ 9597 02 80 00     Abajo db 2,%10000000,0
  20+ 959A 02 20 00     Derecha db 2,%00100000,0
  21+ 959D 02 10 00     Izquierda db 2,%00010000,0
  22+ 95A0 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 95A4 60 42 60 40
  22+ 95A8 63
  23+ 95A9 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 95AD 22 A3 80 A0
  24+ 95B1 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 95B5 84 A0 83 A0
  25+ 95B9 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 95BD 80 A3 22 A0
  26+ 95C1 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 95C5 40 60 42 60
  27+ 95C9 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 95CD
  29+ 95CD 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 95D1 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 95D5 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 95D9 84 00
  32+ 95DB 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 95DF 84 00
  33+ 95E1 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 95E5 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 95E9 1F 1F 1F 1F
  35+ 95ED 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 95F1 1F 1F 1F 1F
  35+ 95F5 1F
  36+ 95F6 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 95FA 2F 2F 2F 2F
  36+ 95FE 2F 2F
  37+ 9600 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9604 2F 2F 00
  38+ 9607
  39+ 9607              ; ----- ----- ----- ----- -----
  40+ 9607
  41+ 9607 E5 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9609 E1 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 960B 9D 95        Indice_mov_Izquierda defw Izquierda
  44+ 960D 9A 95        Indice_mov_Derecha defw Derecha
  45+ 960F 97 95        Indice_mov_Abajo defw Abajo
  46+ 9611 94 95        Indice_mov_Arriba defw Arriba
  47+ 9613 D1 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9615 D5 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9617 CD 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9619 DB 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 961B A0 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 961D              ; ----- ----- ----- ----- -----
  53+ 961D
  54+ 961D 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9620 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9621 28 02            jr z,1F
  57+ 9623 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9625 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9628 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 962A 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 962D              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 962D 2A CD 85         ld hl,(Puntero_mov)
  63+ 9630 7E               ld a,(hl)
  64+ 9631 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9634 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9635 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9638
  68+ 9638 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 963B A7               and a
  70+ 963C 20 0C            jr nz,12F
  71+ 963E 2A CD 85         ld hl,(Puntero_mov)
  72+ 9641 7E               ld a,(hl)
  73+ 9642 A7               and a
  74+ 9643 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9645 E6 0F            and $0f
  76+ 9647 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 964A              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 964A 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 964D CB 7E            bit 7,(hl)
  80+ 964F 28 03            jr z,2F
  81+ 9651 CD 43 92         call Mov_down
  82+ 9654 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9657 CB 76            bit 6,(hl)
  84+ 9659 28 03            jr z,3F
  85+ 965B CD 71 92         call Mov_up
  86+ 965E 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 9661 CB 6E            bit 5,(hl)
  88+ 9663 28 03            jr z,4F
  89+ 9665 CD 9F 92         call Mov_right
  90+ 9668 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 966B CB 66            bit 4,(hl)
  92+ 966D 28 03            jr z,5F
  93+ 966F CD BD 93         call Mov_left
  94+ 9672
  95+ 9672              ; ---------- --------- --------- ---------- ----------
  96+ 9672
  97+ 9672 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9675 A7               and a
  99+ 9676 28 07            jr z,6F
 100+ 9678 3D               dec a
 101+ 9679 32 D1 85         ld (Repetimos_db),a
 102+ 967C 28 01            jr z,6f
 103+ 967E C9           11 ret
 104+ 967F 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9682 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9683 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9686 23               inc hl
 108+ 9687 22 CD 85         ld (Puntero_mov),hl
 109+ 968A 18 F2            jr 11B
 110+ 968C 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 968F 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9692 47               ld b,a
 113+ 9693 23           8 inc hl
 114+ 9694 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9696 5E               ld e,(hl)
 116+ 9697 23               inc hl
 117+ 9698 56               ld d,(hl)
 118+ 9699 EB               ex de,hl
 119+ 969A 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 969D 18 DF            jr 11B
 121+ 969F
 122+ 969F              ; ---------- --------- --------- ---------- ----------
 123+ 969F              ;
 124+ 969F              ;   11/8/22
 125+ 969F              ;
 126+ 969F              ;   Prepara_Puntero_mov
 127+ 969F
 128+ 969F E5           Prepara_Puntero_mov push hl
 129+ 96A0 D5               push de
 130+ 96A1 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 96A4 5E               ld e,(hl)
 132+ 96A5 23               inc hl
 133+ 96A6 56               ld d,(hl)
 134+ 96A7 EB               ex de,hl
 135+ 96A8 22 CD 85         ld (Puntero_mov),hl
 136+ 96AB D1               pop de
 137+ 96AC E1               pop hl
 138+ 96AD C9               ret
 139+ 96AE
 140+ 96AE              ; ---------- --------- --------- ---------- ----------
 141+ 96AE              ;
 142+ 96AE              ;   11/8/22
 143+ 96AE              ;
 144+ 96AE              ;   Reinicia_el_movimiento
 145+ 96AE
 146+ 96AE CD 9F 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 96B1 AF               xor a
 148+ 96B2 32 CF 85         ld (Contador_db_mov),a
 149+ 96B5 32 D0 85         ld (Incrementa_puntero),a
 150+ 96B8 C3 1D 96         jp Movimiento
 151+ 96BB C9               ret
 152+ 96BC              ; ---------- --------- --------- ---------- ----------
 153+ 96BC
 154+ 96BC
 155+ 96BC
 156+ 96BC
 157+ 96BC
 158+ 96BC
 159+ 96BC
 160+ 96BC
 161+ 96BC
 162+ 96BC
 163+ 96BC
 164+ 96BC
 165+ 96BC
 166+ 96BC
 167+ 96BC
 168+ 96BC
 169+ 96BC
 170+ 96BC
# file closed: Patrones_de_mov.asm
 899  96BC              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 96BC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 96BC              ;
   3+ 96BC              ;	3/1/23
   4+ 96BC              ;
   5+ 96BC              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 96BC
   7+ 96BC              ;	ADC HL,SP	LD (addr),SP
   8+ 96BC              ;	ADD HL,SP	LD SP,(addr)
   9+ 96BC              ;	ADD IX,SP	LD SP,nn
  10+ 96BC              ; 	ADD IY,SP	LD SP,HL
  11+ 96BC              ;				LD SP,IX
  12+ 96BC              ;	DEC SP		LD SP,IY
  13+ 96BC
  14+ 96BC              ;	EX (SP),HL
  15+ 96BC              ;	EX (SP),IX
  16+ 96BC              ;	EX (SP),IY
  17+ 96BC
  18+ 96BC              ;	INC SP
  19+ 96BC
  20+ 96BC
  21+ 96BC                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 900  7FD4
 901  7FD4              	SAVESNA "Pruebas.sna", START
 902  7FD4
 903  7FD4
 904  7FD4
# file closed: Banco_de_pruebas.asm
