# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2E 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 7B 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD CF 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD DF 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 183  8BC4
 184  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC6
 187  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC6
 189  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC7
 195  8BC7 00           Ctrl_2 db 0
 196  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC8              ;
 204  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC8              ;														BIT 4, ???
 210  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC8
 212  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC9              ;
 218  8BC9              ; 														DESCRIPCIÖN:
 219  8BC9              ;
 220  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC9              ;
 234  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC9
 238  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC9
 240  8BC9 00           Filas db 0												; Filas. [DRAW]
 241  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCF
 245  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCF
 247  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BD0
 251  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BD0
 253  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BD0              ;
 255  8BD0              ;	COLORES: 0 ..... NEGRO
 256  8BD0              ;    		 1 ..... AZUL
 257  8BD0              ; 			 2 ..... ROJO
 258  8BD0              ;			 3 ..... MAGENTA
 259  8BD0              ; 			 4 ..... VERDE
 260  8BD0              ; 			 5 ..... CIAN
 261  8BD0              ;			 6 ..... AMARILLO
 262  8BD0              ; 			 7 ..... BLANCO
 263  8BD0
 264  8BD0 00 00        Indice_Sprite_der defw 0
 265  8BD2 00 00        Indice_Sprite_izq defw 0
 266  8BD4 00 00        Puntero_DESPLZ_der defw 0
 267  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD8
 269  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BDB 00           Columnas db 0
 272  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDF
 276  8BDF              ; variables de control general.
 277  8BDF
 278  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BE0
 280  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BE0
 282  8BE0              Perfiles_de_velocidad
 283  8BE0
 284  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE4
 289  8BE4              ; Contadores de 16 bits.
 290  8BE4
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BEC
 296  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BEC
 298  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BF2              ;
 302  8BF2              ;
 303  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BF3 00           Incrementa_puntero_backup db 0
 307  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF8              ;
 313  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF8              ;
 317  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF8              ;
 322  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF8
 326  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF9
 328  8BF9              ;														DESCRIPCIÓN:
 329  8BF9              ;
 330  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF9
 337  8BF9              ;														BIT 3, Recarga de nueva oleada.
 338  8BF9              ;														BIT 4, Recarga de nueva oleada.
 339  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF9              ;														BIT 6, **** Frame completo.
 341  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF9
 343  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BFB
 348  8BFB              ; Gestión de ENTIDADES y CAJAS.
 349  8BFB
 350  8BFB 00 00        Puntero_store_caja defw 0
 351  8BFD 00 00        Puntero_restore_caja defw 0
 352  8BFF 00 00        Indice_restore_caja defw 0
 353  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C04
 357  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C08              ;														; _ puntero (Indice_entidades).
 360  8C08
 361  8C08              ;---------------------------------------------------------------------------------------------------------------
 362  8C08              ;
 363  8C08              ;	12/08/24
 364  8C08              ;
 365  8C08              ;	Álbumes.
 366  8C08
 367  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C0A              ;														; _variable para almacenar lo posición del puntero_
 369  8C0A              ; 														; _de pila, SP.
 370  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C0C
 373  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C0C
 375  8C0C 00 00        Album_de_pintado defw 0
 376  8C0E 00 00        Album_de_borrado defw 0
 377  8C10 00 00        Album_de_pintado_Amadeus defw 0
 378  8C12 00 00        Album_de_borrado_Amadeus defw 0
 379  8C14 00 00        Album_de_pintado_disparos defw 0
 380  8C16 00 00        Album_de_borrado_disparos defw 0
 381  8C18
 382  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C1A 00           Num_de_bytes_album_de_disparos db 0
 384  8C1B 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C1C
 386  8C1C 00           Numero_de_disparos_de_Amadeus db 0
 387  8C1D 00           Numero_de_disparos_de_entidades db 0
 388  8C1E
 389  8C1E 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 390  8C1F              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 391  8C1F
 392  8C1F 00 00        Puntero_rancio_disparos_album defw 0
 393  8C21
 394  8C21 00 00        Techo_Scanlines_album defw 0
 395  8C23 00 00        Techo_Scanlines_album_2 defw 0
 396  8C25 00           Switch db 0
 397  8C26 00 00        Techo defw 0
 398  8C28 00 00        Scanlines_album_SP defw 0
 399  8C2A 00 89        India_SP defw Tabla_de_pintado
 400  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 401  8C2E
 402  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 403  8C2F              ;
 404  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 405  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 406  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 407  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 408  8C2F              ;																Habilita el borrado/pintado de sprites.
 409  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 410  8C2F              ;																_ a la baja.
 411  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 412  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 413  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 414  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 415  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 416  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 417  8C2F
 418  8C2F 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 419  8C30              ;
 420  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 421  8C30              ;
 422  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 423  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 424  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 425  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 426  8C30              ;
 427  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 428  8C30              ;															_ masticados ya generados.
 429  8C30              ;
 430  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 431  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 432  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 433  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 434  8C30
 435  8C30 00           Ctrl_5 db 0
 436  8C31
 437  8C31              ; Gestión de Disparos.
 438  8C31
 439  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 440  8C33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 441  8C35
 442  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 443  8C36
 444  8C36              ;
 445  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 446  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 447  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 448  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 449  8C36
 450  8C36
 451  8C36
 452  8C36
 453  8C36
 454  8C36
 455  8C36
 456  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 457  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 458  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 459  8C38
 460  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 461  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 462  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 464  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 466  8C40
 467  8C40              ;---------------------------------------------------------------------------------------------------------------
 468  8C40
 469  8C40              ; Relojes y temporizaciones.
 470  8C40
 471  8C40 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 472  8C41 05           Clock_explosion_Amadeus db 5
 473  8C42 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 474  8C43
 475  8C43 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 476  8C45
 477  8C45 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 478  8C47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 479  8C48              ;														; Repite la oleada de entidades.
 480  8C48
 481  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 482  8C48              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 483  8C48              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 484  8C48              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 485  8C48
 486  8C48              ;---------------------------------------------------------------------------------------------------------------
 487  8C48
 488  8C48              ; Gestión de NIVELES.
 489  8C48
 490  8C48 00           Nivel db 0												; Nivel actual del juego.
 491  8C49 00 00        Puntero_indice_NIVELES defw 0
 492  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 493  8C4D              ; 														; _ que definen el NIVEL.
 494  8C4D
 495  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 496  8C4D
 497  8C4D              ; Temporizaciones Shield.
 498  8C4D
 499  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 500  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 501  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 502  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 503  8C55 00           Shield_3 db 0
 504  8C56
 505  8C56 06           Lives db 6
 506  8C57
 507  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 508  8C57              ;
 509  8C57              ;	5/1/24
 510  8C57
 511  8C57              START
 512  8C57
 513  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 514  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 515  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 516  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 517  8C60 F3           	DI
 518  8C61
 519  8C61              ; Limpiamos pantalla.
 520  8C61
 521  8C61 3E 07        	ld a,%00000111
 522  8C63              ;	call Cls
 523  8C63 CD C4 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 524  8C66
 525  8C66              ; INICIALIZACIÓN.
 526  8C66
 527  8C66 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 528  8C68 CD 11 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 529  8C6B CD 58 8E     	call Extrae_numero_aleatorio_y_avanza
 530  8C6E
 531  8C6E 6F           	ld l,a
 532  8C6F 26 00        	ld h,0
 533  8C71 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 534  8C74
 535  8C74              ;	Inicializa 1er Nivel.
 536  8C74
 537  8C74 21 97 8B     	ld hl,Indice_de_niveles
 538  8C77 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 539  8C7A CD 41 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 540  8C7D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 541  8C7D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 542  8C7D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 543  8C7D
 544  8C7D              ;	Inicia los álbumes de líneas.
 545  8C7D
 546  8C7D CD 0D 90     	call Inicia_albumes_de_lineas
 547  8C80              ;
 548  8C80 CD 1D 90     	call Inicia_albumes_de_lineas_Amadeus
 549  8C83 CD 2A 90     	call Inicia_albumes_de_disparos
 550  8C86
 551  8C86
 552  8C86 CD 86 92     4 call Inicia_Entidades
 553  8C89 CD E9 92     	call Inicia_Amadeus
 554  8C8C
 555  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 556  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 557  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 558  8C8C
 559  8C8C 11 70 89     	ld de,Amadeus_BOX
 560  8C8F CD 3C 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 561  8C92 CD 2C 93     	call Limpiamos_bandeja_DRAW
 562  8C95
 563  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 564  8C95
 565  8C95 06 3C        	ld b,60
 566  8C97 CD 0E 9D     2 call Amadeus_a_izquierda
 567  8C9A 10 FB        	djnz 2B
 568  8C9C
 569  8C9C CD EB 8F     	call Genera_datos_de_impresion_Amadeus
 570  8C9F
 571  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 572  8C9F
 573  8C9F CD 3D 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 574  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 575  8CA2
 576  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 577  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 578  8CA2
 579  8CA2              ;	ld a,(Ctrl_1)
 580  8CA2              ;	bit 3,a
 581  8CA2              ;	jr nz,5F											 ; Loop
 582  8CA2
 583  8CA2              ;	ld de,Amadeus_db
 584  8CA2              ;	call Store_Amadeus
 585  8CA2
 586  8CA2              ; 	INICIA DISPAROS !!!!!
 587  8CA2
 588  8CA2 CD 53 90     	call Inicia_Puntero_Disparo_Entidades
 589  8CA5 CD 5A 90     	call Inicia_Puntero_Disparo_Amadeus
 590  8CA8
 591  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CA8
 593  8CA8              ;5 call Inicia_punteros_de_cajas
 594  8CA8              ;	call Restore_entidad
 595  8CA8
 596  8CA8              ;	ld a,(Ctrl_1)
 597  8CA8              ;	bit 3,a
 598  8CA8              ;	jr z,6F
 599  8CA8
 600  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CA8
 602  8CA8              ;	ld hl,Ctrl_1
 603  8CA8              ;	res 3,(hl)
 604  8CA8              ;	jr Main
 605  8CA8
 606  8CA8              ; Damos por concluida la construcción del FRAME.
 607  8CA8              ;
 608  8CA8
 609  8CA8 CD CF 90     	call Inicia_Shield
 610  8CAB
 611  8CAB
 612  8CAB 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 613  8CAE 22 21 8C     	ld (Techo_Scanlines_album),hl
 614  8CB1
 615  8CB1 2A 0E 8C     	ld hl,(Album_de_borrado)
 616  8CB4 22 28 8C     	ld (Scanlines_album_SP),hl
 617  8CB7
 618  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 619  8CBA 22 2A 8C     	ld (India_SP),hl
 620  8CBD
 621  8CBD 21 2E 8C     	ld hl,Ctrl_3
 622  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CC2 CB D6        	set 2,(hl)
 624  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC6
 626  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC7
 628  8CC7 76           	halt
 629  8CC8
 630  8CC8              ; ------------------------------------
 631  8CC8
 632  8CC8              Main
 633  8CC8              ;
 634  8CC8              ; 22/08/24
 635  8CC8
 636  8CC8              ; Gestión de disparos.
 637  8CC8
 638  8CC8 CD BB 9E     	call Limpia_album_de_borrado_disparos
 639  8CCB CD 3A 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 640  8CCE CD FD 9E     	call Mueve_Disparos
 641  8CD1
 642  8CD1              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 643  8CD1              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 644  8CD1              ; Este hecho lo indica el bit2 de (Impacto2).
 645  8CD1
 646  8CD1 CD 02 A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CD4
 648  8CD4 2A 45 8C     16 ld hl,(Clock_next_entity)
 649  8CD7 ED 4B 78 5C  	ld bc,(FRAMES)
 650  8CDB A7           	and a
 651  8CDC ED 42        	sbc hl,bc
 652  8CDE 20 16        	jr nz,13F
 653  8CE0
 654  8CE0              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 655  8CE0              ; _ (Clock_next_entity) para la siguiente entidad.
 656  8CE0
 657  8CE0 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 658  8CE3 47           	ld b,a
 659  8CE4 3A 03 8C     	ld a,(Entidades_en_curso)
 660  8CE7 B8           	cp b
 661  8CE8 28 0C        	jr z,13F
 662  8CEA 30 0A        	jr nc,13F
 663  8CEC
 664  8CEC 3C           	inc a
 665  8CED 32 03 8C     	ld (Entidades_en_curso),a
 666  8CF0
 667  8CF0              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 668  8CF0
 669  8CF0 CD 58 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 670  8CF3 CD 74 8E     	call Define_Clock_next_entity
 671  8CF6
 672  8CF6              ; -------------------------------------------------------------------------------------------------------------
 673  8CF6
 674  8CF6              ; Habilita disparos.
 675  8CF6
 676  8CF6              13
 677  8CF6
 678  8CF6              ;	ld hl,Disparo_Amadeus
 679  8CF6              ;	ld de,CLOCK_repone_disparo_Amadeus
 680  8CF6              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 681  8CF6
 682  8CF6              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 683  8CF6              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 684  8CF6              ;	call Habilita_disparos
 685  8CF6
 686  8CF6              ; COLISIONES.
 687  8CF6
 688  8CF6              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 689  8CF6
 690  8CF6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 691  8CF6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 692  8CF6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 693  8CF6
 694  8CF6              ;	xor a
 695  8CF6              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 696  8CF6
 697  8CF6              ;	call Inicia_punteros_de_cajas
 698  8CF6              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 699  8CF6              ; 														; _ en DRAW.
 700  8CF6
 701  8CF6              ;	ld a,(Filas)
 702  8CF6              ;	and a
 703  8CF6              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 704  8CF6              ;	call Incrementa_punteros_de_cajas
 705  8CF6              ;	jr 12B
 706  8CF6
 707  8CF6              ; ---------------------------------------------------------------------------------------
 708  8CF6
 709  8CF6              ;10 ld a,(Numero_parcial_de_entidades)
 710  8CF6              ;    ld b,a
 711  8CF6              ;	and a
 712  8CF6              ;	jr nz,11F
 713  8CF6
 714  8CF6              ;	ld hl,Ctrl_1;
 715  8CF6              ;	bit 4,(hl)
 716  8CF6              ;	jp nz,16F
 717  8CF6
 718  8CF6              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 719  8CF6
 720  8CF6              ;	ld hl,Ctrl_1
 721  8CF6              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 722  8CF6
 723  8CF6              ;	ld a,(Contador_de_frames)
 724  8CF6              ;	inc a
 725  8CF6              ;	ld (Activa_recarga_cajas),a
 726  8CF6
 727  8CF6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 728  8CF6
 729  8CF6 3A 03 8C     11 ld a,(Entidades_en_curso)
 730  8CF9 A7           	and a
 731  8CFA CA 62 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 732  8CFD 47           	ld b,a												; No hay entidades que gestionar.
 733  8CFE
 734  8CFE              ; ( Código que ejecutamos con cada entidad: ).
 735  8CFE
 736  8CFE              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 737  8CFE              ;
 738  8CFE              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 739  8CFE
 740  8CFE 21 00 89     	ld hl,Tabla_de_pintado
 741  8D01 22 2A 8C     	ld (India_SP),hl
 742  8D04
 743  8D04 21 2E 8C     	ld hl,Ctrl_3
 744  8D07 CB D6        	set 2,(hl)
 745  8D09 CD 0F 8E     	call Change
 746  8D0C
 747  8D0C C5           15 push bc 												; Nº de entidades en curso.
 748  8D0D
 749  8D0D CD 9C 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 750  8D10 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 751  8D14
 752  8D14              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 753  8D14
 754  8D14              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 755  8D14
 756  8D14 3A BF 8B     	ld a,(Impacto)
 757  8D17 A7           	and a
 758  8D18 28 13        	jr z,8F
 759  8D1A
 760  8D1A              ; 5/7/24
 761  8D1A              ; Nota importante:
 762  8D1A              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 763  8D1A              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 764  8D1A              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 765  8D1A
 766  8D1A 3A 2E 8C     	ld a,(Ctrl_3)
 767  8D1D CB 7F        	bit 7,a
 768  8D1F 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 769  8D21              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 770  8D21 3A 74 89     	ld a,(Impacto_Amadeus)
 771  8D24 A7           	and a
 772  8D25 C4 AC 91     	call nz,Genera_explosion
 773  8D28 20 1B        	jr nz,Gestiona_siguiente_entidad
 774  8D2A
 775  8D2A              ; Falsa colisión !!!
 776  8D2A
 777  8D2A 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 778  8D2D
 779  8D2D              ; -------------------------------------------
 780  8D2D
 781  8D2D CD B8 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 782  8D30 CD EF 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 783  8D33 CD A4 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 784  8D36 CD AC 94     	call Genera_datos_de_impresion
 785  8D39 CD 4F 93     	call Decrementa_Contador_de_mov_masticados
 786  8D3C
 787  8D3C              ; -------------------------------------------
 788  8D3C
 789  8D3C              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 790  8D3C
 791  8D3C 2A C0 8B     	ld hl,(Puntero_de_impresion)
 792  8D3F CD 80 94     	call Genera_coordenadas
 793  8D42
 794  8D42 CD 80 A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 795  8D45
 796  8D45              ;	ld hl,Ctrl_0
 797  8D45              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 798  8D45
 799  8D45              Gestiona_siguiente_entidad
 800  8D45
 801  8D45 CD 21 93      	call Store_Restore_cajas
 802  8D48 C1           	pop bc
 803  8D49 10 C1        	djnz 15B
 804  8D4B
 805  8D4B              ; Hemos gestionado todas las entidades.
 806  8D4B
 807  8D4B CD C8 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 808  8D4E CD DF 8E     	call Ordena_tabla_de_impresion
 809  8D51 CD 3D 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 810  8D54
 811  8D54              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 812  8D54              ; Hemos gestionado todas las unidades.
 813  8D54              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 814  8D54
 815  8D54              ;	ld hl,Ctrl_1
 816  8D54              ;	res 2,(hl)
 817  8D54
 818  8D54 CD 89 8E     	call Borra_diferencia
 819  8D57
 820  8D57 3A 2E 8C     	ld a,(Ctrl_3)
 821  8D5A CB 5F        	bit 3,a
 822  8D5C 20 04        	jr nz,Gestion_de_Amadeus
 823  8D5E
 824  8D5E EB           	ex de,hl
 825  8D5F 71           	ld (hl),c
 826  8D60 2C           	inc l
 827  8D61 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 828  8D62
 829  8D62
 830  8D62              ;! GESTIONA AMADEUS !!!!!!!!!!
 831  8D62
 832  8D62              Gestion_de_Amadeus
 833  8D62
 834  8D62 21 2E 8C     	ld hl,Ctrl_3
 835  8D65 CB 76        	bit 6,(hl)
 836  8D67 28 13        	jr z,Amadeus_vivo
 837  8D69
 838  8D69              ; Amadeus ha sido destruido.
 839  8D69              ; Decrementa (Temp_new_live).
 840  8D69
 841  8D69 21 42 8C     	ld hl,Temp_new_live
 842  8D6C 35           	dec (hl)
 843  8D6D 20 26        	jr nz,End_frame
 844  8D6F
 845  8D6F              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 846  8D6F
 847  8D6F 21 56 8C     	ld hl,Lives
 848  8D72 35           	dec (hl)
 849  8D73
 850  8D73              ;! Fin del juego
 851  8D73
 852  8D73 F3           	di
 853  8D74 28 FE        	jr z,$
 854  8D76 FB           	ei
 855  8D77
 856  8D77              ; Nueva nave.
 857  8D77
 858  8D77 CD B5 8D     	call Reinicia_Amadeus
 859  8D7A 18 19        	jr End_frame
 860  8D7C
 861  8D7C              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 862  8D7C
 863  8D7C              Amadeus_vivo
 864  8D7C
 865  8D7C 3A 74 89     	ld a,(Impacto_Amadeus)
 866  8D7F A7           	and a
 867  8D80 C4 DC 91     	call nz, Genera_explosion_Amadeus
 868  8D83 20 10        	jr nz, End_frame
 869  8D85
 870  8D85 CD 89 91     	call Teclado
 871  8D88
 872  8D88 21 2E 8C     	ld hl,Ctrl_3
 873  8D8B CB 6E        	bit 5,(hl)
 874  8D8D 28 06        	jr z,End_frame
 875  8D8F
 876  8D8F              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 877  8D8F
 878  8D8F CD 2A 8E     	call Change_Amadeus
 879  8D92 CD EB 8F     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 880  8D95
 881  8D95              End_frame
 882  8D95
 883  8D95              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 884  8D95              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 885  8D95
 886  8D95 CD AC 9F     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 887  8D98 CD D6 9E     	call Calcula_bytes_pintado_disparos
 888  8D9B CD E3 9E     	call Limpia_album_de_pintado_disparos
 889  8D9E
 890  8D9E              ; ------------ ------------- --------------
 891  8D9E
 892  8D9E 2A 0E 8C     	ld hl,(Album_de_borrado)
 893  8DA1 22 28 8C     	ld (Scanlines_album_SP),hl
 894  8DA4
 895  8DA4 21 2E 8C     	ld hl,Ctrl_3
 896  8DA7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 897  8DA9 CB 9E        	res 3,(hl)
 898  8DAB CB A6        	res 4,(hl)
 899  8DAD
 900  8DAD AF           	xor a
 901  8DAE D3 FE        	out ($fe),a
 902  8DB0
 903  8DB0 76           	halt
 904  8DB1
 905  8DB1              ; ----------------------------------------
 906  8DB1
 907  8DB1              ;	ld a,(Ctrl_1) 										; Existe Loop?
 908  8DB1              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 909  8DB1 CA C8 8C     	jp z,Main
 910  8DB4
 911  8DB4              ; RECARGA DE NUEVA OLEADA.
 912  8DB4
 913  8DB4              ;	ld a,(Contador_de_frames)
 914  8DB4              ;	ld b,a
 915  8DB4              ;	ld a,(Activa_recarga_cajas)
 916  8DB4              ;	cp b
 917  8DB4              ;	jr z,20F
 918  8DB4
 919  8DB4              ;	ld hl,Ctrl_1
 920  8DB4              ;	set 4,(hl)
 921  8DB4              ;	jp Main
 922  8DB4
 923  8DB4              ;20 ld hl,Ctrl_1
 924  8DB4              ;	res 4,(hl)
 925  8DB4
 926  8DB4              ;	ld a,(Contador_de_frames)
 927  8DB4
 928  8DB4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 929  8DB4              ;! _ IMPREDECIBLE !!!!
 930  8DB4
 931  8DB4              ;	add 10
 932  8DB4              ;	ld (Clock_next_entity),a
 933  8DB4
 934  8DB4              ;	jp 4B
 935  8DB4
 936  8DB4 C9           	ret
 937  8DB5
 938  8DB5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 939  8DB5              ;
 940  8DB5              ;	16/11/23
 941  8DB5
 942  8DB5              ;;Gestiona_Amadeus
 943  8DB5
 944  8DB5              ;! Activa/desactiva impacto con Amadeus.
 945  8DB5
 946  8DB5              ;	ld a,(Impacto)
 947  8DB5              ;	and a
 948  8DB5              ;	jr nz,2F
 949  8DB5
 950  8DB5              ;;	call Mov_Amadeus
 951  8DB5
 952  8DB5              ;;2 ld a,(Ctrl_0)
 953  8DB5              ;;	bit 4,a
 954  8DB5              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 955  8DB5
 956  8DB5              ;;	call Guarda_foto_entidad_a_pintar
 957  8DB5              ;;	call Guarda_datos_de_borrado_Amadeus
 958  8DB5
 959  8DB5              ;;1 ld hl,Ctrl_0
 960  8DB5              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 961  8DB5
 962  8DB5              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 963  8DB5
 964  8DB5              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 965  8DB5
 966  8DB5              ;	call Calcula_numero_de_disparotes
 967  8DB5
 968  8DB5              ;;	ret
 969  8DB5
 970  8DB5              ; -----------------------------
 971  8DB5              ;
 972  8DB5              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 973  8DB5              ;
 974  8DB5              ;	INPUTS: B a de estar a "0".
 975  8DB5
 976  8DB5              ;Prepara_Borra_sprites
 977  8DB5
 978  8DB5              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 979  8DB5              ;	ld a,l
 980  8DB5              ;	ret z
 981  8DB5
 982  8DB5              ;	srl a
 983  8DB5
 984  8DB5              ;2 sub 16
 985  8DB5              ;	jr z,1F
 986  8DB5              ;	inc b
 987  8DB5              ;	jr 2B
 988  8DB5
 989  8DB5              ;1 inc b
 990  8DB5
 991  8DB5              ;	exx
 992  8DB5              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 993  8DB5              ;	exx
 994  8DB5
 995  8DB5              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 996  8DB5              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 997  8DB5
 998  8DB5              ;	ret
 999  8DB5
1000  8DB5              ; --------------------------------------------------------------------------------------------------------------
1001  8DB5              ;
1002  8DB5              ;	15/12/23
1003  8DB5
1004  8DB5              ;Mov_obj
1005  8DB5
1006  8DB5              ;	ld a,(Ctrl_2)
1007  8DB5              ;	bit 1,a
1008  8DB5              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1009  8DB5
1010  8DB5              ; Explosión:
1011  8DB5
1012  8DB5              ;	ld a,(Frames_explosion)
1013  8DB5              ;	and a
1014  8DB5              ;	jr nz,4F
1015  8DB5
1016  8DB5              ;!  Una alimaña menos!!!!!!!!!1
1017  8DB5
1018  8DB5              ; Se trataba de una Entidad_guía ???
1019  8DB5
1020  8DB5              ;	ld a,(Ctrl_2)
1021  8DB5              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1022  8DB5              ;	jr z,5F
1023  8DB5
1024  8DB5              ;	ld hl,Ctrl_3
1025  8DB5              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1026  8DB5
1027  8DB5              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1028  8DB5              ;!! _generado puede ser distinto, (aletoriedad).
1029  8DB5
1030  8DB5              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1031  8DB5              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1032  8DB5              ;	dec (hl)
1033  8DB5              ;	ld hl,Entidades_en_curso
1034  8DB5              ;	dec (hl)
1035  8DB5              ;	ld hl,Numero_de_entidades
1036  8DB5              ;	dec (hl)
1037  8DB5              ;	jr 3F
1038  8DB5
1039  8DB5              ; -----
1040  8DB5
1041  8DB5              ;	`Movemos´ la explosión.
1042  8DB5
1043  8DB5              ;4 ld hl,(Puntero_DESPLZ_der)
1044  8DB5              ;	inc hl
1045  8DB5              ;	inc hl
1046  8DB5              ;	call Extrae_address
1047  8DB5              ;;	ld (Puntero_objeto),hl
1048  8DB5
1049  8DB5              ;;	ld hl,Frames_explosion
1050  8DB5              ;;	dec (hl)
1051  8DB5
1052  8DB5              ;;	ld hl,Ctrl_0
1053  8DB5              ;;	set 4,(hl);;
1054  8DB5
1055  8DB5              ;;	jr 3F
1056  8DB5
1057  8DB5              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1058  8DB5
1059  8DB5              ;2 xor a
1060  8DB5              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1061  8DB5
1062  8DB5              ; Movemos Entidades malignas.
1063  8DB5              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1064  8DB5
1065  8DB5              ;	ld a,(Ctrl_2)
1066  8DB5              ;	bit 5,a
1067  8DB5              ;	jr nz,8F
1068  8DB5
1069  8DB5              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1070  8DB5              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1071  8DB5              ;	jr 7F
1072  8DB5
1073  8DB5              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1074  8DB5
1075  8DB5              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1076  8DB5              ;	bit 4,a
1077  8DB5              ;	ret z
1078  8DB5
1079  8DB5              ; Ha habido desplazamiento de la entidad maligna.
1080  8DB5              ; Ha llegado a zona de AMADEUS ???
1081  8DB5
1082  8DB5              ;7 ld a,(Coordenada_y)
1083  8DB5              ;	cp $14
1084  8DB5              ;	jr c,1F
1085  8DB5
1086  8DB5              ; ---------
1087  8DB5
1088  8DB5              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1089  8DB5              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1090  8DB5
1091  8DB5              ;	di
1092  8DB5              ;	call Genera_coordenadas_X
1093  8DB5              ;	call Compara_coordenadas_X
1094  8DB5              ;	ei
1095  8DB5
1096  8DB5              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1097  8DB5
1098  8DB5              ; ---------
1099  8DB5
1100  8DB5              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1101  8DB5              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1102  8DB5              ;	call Limpia_Variables_de_borrado
1103  8DB5
1104  8DB5              ;3 ret
1105  8DB5
1106  8DB5              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1107  8DB5              ;
1108  8DB5              ;	24/07/24
1109  8DB5
1110  8DB5              Reinicia_Amadeus
1111  8DB5
1112  8DB5              ;	Reinicia posición y estado.
1113  8DB5
1114  8DB5 21 CF 50     	ld hl,$50cf
1115  8DB8 22 75 89     	ld (p.imp.amadeus),hl
1116  8DBB 21 F0 E0     	ld hl,$e0f0
1117  8DBE 22 77 89     	ld (Pamm_Amadeus),hl
1118  8DC1 21 3D 00     	ld hl,$003d
1119  8DC4 22 79 89     	ld (Comm_Amadeus),hl
1120  8DC7
1121  8DC7              ;	limpiamos el álbum de borrado.
1122  8DC7
1123  8DC7 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1124  8DCA
1125  8DCA AF           	xor a
1126  8DCB 77           	ld (hl),a
1127  8DCC
1128  8DCC E5           	push hl
1129  8DCD D1           	pop de
1130  8DCE 13           	inc de
1131  8DCF
1132  8DCF 01 23 00     	ld bc,35
1133  8DD2 ED B0        	ldir
1134  8DD4
1135  8DD4 CD EB 8F     	call Genera_datos_de_impresion_Amadeus
1136  8DD7
1137  8DD7              ;	Reinicia temporizaciones.
1138  8DD7
1139  8DD7 CD CF 90     	call Inicia_Shield
1140  8DDA
1141  8DDA 3E 5A        	ld a,90
1142  8DDC 32 53 8C     	ld (Shield),a
1143  8DDF
1144  8DDF 3E 64        	ld a,100
1145  8DE1 32 42 8C     	ld (Temp_new_live),a
1146  8DE4
1147  8DE4              ; 	Restauramos el FLAG: Amadeus vivo.
1148  8DE4
1149  8DE4 21 2E 8C     	ld hl,Ctrl_3
1150  8DE7 CB B6        	res 6,(hl)
1151  8DE9
1152  8DE9              ;	Fuerza la impresión de la nave en el siguiente frame.
1153  8DE9
1154  8DE9 21 2E 8C      	ld hl,Ctrl_3
1155  8DEC CB EE        	set 5,(hl)
1156  8DEE
1157  8DEE C9           	ret
1158  8DEF
1159  8DEF              ; --------------------------------------------------------------------------------------------------------------
1160  8DEF              ;
1161  8DEF              ;	12/05/24
1162  8DEF
1163  8DEF 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1164  8DF2 CB 27        	sla a
1165  8DF4 32 C6 8B     	ld (Velocidad),a
1166  8DF7 E6 10        	and $10
1167  8DF9 C8           	ret z
1168  8DFA
1169  8DFA              ; Restaura (Velocidad) a razón del nº de vueltas.
1170  8DFA
1171  8DFA 3A BE 8B     	ld a,(Contador_de_vueltas)
1172  8DFD CB 2F        	sra a
1173  8DFF CB 2F        	sra a
1174  8E01 32 C6 8B     	ld (Velocidad),a
1175  8E04
1176  8E04 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1177  8E07 23           	inc hl
1178  8E08 23           	inc hl
1179  8E09 23           	inc hl
1180  8E0A 23           	inc hl
1181  8E0B 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1182  8E0E
1183  8E0E C9           	ret
1184  8E0F
1185  8E0F              ; --------------------------------------------------------------------------------------------------------------
1186  8E0F              ;
1187  8E0F              ;	25/08/24
1188  8E0F
1189  8E0F              Change
1190  8E0F
1191  8E0F 3A 25 8C     	ld a,(Switch)
1192  8E12 EE 01        	xor 1
1193  8E14 32 25 8C     	ld (Switch),a
1194  8E17 2A 0C 8C     	ld hl,(Album_de_pintado)
1195  8E1A ED 5B 0E 8C  	ld de,(Album_de_borrado)
1196  8E1E EB           	ex de,hl
1197  8E1F 22 0C 8C     	ld (Album_de_pintado),hl
1198  8E22 22 28 8C     	ld (Scanlines_album_SP),hl
1199  8E25 ED 53 0E 8C  	ld (Album_de_borrado),de
1200  8E29 C9           	ret
1201  8E2A
1202  8E2A              Change_Amadeus
1203  8E2A
1204  8E2A 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1205  8E2D ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1206  8E31 EB           	ex de,hl
1207  8E32 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1208  8E35 ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1209  8E39 C9           	ret
1210  8E3A
1211  8E3A              Change_Disparos
1212  8E3A
1213  8E3A              ;	Exclusiones:
1214  8E3A
1215  8E3A 3A 1C 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1216  8E3D A7           	and a
1217  8E3E C8           	ret z
1218  8E3F
1219  8E3F              ; -----
1220  8E3F
1221  8E3F 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1222  8E42 ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1223  8E46 EB           	ex de,hl
1224  8E47 22 14 8C     	ld (Album_de_pintado_disparos),hl
1225  8E4A ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1226  8E4E 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1227  8E51
1228  8E51 3A 1A 8C     	ld a,(Num_de_bytes_album_de_disparos)
1229  8E54 32 1B 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1230  8E57
1231  8E57 C9           	ret
1232  8E58
1233  8E58              ; ------------------------------------
1234  8E58              ;
1235  8E58              ; 1/05/24
1236  8E58
1237  8E58              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1238  8E58              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1239  8E58
1240  8E58              ;	DESTRUYE: HL,DE,A
1241  8E58              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1242  8E58
1243  8E58              ;	Variables implicadas: (RND_SP).
1244  8E58
1245  8E58              Extrae_numero_aleatorio_y_avanza
1246  8E58
1247  8E58 21 00 89     	ld hl,Tabla_de_pintado
1248  8E5B EB           	ex de,hl
1249  8E5C 2A 43 8C     	ld hl,(RND_SP)
1250  8E5F EB           	ex de,hl
1251  8E60 A7           	and a
1252  8E61 ED 52        	sbc hl,de
1253  8E63
1254  8E63 2A 43 8C     	ld hl,(RND_SP)
1255  8E66 20 06        	jr nz,1F
1256  8E68
1257  8E68              ; Sitúa HL al principio de la tabla de nº aleatorios.
1258  8E68
1259  8E68 21 F6 88     	ld hl,Numeros_aleatorios
1260  8E6B 22 43 8C     	ld (RND_SP),HL
1261  8E6E
1262  8E6E              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1263  8E6E
1264  8E6E 7E           1 ld a,(hl)
1265  8E6F 23           	inc hl
1266  8E70 22 43 8C     	ld (RND_SP),hl
1267  8E73 C9           	ret
1268  8E74
1269  8E74              ; ------------------------------------
1270  8E74              ;
1271  8E74              ; 1/05/24
1272  8E74
1273  8E74              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1274  8E74              ; (1 a 4 segundos).
1275  8E74              ; Actualizamos (Clock_next_entity) con A.
1276  8E74
1277  8E74              ;	DESTRUYE: A y B.
1278  8E74              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1279  8E74              ;			 Actualiza (Clock_next_entity) con A.
1280  8E74
1281  8E74              ;	Variables implicadas: (Clock_next_entity).
1282  8E74
1283  8E74              ; Notas:
1284  8E74
1285  8E74              ; 	$32 1 seg.
1286  8E74              ; 	$64 2 seg.
1287  8E74              ; 	$96 3 seg.
1288  8E74              ; 	$c8 4 seg.
1289  8E74              ; 	$fa 5 seg.
1290  8E74
1291  8E74              ; $ffff 1310,7 seg, 22 minutos.
1292  8E74
1293  8E74              ;	$0100  5 seg. aproximadamente.
1294  8E74              ;	$0200 10 seg. aproximadamente.
1295  8E74              ;	$0300 15 seg. aproximadamente.
1296  8E74              ;	$0400 20 seg. aproximadamente.
1297  8E74              ;	$0500 25 seg. aproximadamente.
1298  8E74              ;	$0600 30 seg. aproximadamente.
1299  8E74
1300  8E74              Define_Clock_next_entity
1301  8E74
1302  8E74 FE 34        	cp $34
1303  8E76 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1304  8E78
1305  8E78              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1306  8E78
1307  8E78 4F           3 ld c,a
1308  8E79 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1309  8E7B 2A 78 5C     	ld hl,(FRAMES)
1310  8E7E A7           	and a
1311  8E7F ED 4A        	adc hl,bc
1312  8E81 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1313  8E84 C9           	ret
1314  8E85
1315  8E85 3E 34        1 ld a,$34
1316  8E87 18 EF        	jr 3B
1317  8E89
1318  8E89              ; ------------------------------------
1319  8E89              ;
1320  8E89              ; 18/03/24
1321  8E89
1322  8E89              Borra_diferencia
1323  8E89
1324  8E89 ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1325  8E8D
1326  8E8D 3A 25 8C     	ld a,(Switch)
1327  8E90 A7           	and a
1328  8E91 28 08        	jr z,2F
1329  8E93
1330  8E93 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1331  8E96 11 23 8C     	ld de,Techo_Scanlines_album_2
1332  8E99 18 06        	jr 3F
1333  8E9B
1334  8E9B 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1335  8E9E 11 21 8C     	ld de,Techo_Scanlines_album
1336  8EA1
1337  8EA1              ; Diferencia.
1338  8EA1
1339  8EA1 ED 42        3 sbc hl,bc
1340  8EA3
1341  8EA3 C8           	ret z
1342  8EA4 D8           	ret c
1343  8EA5
1344  8EA5              ; Nuevo techo, (más bajo que el anterior).
1345  8EA5              ; Fijamos nuevo techo y borramos bytes sobrantes.
1346  8EA5
1347  8EA5 EB           	ex de,hl
1348  8EA6
1349  8EA6 71           	ld (hl),c
1350  8EA7 2C           	inc l
1351  8EA8 70           	ld (hl),b
1352  8EA9
1353  8EA9 AF           	xor a
1354  8EAA 43           	ld b,e
1355  8EAB
1356  8EAB 2A 28 8C     	ld hl,(Scanlines_album_SP)
1357  8EAE
1358  8EAE 77           1 ld (hl),a
1359  8EAF 23           	inc hl
1360  8EB0 10 FC        	djnz 1B
1361  8EB2
1362  8EB2              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1363  8EB2
1364  8EB2 21 2E 8C     	ld hl,Ctrl_3
1365  8EB5 CB DE        	set 3,(hl)
1366  8EB7
1367  8EB7 C9           	ret
1368  8EB8
1369  8EB8              ; --------------------------------------------------------------------------------------------------------------
1370  8EB8              ;
1371  8EB8              ;	26/3/24
1372  8EB8
1373  8EB8              Recauda_informacion_de_entidad_en_curso
1374  8EB8
1375  8EB8              ; Almacena la Coordenada Y de la entidad en curso.
1376  8EB8
1377  8EB8              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1378  8EB8
1379  8EB8 3A BD 8B     	ld a,(Coordenada_y)
1380  8EBB 2A 2A 8C     	ld hl,(India_SP)
1381  8EBE 77           	ld (hl),a
1382  8EBF 2C           	inc l
1383  8EC0
1384  8EC0              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1385  8EC0
1386  8EC0              ;	ld de,(Scanlines_album_SP)
1387  8EC0
1388  8EC0 73           	ld (hl),e
1389  8EC1 2C           	inc l
1390  8EC2 72           	ld (hl),d
1391  8EC3 2C           	inc l
1392  8EC4
1393  8EC4 22 2A 8C     	ld (India_SP),hl
1394  8EC7
1395  8EC7 C9           	ret
1396  8EC8
1397  8EC8              ; --------------------------------------------------------------------------------------------------------------
1398  8EC8              ;
1399  8EC8              ;	27/03/24
1400  8EC8              ;
1401  8EC8
1402  8EC8              Inicializa_India_y_limpia_Tabla_de_impresion
1403  8EC8
1404  8EC8 2A 2A 8C     	ld hl,(India_SP)
1405  8ECB 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1406  8ECE
1407  8ECE 79           	ld a,c
1408  8ECF 95           	sub l
1409  8ED0 28 06        	jr z,2F
1410  8ED2 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1411  8ED3              ;														; _ y pasamos a inicializar (India_SP).
1412  8ED3 AF           	xor a
1413  8ED4
1414  8ED4 77           1 ld (hl),a
1415  8ED5 2C           	inc l
1416  8ED6 10 FC        	djnz 1B												; Limpia Tabla.
1417  8ED8
1418  8ED8 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1419  8EDB 22 2A 8C     	ld (India_SP),hl
1420  8EDE
1421  8EDE C9           	ret
1422  8EDF
1423  8EDF              ; --------------------------------------------------------------------------------------------------------------
1424  8EDF              ;
1425  8EDF              ;	31/3/24
1426  8EDF
1427  8EDF              Ordena_tabla_de_impresion
1428  8EDF
1429  8EDF              ; 5794 T/states.
1430  8EDF              ; 6278 T/states.
1431  8EDF              ; 5310 T/states.
1432  8EDF
1433  8EDF              ; Inicializamos punteros (India_SP) e (India_2_SP).
1434  8EDF              ; Inicializamos contador de comparaciones, [C].
1435  8EDF              ; Cargamos los registros A y B para efectuar comparación.
1436  8EDF
1437  8EDF FD 2E 00     	ld iyl,0
1438  8EE2
1439  8EE2 3A 03 8C     	ld a,(Entidades_en_curso)
1440  8EE5 FE 04        	cp 4 	;	4
1441  8EE7 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1442  8EE8
1443  8EE8 3D           	dec a
1444  8EE9 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1445  8EEA 51           	ld d,c 										; Copia de respaldo.
1446  8EEB
1447  8EEB 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1448  8EEC
1449  8EEC 21 03 89     	ld hl,Tabla_de_pintado+3
1450  8EEF 46           	ld b,(hl)
1451  8EF0 22 2C 8C     	ld (India_2_SP),hl
1452  8EF3
1453  8EF3 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1454  8EF4 DC 1C 8F     	call c, Avanza_India_2_SP
1455  8EF7 CC 1C 8F     	call z, Avanza_India_2_SP
1456  8EFA
1457  8EFA FD 2D        	dec iyl
1458  8EFC 28 18        	jr z,2F
1459  8EFE
1460  8EFE
1461  8EFE              ; --------------------------------------------------------------------------------------------------------------
1462  8EFE              ;
1463  8EFE              ;	7/4/24
1464  8EFE
1465  8EFE              Trueque
1466  8EFE
1467  8EFE              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1468  8EFE              ;  			A contiene en nº de fila de (India_SP).
1469  8EFE              ;			HL contiene (India_2_SP).
1470  8EFE
1471  8EFE D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1472  8EFF E5           	push hl										; Preservo (India_2_SP).
1473  8F00
1474  8F00 ED 5B 2A 8C  	ld de,(India_SP)
1475  8F04 EB           	ex de,hl
1476  8F05 70           	ld (hl),b
1477  8F06 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1478  8F07
1479  8F07 CD 48 8F     	call Intercambia_1_byte
1480  8F0A CD 48 8F     	call Intercambia_1_byte
1481  8F0D
1482  8F0D
1483  8F0D              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1484  8F0D              ; Recuperamos (India_2_SP) en HL.
1485  8F0D
1486  8F0D 2A 2A 8C     	ld hl,(India_SP)
1487  8F10 7E           	ld a,(hl)
1488  8F11
1489  8F11 E1           	pop hl
1490  8F12 D1           	pop de
1491  8F13
1492  8F13              ; --------------------------------------------------------------------------------------------------------------
1493  8F13
1494  8F13 CD 1C 8F     	call Avanza_India_2_SP
1495  8F16
1496  8F16 14           2 inc d
1497  8F17 15           	dec d
1498  8F18 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1499  8F19 18 D8        	jr 1B
1500  8F1B
1501  8F1B C9           	ret
1502  8F1C
1503  8F1C              ; ----- ----- ----- ----- -----
1504  8F1C
1505  8F1C              Avanza_India_2_SP
1506  8F1C
1507  8F1C 0D           	dec c
1508  8F1D 28 0A        	jr z,Avanza_punteros_indios
1509  8F1F
1510  8F1F FD 2C        	inc iyl
1511  8F21
1512  8F21 2C           	inc l
1513  8F22 2C           	inc l
1514  8F23 2C           	inc l
1515  8F24
1516  8F24 46           	ld b,(hl)
1517  8F25 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1518  8F28
1519  8F28 C9           	ret
1520  8F29
1521  8F29              ; ----- ----- ----- ----- -----
1522  8F29
1523  8F29              Avanza_punteros_indios
1524  8F29
1525  8F29 15           	dec d
1526  8F2A 28 15        	jr z,Prepara_salida
1527  8F2C
1528  8F2C 4A           	ld c,d
1529  8F2D
1530  8F2D 2A 2A 8C     	ld hl,(India_SP)
1531  8F30 2C           	inc l
1532  8F31 2C           	inc l
1533  8F32 2C           	inc l
1534  8F33 7E           	ld a,(hl)
1535  8F34 22 2A 8C     	ld (India_SP),hl
1536  8F37
1537  8F37 2C           	inc l
1538  8F38 2C           	inc l
1539  8F39 2C           	inc l
1540  8F3A 46           	ld b,(hl)
1541  8F3B 22 2C 8C     	ld (India_2_SP),hl
1542  8F3E
1543  8F3E FD 2C        	inc iyl
1544  8F40
1545  8F40 C9           	ret
1546  8F41
1547  8F41              Prepara_salida
1548  8F41
1549  8F41 21 00 89     	ld hl,Tabla_de_pintado
1550  8F44 22 2A 8C     	ld (India_SP),hl
1551  8F47 C9           	ret
1552  8F48
1553  8F48
1554  8F48 2C           Intercambia_1_byte inc l
1555  8F49 1C           	inc e
1556  8F4A 46           	ld b,(hl)
1557  8F4B 1A           	ld a,(de)
1558  8F4C EB           	ex de,hl
1559  8F4D 70           	ld (hl),b
1560  8F4E 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1561  8F4F C9           	ret
1562  8F50
1563  8F50              ; -----------------------------------------------------------------------------------
1564  8F50              ;
1565  8F50              ;	20/01/24
1566  8F50              ;
1567  8F50              ;
1568  8F50
1569  8F50              Construye_movimientos_masticados_entidad
1570  8F50
1571  8F50 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1572  8F53 E5           	push hl
1573  8F54 CD 97 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1574  8F57              ;															; _ el (Contador_de_mov_masticados).
1575  8F57 CD 67 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1576  8F5A              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1577  8F5A CD 94 99     	call Recompone_posicion_inicio
1578  8F5D
1579  8F5D CD C4 96     1 call Draw
1580  8F60 CD 7C 8F     	call Guarda_movimiento_masticado
1581  8F63
1582  8F63 CD 41 9D     	call Movimiento
1583  8F66
1584  8F66 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1585  8F69 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1586  8F6B 28 F0        	jr z,1B
1587  8F6D
1588  8F6D              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1589  8F6D              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1590  8F6D
1591  8F6D E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1592  8F6E 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1593  8F71
1594  8F71              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1595  8F71
1596  8F71 CD A5 9E     	call Situa_en_contador_general_de_mov_masticados
1597  8F74
1598  8F74              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1599  8F74              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1600  8F74
1601  8F74 ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1602  8F78
1603  8F78 71           	ld (hl),c
1604  8F79 23           	inc hl
1605  8F7A 70           	ld (hl),b
1606  8F7B
1607  8F7B C9           	ret
1608  8F7C
1609  8F7C              ; -----------------------------------------------------------------------------------
1610  8F7C              ;
1611  8F7C              ;	28/12/23
1612  8F7C              ;
1613  8F7C              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1614  8F7C              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1615  8F7C
1616  8F7C              Guarda_movimiento_masticado
1617  8F7C
1618  8F7C ED 73 08 8C  	ld (Stack),sp
1619  8F80 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1620  8F84
1621  8F84 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1622  8F86 FD E5            push iy 												; Pushea Puntero_objeto.
1623  8F88
1624  8F88 ED 7B 08 8C      ld sp,(Stack)
1625  8F8C
1626  8F8C 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1627  8F8F 23           	inc hl
1628  8F90 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1629  8F93
1630  8F93 CD 97 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1631  8F96              ;															; _ el (Contador_de_mov_masticados).
1632  8F96 C9               ret
1633  8F97
1634  8F97              ; --------------------------------------------------------------------------------------------------------------
1635  8F97              ;
1636  8F97              ;	12/1/24
1637  8F97              ;
1638  8F97              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1639  8F97
1640  8F97              Actualiza_Puntero_de_almacen_de_mov_masticados
1641  8F97
1642  8F97 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1643  8F9A 01 04 00     	ld bc,4
1644  8F9D A7           	and a
1645  8F9E ED 4A        	adc hl,bc
1646  8FA0 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1647  8FA3 C9           	ret
1648  8FA4
1649  8FA4              ; --------------------------------------------------------------------------------------------------------------
1650  8FA4              ;
1651  8FA4              ;	24/03/24
1652  8FA4              ;
1653  8FA4              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1654  8FA4              ;
1655  8FA4              ;	IX contiene el puntero de impresión.
1656  8FA4              ;	DE contiene (Puntero_objeto).
1657  8FA4
1658  8FA4
1659  8FA4              Cargamos_registros_con_mov_masticado
1660  8FA4
1661  8FA4 ED 73 08 8C  	ld (Stack),sp
1662  8FA8 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1663  8FAC
1664  8FAC D1           	pop de 															; DE contiene Puntero_objeto
1665  8FAD DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1666  8FAF
1667  8FAF ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1668  8FB3 ED 7B 08 8C  	ld sp,(Stack)
1669  8FB7
1670  8FB7 7B           	ld a,e
1671  8FB8 82           	add d															; Comprueba si ya no hay datos en el almacén.
1672  8FB9
1673  8FB9 CC 57 93     	call z,Reinicia_entidad_maliciosa
1674  8FBC
1675  8FBC C9           	ret
1676  8FBD
1677  8FBD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1678  8FBD              ;
1679  8FBD              ;	22/7/24
1680  8FBD
1681  8FBD              Cargamos_registros_con_explosion
1682  8FBD
1683  8FBD
1684  8FBD 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1685  8FC0 CD 61 90     	call Extrae_address
1686  8FC3
1687  8FC3 5D           	ld e,l
1688  8FC4 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1689  8FC5
1690  8FC5 DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1691  8FC9
1692  8FC9 C9           	ret
1693  8FCA
1694  8FCA
1695  8FCA              Cargamos_registros_con_explosion_Amadeus
1696  8FCA
1697  8FCA 2A 77 89     	ld hl,(Pamm_Amadeus)
1698  8FCD CD 61 90     	call Extrae_address
1699  8FD0
1700  8FD0 5D           	ld e,l
1701  8FD1 54           	ld d,h
1702  8FD2
1703  8FD2 DD 2A 75 89  	ld ix,(p.imp.amadeus)
1704  8FD6
1705  8FD6 C9           	ret
1706  8FD7
1707  8FD7              ; --------------------------------------------------------------------------------------------------------------
1708  8FD7              ;
1709  8FD7              ;	17/06/24
1710  8FD7              ;
1711  8FD7              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1712  8FD7              ;
1713  8FD7              ;	IX contiene el puntero de impresión.
1714  8FD7              ;	DE contiene (Puntero_objeto).
1715  8FD7
1716  8FD7
1717  8FD7              Cargamos_registros_con_mov_masticado_Amadeus
1718  8FD7
1719  8FD7 ED 73 08 8C  	ld (Stack),sp
1720  8FDB ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1721  8FDF D1           	pop de 															; DE contiene Puntero_objeto
1722  8FE0 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1723  8FE2 DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1724  8FE6 ED 7B 08 8C  	ld sp,(Stack)
1725  8FEA C9           	ret
1726  8FEB
1727  8FEB              ; ---------------------------------------------------------------------------------------------------------------------
1728  8FEB              ;
1729  8FEB              ;	18/6/24
1730  8FEB              ;
1731  8FEB              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1732  8FEB
1733  8FEB              Genera_datos_de_impresion_Amadeus
1734  8FEB
1735  8FEB 3A 74 89     	ld a,(Impacto_Amadeus)
1736  8FEE A7           	and a
1737  8FEF 20 03        	jr nz,1F
1738  8FF1
1739  8FF1              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1740  8FF1              ; _apuntando a la correspondiente explosión.
1741  8FF1
1742  8FF1 CD D7 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1743  8FF4
1744  8FF4 DD 7D        1 ld a,ixl
1745  8FF6 E6 1F        	and $1f
1746  8FF8 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1747  8FFB
1748  8FFB 2A 28 8C     	ld hl,(Scanlines_album_SP)
1749  8FFE E5           	push hl
1750  8FFF
1751  8FFF 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1752  9002 22 28 8C     	ld (Scanlines_album_SP),hl
1753  9005
1754  9005 CD AC 94     	call Genera_datos_de_impresion
1755  9008
1756  9008 E1           	pop hl
1757  9009 22 28 8C     	ld (Scanlines_album_SP),hl
1758  900C
1759  900C C9           	ret
1760  900D
1761  900D              ; ---------------------------------------------------------------------------------------------------------------------
1762  900D              ;
1763  900D              ;	13/03/24
1764  900D              ;
1765  900D              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1766  900D
1767  900D              Inicia_albumes_de_lineas
1768  900D
1769  900D 21 00 80     	ld hl,Scanlines_album
1770  9010 22 0C 8C     	ld (Album_de_pintado),hl
1771  9013 22 28 8C     	ld (Scanlines_album_SP),hl
1772  9016
1773  9016 21 1A 81     	ld hl,Scanlines_album_2
1774  9019 22 0E 8C     	ld (Album_de_borrado),hl
1775  901C
1776  901C C9           	ret
1777  901D
1778  901D              Inicia_albumes_de_lineas_Amadeus
1779  901D
1780  901D 21 34 82     	ld hl,Amadeus_scanlines_album
1781  9020 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1782  9023 21 58 82     	ld hl,Amadeus_scanlines_album_2
1783  9026 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1784  9029
1785  9029 C9           	ret
1786  902A
1787  902A              Inicia_albumes_de_disparos
1788  902A
1789  902A 21 7C 82     	ld hl,Disparos_scanlines_album
1790  902D 22 14 8C     	ld (Album_de_pintado_disparos),hl
1791  9030 21 8E 82     	ld hl,Disparos_scanlines_album_2
1792  9033 22 16 8C     	ld (Album_de_borrado_disparos),hl
1793  9036
1794  9036 21 7C 82     	ld hl,Disparos_scanlines_album
1795  9039 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1796  903C
1797  903C C9           	ret
1798  903D
1799  903D              ; ---------------------------------------------------------------------------------------------------------------------
1800  903D              ;
1801  903D              ; 8/1/23
1802  903D              ;
1803  903D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1804  903D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1805  903D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1806  903D
1807  903D              ; Destruye HL y DE !!!!!
1808  903D
1809  903D              Inicia_punteros_de_cajas
1810  903D
1811  903D 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1812  9040 CD 61 90         call Extrae_address
1813  9043 22 FB 8B         ld (Puntero_store_caja),hl
1814  9046 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1815  9049 22 FF 8B     	ld (Indice_restore_caja),hl
1816  904C CD 61 90     	call Extrae_address
1817  904F 22 FD 8B     	ld (Puntero_restore_caja),hl
1818  9052 C9               ret
1819  9053
1820  9053              ; *************************************************************************************************************************************************************
1821  9053              ;
1822  9053              ; 8/1/23
1823  9053              ;
1824  9053              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1825  9053
1826  9053 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1827  9056 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1828  9059 C9           	ret
1829  905A 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1830  905D 22 33 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1831  9060 C9           	ret
1832  9061
1833  9061              ; *************************************************************************************************************************************************************
1834  9061              ;
1835  9061              ; 20/10/22
1836  9061              ;
1837  9061              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1838  9061              ;
1839  9061              ; Destruye el puntero y DE !!!!!
1840  9061
1841  9061 5E           Extrae_address ld e,(hl)
1842  9062 23           	inc hl
1843  9063 56           	ld d,(hl)
1844  9064 2B           	dec hl
1845  9065 EB           	ex de,hl
1846  9066 C9           	ret
1847  9067
1848  9067              ; *************************************************************************************************************************************************************
1849  9067              ;
1850  9067              ;	20/1/24
1851  9067              ;
1852  9067              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1853  9067              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1854  9067              ;
1855  9067              ;   Destruye HL y BC !!!!!,
1856  9067              ;
1857  9067              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1858  9067              ;					"0" ..... Izquierda.
1859  9067
1860  9067              Inicia_Puntero_objeto
1861  9067
1862  9067 3A DA 8B     	ld a,(Cuad_objeto)
1863  906A E6 01        	and 1
1864  906C F5           	push af
1865  906D CC 89 90     	call z,Inicia_puntero_objeto_izq
1866  9070 F1           	pop af
1867  9071 C8           	ret z
1868  9072 CD 76 90     	call Inicia_puntero_objeto_der
1869  9075 C9           	ret
1870  9076
1871  9076              ; Arrancamos desde la parte izquierda de la pantalla.
1872  9076              ; Iniciamos (Indice_Sprite_der).
1873  9076
1874  9076 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1875  9079 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1876  907C CD 61 90     	call Extrae_address
1877  907F 22 CD 8B     	ld (Puntero_objeto),hl
1878  9082
1879  9082 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1880  9085 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1881  9088 C9           	ret
1882  9089
1883  9089              ; Arrancamos desde la parte derecha de la pantalla.
1884  9089              ; Iniciamos (Indice_Sprite_izq).
1885  9089
1886  9089 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1887  908C 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1888  908F CD 61 90     	call Extrae_address
1889  9092 22 CD 8B     	ld (Puntero_objeto),hl
1890  9095
1891  9095 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1892  9098 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1893  909B C9           	ret
1894  909C
1895  909C              ; **************************************************************************************************
1896  909C              ;
1897  909C              ;	06/07/24
1898  909C              ;
1899  909C              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1900  909C
1901  909C              Restore_entidad
1902  909C
1903  909C 2A FB 8B     	ld hl,(Puntero_store_caja)
1904  909F 7E           	ld a,(hl)
1905  90A0 A7           	and a
1906  90A1 CC AF 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1907  90A4 28 F6        	jr z,Restore_entidad
1908  90A6
1909  90A6 11 BB 8B     	ld de,Bandeja_DRAW
1910  90A9 01 0C 00     	ld bc,12
1911  90AC ED B0        	ldir
1912  90AE C9           	ret
1913  90AF
1914  90AF              ; **************************************************************************************************
1915  90AF              ;
1916  90AF              ;	08/05/23
1917  90AF              ;
1918  90AF              ;	Incrementamos los dos punteros de entidades. (+1).
1919  90AF
1920  90AF              Incrementa_punteros_de_cajas
1921  90AF
1922  90AF 2A FD 8B     	ld hl,(Puntero_restore_caja)
1923  90B2 22 FB 8B     	ld (Puntero_store_caja),hl
1924  90B5 2A FF 8B     	ld hl,(Indice_restore_caja)
1925  90B8 23           	inc hl
1926  90B9 23           	inc hl
1927  90BA 22 FF 8B     	ld (Indice_restore_caja),hl
1928  90BD CD 61 90         call Extrae_address
1929  90C0 22 FD 8B         ld (Puntero_restore_caja),hl
1930  90C3 C9               ret
1931  90C4
1932  90C4              ; -----------------------------------------------------------
1933  90C4
1934  90C4              ; Teclado.
1935  90C4
1936  90C4 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1937  90C6 DB FE        	in a,($fe)
1938  90C8 E6 01        	and $01
1939  90CA 28 02        	jr z,1f
1940  90CC 18 F6        	jr Pulsa_ENTER
1941  90CE C9           1 ret
1942  90CF
1943  90CF              ; **************************************************************************************************
1944  90CF              ;
1945  90CF              ; Temporización.
1946  90CF
1947  90CF              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1948  90CF              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1949  90CF              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1950  90CF              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1951  90CF
1952  90CF              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1953  90CF              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1954  90CF              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1955  90CF
1956  90CF              ; A partir de $4f61 no hace falta DELAY.
1957  90CF
1958  90CF              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1959  90CF
1960  90CF              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1961  90CF              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1962  90CF              ;	LD A,B
1963  90CF              ;	AND A
1964  90CF              ;	JR NZ,wait
1965  90CF              ;	RET
1966  90CF
1967  90CF              ; ---------------------------------------------------------------------------------------------------------------
1968  90CF              ;
1969  90CF              ;	13/07/24
1970  90CF              ;
1971  90CF
1972  90CF              Inicia_Shield
1973  90CF
1974  90CF 21 4D 8C     	ld hl,Datos_Shield
1975  90D2 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1976  90D5
1977  90D5 7E           	ld a,(hl)
1978  90D6 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1979  90D9
1980  90D9 3E 01        	ld a,1
1981  90DB 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1982  90DE
1983  90DE C9           	ret
1984  90DF
1985  90DF              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1986  90DF              ;
1987  90DF              ;	4/6/24
1988  90DF              ;
1989  90DF              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1990  90DF              ;
1991  90DF              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1992  90DF              ;
1993  90DF
1994  90DF              Actualiza_pantalla
1995  90DF
1996  90DF 3E 02        	ld a,2
1997  90E1 D3 FE        	out ($fe),a
1998  90E3
1999  90E3 3A 2E 8C     	ld a,(Ctrl_3)
2000  90E6 CB 57        	bit 2,a
2001  90E8 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2002  90EA
2003  90EA              Borrando_entidades
2004  90EA
2005  90EA 2A 28 8C     	ld hl,(Scanlines_album_SP)
2006  90ED CD 61 90     	call Extrae_address
2007  90F0 24           	inc h
2008  90F1 25           	dec h
2009  90F2 28 05        	jr z,Pintando_entidades
2010  90F4 CD A1 95     	call Pinta_Sprites
2011  90F7 18 F1        	jr Borrando_entidades
2012  90F9
2013  90F9              Pintando_entidades
2014  90F9
2015  90F9 2A 2A 8C     	ld hl,(India_SP)
2016  90FC 2C           	inc l
2017  90FD CD 61 90     	call Extrae_address
2018  9100 24           	inc h
2019  9101 25           	dec h
2020  9102 28 0E        	jr z,Ejecuta_escudo
2021  9104 1C           	inc e
2022  9105 1C           	inc e
2023  9106 ED 53 2A 8C  	ld (India_SP),de
2024  910A CD 61 90     	call Extrae_address
2025  910D CD A1 95     	call Pinta_Sprites
2026  9110 18 E7        	jr Pintando_entidades
2027  9112
2028  9112              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2029  9112
2030  9112              Ejecuta_escudo
2031  9112
2032  9112 3A 53 8C     	ld a,(Shield)
2033  9115 A7           	and a
2034  9116 20 2F        	jr nz,Aplica_Shield
2035  9118
2036  9118              Borrando_Amadeus
2037  9118
2038  9118 21 2E 8C     	ld hl,Ctrl_3
2039  911B CB 6E        	bit 5,(hl)
2040  911D 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2041  911F
2042  911F 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2043  9122 CD 61 90     	call Extrae_address
2044  9125 24           	inc h
2045  9126 25           	dec h
2046  9127 28 03        	jr z,Pintando_Amadeus
2047  9129 CD A1 95     	call Pinta_Sprites
2048  912C
2049  912C              Pintando_Amadeus
2050  912C
2051  912C 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2052  912F CD 61 90     	call Extrae_address
2053  9132 24           	inc h
2054  9133 25           	dec h
2055  9134 28 03        	jr z,1F
2056  9136 CD A1 95     	call Pinta_Sprites
2057  9139
2058  9139              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2059  9139
2060  9139 21 2E 8C     1 ld hl,Ctrl_3
2061  913C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2062  913E CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2063  9140 CB AE        	res 5,(hl)
2064  9142
2065  9142 3E 01        	ld a,1												; Borde azul.
2066  9144 D3 FE        	out ($fe),a
2067  9146
2068  9146 C9           	ret
2069  9147
2070  9147              Aplica_Shield
2071  9147
2072  9147              ;	Bit 1 "1" (Shield_3) Sólo borra.
2073  9147              ;		  "0"     ""     Borra/Pinta.
2074  9147              ;	Bit 2    ""  RET.	 No borra, no pinta.
2075  9147
2076  9147 21 55 8C     	ld hl,Shield_3
2077  914A
2078  914A CB 5E        	bit 3,(hl)
2079  914C 20 DE        	jr nz,Pintando_Amadeus
2080  914E
2081  914E CB 56        	bit 2,(hl)
2082  9150 20 E7        	jr nz,1B
2083  9152
2084  9152 CB 4E        	bit 1,(hl)
2085  9154 C4 5B 91     	call nz,Borra_Amadeus_shield
2086  9157
2087  9157 28 BF        	jr z,Borrando_Amadeus
2088  9159 18 DE        	jr 1B
2089  915B
2090  915B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2091  915B
2092  915B              Borra_Amadeus_shield
2093  915B
2094  915B 3A 2E 8C     	ld a,(Ctrl_3)
2095  915E CB 6F        	bit 5,a
2096  9160 28 08        	jr z,1F
2097  9162
2098  9162 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2099  9165 CD 61 90     	call Extrae_address
2100  9168 18 06        	jr 2F
2101  916A
2102  916A 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2103  916D CD 61 90     	call Extrae_address
2104  9170
2105  9170 CD A1 95     2 call Pinta_Sprites
2106  9173
2107  9173 AF           	xor a
2108  9174 3C           	inc a											; Asegura NZ en la salida de la rutina.
2109  9175
2110  9175 C9           	ret
2111  9176
2112  9176              Pinta_Amadeus_shield
2113  9176
2114  9176 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2115  9179 CD 61 90     	call Extrae_address
2116  917C CD A1 95     	call Pinta_Sprites
2117  917F
2118  917F AF           	xor a
2119  9180 3C           	inc a											; Asegura NZ en la salida de la rutina.
2120  9181
2121  9181 C9           	ret
2122  9182
2123  9182              Borra_Pinta_Amadeus_shield
2124  9182
2125  9182 CD 5B 91     	call Borra_Amadeus_shield
2126  9185 CD 76 91     	call Pinta_Amadeus_shield
2127  9188 C9           	ret
2128  9189
2129  9189              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2130  9189              ;
2131  9189              ;	19/6/24
2132  9189              ;
2133  9189
2134  9189              Teclado
2135  9189
2136  9189              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2137  9189
2138  9189 3E F7        	ld a,$f7												; "5" para disparar.
2139  918B DB FE        	in a,($fe)
2140  918D E6 10        	and $10
2141  918F
2142  918F CC EA 9F     	call z,Genera_disparo_Amadeus
2143  9192
2144  9192 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2145  9194 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2146  9196 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2147  9198 CC 0E 9D         call z,Amadeus_a_izquierda
2148  919B
2149  919B 3E F7        	ld a,$f7
2150  919D DB FE        	in a,($fe)
2151  919F E6 01        	and $01
2152  91A1 C8           	ret z
2153  91A2
2154  91A2 3E F7        	ld a,$f7
2155  91A4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2156  91A6 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2157  91A8 CC 26 9D     	call z,Amadeus_a_derecha
2158  91AB
2159  91AB C9           	ret
2160  91AC
2161  91AC              ; ------------------------------------------------------------------------------------------------------------------------
2162  91AC              ;
2163  91AC              ;	06/07/24
2164  91AC              ;
2165  91AC
2166  91AC              Genera_explosion
2167  91AC
2168  91AC 21 40 8C     	ld hl,Clock_explosion
2169  91AF 35           	dec (hl)
2170  91B0 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2171  91B2
2172  91B2              Borra_entidad_colisionada
2173  91B2
2174  91B2 CD B8 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2175  91B5 CD BD 8F     	call Cargamos_registros_con_explosion
2176  91B8 CD AC 94     	call Genera_datos_de_impresion
2177  91BB
2178  91BB AF           	xor a
2179  91BC 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2180  91BD
2181  91BD C9           	ret
2182  91BE
2183  91BE              Siguiente_frame_explosion
2184  91BE
2185  91BE 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2186  91C0
2187  91C0              ; Avanza Frame de explosión.
2188  91C0
2189  91C0 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2190  91C3 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2191  91C6
2192  91C6 79           	ld a,c
2193  91C7 95           	sub l
2194  91C8 20 0B        	jr nz,1F
2195  91CA
2196  91CA              ; Fín de la entidad !!!!!!!!!!!!!
2197  91CA
2198  91CA 21 02 8C     	ld hl,Numero_parcial_de_entidades
2199  91CD 35           	dec (hl)
2200  91CE 23           	inc hl
2201  91CF 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2202  91D0
2203  91D0 CD 2C 93     	call Limpiamos_bandeja_DRAW
2204  91D3 18 DD        	jr Borra_entidad_colisionada
2205  91D5
2206  91D5 23           1 inc hl
2207  91D6 23           	inc hl
2208  91D7 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2209  91DA 18 D6        	jr Borra_entidad_colisionada
2210  91DC
2211  91DC              ; ----- ----- ----- ----- -----
2212  91DC
2213  91DC              Genera_explosion_Amadeus
2214  91DC
2215  91DC 21 41 8C     	ld hl,Clock_explosion_Amadeus
2216  91DF 35           	dec (hl)
2217  91E0 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2218  91E2
2219  91E2              Borra_Amadeus_impactado
2220  91E2
2221  91E2 CD 2A 8E     	call Change_Amadeus
2222  91E5 CD CA 8F     	call Cargamos_registros_con_explosion_Amadeus
2223  91E8 CD EB 8F     	call Genera_datos_de_impresion_Amadeus
2224  91EB
2225  91EB 21 2E 8C     	ld hl,Ctrl_3
2226  91EE CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2227  91F0
2228  91F0 AF           	xor a
2229  91F1 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2230  91F2
2231  91F2 C9           	ret
2232  91F3
2233  91F3              Siguiente_frame_explosion_Amadeus
2234  91F3
2235  91F3 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2236  91F5
2237  91F5              ; Avanza Frame de explosión.
2238  91F5
2239  91F5 2A 77 89     	ld hl,(Pamm_Amadeus)
2240  91F8 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2241  91FB
2242  91FB 79           	ld a,c
2243  91FC 95           	sub l
2244  91FD 20 0B        	jr nz,1F
2245  91FF
2246  91FF              ; Fín de Amadeus !!!!!!!!!!!!!
2247  91FF              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2248  91FF
2249  91FF AF           	xor a
2250  9200 32 74 89     	ld (Impacto_Amadeus),a
2251  9203 21 2E 8C     	ld hl,Ctrl_3
2252  9206 CB F6        	set 6,(hl)
2253  9208
2254  9208 18 D8        	jr Borra_Amadeus_impactado
2255  920A
2256  920A 23           1 inc hl
2257  920B 23           	inc hl
2258  920C 22 77 89     	ld (Pamm_Amadeus),hl
2259  920F 18 D1        	jr Borra_Amadeus_impactado
2260  9211
2261  9211              ; ---------------------------------------------------------------
2262  9211
2263  9211              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9211              ; ******************************************************************************************************************************************************************************************
   2+ 9211              ;
   3+ 9211              ;   21/04/24
   4+ 9211              ;
   5+ 9211              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9211              ;   (XOR) bit a bit.
   7+ 9211              ;
   8+ 9211              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9211
  10+ 9211              Derivando_RND
  11+ 9211
  12+ 9211 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9214
  14+ 9214 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9216 C5               push bc
  16+ 9217              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9217 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 921A              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 921A
  20+ 921A A7           6 and a                                 ; Carry a "0".
  21+ 921B CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 921D 30 02            jr nc,1F
  23+ 921F
  24+ 921F CB C1            set 0,c
  25+ 9221
  26+ 9221 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9222 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9224 5F               ld e,a
  29+ 9225
  30+ 9225 7A               ld a,d
  31+ 9226 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9228 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 922A
  34+ 922A CB 3F            srl a
  35+ 922C
  36+ 922C AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 922D
  38+ 922D 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 922E 28 04            jr z,4F
  40+ 9230
  41+ 9230 CB FF            set 7,a
  42+ 9232 18 02            jr 5F
  43+ 9234
  44+ 9234 CB BF        4 res 7,a
  45+ 9236
  46+ 9236 CB 21        5 sla c
  47+ 9238 10 E0            djnz 6B
  48+ 923A
  49+ 923A 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 923B
  51+ 923B 77               ld (hl),a
  52+ 923C 23               inc hl
  53+ 923D C1               pop bc
  54+ 923E 10 D4            djnz 3B
  55+ 9240
  56+ 9240 C9               ret
  57+ 9241
  58+ 9241
  59+ 9241
# file closed: RND_Derivando.asm
2264  9241              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9241              ;---------------------------------------------------------------------------------------------------------------
   2+ 9241              ;
   3+ 9241              ;   8/3/24
   4+ 9241              ;
   5+ 9241              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9241              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9241              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9241              ;	_ de la 1ª entidad del Nivel.
   9+ 9241              ;
  10+ 9241              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9241
  12+ 9241              ;	MODIFICA: HL,DE y A.
  13+ 9241              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9241
  15+ 9241              Inicializa_Nivel
  16+ 9241
  17+ 9241 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9244 CD 61 90     	call Extrae_address
  19+ 9247 7E           	ld a,(hl)
  20+ 9248 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 924B 23           	inc hl
  22+ 924C CD 59 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 924F 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9252 CD 62 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9255
  26+ 9255 CD 73 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9258 C9           	ret
  28+ 9259
  29+ 9259              ; ----------------------
  30+ 9259
  31+ 9259 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 925C 01 04 00     	ld bc,4
  33+ 925F ED B0        	ldir
  34+ 9261 C9           	ret
  35+ 9262
  36+ 9262 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9263 CD FD 93         call Calcula_salto_en_BC
  38+ 9266 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9269 A7               and a
  40+ 926A ED 4A            adc hl,bc
  41+ 926C CD 61 90         call Extrae_address
  42+ 926F 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 9272 C9               ret
  44+ 9273
  45+ 9273 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9276 CD FD 93     	call Calcula_salto_en_BC
  47+ 9279 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 927C A7               and a
  49+ 927D ED 4A            adc hl,bc
  50+ 927F CD 61 90         call Extrae_address
  51+ 9282 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 9285 C9           	ret
  53+ 9286
  54+ 9286              ;---------------------------------------------------------------------------------------------------------------
  55+ 9286              ;
  56+ 9286              ;   5/1/24
  57+ 9286              ;
  58+ 9286              ;	Destruye A,BC,HL,DE
  59+ 9286
  60+ 9286              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 9286              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 9286
  63+ 9286              Inicia_Entidades
  64+ 9286
  65+ 9286              ; Preparamos los punteros de las cajas de entidades:
  66+ 9286
  67+ 9286 CD 3D 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9289              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9289 CD 45 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 928C
  71+ 928C 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 928F
  73+ 928F 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 9292
  75+ 9292 CD AB 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 9295
  77+ 9295 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 9298
  79+ 9298              ; En este punto:
  80+ 9298              ;
  81+ 9298              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 9298              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 9298
  84+ 9298 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 9299
  86+ 9299 7E           	ld a,(hl)
  87+ 929A CD 17 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 929D
  89+ 929D CD 0F 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92A0
  91+ 92A0              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92A0
  93+ 92A0 CD CD 93     	call Busca_mov_masticados_segun_tipo
  94+ 92A3
  95+ 92A3 A7           	and a
  96+ 92A4 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92A6
  98+ 92A6              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92A6
 100+ 92A6              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92A6              ;	_ de este tipo de entidad.
 102+ 92A6
 103+ 92A6 CD A5 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92A9 CD B2 9E     	call Transfiere_datos_de_contadores
 105+ 92AC
 106+ 92AC 18 06        	jr 4F
 107+ 92AE
 108+ 92AE CD 50 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92B1
 110+ 92B1              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92B1              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92B1              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92B1              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92B1              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92B1
 116+ 92B1 CD 8B 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92B4              ;																; _ Mov_masticados ya generados.
 118+ 92B4
 119+ 92B4 CD A4 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92B7
 121+ 92B7 DD E5        	push ix
 122+ 92B9 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92BA
 124+ 92BA D5           	push de
 125+ 92BB CD 80 94     	call Genera_coordenadas
 126+ 92BE
 127+ 92BE ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 128+ 92C2 CD B8 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92C5 D1           	pop de
 130+ 92C6
 131+ 92C6 CD AC 94     	call Genera_datos_de_impresion
 132+ 92C9              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92C9              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92C9              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92C9              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92C9
 137+ 92C9 CD 4F 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92CC
 139+ 92CC              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92CC
 141+ 92CC ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92D0 CD 3C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92D3
 144+ 92D3 CD 2C 93     	call Limpiamos_bandeja_DRAW
 145+ 92D6 CD AF 90     	call Incrementa_punteros_de_cajas
 146+ 92D9
 147+ 92D9              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92D9              ; _ entidad del Nivel.
 149+ 92D9
 150+ 92D9 3A 2F 8C     	ld a,(Ctrl_4)
 151+ 92DC E6 F0        	and $f0
 152+ 92DE 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92E1
 154+ 92E1              ; Siguiente entidad del Nivel.
 155+ 92E1
 156+ 92E1 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92E4 23           	inc hl 														; _ entidad del Nivel.
 158+ 92E5
 159+ 92E5 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92E6
 161+ 92E6 10 A7        	djnz 2B
 162+ 92E8
 163+ 92E8 C9           	ret
 164+ 92E9
 165+ 92E9              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92E9              ;
 167+ 92E9              ;	27/5/24
 168+ 92E9              ;
 169+ 92E9              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92E9              ;
 171+ 92E9
 172+ 92E9              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92E9              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92E9
 175+ 92E9 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92EC CD 0F 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92EF
 178+ 92EF
 179+ 92EF              Construye_movimientos_masticados_Amadeus
 180+ 92EF
 181+ 92EF 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92F2 CD 97 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92F5              ;															; _ el (Contador_de_mov_masticados).
 184+ 92F5 CD 67 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 92F8              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 92F8
 187+ 92F8              ; Generamos movimientos masticados de Amadeus.
 188+ 92F8
 189+ 92F8 06 79        	ld b,121												; $0079, 121d.
 190+ 92FA
 191+ 92FA C5           1 push bc
 192+ 92FB CD C4 96     	call Draw
 193+ 92FE CD 7C 8F     	call Guarda_movimiento_masticado
 194+ 9301
 195+ 9301 CD 38 9A     	call Mov_right
 196+ 9304 CD 38 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9307
 198+ 9307 C1           	pop bc
 199+ 9308 10 F0        	djnz 1B
 200+ 930A
 201+ 930A              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 930A
 203+ 930A              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 930A              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 930A
 206+ 930A 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 930D 01 08 00     	ld bc,8
 208+ 9310 A7           	and a
 209+ 9311 ED 42        	sbc hl,bc
 210+ 9313 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9316
 212+ 9316 C9           	ret
 213+ 9317
 214+ 9317              ; ---------------------------------------------------------------------
 215+ 9317              ;
 216+ 9317              ;	10/02/24
 217+ 9317              ;
 218+ 9317              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9317              ;
 220+ 9317              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9317
 222+ 9317              Definicion_segun_tipo
 223+ 9317
 224+ 9317 CD FD 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 931A 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 931D CD 05 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9320 C9           	ret
 228+ 9321
 229+ 9321              ; ---------------------------------------------------------------------
 230+ 9321              ;
 231+ 9321              ;	6/7/24
 232+ 9321
 233+ 9321
 234+ 9321              Store_Restore_cajas
 235+ 9321
 236+ 9321 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 9325 CD 3C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9328 CD AF 90     	call Incrementa_punteros_de_cajas
 239+ 932B C9           	ret
 240+ 932C
 241+ 932C              ; ---------------------------------------------------------------------
 242+ 932C              ;
 243+ 932C              ;	23/6/24
 244+ 932C              ;
 245+ 932C              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 932C              ;
 247+ 932C              ;	MODIFY: HL
 248+ 932C
 249+ 932C              Limpiamos_bandeja_DRAW
 250+ 932C
 251+ 932C ED 73 08 8C  	ld (Stack),sp
 252+ 9330 31 E0 8B     	ld sp,Vel_left
 253+ 9333
 254+ 9333 AF           	xor a
 255+ 9334 67           	ld h,a
 256+ 9335 6F           	ld l,a
 257+ 9336
 258+ 9336 E5           	push hl
 259+ 9337 E5           	push hl
 260+ 9338 E5           	push hl
 261+ 9339 E5           	push hl
 262+ 933A E5           	push hl
 263+ 933B E5           	push hl
 264+ 933C E5           	push hl
 265+ 933D E5           	push hl
 266+ 933E E5           	push hl
 267+ 933F E5           	push hl
 268+ 9340 E5           	push hl
 269+ 9341 E5           	push hl
 270+ 9342 E5           	push hl
 271+ 9343 E5           	push hl
 272+ 9344 E5           	push hl
 273+ 9345 E5           	push hl
 274+ 9346 E5           	push hl
 275+ 9347 E5           	push hl
 276+ 9348
 277+ 9348 33           	inc sp
 278+ 9349
 279+ 9349 E5           	push hl
 280+ 934A ED 7B 08 8C  	ld sp,(Stack)
 281+ 934E
 282+ 934E C9           	ret
 283+ 934F
 284+ 934F              ; ---------------------------------------------------------------------
 285+ 934F              ;
 286+ 934F              ;	24/03/24
 287+ 934F
 288+ 934F 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9352 2B           	dec hl
 290+ 9353 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9356 C9           	ret
 292+ 9357
 293+ 9357              ; ---------------------------------------------------------------------
 294+ 9357              ;
 295+ 9357              ;	8/5/24
 296+ 9357
 297+ 9357              Reinicia_entidad_maliciosa
 298+ 9357
 299+ 9357              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9357
 301+ 9357 CD A5 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 935A CD B2 9E     	call Transfiere_datos_de_contadores
 303+ 935D
 304+ 935D              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 935D
 306+ 935D 3A BB 8B     	ld a,(Tipo)
 307+ 9360 CD 17 93     	call Definicion_segun_tipo
 308+ 9363
 309+ 9363 E5           	push hl
 310+ 9364 DD E1        	pop ix
 311+ 9366
 312+ 9366 DD 6E 0B     	ld l,(ix+11)
 313+ 9369 DD 66 0C     	ld h,(ix+12)
 314+ 936C
 315+ 936C 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 936F
 317+ 936F CD A4 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9372
 319+ 9372              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9372              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9372              ; Ejemplos.
 322+ 9372
 323+ 9372              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9372              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9372              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9372              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9372              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9372
 329+ 9372 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 9375 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9377
 332+ 9377 7E           	ld a,(hl)
 333+ 9378 CB 2F        	sra a
 334+ 937A CB 2F        	sra a
 335+ 937C
 336+ 937C 32 C6 8B     	ld (Velocidad),a
 337+ 937F
 338+ 937F 3E 40        	ld a,$40
 339+ 9381 BE           	cp (hl)
 340+ 9382 C0           	ret nz
 341+ 9383
 342+ 9383              ; Límitador.
 343+ 9383
 344+ 9383              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 9383
 346+ 9383 CB 2E        	sra (hl)
 347+ 9385 21 C6 8B     	ld hl,Velocidad
 348+ 9388 CB 2E        	sra (hl)
 349+ 938A
 350+ 938A C9           	ret
 351+ 938B
 352+ 938B              ; ---------------------------------------------------------------------
 353+ 938B              ;
 354+ 938B              ;	22/01/24
 355+ 938B
 356+ 938B 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 938E CB 46        	bit 0,(hl)
 358+ 9390 20 0D        	jr nz,1F
 359+ 9392 CB 4E        	bit 1,(hl)
 360+ 9394 20 0C        	jr nz,2F
 361+ 9396 CB 56        	bit 2,(hl)
 362+ 9398 20 0B        	jr nz,3F
 363+ 939A CB 5E        	bit 3,(hl)
 364+ 939C 20 0A        	jr nz,4F
 365+ 939E C9           	ret
 366+ 939F
 367+ 939F CB E6        1 set 4,(hl)
 368+ 93A1 C9           	ret
 369+ 93A2 CB EE        2 set 5,(hl)
 370+ 93A4 C9           	ret
 371+ 93A5 CB F6        3 set 6,(hl)
 372+ 93A7 C9           	ret
 373+ 93A8 CB FE        4 set 7,(hl)
 374+ 93AA C9           	ret
 375+ 93AB
 376+ 93AB              ; ---------------------------------------------------------------------
 377+ 93AB              ;
 378+ 93AB              ;	23/01/24
 379+ 93AB              ;
 380+ 93AB              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93AB              ;
 382+ 93AB              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93AB              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93AB              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93AB              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93AB
 387+ 93AB              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93AB
 389+ 93AB 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93AC 3D           	dec a
 391+ 93AD 20 06        	jr nz,1F
 392+ 93AF
 393+ 93AF              ; --- Tipo_1
 394+ 93AF
 395+ 93AF 21 2F 8C     	ld hl,Ctrl_4
 396+ 93B2 CB C6        	set 0,(hl)
 397+ 93B4 C9           	ret
 398+ 93B5
 399+ 93B5 3D           1 dec a
 400+ 93B6 20 06        	jr nz,2F
 401+ 93B8
 402+ 93B8              ; --- Tipo_2
 403+ 93B8
 404+ 93B8 21 2F 8C     	ld hl,Ctrl_4
 405+ 93BB CB CE        	set 1,(hl)
 406+ 93BD C9           	ret
 407+ 93BE
 408+ 93BE 3D           2 dec a
 409+ 93BF 20 06        	jr nz,3F
 410+ 93C1
 411+ 93C1              ; --- Tipo_3
 412+ 93C1
 413+ 93C1 21 2F 8C     	ld hl,Ctrl_4
 414+ 93C4 CB D6        	set 2,(hl)
 415+ 93C6 C9           	ret
 416+ 93C7
 417+ 93C7              ; --- Tipo_3
 418+ 93C7
 419+ 93C7 21 2F 8C     3 ld hl,Ctrl_4
 420+ 93CA CB D6        	set 2,(hl)
 421+ 93CC C9           	ret
 422+ 93CD
 423+ 93CD              ; ---------------------------------------------------------------------
 424+ 93CD              ;
 425+ 93CD              ;	22/01/24
 426+ 93CD
 427+ 93CD 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93D0 CB 46        	bit 0,(hl)
 429+ 93D2 20 0E        	jr nz,1F
 430+ 93D4
 431+ 93D4 CB 4E        	bit 1,(hl)
 432+ 93D6 20 10        	jr nz,2F
 433+ 93D8
 434+ 93D8 CB 56        	bit 2,(hl)
 435+ 93DA 20 12        	jr nz,3F
 436+ 93DC
 437+ 93DC CB 5E        	bit 3,(hl)
 438+ 93DE 20 14        	jr nz,4F
 439+ 93E0 18 19        	jr 6F
 440+ 93E2
 441+ 93E2              ; Entidad_de_Tipo_1.
 442+ 93E2
 443+ 93E2 CB 66        1 bit 4,(hl)
 444+ 93E4 28 15        	jr z,6F
 445+ 93E6 18 10        	jr 5F
 446+ 93E8
 447+ 93E8              ; Entidad_de_Tipo_2.
 448+ 93E8
 449+ 93E8 CB 6E        2 bit 5,(hl)
 450+ 93EA 28 0F        	jr z,6F
 451+ 93EC 18 0A        	jr 5F
 452+ 93EE
 453+ 93EE              ; Entidad_de_Tipo_3.
 454+ 93EE
 455+ 93EE CB 76        3 bit 6,(hl)
 456+ 93F0 28 09        	jr z,6F
 457+ 93F2 18 04        	jr 5F
 458+ 93F4
 459+ 93F4              ; Entidad_de_Tipo_4.
 460+ 93F4
 461+ 93F4 CB 7E        4 bit 7,(hl)
 462+ 93F6 28 03        	jr z,6F
 463+ 93F8
 464+ 93F8              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 93F8
 466+ 93F8 AF           5 xor a
 467+ 93F9 3C           	inc a
 468+ 93FA C9           	ret
 469+ 93FB
 470+ 93FB              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 93FB
 472+ 93FB AF           6 xor a
 473+ 93FC C9           	ret
 474+ 93FD
 475+ 93FD              ;	------------------------------------------------------------------------------------
 476+ 93FD              ;
 477+ 93FD              ;	12/01/24
 478+ 93FD              ;
 479+ 93FD              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 93FD              ;
 481+ 93FD              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 93FD              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 93FD
 484+ 93FD CB 27        Calcula_salto_en_BC sla a
 485+ 93FF D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9401 4F           	ld c,a
 487+ 9402 06 00        	ld b,0
 488+ 9404 C9           	ret
 489+ 9405
 490+ 9405              ; ------------------------------------------------------------------
 491+ 9405              ;
 492+ 9405              ;	19/1/24
 493+ 9405              ;
 494+ 9405              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9405              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9405
 497+ 9405 A7           Situa_en_datos_de_definicion and a
 498+ 9406 ED 4A        	adc hl,bc
 499+ 9408 CD 61 90     	call Extrae_address
 500+ 940B 22 06 8C         ld (Datos_de_entidad),hl
 501+ 940E C9           	ret
 502+ 940F
 503+ 940F              ; ------------------------------------------------------------------
 504+ 940F
 505+ 940F              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 940F              ; 	inc de
 507+ 940F              ; 	inc de
 508+ 940F              ; 	ex de,hl
 509+ 940F              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 940F              ; 	ret
 511+ 940F
 512+ 940F              ; ----------------------------------------------------------------------------------------------------------
 513+ 940F              ;
 514+ 940F              ;	24/6/24
 515+ 940F              ;
 516+ 940F              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 940F              ;	_ de entidad.
 518+ 940F              ;
 519+ 940F              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 940F              ;
 521+ 940F              ;
 522+ 940F              ;	MODIFICA: HL,DE y BC
 523+ 940F
 524+ 940F
 525+ 940F              Definicion_de_entidad_a_bandeja_DRAW
 526+ 940F
 527+ 940F 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9412 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9413 12           	ld (de),a
 530+ 9414 23           	inc hl
 531+ 9415              ;
 532+ 9415 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9418 01 02 00     	ld bc,2
 534+ 941B ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 941D              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 941D 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 9420 7E           	ld a,(hl)
 538+ 9421 12           	ld (de),a
 539+ 9422 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9423
 541+ 9423 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 9426 01 04 00     	ld bc,4
 543+ 9429 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 942B
 545+ 942B 11 D8 8B     	ld de,Posicion_inicio
 546+ 942E 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9431 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9433
 549+ 9433 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9436 01 02 00     	ld bc,2
 551+ 9439 ED B0        	ldir
 552+ 943B
 553+ 943B C9           	ret
 554+ 943C
 555+ 943C              ; ----------------------------------------------------------------------------------------------------------
 556+ 943C              ;
 557+ 943C              ;	1/8/24
 558+ 943C              ;
 559+ 943C
 560+ 943C              Parametros_de_bandeja_DRAW_a_caja
 561+ 943C
 562+ 943C 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 943F 01 0C 00     	ld bc,12
 564+ 9442 ED B0        	ldir
 565+ 9444 C9           	ret
 566+ 9445
 567+ 9445              ;---------------------------------------------------------------------------------------------------------------
 568+ 9445              ;
 569+ 9445              ;	5/1/24
 570+ 9445              ;
 571+ 9445              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9445              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9445              ;
 574+ 9445              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9445              ;
 576+ 9445              ;	(Numero_parcial_de_entidades)="7".
 577+ 9445              ;
 578+ 9445              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9445              ;
 580+ 9445              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9445              ;
 582+ 9445              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9445              ;	MODIFICA: A y B.
 584+ 9445              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9445
 586+ 9445              Inicializa_Numero_parcial_de_entidades
 587+ 9445
 588+ 9445              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9445
 590+ 9445 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 9448 A7           	and a
 592+ 9449
 593+ 9449              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9449              ;	jr z,$
 595+ 9449              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9449
 597+ 9449 20 03        	jr nz,3F
 598+ 944B
 599+ 944B              ; ---------- ---------- ----------
 600+ 944B
 601+ 944B              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 944B              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 944B
 604+ 944B CD 41 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 944E
 606+ 944E              ; ---------- ---------- ----------
 607+ 944E
 608+ 944E 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9451 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9453 38 08        	jr c,1F
 611+ 9455
 612+ 9455              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9455              ; Actualizamos variables.
 614+ 9455
 615+ 9455 3E 07        	ld a,7
 616+ 9457 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 945A 47           	ld b,a
 618+ 945B 18 04        	jr 2F
 619+ 945D
 620+ 945D              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 945D              ; (Numero_de_entidades)="0".
 622+ 945D
 623+ 945D 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9460 47           	ld b,a
 625+ 9461 C9           2 ret
 626+ 9462
# file closed: Rutinas_de_inicio_y_niveles.asm
2265  9462              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9462              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9462              ;
   3+ 9462              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9462              ;
   5+ 9462              ; *****************************************************************************************************************************************************************************************
   6+ 9462              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9462
   8+ 9462 7C           calcula_tercio ld a,h
   9+ 9463 E6 18        	and $18
  10+ 9465 CB 2F        	sra a
  11+ 9467 CB 2F        	sra a
  12+ 9469 CB 2F        	sra a
  13+ 946B C9           	ret
  14+ 946C
# file closed: calcula_tercio.asm
2266  946C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 946C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 946C              ;
   3+ 946C              ;
   4+ 946C              ;	CLS.
   5+ 946C              ;
   6+ 946C              ;	Limpia la pantalla y define sus atributos.
   7+ 946C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 946C              ;
   9+ 946C              ;	COLORES: 0 ..... NEGRO
  10+ 946C              ;    		 1 ..... AZUL
  11+ 946C              ; 			 2 ..... ROJO
  12+ 946C              ;			 3 ..... MAGENTA
  13+ 946C              ; 			 4 ..... VERDE
  14+ 946C              ; 			 5 ..... CIAN
  15+ 946C              ;			 6 ..... AMARILLO
  16+ 946C              ; 			 7 ..... BLANCO
  17+ 946C              ;
  18+ 946C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 946C              ;
  20+ 946C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 946C
  22+ 946C
  23+ 946C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 946F 11 01 40     	LD DE,$4001
  25+ 9472 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9475 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9477 ED B0        	LDIR
  28+ 9479 01 FF 02     	LD BC,767
  29+ 947C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 947D ED B0        	LDIR
  31+ 947F C9           	ret
  32+ 9480
# file closed: Cls.asm
2267  9480              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9480              ; ------------------------------------------------------------------------
   2+ 9480              ;
   3+ 9480              ;	30/1/24
   4+ 9480              ;
   5+ 9480              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9480              ;	Fila superior "0", Columna izquierda "0".
   7+ 9480              ;
   8+ 9480              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9480              ;
  10+ 9480              ;	Modifica: A,BC y DE.
  11+ 9480
  12+ 9480 7D           Genera_coordenadas ld a,l
  13+ 9481 E6 1F        	and $1f
  14+ 9483 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9486
  16+ 9486 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9487 FE 40        	cp $40
  18+ 9489 38 1C        	jr c,4F
  19+ 948B
  20+ 948B CD 62 94     	call calcula_tercio
  21+ 948E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 948F
  23+ 948F 1E 00        	ld e,0
  24+ 9491 7D           	ld a,l
  25+ 9492 E6 E0        	and $e0
  26+ 9494 28 01        	jr z,1F
  27+ 9496 04           	inc b
  28+ 9497
  29+ 9497 04           1 inc b
  30+ 9498 05           	dec b
  31+ 9499 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 949B              ;														; _ , salimos.
  33+ 949B 1C           3 inc e
  34+ 949C D6 20        	sub 32
  35+ 949E 20 FB        	jr nz,3B
  36+ 94A0 10 F5        	djnz 1B
  37+ 94A2
  38+ 94A2 7B           2 ld a,e
  39+ 94A3 32 BD 8B     	ld (Coordenada_y),a
  40+ 94A6 C9           	ret
  41+ 94A7
  42+ 94A7 AF           4 xor a
  43+ 94A8 32 BD 8B     	ld (Coordenada_y),a
  44+ 94AB C9           	ret
  45+ 94AC
# file closed: Genera_coordenadas.asm
2268  94AC              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94AC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94AC              ;
   3+ 94AC              ;	11/03/24
   4+ 94AC              ;
   5+ 94AC              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94AC              ;   DE contiene Puntero_objeto.
   7+ 94AC              ;   IX contiene el Puntero de impresión.
   8+ 94AC
   9+ 94AC              Genera_datos_de_impresion
  10+ 94AC
  11+ 94AC ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94B0
  13+ 94B0 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94B3 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94B5
  16+ 94B5 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 94B8
  18+ 94B8 3E 05            ld a,5
  19+ 94BA 85               add l
  20+ 94BB 6F               ld l,a
  21+ 94BC
  22+ 94BC F9               ld sp,hl
  23+ 94BD 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 94C0
  25+ 94C0 21 00 00         ld hl,0
  26+ 94C3
  27+ 94C3 DD E5            push ix
  28+ 94C5 3B               dec sp
  29+ 94C6 ED 7A            adc hl,sp
  30+ 94C8 D5               push de
  31+ 94C9
  32+ 94C9              ; Recuperamos SP.
  33+ 94C9
  34+ 94C9 ED 7B 08 8C      ld sp,(Stack)
  35+ 94CD
  36+ 94CD E5               push hl
  37+ 94CE F1               pop af
  38+ 94CF 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94D0
  40+ 94D0              ; Tenemos el encabezado listo.
  41+ 94D0              ; Preparamos registros para generar los scanlines.
  42+ 94D0
  43+ 94D0 DD E5            push ix
  44+ 94D2 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94D3
  46+ 94D3 ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 94D7
  48+ 94D7              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94D7              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94D7
  51+ 94D7 7C               ld a,h
  52+ 94D8 FE 50            cp $50
  53+ 94DA 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94DC
  55+ 94DC 20 05            jr nz,2F
  56+ 94DE
  57+ 94DE 7D               ld a,l
  58+ 94DF FE E0            cp $e0
  59+ 94E1 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94E3
  61+ 94E3 7D           2 ld a,l
  62+ 94E4 FE C0            cp $c0
  63+ 94E6 D2 78 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94E9
  65+ 94E9              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94E9
  67+ 94E9 CD 76 99         call NextScan
  68+ 94EC EB               ex de,hl
  69+ 94ED
  70+ 94ED 73               ld (hl),e
  71+ 94EE 23               inc hl
  72+ 94EF 72               ld (hl),d
  73+ 94F0 23               inc hl
  74+ 94F1
  75+ 94F1 EB               ex de,hl
  76+ 94F2
  77+ 94F2 CD 76 99         call NextScan
  78+ 94F5 EB               ex de,hl
  79+ 94F6
  80+ 94F6 73               ld (hl),e
  81+ 94F7 23               inc hl
  82+ 94F8 72               ld (hl),d
  83+ 94F9 23               inc hl
  84+ 94FA
  85+ 94FA EB               ex de,hl
  86+ 94FB
  87+ 94FB CD 76 99         call NextScan
  88+ 94FE EB               ex de,hl
  89+ 94FF
  90+ 94FF 73               ld (hl),e
  91+ 9500 23               inc hl
  92+ 9501 72               ld (hl),d
  93+ 9502 23               inc hl
  94+ 9503
  95+ 9503 EB               ex de,hl
  96+ 9504
  97+ 9504 CD 76 99         call NextScan
  98+ 9507 EB               ex de,hl
  99+ 9508
 100+ 9508 73               ld (hl),e
 101+ 9509 23               inc hl
 102+ 950A 72               ld (hl),d
 103+ 950B 23               inc hl
 104+ 950C
 105+ 950C EB               ex de,hl
 106+ 950D
 107+ 950D CD 76 99         call NextScan
 108+ 9510 EB               ex de,hl
 109+ 9511
 110+ 9511 73               ld (hl),e
 111+ 9512 23               inc hl
 112+ 9513 72               ld (hl),d
 113+ 9514 23               inc hl
 114+ 9515
 115+ 9515 EB               ex de,hl
 116+ 9516
 117+ 9516 CD 76 99         call NextScan
 118+ 9519 EB               ex de,hl
 119+ 951A
 120+ 951A 73               ld (hl),e
 121+ 951B 23               inc hl
 122+ 951C 72               ld (hl),d
 123+ 951D 23               inc hl
 124+ 951E
 125+ 951E EB               ex de,hl
 126+ 951F
 127+ 951F CD 76 99         call NextScan
 128+ 9522 EB               ex de,hl
 129+ 9523
 130+ 9523 73               ld (hl),e
 131+ 9524 23               inc hl
 132+ 9525 72               ld (hl),d
 133+ 9526 23               inc hl
 134+ 9527
 135+ 9527 EB               ex de,hl
 136+ 9528
 137+ 9528 CD 76 99         call NextScan
 138+ 952B EB               ex de,hl
 139+ 952C
 140+ 952C 73               ld (hl),e
 141+ 952D 23               inc hl
 142+ 952E 72               ld (hl),d
 143+ 952F 23               inc hl
 144+ 9530
 145+ 9530 EB               ex de,hl
 146+ 9531
 147+ 9531 CD 76 99         call NextScan
 148+ 9534 EB               ex de,hl
 149+ 9535
 150+ 9535 73               ld (hl),e
 151+ 9536 23               inc hl
 152+ 9537 72               ld (hl),d
 153+ 9538 23               inc hl
 154+ 9539
 155+ 9539 EB               ex de,hl
 156+ 953A
 157+ 953A CD 76 99         call NextScan
 158+ 953D EB               ex de,hl
 159+ 953E
 160+ 953E 73               ld (hl),e
 161+ 953F 23               inc hl
 162+ 9540 72               ld (hl),d
 163+ 9541 23               inc hl
 164+ 9542
 165+ 9542 EB               ex de,hl
 166+ 9543
 167+ 9543 CD 76 99         call NextScan
 168+ 9546 EB               ex de,hl
 169+ 9547
 170+ 9547 73               ld (hl),e
 171+ 9548 23               inc hl
 172+ 9549 72               ld (hl),d
 173+ 954A 23               inc hl
 174+ 954B
 175+ 954B EB               ex de,hl
 176+ 954C
 177+ 954C CD 76 99         call NextScan
 178+ 954F EB               ex de,hl
 179+ 9550
 180+ 9550 73               ld (hl),e
 181+ 9551 23               inc hl
 182+ 9552 72               ld (hl),d
 183+ 9553 23               inc hl
 184+ 9554
 185+ 9554 EB               ex de,hl
 186+ 9555
 187+ 9555 CD 76 99         call NextScan
 188+ 9558 EB               ex de,hl
 189+ 9559
 190+ 9559 73               ld (hl),e
 191+ 955A 23               inc hl
 192+ 955B 72               ld (hl),d
 193+ 955C 23               inc hl
 194+ 955D
 195+ 955D EB               ex de,hl
 196+ 955E
 197+ 955E CD 76 99         call NextScan
 198+ 9561 EB               ex de,hl
 199+ 9562
 200+ 9562 73               ld (hl),e
 201+ 9563 23               inc hl
 202+ 9564 72               ld (hl),d
 203+ 9565 23               inc hl
 204+ 9566
 205+ 9566 EB               ex de,hl
 206+ 9567
 207+ 9567 CD 76 99         call NextScan
 208+ 956A EB               ex de,hl
 209+ 956B
 210+ 956B 73               ld (hl),e
 211+ 956C 23               inc hl
 212+ 956D 72               ld (hl),d
 213+ 956E 23               inc hl
 214+ 956F
 215+ 956F              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 956F
 217+ 956F 22 28 8C         ld (Scanlines_album_SP),hl
 218+ 9572
 219+ 9572              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 9572
 221+ 9572 08               ex af,af
 222+ 9573
 223+ 9573 F5               push af
 224+ 9574 E1               pop hl
 225+ 9575
 226+ 9575 36 10            ld (hl),16
 227+ 9577
 228+ 9577 C9               ret
 229+ 9578
 230+ 9578              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9578
 232+ 9578              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9578
 234+ 9578 3E 57            ld a,$57
 235+ 957A 94               sub h
 236+ 957B 47               ld b,a
 237+ 957C
 238+ 957C 3E DF            ld a,$df
 239+ 957E BD               cp l
 240+ 957F 38 04            jr c,1F
 241+ 9581
 242+ 9581 3E 08            ld a,8
 243+ 9583 80               add b
 244+ 9584 47               ld b,a
 245+ 9585
 246+ 9585              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 9585              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 9585
 249+ 9585 48           1 ld c,b
 250+ 9586 0C               inc c
 251+ 9587
 252+ 9587 04               inc b
 253+ 9588 05               dec b
 254+ 9589 20 02            jr nz,3F
 255+ 958B
 256+ 958B 18 0B            jr 6F
 257+ 958D
 258+ 958D CD 76 99     3 call NextScan
 259+ 9590 EB               ex de,hl
 260+ 9591
 261+ 9591 73               ld (hl),e
 262+ 9592 23               inc hl
 263+ 9593 72               ld (hl),d
 264+ 9594 23               inc hl
 265+ 9595
 266+ 9595 EB               ex de,hl
 267+ 9596 10 F5            djnz 3B
 268+ 9598
 269+ 9598 ED 53 28 8C  6 ld (Scanlines_album_SP),de
 270+ 959C
 271+ 959C 08           5 ex af,af
 272+ 959D F5               push af
 273+ 959E E1               pop hl
 274+ 959F
 275+ 959F 71               ld (hl),c
 276+ 95A0
 277+ 95A0 C9               ret
 278+ 95A1
# file closed: Genera_datos_de_impresion.asm
2269  95A1              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95A1              ; -----------------------------------------------------------------------------
   2+ 95A1              ;
   3+ 95A1              ;   11/03/24
   4+ 95A1              ;
   5+ 95A1
   6+ 95A1              Pinta_Sprites
   7+ 95A1
   8+ 95A1              ;    ld hl,(Scanlines_album_SP)
   9+ 95A1              ;    call Extrae_address
  10+ 95A1
  11+ 95A1              ;    inc h
  12+ 95A1              ;    dec h
  13+ 95A1              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95A1
  15+ 95A1 ED 73 08 8C      ld (Stack),sp
  16+ 95A5
  17+ 95A5 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95A6              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95A6 2C               inc l
  20+ 95A7 2C               inc l
  21+ 95A8
  22+ 95A8 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95A9
  24+ 95A9 2C               inc l
  25+ 95AA F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95AB
  27+ 95AB              ;   Seleccionamos rutina de impresión:
  28+ 95AB
  29+ 95AB 3E 10            ld a,16
  30+ 95AD B8               cp b
  31+ 95AE C2 AA 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95B1
  33+ 95B1              ;   Rutinas:
  34+ 95B1
  35+ 95B1              Pinta_rapido    ;   1520 t/states.
  36+ 95B1
  37+ 95B1 E1               pop hl
  38+ 95B2
  39+ 95B2 1A               ld a,(de)
  40+ 95B3 AE               xor (hl)
  41+ 95B4 77               ld (hl),a
  42+ 95B5 2C               inc l
  43+ 95B6 1C               inc e
  44+ 95B7 1A               ld a,(de)
  45+ 95B8 AE               xor (hl)
  46+ 95B9 77               ld (hl),a
  47+ 95BA 2C               inc l
  48+ 95BB 1C               inc e
  49+ 95BC 1A               ld a,(de)
  50+ 95BD AE               xor (hl)
  51+ 95BE 77               ld (hl),a
  52+ 95BF 13               inc de
  53+ 95C0
  54+ 95C0 E1               pop hl
  55+ 95C1
  56+ 95C1 1A               ld a,(de)
  57+ 95C2 AE               xor (hl)
  58+ 95C3 77               ld (hl),a
  59+ 95C4 2C               inc l
  60+ 95C5 1C               inc e
  61+ 95C6 1A               ld a,(de)
  62+ 95C7 AE               xor (hl)
  63+ 95C8 77               ld (hl),a
  64+ 95C9 2C               inc l
  65+ 95CA 1C               inc e
  66+ 95CB 1A               ld a,(de)
  67+ 95CC AE               xor (hl)
  68+ 95CD 77               ld (hl),a
  69+ 95CE 13               inc de
  70+ 95CF
  71+ 95CF E1               pop hl
  72+ 95D0
  73+ 95D0 1A               ld a,(de)
  74+ 95D1 AE               xor (hl)
  75+ 95D2 77               ld (hl),a
  76+ 95D3 2C               inc l
  77+ 95D4 1C               inc e
  78+ 95D5 1A               ld a,(de)
  79+ 95D6 AE               xor (hl)
  80+ 95D7 77               ld (hl),a
  81+ 95D8 2C               inc l
  82+ 95D9 1C               inc e
  83+ 95DA 1A               ld a,(de)
  84+ 95DB AE               xor (hl)
  85+ 95DC 77               ld (hl),a
  86+ 95DD 13               inc de
  87+ 95DE
  88+ 95DE E1               pop hl
  89+ 95DF
  90+ 95DF 1A               ld a,(de)
  91+ 95E0 AE               xor (hl)
  92+ 95E1 77               ld (hl),a
  93+ 95E2 2C               inc l
  94+ 95E3 1C               inc e
  95+ 95E4 1A               ld a,(de)
  96+ 95E5 AE               xor (hl)
  97+ 95E6 77               ld (hl),a
  98+ 95E7 2C               inc l
  99+ 95E8 1C               inc e
 100+ 95E9 1A               ld a,(de)
 101+ 95EA AE               xor (hl)
 102+ 95EB 77               ld (hl),a
 103+ 95EC 13               inc de
 104+ 95ED
 105+ 95ED E1               pop hl
 106+ 95EE
 107+ 95EE 1A               ld a,(de)
 108+ 95EF AE               xor (hl)
 109+ 95F0 77               ld (hl),a
 110+ 95F1 2C               inc l
 111+ 95F2 1C               inc e
 112+ 95F3 1A               ld a,(de)
 113+ 95F4 AE               xor (hl)
 114+ 95F5 77               ld (hl),a
 115+ 95F6 2C               inc l
 116+ 95F7 1C               inc e
 117+ 95F8 1A               ld a,(de)
 118+ 95F9 AE               xor (hl)
 119+ 95FA 77               ld (hl),a
 120+ 95FB 13               inc de
 121+ 95FC
 122+ 95FC E1               pop hl
 123+ 95FD
 124+ 95FD 1A               ld a,(de)
 125+ 95FE AE               xor (hl)
 126+ 95FF 77               ld (hl),a
 127+ 9600 2C               inc l
 128+ 9601 1C               inc e
 129+ 9602 1A               ld a,(de)
 130+ 9603 AE               xor (hl)
 131+ 9604 77               ld (hl),a
 132+ 9605 2C               inc l
 133+ 9606 1C               inc e
 134+ 9607 1A               ld a,(de)
 135+ 9608 AE               xor (hl)
 136+ 9609 77               ld (hl),a
 137+ 960A 13               inc de
 138+ 960B
 139+ 960B E1               pop hl
 140+ 960C
 141+ 960C 1A               ld a,(de)
 142+ 960D AE               xor (hl)
 143+ 960E 77               ld (hl),a
 144+ 960F 2C               inc l
 145+ 9610 1C               inc e
 146+ 9611 1A               ld a,(de)
 147+ 9612 AE               xor (hl)
 148+ 9613 77               ld (hl),a
 149+ 9614 2C               inc l
 150+ 9615 1C               inc e
 151+ 9616 1A               ld a,(de)
 152+ 9617 AE               xor (hl)
 153+ 9618 77               ld (hl),a
 154+ 9619 13               inc de
 155+ 961A
 156+ 961A E1               pop hl
 157+ 961B
 158+ 961B 1A               ld a,(de)
 159+ 961C AE               xor (hl)
 160+ 961D 77               ld (hl),a
 161+ 961E 2C               inc l
 162+ 961F 1C               inc e
 163+ 9620 1A               ld a,(de)
 164+ 9621 AE               xor (hl)
 165+ 9622 77               ld (hl),a
 166+ 9623 2C               inc l
 167+ 9624 1C               inc e
 168+ 9625 1A               ld a,(de)
 169+ 9626 AE               xor (hl)
 170+ 9627 77               ld (hl),a
 171+ 9628 13               inc de
 172+ 9629
 173+ 9629 E1               pop hl
 174+ 962A
 175+ 962A 1A               ld a,(de)
 176+ 962B AE               xor (hl)
 177+ 962C 77               ld (hl),a
 178+ 962D 2C               inc l
 179+ 962E 1C               inc e
 180+ 962F 1A               ld a,(de)
 181+ 9630 AE               xor (hl)
 182+ 9631 77               ld (hl),a
 183+ 9632 2C               inc l
 184+ 9633 1C               inc e
 185+ 9634 1A               ld a,(de)
 186+ 9635 AE               xor (hl)
 187+ 9636 77               ld (hl),a
 188+ 9637 13               inc de
 189+ 9638
 190+ 9638 E1               pop hl
 191+ 9639
 192+ 9639 1A               ld a,(de)
 193+ 963A AE               xor (hl)
 194+ 963B 77               ld (hl),a
 195+ 963C 2C               inc l
 196+ 963D 1C               inc e
 197+ 963E 1A               ld a,(de)
 198+ 963F AE               xor (hl)
 199+ 9640 77               ld (hl),a
 200+ 9641 2C               inc l
 201+ 9642 1C               inc e
 202+ 9643 1A               ld a,(de)
 203+ 9644 AE               xor (hl)
 204+ 9645 77               ld (hl),a
 205+ 9646 13               inc de
 206+ 9647
 207+ 9647 E1               pop hl
 208+ 9648
 209+ 9648 1A               ld a,(de)
 210+ 9649 AE               xor (hl)
 211+ 964A 77               ld (hl),a
 212+ 964B 2C               inc l
 213+ 964C 1C               inc e
 214+ 964D 1A               ld a,(de)
 215+ 964E AE               xor (hl)
 216+ 964F 77               ld (hl),a
 217+ 9650 2C               inc l
 218+ 9651 1C               inc e
 219+ 9652 1A               ld a,(de)
 220+ 9653 AE               xor (hl)
 221+ 9654 77               ld (hl),a
 222+ 9655 13               inc de
 223+ 9656
 224+ 9656 E1               pop hl
 225+ 9657
 226+ 9657 1A               ld a,(de)
 227+ 9658 AE               xor (hl)
 228+ 9659 77               ld (hl),a
 229+ 965A 2C               inc l
 230+ 965B 1C               inc e
 231+ 965C 1A               ld a,(de)
 232+ 965D AE               xor (hl)
 233+ 965E 77               ld (hl),a
 234+ 965F 2C               inc l
 235+ 9660 1C               inc e
 236+ 9661 1A               ld a,(de)
 237+ 9662 AE               xor (hl)
 238+ 9663 77               ld (hl),a
 239+ 9664 13               inc de
 240+ 9665
 241+ 9665 E1               pop hl
 242+ 9666
 243+ 9666 1A               ld a,(de)
 244+ 9667 AE               xor (hl)
 245+ 9668 77               ld (hl),a
 246+ 9669 2C               inc l
 247+ 966A 1C               inc e
 248+ 966B 1A               ld a,(de)
 249+ 966C AE               xor (hl)
 250+ 966D 77               ld (hl),a
 251+ 966E 2C               inc l
 252+ 966F 1C               inc e
 253+ 9670 1A               ld a,(de)
 254+ 9671 AE               xor (hl)
 255+ 9672 77               ld (hl),a
 256+ 9673 13               inc de
 257+ 9674
 258+ 9674 E1               pop hl
 259+ 9675
 260+ 9675 1A               ld a,(de)
 261+ 9676 AE               xor (hl)
 262+ 9677 77               ld (hl),a
 263+ 9678 2C               inc l
 264+ 9679 1C               inc e
 265+ 967A 1A               ld a,(de)
 266+ 967B AE               xor (hl)
 267+ 967C 77               ld (hl),a
 268+ 967D 2C               inc l
 269+ 967E 1C               inc e
 270+ 967F 1A               ld a,(de)
 271+ 9680 AE               xor (hl)
 272+ 9681 77               ld (hl),a
 273+ 9682 13               inc de
 274+ 9683
 275+ 9683 E1               pop hl
 276+ 9684
 277+ 9684 1A               ld a,(de)
 278+ 9685 AE               xor (hl)
 279+ 9686 77               ld (hl),a
 280+ 9687 2C               inc l
 281+ 9688 1C               inc e
 282+ 9689 1A               ld a,(de)
 283+ 968A AE               xor (hl)
 284+ 968B 77               ld (hl),a
 285+ 968C 2C               inc l
 286+ 968D 1C               inc e
 287+ 968E 1A               ld a,(de)
 288+ 968F AE               xor (hl)
 289+ 9690 77               ld (hl),a
 290+ 9691 13               inc de
 291+ 9692
 292+ 9692 E1               pop hl
 293+ 9693
 294+ 9693 1A               ld a,(de)
 295+ 9694 AE               xor (hl)
 296+ 9695 77               ld (hl),a
 297+ 9696 2C               inc l
 298+ 9697 1C               inc e
 299+ 9698 1A               ld a,(de)
 300+ 9699 AE               xor (hl)
 301+ 969A 77               ld (hl),a
 302+ 969B 2C               inc l
 303+ 969C 1C               inc e
 304+ 969D 1A               ld a,(de)
 305+ 969E AE               xor (hl)
 306+ 969F 77               ld (hl),a
 307+ 96A0 13               inc de
 308+ 96A1
 309+ 96A1 ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 96A5 ED 7B 08 8C      ld sp,(Stack)
 311+ 96A9 C9               ret
 312+ 96AA
 313+ 96AA              Pinta_lento
 314+ 96AA
 315+ 96AA E1           1 pop hl
 316+ 96AB
 317+ 96AB 1A               ld a,(de)
 318+ 96AC AE               xor (hl)
 319+ 96AD 77               ld (hl),a
 320+ 96AE 2C               inc l
 321+ 96AF 1C               inc e
 322+ 96B0 1A               ld a,(de)
 323+ 96B1 AE               xor (hl)
 324+ 96B2 77               ld (hl),a
 325+ 96B3 2C               inc l
 326+ 96B4 1C               inc e
 327+ 96B5 1A               ld a,(de)
 328+ 96B6 AE               xor (hl)
 329+ 96B7 77               ld (hl),a
 330+ 96B8 13               inc de
 331+ 96B9
 332+ 96B9 10 EF            djnz 1B
 333+ 96BB
 334+ 96BB ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 96BF ED 7B 08 8C      ld sp,(Stack)
 336+ 96C3 C9               ret
# file closed: Pinta_Sprites.asm
2270  96C4              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96C4              ; ******************************************************************************************************************************************************************************************
   2+ 96C4              ;
   3+ 96C4              ; 26/06/23
   4+ 96C4              ;
   5+ 96C4              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96C4
   7+ 96C4              Draw
   8+ 96C4
   9+ 96C4 CD 6A 99     	call Prepara_draw
  10+ 96C7 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96C8 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96C9 28 05        	jr z,2F
  13+ 96CB
  14+ 96CB 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96CE 18 0C        	jr 1F
  16+ 96D0
  17+ 96D0 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96D3 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96D6 CD 62 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96D9              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96D9
  22+ 96D9 CD 09 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96DC
  24+ 96DC 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96DF CB 6F        	bit 5,a
  26+ 96E1 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96E3
  28+ 96E3 CD F8 96     	call Comprueba_limite_horizontal
  29+ 96E6 CD 88 97     	call Comprueba_limite_vertical
  30+ 96E9
  31+ 96E9              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96E9              ; -----------------------
  33+ 96E9              ; -----------------------
  34+ 96E9              ; -----------------------
  35+ 96E9
  36+ 96E9 CD DE 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96EC CD 15 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96EF
  39+ 96EF 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96F2 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96F4 32 C8 8B     	ld (Ctrl_0),a
  42+ 96F7
  43+ 96F7 C9           	ret
  44+ 96F8
  45+ 96F8              ; *******************************************************************************************************************************************************************************************
  46+ 96F8              ;	21/01/23
  47+ 96F8              ;
  48+ 96F8              ; 	Comprueba_limite_horizontal.
  49+ 96F8              ;
  50+ 96F8              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96F8              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96F8              ;
  53+ 96F8              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96F8              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96F8              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96F8              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96F8
  58+ 96F8
  59+ 96F8
  60+ 96F8 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96FB CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96FD 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96FF E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9701 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9704 18 09            jr 6F
  66+ 9706 CB 5F        1 bit 3,a
  67+ 9708 28 0A            jr z,2F
  68+ 970A E6 F7            and $f7
  69+ 970C 32 C8 8B         ld (Ctrl_0),a
  70+ 970F CD 62 98     6 call Inicializacion
  71+ 9712 18 5B            jr 5F
  72+ 9714 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9715
  74+ 9715              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9715              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9715
  77+ 9715 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9716 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9719 CD 62 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 971C 67           	ld h,a
  81+ 971D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 971E CD 62 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9721 67           	ld h,a
  84+ 9722 A7           	and a
  85+ 9723 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9725 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9726 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 9729 FE 02        	cp 2
  89+ 972B 38 1E        	jr c,3F
  90+ 972D 28 1C        	jr z,3F
  91+ 972F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9730 28 23            jr z,7F
  93+ 9732 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9734 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9736 E1           	pop hl
  96+ 9737
  97+ 9737              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9737              ; _para indicar con E="2" en caso necesario.
  99+ 9737
 100+ 9737 E5               push hl
 101+ 9738 C5               push bc
 102+ 9739 CD 62 94     	call calcula_tercio
 103+ 973C FE 01        	cp 1
 104+ 973E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9740 CD 70 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9743 28 26            jr z,9F
 107+ 9745 38 24            jr c,9F
 108+ 9747 1E 00        11 ld e,0
 109+ 9749 18 22            jr 8F
 110+ 974B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 974C 28 07        	jr z, 7F
 112+ 974E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9750 1E 00         	ld e,0
 114+ 9752 E1           	pop hl
 115+ 9753 18 04        	jr 4F
 116+ 9755 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9757 18 15            jr 10F
 118+ 9759
 119+ 9759              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9759              ; _para indicar con E="2" en caso necesario.
 121+ 9759
 122+ 9759 E5           4 push hl
 123+ 975A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 975B CD 62 94     	call calcula_tercio
 125+ 975E FE 01        	cp 1
 126+ 9760 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9762 CD 70 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9765 28 04            jr z,9F
 129+ 9767 30 02            jr nc,9F
 130+ 9769 18 02        	jr 8F
 131+ 976B 1E 02        9 ld e,2
 132+ 976D C1           8 pop bc
 133+ 976E E1           10 pop hl
 134+ 976F C9           5 ret
 135+ 9770
 136+ 9770              ; --------------------
 137+ 9770              ;
 138+ 9770              ; 25/08/22
 139+ 9770
 140+ 9770 CD 62 94     Comprueba_centro call calcula_tercio
 141+ 9773 67               ld h,a
 142+ 9774 08           	ex af,af
 143+ 9775 FE 02        	cp 2
 144+ 9777 38 07        	jr c,1F
 145+ 9779 28 05        	jr z,1F
 146+ 977B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 977E 18 03        	jr 2F
 148+ 9780 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9783 08           2 ex af,af
 150+ 9784 A7               and a
 151+ 9785 ED 42            sbc hl,bc
 152+ 9787 C9               ret
 153+ 9788
 154+ 9788              ; *********************************************************************************************************************************************************************************************
 155+ 9788              ;
 156+ 9788              ;   16/8/22
 157+ 9788              ;
 158+ 9788              ;	Comprueba_limite_vertical
 159+ 9788              ;
 160+ 9788              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9788              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9788              ;
 163+ 9788
 164+ 9788 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 978B 7D           	ld a,l
 166+ 978C E6 1F        	and $1F
 167+ 978E 57           	ld d,a
 168+ 978F 3A DE 8B     	ld a,(Limite_vertical)
 169+ 9792 BA           	cp d 											; Límite - Posición.
 170+ 9793 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9794 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9797 CB 47        	bit 0,a
 173+ 9799 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 979B
 175+ 979B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 979B
 177+ 979B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 979C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 979E
 180+ 979E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 979E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 979E
 183+ 979E 3A BC 8B         ld a,(Coordenada_X)
 184+ 97A1 16 0F            ld d,Centro_izquierda
 185+ 97A3 A7               and a
 186+ 97A4 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97A5 28 1E            jr z,3F
 188+ 97A7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97A9              ;                                                    ; _salimos sin modificar nada.
 190+ 97A9 18 0E            jr 2F
 191+ 97AB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97AC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97AE
 194+ 97AE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97AE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97AE
 197+ 97AE 3A BC 8B         ld a,(Coordenada_X)
 198+ 97B1 16 10            ld d,Centro_derecha
 199+ 97B3 A7               and a
 200+ 97B4 92               sub d
 201+ 97B5 28 0E            jr z,3F
 202+ 97B7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97B9              ;                                                    ; _salimos sin modificar nada.
 204+ 97B9 CB 43        2 bit 0,e
 205+ 97BB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97BD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97BE CD 52 98         call Modificaccionne
 208+ 97C1 C1           	pop bc
 209+ 97C2 CD 62 98         call Inicializacion
 210+ 97C5 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97C6
 212+ 97C6              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97C6
 214+ 97C6 C5           4 push bc
 215+ 97C7 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97CA 0A           	ld a,(bc)
 217+ 97CB 3D           	dec a
 218+ 97CC 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97CD 7D           	ld a,l
 220+ 97CE 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97CF CB 47        	bit 0,a
 222+ 97D1 28 03        	jr z,5F
 223+ 97D3 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97D4 18 2E        	jr 7F
 225+ 97D6
 226+ 97D6              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97D6
 228+ 97D6 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97D7 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97D8 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97DB CB 4F        	bit 1,a
 232+ 97DD 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97DF F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97E0
 235+ 97E0              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97E0
 237+ 97E0 1C               inc e
 238+ 97E1 1D               dec e
 239+ 97E2 20 07            jr nz,12F
 240+ 97E4 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97E5 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97E6 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97E9 18 44        13 jr 9F
 244+ 97EB CB 43        12 bit 0,e
 245+ 97ED 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97EF              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97EF C1           	pop bc
 248+ 97F0 18 D3        	jr 3B
 249+ 97F2 80           14 add b
 250+ 97F3 6F               ld l,a
 251+ 97F4 22 CB 8B     	ld (Posicion_actual),hl
 252+ 97F7 CD 52 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97FA 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97FC E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97FE 32 C8 8B         ld (Ctrl_0),a
 256+ 9801 F1           	pop af
 257+ 9802 18 2B        	jr 9F
 258+ 9804
 259+ 9804              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9804
 261+ 9804 F5           7 push af
 262+ 9805 3A C8 8B     	ld a,(Ctrl_0)
 263+ 9808 CB 47        	bit 0,a
 264+ 980A 20 1D        	jr nz,8F
 265+ 980C F1           	pop af
 266+ 980D
 267+ 980D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 980D
 269+ 980D 1C           	inc e
 270+ 980E 1D               dec e
 271+ 980F 20 07            jr nz,10F
 272+ 9811 90           	sub b
 273+ 9812 6F               ld l,a
 274+ 9813 22 CB 8B     	ld (Posicion_actual),hl
 275+ 9816 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9818              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9818 CB 43        10 bit 0,e
 278+ 981A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 981C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 981C C1           	pop bc
 281+ 981D 18 A6        	jr 3B
 282+ 981F 90           16 sub b
 283+ 9820 6F               ld l,a
 284+ 9821 22 CB 8B     	ld (Posicion_actual),hl
 285+ 9824 CD 52 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9827 18 06            jr 9F
 287+ 9829 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 982B 32 C8 8B         ld (Ctrl_0),a
 289+ 982E F1           	pop af
 290+ 982F C1           9 pop bc
 291+ 9830 1E 00        	ld e,0
 292+ 9832 CD 62 98         call Inicializacion
 293+ 9835 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9836 08           	ex af,af
 295+ 9837 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9838 18 8B            jr 3B
 297+ 983A
 298+ 983A              ; --------------------
 299+ 983A
 300+ 983A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 983C CD 85 99     1 call PreviousScan
 302+ 983F 10 FB            djnz 1B
 303+ 9841 22 CB 8B     	ld (Posicion_actual),hl
 304+ 9844 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9845 C9           	ret
 306+ 9846
 307+ 9846              ; --------------------
 308+ 9846
 309+ 9846 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9848 CD 76 99     1 call NextScan
 311+ 984B 10 FB            djnz 1B
 312+ 984D 22 CB 8B     	ld (Posicion_actual),hl
 313+ 9850 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9851 C9           	ret
 315+ 9852
 316+ 9852              ; --------------------
 317+ 9852              ;
 318+ 9852              ;	22/01/23
 319+ 9852              ;
 320+ 9852              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9852              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9852              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9852
 324+ 9852
 325+ 9852              Modificaccionne
 326+ 9852
 327+ 9852 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 9855 FE 02        	cp 2
 329+ 9857 CC 3A 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 985A DC 3A 98         call c,Modifica_Pos_actual
 331+ 985D C8           	ret z
 332+ 985E CD 46 98         call Modifica_Pos_actual2
 333+ 9861 C9               ret
 334+ 9862
 335+ 9862              ; *************************************************************************************************************************************************************************************************
 336+ 9862              ;
 337+ 9862              ;	13/8/22
 338+ 9862              ;
 339+ 9862              ;	Inicializacion
 340+ 9862              ;
 341+ 9862              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9862              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9862              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9862              ;
 345+ 9862              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9862              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9862              ;	_ desaparece/aparece.
 348+ 9862
 349+ 9862              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9862              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9862              ;
 352+ 9862              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9862              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9862              ; 		   [E] ="0"
 355+ 9862
 356+ 9862              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9862
 358+ 9862 CD 62 94     Inicializacion call calcula_tercio
 359+ 9865 28 36        	jr z,primit
 360+ 9867 E6 02        	and 2
 361+ 9869 20 07        	jr nz,segmit
 362+ 986B 7D           	ld a,l
 363+ 986C FE 7F        	cp $7f
 364+ 986E 38 2D        	jr c,primit
 365+ 9870 28 2B        	jr z,primit
 366+ 9872 CD D8 98     segmit call column
 367+ 9875 38 13        	jr c,tercuad
 368+ 9877 3E 04        cuarcuad ld a,4
 369+ 9879 32 DA 8B     	ld (Cuad_objeto),a
 370+ 987C 21 20 48     	ld hl,$4820
 371+ 987F 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 9882 21 DE 8B     	ld hl,Limite_vertical
 373+ 9885 36 0D        	ld (hl),$0d
 374+ 9887 08           	ex af,af
 375+ 9888 18 3C        	jr 1F
 376+ 988A              tercuad
 377+ 988A 3E 03        	ld a,3
 378+ 988C 32 DA 8B     	ld (Cuad_objeto),a
 379+ 988F 21 20 48     	ld hl,$4820
 380+ 9892 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 9895 21 DE 8B     	ld hl,Limite_vertical
 382+ 9898 36 12        	ld (hl),$12
 383+ 989A 08           	ex af,af
 384+ 989B 18 29        	jr 1F
 385+ 989D CD D8 98     primit call column
 386+ 98A0 38 13        	jr c, primcuad
 387+ 98A2              segcuad
 388+ 98A2 3E 02        	ld a,2
 389+ 98A4 32 DA 8B     	ld (Cuad_objeto),a
 390+ 98A7 21 C0 4F     	ld hl,$4fc0
 391+ 98AA 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 98AD 21 DE 8B     	ld hl,Limite_vertical
 393+ 98B0 36 0D        	ld (hl),$0d
 394+ 98B2 08           	ex af,af
 395+ 98B3 18 11        	jr 1F
 396+ 98B5              primcuad
 397+ 98B5 3E 01        	ld a,1
 398+ 98B7 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98BA 21 C0 4F     	ld hl,$4fc0
 400+ 98BD 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98C0 21 DE 8B     	ld hl,Limite_vertical
 402+ 98C3 36 12        	ld (hl),$12
 403+ 98C5 08           	ex af,af
 404+ 98C6
 405+ 98C6 C5           1 push bc
 406+ 98C7 E5           	push hl
 407+ 98C8 D5           	push de
 408+ 98C9
 409+ 98C9 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98CC CD 80 94     	call Genera_coordenadas
 411+ 98CF
 412+ 98CF D1           	pop de
 413+ 98D0 E1           	pop hl
 414+ 98D1 C1           	pop bc
 415+ 98D2
 416+ 98D2 21 C8 8B     	ld hl,Ctrl_0
 417+ 98D5 CB EE        	set 5,(hl)
 418+ 98D7 C9           	ret
 419+ 98D8
 420+ 98D8              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98D8
 422+ 98D8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98D8              ;
 424+ 98D8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98D8
 426+ 98D8 7D           column ld a,l
 427+ 98D9 E6 1F        	and $1f
 428+ 98DB FE 10         	cp $10
 429+ 98DD C9            	ret
 430+ 98DE
 431+ 98DE              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98DE              ;
 433+ 98DE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98DE              ;
 435+ 98DE              ; 14/12/22
 436+ 98DE              ;
 437+ 98DE              ;	Modifica: A y BC.
 438+ 98DE
 439+ 98DE 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98E1 E6 01        	and 1
 441+ 98E3 28 17        	jr z,1F
 442+ 98E5
 443+ 98E5              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98E5
 445+ 98E5 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98E8 47           	ld b,a
 447+ 98E9 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98EA 79           	ld a,c
 449+ 98EB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98EC 38 08        	jr c,2F
 451+ 98EE 47           	ld b,a
 452+ 98EF 79           	ld a,c
 453+ 98F0 90           	sub b
 454+ 98F1 32 DB 8B     	ld (Columnas),a
 455+ 98F4 18 1B        	jr 4F
 456+ 98F6 79           2 ld a,c
 457+ 98F7 32 DB 8B     	ld (Columnas),a
 458+ 98FA 18 15        	jr 4F
 459+ 98FC
 460+ 98FC              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98FC
 462+ 98FC 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 98FF 81           	add c
 464+ 9900 3D           	dec a
 465+ 9901 D6 1F        	sub $1f
 466+ 9903 38 08        	jr c,3F
 467+ 9905 47           	ld b,a
 468+ 9906 79           	ld a,c
 469+ 9907 90           	sub b
 470+ 9908 32 DB 8B     	ld (Columnas),a
 471+ 990B 18 04        	jr 4F
 472+ 990D 79           3 ld a,c
 473+ 990E 32 DB 8B     	ld (Columnas),a
 474+ 9911 D9           4 exx
 475+ 9912 4F           	ld c,a
 476+ 9913 D9           	exx
 477+ 9914 C9            ret
 478+ 9915
 479+ 9915              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9915              ;
 481+ 9915              ;   19/7/23
 482+ 9915              ;
 483+ 9915              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9915              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9915              ;
 486+ 9915              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9915              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9915              ;
 489+ 9915              ;	DESTRUYE: HL,B Y A.
 490+ 9915
 491+ 9915 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9918 FE 02        	cp 2
 493+ 991A 38 18        	jr c,1F
 494+ 991C 28 16        	jr z,1F
 495+ 991E E6 01        	and 1
 496+ 9920 28 0D        	jr z,3F
 497+ 9922
 498+ 9922              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9922
 500+ 9922 CD 5E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9925
 502+ 9925 7D           9 ld a,l
 503+ 9926 E6 1F        	and $1f
 504+ 9928 28 2A        	jr z,7F
 505+ 992A 2B           	dec hl
 506+ 992B 10 F8        	djnz 9B
 507+ 992D 18 25        	jr 7F
 508+ 992F
 509+ 992F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 992F
 511+ 992F 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 9932 18 20        	jr 7F
 513+ 9934
 514+ 9934 28 14        1 jr z,2F
 515+ 9936
 516+ 9936              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9936
 518+ 9936 CD 5E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9939
 520+ 9939 7D           4 ld a,l
 521+ 993A E6 1F        	and $1f
 522+ 993C 28 03        	jr z,6F
 523+ 993E 2B           	dec hl
 524+ 993F 10 F8        	djnz 4B
 525+ 9941 06 0F        6 ld b,15
 526+ 9943 CD 85 99     5 call PreviousScan
 527+ 9946 10 FB        	djnz 5B
 528+ 9948 18 0A        	jr 7F
 529+ 994A
 530+ 994A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 994A
 532+ 994A CD 5E 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 994D 06 0F        	ld b,15
 534+ 994F CD 85 99     8 call PreviousScan
 535+ 9952 10 FB        	djnz 8B
 536+ 9954
 537+ 9954 E5           7 push hl
 538+ 9955 DD E1        	pop ix
 539+ 9957
 540+ 9957 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 995A E5           	push hl
 542+ 995B FD E1        	pop iy
 543+ 995D
 544+ 995D C9           	ret
 545+ 995E
 546+ 995E              ; --------------------------------------------------------------------------------------------------------------------
 547+ 995E              ;
 548+ 995E              ;	2/1/23
 549+ 995E              ;
 550+ 995E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 995E              ;
 552+ 995E              ;	Tras esta rutina tenemos:
 553+ 995E              ;
 554+ 995E              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 995E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 995E              ;
 557+ 995E              ;	DESTRUYE!!!!! HL,B y A.
 558+ 995E
 559+ 995E 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9961 3A DB 8B     	ld a,(Columnas)
 561+ 9964 3D           	dec a
 562+ 9965 20 01        	jr nz,1F
 563+ 9967 3C           	inc a
 564+ 9968 47           1 ld b,a
 565+ 9969 C9           	ret
 566+ 996A
 567+ 996A              ; --------------------------------------------------------------------------------------------------------------------
 568+ 996A              ;
 569+ 996A              ;	Prepara_draw
 570+ 996A              ;
 571+ 996A              ;	Es una rutina de carga.
 572+ 996A              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 996A              ;
 574+ 996A              ;	FUNCIONAMIENTO:
 575+ 996A              ;
 576+ 996A              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 996A              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 996A              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 996A              ;
 580+ 996A              ;	DESTRUYE:
 581+ 996A              ;
 582+ 996A              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 996A
 584+ 996A 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 996D 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 996E 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 996F 4E           	ld c,(hl)
 588+ 9970 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 9973 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9975 C9           	ret
 591+ 9976
 592+ 9976              ;----------------------------------------------------------------------------------------------------------------
 593+ 9976              ;
 594+ 9976              ;	5/08/22
 595+ 9976              ;
 596+ 9976              ;   NextScan.
 597+ 9976              ;
 598+ 9976              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9976              ;
 600+ 9976              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9976              ;
 602+ 9976              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9976              ;
 604+ 9976              ;       DESTRUIDOS: AF y HL !!!
 605+ 9976              ;
 606+ 9976              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9976              ;
 608+ 9976
 609+ 9976 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9977 7C               ld a,h
 611+ 9978 E6 07            and 7
 612+ 997A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 997B
 614+ 997B 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 997C C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 997E 6F               ld l,a
 617+ 997F D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9980
 619+ 9980 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9981 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9983 67               ld h,a
 622+ 9984 C9               ret
 623+ 9985
 624+ 9985              ;----------------------------------------------------------------------------------------------------------------
 625+ 9985              ;
 626+ 9985              ;	5/08/22
 627+ 9985              ;
 628+ 9985              ;   PreviousScan.
 629+ 9985              ;
 630+ 9985              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9985              ;
 632+ 9985              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9985              ;
 634+ 9985              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9985              ;
 636+ 9985              ;       DESTRUIDOS: AF y HL !!!
 637+ 9985              ;
 638+ 9985              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9985              ;
 640+ 9985
 641+ 9985 7C           PreviousScan ld a,h
 642+ 9986 25               dec h               ; Dec H.
 643+ 9987 E6 07            and 7
 644+ 9989 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 998A
 646+ 998A 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 998B D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 998D 6F               ld l,a
 649+ 998E D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 998F
 651+ 998F 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9990 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9992 67               ld h,a
 654+ 9993 C9               ret
 655+ 9994
 656+ 9994
 657+ 9994
 658+ 9994
 659+ 9994
 660+ 9994
 661+ 9994
 662+ 9994
 663+ 9994
 664+ 9994
 665+ 9994
 666+ 9994
# file closed: Draw_XOR.asm
2271  9994              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9994
   2+ 9994              ; ******************************************************************************************************************************************************************************************
   3+ 9994              ;
   4+ 9994              ;   20/05/23
   5+ 9994              ;
   6+ 9994              ;	Recompone_posicion_inicio
   7+ 9994              ;
   8+ 9994              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9994              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9994              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9994              ;	_ a una u otra rutina.
  12+ 9994
  13+ 9994              Recompone_posicion_inicio
  14+ 9994
  15+ 9994 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 9997 7D           	ld a,l
  17+ 9998 E6 1F        	and $1f
  18+ 999A 28 16        	jr z,1F
  19+ 999C
  20+ 999C FE 1F        	cp $1f
  21+ 999E 28 0D        	jr z,3F
  22+ 99A0
  23+ 99A0 21 C7 8B     	ld hl,Ctrl_2
  24+ 99A3 CB C6        	set 0,(hl)
  25+ 99A5 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 99A8 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 99AB 18 08        	jr 2F
  28+ 99AD
  29+ 99AD CD 5B 9B     3 call Mov_left
  30+ 99B0 18 03        	jr 2F
  31+ 99B2
  32+ 99B2 CD 38 9A     1 call Mov_right
  33+ 99B5 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99B8 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99BB C9           	ret
  36+ 99BC
  37+ 99BC              ; ******************************************************************************************************************************************************************************************
  38+ 99BC              ;
  39+ 99BC              ;   27/05/23
  40+ 99BC              ;
  41+ 99BC              ;	Mov_down
  42+ 99BC              ;
  43+ 99BC              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99BC              ;
  45+ 99BC              ;
  46+ 99BC              Mov_down
  47+ 99BC
  48+ 99BC CD 26 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99BF              ;																	; _ repone (Puntero_objeto).
  50+ 99BF 21 C8 8B     	ld hl,Ctrl_0
  51+ 99C2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99C4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99C4              ; 																	; _ en el caso de que no lo haya.
  54+ 99C4 3A E3 8B     	ld a,(Vel_down)
  55+ 99C7 47           	ld b,a
  56+ 99C8 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99CB CD 62 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99CE E6 02        	and 2
  59+ 99D0 28 17        	jr z,1F
  60+ 99D2
  61+ 99D2              ; Nos encontramos en el último tercio de pantalla.
  62+ 99D2              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99D2
  64+ 99D2 7C           	ld a,h
  65+ 99D3 FE 57        	cp $57
  66+ 99D5 20 12        	jr nz,1F
  67+ 99D7
  68+ 99D7 7D           	ld a,l
  69+ 99D8 C6 20        	add $20
  70+ 99DA 30 0D        	jr nc,1F
  71+ 99DC
  72+ 99DC              ; ------------------------------
  73+ 99DC              ;
  74+ 99DC              ;	12/01/24
  75+ 99DC
  76+ 99DC              ;	call Reaparece_arriba
  77+ 99DC CD E8 9C     	call Reinicio
  78+ 99DF
  79+ 99DF              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99DF
  81+ 99DF 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 99E2 CB CF        	set 1,a
  83+ 99E4 32 2E 8C     	ld (Ctrl_3),a
  84+ 99E7
  85+ 99E7 18 08        	jr 3F
  86+ 99E9              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99E9              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99E9              ; ------------------------------
  89+ 99E9
  90+ 99E9 CD 76 99     1 call NextScan
  91+ 99EC 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99EF 10 DA            djnz 2B
  93+ 99F1 CD 80 94     3 call Genera_coordenadas
  94+ 99F4 C9           	ret
  95+ 99F5
  96+ 99F5              ; ******************************************************************************************************************************************************************************************
  97+ 99F5              ;
  98+ 99F5              ;   27/05/23
  99+ 99F5              ;
 100+ 99F5              ;	Mov_up
 101+ 99F5              ;
 102+ 99F5              ; 	Mueve el Sprite hacia arriba.
 103+ 99F5              ;
 104+ 99F5              ;
 105+ 99F5              Mov_up
 106+ 99F5
 107+ 99F5 CD 26 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99F8              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99F8 21 C8 8B     	ld hl,Ctrl_0
 110+ 99FB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99FD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99FD              ; 																		; _ en el caso de que no lo haya.
 113+ 99FD 3A E2 8B     	ld a,(Vel_up)
 114+ 9A00 47           	ld b,a
 115+ 9A01 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 9A04 CD 62 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A07 A7           	and a
 118+ 9A08 20 10        	jr nz,1F
 119+ 9A0A
 120+ 9A0A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A0A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A0A
 123+ 9A0A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A0B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A0D 20 0B            jr nz,1F
 126+ 9A0F 7D               ld a,l
 127+ 9A10 D6 20            sub $20
 128+ 9A12 30 06            jr nc,1F
 129+ 9A14 25               dec h
 130+ 9A15
 131+ 9A15              ; -----------------------------
 132+ 9A15 CD C9 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A18              ;	call Reinicio
 134+ 9A18              ; -----------------------------
 135+ 9A18
 136+ 9A18 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A1A CD 85 99     1 call PreviousScan
 138+ 9A1D 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A20 10 E2            djnz 3B
 140+ 9A22 CD 80 94     2 call Genera_coordenadas
 141+ 9A25 C9           	ret
 142+ 9A26
 143+ 9A26              ; -----------------------------
 144+ 9A26              ;
 145+ 9A26              ;	27/5/23
 146+ 9A26              ;
 147+ 9A26              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A26              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A26              ;
 150+ 9A26              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A26              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A26              ;
 153+ 9A26              ;	Modifica: A y (Puntero_objeto).
 154+ 9A26
 155+ 9A26 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A29 CB 47        	bit 0,a
 157+ 9A2B C8           	ret z
 158+ 9A2C CB 87        	res 0,a
 159+ 9A2E 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A31 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A34 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A37 C9           	ret
 163+ 9A38
 164+ 9A38              ; ******************************************************************************************************************************************************************************************
 165+ 9A38              ;
 166+ 9A38              ;	19/10/22
 167+ 9A38              ;
 168+ 9A38              ;	Mov_right.
 169+ 9A38              ;
 170+ 9A38              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A38              ;
 172+ 9A38
 173+ 9A38 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A3B CB 77        	bit 6,a
 175+ 9A3D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A3F
 177+ 9A3F CD 77 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A42 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A43
 180+ 9A43 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A46 CB E6        	set 4,(hl)
 182+ 9A48 18 52        	jr 8F
 183+ 9A4A
 184+ 9A4A 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A4D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A4F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A4F              ; 																	; _ en el caso de que no lo haya.
 188+ 9A4F 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A52 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A54 20 46        	jr nz,8F
 191+ 9A56
 192+ 9A56 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A59 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A5A 28 40        	jr z,8F
 195+ 9A5C
 196+ 9A5C              ; ---------- ---------- ----------
 197+ 9A5C              ;
 198+ 9A5C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A5C
 200+ 9A5C 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A5F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A61 28 11        	jr z,1F
 203+ 9A63 38 06        	jr c,6F
 204+ 9A65 FE 04        	cp 4
 205+ 9A67 28 14        	jr z,7F
 206+ 9A69 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A6B
 208+ 9A6B              ; ---------- ---------- ----------
 209+ 9A6B              ;
 210+ 9A6B              ; Perfiles de velocidad
 211+ 9A6B              ;
 212+ 9A6B
 213+ 9A6B 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A6E FE FE        	cp $fe
 215+ 9A70 20 2A        	jr nz,8F
 216+ 9A72 18 10        	jr 3F
 217+ 9A74 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A77 FE FD        	cp $fd
 219+ 9A79 20 21        	jr nz,8F
 220+ 9A7B 18 07        	jr 3F
 221+ 9A7D 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A80 FE FB        	cp $fb
 223+ 9A82 20 18        	jr nz,8F
 224+ 9A84
 225+ 9A84              ; ---------- ---------- ----------
 226+ 9A84
 227+ 9A84              3
 228+ 9A84 CD B7 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A87              ;	call Reinicio
 230+ 9A87
 231+ 9A87              ; ---------- ---------- ----------
 232+ 9A87              ;
 233+ 9A87              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A87
 235+ 9A87 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A89 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A8A CD A3 9A     	call DESPLZ_DER
 238+ 9A8D C1           	pop bc
 239+ 9A8E 10 F9        	djnz 5B
 240+ 9A90 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A93 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A94 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9A97 CD 80 94     	call Genera_coordenadas
 244+ 9A9A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A9C
 246+ 9A9C              ; ---------- ---------- ----------
 247+ 9A9C
 248+ 9A9C 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9A9F CD A3 9A     	call DESPLZ_DER
 250+ 9AA2 C9           2 ret
 251+ 9AA3
 252+ 9AA3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AA3              ;
 254+ 9AA3              ;	22/9/22
 255+ 9AA3              ;
 256+ 9AA3
 257+ 9AA3 CD B2 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AA6 CD FE 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9AA9 CD 27 9B         call Ciclo_completo
 260+ 9AAC 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AAF CB FE        	set 7,(hl)
 262+ 9AB1 C9           	ret
 263+ 9AB2
 264+ 9AB2              ; ******************************************************************************************************************************************************************************************
 265+ 9AB2              ;	15/02/23
 266+ 9AB2              ;
 267+ 9AB2
 268+ 9AB2 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AB5 47           	ld b,a
 270+ 9AB6 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AB9 23           1 inc hl
 272+ 9ABA 23           	inc hl
 273+ 9ABB 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9ABD 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AC0 CD 61 90     	call Extrae_address
 276+ 9AC3 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9AC6
 278+ 9AC6              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AC6
 280+ 9AC6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AC6              ; Cuántos movimientos hemos hecho ??
 282+ 9AC6              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AC6
 284+ 9AC6 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AC9 EB           	ex de,hl
 286+ 9ACA A7           	and a
 287+ 9ACB ED 52        	sbc hl,de
 288+ 9ACD CB 3D        	srl l
 289+ 9ACF 3E 08        6 ld a,8
 290+ 9AD1 95           	sub l
 291+ 9AD2 30 1E        	jr nc,3F
 292+ 9AD4
 293+ 9AD4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AD4              ; B="0".
 295+ 9AD4
 296+ 9AD4 04           4 inc b
 297+ 9AD5 3C           	inc a
 298+ 9AD6 20 FC        	jr nz,4B
 299+ 9AD8 78           	ld a,b
 300+ 9AD9 08           	ex af,af
 301+ 9ADA 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9ADD 23           5 inc hl
 303+ 9ADE 23           	inc hl
 304+ 9ADF 10 FC        	djnz 5B
 305+ 9AE1 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AE4 CD 61 90     	call Extrae_address
 307+ 9AE7 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9AEA
 309+ 9AEA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AEA              ; _(Posicion_actual).
 311+ 9AEA
 312+ 9AEA 21 CB 8B     	ld hl,Posicion_actual
 313+ 9AED 34           	inc (hl)
 314+ 9AEE 08               ex af,af
 315+ 9AEF 6F           	ld l,a
 316+ 9AF0 18 DD        	jr 6B
 317+ 9AF2
 318+ 9AF2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AF2
 320+ 9AF2 47           3 ld b,a
 321+ 9AF3 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9AF6 23           2 inc hl
 323+ 9AF7 23           	inc hl
 324+ 9AF8 10 FC        	djnz 2B
 325+ 9AFA 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9AFD C9           8 ret
 327+ 9AFE
 328+ 9AFE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9AFE              ;
 330+ 9AFE              ;	24/7/22
 331+ 9AFE              ;
 332+ 9AFE              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9AFE              ;
 334+ 9AFE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9AFE              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9AFE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9AFE
 338+ 9AFE 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B01 A7           	and a
 340+ 9B02 20 1F        	jr nz,1F
 341+ 9B04 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B06 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9B09
 344+ 9B09 21 CA 8B     	ld hl,Columns
 345+ 9B0C 34           	inc (hl)
 346+ 9B0D 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9B10 E6 01        	and 1
 348+ 9B12 28 0F        	jr z,1F
 349+ 9B14 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B17 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B18 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B1B CD 80 94     	call Genera_coordenadas
 353+ 9B1E CD 83 9C     	call Inc_CTRL_DESPLZ
 354+ 9B21 18 03        	jr 2F
 355+ 9B23 CD 83 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B26 C9           2 ret
 357+ 9B27
 358+ 9B27              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B27              ;
 360+ 9B27              ;	24/7/22
 361+ 9B27              ;
 362+ 9B27              ;	Ciclo_completo.
 363+ 9B27              ;
 364+ 9B27              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B27              ;
 366+ 9B27              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B27              ; 	Decrementamos (Columns).
 368+ 9B27              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B27              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B27
 371+ 9B27
 372+ 9B27 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B2A FE FF        	cp $ff
 374+ 9B2C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B2E E6 F0        	and $f0
 376+ 9B30 20 28        	jr nz,3F
 377+ 9B32
 378+ 9B32              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B32
 380+ 9B32 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B35 47           	ld b,a
 382+ 9B36 3E F8        	ld a,$f8
 383+ 9B38 80           	add b
 384+ 9B39 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B3C 18 1C        	jr 3F
 386+ 9B3E 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B41 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B42 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B43 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B46 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B49 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B4B 20 0A        	jr nz,2F
 393+ 9B4D 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B50 23           	inc hl
 395+ 9B51 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B54 CD 80 94     	call Genera_coordenadas
 397+ 9B57
 398+ 9B57              ; Inicia el puntero de Sprite.
 399+ 9B57
 400+ 9B57 CD 76 90     2 call Inicia_puntero_objeto_der
 401+ 9B5A C9           3 ret
 402+ 9B5B
 403+ 9B5B              ; ******************************************************************************************************************************************************************************************
 404+ 9B5B              ;
 405+ 9B5B              ;	15/02/23
 406+ 9B5B              ;
 407+ 9B5B              ;	Mov_left.
 408+ 9B5B              ;
 409+ 9B5B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B5B              ;
 411+ 9B5B              Mov_left
 412+ 9B5B
 413+ 9B5B 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B5E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B60              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B60              ; 																	; _ en el caso de que no lo haya.
 417+ 9B60 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B63 CB 77        	bit 6,a
 419+ 9B65 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B67
 421+ 9B67 CD 7D 9C     	call Stop_Amadeus_left
 422+ 9B6A C8           	ret z
 423+ 9B6B 20 4A        	jr nz,8F
 424+ 9B6D
 425+ 9B6D 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B70 A7           	and a
 427+ 9B71 20 44        	jr nz,8F
 428+ 9B73
 429+ 9B73 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B76 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B77 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B79
 433+ 9B79              ; ---------- ---------- ----------
 434+ 9B79
 435+ 9B79 3A E0 8B     	ld a,(Vel_left)
 436+ 9B7C FE 02        	cp 2
 437+ 9B7E 28 0F        	jr z,1F
 438+ 9B80 38 04        	jr c,6F
 439+ 9B82 FE 04        	cp 4
 440+ 9B84 28 12        	jr z,7F
 441+ 9B86
 442+ 9B86              ; ---------- ---------- ----------
 443+ 9B86
 444+ 9B86 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B89 FE F8        	cp $f8
 446+ 9B8B 20 2A        	jr nz,8F
 447+ 9B8D 18 10        	jr 4F
 448+ 9B8F 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B92 FE F9        	cp $f9
 450+ 9B94 20 21        	jr nz,8F
 451+ 9B96 18 07        	jr 4F
 452+ 9B98 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9B9B FE FB        	cp $fb
 454+ 9B9D 20 18        	jr nz,8F
 455+ 9B9F
 456+ 9B9F              ; ---------- ---------- ----------
 457+ 9B9F
 458+ 9B9F              4
 459+ 9B9F CD A5 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BA2              ;	call Reinicio
 461+ 9BA2
 462+ 9BA2              ; ---------- ---------- ----------
 463+ 9BA2
 464+ 9BA2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BA4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BA5
 467+ 9BA5              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BA5              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BA5
 470+ 9BA5 CD BE 9B     	call DESPLZ_IZQ
 471+ 9BA8 C1           	pop bc
 472+ 9BA9 10 F9        	djnz 5B
 473+ 9BAB 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BAE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BAF 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9BB2 CD 80 94     	call Genera_coordenadas
 477+ 9BB5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BB7
 479+ 9BB7              ; ---------- ---------- ----------
 480+ 9BB7
 481+ 9BB7              ; Movemos, no hay recolocación.
 482+ 9BB7
 483+ 9BB7 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BBA CD BE 9B     	call DESPLZ_IZQ
 485+ 9BBD C9           2 ret
 486+ 9BBE
 487+ 9BBE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BBE              ;
 489+ 9BBE              ;	22/9/22
 490+ 9BBE
 491+ 9BBE              DESPLZ_IZQ
 492+ 9BBE
 493+ 9BBE CD CD 9B     	call Desplaza_izquierda
 494+ 9BC1 CD 19 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BC4 CD 41 9C     	call Ciclo_completo_2
 496+ 9BC7 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BCA CB BE        	res 7,(hl)
 498+ 9BCC C9           	ret
 499+ 9BCD
 500+ 9BCD              Desplaza_izquierda
 501+ 9BCD
 502+ 9BCD 3A E0 8B     	ld a,(Vel_left)
 503+ 9BD0 47           	ld b,a
 504+ 9BD1 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BD4 23           1 inc hl
 506+ 9BD5 23           	inc hl
 507+ 9BD6 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BD8 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BDB CD 61 90     	call Extrae_address
 510+ 9BDE 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BE1
 512+ 9BE1              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BE1
 514+ 9BE1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BE1              ; Cuántos movimientos hemos hecho ??
 516+ 9BE1              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BE1
 518+ 9BE1 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BE4 EB           	ex de,hl
 520+ 9BE5 A7           	and a
 521+ 9BE6 ED 52        	sbc hl,de
 522+ 9BE8 CB 3D        	srl l
 523+ 9BEA 3E 08        6 ld a,8
 524+ 9BEC 95           	sub l
 525+ 9BED 30 1E        	jr nc,3F
 526+ 9BEF
 527+ 9BEF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BEF              ; B="0".
 529+ 9BEF
 530+ 9BEF 04           4 inc b
 531+ 9BF0 3C           	inc a
 532+ 9BF1 20 FC        	jr nz,4B
 533+ 9BF3 78           	ld a,b
 534+ 9BF4 08           	ex af,af
 535+ 9BF5 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9BF8 23           5 inc hl
 537+ 9BF9 23           	inc hl
 538+ 9BFA 10 FC        	djnz 5B
 539+ 9BFC 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BFF CD 61 90     	call Extrae_address
 541+ 9C02 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9C05
 543+ 9C05              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C05              ; _(Posicion_actual).
 545+ 9C05
 546+ 9C05 21 CB 8B     	ld hl,Posicion_actual
 547+ 9C08 35           	dec (hl)
 548+ 9C09 08           	ex af,af
 549+ 9C0A 6F           	ld l,a
 550+ 9C0B 18 DD        	jr 6B
 551+ 9C0D
 552+ 9C0D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C0D
 554+ 9C0D 47           3 ld b,a
 555+ 9C0E 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C11 23           2 inc hl
 557+ 9C12 23           	inc hl
 558+ 9C13 10 FC        	djnz 2B
 559+ 9C15 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C18 C9           8 ret
 561+ 9C19
 562+ 9C19              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C19              ;
 564+ 9C19              ;	modifica_parametros_1er_DESPLZ
 565+ 9C19              ;
 566+ 9C19              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C19              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C19              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C19
 570+ 9C19 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C1C A7           	and a
 572+ 9C1D 20 1E        	jr nz,1F
 573+ 9C1F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C20 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C23 21 CA 8B     	ld hl,Columns
 576+ 9C26 34           	inc (hl)
 577+ 9C27 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C2A E6 01        	and 1
 579+ 9C2C 20 0F        	jr nz,1F
 580+ 9C2E 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C31 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C32 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C35 CD 80 94     	call Genera_coordenadas
 584+ 9C38 CD 94 9C     	call Dec_CTRL_DESPLZ
 585+ 9C3B 18 03        	jr 2F
 586+ 9C3D CD 94 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C40 C9           2 ret
 588+ 9C41
 589+ 9C41              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C41
 591+ 9C41 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C44 FE F7        	cp $f7
 593+ 9C46 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C48 30 2C        	jr nc,3F
 595+ 9C4A
 596+ 9C4A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C4A
 598+ 9C4A 06 00        	ld b,0
 599+ 9C4C 04           4 inc b
 600+ 9C4D 3C           	inc a
 601+ 9C4E FE F7        	cp $f7
 602+ 9C50 20 FA        	jr nz,4B
 603+ 9C52 3E FF        	ld a,$ff
 604+ 9C54 90           	sub b
 605+ 9C55 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C58 18 1C        	jr 3F
 607+ 9C5A
 608+ 9C5A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C5A
 610+ 9C5A 21 CA 8B     1 ld hl,Columns
 611+ 9C5D 35           	dec (hl)
 612+ 9C5E AF           	xor a
 613+ 9C5F 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C62 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C65 E6 01        	and 1
 616+ 9C67 28 0A        	jr z,2F
 617+ 9C69 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C6C 2B           	dec hl
 619+ 9C6D 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C70 CD 80 94     	call Genera_coordenadas
 621+ 9C73
 622+ 9C73              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C73
 624+ 9C73 CD 89 90     2 call Inicia_puntero_objeto_izq
 625+ 9C76 C9           3 ret
 626+ 9C77
 627+ 9C77              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C77              ;
 629+ 9C77              ;	19/10/22
 630+ 9C77              ;
 631+ 9C77              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C77              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C77
 634+ 9C77 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C7A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C7C C9           	ret
 637+ 9C7D
 638+ 9C7D              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C7D              ;
 640+ 9C7D              ;	19/10/22
 641+ 9C7D              ;
 642+ 9C7D              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C7D              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C7D
 645+ 9C7D 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C80 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C82 C9           	ret
 648+ 9C83
 649+ 9C83              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C83              ;
 651+ 9C83              ;	24/7/22
 652+ 9C83              ;
 653+ 9C83              ;	Inc_CTRL_DESPLZ
 654+ 9C83              ;
 655+ 9C83              ;
 656+ 9C83              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C83
 658+ 9C83 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C86 3A E1 8B     	ld a,(Vel_right)
 660+ 9C89 A7           	and a
 661+ 9C8A 28 06        	jr z,1F
 662+ 9C8C 47           	ld b,a
 663+ 9C8D 34           3 inc (hl)
 664+ 9C8E 10 FD        	djnz 3B
 665+ 9C90 18 01        	jr 2F
 666+ 9C92 34           1 inc (hl)
 667+ 9C93 C9           2 ret
 668+ 9C94
 669+ 9C94              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C94              ;
 671+ 9C94              ;	5/2/23
 672+ 9C94              ;
 673+ 9C94              ;	Dec_CTRL_DESPLZ
 674+ 9C94              ;
 675+ 9C94              ;
 676+ 9C94              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C94
 678+ 9C94 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C97 3A E0 8B     	ld a,(Vel_left)
 680+ 9C9A A7           	and a
 681+ 9C9B 28 06        	jr z,1F
 682+ 9C9D 47           	ld b,a
 683+ 9C9E 35           3 dec (hl)
 684+ 9C9F 10 FD        	djnz 3B
 685+ 9CA1 18 01        	jr 2F
 686+ 9CA3 35           1 dec (hl)
 687+ 9CA4 C9           2 ret
 688+ 9CA5
 689+ 9CA5              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CA5
 691+ 9CA5 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CA8 01 1F 00     	ld bc,31
 693+ 9CAB A7           	and a
 694+ 9CAC ED 4A        	adc hl,bc
 695+ 9CAE 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9CB1 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CB4 CB C6        	set 0,(hl)
 698+ 9CB6 C9           	ret
 699+ 9CB7
 700+ 9CB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CB7
 702+ 9CB7 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CBA 01 1F 00     	ld bc,31
 704+ 9CBD A7           	and a
 705+ 9CBE ED 42        	sbc hl,bc
 706+ 9CC0 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CC3 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CC6 CB CE        	set 1,(hl)
 709+ 9CC8 C9           	ret
 710+ 9CC9
 711+ 9CC9              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CC9
 713+ 9CC9 24           Reaparece_abajo inc h
 714+ 9CCA 01 E0 17     	ld bc,$17e0
 715+ 9CCD A7           	and a
 716+ 9CCE ED 4A        	adc hl,bc
 717+ 9CD0 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CD3 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CD6 CB D6        	set 2,(hl)
 720+ 9CD8 C9           	ret
 721+ 9CD9
 722+ 9CD9              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CD9
 724+ 9CD9 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CDC A7           	and a
 726+ 9CDD ED 42        	sbc hl,bc
 727+ 9CDF 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CE2 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CE5 CB DE        	set 3,(hl)
 730+ 9CE7 C9           	ret
 731+ 9CE8
 732+ 9CE8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CE8              ;
 734+ 9CE8              ;	15/07/23
 735+ 9CE8
 736+ 9CE8              Reinicio
 737+ 9CE8
 738+ 9CE8              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CE8
 740+ 9CE8 AF           	xor a
 741+ 9CE9 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CEC CD 0A 9D     	call Limpia_contenido_hl
 743+ 9CEF
 744+ 9CEF 21 CB 8B     	ld hl,Posicion_actual
 745+ 9CF2 CD 0A 9D     	call Limpia_contenido_hl
 746+ 9CF5
 747+ 9CF5 CD 62 92     	call Inicializa_Puntero_indice_mov
 748+ 9CF8 CD 09 9E     	call Inicia_Puntero_mov
 749+ 9CFB
 750+ 9CFB 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9CFE 06 05        	ld b,5
 752+ 9D00 77           1 ld (hl),a
 753+ 9D01 23           	inc hl
 754+ 9D02 10 FC        	djnz 1B
 755+ 9D04
 756+ 9D04 21 C7 8B     	ld hl,Ctrl_2
 757+ 9D07 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D09
 759+ 9D09 C9           	ret
 760+ 9D0A
 761+ 9D0A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D0B 23           	inc hl
 763+ 9D0C 77           	ld (hl),a
 764+ 9D0D C9           	ret
 765+ 9D0E
 766+ 9D0E              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D0E              ;
 768+ 9D0E              ;	18/6/24
 769+ 9D0E              ;
 770+ 9D0E
 771+ 9D0E              Amadeus_a_izquierda
 772+ 9D0E
 773+ 9D0E              ;	Actualiza contador de movimientos.
 774+ 9D0E
 775+ 9D0E 21 79 89     	ld hl,Comm_Amadeus
 776+ 9D11 35           	dec (hl)
 777+ 9D12 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D14
 779+ 9D14 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D17 2B           	dec hl
 781+ 9D18 2B           	dec hl
 782+ 9D19 2B           	dec hl
 783+ 9D1A 2B           	dec hl
 784+ 9D1B 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D1E
 786+ 9D1E 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D21 CB EE        	set 5,(hl)
 788+ 9D23
 789+ 9D23 C9           	ret
 790+ 9D24
 791+ 9D24 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D25 C9           	ret
 793+ 9D26
 794+ 9D26
 795+ 9D26              Amadeus_a_derecha
 796+ 9D26
 797+ 9D26              ;	Actualiza contador de movimientos.
 798+ 9D26
 799+ 9D26 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D29 34           	inc (hl)
 801+ 9D2A 3E 7A        	ld a,$7a
 802+ 9D2C BE           	cp (hl)
 803+ 9D2D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D2F
 805+ 9D2F 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D32 23           	inc hl
 807+ 9D33 23           	inc hl
 808+ 9D34 23           	inc hl
 809+ 9D35 23           	inc hl
 810+ 9D36 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D39
 812+ 9D39 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D3C CB EE        	set 5,(hl)
 814+ 9D3E C9           	ret
 815+ 9D3F
 816+ 9D3F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D40 C9           	ret
# file closed: Direcciones.asm
2272  9D41              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D41              ; ----- ----- ----- ----- -----
   2+ 9D41              ;
   3+ 9D41              ;   28/12/23
   4+ 9D41
   5+ 9D41              Movimiento
   6+ 9D41
   7+ 9D41              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D41
   9+ 9D41 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D44 CB 57            bit 2,a
  11+ 9D46 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D48
  13+ 9D48 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D4B 7E               ld a,(hl)
  15+ 9D4C
  16+ 9D4C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D4C
  18+ 9D4C              Inicia_desplazamiento.
  19+ 9D4C
  20+ 9D4C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D4C
  22+ 9D4C CD 3F 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D4F
  24+ 9D4F              ; Iniciamos (Repetimos_mov).
  25+ 9D4F
  26+ 9D4F 7E               ld a,(hl)
  27+ 9D50 E6 0F            and $0f
  28+ 9D52 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D55 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D58
  31+ 9D58              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D58
  33+ 9D58 23               inc hl
  34+ 9D59 7E               ld a,(hl)
  35+ 9D5A 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D5D 2B               dec hl
  37+ 9D5E
  38+ 9D5E 21 C7 8B         ld hl,Ctrl_2
  39+ 9D61 CB D6            set 2,(hl)
  40+ 9D63
  41+ 9D63              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D63              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D63
  44+ 9D63              Desplazamiento_iniciado
  45+ 9D63
  46+ 9D63 CD 13 9E         call Aplica_desplazamiento
  47+ 9D66
  48+ 9D66              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D66
  50+ 9D66 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9D69 CB 4F            bit 1,a
  52+ 9D6B C0               ret nz
  53+ 9D6C
  54+ 9D6C 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D6F 35               dec (hl)
  56+ 9D70 C0               ret nz
  57+ 9D71
  58+ 9D71              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D71              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D71              ; Analiza (Cola_de_desplazamiento).
  61+ 9D71
  62+ 9D71 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D74 A7               and a
  64+ 9D75 CC 68 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D78 28 30            jr z,Reinicia_el_movimiento
  66+ 9D7A
  67+ 9D7A FE FF            cp $ff
  68+ 9D7C 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D7E
  70+ 9D7E FE FE            cp $fe
  71+ 9D80 CC ED 9D         call z,Fijamos_bucle
  72+ 9D83 28 25            jr z,Reinicia_el_movimiento
  73+ 9D85
  74+ 9D85 FE FD            cp $fd
  75+ 9D87 20 11            jr nz,1F
  76+ 9D89
  77+ 9D89              ; ---
  78+ 9D89              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D89
  80+ 9D89 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D8C CB 5F            bit 3,a
  82+ 9D8E 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D90
  84+ 9D90              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D90
  86+ 9D90 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D93 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D95
  89+ 9D95 CD FE 9D         call Inicia_Repetimos_movimiento
  90+ 9D98 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D9A              ; ---
  92+ 9D9A
  93+ 9D9A FE 01        1 cp 1
  94+ 9D9C CA D7 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D9F
  96+ 9D9F 3D               dec a
  97+ 9DA0 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9DA3
  99+ 9DA3 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DA6 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DA9              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DA9 C9               ret
 103+ 9DAA
 104+ 9DAA              Reinicia_el_movimiento
 105+ 9DAA
 106+ 9DAA 3A C7 8B         ld a,(Ctrl_2)
 107+ 9DAD CB 5F            bit 3,a
 108+ 9DAF 28 1B            jr z,2F
 109+ 9DB1
 110+ 9DB1              ; (Cola_de_desplazamiento)="254".
 111+ 9DB1
 112+ 9DB1 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DB4 35               dec (hl)
 114+ 9DB5 20 15            jr nz,2F
 115+ 9DB7
 116+ 9DB7              ; Fin de las repeticiones del último movimiento.
 117+ 9DB7
 118+ 9DB7 21 C7 8B         ld hl,Ctrl_2
 119+ 9DBA CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DBC
 121+ 9DBC 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DBF 23               inc hl
 123+ 9DC0 23               inc hl
 124+ 9DC1 23               inc hl
 125+ 9DC2 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DC5              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DC5 7E               ld a,(hl)
 128+ 9DC6 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DC9
 130+ 9DC9 C3 71 9D         jp Cola
 131+ 9DCC
 132+ 9DCC CD 09 9E     2 call Inicia_Puntero_mov
 133+ 9DCF
 134+ 9DCF 21 C7 8B         ld hl,Ctrl_2
 135+ 9DD2 CB 96            res 2,(hl)
 136+ 9DD4
 137+ 9DD4 C3 41 9D         jp Movimiento
 138+ 9DD7
 139+ 9DD7              Siguiente_desplazamiento
 140+ 9DD7
 141+ 9DD7              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DD7              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DD7
 144+ 9DD7 21 C7 8B         ld hl,Ctrl_2
 145+ 9DDA CB 96            res 2,(hl)
 146+ 9DDC
 147+ 9DDC 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DDF 23               inc hl
 149+ 9DE0 23               inc hl
 150+ 9DE1 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DE4
 152+ 9DE4 7E               ld a,(hl)
 153+ 9DE5 A7               and a
 154+ 9DE6 CC 68 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DE9 CA AA 9D         jp z,Reinicia_el_movimiento
 156+ 9DEC
 157+ 9DEC C9               ret
 158+ 9DED
 159+ 9DED              ; Subrutinas -----------------------------------------
 160+ 9DED              ; ---------- --------- --------- ---------- ----------
 161+ 9DED              ;
 162+ 9DED              ;   24/07/23
 163+ 9DED              ;
 164+ 9DED              ;   Fijamos_bucle
 165+ 9DED              ;
 166+ 9DED              ;
 167+ 9DED
 168+ 9DED              Fijamos_bucle
 169+ 9DED
 170+ 9DED 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9DF0 3C               inc a
 172+ 9DF1 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9DF4
 174+ 9DF4 CD 68 9E         call Incrementa_Puntero_indice_mov
 175+ 9DF7 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9DFA 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9DFD C9               ret
 178+ 9DFE
 179+ 9DFE              ; ---------- --------- --------- ---------- ----------
 180+ 9DFE              ;
 181+ 9DFE              ;   07/7/23
 182+ 9DFE              ;
 183+ 9DFE              ;   Inicia_Repetimos_movimiento
 184+ 9DFE              ;
 185+ 9DFE              ;
 186+ 9DFE
 187+ 9DFE              Inicia_Repetimos_movimiento
 188+ 9DFE
 189+ 9DFE              ; Iniciamos (Repetimos_movimiento).
 190+ 9DFE
 191+ 9DFE DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9E02 DD 7E 02         ld a,(ix+2)
 193+ 9E05 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9E08
 195+ 9E08 C9               ret
 196+ 9E09
 197+ 9E09              ; ---------- --------- --------- ---------- ----------
 198+ 9E09              ;
 199+ 9E09              ;   26/6/23
 200+ 9E09              ;
 201+ 9E09              ;   Inicia_Puntero_mov
 202+ 9E09              ;
 203+ 9E09              ;
 204+ 9E09
 205+ 9E09 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E0C CD 61 90         call Extrae_address
 207+ 9E0F 22 EE 8B         ld (Puntero_mov),hl
 208+ 9E12 C9               ret
 209+ 9E13
 210+ 9E13              ; ---------- --------- --------- ---------- ----------
 211+ 9E13              ;
 212+ 9E13              ;   27/06/23
 213+ 9E13              ;
 214+ 9E13              ;   Aplica_movimiento.
 215+ 9E13
 216+ 9E13              Aplica_desplazamiento
 217+ 9E13
 218+ 9E13              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E13
 220+ 9E13 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9E16
 222+ 9E16 7E               ld a,(hl)
 223+ 9E17 E6 F0            and $f0
 224+ 9E19 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E1A
 226+ 9E1A CB 7E            bit 7,(hl)
 227+ 9E1C 28 03            jr z,1F
 228+ 9E1E CD F5 99         call Mov_up
 229+ 9E21 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E24 CB 76            bit 6,(hl)
 231+ 9E26 28 03            jr z,2F
 232+ 9E28 CD BC 99         call Mov_down
 233+ 9E2B
 234+ 9E2B              ; Se ha aplicado reinicio ???
 235+ 9E2B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E2B
 237+ 9E2B              ;    ld a,(Ctrl_3)
 238+ 9E2B              ;    bit 1,a
 239+ 9E2B              ;    ret nz
 240+ 9E2B
 241+ 9E2B 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E2E CB 6E            bit 5,(hl)
 243+ 9E30 28 03            jr z,3F
 244+ 9E32 CD 5B 9B         call Mov_left
 245+ 9E35 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E38 CB 66            bit 4,(hl)
 247+ 9E3A C8               ret z
 248+ 9E3B CD 38 9A         call Mov_right
 249+ 9E3E C9               ret
 250+ 9E3F
 251+ 9E3F              ; ---------- --------- --------- ---------- ----------
 252+ 9E3F              ;
 253+ 9E3F              ;   26/06/23
 254+ 9E3F              ;
 255+ 9E3F              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E3F
 257+ 9E3F              Ajusta_velocidad_desplazamiento
 258+ 9E3F
 259+ 9E3F              ; 1er byte de la cadena de movimiento.
 260+ 9E3F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E3F
 262+ 9E3F CD 5D 9E         call Extrae_nibble_alto
 263+ 9E42
 264+ 9E42 32 E2 8B         ld (Vel_up),a
 265+ 9E45 79               ld a,c
 266+ 9E46 E6 0F            and $0f
 267+ 9E48 32 E3 8B         ld (Vel_down),a
 268+ 9E4B
 269+ 9E4B              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E4B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E4B
 272+ 9E4B 23               inc hl
 273+ 9E4C CD 5D 9E         call Extrae_nibble_alto
 274+ 9E4F
 275+ 9E4F 32 E0 8B         ld (Vel_left),a
 276+ 9E52 79               ld a,c
 277+ 9E53 E6 0F            and $0f
 278+ 9E55 32 E1 8B         ld (Vel_right),a
 279+ 9E58
 280+ 9E58              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E58
 282+ 9E58 23               inc hl
 283+ 9E59 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E5C C9               ret
 285+ 9E5D
 286+ 9E5D 06 04        Extrae_nibble_alto ld b,4
 287+ 9E5F 7E               ld a,(hl)
 288+ 9E60 4F               ld c,a
 289+ 9E61 E6 F0            and $f0
 290+ 9E63 CB 3F        1 srl a
 291+ 9E65 10 FC            djnz 1B
 292+ 9E67 C9               ret
 293+ 9E68
 294+ 9E68              ; ---------- --------- --------- ---------- ----------
 295+ 9E68              ;
 296+ 9E68              ;   5/7/23
 297+ 9E68              ;
 298+ 9E68              ;   Incrementa_Puntero_indice_mov
 299+ 9E68
 300+ 9E68              Incrementa_Puntero_indice_mov
 301+ 9E68
 302+ 9E68 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E6B 34               inc (hl)
 304+ 9E6C
 305+ 9E6C 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E6F 01 02 00         ld bc,2
 307+ 9E72 A7               and a
 308+ 9E73 09               add hl,bc
 309+ 9E74 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E77
 311+ 9E77 7E               ld a,(hl)
 312+ 9E78 A7               and a
 313+ 9E79
 314+ 9E79              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E79
 316+ 9E79              ;    jr z,$
 317+ 9E79
 318+ 9E79              ;! Reinicia el Patrón de movimiento.
 319+ 9E79
 320+ 9E79 CC 7E 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E7C
 322+ 9E7C AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E7D
 324+ 9E7D C9               ret
 325+ 9E7E
 326+ 9E7E              ; ---------- --------- --------- ---------- ----------
 327+ 9E7E              ;
 328+ 9E7E              ;   15/01/24
 329+ 9E7E              ;
 330+ 9E7E              ;   Inicializa_Puntero_indice_mov
 331+ 9E7E
 332+ 9E7E              Inicializa_Puntero_indice_mov_2
 333+ 9E7E
 334+ 9E7E              ; Existe etiqueta de bucle principal???
 335+ 9E7E
 336+ 9E7E 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E81 24               inc h
 338+ 9E82 25               dec h
 339+ 9E83 28 05            jr z,2F
 340+ 9E85
 341+ 9E85 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E88 18 14            jr 3F
 343+ 9E8A
 344+ 9E8A              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E8A
 346+ 9E8A 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E8D 47               ld b,a
 348+ 9E8E
 349+ 9E8E 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9E91 2B           1 dec hl
 351+ 9E92 2B               dec hl
 352+ 9E93 10 FC            djnz 1B
 353+ 9E95 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9E98
 355+ 9E98 AF               xor a
 356+ 9E99 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9E9C 18 06            jr 4F
 358+ 9E9E
 359+ 9E9E 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EA1 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9EA4 C9           4 ret
 362+ 9EA5
 363+ 9EA5              ; ----------------------------------------------------------------------
 364+ 9EA5              ;
 365+ 9EA5              ;   30/01/24
 366+ 9EA5              ;
 367+ 9EA5              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EA5
 369+ 9EA5 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EA8 CD FD 93         call Calcula_salto_en_BC
 371+ 9EAB 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EAE A7               and a
 373+ 9EAF ED 4A            adc hl,bc
 374+ 9EB1 C9               ret
 375+ 9EB2
 376+ 9EB2              ; ----------------------------------------------------------------------
 377+ 9EB2              ;
 378+ 9EB2              ;   30/01/24
 379+ 9EB2              ;
 380+ 9EB2              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EB2              ;
 382+ 9EB2              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EB2
 384+ 9EB2 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EB3 23               inc hl
 386+ 9EB4 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EB5 69               ld l,c
 388+ 9EB6 60               ld h,b
 389+ 9EB7 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EBA C9               ret
 391+ 9EBB
# file closed: Movimiento.asm
2273  9EBB              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EBB              ; --------------------------------------------------------------------------------------
   2+ 9EBB              ;
   3+ 9EBB              ;   26/08/24
   4+ 9EBB              ;
   5+ 9EBB
   6+ 9EBB              Limpia_album_de_borrado_disparos
   7+ 9EBB
   8+ 9EBB 21 30 8C         ld hl,Ctrl_5
   9+ 9EBE CB 46            bit 0,(hl)
  10+ 9EC0 C8               ret z
  11+ 9EC1 CB 86            res 0,(hl)
  12+ 9EC3
  13+ 9EC3 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  14+ 9EC6 A7               and a
  15+ 9EC7 C0               ret nz
  16+ 9EC8
  17+ 9EC8              Limpiando
  18+ 9EC8
  19+ 9EC8 AF               xor a
  20+ 9EC9 2A 16 8C         ld hl,(Album_de_borrado_disparos)
  21+ 9ECC 77               ld (hl),a
  22+ 9ECD 5D               ld e,l
  23+ 9ECE 54               ld d,h
  24+ 9ECF 1C               inc e                                           ; DE = HL+1
  25+ 9ED0 01 3A 00         ld bc,$003a
  26+ 9ED3 ED B0            ldir
  27+ 9ED5
  28+ 9ED5 C9               ret
  29+ 9ED6
  30+ 9ED6
  31+ 9ED6              ; --------------------------------------------------------------------------------------
  32+ 9ED6              ;
  33+ 9ED6              ;   26/08/24
  34+ 9ED6              ;
  35+ 9ED6
  36+ 9ED6              Calcula_bytes_pintado_disparos
  37+ 9ED6
  38+ 9ED6 2A 14 8C         ld hl,(Album_de_pintado_disparos)
  39+ 9ED9 45               ld b,l
  40+ 9EDA 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
  41+ 9EDD 7D               ld a,l
  42+ 9EDE
  43+ 9EDE 90               sub b
  44+ 9EDF 32 1A 8C         ld (Num_de_bytes_album_de_disparos),a
  45+ 9EE2
  46+ 9EE2 C9               ret
  47+ 9EE3
  48+ 9EE3              ; --------------------------------------------------------------------------------------
  49+ 9EE3              ;
  50+ 9EE3              ;   23/08/24
  51+ 9EE3              ;
  52+ 9EE3              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
  53+ 9EE3              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
  54+ 9EE3              ;   _disparos que el álbum del FRAME actual).
  55+ 9EE3
  56+ 9EE3              Limpia_album_de_pintado_disparos
  57+ 9EE3
  58+ 9EE3              ;   Exclusiones.
  59+ 9EE3
  60+ 9EE3 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
  61+ 9EE6 A7               and a
  62+ 9EE7 C8               ret z
  63+ 9EE8
  64+ 9EE8              ; -----
  65+ 9EE8
  66+ 9EE8 A7               and a
  67+ 9EE9
  68+ 9EE9 3A 1A 8C         ld a,(Num_de_bytes_album_de_disparos)
  69+ 9EEC 47               ld b,a
  70+ 9EED 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
  71+ 9EF0
  72+ 9EF0 90               sub b
  73+ 9EF1
  74+ 9EF1 C8               ret z
  75+ 9EF2 D8               ret c
  76+ 9EF3
  77+ 9EF3 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
  78+ 9EF6 47               ld b,a                                                              ; Nº de bytes a borrar en B.
  79+ 9EF7 AF               xor a                                                               ; "0".
  80+ 9EF8
  81+ 9EF8 77           1 ld (hl),a
  82+ 9EF9 2C               inc l
  83+ 9EFA 10 FC            djnz 1B
  84+ 9EFC
  85+ 9EFC C9               ret
  86+ 9EFD
  87+ 9EFD              ; --------------------------------------------------------------------------------------
  88+ 9EFD              ;
  89+ 9EFD              ;   27/08/24
  90+ 9EFD              ;
  91+ 9EFD
  92+ 9EFD              Mueve_Disparos
  93+ 9EFD
  94+ 9EFD              ;    Exclusiones:
  95+ 9EFD
  96+ 9EFD 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  97+ 9F00 A7               and a
  98+ 9F01 28 22            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
  99+ 9F03
 100+ 9F03              ; .........................
 101+ 9F03
 102+ 9F03              ; Nos situamos en el (puntero_de_impresión) de la 1ª caja.
 103+ 9F03
 104+ 9F03 21 26 89         ld hl,Disparo_1A+3
 105+ 9F06
 106+ 9F06 34               inc (hl)
 107+ 9F07 35               dec (hl)
 108+ 9F08 28 10            jr z,1F
 109+ 9F0A
 110+ 9F0A              ; La caja contiene disparo. Existe (Impacto) en algún disparo de Amadeus ??
 111+ 9F0A              ; Consultamos FLAG.
 112+ 9F0A              ; Si hay impacto, se trata de este disparo??
 113+ 9F0A
 114+ 9F0A 3A 35 8C         ld a,(Impacto2)
 115+ 9F0D CB 5F            bit 3,a
 116+ 9F0F C4 41 9F         call nz, Averigua_Impacto
 117+ 9F12
 118+ 9F12 F3               di
 119+ 9F13 20 FE            jr nz,$
 120+ 9F15 FB               ei
 121+ 9F16
 122+ 9F16
 123+ 9F16              ; En este disparo no hay impacto. MOVEMOS !!!
 124+ 9F16
 125+ 9F16 2B               dec hl
 126+ 9F17 CD 46 9F         call Mueve_disparo_Amadeus
 127+ 9F1A
 128+ 9F1A 21 2B 89     1 ld hl,Disparo_2A+3
 129+ 9F1D
 130+ 9F1D 34               inc (hl)
 131+ 9F1E 35               dec (hl)
 132+ 9F1F 28 04            jr z,2F
 133+ 9F21
 134+ 9F21 2B               dec hl
 135+ 9F22 CD 46 9F         call Mueve_disparo_Amadeus
 136+ 9F25
 137+ 9F25              ; Disparos de entidades.
 138+ 9F25
 139+ 9F25 3A 1D 8C     2 ld a,(Numero_de_disparos_de_entidades)
 140+ 9F28 A7               and a
 141+ 9F29 C8               ret z
 142+ 9F2A
 143+ 9F2A 06 07            ld b,7                                                               ; Contador de disparos.
 144+ 9F2C 21 2D 89         ld hl,Indice_de_disparos_entidades
 145+ 9F2F
 146+ 9F2F CD 61 90     4 call Extrae_address
 147+ 9F32 13               inc de
 148+ 9F33 13               inc de
 149+ 9F34 ED 53 1F 8C      ld (Puntero_rancio_disparos_album),de
 150+ 9F38
 151+ 9F38 23               inc hl
 152+ 9F39
 153+ 9F39 34               inc (hl)                                                           ; Dispone de Puntero_objeto ???
 154+ 9F3A 35               dec (hl)
 155+ 9F3B 28 00            jr z,3F
 156+ 9F3D
 157+ 9F3D EB           3 ex de,hl
 158+ 9F3E 10 EF            djnz 4B
 159+ 9F40
 160+ 9F40 C9               ret
 161+ 9F41
 162+ 9F41              ; ----------------------
 163+ 9F41              ;
 164+ 9F41              ;
 165+ 9F41
 166+ 9F41              Averigua_Impacto
 167+ 9F41
 168+ 9F41 23               inc hl
 169+ 9F42
 170+ 9F42 34               inc (hl)
 171+ 9F43 35               dec (hl)
 172+ 9F44
 173+ 9F44 2B               dec hl
 174+ 9F45
 175+ 9F45 C9               ret
 176+ 9F46
 177+ 9F46              ; ----------------------
 178+ 9F46              ;
 179+ 9F46              ;
 180+ 9F46              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 181+ 9F46
 182+ 9F46              Mueve_disparo_Amadeus
 183+ 9F46
 184+ 9F46 CD 61 90         call Extrae_address
 185+ 9F49
 186+ 9F49 CD 85 99         call PreviousScan
 187+ 9F4C CD 85 99         call PreviousScan
 188+ 9F4F CD 85 99         call PreviousScan
 189+ 9F52              ;    call PreviousScan
 190+ 9F52
 191+ 9F52              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 192+ 9F52
 193+ 9F52 7C               ld a,h
 194+ 9F53 D6 40            sub $40
 195+ 9F55 38 05            jr c,Elimina_disparo
 196+ 9F57
 197+ 9F57               ; Introduce nuevo puntero_de_impresión en la caja.
 198+ 9F57
 199+ 9F57 EB               ex de,hl
 200+ 9F58
 201+ 9F58 73               ld (hl),e
 202+ 9F59 23               inc hl
 203+ 9F5A 72               ld (hl),d
 204+ 9F5B
 205+ 9F5B C9               ret
 206+ 9F5C
 207+ 9F5C              ; ----------------------
 208+ 9F5C              ;
 209+ 9F5C              ;   23/08/24
 210+ 9F5C
 211+ 9F5C              Elimina_disparo
 212+ 9F5C
 213+ 9F5C EB               ex de,hl
 214+ 9F5D
 215+ 9F5D              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 216+ 9F5D              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 217+ 9F5D
 218+ 9F5D              ;   Disparo_1A defw 0									; Puntero objeto.
 219+ 9F5D              ;   	defw 0											; Puntero de impresión.
 220+ 9F5D              ;   	db 0											; Impacto.
 221+ 9F5D
 222+ 9F5D 2B               dec hl
 223+ 9F5E 2B               dec hl
 224+ 9F5F
 225+ 9F5F AF               xor a
 226+ 9F60 77               ld (hl),a
 227+ 9F61 23               inc hl
 228+ 9F62 77               ld (hl),a                                           ; Puntero_objeto borrado.
 229+ 9F63 23               inc hl
 230+ 9F64 77               ld (hl),a
 231+ 9F65 23               inc hl
 232+ 9F66 77               ld (hl),a                                           ; Puntero_de_impresion borrado.
 233+ 9F67 23               inc hl
 234+ 9F68 77               ld (hl),a                                           ; Impacto borrado.
 235+ 9F69
 236+ 9F69 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 237+ 9F6C 35               dec (hl)
 238+ 9F6D
 239+ 9F6D 3A 1E 8C         ld a,(Disparo_Amadeus)
 240+ 9F70 F6 01            or 1
 241+ 9F72 32 1E 8C         ld (Disparo_Amadeus),a
 242+ 9F75
 243+ 9F75 21 30 8C         ld hl,Ctrl_5
 244+ 9F78 CB C6            set 0,(hl)
 245+ 9F7A
 246+ 9F7A
 247+ 9F7A C9               ret
 248+ 9F7B
 249+ 9F7B              ; --------------------------------------------------------------------------------------
 250+ 9F7B              ;
 251+ 9F7B              ;   21/8/24
 252+ 9F7B              ;
 253+ 9F7B
 254+ 9F7B              Pinta_disparos
 255+ 9F7B
 256+ 9F7B ED 73 08 8C      ld (Stack),sp
 257+ 9F7F 06 02            ld b,2
 258+ 9F81
 259+ 9F81 ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 260+ 9F85
 261+ 9F85 D1           2 pop de
 262+ 9F86
 263+ 9F86 14               inc d
 264+ 9F87 15               dec d
 265+ 9F88
 266+ 9F88 28 1B            jr z,1F
 267+ 9F8A
 268+ 9F8A              Imprime_scanlines_de_disparo
 269+ 9F8A
 270+ 9F8A E1               pop hl
 271+ 9F8B
 272+ 9F8B              ; Puntero objeto en DE.
 273+ 9F8B              ; Puntero_de_impresión en HL.
 274+ 9F8B
 275+ 9F8B              ; 1er scanline.
 276+ 9F8B
 277+ 9F8B 1A               ld a,(de)
 278+ 9F8C AE               xor (hl)
 279+ 9F8D 77               ld (hl),a
 280+ 9F8E
 281+ 9F8E 13               inc de
 282+ 9F8F 2C               inc l
 283+ 9F90
 284+ 9F90 1A               ld a,(de)
 285+ 9F91 AE               xor (hl)
 286+ 9F92 77               ld (hl),a
 287+ 9F93
 288+ 9F93              ; 2º scanline.
 289+ 9F93
 290+ 9F93 E1               pop hl
 291+ 9F94 1B               dec de
 292+ 9F95
 293+ 9F95 1A               ld a,(de)
 294+ 9F96 AE               xor (hl)
 295+ 9F97 77               ld (hl),a
 296+ 9F98
 297+ 9F98 13               inc de
 298+ 9F99 2C               inc l
 299+ 9F9A
 300+ 9F9A 1A               ld a,(de)
 301+ 9F9B AE               xor (hl)
 302+ 9F9C 77               ld (hl),a
 303+ 9F9D
 304+ 9F9D              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 305+ 9F9D
 306+ 9F9D 18 E6            jr 2B
 307+ 9F9F
 308+ 9F9F ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
 309+ 9FA3 18 E0            jr 2B
 310+ 9FA5
 311+ 9FA5 10 F8        1 djnz 3B
 312+ 9FA7 ED 7B 08 8C      ld sp,(Stack)
 313+ 9FAB C9               ret
 314+ 9FAC
 315+ 9FAC              ; --------------------------------------------------------------------------------------
 316+ 9FAC              ;
 317+ 9FAC              ;   21/8/24
 318+ 9FAC              ;
 319+ 9FAC              ;   Modifica: HL y DE.
 320+ 9FAC
 321+ 9FAC
 322+ 9FAC              Genera_datos_de_impresion_disparos_Amadeus
 323+ 9FAC
 324+ 9FAC              ;   Exclusiones:
 325+ 9FAC
 326+ 9FAC 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 327+ 9FAF A7               and a
 328+ 9FB0 C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 329+ 9FB1
 330+ 9FB1              ; -----
 331+ 9FB1
 332+ 9FB1 ED 73 08 8C      ld (Stack),sp
 333+ 9FB5 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 334+ 9FB8
 335+ 9FB8 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 336+ 9FBB ED 72            sbc hl,sp                                                 ; Última caja ???
 337+ 9FBD 28 26            jr z,Salida
 338+ 9FBF
 339+ 9FBF D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 340+ 9FC0
 341+ 9FC0 14               inc d
 342+ 9FC1 15               dec d
 343+ 9FC2
 344+ 9FC2 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 345+ 9FC4
 346+ 9FC4              Siguiente_disparo_Amadeus
 347+ 9FC4
 348+ 9FC4 D1               pop de
 349+ 9FC5 33               inc sp
 350+ 9FC6 18 F0            jr 1B
 351+ 9FC8
 352+ 9FC8              Genera_scanlines_de_disparo_Amadeus
 353+ 9FC8
 354+ 9FC8 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 355+ 9FC9              ;                                                             ; Puntero_de_impresión del disparo en HL.
 356+ 9FC9 33               inc sp
 357+ 9FCA ED 73 1F 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 358+ 9FCE
 359+ 9FCE ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 360+ 9FD2
 361+ 9FD2 C1               pop bc
 362+ 9FD3 C1               pop bc
 363+ 9FD4 C1               pop bc
 364+ 9FD5
 365+ 9FD5 ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 366+ 9FD9
 367+ 9FD9 E5               push hl                                                   ; Sube 2º scanline al álbum.
 368+ 9FDA CD 85 99         call PreviousScan
 369+ 9FDD E5               push hl                                                   ; Sube 1er scanline al álbum.
 370+ 9FDE D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 371+ 9FDF
 372+ 9FDF ED 7B 1F 8C      ld sp,(Puntero_rancio_disparos_album)
 373+ 9FE3 18 D3            jr 1B
 374+ 9FE5
 375+ 9FE5
 376+ 9FE5              Salida
 377+ 9FE5
 378+ 9FE5 ED 7B 08 8C      ld sp,(Stack)
 379+ 9FE9 C9               ret
 380+ 9FEA
 381+ 9FEA              ; --------------------------------------------------------------------------------------
 382+ 9FEA              ;
 383+ 9FEA              ;   17/08/24
 384+ 9FEA              ;
 385+ 9FEA
 386+ 9FEA              Genera_disparo_Amadeus
 387+ 9FEA
 388+ 9FEA              ;   Exclusiones.
 389+ 9FEA
 390+ 9FEA 3A 1E 8C         ld a,(Disparo_Amadeus)
 391+ 9FED A7               and a
 392+ 9FEE C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
 393+ 9FEF
 394+ 9FEF              ;! Provisionalmente sólo 1 disparo !!!!!!
 395+ 9FEF 3D               dec a
 396+ 9FF0 32 1E 8C         ld (Disparo_Amadeus),a
 397+ 9FF3
 398+ 9FF3              ;   Inc nº de disparos de Amadeus.
 399+ 9FF3
 400+ 9FF3 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 401+ 9FF6 34               inc (hl)
 402+ 9FF7
 403+ 9FF7              ; ----- ----- ----- -----
 404+ 9FF7
 405+ 9FF7              Define_puntero_objeto_disparo
 406+ 9FF7
 407+ 9FF7              ;   Inicializamos contador.
 408+ 9FF7
 409+ 9FF7 06 00            ld b,0
 410+ 9FF9
 411+ 9FF9 2A 75 89         ld hl,(p.imp.amadeus)
 412+ 9FFC 2C               inc l
 413+ 9FFD
 414+ 9FFD 3E 80            ld a,$80
 415+ 9FFF BE               cp (hl)
 416+ A000 28 0D            jr z,1F
 417+ A002
 418+ A002 04               inc b
 419+ A003
 420+ A003 3E 60            ld a,$60
 421+ A005 BE               cp (hl)
 422+ A006 28 07            jr z,1F
 423+ A008
 424+ A008
 425+ A008 04               inc b
 426+ A009
 427+ A009 3E 18            ld a,$18
 428+ A00B BE               cp (hl)
 429+ A00C 28 01            jr z,1F
 430+ A00E
 431+ A00E 04               inc b
 432+ A00F
 433+ A00F              ;   Calcula el Puntero_de_impresión del disparo.
 434+ A00F
 435+ A00F              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 436+ A00F
 437+ A00F CD 85 99     1 call PreviousScan
 438+ A012
 439+ A012 78               ld a,b
 440+ A013 CB 3F            srl a
 441+ A015 28 03            jr z,4F
 442+ A017
 443+ A017              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 444+ A017 E5               push hl
 445+ A018 18 02            jr 5F
 446+ A01A 2D           4 dec l
 447+ A01B E5               push hl
 448+ A01C              ; ---
 449+ A01C
 450+ A01C              ;   Calcula el Puntero_objeto del disparo.
 451+ A01C
 452+ A01C 21 70 83     5 ld hl,Indice_disparo
 453+ A01F 04               inc b
 454+ A020 05               dec b
 455+ A021 28 04            jr z,2F
 456+ A023
 457+ A023              ;   Nos desplazamos por el índice de disparos.
 458+ A023
 459+ A023 2C           3 inc l
 460+ A024 2C               inc l
 461+ A025 10 FC            djnz 3B
 462+ A027
 463+ A027              ; --- Guarda el Puntero_objeto del disparo en la pila.
 464+ A027 CD 61 90     2 call Extrae_address
 465+ A02A E5               push hl
 466+ A02B              ; ---
 467+ A02B
 468+ A02B              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 469+ A02B              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
 470+ A02B
 471+ A02B 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 472+ A02E CD 61 90         call Extrae_address
 473+ A031
 474+ A031 06 02            ld b,2
 475+ A033
 476+ A033 D1           6 pop de
 477+ A034 73               ld (hl),e
 478+ A035 23               inc hl
 479+ A036 72               ld (hl),d
 480+ A037 23               inc hl
 481+ A038
 482+ A038 10 F9            djnz 6B
 483+ A03A
 484+ A03A              Detecta_impacto_en_disparo_de_Amadeus
 485+ A03A
 486+ A03A 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 487+ A03D CD 61 90         call Extrae_address
 488+ A040
 489+ A040 13               inc de
 490+ A041 13               inc de
 491+ A042 D5               push de
 492+ A043
 493+ A043 CD 6E A0         call Detecta_impacto_en_disparo_de_Amadeus01
 494+ A046
 495+ A046 E1               pop hl
 496+ A047 CD 61 90         call Extrae_address
 497+ A04A 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 498+ A04B
 499+ A04B C8               ret z
 500+ A04C
 501+ A04C 3E 01            ld a,1
 502+ A04E 77               ld (hl),a
 503+ A04F
 504+ A04F              Genera_coordenadas_de_disparo_Amadeus
 505+ A04F
 506+ A04F              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 507+ A04F              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 508+ A04F
 509+ A04F 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 510+ A052 CD 61 90         call Extrae_address
 511+ A055 23               inc hl
 512+ A056 23               inc hl
 513+ A057
 514+ A057 CD 61 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 515+ A05A CD 80 94         call Genera_coordenadas
 516+ A05D
 517+ A05D 3D               dec a
 518+ A05E
 519+ A05E 21 38 8C         ld hl,Coordenadas_disparo_certero
 520+ A061 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 521+ A062 23               inc hl
 522+ A063 3A BC 8B         ld a,(Coordenada_X)
 523+ A066 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 524+ A067
 525+ A067 21 35 8C         ld hl,Impacto2
 526+ A06A CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 527+ A06C
 528+ A06C AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 529+ A06D C9               ret
 530+ A06E
 531+ A06E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 532+ A06E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 533+ A06E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 534+ A06E
 535+ A06E              ; ----------------------------------------------
 536+ A06E              ;
 537+ A06E              ;   27/08/24
 538+ A06E              ;
 539+ A06E              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 540+ A06E
 541+ A06E              ;    ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 542+ A06E              ;    call Extrae_address
 543+ A06E
 544+ A06E              Detecta_impacto_en_disparo_de_Amadeus01
 545+ A06E
 546+ A06E              Extraccion_de_datos
 547+ A06E
 548+ A06E 5E               ld e,(hl)
 549+ A06F 23               inc hl
 550+ A070 56               ld d,(hl)
 551+ A071 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 552+ A072
 553+ A072 4E               ld c,(hl)
 554+ A073 23               inc hl
 555+ A074 46               ld b,(hl)
 556+ A075 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 557+ A076
 558+ A076 C5               push bc
 559+ A077 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 560+ A078
 561+ A078              Detecta_impacto_
 562+ A078
 563+ A078 1A               ld a,(de)
 564+ A079 A6               and (hl)
 565+ A07A C0               ret nz
 566+ A07B
 567+ A07B 13               inc de
 568+ A07C 23               inc hl
 569+ A07D
 570+ A07D 1A               ld a,(de)
 571+ A07E A6               and (hl)
 572+ A07F C9               ret
 573+ A080
 574+ A080              ; -------------------------------------------------------------------------------------------------------------
 575+ A080              ;
 576+ A080              ;   8/8/24
 577+ A080              ;
 578+ A080              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 579+ A080              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 580+ A080              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 581+ A080              ;
 582+ A080              ;   MODIFICA: HL,DE,BC y A.
 583+ A080              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 584+ A080              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 585+ A080
 586+ A080              Colision_Entidad_Amadeus
 587+ A080
 588+ A080              ; Posible contacto de entidad con Amadeus. ?????
 589+ A080
 590+ A080              ; Exclusiones:
 591+ A080
 592+ A080 3A 53 8C         ld a,(Shield)
 593+ A083 A7               and a
 594+ A084 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 595+ A085
 596+ A085 21 2E 8C         ld hl,Ctrl_3
 597+ A088 CB 76            bit 6,(hl)
 598+ A08A C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 599+ A08B
 600+ A08B 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 601+ A08E CB 56            bit 2,(hl)
 602+ A090 C0               ret nz
 603+ A091
 604+ A091 3A BD 8B     	ld a,(Coordenada_y)
 605+ A094 FE 14        	cp $14
 606+ A096 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 607+ A097
 608+ A097 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 609+ A09A A7               and a
 610+ A09B C0               ret nz
 611+ A09C
 612+ A09C              Genera_coordenadas_X
 613+ A09C
 614+ A09C              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 615+ A09C              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 616+ A09C
 617+ A09C              ;   Limpiamos almacenes.
 618+ A09C
 619+ A09C              ;    call Limpia_Coordenadas_X
 620+ A09C
 621+ A09C              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 622+ A09C
 623+ A09C 21 3A 8C         ld hl,Coordenadas_X_Entidad
 624+ A09F 3A BC 8B         ld a,(Coordenada_X)
 625+ A0A2 CD C4 A0         call Guarda_coordenadas_X
 626+ A0A5
 627+ A0A5              ;   Almacenamos las coordenadas X de Amadeus.
 628+ A0A5
 629+ A0A5 3A 71 89         ld a,(CX_Amadeus)
 630+ A0A8 CD C4 A0         call Guarda_coordenadas_X
 631+ A0AB CD D8 A0         call Compara_coordenadas_X
 632+ A0AE C0               ret nz
 633+ A0AF
 634+ A0AF 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 635+ A0B1 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 636+ A0B4
 637+ A0B4 2A FB 8B         ld hl,(Puntero_store_caja)
 638+ A0B7 2C               inc l
 639+ A0B8 2C               inc l
 640+ A0B9 2C               inc l
 641+ A0BA 2C               inc l
 642+ A0BB 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 643+ A0BE
 644+ A0BE 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 645+ A0C1 CB D6            set 2,(hl)
 646+ A0C3
 647+ A0C3 C9               ret
 648+ A0C4
 649+ A0C4               ; ----- ----- ----- ----- -----
 650+ A0C4
 651+ A0C4 77           Guarda_coordenadas_X ld (hl),a
 652+ A0C5 3C               inc a
 653+ A0C6 2C               inc l
 654+ A0C7 77               ld (hl),a
 655+ A0C8 3C               inc a
 656+ A0C9 2C               inc l
 657+ A0CA 77               ld (hl),a
 658+ A0CB 2C               inc l
 659+ A0CC C9               ret
 660+ A0CD
 661+ A0CD AF           Limpia_Coordenadas_X xor a
 662+ A0CE 06 06            ld b,6
 663+ A0D0 21 3D 8C         ld hl,Coordenadas_X_Amadeus
 664+ A0D3 77           1 ld (hl),a
 665+ A0D4 23               inc hl
 666+ A0D5 10 FC            djnz 1B
 667+ A0D7 C9               ret
 668+ A0D8
 669+ A0D8              ; ----- ----- ----- ----- -----
 670+ A0D8
 671+ A0D8              Compara_coordenadas_X
 672+ A0D8
 673+ A0D8 DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
 674+ A0DC DD 7E 00         ld a,(ix+0)
 675+ A0DF CD ED A0         call Comparando
 676+ A0E2 C8               ret z
 677+ A0E3
 678+ A0E3 3C               inc a
 679+ A0E4 CD FC A0         call Comparando_1
 680+ A0E7 C8               ret z
 681+ A0E8
 682+ A0E8 3C               inc a
 683+ A0E9 CD FC A0         call Comparando_1
 684+ A0EC C9               ret
 685+ A0ED
 686+ A0ED              ; ----- ----- ----- ----- -----
 687+ A0ED              ;
 688+ A0ED              ;   4/12/23
 689+ A0ED              ;
 690+ A0ED              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 691+ A0ED
 692+ A0ED              Comparando
 693+ A0ED
 694+ A0ED DD 2C            inc ixl
 695+ A0EF DD 2C            inc ixl
 696+ A0F1 DD 2C            inc ixl
 697+ A0F3
 698+ A0F3 DD 46 00         ld b,(ix+0)
 699+ A0F6 DD 4E 01         ld c,(ix+1)
 700+ A0F9 DD 56 02         ld d,(ix+2)
 701+ A0FC
 702+ A0FC B8           Comparando_1 cp b
 703+ A0FD C8               ret z
 704+ A0FE B9               cp c
 705+ A0FF C8               ret z
 706+ A100 BA               cp d
 707+ A101 C9               ret
 708+ A102
 709+ A102              ; -----------------------------------------------------------------------
 710+ A102              ;
 711+ A102              ;   04/7/24
 712+ A102              ;
 713+ A102
 714+ A102              Detecta_colision_nave_entidad
 715+ A102
 716+ A102              ; Exclusiones:
 717+ A102
 718+ A102              ; Salimos de la rutina si no hay advertencia de posible colisión.
 719+ A102
 720+ A102 21 35 8C     	ld hl,Impacto2
 721+ A105 CB 56        	bit 2,(hl)
 722+ A107 C8           	ret z
 723+ A108
 724+ A108              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 725+ A108
 726+ A108 2A 77 89         ld hl,(Pamm_Amadeus)
 727+ A10B CD 61 90         call Extrae_address
 728+ A10E 54               ld d,h
 729+ A10F 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 730+ A110
 731+ A110 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 732+ A113 06 10            ld b,16                                        ; Contador de scanlines en B.
 733+ A115 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 734+ A118
 735+ A118 C5           1 push bc
 736+ A119 06 03            ld b,3
 737+ A11B E5               push hl
 738+ A11C
 739+ A11C              ; .db
 740+ A11C
 741+ A11C 1A           3 ld a,(de)
 742+ A11D A7               and a
 743+ A11E 20 03            jr nz,4F
 744+ A120
 745+ A120 2C               inc l
 746+ A121 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 747+ A123
 748+ A123 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 749+ A125 28 04            jr z,2F
 750+ A127
 751+ A127              ; Impacto.
 752+ A127 FD 2D            dec iyl
 753+ A129 28 22            jr z,5F
 754+ A12B
 755+ A12B 1C           2 inc e
 756+ A12C 10 EE            djnz 3B
 757+ A12E
 758+ A12E E1               pop hl
 759+ A12F
 760+ A12F              ; Hay salto de línea en el puntero de impresión ???
 761+ A12F
 762+ A12F 7C               ld a,h
 763+ A130 D6 57            sub $57
 764+ A132 20 0A            jr nz,6F
 765+ A134
 766+ A134              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 767+ A134
 768+ A134 2A 75 89         ld hl,(p.imp.amadeus)
 769+ A137 3E 20            ld a,$20
 770+ A139 A7               and a
 771+ A13A 85               add l
 772+ A13B 6F               ld l,a
 773+ A13C 18 01            jr 7F
 774+ A13E
 775+ A13E 24           6 inc h
 776+ A13F
 777+ A13F C1           7 pop bc
 778+ A140 10 D6            djnz 1B
 779+ A142
 780+ A142              ;   Fin de la comparativa.
 781+ A142
 782+ A142              ;   NO HAY COLISIÓN !!!!!.
 783+ A142              ;
 784+ A142              ;   .db (Impacto) de Amadeus a "0".
 785+ A142              ;   RES el bit2 de (Impacto2).
 786+ A142              ;
 787+ A142              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 788+ A142              ;   Lo colocamos a "0".
 789+ A142
 790+ A142 21 35 8C         ld hl,Impacto2
 791+ A145 CB 96            res 2,(hl)
 792+ A147 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
 793+ A14A 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 794+ A14C C9               ret
 795+ A14D
 796+ A14D              ;   COLISIÓN !!!!!.
 797+ A14D              ;
 798+ A14D              ;   .db (Impacto) de Amadeus a "1".
 799+ A14D              ;   SET el bit3 de (Impacto2).
 800+ A14D              ;
 801+ A14D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 802+ A14D
 803+ A14D E1           5 pop hl
 804+ A14E C1               pop bc
 805+ A14F
 806+ A14F 21 74 89         ld hl,Impacto_Amadeus
 807+ A152 36 01            ld (hl),1
 808+ A154 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 809+ A157 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 810+ A159
 811+ A159 11 C0 87         ld de,Indice_Explosion_entidades
 812+ A15C 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 813+ A15F
 814+ A15F 23               inc hl
 815+ A160 23               inc hl
 816+ A161 23               inc hl
 817+ A162
 818+ A162 73               ld (hl),e
 819+ A163 23               inc hl
 820+ A164 72               ld (hl),d
 821+ A165
 822+ A165              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 823+ A165
 824+ A165 11 60 88         ld de,Indice_Explosion_Amadeus
 825+ A168 21 77 89         ld hl,Pamm_Amadeus
 826+ A16B
 827+ A16B 73               ld (hl),e
 828+ A16C 23               inc hl
 829+ A16D 72               ld (hl),d
 830+ A16E
 831+ A16E C9               ret
 832+ A16F
 833+ A16F
 834+ A16F
# file closed: Disparo.asm
2274  A16F
2275  A16F              	SAVESNA "Pruebas.sna", START
2276  A16F
2277  A16F
2278  A16F
2279  A16F
# file closed: Banco_de_pruebas.asm
