# file opened: Banco_de_Pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1A 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD FE 8D     	call Pinta_entidades
  44  AA1C CD F0 8D     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD 20 8E     	call Guarda_parametros_DRAW
  49  AA26 CD 40 8D     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 2A 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD 43 90     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD DE 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD 52 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD 2C 8E     	call Recupera_parametros_DRAW
  66  AA3F CD 0E 8E     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 24 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 1A 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	12/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 65 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 145+ 85AC
 146+ 85AC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 147+ 85AE
 148+ 85AE 00           	db 0											; (Autoriza_movimiento).
 149+ 85AF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0											; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 											; (Columnas).
 156+ 85BC 00 00        	defw 0											; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 190+ 85EF
 191+ 85EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 192+ 85F1
 193+ 85F1 00           	db 0											; (Autoriza_movimiento).
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 235+ 8632
 236+ 8632 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 237+ 8634
 238+ 8634 00           	db 0											; (Autoriza_movimiento).
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 280+ 8675
 281+ 8675 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 282+ 8677
 283+ 8677 00           	db 0											; (Autoriza_movimiento).
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 325+ 86B8
 326+ 86B8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 327+ 86BA
 328+ 86BA 00           	db 0											; (Autoriza_movimiento).
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 370+ 86FB
 371+ 86FB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 372+ 86FD
 373+ 86FD 00           	db 0											; (Autoriza_movimiento).
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 415+ 873E
 416+ 873E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 417+ 8740
 418+ 8740 00           	db 0											; (Autoriza_movimiento).
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 460+ 8781
 461+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 462+ 8783
 463+ 8783 00           	db 0											; (Autoriza_movimiento).
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AA 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 493+ 879C 04           	db %00000100									; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 497+ 87A3 01           	db 1											; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 F8 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 500+ 87AA
 501+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 502+ 87AC 02           	db %00000010									; (Attr).
 503+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 504+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 505+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 506+ 87B3 01           	db 1											; (Cuad_objeto).
 507+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 508+ 87B8 F8 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 509+ 87BA
# file closed: Cajas_y_disparos.asm
  97  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CA 87        	defw Nivel_2
   7+ 87BE D7 87        	defw Nivel_3
   8+ 87C0 E7 87        	defw Nivel_4
   9+ 87C2 F9 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87C9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 01 02
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D5 01 02
  22+ 87D7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DC 01
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EC 01
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 02 03        	db 2,3
  31+ 87F9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FE 01
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1
  35+ 880D 01
  36+ 880E
  37+ 880E              ;---------------------------------------------------------------------------------------------------------------
  38+ 880E              ;
  39+ 880E              ;   3/9/23
  40+ 880E              ;
  41+ 880E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880E              ;	_en la caja DRAW correspondiente.
  45+ 880E              ;
  46+ 880E              ;	MODIFICA: HL,DE y A.
  47+ 880E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880E
  49+ 880E              Inicializa_Punteros_de_nivel
  50+ 880E
  51+ 880E 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8811 22 42 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8814 CD 90 8C     	call Extrae_address
  54+ 8817 7E           	ld a,(hl)
  55+ 8818 32 0E 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881B 23           	inc hl
  57+ 881C 22 44 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 881F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8820
  60+ 8820              ;---------------------------------------------------------------------------------------------------------------
  61+ 8820              ;
  62+ 8820              ;   13/5/23
  63+ 8820              ;
  64+ 8820              ;	Destruye A,BC,HL,DE
  65+ 8820
  66+ 8820              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8820              ;	_del juego.
  68+ 8820
  69+ 8820              Prepara_cajas
  70+ 8820
  71+ 8820              ; Preparamos los punteros de las cajas.
  72+ 8820
  73+ 8820 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8823 CD 90 8C     	call Extrae_address
  75+ 8826 CD 63 88     	call Avanza_caja
  76+ 8829
  77+ 8829 CD A7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882C
  79+ 882C 2A 44 89     	ld hl,(Datos_de_nivel)
  80+ 882F
  81+ 882F              ; HL está en los datos del nivel correspondiente.
  82+ 882F              ; B actuará como contador de cajas.
  83+ 882F
  84+ 882F C5           1 push bc
  85+ 8830
  86+ 8830 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8831 CD 54 88     	call PreparaBC
  88+ 8834
  89+ 8834 21 96 87     	ld hl,Indice_de_entidades
  90+ 8837 CD 5C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883A 22 14 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883D
  93+ 883D CD 6D 88     	call Datos_de_entidad_a_caja
  94+ 8840
  95+ 8840 2A 0C 89     	ld hl,(Indice_restore_caja)
  96+ 8843 CD 90 8C     	call Extrae_address
  97+ 8846 CD 63 88     	call Avanza_caja
  98+ 8849
  99+ 8849 2A 44 89     	ld hl,(Datos_de_nivel)
 100+ 884C 23           	inc hl
 101+ 884D 22 44 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8850
 103+ 8850 C1           	pop bc
 104+ 8851 10 DC        	djnz 1B
 105+ 8853 C9           	ret
 106+ 8854
 107+ 8854 CB 27        PreparaBC sla a
 108+ 8856 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8858 4F           	ld c,a
 110+ 8859 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885B C9           	ret
 112+ 885C
 113+ 885C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885D ED 4A        	adc hl,bc
 115+ 885F CD 90 8C     	call Extrae_address
 116+ 8862 C9           	ret
 117+ 8863
 118+ 8863 22 08 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8866 13           	inc de
 120+ 8867 13           	inc de
 121+ 8868 EB           	ex de,hl
 122+ 8869 22 0C 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886C C9           	ret
 124+ 886D
 125+ 886D              Datos_de_entidad_a_caja
 126+ 886D
 127+ 886D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886D
 129+ 886D
 130+ 886D ED 5B 08 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8871
 132+ 8871 01 02 00     	ld bc,2
 133+ 8874 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8876
 135+ 8876 01 07 00     	ld bc,7
 136+ 8879 CD A1 88     	call Situa_DE
 137+ 887C
 138+ 887C 01 05 00     	ld bc,5
 139+ 887F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8881
 141+ 8881 01 04 00     	ld bc,4
 142+ 8884 CD A1 88     	call Situa_DE
 143+ 8887
 144+ 8887 01 07 00     	ld bc,7
 145+ 888A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888C
 147+ 888C 01 16 00     	ld bc,22
 148+ 888F CD A1 88     	call Situa_DE
 149+ 8892
 150+ 8892 01 02 00     	ld bc,2
 151+ 8895 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8897
 153+ 8897              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8897              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8897
 156+ 8897 01 0F 00     	ld bc,15									; *****
 157+ 889A CD A1 88     	call Situa_DE
 158+ 889D
 159+ 889D 3E 03        	ld a,3
 160+ 889F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A0
 162+ 88A0 C9           	ret
 163+ 88A1
 164+ 88A1 EB           Situa_DE ex de,hl
 165+ 88A2 A7           	and a
 166+ 88A3 ED 4A        	adc hl,bc
 167+ 88A5 EB           	ex de,hl
 168+ 88A6 C9           	ret
 169+ 88A7
 170+ 88A7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A7              ;
 172+ 88A7              ;	21/5/23
 173+ 88A7              ;
 174+ 88A7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A7              ;
 177+ 88A7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A7              ;
 181+ 88A7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A7              ;	MODIFICA: A y B.
 183+ 88A7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A7
 185+ 88A7              Admin_num_entidades
 186+ 88A7
 187+ 88A7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A7
 189+ 88A7 3A 0E 89     	ld a,(Numero_de_entidades)
 190+ 88AA A7           	and a
 191+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AB              ;	jr z,$
 193+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AB
 195+ 88AB 20 03        	jr nz,3F
 196+ 88AD
 197+ 88AD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AD
 199+ 88AD CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B0
 201+ 88B0 3A 0E 89     3 ld a,(Numero_de_entidades)
 202+ 88B3 FE 07        	cp 7
 203+ 88B5 38 08        	jr c,1F
 204+ 88B7
 205+ 88B7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B7              ; Actualizamos variables.
 207+ 88B7
 208+ 88B7 3E 07        	ld a,7
 209+ 88B9 32 0F 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BC 47           	ld b,a
 211+ 88BD 18 04        	jr 2F
 212+ 88BF
 213+ 88BF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88BF              ; (Numero_de_entidades)="0".
 215+ 88BF
 216+ 88BF 32 0F 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C2 47           	ld b,a
 218+ 88C3 C9           2 ret
# file closed: Niveles.asm
  98  88C4
  99  88C4              ; ******************************************************************************************************************************************************************************************
 100  88C4              ; Constantes.
 101  88C4              ; ******************************************************************************************************************************************************************************************
 102  88C4              ;
 103  88C4              ; 10/11/23
 104  88C4
 105  88C4              ;
 106  88C4              ; Constantes generales.
 107  88C4              ;
 108  88C4
 109  88C4              Sprite_vacio equ $f000
 110  88C4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88C4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88C4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88C4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88C4
 115  88C4              Almacen_de_movimientos_masticados equ $5cd0				; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 116  88C4              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 117  88C4              ;														; 4799 bytes, 4,8Kb.
 118  88C4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 119  88C4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 120  88C4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 121  88C4              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 122  88C4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 123  88C4
 124  88C4              ;														; 55 Bytes.
 125  88C4
 126  88C4              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 127  88C4              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 128  88C4
 129  88C4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 130  88C4
 131  88C4              ; ******************************************************************************************************************************************************************************************
 132  88C4              ; Variables.
 133  88C4              ; ******************************************************************************************************************************************************************************************
 134  88C4              ;
 135  88C4              ; 12/12//23
 136  88C4              ;
 137  88C4              ; Variables de DRAW. (Motor principal).
 138  88C4              ;
 139  88C4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 140  88C4
 141  88C4 00           Filas db 0												; Filas. [DRAW]
 142  88C5 00           Columns db 0  											; Nº de columnas. [DRAW]
 143  88C6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 144  88C8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 145  88CA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 146  88CB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 147  88CC
 148  88CC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 149  88CC
 150  88CC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 151  88CD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 152  88CD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 153  88CD 00           Attr db 0												; Atributos de la entidad:
 154  88CE
 155  88CE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 156  88CE              ;
 157  88CE              ;	COLORES: 0 ..... NEGRO
 158  88CE              ;    		 1 ..... AZUL
 159  88CE              ; 			 2 ..... ROJO
 160  88CE              ;			 3 ..... MAGENTA
 161  88CE              ; 			 4 ..... VERDE
 162  88CE              ; 			 5 ..... CIAN
 163  88CE              ;			 6 ..... AMARILLO
 164  88CE              ; 			 7 ..... BLANCO
 165  88CE
 166  88CE 00 00        Indice_Sprite_der defw 0
 167  88D0 00 00        Indice_Sprite_izq defw 0
 168  88D2 00 00        Puntero_DESPLZ_der defw 0
 169  88D4 00 00        Puntero_DESPLZ_izq defw 0
 170  88D6
 171  88D6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 172  88D8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 173  88D9
 174  88D9              ; Variables de objeto. (Características).
 175  88D9
 176  88D9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 177  88DA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 178  88DB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 179  88DC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 180  88DD
 181  88DD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 182  88DE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 183  88DE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 184  88DE 00 00 00...  Variables_de_borrado ds 6
 185  88E4
 186  88E4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 187  88E6 00 00        	defw 0
 188  88E8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 189  88EA 00 00 00 00  	db 0,0,0,0
 190  88EE
 191  88EE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 192  88F0              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 193  88F0
 194  88F0 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados
 195  88F2
 196  88F2              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 197  88F2              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 198  88F2
 199  88F2              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 200  88F2
 201  88F2 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 202  88F3              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 203  88F3              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 204  88F3              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 205  88F3              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 206  88F3              ;
 207  88F3              ; 														DESCRIPCIÖN:
 208  88F3              ;
 209  88F3              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 210  88F3              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 211  88F3              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 212  88F3              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 213  88F3              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 214  88F3              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 215  88F3              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 216  88F3              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 217  88F3              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 218  88F3              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 219  88F3              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 220  88F3              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 221  88F3              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 222  88F3              ;
 223  88F3              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 224  88F3              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 225  88F3              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 226  88F3
 227  88F3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 228  88F3
 229  88F3 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 230  88F5 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 231  88F7 00 00        Puntero_indice_mov_bucle defw 0							;
 232  88F9              ;
 233  88F9              ;
 234  88F9 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 235  88FA              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 236  88FA              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 237  88FA 00           Incrementa_puntero_backup db 0
 238  88FB 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 239  88FC              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 240  88FC 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 241  88FD 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 242  88FE 00           Cola_de_desplazamiento db 0								; Este byte indica:
 243  88FF              ;
 244  88FF              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 245  88FF              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 246  88FF              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 247  88FF              ;
 248  88FF              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 249  88FF              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 250  88FF              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 251  88FF              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 252  88FF              ;
 253  88FF              ;														;	"$ff" ..... Bucle infinito de repetición.
 254  88FF              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 255  88FF              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 256  88FF
 257  88FF
 258  88FF              ; Variables de funcionamiento. [DRAW].
 259  88FF
 260  88FF 00           Columnas db 0
 261  8900 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 262  8902              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 263  8902 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 264  8903
 265  8903              ; variables de control general.
 266  8903
 267  8903 00           Ctrl_2 db 0
 268  8904              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 269  8904              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 270  8904              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 271  8904              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 272  8904              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 273  8904              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 274  8904              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 275  8904              ;
 276  8904              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 277  8904              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 278  8904              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 279  8904              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 280  8904              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 281  8904              ;														BIT 4, ???
 282  8904              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 283  8904
 284  8904 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 285  8905
 286  8905              ;! 65 Bytes por entidad.
 287  8905
 288  8905              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 289  8905              ;					         		---------;      ;---------
 290  8905
 291  8905
 292  8905              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 293  8905
 294  8905 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 295  8906
 296  8906              ;														DESCRIPCIÓN:
 297  8906              ;
 298  8906              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 299  8906              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 300  8906              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 301  8906              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 302  8906              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 303  8906              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 304  8906
 305  8906              ;														BIT 3, Recarga de nueva oleada.
 306  8906              ;														BIT 4, Recarga de nueva oleada.
 307  8906              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 308  8906              ;														BIT 6, **** Frame completo.
 309  8906              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 310  8906
 311  8906 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 312  8908              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 313  8908              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 314  8908              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 315  8908
 316  8908              ; Gestión de ENTIDADES y CAJAS.
 317  8908
 318  8908 00 00        Puntero_store_caja defw 0
 319  890A 00 00        Puntero_restore_caja defw 0
 320  890C 00 00        Indice_restore_caja defw 0
 321  890E 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 322  890F 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 323  8910 00           Entidades_en_curso db 0									; ..... ..... .....
 324  8911 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 325  8912              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 326  8912              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 327  8912              ;														; _ (Numero_de_malotes)="0".
 328  8912 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 329  8914 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 330  8916              ;														; _ puntero (Indice_entidades).
 331  8916
 332  8916
 333  8916              ;---------------------------------------------------------------------------------------------------------------
 334  8916              ;
 335  8916              ;	18/11/23
 336  8916              ;
 337  8916              ;	Álbumes.
 338  8916
 339  8916 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 340  8918              ;														; _variable para almacenar lo posición del puntero_
 341  8918              ; 														; _de pila, SP.
 342  8918 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 343  891A              ;														; La utiliza la rutina [Extrae_foto_registros].
 344  891A 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 345  891C 00 70        Stack_snapshot defw Album_de_fotos
 346  891E 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 347  8920
 348  8920              ;End_Snapshot defw Album_de_fotos
 349  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 350  8920 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 351  8922              ;														; _el snapshot de los registros del siguiente disparo.
 352  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 353  8922 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 354  8924
 355  8924 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 356  8925              ;
 357  8925              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 358  8925              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 359  8925
 360  8925              ; Gestión de Disparos.
 361  8925
 362  8925 00           Numero_de_disparotes db 0
 363  8926 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 364  8928 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 365  892A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 366  892B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 367  892B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 368  892B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 369  892D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 370  892D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 371  892D              ;														; _produzca colisión.
 372  892D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 373  892F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 374  892F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 375  8932              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 376  8932 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 377  8935              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 378  8935 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 379  8936
 380  8936              ;---------------------------------------------------------------------------------------------------------------
 381  8936
 382  8936              ; Relojes y temporizaciones.
 383  8936
 384  8936 00           Contador_de_frames db 0
 385  8937 00           Contador_de_frames_2 db 0
 386  8938
 387  8938 04           Clock_explosion db 4
 388  8939 1E           Clock_Entidades_en_curso db 30
 389  893A 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 390  893B              ;														; Repite la oleada de entidades.
 391  893B 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 392  893C 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 393  893D 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 394  893E
 395  893E 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 396  893F 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 397  8940 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 398  8941
 399  8941              ;---------------------------------------------------------------------------------------------------------------
 400  8941
 401  8941              ; Gestión de NIVELES.
 402  8941
 403  8941 00           Nivel db 0												; Nivel actual del juego.
 404  8942 00 00        Puntero_indice_NIVELES defw 0
 405  8944 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 406  8946              ; 														; _ que definen el NIVEL.
 407  8946              ; Y todo comienza aquí .....
 408  8946              ;
 409  8946              ; Rutina principal *************************************************************************************************************************************************************************
 410  8946              ;
 411  8946              ;	16/11/22
 412  8946
 413  8946              START
 414  8946
 415  8946 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 416  8949 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 417  894B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 418  894D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 419  894F F3           	DI
 420  8950
 421  8950 3E 07        	ld a,%00000111
 422  8952 CD 19 99     	call Cls
 423  8955
 424  8955 CD 69 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 425  8958
 426  8958              ; INICIALIZACIÓN.
 427  8958
 428  8958 CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 429  895B CD 20 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 430  895E CD F8 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 431  8961              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 432  8961 CD 19 8D     	call Restore_entidad
 433  8964
 434  8964 21 0F 89     	ld hl,Numero_parcial_de_entidades
 435  8967 46           	ld b,(hl)
 436  8968 04           	inc b
 437  8969 05           	dec b
 438  896A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 439  896C
 440  896C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 441  896C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 442  896C              ;	Pintamos el resto de entidades:
 443  896C
 444  896C              ;	INICIA ENTIDADES !!!!!
 445  896C
 446  896C C5           1 push bc  												; Guardo el contador de entidades.
 447  896D CD 76 8B     	call Inicia_entidad
 448  8970 C1           	pop bc
 449  8971 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 450  8973
 451  8973              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 452  8973              ; (Esto se dá cuando se inicia una nueva oleada).
 453  8973
 454  8973 3A 05 89     	ld a,(Ctrl_1)
 455  8976 CB 5F        	bit 3,a
 456  8978 20 1B        	jr nz,5F											; Loop
 457  897A
 458  897A              ; 	INICIA AMADEUS !!!!!
 459  897A
 460  897A CD 40 8D     3 call Restore_Amadeus
 461  897D CD 96 8C     	call Inicia_Puntero_objeto
 462  8980 CD 0C 93     	call Draw
 463  8983 CD A0 7F     	call Guarda_foto_registros
 464  8986 CD BD 8D     	call Guarda_datos_de_borrado_Amadeus
 465  8989
 466  8989 11 7E 85     	ld de,Amadeus_db
 467  898C CD 52 8D     	call Store_Amadeus
 468  898F
 469  898F              ; 	INICIA DISPAROS !!!!!
 470  898F
 471  898F CD 0E 8C     	call Inicia_Puntero_Disparo_Entidades
 472  8992 CD 15 8C     	call Inicia_Puntero_Disparo_Amadeus
 473  8995
 474  8995              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 475  8995
 476  8995 CD F8 8B     5 call Inicia_punteros_de_cajas
 477  8998 CD 19 8D     	call Restore_entidad
 478  899B
 479  899B 3A 05 89     	ld a,(Ctrl_1)
 480  899E CB 5F        	bit 3,a
 481  89A0 28 07        	jr z,6F
 482  89A2
 483  89A2              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 484  89A2
 485  89A2 21 05 89     	ld hl,Ctrl_1
 486  89A5 CB 9E        	res 3,(hl)
 487  89A7 18 07        	jr Main
 488  89A9
 489  89A9              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 490  89A9
 491  89A9 21 24 89     6 ld hl,Ctrl_3
 492  89AC CB C6        	set 0,(hl)											; Frame completo.
 493  89AE FB           	ei
 494  89AF 76           	halt
 495  89B0
 496  89B0              ; ------------------------------------
 497  89B0
 498  89B0              Main
 499  89B0              ;
 500  89B0              ;	11/12/23
 501  89B0
 502  89B0              ; Aparece nueva entidad ???
 503  89B0
 504  89B0              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 505  89B0              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 506  89B0              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 507  89B0              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 508  89B0              ;														; _un 2º bloque.
 509  89B0
 510  89B0 3A 39 89     	ld a,(Clock_Entidades_en_curso)
 511  89B3 47           	ld b,a
 512  89B4 3A 36 89     	ld a,(Contador_de_frames)
 513  89B7 B8           	cp b
 514  89B8 20 18        	jr nz,13F
 515  89BA
 516  89BA              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 517  89BA              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 518  89BA              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 519  89BA              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 520  89BA
 521  89BA              ;	inc a
 522  89BA              ;	cp b
 523  89BA              ;	jr nz,13F
 524  89BA
 525  89BA
 526  89BA              ;23 ld (Contador_de_frames),a
 527  89BA
 528  89BA              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 529  89BA              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 530  89BA
 531  89BA 3A 0F 89     21 ld a,(Numero_parcial_de_entidades)
 532  89BD 47           	ld b,a
 533  89BE 3A 10 89     	ld a,(Entidades_en_curso)
 534  89C1 B8           	cp b
 535  89C2 28 0E        	jr z,13F
 536  89C4 30 0C        	jr nc,13F
 537  89C6
 538  89C6              ; --- --- --- --- ---
 539  89C6
 540  89C6 3C           	inc a
 541  89C7 32 10 89     	ld (Entidades_en_curso),a
 542  89CA
 543  89CA              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 544  89CA
 545  89CA 3A 39 89     	ld a,(Clock_Entidades_en_curso)
 546  89CD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 547  89CD              ;! _ IMPREDECIBLE !!!!
 548  89CD C6 32        	add 50
 549  89CF 32 39 89     	ld (Clock_Entidades_en_curso),a
 550  89D2
 551  89D2              ; -------------------------------------------------------------------------------------------------------------
 552  89D2
 553  89D2              ; Habilita disparos.
 554  89D2
 555  89D2 21 3B 89     13 ld hl,Disparo_Amadeus
 556  89D5 11 3D 89     	ld de,CLOCK_repone_disparo_Amadeus
 557  89D8 CD E9 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 558  89DB
 559  89DB 21 3E 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 560  89DE 11 40 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 561  89E1 CD E9 9C     	call Habilita_disparos
 562  89E4
 563  89E4              ; COLISIONES.
 564  89E4
 565  89E4 CD 0C 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 566  89E7
 567  89E7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 568  89E7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 569  89E7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 570  89E7
 571  89E7 AF           	xor a
 572  89E8 32 2A 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 573  89EB
 574  89EB CD F8 8B     	call Inicia_punteros_de_cajas
 575  89EE CD 19 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 576  89F1              ; 														; _ en DRAW.
 577  89F1 3A C4 88     	ld a,(Filas)
 578  89F4 A7           	and a
 579  89F5 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 580  89F7 CD 2B 8D     	call Incrementa_punteros_de_cajas
 581  89FA 18 F2        	jr 12B
 582  89FC
 583  89FC              ; ---------------------------------------------------------------------------------------
 584  89FC
 585  89FC 3A 0F 89     10 ld a,(Numero_parcial_de_entidades)
 586  89FF 47               ld b,a
 587  8A00 A7           	and a
 588  8A01 20 14        	jr nz,11F
 589  8A03
 590  8A03 21 05 89     	ld hl,Ctrl_1
 591  8A06 CB 66        	bit 4,(hl)
 592  8A08 C2 A9 8A     	jp nz,16F
 593  8A0B
 594  8A0B              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 595  8A0B
 596  8A0B 21 05 89     	ld hl,Ctrl_1
 597  8A0E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 598  8A10
 599  8A10 3A 36 89     	ld a,(Contador_de_frames)
 600  8A13 3C           	inc a
 601  8A14 32 3A 89     	ld (Activa_recarga_cajas),a
 602  8A17
 603  8A17              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 604  8A17
 605  8A17 3A 10 89     11 ld a,(Entidades_en_curso)
 606  8A1A A7           	and a
 607  8A1B CA A9 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 608  8A1E 47           	ld b,a												; No hay entidades que gestionar.
 609  8A1F
 610  8A1F              ; ( Código que ejecutamos con cada entidad: ).
 611  8A1F
 612  8A1F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 613  8A1F
 614  8A1F C5           15 push bc 												; Nº de entidades en curso.
 615  8A20
 616  8A20              ; Existe "Entidad_guía" ???.
 617  8A20              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 618  8A20
 619  8A20 3A 24 89     	ld a,(Ctrl_3)
 620  8A23 CB 4F        	bit 1,a
 621  8A25 20 0A        	jr nz,22F
 622  8A27
 623  8A27              ; Activa "Entidad_guía".
 624  8A27
 625  8A27 21 03 89     	ld hl,Ctrl_2
 626  8A2A CB EE        	set 5,(hl)
 627  8A2C 21 24 89     	ld hl,Ctrl_3
 628  8A2F CB CE        	set 1,(hl)
 629  8A31
 630  8A31              ; Impacto ???
 631  8A31
 632  8A31 3A DD 88     22 ld a,(Impacto)
 633  8A34 A7           	and a
 634  8A35 28 31        	jr z,8F
 635  8A37
 636  8A37              ; Hay Impacto en esta entidad.
 637  8A37
 638  8A37 21 38 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 639  8A3A 35           	dec (hl)
 640  8A3B C2 9C 8A     	jp nz,17F
 641  8A3E
 642  8A3E              ;! Velocidad de la animación de la explosión.
 643  8A3E
 644  8A3E 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 645  8A40              ;														; _,(velocidad de la explosión).
 646  8A40
 647  8A40              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 648  8A40
 649  8A40 CD DD 8D     	call Repone_datos_de_borrado
 650  8A43 CD 36 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 651  8A46
 652  8A46              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 653  8A46
 654  8A46 3A 03 89     	ld a,(Ctrl_2)
 655  8A49 CB 4F        	bit 1,a
 656  8A4B 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 657  8A4D
 658  8A4D              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 659  8A4D
 660  8A4D 3A CC 88     	ld a,(CTRL_DESPLZ)
 661  8A50 A7           	and a
 662  8A51 20 08        	jr nz,18F
 663  8A53
 664  8A53 21 84 84     	ld hl,Indice_Explosion_2x2-2
 665  8A56 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 666  8A59 18 06        	jr 19F
 667  8A5B
 668  8A5B 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 669  8A5E 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 670  8A61
 671  8A61 21 03 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 672  8A64 CB CE        	set 1,(hl)
 673  8A66 18 22        	jr 7F
 674  8A68
 675  8A68              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 676  8A68              ; _con las coordenadas de la entidad almacenada en DRAW.
 677  8A68
 678  8A68 3A 05 89     8 ld a,(Ctrl_1)
 679  8A6B CB 57        	bit 2,a
 680  8A6D 28 1B        	jr z,7F
 681  8A6F
 682  8A6F 2A 2D 89     	ld hl,(Coordenadas_disparo_certero)
 683  8A72 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 684  8A73              ;														; E contiene la coordenada_X del disparo.
 685  8A73 2A CA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 686  8A76              ;														; H FILA, (Coordenada_y de la entidad).
 687  8A76 A7           	and a
 688  8A77 ED 52        	sbc hl,de
 689  8A79
 690  8A79 CD 25 92     	call Determina_resultado_comparativa
 691  8A7C
 692  8A7C 78           	ld a,b
 693  8A7D A7           	and a
 694  8A7E 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 695  8A80
 696  8A80              ; ----- ----- -----
 697  8A80
 698  8A80 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 699  8A82 32 DD 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 700  8A85
 701  8A85 21 05 89     	ld hl,Ctrl_1
 702  8A88 CB 96        	res 2,(hl)
 703  8A8A
 704  8A8A CD FA 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 705  8A8D
 706  8A8D 3A F2 88     	ld a,(Ctrl_0)
 707  8A90 CB 67        	bit 4,a
 708  8A92 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 709  8A94
 710  8A94              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 711  8A94              ; [[[
 712  8A94              ;	call Detecta_disparo_entidad
 713  8A94              ; ]]]
 714  8A94 CD D6 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 715  8A97
 716  8A97 21 F2 88     	ld hl,Ctrl_0
 717  8A9A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 718  8A9C
 719  8A9C CD DE 8C     17 call Store_Restore_cajas
 720  8A9F
 721  8A9F C1           	pop bc
 722  8AA0
 723  8AA0 05           	dec b
 724  8AA1 C2 1F 8A     	jp nz,15B
 725  8AA4
 726  8AA4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 727  8AA4              ; Hemos gestionado todas las unidades.
 728  8AA4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 729  8AA4
 730  8AA4 21 05 89     	ld hl,Ctrl_1
 731  8AA7 CB 96        	res 2,(hl)
 732  8AA9
 733  8AA9 21 24 89     16 ld hl,Ctrl_3
 734  8AAC CB C6        	set 0,(hl)											; Frame completo.
 735  8AAE AF           	xor a
 736  8AAF D3 FE        	out ($fe),a
 737  8AB1 FB           	ei
 738  8AB2 76           	halt
 739  8AB3
 740  8AB3              ; ----------------------------------------
 741  8AB3
 742  8AB3 3A 05 89     	ld a,(Ctrl_1) 										; Existe Loop?
 743  8AB6 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 744  8AB8 CA B0 89     	jp z,Main
 745  8ABB
 746  8ABB              ; RECARGA DE NUEVA OLEADA.
 747  8ABB
 748  8ABB 3A 36 89     	ld a,(Contador_de_frames)
 749  8ABE 47           	ld b,a
 750  8ABF 3A 3A 89     	ld a,(Activa_recarga_cajas)
 751  8AC2 B8           	cp b
 752  8AC3 28 08        	jr z,20F
 753  8AC5
 754  8AC5 21 05 89     	ld hl,Ctrl_1
 755  8AC8 CB E6        	set 4,(hl)
 756  8ACA C3 B0 89     	jp Main
 757  8ACD
 758  8ACD 21 05 89     20 ld hl,Ctrl_1
 759  8AD0 CB A6        	res 4,(hl)
 760  8AD2
 761  8AD2 3A 36 89     	ld a,(Contador_de_frames)
 762  8AD5
 763  8AD5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 764  8AD5              ;! _ IMPREDECIBLE !!!!
 765  8AD5
 766  8AD5 C6 0A        	add 10
 767  8AD7 32 39 89     	ld (Clock_Entidades_en_curso),a
 768  8ADA
 769  8ADA C3 5B 89     	jp 4B
 770  8ADD
 771  8ADD C9           	ret
 772  8ADE
 773  8ADE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 774  8ADE              ;
 775  8ADE              ;	16/11/23
 776  8ADE
 777  8ADE              Gestiona_Amadeus
 778  8ADE
 779  8ADE              ;! Activa/desactiva impacto con Amadeus.
 780  8ADE
 781  8ADE              ;	ld a,(Impacto)
 782  8ADE              ;	and a
 783  8ADE              ;	jr nz,2F
 784  8ADE
 785  8ADE CD 63 8B     	call Mov_Amadeus
 786  8AE1
 787  8AE1 3A F2 88     2 ld a,(Ctrl_0)
 788  8AE4 CB 67        	bit 4,a
 789  8AE6 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 790  8AE8
 791  8AE8 CD D6 8B     	call Guarda_foto_entidad_a_pintar
 792  8AEB CD BD 8D     	call Guarda_datos_de_borrado_Amadeus
 793  8AEE
 794  8AEE 21 F2 88     1 ld hl,Ctrl_0
 795  8AF1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 796  8AF3
 797  8AF3 CD B0 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 798  8AF6
 799  8AF6              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 800  8AF6
 801  8AF6 CD 78 8C     	call Calcula_numero_de_disparotes
 802  8AF9
 803  8AF9 C9           	ret
 804  8AFA
 805  8AFA              ; --------------------------------------------------------------------------------------------------------------
 806  8AFA              ;
 807  8AFA              ;	15/12/23
 808  8AFA
 809  8AFA              Mov_obj
 810  8AFA
 811  8AFA 3A 03 89     	ld a,(Ctrl_2)
 812  8AFD CB 4F        	bit 1,a
 813  8AFF 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 814  8B01
 815  8B01              ; Explosión:
 816  8B01
 817  8B01 3A 04 89     	ld a,(Frames_explosion)
 818  8B04 A7           	and a
 819  8B05 20 1D        	jr nz,4F
 820  8B07
 821  8B07              ; Una alimaña menos!!!!!!!!!1
 822  8B07
 823  8B07              ; Se trataba de una Entidad_guía ???
 824  8B07
 825  8B07 3A 03 89     	ld a,(Ctrl_2)
 826  8B0A CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 827  8B0C 28 05        	jr z,5F
 828  8B0E
 829  8B0E 21 24 89     	ld hl,Ctrl_3
 830  8B11 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 831  8B13
 832  8B13 CD 5B 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 833  8B16 21 0F 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 834  8B19 35           	dec (hl)
 835  8B1A 21 10 89     	ld hl,Entidades_en_curso
 836  8B1D 35           	dec (hl)
 837  8B1E 21 0E 89     	ld hl,Numero_de_entidades
 838  8B21 35           	dec (hl)
 839  8B22 18 3E        	jr 3F
 840  8B24
 841  8B24              ; -----
 842  8B24
 843  8B24              ;	`Movemos´ la explosión.
 844  8B24
 845  8B24 2A D2 88     4 ld hl,(Puntero_DESPLZ_der)
 846  8B27 23           	inc hl
 847  8B28 23           	inc hl
 848  8B29 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 849  8B2C CD 90 8C     	call Extrae_address
 850  8B2F 22 C8 88     	ld (Puntero_objeto),hl
 851  8B32
 852  8B32 21 04 89     	ld hl,Frames_explosion
 853  8B35 35           	dec (hl)
 854  8B36
 855  8B36 21 F2 88     	ld hl,Ctrl_0
 856  8B39 CB E6        	set 4,(hl)
 857  8B3B
 858  8B3B 18 25        	jr 3F
 859  8B3D
 860  8B3D AF           2 xor a
 861  8B3E 32 F2 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 862  8B41
 863  8B41              ; Movemos Entidades malignas.
 864  8B41
 865  8B41 CD 94 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 866  8B44
 867  8B44 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 868  8B47 CB 67        	bit 4,a
 869  8B49 C8           	ret z
 870  8B4A
 871  8B4A              ; Ha habido desplazamiento de la entidad maligna.
 872  8B4A              ; Ha llegado a zona de AMADEUS ???
 873  8B4A
 874  8B4A 3A CB 88     	ld a,(Coordenada_y)
 875  8B4D FE 14        	cp $14
 876  8B4F 38 08        	jr c,1F
 877  8B51
 878  8B51              ; ---------
 879  8B51
 880  8B51              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 881  8B51              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 882  8B51
 883  8B51 F3           	di
 884  8B52 CD D5 8F     	call Genera_coordenadas_X
 885  8B55 CD 11 90     	call Compara_coordenadas_X
 886  8B58 FB           	ei
 887  8B59
 888  8B59              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 889  8B59
 890  8B59              ; ---------
 891  8B59
 892  8B59 CD E0 8B     1 call Prepara_var_pintado	 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 893  8B5C CD DD 8D     	call Repone_datos_de_borrado 						; BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 894  8B5F CD 36 8C     	call Limpia_Variables_de_borrado
 895  8B62
 896  8B62 C9           3 ret
 897  8B63
 898  8B63              ; --------------------------------------------------------------------------------------------------------------
 899  8B63              ;
 900  8B63              ;	29/1/23
 901  8B63
 902  8B63              Mov_Amadeus
 903  8B63
 904  8B63 CD 7D 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 905  8B66
 906  8B66 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 907  8B69 CB 67        	bit 4,a
 908  8B6B C8           	ret z
 909  8B6C
 910  8B6C              ; ---------
 911  8B6C
 912  8B6C CD E0 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 913  8B6F CD CD 8D     	call Repone_datos_de_borrado_Amadeus
 914  8B72 CD 36 8C     	call Limpia_Variables_de_borrado
 915  8B75
 916  8B75 C9           	ret
 917  8B76
 918  8B76              ; -----------------------------------------------------------------------------------
 919  8B76              ;
 920  8B76              ;	12/12/23
 921  8B76              ;
 922  8B76              ;	Inicia Entidades y fija "Entidad_guía".
 923  8B76
 924  8B76              Inicia_entidad
 925  8B76
 926  8B76 CD A8 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 927  8B79 CD 96 8C     	call Inicia_Puntero_objeto
 928  8B7C CD 2D 99     	call Recompone_posicion_inicio
 929  8B7F CD 0C 93     	call Draw
 930  8B82 CD 8D 8B     	call Guarda_movimiento_masticado
 931  8B85 CD A0 7F     	call Guarda_foto_registros
 932  8B88 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 933  8B89              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 934  8B89              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 935  8B89 CD DE 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 936  8B8C C9           	ret
 937  8B8D
 938  8B8D
 939  8B8D              ; -----------------------------------------------------------------------------------
 940  8B8D              ;
 941  8B8D              ;	15/12/23
 942  8B8D              ;
 943  8B8D              ;	Inicia Entidades y fija "Entidad_guía".
 944  8B8D
 945  8B8D 3A 03 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 946  8B90 CB 6F        	bit 5,a
 947  8B92 C8           	ret z
 948  8B93 ED 73 16 89  	ld (Stack),sp
 949  8B97 ED 7B F0 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
 950  8B9B E5           	push hl
 951  8B9C DD E5            push ix
 952  8B9E FD E5            push iy
 953  8BA0 ED 7B 16 89      ld sp,(Stack)
 954  8BA4 CD BF 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados
 955  8BA7 C9               ret
 956  8BA8
 957  8BA8              ; --------------------------------------------------------------------------------------------------------------
 958  8BA8              ;
 959  8BA8              ;	12/12/23
 960  8BA8              ;
 961  8BA8
 962  8BA8              Inicia_entidad_guia
 963  8BA8
 964  8BA8              ; Existe "Entidad_guía" ???
 965  8BA8
 966  8BA8 3A 24 89     	ld a,(Ctrl_3)
 967  8BAB CB 4F        	bit 1,a
 968  8BAD C0           	ret nz
 969  8BAE
 970  8BAE              ; Inicia Entidad_guía:
 971  8BAE
 972  8BAE 21 03 89     	ld hl,Ctrl_2
 973  8BB1 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
 974  8BB3 21 24 89     	ld hl,Ctrl_3
 975  8BB6 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
 976  8BB8
 977  8BB8 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados+6
 978  8BBB 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
 979  8BBE
 980  8BBE C9           	ret
 981  8BBF
 982  8BBF              ; --------------------------------------------------------------------------------------------------------------
 983  8BBF              ;
 984  8BBF              ;	13/12/23
 985  8BBF              ;
 986  8BBF
 987  8BBF              Actualiza_Puntero_de_almacen_de_mov_masticados
 988  8BBF
 989  8BBF              ;	Entidad_guía ???
 990  8BBF
 991  8BBF 3A 03 89     	ld a,(Ctrl_2)
 992  8BC2 CB 6F        	bit 5,a
 993  8BC4 C8           	ret z
 994  8BC5
 995  8BC5 E5           	push hl
 996  8BC6 C5           	push bc
 997  8BC7
 998  8BC7 2A F0 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 999  8BCA 01 06 00     	ld bc,6
1000  8BCD A7           	and a
1001  8BCE ED 4A        	adc hl,bc
1002  8BD0 22 F0 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1003  8BD3
1004  8BD3 C1           	pop bc
1005  8BD4 E1           	pop hl
1006  8BD5
1007  8BD5 C9           	ret
1008  8BD6
1009  8BD6              ; --------------------------------------------------------------------------------------------------------------
1010  8BD6              ;
1011  8BD6              ;	31/08/23
1012  8BD6              ;
1013  8BD6              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1014  8BD6              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1015  8BD6
1016  8BD6              Guarda_foto_entidad_a_pintar
1017  8BD6
1018  8BD6              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
1019  8BD6
1020  8BD6 CD 0C 93     	call Draw
1021  8BD9
1022  8BD9 CD 8D 8B     	call Guarda_movimiento_masticado
1023  8BDC
1024  8BDC CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1025  8BDF C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
1026  8BE0
1027  8BE0              ; --------------------------------------------------------------------------------------------------------------
1028  8BE0              ;
1029  8BE0              ;	19/9/23
1030  8BE0
1031  8BE0 21 C4 88     Prepara_var_pintado ld hl,Filas
1032  8BE3 11 E4 88     	ld de,Variables_de_pintado
1033  8BE6 01 08 00     	ld bc,8
1034  8BE9 ED B0        	ldir
1035  8BEB C9           	ret
1036  8BEC
1037  8BEC              ; --------------------------------------------------------------------------------------------------------------
1038  8BEC
1039  8BEC 21 E4 88     Repone_pintar ld hl,Variables_de_pintado
1040  8BEF 11 C4 88     	ld de,Filas
1041  8BF2 01 08 00     	ld bc,8
1042  8BF5 ED B0        	ldir
1043  8BF7 C9           	ret
1044  8BF8
1045  8BF8              ; *************************************************************************************************************************************************************
1046  8BF8              ;
1047  8BF8              ; 8/1/23
1048  8BF8              ;
1049  8BF8              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1050  8BF8              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1051  8BF8              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1052  8BF8
1053  8BF8              ; Destruye HL y DE !!!!!
1054  8BF8
1055  8BF8              Inicia_punteros_de_cajas
1056  8BF8
1057  8BF8 21 6C 85     	ld hl,Indice_de_cajas
1058  8BFB CD 90 8C         call Extrae_address
1059  8BFE 22 08 89         ld (Puntero_store_caja),hl
1060  8C01 21 6E 85     	ld hl,Indice_de_cajas+2
1061  8C04 22 0C 89     	ld (Indice_restore_caja),hl
1062  8C07 CD 90 8C     	call Extrae_address
1063  8C0A 22 0A 89     	ld (Puntero_restore_caja),hl
1064  8C0D C9               ret
1065  8C0E
1066  8C0E              ; *************************************************************************************************************************************************************
1067  8C0E              ;
1068  8C0E              ; 8/1/23
1069  8C0E              ;
1070  8C0E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1071  8C0E
1072  8C0E 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1073  8C11 22 26 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1074  8C14 C9           	ret
1075  8C15 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1076  8C18 22 28 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1077  8C1B C9           	ret
1078  8C1C
1079  8C1C              ; -------------------------------------------------------------------------------------------------------------
1080  8C1C              ;
1081  8C1C              ; 21/9/23
1082  8C1C              ;
1083  8C1C
1084  8C1C              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1085  8C1C
1086  8C1C              Limpia_album_Amadeus
1087  8C1C
1088  8C1C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1089  8C1F 7E           	ld a,(hl)
1090  8C20 A7           	and a
1091  8C21 C8           	ret z
1092  8C22
1093  8C22 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1094  8C25 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1095  8C28 01 0B 00     	ld bc,11
1096  8C2B AF           	xor a
1097  8C2C 77           	ld (hl),a
1098  8C2D ED B0        	ldir
1099  8C2F
1100  8C2F 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1101  8C32 22 22 89     	ld (End_Snapshot_Amadeus),hl
1102  8C35
1103  8C35 C9           	ret
1104  8C36
1105  8C36 21 DE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1106  8C39 11 DF 88     	ld de,Variables_de_borrado+1
1107  8C3C 01 05 00     	ld bc,5
1108  8C3F AF           	xor a
1109  8C40 77           	ld (hl),a
1110  8C41 ED B0        	ldir
1111  8C43 C9           	ret
1112  8C44
1113  8C44              ; -------------------------------------------------------------------------------------------------------------
1114  8C44              ;
1115  8C44              ; 8/9/23
1116  8C44              ;
1117  8C44
1118  8C44              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1119  8C44              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1120  8C44
1121  8C44              Calcula_numero_de_malotes
1122  8C44
1123  8C44 21 00 70     	ld hl,Album_de_fotos
1124  8C47 EB           	ex de,hl
1125  8C48 2A 1C 89     	ld hl,(Stack_snapshot)
1126  8C4B
1127  8C4B 06 00        	ld b,0
1128  8C4D 7D           	ld a,l
1129  8C4E 93           	sub e
1130  8C4F 28 07        	jr z,1F
1131  8C51
1132  8C51              ; Nº de malotes no es "0".
1133  8C51
1134  8C51 D6 06        2 sub 6
1135  8C53 04           	inc b
1136  8C54 A7           	and a
1137  8C55 20 FA        	jr nz,2B
1138  8C57 78           	ld a,b
1139  8C58
1140  8C58 32 11 89     1 ld (Numero_de_malotes),a
1141  8C5B C9           	ret
1142  8C5C
1143  8C5C              ; -------------------------------------------------------------------------------------------------------------
1144  8C5C              ;
1145  8C5C              ; 8/9/23
1146  8C5C              ;
1147  8C5C
1148  8C5C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1149  8C5C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1150  8C5C
1151  8C5C              Calcula_malotes_Amadeus
1152  8C5C
1153  8C5C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1154  8C5F EB           	ex de,hl
1155  8C60 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1156  8C63
1157  8C63 7C           	ld a,h
1158  8C64 A7           	and a
1159  8C65 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1160  8C67
1161  8C67 06 00        	ld b,0
1162  8C69 7D           	ld a,l
1163  8C6A 93           	sub e
1164  8C6B 28 07        	jr z,1F
1165  8C6D
1166  8C6D              ; Nº de malotes no es "0".
1167  8C6D
1168  8C6D D6 06        2 sub 6
1169  8C6F 04           	inc b
1170  8C70 A7           	and a
1171  8C71 20 FA        	jr nz,2B
1172  8C73 78           	ld a,b
1173  8C74
1174  8C74 32 11 89     1 ld (Numero_de_malotes),a
1175  8C77 C9           	ret
1176  8C78
1177  8C78              ; -------------------------------------------------------------------------------------------------------------
1178  8C78              ;
1179  8C78              ; 28/2/23
1180  8C78              ;
1181  8C78
1182  8C78              Calcula_numero_de_disparotes
1183  8C78
1184  8C78 21 56 70     	ld hl,Album_de_fotos_disparos
1185  8C7B EB           	ex de,hl
1186  8C7C 2A 20 89     	ld hl,(End_Snapshot_disparos)
1187  8C7F
1188  8C7F 06 00        	ld b,0
1189  8C81 7D           	ld a,l
1190  8C82 93           	sub e
1191  8C83 28 07        	jr z,1F
1192  8C85
1193  8C85              ; Nº de malotes no es "0".
1194  8C85
1195  8C85 D6 06        2 sub 6
1196  8C87 04           	inc b
1197  8C88 A7           	and a
1198  8C89 20 FA        	jr nz,2B
1199  8C8B 78           	ld a,b
1200  8C8C
1201  8C8C 32 25 89     1 ld (Numero_de_disparotes),a
1202  8C8F C9           	ret
1203  8C90
1204  8C90              ; *************************************************************************************************************************************************************
1205  8C90              ;
1206  8C90              ; 20/10/22
1207  8C90              ;
1208  8C90              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1209  8C90              ;
1210  8C90              ; Destruye el puntero y DE !!!!!
1211  8C90
1212  8C90 5E           Extrae_address ld e,(hl)
1213  8C91 23           	inc hl
1214  8C92 56           	ld d,(hl)
1215  8C93 2B           	dec hl
1216  8C94 EB           	ex de,hl
1217  8C95 C9           	ret
1218  8C96
1219  8C96              ; *************************************************************************************************************************************************************
1220  8C96              ;
1221  8C96              ;	7/2/23
1222  8C96              ;
1223  8C96              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1224  8C96              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1225  8C96              ;
1226  8C96              ;   Destruye HL y BC !!!!!,
1227  8C96              ;
1228  8C96              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1229  8C96              ;					"0" ..... Izquierda.
1230  8C96
1231  8C96              Inicia_Puntero_objeto
1232  8C96
1233  8C96 3A D8 88     	ld a,(Cuad_objeto)
1234  8C99 E6 01        	and 1
1235  8C9B F5           	push af
1236  8C9C CC BA 8C     	call z,Inicia_puntero_objeto_izq
1237  8C9F F1           	pop af
1238  8CA0 28 2B        	jr z,1F
1239  8CA2 CD A7 8C     	call Inicia_puntero_objeto_der
1240  8CA5 18 26        	jr 1F
1241  8CA7
1242  8CA7              ; Arrancamos desde la parte izquierda de la pantalla.
1243  8CA7              ; Iniciamos (Indice_Sprite_der).
1244  8CA7
1245  8CA7 2A CE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1246  8CAA 22 D2 88     	ld (Puntero_DESPLZ_der),hl
1247  8CAD CD 90 8C     	call Extrae_address
1248  8CB0 22 C8 88     	ld (Puntero_objeto),hl
1249  8CB3
1250  8CB3 2A D0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1251  8CB6 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1252  8CB9 C9           	ret
1253  8CBA
1254  8CBA              ; Arrancamos desde la parte derecha de la pantalla.
1255  8CBA              ; Iniciamos (Indice_Sprite_izq).
1256  8CBA
1257  8CBA 2A D0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1258  8CBD 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1259  8CC0 CD 90 8C     	call Extrae_address
1260  8CC3 22 C8 88     	ld (Puntero_objeto),hl
1261  8CC6
1262  8CC6 2A CE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1263  8CC9 22 D2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1264  8CCC C9           	ret
1265  8CCD
1266  8CCD              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1267  8CCD
1268  8CCD 21 40 83     1 ld hl,Amadeus
1269  8CD0 ED 4B C8 88  	ld bc,(Puntero_objeto)
1270  8CD4 B7 ED 42     	sub hl,bc
1271  8CD7 C0           	ret nz
1272  8CD8 21 F2 88     	ld hl,Ctrl_0
1273  8CDB CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1274  8CDD C9           	ret 												; _de nuestra nave en los extremos.
1275  8CDE
1276  8CDE              ; *************************************************************************************************************************************************************
1277  8CDE              ;
1278  8CDE              ;	14/5/23
1279  8CDE              ;
1280  8CDE              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1281  8CDE              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1282  8CDE
1283  8CDE              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1284  8CDE              ;	_de la 2ª y 3ª entidad respectivamente.
1285  8CDE
1286  8CDE              Store_Restore_cajas
1287  8CDE
1288  8CDE E5           	push hl
1289  8CDF D5           	push de
1290  8CE0 C5            	push bc
1291  8CE1
1292  8CE1              ;	STORE !!!!!
1293  8CE1              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1294  8CE1
1295  8CE1 21 C4 88     	ld hl,Filas
1296  8CE4 ED 5B 08 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1297  8CE8 01 41 00     	ld bc,65
1298  8CEB ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1299  8CED
1300  8CED              ; 	Entidad_sospechosa. 20/4/23
1301  8CED
1302  8CED 3A DD 88     	ld a,(Impacto)
1303  8CF0 A7           	and a
1304  8CF1 28 0C        	jr z,1F
1305  8CF3
1306  8CF3 2A 08 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1307  8CF6 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1308  8CF9 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1309  8CFA ED 4A        	adc hl,bc 											; _ "0" más adelante.
1310  8CFC 22 2B 89     	ld (Entidad_sospechosa_de_colision),hl
1311  8CFF
1312  8CFF              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1313  8CFF
1314  8CFF 2A 0A 89     1 ld hl,(Puntero_restore_caja)
1315  8D02 7E           	ld a,(hl)
1316  8D03 A7           	and a
1317  8D04 F5           	push af
1318  8D05 28 08        	jr z,2F
1319  8D07
1320  8D07 11 C4 88     	ld de,Filas
1321  8D0A 01 41 00     	ld bc,65
1322  8D0D ED B0        	ldir
1323  8D0F
1324  8D0F CD 2B 8D     2 call Incrementa_punteros_de_cajas
1325  8D12
1326  8D12 F1           	pop af
1327  8D13 28 EA        	jr z,1B
1328  8D15
1329  8D15 C1           	pop bc
1330  8D16 D1           	pop de
1331  8D17 E1           	pop hl
1332  8D18
1333  8D18 C9           	ret
1334  8D19
1335  8D19              ; **************************************************************************************************
1336  8D19              ;
1337  8D19              ;	12/05/23
1338  8D19              ;
1339  8D19              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1340  8D19
1341  8D19 E5           Restore_entidad push hl
1342  8D1A D5           	push de
1343  8D1B C5            	push bc
1344  8D1C
1345  8D1C 2A 08 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1346  8D1F 11 C4 88     	ld de,Filas
1347  8D22 01 41 00     	ld bc,65
1348  8D25 ED B0        	ldir
1349  8D27
1350  8D27 C1           	pop bc
1351  8D28 D1           	pop de
1352  8D29 E1           	pop hl
1353  8D2A C9           	ret
1354  8D2B
1355  8D2B              ; **************************************************************************************************
1356  8D2B              ;
1357  8D2B              ;	08/05/23
1358  8D2B              ;
1359  8D2B              ;	Incrementamos los dos punteros de entidades. (+1).
1360  8D2B
1361  8D2B              Incrementa_punteros_de_cajas
1362  8D2B
1363  8D2B 2A 0A 89     	ld hl,(Puntero_restore_caja)
1364  8D2E 22 08 89     	ld (Puntero_store_caja),hl
1365  8D31 2A 0C 89     	ld hl,(Indice_restore_caja)
1366  8D34 23           	inc hl
1367  8D35 23           	inc hl
1368  8D36 22 0C 89     	ld (Indice_restore_caja),hl
1369  8D39 CD 90 8C         call Extrae_address
1370  8D3C 22 0A 89         ld (Puntero_restore_caja),hl
1371  8D3F C9               ret
1372  8D40
1373  8D40              ; **************************************************************************************************
1374  8D40              ;
1375  8D40              ;	25/01/23
1376  8D40              ;
1377  8D40              ;	Restore_Amadeus
1378  8D40              ;
1379  8D40              ;	Cargamos en DRAW los parámetros de Amadeus.
1380  8D40              ;
1381  8D40
1382  8D40 E5           Restore_Amadeus	push hl
1383  8D41 D5           	push de
1384  8D42 C5            	push bc
1385  8D43 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1386  8D46 11 C4 88     	ld de,Filas
1387  8D49 01 41 00     	ld bc,65
1388  8D4C ED B0        	ldir
1389  8D4E C1           	pop bc
1390  8D4F D1           	pop de
1391  8D50 E1           	pop hl
1392  8D51 C9           	ret
1393  8D52
1394  8D52              ; *************************************************************************************************************************************************************
1395  8D52              ;
1396  8D52              ;	29/04/23
1397  8D52              ;
1398  8D52              ;	Store_Amadeus
1399  8D52              ;
1400  8D52              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1401  8D52              ;
1402  8D52              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1403  8D52              ;
1404  8D52              ;	DESTRUYE: HL y BC y DE.
1405  8D52
1406  8D52 21 C4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1407  8D55 01 41 00     	ld bc,65
1408  8D58 ED B0        	ldir
1409  8D5A C9           	ret
1410  8D5B
1411  8D5B              ; -----------------------------------------------------------
1412  8D5B              ;
1413  8D5B              ;	27/04/23
1414  8D5B              ;
1415  8D5B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1416  8D5B              ;
1417  8D5B              ;	Destruye: HL,BC,DE,A
1418  8D5B
1419  8D5B 21 C4 88     Borra_datos_entidad ld hl,Filas
1420  8D5E 01 40 00     	ld bc,64
1421  8D61 AF           	xor a
1422  8D62 77           	ld (hl),a
1423  8D63 11 C5 88     	ld de,Filas+1
1424  8D66 ED B0        	ldir
1425  8D68 C9           	ret
1426  8D69
1427  8D69              ; -----------------------------------------------------------
1428  8D69
1429  8D69              ; Teclado.
1430  8D69
1431  8D69 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1432  8D6B DB FE        	in a,($fe)
1433  8D6D E6 01        	and $01
1434  8D6F 28 02        	jr z,1f
1435  8D71 18 F6        	jr Pulsa_ENTER
1436  8D73 C9           1 ret
1437  8D74
1438  8D74              ; **************************************************************************************************
1439  8D74              ;
1440  8D74              ; Temporización.
1441  8D74
1442  8D74              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1443  8D74              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1444  8D74              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1445  8D74              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1446  8D74
1447  8D74              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1448  8D74              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1449  8D74              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1450  8D74
1451  8D74              ; A partir de $4f61 no hace falta DELAY.
1452  8D74
1453  8D74              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1454  8D74
1455  8D74 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1456  8D77 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1457  8D78 78           	LD A,B
1458  8D79 A7           	AND A
1459  8D7A 20 FB        	JR NZ,wait
1460  8D7C C9           	RET
1461  8D7D
1462  8D7D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1463  8D7D              ;
1464  8D7D              ;	5/3/23
1465  8D7D              ;
1466  8D7D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1467  8D7D
1468  8D7D              Movimiento_Amadeus
1469  8D7D
1470  8D7D              ; Disparo.
1471  8D7D
1472  8D7D 3A 3B 89     	ld a,(Disparo_Amadeus)
1473  8D80 A7           	and a
1474  8D81 20 02        	jr nz,1F
1475  8D83 18 15        	jr 2F
1476  8D85
1477  8D85 3E F7        1 ld a,$f7													; "5" para disparar.
1478  8D87 DB FE        	in a,($fe)
1479  8D89 E6 10        	and $10
1480  8D8B
1481  8D8B F5           	push af
1482  8D8C CC 38 8E     	call z,Genera_disparo
1483  8D8F F1           	pop af
1484  8D90 20 08        	jr nz,2F
1485  8D92
1486  8D92 3A 3B 89     	ld a,(Disparo_Amadeus)
1487  8D95 EE 01        	xor 1
1488  8D97 32 3B 89     	ld (Disparo_Amadeus),a
1489  8D9A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1490  8D9C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1491  8D9E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1492  8DA0 CC F3 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1493  8DA3
1494  8DA3 3E F7        	ld a,$f7
1495  8DA5 DB FE        	in a,($fe)
1496  8DA7 E6 01        	and $01
1497  8DA9 C8           	ret z
1498  8DAA
1499  8DAA 3E F7        	ld a,$f7
1500  8DAC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1501  8DAE E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1502  8DB0 CC D5 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1503  8DB3 C9           	ret
1504  8DB4
1505  8DB4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1506  8DB4              ;
1507  8DB4              ;	Rutina provisional para que los malotes cagen balas.
1508  8DB4
1509  8DB4              Detecta_disparo_entidad
1510  8DB4
1511  8DB4 3A 3E 89     	ld a,(Disparo_entidad)
1512  8DB7 A7           	and a
1513  8DB8 C8           	ret z
1514  8DB9
1515  8DB9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1516  8DB9
1517  8DB9              ;	ld a,$7f				; Detecta SPACE.
1518  8DB9              ;	in a,($fe)
1519  8DB9              ;	and 1
1520  8DB9              ;	ret nz
1521  8DB9
1522  8DB9 CD 38 8E     	call Genera_disparo
1523  8DBC C9           	ret
1524  8DBD
1525  8DBD              ; ----------------------------------------------------------------------
1526  8DBD              ;
1527  8DBD              ;	8/9/23
1528  8DBD
1529  8DBD 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1530  8DC0 2B            	dec hl
1531  8DC1 7E           	ld a,(hl)
1532  8DC2 A7           	and a
1533  8DC3 C8           	ret z										; Salimos si es álbum está vacío.
1534  8DC4
1535  8DC4 11 E3 88     	ld de,Variables_de_borrado+5
1536  8DC7 01 06 00     	ld bc,6
1537  8DCA ED B8        	lddr
1538  8DCC C9           	ret
1539  8DCD
1540  8DCD              ; ----------------------------------------------------------------------
1541  8DCD              ;
1542  8DCD              ;	9/9/23
1543  8DCD
1544  8DCD              Repone_datos_de_borrado_Amadeus
1545  8DCD
1546  8DCD 21 DE 88     	ld hl,Variables_de_borrado
1547  8DD0 11 AC 70     	ld de,Album_de_fotos_Amadeus
1548  8DD3 01 06 00     	ld bc,6
1549  8DD6 ED B0        	ldir
1550  8DD8
1551  8DD8 EB           	ex de,hl
1552  8DD9 22 22 89     	ld (End_Snapshot_Amadeus),hl
1553  8DDC
1554  8DDC C9           	ret
1555  8DDD
1556  8DDD              ; ----------------------------------------------------------------------
1557  8DDD              ;
1558  8DDD              ;	27/10/23
1559  8DDD              ;
1560  8DDD
1561  8DDD              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1562  8DDD              ;	_ Album_de_fotos correspondiente.
1563  8DDD
1564  8DDD              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1565  8DDD              ;	_ durante el proceso de escritura.
1566  8DDD
1567  8DDD              Repone_datos_de_borrado
1568  8DDD
1569  8DDD F3           	di
1570  8DDE ED 5B 1C 89  	ld de,(Stack_snapshot)
1571  8DE2 21 DE 88     	ld hl,Variables_de_borrado
1572  8DE5 01 06 00     	ld bc,6
1573  8DE8 ED B0        	ldir
1574  8DEA FB           	ei
1575  8DEB
1576  8DEB EB           	ex de,hl
1577  8DEC 22 1C 89     	ld (Stack_snapshot),hl
1578  8DEF
1579  8DEF C9           	ret
1580  8DF0
1581  8DF0              ; -----------------------------------------------------------------------------------
1582  8DF0
1583  8DF0              Pinta_Amadeus
1584  8DF0
1585  8DF0 3E 06        	ld a,6
1586  8DF2 D3 FE            out ($fe),a										; Amarillo
1587  8DF4
1588  8DF4 CD 5C 8C        	call Calcula_malotes_Amadeus
1589  8DF7 CD 9C 96     	call Extrae_foto_Amadeus
1590  8DFA CD 1C 8C     	call Limpia_album_Amadeus
1591  8DFD
1592  8DFD C9           	ret
1593  8DFE
1594  8DFE              Pinta_entidades
1595  8DFE
1596  8DFE              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1597  8DFE
1598  8DFE 3A 24 89     	ld a,(Ctrl_3)
1599  8E01 CB 47        	bit 0,a
1600  8E03 C8           	ret z
1601  8E04
1602  8E04 CD 44 8C     	call Calcula_numero_de_malotes
1603  8E07 CD 1A 96     	call Extrae_foto_entidades
1604  8E0A CD 03 80     	call Limpia_y_reinicia_Stack_Snapshot
1605  8E0D
1606  8E0D C9           	ret
1607  8E0E
1608  8E0E              ; -----------------------------------------------------------------------------------
1609  8E0E              ;
1610  8E0E              ;	10/12/23
1611  8E0E              ;
1612  8E0E              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1613  8E0E
1614  8E0E              Actualiza_relojes
1615  8E0E
1616  8E0E 3A 24 89     	ld a,(Ctrl_3)
1617  8E11 CB 47        	bit 0,a
1618  8E13 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1619  8E14
1620  8E14 21 36 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1621  8E17 34           	inc (hl)
1622  8E18
1623  8E18 34           	inc (hl)
1624  8E19 35           	dec (hl)
1625  8E1A C0           	ret nz
1626  8E1B
1627  8E1B 21 37 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1628  8E1E 34           	inc (hl)
1629  8E1F C9           	ret
1630  8E20
1631  8E20              ; ---------------------------------------------------------------
1632  8E20              ;
1633  8E20              ;	27/9/23
1634  8E20
1635  8E20              Guarda_parametros_DRAW
1636  8E20
1637  8E20 21 C4 88     	ld hl,Filas
1638  8E23 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1639  8E26 01 41 00     	ld bc,65
1640  8E29 ED B0        	ldir
1641  8E2B C9           	ret
1642  8E2C
1643  8E2C              Recupera_parametros_DRAW
1644  8E2C
1645  8E2C 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1646  8E2F 11 C4 88     	ld de,Filas
1647  8E32 01 41 00     	ld bc,65
1648  8E35 ED B0        	ldir
1649  8E37 C9           	ret
1650  8E38
1651  8E38              ; ---------------------------------------------------------------
1652  8E38
1653  8E38              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E38              ; ******************************************************************************************************************************************************************************************
   2+ 8E38              ;
   3+ 8E38              ;   21/07/23
   4+ 8E38              ;
   5+ 8E38              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E38              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E38              ;
   8+ 8E38              ;
   9+ 8E38              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E38              ;
  11+ 8E38              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E38              ;               _ hacen las entidades hacia abajo.
  13+ 8E38              ;
  14+ 8E38              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E38              ;
  16+ 8E38              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E38              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E38              ;
  19+ 8E38              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E38              ;           _ la bala.
  21+ 8E38              ;
  22+ 8E38              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E38              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E38              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E38              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E38              ;           _ en el momento de generarse la bala)).
  27+ 8E38
  28+ 8E38              Genera_disparo
  29+ 8E38
  30+ 8E38              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E38              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E38              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E38              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E38              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E38              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E38              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E38
  38+ 8E38              ; Exclusiones:
  39+ 8E38
  40+ 8E38 3A DC 88         ld a,(Vel_down)
  41+ 8E3B 47               ld b,a
  42+ 8E3C 3A 35 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E3F B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E40 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E41 3A FF 88         ld a,(Columnas)
  46+ 8E44 47               ld b,a
  47+ 8E45 3A C5 88         ld a,(Columns)
  48+ 8E48 B8               cp b
  49+ 8E49 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E4A
  51+ 8E4A              ; ----- ----- -----
  52+ 8E4A
  53+ 8E4A 3A F2 88         ld a,(Ctrl_0)
  54+ 8E4D CB 77            bit 6,a
  55+ 8E4F 20 06            jr nz,14F
  56+ 8E51
  57+ 8E51 3A CB 88         ld a,(Coordenada_y)
  58+ 8E54 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E56 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E57
  61+ 8E57 21 00 80     14 ld hl,Indice_disparo
  62+ 8E5A 3A CC 88         ld a,(CTRL_DESPLZ)
  63+ 8E5D 4F               ld c,a
  64+ 8E5E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E60              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E60              ;                                            ""        ""       "f9", B="1"
  67+ 8E60              ;                                            ""        ""       "fb", B="2"
  68+ 8E60              ;                                            ""        ""       "fb", B="3"
  69+ 8E60 A7               and a
  70+ 8E61 28 10            jr z,1F
  71+ 8E63 E6 01            and 1
  72+ 8E65 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E66
  74+ 8E66 79               ld a,c
  75+ 8E67 16 F9            ld d,$f9
  76+ 8E69 23           2 inc hl
  77+ 8E6A 23               inc hl
  78+ 8E6B 04               inc b
  79+ 8E6C BA               cp d
  80+ 8E6D 28 04            jr z,1F
  81+ 8E6F 14               inc d
  82+ 8E70 14               inc d
  83+ 8E71 18 F6            jr 2B
  84+ 8E73
  85+ 8E73 CD 90 8C     1 call Extrae_address
  86+ 8E76 E5               push hl
  87+ 8E77 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E79 DD 21 E2 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E7D
  90+ 8E7D              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E7D              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E7D
  93+ 8E7D 3A F2 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E80 CB 77            bit 6,a
  95+ 8E82 20 04            jr nz,19F
  96+ 8E84
  97+ 8E84 AF               xor a
  98+ 8E85 32 3E 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E88
 100+ 8E88 3A D8 88     19 ld a,(Cuad_objeto)
 101+ 8E8B FE 02            cp 2
 102+ 8E8D 38 66            jr c,3F
 103+ 8E8F 28 64            jr z,3F
 104+ 8E91
 105+ 8E91              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E91
 107+ 8E91 E6 01            and 1
 108+ 8E93 28 30            jr z,4F
 109+ 8E95
 110+ 8E95              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E95              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E95              ;
 113+ 8E95              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E95              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E95              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E95
 117+ 8E95 2A C6 88     	ld hl,(Posicion_actual)
 118+ 8E98
 119+ 8E98              ;   Amadeus o entidad ???.
 120+ 8E98
 121+ 8E98 3A F2 88         ld a,(Ctrl_0)
 122+ 8E9B CB 77            bit 6,a
 123+ 8E9D 28 0A            jr z,8F
 124+ 8E9F
 125+ 8E9F              ; 	Dispara Amadeus.
 126+ 8E9F
 127+ 8E9F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EA1 CD 0B 96         call PreviousScan
 129+ 8EA4 CD 0B 96         call PreviousScan
 130+ 8EA7
 131+ 8EA7              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EA7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EA7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EA7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EA7
 136+ 8EA7 18 11            jr 10F
 137+ 8EA9
 138+ 8EA9              ; 	Dispara Entidad.
 139+ 8EA9
 140+ 8EA9 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EAC              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EAC
 143+ 8EAC              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EAC              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EAC
 146+ 8EAC C5               push bc
 147+ 8EAD 06 10            ld b,16
 148+ 8EAF CD FC 95     9 call NextScan
 149+ 8EB2 10 FB            djnz 9B
 150+ 8EB4 C1               pop bc
 151+ 8EB5 CD 1F 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EB8 18 06            jr 17F
 153+ 8EBA
 154+ 8EBA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EBA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EBA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EBA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EBA
 159+ 8EBA CD 1F 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EBD CD 94 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EC0              ;                                                      ; _al generar el disparo.
 162+ 8EC0
 163+ 8EC0              ; 	LLegados a este punto tendremos:
 164+ 8EC0              ;
 165+ 8EC0              ;       Puntero_objeto_disparo en IY.
 166+ 8EC0              ;       Rutinas_de_impresion en IX.
 167+ 8EC0              ;       Puntero_de_impresion en HL.
 168+ 8EC0              ;       Impacto/Dirección en BC.
 169+ 8EC0
 170+ 8EC0 CD 27 8F     17 call Almacena_disparo
 171+ 8EC3 18 52            jr 6F                                             ; RET.
 172+ 8EC5
 173+ 8EC5              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EC5              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EC5              ;
 176+ 8EC5              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EC5              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EC5              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EC5
 180+ 8EC5 2A C6 88     4 ld hl,(Posicion_actual)
 181+ 8EC8
 182+ 8EC8              ;   Amadeus o entidad ???.
 183+ 8EC8
 184+ 8EC8 3A F2 88         ld a,(Ctrl_0)
 185+ 8ECB CB 77            bit 6,a
 186+ 8ECD 28 0A            jr z,11F
 187+ 8ECF
 188+ 8ECF              ; 	Dispara Amadeus.
 189+ 8ECF
 190+ 8ECF 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ED1 CD 0B 96         call PreviousScan
 192+ 8ED4 CD 0B 96         call PreviousScan
 193+ 8ED7
 194+ 8ED7              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8ED7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8ED7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8ED7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8ED7
 199+ 8ED7 18 11            jr 13F
 200+ 8ED9
 201+ 8ED9              ; 	Dispara Entidad.
 202+ 8ED9
 203+ 8ED9 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EDC              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EDC
 206+ 8EDC              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EDC              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EDC
 209+ 8EDC C5               push bc
 210+ 8EDD 06 10            ld b,16
 211+ 8EDF CD FC 95     12 call NextScan
 212+ 8EE2 10 FB            djnz 12B
 213+ 8EE4 C1               pop bc
 214+ 8EE5
 215+ 8EE5 CD 18 8F         call Ajusta_disparo_parte_derecha
 216+ 8EE8 18 06            jr 18F
 217+ 8EEA
 218+ 8EEA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EEA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EEA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EEA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EEA
 223+ 8EEA CD 18 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EED CD 94 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EF0              ;                                                       ; _al generar el disparo.
 226+ 8EF0
 227+ 8EF0              ; LLegados a este punto tendremos:
 228+ 8EF0              ;
 229+ 8EF0              ;       Puntero_objeto_disparo en IY.
 230+ 8EF0              ;       Rutinas_de_impresion en IX.
 231+ 8EF0              ;       Puntero_de_impresion en HL.
 232+ 8EF0              ;       Impacto/Dirección en BC.
 233+ 8EF0
 234+ 8EF0 CD 27 8F     18 call Almacena_disparo
 235+ 8EF3 18 22            jr 6F                                               ; RET.
 236+ 8EF5
 237+ 8EF5              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EF5
 239+ 8EF5 28 11        3 jr z,5F
 240+ 8EF7
 241+ 8EF7              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EF7              ;
 243+ 8EF7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EF7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EF7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EF7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EF7
 248+ 8EF7              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EF7              ;	   ""        ""       "f9", B="1"
 250+ 8EF7              ;	   ""        ""       "fb", B="2"
 251+ 8EF7              ; 	   ""        ""       "fb", B="3"
 252+ 8EF7
 253+ 8EF7 2A C6 88     	ld hl,(Posicion_actual)
 254+ 8EFA CD FC 95     	call NextScan
 255+ 8EFD
 256+ 8EFD              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EFD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EFD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EFD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EFD
 261+ 8EFD CD 1F 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F00
 263+ 8F00              ; 	No se produce impacto. B="$80"
 264+ 8F00              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F00
 266+ 8F00 01 80 80         ld bc,$8080
 267+ 8F03
 268+ 8F03              ; 	LLegados a este punto tendremos:
 269+ 8F03              ;
 270+ 8F03              ;       Puntero_objeto_disparo en IY.
 271+ 8F03              ;       Rutinas_de_impresion en IX.
 272+ 8F03              ;       Puntero_de_impresion en HL.
 273+ 8F03              ;       Impacto/Dirección en BC.
 274+ 8F03
 275+ 8F03 CD 27 8F         call Almacena_disparo
 276+ 8F06 18 0F            jr 6F                                           ; RET.
 277+ 8F08
 278+ 8F08              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F08              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F08              ;
 281+ 8F08              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F08              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F08              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F08              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F08
 286+ 8F08 2A C6 88     5 ld hl,(Posicion_actual)
 287+ 8F0B CD FC 95     	call NextScan
 288+ 8F0E
 289+ 8F0E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F0E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F0E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F0E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F0E
 294+ 8F0E CD 18 8F         call Ajusta_disparo_parte_derecha
 295+ 8F11
 296+ 8F11              ; 	No se produce impacto. B="$80"
 297+ 8F11              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F11
 299+ 8F11 01 80 80     15 ld bc,$8080
 300+ 8F14
 301+ 8F14              ; 	LLegados a este punto tendremos:
 302+ 8F14              ;
 303+ 8F14              ;       Puntero_objeto_disparo en IY.
 304+ 8F14              ;       Rutinas_de_impresion en IX.
 305+ 8F14              ;       Puntero_de_impresion en HL.
 306+ 8F14              ;       Impacto/Dirección en BC.
 307+ 8F14
 308+ 8F14 CD 27 8F         call Almacena_disparo
 309+ 8F17
 310+ 8F17 C9           6 ret
 311+ 8F18
 312+ 8F18              ; ----------------------------------------------------------------
 313+ 8F18              ;
 314+ 8F18              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F18              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F18              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F18
 318+ 8F18 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F19 FE 02            cp 2
 320+ 8F1B 38 01            jr c,1F
 321+ 8F1D 23               inc hl
 322+ 8F1E C9           1 ret
 323+ 8F1F
 324+ 8F1F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F20 FE 01        	cp 1
 326+ 8F22 20 01        	jr nz,1F
 327+ 8F24 2B           	dec hl
 328+ 8F25 2B           1 dec hl
 329+ 8F26 C9               ret
 330+ 8F27
 331+ 8F27              ; ----------------------------------------------------------------
 332+ 8F27              ;
 333+ 8F27              ;   25/02/23
 334+ 8F27              ;
 335+ 8F27              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F27              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F27              ;
 338+ 8F27              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F27              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F27
 341+ 8F27              Almacena_disparo
 342+ 8F27
 343+ 8F27 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F28 F1               pop af
 345+ 8F29 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F2A
 347+ 8F2A 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F2B E6 01            and 1
 349+ 8F2D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F2F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F2F              ; 	Dispara AMADEUS.
 352+ 8F2F
 353+ 8F2F              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F2F              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F2F              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F2F              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F2F
 358+ 8F2F C5               push bc
 359+ 8F30 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F33 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F36 A7               and a
 362+ 8F37 ED 42            sbc hl,bc
 363+ 8F39 CC 15 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F3C C1               pop bc
 365+ 8F3D 28 54            jr z,4F
 366+ 8F3F
 367+ 8F3F 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F42 23               inc hl
 369+ 8F43 23               inc hl
 370+ 8F44 22 28 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F47              ;                                                   ; _ Disparo_(+1).
 372+ 8F47 18 18            jr 2F
 373+ 8F49
 374+ 8F49              ; Dispara una entidad.
 375+ 8F49
 376+ 8F49 C5           1 push bc
 377+ 8F4A 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F4D 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F50 A7               and a
 380+ 8F51 ED 42            sbc hl,bc
 381+ 8F53 CC 0E 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F56 C1               pop bc
 383+ 8F57 28 3A            jr z,4F
 384+ 8F59
 385+ 8F59 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F5C 23               inc hl
 387+ 8F5D 23               inc hl
 388+ 8F5E 22 26 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F61              ;                                                   ; _ Disparo_(+1).
 390+ 8F61 CD 90 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F64              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F64              ;
 393+ 8F64              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F64              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F64              ;                                                     Puntero_de_impresion en HL.
 396+ 8F64              ;                                                     Impacto/Dirección en BC.
 397+ 8F64
 398+ 8F64 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F65 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F66 23               inc hl                                          ; _ al siguiente.
 401+ 8F67 A7               and a
 402+ 8F68 20 C0            jr nz,3B
 403+ 8F6A
 404+ 8F6A 08               ex af,af
 405+ 8F6B ED 73 16 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F6F F9               ld sp,hl
 407+ 8F70
 408+ 8F70 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F72 F5               push af                                         ; Puntero de impresión.
 410+ 8F73 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F75 C5               push bc                                         ; Control.
 412+ 8F76
 413+ 8F76 ED 7B 16 89      ld sp,(Stack)
 414+ 8F7A
 415+ 8F7A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F7A
 417+ 8F7A 21 05 89     	ld hl,Ctrl_1
 418+ 8F7D CB C6        	set 0,(hl)
 419+ 8F7F
 420+ 8F7F DD E5        	push ix
 421+ 8F81 E1               pop hl
 422+ 8F82 F5               push af
 423+ 8F83 DD E1            pop ix
 424+ 8F85
 425+ 8F85 CD A0 7F     	call Guarda_foto_registros
 426+ 8F88
 427+ 8F88 21 05 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F8B CB 86        	res 0,(hl)
 429+ 8F8D
 430+ 8F8D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F8D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F8D
 433+ 8F8D CD 15 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F90 CD 0E 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8F93
 436+ 8F93 C9           4 ret
 437+ 8F94
 438+ 8F94              ; ----------------------------------------------------------------
 439+ 8F94              ;
 440+ 8F94              ;   4/3/23
 441+ 8F94              ;
 442+ 8F94              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F94              ;   _ al generarse el disparo.
 444+ 8F94              ;
 445+ 8F94              ;       "$80" ..... No se produce colisión.
 446+ 8F94              ;       "$81" ..... Se produce colisión.
 447+ 8F94              ;
 448+ 8F94              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F94              ;         _ que forman el disparo.
 450+ 8F94
 451+ 8F94
 452+ 8F94              Comprueba_Colision
 453+ 8F94
 454+ 8F94              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F94
 456+ 8F94 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F96 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F97
 459+ 8F97 CD CD 8F         call Modifica_H_Velocidad_disparo
 460+ 8F9A
 461+ 8F9A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F9B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F9D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F9F
 465+ 8F9F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FA1 CD BD 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FA4
 468+ 8FA4 7B               ld a,e
 469+ 8FA5 E6 01            and 1
 470+ 8FA7 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FA9              ;                                                  ; _ para activar IMPACTO.
 472+ 8FA9 E1               pop hl
 473+ 8FAA E5               push hl
 474+ 8FAB CD FC 95         call NextScan
 475+ 8FAE
 476+ 8FAE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FAF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FB1 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FB3              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FB3 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FB5 CD BD 8F         call Bucle_2
 482+ 8FB8
 483+ 8FB8 43           1 ld b,e
 484+ 8FB9 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FBA FD E1            pop iy
 486+ 8FBC C9               ret
 487+ 8FBD
 488+ 8FBD              ; ---------- ----------
 489+ 8FBD
 490+ 8FBD 06 02        Bucle_2 ld b,2
 491+ 8FBF FD 7E 00     2 ld a,(iy)
 492+ 8FC2 A6               and (hl)
 493+ 8FC3 28 02            jr z,1F
 494+ 8FC5 1E 81            ld e,$81
 495+ 8FC7 23           1 inc hl
 496+ 8FC8 FD 23            inc iy
 497+ 8FCA 10 F3            djnz 2B
 498+ 8FCC C9               ret
 499+ 8FCD
 500+ 8FCD              ; ---------- ----------
 501+ 8FCD              ;
 502+ 8FCD              ;   21/7/23
 503+ 8FCD
 504+ 8FCD              Modifica_H_Velocidad_disparo
 505+ 8FCD
 506+ 8FCD 3A 35 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FD0 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FD2 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FD3 24               inc h
 510+ 8FD4
 511+ 8FD4 C9               ret
 512+ 8FD5
 513+ 8FD5              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FD5              ;
 515+ 8FD5              ;   04/12/23
 516+ 8FD5              ;
 517+ 8FD5              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FD5              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FD5              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FD5              ;
 521+ 8FD5              ;   MODIFICA: HL,DE,B y A.
 522+ 8FD5
 523+ 8FD5              Genera_coordenadas_X
 524+ 8FD5
 525+ 8FD5              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FD5              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FD5
 528+ 8FD5              ;   Limpiamos almacenes.
 529+ 8FD5
 530+ 8FD5 CD 06 90         call Limpia_Coordenadas_X
 531+ 8FD8
 532+ 8FD8              ;   Almacenamos coordenadas X.
 533+ 8FD8
 534+ 8FD8              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8FD8
 536+ 8FD8 2A EE 88         ld hl,(Puntero_de_impresion)
 537+ 8FDB 11 32 89         ld de,Coordenadas_X_Entidad
 538+ 8FDE 06 02            ld b,2
 539+ 8FE0
 540+ 8FE0 3A CC 88         ld a,(CTRL_DESPLZ)
 541+ 8FE3 A7               and a
 542+ 8FE4 28 01            jr z,1F
 543+ 8FE6 04               inc b
 544+ 8FE7
 545+ 8FE7 CD FD 8F     1 call Guarda_coordenadas_X
 546+ 8FEA
 547+ 8FEA              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8FEA
 549+ 8FEA 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 8FED 11 2F 89         ld de,Coordenadas_X_Amadeus
 551+ 8FF0 06 02            ld b,2
 552+ 8FF2
 553+ 8FF2 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 8FF5 A7               and a
 555+ 8FF6 28 01            jr z,2F
 556+ 8FF8 04               inc b
 557+ 8FF9
 558+ 8FF9 CD FD 8F     2 call Guarda_coordenadas_X
 559+ 8FFC
 560+ 8FFC              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8FFC
 562+ 8FFC C9               ret
 563+ 8FFD
 564+ 8FFD              ; ----- ----- ----- ----- -----
 565+ 8FFD
 566+ 8FFD 7D           Guarda_coordenadas_X  ld a,l
 567+ 8FFE E6 1F            and $1f
 568+ 9000 12           1 ld (de),a
 569+ 9001 3C               inc a
 570+ 9002 13               inc de
 571+ 9003 10 FB            djnz 1B
 572+ 9005 C9               ret
 573+ 9006
 574+ 9006 AF           Limpia_Coordenadas_X xor a
 575+ 9007 06 06            ld b,6
 576+ 9009 21 2F 89         ld hl,Coordenadas_X_Amadeus
 577+ 900C 77           1 ld (hl),a
 578+ 900D 23               inc hl
 579+ 900E 10 FC            djnz 1B
 580+ 9010 C9               ret
 581+ 9011
 582+ 9011              ; ----- ----- ----- ----- -----
 583+ 9011
 584+ 9011              Compara_coordenadas_X
 585+ 9011
 586+ 9011 06 03            ld b,3
 587+ 9013 11 34 89         ld de,Coordenadas_X_Entidad+2
 588+ 9016
 589+ 9016 1A               ld a,(de)
 590+ 9017 A7               and a
 591+ 9018 20 01            jr nz,2F
 592+ 901A 05               dec b
 593+ 901B
 594+ 901B 1B           2 dec de
 595+ 901C 1B               dec de
 596+ 901D 21 2F 89         ld hl,Coordenadas_X_Amadeus
 597+ 9020
 598+ 9020 D5           1 push de
 599+ 9021 E5               push hl
 600+ 9022 C5               push bc
 601+ 9023
 602+ 9023 CD 2D 90         call Comparando
 603+ 9026
 604+ 9026 C1               pop bc
 605+ 9027 E1               pop hl
 606+ 9028 D1               pop de
 607+ 9029
 608+ 9029 13               inc de
 609+ 902A 10 F4            djnz 1B
 610+ 902C
 611+ 902C C9               ret
 612+ 902D
 613+ 902D              ; ----- ----- ----- ----- -----
 614+ 902D              ;
 615+ 902D              ;   4/12/23
 616+ 902D              ;
 617+ 902D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 902D
 619+ 902D 06 03        Comparando ld b,3
 620+ 902F 1A               ld a,(de)
 621+ 9030 4E           2 ld c,(hl)
 622+ 9031 B9               cp c
 623+ 9032 28 04            jr z,1F
 624+ 9034 23               inc hl
 625+ 9035 10 F9            djnz 2B
 626+ 9037 C9               ret
 627+ 9038
 628+ 9038 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 903A 32 DD 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 903D 21 2A 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9040 CB D6            set 2,(hl)
 632+ 9042 C9               ret
 633+ 9043
 634+ 9043              ; -----------------------------------------------------------------------
 635+ 9043              ;
 636+ 9043              ;   7/12/23
 637+ 9043              ;
 638+ 9043
 639+ 9043              Detecta_colision_nave_entidad
 640+ 9043
 641+ 9043              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9043
 643+ 9043 FD 2A C8 88      ld iy,(Puntero_objeto)
 644+ 9047 2A EE 88         ld hl,(Puntero_de_impresion)
 645+ 904A
 646+ 904A E5               push hl
 647+ 904B
 648+ 904B              ; ----- ----- -----
 649+ 904B 1E 00            ld e,0                                         ; Indica impacto.
 650+ 904D 06 0A            ld b,10
 651+ 904F CD 7F 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9052 7B               ld a,e
 653+ 9053 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9055 38 0E            jr c,3F
 655+ 9057
 656+ 9057              ; LLegados a este punto:
 657+ 9057              ;
 658+ 9057              ;   HAY COLISIÓN !!!!!.
 659+ 9057              ;
 660+ 9057              ;   .db (Impacto) de Amadeus a "1".
 661+ 9057              ;   SET el bit3 de (Impacto2).
 662+ 9057              ;
 663+ 9057              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9057
 665+ 9057 21 DD 88         ld hl,Impacto
 666+ 905A 36 01            ld (hl),1
 667+ 905C 21 2A 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 905F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9061 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9063
 671+ 9063 18 18            jr 1F
 672+ 9065
 673+ 9065              ; -----
 674+ 9065
 675+ 9065 E1           3 pop hl
 676+ 9066 CD FC 95         call NextScan
 677+ 9069 E5               push hl
 678+ 906A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 906B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 906D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 906F 30 0C            jr nc,1F
 682+ 9071              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9071 10 DC            djnz 2B
 684+ 9073
 685+ 9073              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9073
 687+ 9073              ; LLegados a este punto:
 688+ 9073              ;
 689+ 9073              ;   NO HAY COLISIÓN !!!!!.
 690+ 9073              ;
 691+ 9073              ;   .db (Impacto) de Amadeus a "0".
 692+ 9073              ;   RES el bit2 de (Impacto2).
 693+ 9073              ;
 694+ 9073              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9073              ;   Lo colocamos a "0".
 696+ 9073
 697+ 9073 21 2A 89         ld hl,Impacto2
 698+ 9076 CB 96            res 2,(hl)
 699+ 9078 2A 2B 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 907B 36 00            ld (hl),0
 701+ 907D
 702+ 907D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 907E C9               ret
 704+ 907F
 705+ 907F               ; ---------- ----------
 706+ 907F
 707+ 907F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9080 3A C5 88         ld a,(Columns)
 709+ 9083 47               ld b,a
 710+ 9084 FD 7E 00     2 ld a,(iy)
 711+ 9087 BE               cp (hl)
 712+ 9088 28 01            jr z,1F
 713+ 908A
 714+ 908A 1C               inc e
 715+ 908B
 716+ 908B 23           1 inc hl
 717+ 908C FD 23            inc iy
 718+ 908E 10 F4            djnz 2B
 719+ 9090 C1               pop bc
 720+ 9091 C9               ret
 721+ 9092
 722+ 9092              ; -------------------------------------------------------------------------------------------------------------
 723+ 9092              ;
 724+ 9092              ;   13/03/23
 725+ 9092              ;
 726+ 9092              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9092              ;
 728+ 9092              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9092
 730+ 9092 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9095 7E               ld a,(hl)
 732+ 9096 A7               and a
 733+ 9097 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9098
 735+ 9098 44               ld b,h
 736+ 9099 4D               ld c,l
 737+ 909A 2A 1E 89         ld hl,(Stack_snapshot_disparos)
 738+ 909D E5               push hl
 739+ 909E A7               and a
 740+ 909F ED 42            sbc hl,bc
 741+ 90A1 E5               push hl
 742+ 90A2 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 90A3
 744+ 90A3 E1               pop hl
 745+ 90A4 54               ld d,h
 746+ 90A5 5D               ld e,l
 747+ 90A6 1B               dec de
 748+ 90A7 ED B8            lddr                                                ; Limpiamos.
 749+ 90A9
 750+ 90A9 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 90AC 22 1E 89         ld (Stack_snapshot_disparos),hl
 752+ 90AF
 753+ 90AF C9               ret
 754+ 90B0
 755+ 90B0              ; -------------------------------------------------------------------------------------------------------------
 756+ 90B0              ;
 757+ 90B0              ;   18/07/23
 758+ 90B0              ;
 759+ 90B0
 760+ 90B0              Motor_de_disparos
 761+ 90B0
 762+ 90B0              ; Gestiona DISPAROS DE AMADEUS.
 763+ 90B0
 764+ 90B0 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 90B3 2A 28 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 90B6
 767+ 90B6 CD 90 8C     2 call Extrae_address
 768+ 90B9 7E               ld a,(hl)
 769+ 90BA A7               and a
 770+ 90BB 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 90BD
 772+ 90BD              ; ----- ----- ----- ----- ----- -----
 773+ 90BD
 774+ 90BD C5               push bc
 775+ 90BE CD 82 91         call foto_disparo_a_borrar
 776+ 90C1
 777+ 90C1              ; Existe colisión con este disparo???
 778+ 90C1
 779+ 90C1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 90C2 7E               ld a,(hl)
 781+ 90C3 2B               dec hl
 782+ 90C4 E6 01            and 1
 783+ 90C6 28 1D            jr z,9F
 784+ 90C8
 785+ 90C8              ;   En este punto:
 786+ 90C8              ;
 787+ 90C8              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 90C8              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 90C8              ;   _con la entidad).
 790+ 90C8              ;
 791+ 90C8              ;   Disparo_2A defw 0                                ; Control.
 792+ 90C8              ;    defw 0                                          ; Puntero objeto.
 793+ 90C8              ;    defw 0                                          ; Puntero de impresión.
 794+ 90C8              ;    defw 0                                          ; Rutina de impresión.
 795+ 90C8
 796+ 90C8 E5               push hl
 797+ 90C9
 798+ 90C9 06 04            ld b,4
 799+ 90CB 23           19 inc hl
 800+ 90CC 10 FD            djnz 19B
 801+ 90CE
 802+ 90CE CD 90 8C         call Extrae_address
 803+ 90D1 CD D1 9C         call Genera_coordenadas_disparo
 804+ 90D4
 805+ 90D4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 90D4
 807+ 90D4 21 2D 89         ld hl,Coordenadas_disparo_certero
 808+ 90D7 72               ld (hl),d
 809+ 90D8 23               inc hl
 810+ 90D9 73               ld (hl),e
 811+ 90DA
 812+ 90DA              ; Elimino el disparo de la base de datos.
 813+ 90DA
 814+ 90DA E1               pop hl
 815+ 90DB CD 01 92         call Elimina_disparo_de_base_de_datos
 816+ 90DE 21 2A 89         ld hl,Impacto2
 817+ 90E1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 90E3
 819+ 90E3 18 06            jr 11F
 820+ 90E5
 821+ 90E5 CD AB 91     9 call Mueve_disparo
 822+ 90E8 CD 82 91         call foto_disparo_a_borrar
 823+ 90EB
 824+ 90EB C1           11 pop bc
 825+ 90EC 18 04            jr 7F
 826+ 90EE
 827+ 90EE              ; ----- ----- ----- ----- ----- -----
 828+ 90EE
 829+ 90EE ED 42        1 sbc hl,bc
 830+ 90F0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 90F2
 832+ 90F2 2A 28 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 90F5 23               inc hl
 834+ 90F6 23               inc hl
 835+ 90F7 22 28 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 90FA 18 BA            jr 2B
 837+ 90FC
 838+ 90FC CD 15 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 90FF              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 90FF
 841+ 90FF              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 90FF
 843+ 90FF 01 6A 85         ld bc,Disparo_11
 844+ 9102 2A 26 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9105
 846+ 9105 CD 90 8C     5 call Extrae_address
 847+ 9108 7E               ld a,(hl)
 848+ 9109 A7               and a
 849+ 910A 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 910C
 851+ 910C              ; ----- ----- ----- ----- ----- -----
 852+ 910C
 853+ 910C C5               push bc
 854+ 910D CD 82 91         call foto_disparo_a_borrar
 855+ 9110
 856+ 9110              ; Existe colisión con este disparo???
 857+ 9110
 858+ 9110 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9111 7E               ld a,(hl)
 860+ 9112 2B               dec hl
 861+ 9113 E6 01            and 1
 862+ 9115 28 4D            jr z,10F
 863+ 9117
 864+ 9117              ;! La colisión se produce con Amadeus???
 865+ 9117              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9117
 867+ 9117 E5               push hl
 868+ 9118
 869+ 9118 06 04            ld b,4
 870+ 911A 23           16 inc hl
 871+ 911B 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 911D
 873+ 911D CD 90 8C         call Extrae_address
 874+ 9120 CD D1 9C         call Genera_coordenadas_disparo
 875+ 9123
 876+ 9123 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9124 FE 16            cp $16
 878+ 9126 38 2A            jr c,15F
 879+ 9128
 880+ 9128
 881+ 9128              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9128
 883+ 9128 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9129
 885+ 9129              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9129
 887+ 9129 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 912C
 889+ 912C              ; Coordenada X de Amadeus en D.
 890+ 912C
 891+ 912C 7D               ld a,l
 892+ 912D E6 1F            and $1F
 893+ 912F 57               ld d,a
 894+ 9130
 895+ 9130 21 86 85         ld hl,Amadeus_db+8
 896+ 9133 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9134
 898+ 9134 21 2F 89         ld hl,Coordenadas_X_Amadeus
 899+ 9137 CD FD 8F         call Guarda_coordenadas_X
 900+ 913A
 901+ 913A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 913B
 903+ 913B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 913B
 905+ 913B 06 02            ld b,2
 906+ 913D C5           20 push bc
 907+ 913E
 908+ 913E 06 03            ld b,3
 909+ 9140 21 2F 89         ld hl,Coordenadas_X_Amadeus
 910+ 9143 7E           18 ld a,(hl)
 911+ 9144 BA               cp d
 912+ 9145 20 04            jr nz,17F
 913+ 9147
 914+ 9147              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9147
 916+ 9147 C1               pop bc
 917+ 9148 E1               pop hl
 918+ 9149 18 0D            jr 14F
 919+ 914B
 920+ 914B 23           17 inc hl
 921+ 914C 10 F5            djnz 18B
 922+ 914E
 923+ 914E 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 914F
 925+ 914F C1               pop bc
 926+ 9150 10 EB            djnz 20B
 927+ 9152
 928+ 9152
 929+ 9152              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9152              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9152
 932+ 9152 E1           15 pop hl
 933+ 9153 23               inc hl
 934+ 9154 35               dec (hl)
 935+ 9155 2B               dec hl
 936+ 9156 18 0C            jr 10F
 937+ 9158
 938+ 9158              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9158              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9158
 941+ 9158 E5           14 push hl
 942+ 9159 CD 01 92         call Elimina_disparo_de_base_de_datos
 943+ 915C 21 2A 89         ld hl,Impacto2
 944+ 915F CB CE            set 1,(hl)
 945+ 9161 E1               pop hl
 946+ 9162 18 06            jr 12F
 947+ 9164
 948+ 9164              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9164
 950+ 9164 CD AB 91     10 call Mueve_disparo
 951+ 9167 CD 82 91         call foto_disparo_a_borrar
 952+ 916A C1           12 pop bc
 953+ 916B
 954+ 916B 18 04            jr 8F
 955+ 916D
 956+ 916D              ; ----- ----- ----- ----- ----- -----
 957+ 916D
 958+ 916D ED 42        4 sbc hl,bc
 959+ 916F 28 0A            jr z,6F
 960+ 9171
 961+ 9171 2A 26 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9174 23               inc hl
 963+ 9175 23               inc hl
 964+ 9176 22 26 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9179 18 8A            jr 5B
 966+ 917B
 967+ 917B CD 0E 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 917E CD 06 90         call Limpia_Coordenadas_X
 969+ 9181 C9               ret
 970+ 9182
 971+ 9182              ; ------------------------------------------------------------------
 972+ 9182
 973+ 9182              foto_disparo_a_borrar
 974+ 9182
 975+ 9182 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9183 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9184 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9185
 979+ 9185 E5               push hl
 980+ 9186 23               inc hl
 981+ 9187 23               inc hl
 982+ 9188 ED 73 16 89      ld (Stack),sp
 983+ 918C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 918D FD E1            pop iy
 985+ 918F DD E1            pop ix
 986+ 9191 E1               pop hl
 987+ 9192 ED 7B 16 89      ld sp,(Stack)
 988+ 9196 3A 05 89         ld a,(Ctrl_1)
 989+ 9199 CB C7            set 0,a
 990+ 919B 32 05 89         ld (Ctrl_1),a
 991+ 919E CD A0 7F         call Guarda_foto_registros
 992+ 91A1 3A 05 89         ld a,(Ctrl_1)
 993+ 91A4 CB 87            res 0,a
 994+ 91A6 32 05 89         ld (Ctrl_1),a
 995+ 91A9 E1               pop hl
 996+ 91AA C9               ret
 997+ 91AB
 998+ 91AB              ;---------------------------------------------------
 999+ 91AB              ;
1000+ 91AB              ;   18/07/23
1001+ 91AB              ;
1002+ 91AB
1003+ 91AB              Mueve_disparo
1004+ 91AB
1005+ 91AB              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 91AB              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 91AB              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 91AB
1009+ 91AB E5               push hl
1010+ 91AC
1011+ 91AC 7E               ld a,(hl)
1012+ 91AD
1013+ 91AD 06 04            ld b,4
1014+ 91AF 23           1 inc hl
1015+ 91B0 10 FD            djnz 1B
1016+ 91B2
1017+ 91B2              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 91B2
1019+ 91B2 CD 90 8C         call Extrae_address
1020+ 91B5
1021+ 91B5 E6 01            and 1
1022+ 91B7 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 91B9
1024+ 91B9              ; Disparo hacia arriba, (Amadeus).
1025+ 91B9
1026+ 91B9              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 91B9              ; _ de la dificultad.
1028+ 91B9
1029+ 91B9 CD 0B 96         call PreviousScan
1030+ 91BC CD 0B 96         call PreviousScan
1031+ 91BF CD 0B 96         call PreviousScan
1032+ 91C2 CD 0B 96         call PreviousScan
1033+ 91C5
1034+ 91C5              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 91C5
1036+ 91C5 7C               ld a,h
1037+ 91C6 FE 40            cp $40
1038+ 91C8 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 91CA
1040+ 91CA              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 91CA
1042+ 91CA EB               ex de,hl
1043+ 91CB 06 04            ld b,4
1044+ 91CD 2B           6 dec hl
1045+ 91CE 10 FD            djnz 6B
1046+ 91D0
1047+ 91D0 CD 01 92         call Elimina_disparo_de_base_de_datos
1048+ 91D3 E1               pop hl
1049+ 91D4 18 10            jr 7F
1050+ 91D6
1051+ 91D6              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 91D6              ; HL contiene el puntero de impresión del disparo.
1053+ 91D6              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 91D6
1055+ 91D6 D5           3 push de
1056+ 91D7 C5               push bc
1057+ 91D8
1058+ 91D8 CD 94 8F         call Comprueba_Colision
1059+ 91DB
1060+ 91DB              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 91DB
1062+ 91DB 78               ld a,b
1063+ 91DC
1064+ 91DC C1               pop bc
1065+ 91DD D1               pop de
1066+ 91DE
1067+ 91DE EB               ex de,hl
1068+ 91DF
1069+ 91DF 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 91E0 23               inc hl                                      ; _ movimiento.
1071+ 91E1 72               ld (hl),d
1072+ 91E2
1073+ 91E2 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 91E3
1075+ 91E3 23               inc hl                                      ; _ en curso.
1076+ 91E4 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 91E5 2B               dec hl
1078+ 91E6
1079+ 91E6 C9           7 ret
1080+ 91E7
1081+ 91E7              ; Disparo hacia abajo, (Entidad).
1082+ 91E7
1083+ 91E7 3A 35 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 91EA 47               ld b,a
1085+ 91EB
1086+ 91EB CD FC 95     4 call NextScan
1087+ 91EE 10 FB            djnz 4B
1088+ 91F0
1089+ 91F0              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 91F0
1091+ 91F0 7C               ld a,h
1092+ 91F1 FE 58            cp $58
1093+ 91F3 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 91F5
1095+ 91F5 EB               ex de,hl
1096+ 91F6 06 04            ld b,4
1097+ 91F8 2B           5 dec hl
1098+ 91F9 10 FD            djnz 5B
1099+ 91FB
1100+ 91FB CD 01 92         call Elimina_disparo_de_base_de_datos
1101+ 91FE E1               pop hl
1102+ 91FF 18 E5            jr 7B
1103+ 9201
1104+ 9201              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9201
1106+ 9201 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9204 AF               xor a
1108+ 9205 77               ld (hl),a
1109+ 9206 54               ld d,h
1110+ 9207 5D               ld e,l
1111+ 9208 13               inc de
1112+ 9209 ED B0            ldir
1113+ 920B C9               ret
1114+ 920C
1115+ 920C              ; -----------------------------------------------------------------
1116+ 920C              ;
1117+ 920C              ;   7/12/23
1118+ 920C              ;
1119+ 920C
1120+ 920C 3A 2A 89     Selector_de_impactos ld a,(Impacto2)
1121+ 920F A7               and a
1122+ 9210 C8               ret z
1123+ 9211
1124+ 9211              ; Analizamos si hay impacto por disparos.
1125+ 9211
1126+ 9211              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9211
1128+ 9211 CB 4F            bit 1,a
1129+ 9213 28 07            jr z,1F
1130+ 9215
1131+ 9215 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9218 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 921A 18 08            jr 2F
1134+ 921C
1135+ 921C CB 47        1 bit 0,a
1136+ 921E C8               ret z
1137+ 921F
1138+ 921F              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 921F
1140+ 921F 21 05 89         ld hl,Ctrl_1
1141+ 9222 CB D6            set 2,(hl)
1142+ 9224
1143+ 9224 C9           2 ret
1144+ 9225
1145+ 9225              ; -----------------------------------------------------------------
1146+ 9225              ;
1147+ 9225              ;   25/04/23
1148+ 9225              ;
1149+ 9225
1150+ 9225              Determina_resultado_comparativa
1151+ 9225
1152+ 9225              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9225              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9225              ;
1155+ 9225              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9225              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9225              ;
1158+ 9225              ;   SBC HL,DE
1159+ 9225
1160+ 9225              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9225              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9225
1163+ 9225              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9225              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9225
1166+ 9225
1167+ 9225 3A D8 88         ld a,(Cuad_objeto)
1168+ 9228 FE 02            cp 2
1169+ 922A 28 26            jr z,2F
1170+ 922C 38 24            jr c,2F
1171+ 922E
1172+ 922E              ; Cuadrantes 3º y 4º
1173+ 922E
1174+ 922E E6 01            and 1
1175+ 9230 28 10            jr z,4F
1176+ 9232
1177+ 9232              ; Cuadrante 3º
1178+ 9232
1179+ 9232 7C               ld a,h
1180+ 9233 06 00            ld b,0
1181+ 9235
1182+ 9235 CD C0 92         call Compara_cositas_H3
1183+ 9238
1184+ 9238 04               inc b
1185+ 9239 05               dec b
1186+ 923A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 923B
1188+ 923B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 923C 06 00            ld b,0
1190+ 923E
1191+ 923E CD D2 92         call Compara_cositas_L3
1192+ 9241 C9               ret
1193+ 9242
1194+ 9242              ; Cuadrante 4º
1195+ 9242
1196+ 9242 7C           4 ld a,h
1197+ 9243 06 00            ld b,0
1198+ 9245
1199+ 9245 CD E4 92         call Compara_cositas_H4
1200+ 9248
1201+ 9248 04               inc b
1202+ 9249 05               dec b
1203+ 924A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 924B
1205+ 924B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 924C 06 00            ld b,0
1207+ 924E
1208+ 924E CD FA 92         call Compara_cositas_L4
1209+ 9251 C9               ret
1210+ 9252
1211+ 9252              ; Cuadrantes 1º y 2º.
1212+ 9252
1213+ 9252 28 10        2 jr z,3F
1214+ 9254
1215+ 9254              ; 1er Cuadrante
1216+ 9254
1217+ 9254 7C               ld a,h
1218+ 9255 06 00            ld b,0
1219+ 9257
1220+ 9257 CD 98 92         call Compara_cositas_H1
1221+ 925A
1222+ 925A 04               inc b
1223+ 925B 05               dec b
1224+ 925C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 925D
1226+ 925D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 925E 06 00            ld b,0
1228+ 9260
1229+ 9260 CD AE 92         call Compara_cositas_L1
1230+ 9263 C9               ret
1231+ 9264
1232+ 9264
1233+ 9264              ; 2º Cuadrante
1234+ 9264
1235+ 9264 7C           3 ld a,h
1236+ 9265 06 00            ld b,0
1237+ 9267
1238+ 9267 CD 74 92         call Compara_cositas_H2
1239+ 926A
1240+ 926A 04               inc b
1241+ 926B 05               dec b
1242+ 926C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 926D
1244+ 926D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 926E 06 00            ld b,0
1246+ 9270
1247+ 9270 CD 86 92         call Compara_cositas_L2
1248+ 9273 C9               ret
1249+ 9274
1250+ 9274 A7           Compara_cositas_H2 and a
1251+ 9275 28 0D            jr z,1F
1252+ 9277              ;    cp $fd
1253+ 9277              ;    jr z,1F
1254+ 9277              ;    cp $fe
1255+ 9277              ;    jr z,1F
1256+ 9277 FE FF            cp $ff
1257+ 9279 28 09            jr z,1F
1258+ 927B FE 01            cp $01
1259+ 927D 28 05            jr z,1F
1260+ 927F FE 02            cp $02
1261+ 9281 28 01            jr z,1F
1262+ 9283 C0               ret nz
1263+ 9284 04           1 inc b
1264+ 9285 C9               ret
1265+ 9286
1266+ 9286 A7           Compara_cositas_L2 and a
1267+ 9287 28 0D            jr z,1F
1268+ 9289              ;    cp $fd
1269+ 9289              ;    jr z,1F
1270+ 9289 FE FE            cp $fe
1271+ 928B 28 09            jr z,1F
1272+ 928D FE FF            cp $ff
1273+ 928F 28 05            jr z,1F
1274+ 9291 FE 01            cp $01
1275+ 9293 28 01            jr z,1F
1276+ 9295              ;    cp $02
1277+ 9295              ;    jr z,1F
1278+ 9295 C0               ret nz
1279+ 9296 04           1 inc b
1280+ 9297 C9               ret
1281+ 9298
1282+ 9298 A7           Compara_cositas_H1 and a
1283+ 9299 28 11            jr z,1F
1284+ 929B              ;    cp $fd
1285+ 929B              ;    jr z,1F
1286+ 929B              ;    cp $fe
1287+ 929B              ;    jr z,1F
1288+ 929B FE FF            cp $ff
1289+ 929D 28 0D            jr z,1F
1290+ 929F FE 01            cp $01
1291+ 92A1 28 09            jr z,1F
1292+ 92A3 FE 02            cp $02
1293+ 92A5 28 05            jr z,1F
1294+ 92A7 FE 03            cp $03
1295+ 92A9 28 01            jr z,1F
1296+ 92AB C0               ret nz
1297+ 92AC 04           1 inc b
1298+ 92AD C9               ret
1299+ 92AE
1300+ 92AE A7           Compara_cositas_L1 and a
1301+ 92AF 28 0D            jr z,1F
1302+ 92B1              ;    cp $fd
1303+ 92B1              ;    jr z,1F
1304+ 92B1              ;    cp $fe
1305+ 92B1              ;    jr z,1F
1306+ 92B1              ;    cp $ff
1307+ 92B1              ;    jr z,1F
1308+ 92B1 FE 01            cp $01
1309+ 92B3 28 09            jr z,1F
1310+ 92B5 FE 02            cp $02
1311+ 92B7 28 05            jr z,1F
1312+ 92B9 FE 03            cp $03
1313+ 92BB 28 01            jr z,1F
1314+ 92BD C0               ret nz
1315+ 92BE 04           1 inc b
1316+ 92BF C9               ret
1317+ 92C0
1318+ 92C0 A7           Compara_cositas_H3 and a
1319+ 92C1 28 0D            jr z,1F
1320+ 92C3              ;    cp $fd
1321+ 92C3              ;    jr z,1F
1322+ 92C3 FE FE            cp $fe
1323+ 92C5 28 09            jr z,1F
1324+ 92C7 FE FF            cp $ff
1325+ 92C9 28 05            jr z,1F
1326+ 92CB FE 01            cp $01
1327+ 92CD 28 01            jr z,1F
1328+ 92CF              ;    cp $02
1329+ 92CF              ;    jr z,1F
1330+ 92CF              ;    cp $03
1331+ 92CF              ;    jr z,1F
1332+ 92CF C0               ret nz
1333+ 92D0 04           1 inc b
1334+ 92D1 C9               ret
1335+ 92D2
1336+ 92D2 A7           Compara_cositas_L3 and a
1337+ 92D3 28 0D            jr z,1F
1338+ 92D5              ;    cp $fd
1339+ 92D5              ;    jr z,1F
1340+ 92D5              ;    cp $fe
1341+ 92D5              ;    jr z,1F
1342+ 92D5              ;    cp $ff
1343+ 92D5              ;    jr z,1F
1344+ 92D5 FE 01            cp $01
1345+ 92D7 28 09            jr z,1F
1346+ 92D9 FE 02            cp $02
1347+ 92DB 28 05            jr z,1F
1348+ 92DD FE 03            cp $03
1349+ 92DF 28 01            jr z,1F
1350+ 92E1 C0               ret nz
1351+ 92E2 04           1 inc b
1352+ 92E3 C9               ret
1353+ 92E4
1354+ 92E4 A7           Compara_cositas_H4 and a
1355+ 92E5 28 11            jr z,1F
1356+ 92E7 FE FD            cp $fd
1357+ 92E9 28 0D            jr z,1F
1358+ 92EB FE FE            cp $fe
1359+ 92ED 28 09            jr z,1F
1360+ 92EF FE FF            cp $ff
1361+ 92F1 28 05            jr z,1F
1362+ 92F3 FE 01            cp $01
1363+ 92F5 28 01            jr z,1F
1364+ 92F7              ;    cp $02
1365+ 92F7              ;    jr z,1F
1366+ 92F7              ;    cp $03
1367+ 92F7              ;    jr z,1F
1368+ 92F7 C0               ret nz
1369+ 92F8 04           1 inc b
1370+ 92F9 C9               ret
1371+ 92FA
1372+ 92FA A7           Compara_cositas_L4 and a
1373+ 92FB 28 0D            jr z,1F
1374+ 92FD              ;    cp $fd
1375+ 92FD              ;    jr z,1F
1376+ 92FD FE FE            cp $fe
1377+ 92FF 28 09            jr z,1F
1378+ 9301 FE FF            cp $ff
1379+ 9303 28 05            jr z,1F
1380+ 9305 FE 01            cp $01
1381+ 9307 28 01            jr z,1F
1382+ 9309              ;    cp $02
1383+ 9309              ;    jr z,1F
1384+ 9309              ;    cp $03
1385+ 9309              ;    jr z,1F
1386+ 9309 C0               ret nz
1387+ 930A 04           1 inc b
1388+ 930B C9               ret
# file closed: Disparo.asm
1654  930C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 930C              ; ******************************************************************************************************************************************************************************************
   2+ 930C              ;
   3+ 930C              ; 26/06/23
   4+ 930C              ;
   5+ 930C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 930C
   7+ 930C CD F0 95     Draw call Prepara_draw
   8+ 930F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9310 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9311 28 05        	jr z,2F
  11+ 9313
  12+ 9313 3A D8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9316 18 0C        	jr 1F
  14+ 9318
  15+ 9318 2A D6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 931B 22 C6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 931E CD AD 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9321              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9321 CD 5C 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9324
  21+ 9324 3A F2 88     1 ld a,(Ctrl_0)
  22+ 9327 CB 6F        	bit 5,a
  23+ 9329 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 932B
  25+ 932B CD 43 93     	call Comprueba_limite_horizontal
  26+ 932E CD D3 93     	call Comprueba_limite_vertical
  27+ 9331
  28+ 9331              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9331              ; -----------------------
  30+ 9331              ; -----------------------
  31+ 9331              ; -----------------------
  32+ 9331
  33+ 9331 CD 20 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9334 CD 57 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9337 CD B6 95     	call Define_rutina_de_impresion
  36+ 933A
  37+ 933A 3A F2 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 933D CB AF        	res 5,a											; _a ser de utilidad.
  39+ 933F 32 F2 88     	ld (Ctrl_0),a
  40+ 9342
  41+ 9342 C9           	ret
  42+ 9343
  43+ 9343              ; *******************************************************************************************************************************************************************************************
  44+ 9343              ;	21/01/23
  45+ 9343              ;
  46+ 9343              ; 	Comprueba_limite_horizontal.
  47+ 9343              ;
  48+ 9343              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9343              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9343              ;
  51+ 9343              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9343              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9343              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9343              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9343
  56+ 9343
  57+ 9343
  58+ 9343 3A F2 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9346 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9348 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 934A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 934C 32 F2 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 934F 18 09            jr 6F
  64+ 9351 CB 5F        1 bit 3,a
  65+ 9353 28 0A            jr z,2F
  66+ 9355 E6 F7            and $f7
  67+ 9357 32 F2 88         ld (Ctrl_0),a
  68+ 935A CD AD 94     6 call Inicializacion
  69+ 935D 18 5B            jr 5F
  70+ 935F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9360
  72+ 9360              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9360              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9360
  75+ 9360 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9361 2A 00 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9364 CD 0F 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9367 67           	ld h,a
  79+ 9368 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9369 CD 0F 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 936C 67           	ld h,a
  82+ 936D A7           	and a
  83+ 936E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9370 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9371 3A D8 88     	ld a,(Cuad_objeto)
  86+ 9374 FE 02        	cp 2
  87+ 9376 38 1E        	jr c,3F
  88+ 9378 28 1C        	jr z,3F
  89+ 937A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 937B 28 23            jr z,7F
  91+ 937D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 937F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9381 E1           	pop hl
  94+ 9382
  95+ 9382              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9382              ; _para indicar con E="2" en caso necesario.
  97+ 9382
  98+ 9382 E5               push hl
  99+ 9383 C5               push bc
 100+ 9384 CD 0F 99     	call calcula_tercio
 101+ 9387 FE 01        	cp 1
 102+ 9389 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 938B CD BB 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 938E 28 26            jr z,9F
 105+ 9390 38 24            jr c,9F
 106+ 9392 1E 00        11 ld e,0
 107+ 9394 18 22            jr 8F
 108+ 9396 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9397 28 07        	jr z, 7F
 110+ 9399 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 939B 1E 00         	ld e,0
 112+ 939D E1           	pop hl
 113+ 939E 18 04        	jr 4F
 114+ 93A0 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93A2 18 15            jr 10F
 116+ 93A4
 117+ 93A4              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93A4              ; _para indicar con E="2" en caso necesario.
 119+ 93A4
 120+ 93A4 E5           4 push hl
 121+ 93A5 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93A6 CD 0F 99     	call calcula_tercio
 123+ 93A9 FE 01        	cp 1
 124+ 93AB 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93AD CD BB 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93B0 28 04            jr z,9F
 127+ 93B2 30 02            jr nc,9F
 128+ 93B4 18 02        	jr 8F
 129+ 93B6 1E 02        9 ld e,2
 130+ 93B8 C1           8 pop bc
 131+ 93B9 E1           10 pop hl
 132+ 93BA C9           5 ret
 133+ 93BB
 134+ 93BB              ; --------------------
 135+ 93BB              ;
 136+ 93BB              ; 25/08/22
 137+ 93BB
 138+ 93BB CD 0F 99     Comprueba_centro call calcula_tercio
 139+ 93BE 67               ld h,a
 140+ 93BF 08           	ex af,af
 141+ 93C0 FE 02        	cp 2
 142+ 93C2 38 07        	jr c,1F
 143+ 93C4 28 05        	jr z,1F
 144+ 93C6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93C9 18 03        	jr 2F
 146+ 93CB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93CE 08           2 ex af,af
 148+ 93CF A7               and a
 149+ 93D0 ED 42            sbc hl,bc
 150+ 93D2 C9               ret
 151+ 93D3
 152+ 93D3              ; *********************************************************************************************************************************************************************************************
 153+ 93D3              ;
 154+ 93D3              ;   16/8/22
 155+ 93D3              ;
 156+ 93D3              ;	Comprueba_limite_vertical
 157+ 93D3              ;
 158+ 93D3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93D3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93D3              ;
 161+ 93D3
 162+ 93D3 2A C6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93D6 7D           	ld a,l
 164+ 93D7 E6 1F        	and $1F
 165+ 93D9 57           	ld d,a
 166+ 93DA 3A 02 89     	ld a,(Limite_vertical)
 167+ 93DD BA           	cp d 											; Límite - Posición.
 168+ 93DE 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 93DF 3A D8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 93E2 CB 47        	bit 0,a
 171+ 93E4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 93E6
 173+ 93E6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 93E6
 175+ 93E6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 93E7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 93E9
 178+ 93E9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 93E9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 93E9
 181+ 93E9 3A CA 88         ld a,(Coordenada_X)
 182+ 93EC 16 0F            ld d,Centro_izquierda
 183+ 93EE A7               and a
 184+ 93EF 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 93F0 28 1E            jr z,3F
 186+ 93F2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 93F4              ;                                                    ; _salimos sin modificar nada.
 188+ 93F4 18 0E            jr 2F
 189+ 93F6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 93F7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 93F9
 192+ 93F9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 93F9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 93F9
 195+ 93F9 3A CA 88         ld a,(Coordenada_X)
 196+ 93FC 16 10            ld d,Centro_derecha
 197+ 93FE A7               and a
 198+ 93FF 92               sub d
 199+ 9400 28 0E            jr z,3F
 200+ 9402 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9404              ;                                                    ; _salimos sin modificar nada.
 202+ 9404 CB 43        2 bit 0,e
 203+ 9406 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9408 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9409 CD 9D 94         call Modificaccionne
 206+ 940C C1           	pop bc
 207+ 940D CD AD 94         call Inicializacion
 208+ 9410 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9411
 210+ 9411              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9411
 212+ 9411 C5           4 push bc
 213+ 9412 01 C5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9415 0A           	ld a,(bc)
 215+ 9416 3D           	dec a
 216+ 9417 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9418 7D           	ld a,l
 218+ 9419 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 941A CB 47        	bit 0,a
 220+ 941C 28 03        	jr z,5F
 221+ 941E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 941F 18 2E        	jr 7F
 223+ 9421
 224+ 9421              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9421
 226+ 9421 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9422 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9423 3A F2 88     	ld a,(Ctrl_0)
 229+ 9426 CB 4F        	bit 1,a
 230+ 9428 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 942A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 942B
 233+ 942B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 942B
 235+ 942B 1C               inc e
 236+ 942C 1D               dec e
 237+ 942D 20 07            jr nz,12F
 238+ 942F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9430 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9431 22 C6 88     	ld (Posicion_actual),hl
 241+ 9434 18 44        13 jr 9F
 242+ 9436 CB 43        12 bit 0,e
 243+ 9438 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 943A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 943A C1           	pop bc
 246+ 943B 18 D3        	jr 3B
 247+ 943D 80           14 add b
 248+ 943E 6F               ld l,a
 249+ 943F 22 C6 88     	ld (Posicion_actual),hl
 250+ 9442 CD 9D 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9445 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9447 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9449 32 F2 88         ld (Ctrl_0),a
 254+ 944C F1           	pop af
 255+ 944D 18 2B        	jr 9F
 256+ 944F
 257+ 944F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 944F
 259+ 944F F5           7 push af
 260+ 9450 3A F2 88     	ld a,(Ctrl_0)
 261+ 9453 CB 47        	bit 0,a
 262+ 9455 20 1D        	jr nz,8F
 263+ 9457 F1           	pop af
 264+ 9458
 265+ 9458              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9458
 267+ 9458 1C           	inc e
 268+ 9459 1D               dec e
 269+ 945A 20 07            jr nz,10F
 270+ 945C 90           	sub b
 271+ 945D 6F               ld l,a
 272+ 945E 22 C6 88     	ld (Posicion_actual),hl
 273+ 9461 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9463              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9463 CB 43        10 bit 0,e
 276+ 9465 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9467              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9467 C1           	pop bc
 279+ 9468 18 A6        	jr 3B
 280+ 946A 90           16 sub b
 281+ 946B 6F               ld l,a
 282+ 946C 22 C6 88     	ld (Posicion_actual),hl
 283+ 946F CD 9D 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9472 18 06            jr 9F
 285+ 9474 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9476 32 F2 88         ld (Ctrl_0),a
 287+ 9479 F1           	pop af
 288+ 947A C1           9 pop bc
 289+ 947B 1E 00        	ld e,0
 290+ 947D CD AD 94         call Inicializacion
 291+ 9480 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9481 08           	ex af,af
 293+ 9482 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9483 18 8B            jr 3B
 295+ 9485
 296+ 9485              ; --------------------
 297+ 9485
 298+ 9485 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9487 CD 0B 96     1 call PreviousScan
 300+ 948A 10 FB            djnz 1B
 301+ 948C 22 C6 88     	ld (Posicion_actual),hl
 302+ 948F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9490 C9           	ret
 304+ 9491
 305+ 9491              ; --------------------
 306+ 9491
 307+ 9491 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9493 CD FC 95     1 call NextScan
 309+ 9496 10 FB            djnz 1B
 310+ 9498 22 C6 88     	ld (Posicion_actual),hl
 311+ 949B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 949C C9           	ret
 313+ 949D
 314+ 949D              ; --------------------
 315+ 949D              ;
 316+ 949D              ;	22/01/23
 317+ 949D              ;
 318+ 949D              ;	E="1". Hemos cambiado de cuadrante.
 319+ 949D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 949D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 949D
 322+ 949D
 323+ 949D              Modificaccionne
 324+ 949D
 325+ 949D 3A D8 88     	ld a,(Cuad_objeto)
 326+ 94A0 FE 02        	cp 2
 327+ 94A2 CC 85 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94A5 DC 85 94         call c,Modifica_Pos_actual
 329+ 94A8 C8           	ret z
 330+ 94A9 CD 91 94         call Modifica_Pos_actual2
 331+ 94AC C9               ret
 332+ 94AD
 333+ 94AD              ; *************************************************************************************************************************************************************************************************
 334+ 94AD              ;
 335+ 94AD              ;	13/8/22
 336+ 94AD              ;
 337+ 94AD              ;	Inicializacion
 338+ 94AD              ;
 339+ 94AD              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94AD              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94AD              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94AD              ;
 343+ 94AD              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94AD              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94AD              ;	_ desaparece/aparece.
 346+ 94AD
 347+ 94AD              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94AD              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94AD              ;
 350+ 94AD              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94AD              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94AD              ; 		   [E] ="0"
 353+ 94AD
 354+ 94AD              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94AD
 356+ 94AD CD 0F 99     Inicializacion call calcula_tercio
 357+ 94B0 28 36        	jr z,primit
 358+ 94B2 E6 02        	and 2
 359+ 94B4 20 07        	jr nz,segmit
 360+ 94B6 7D           	ld a,l
 361+ 94B7 FE 7F        	cp $7f
 362+ 94B9 38 2D        	jr c,primit
 363+ 94BB 28 2B        	jr z,primit
 364+ 94BD CD 1A 95     segmit call column
 365+ 94C0 38 13        	jr c,tercuad
 366+ 94C2 3E 04        cuarcuad ld a,4
 367+ 94C4 32 D8 88     	ld (Cuad_objeto),a
 368+ 94C7 21 20 48     	ld hl,$4820
 369+ 94CA 22 00 89     	ld (Limite_horizontal),hl
 370+ 94CD 21 02 89     	ld hl,Limite_vertical
 371+ 94D0 36 0D        	ld (hl),$0d
 372+ 94D2 08           	ex af,af
 373+ 94D3 18 3C        	jr 1F
 374+ 94D5              tercuad
 375+ 94D5 3E 03        	ld a,3
 376+ 94D7 32 D8 88     	ld (Cuad_objeto),a
 377+ 94DA 21 20 48     	ld hl,$4820
 378+ 94DD 22 00 89     	ld (Limite_horizontal),hl
 379+ 94E0 21 02 89     	ld hl,Limite_vertical
 380+ 94E3 36 12        	ld (hl),$12
 381+ 94E5 08           	ex af,af
 382+ 94E6 18 29        	jr 1F
 383+ 94E8 CD 1A 95     primit call column
 384+ 94EB 38 13        	jr c, primcuad
 385+ 94ED              segcuad
 386+ 94ED 3E 02        	ld a,2
 387+ 94EF 32 D8 88     	ld (Cuad_objeto),a
 388+ 94F2 21 C0 4F     	ld hl,$4fc0
 389+ 94F5 22 00 89     	ld (Limite_horizontal),hl
 390+ 94F8 21 02 89     	ld hl,Limite_vertical
 391+ 94FB 36 0D        	ld (hl),$0d
 392+ 94FD 08           	ex af,af
 393+ 94FE 18 11        	jr 1F
 394+ 9500              primcuad
 395+ 9500 3E 01        	ld a,1
 396+ 9502 32 D8 88     	ld (Cuad_objeto),a
 397+ 9505 21 C0 4F     	ld hl,$4fc0
 398+ 9508 22 00 89     	ld (Limite_horizontal),hl
 399+ 950B 21 02 89     	ld hl,Limite_vertical
 400+ 950E 36 12        	ld (hl),$12
 401+ 9510 08           	ex af,af
 402+ 9511 CD A6 9C     1 call Genera_coordenadas
 403+ 9514 21 F2 88     	ld hl,Ctrl_0
 404+ 9517 CB EE        	set 5,(hl)
 405+ 9519 C9           	ret
 406+ 951A
 407+ 951A              ; ------------------------------------------------------------------------------------------------------------------
 408+ 951A
 409+ 951A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 951A              ;
 411+ 951A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 951A
 413+ 951A 7D           column ld a,l
 414+ 951B E6 1F        	and $1f
 415+ 951D FE 10         	cp $10
 416+ 951F C9            	ret
 417+ 9520
 418+ 9520              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9520              ;
 420+ 9520              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9520              ;
 422+ 9520              ; 14/12/22
 423+ 9520              ;
 424+ 9520              ;	Modifica: A y BC.
 425+ 9520
 426+ 9520 3A D8 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9523 E6 01        	and 1
 428+ 9525 28 17        	jr z,1F
 429+ 9527
 430+ 9527              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9527
 432+ 9527 3A CA 88     	ld a,(Coordenada_X)
 433+ 952A 47           	ld b,a
 434+ 952B 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 952C 79           	ld a,c
 436+ 952D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 952E 38 08        	jr c,2F
 438+ 9530 47           	ld b,a
 439+ 9531 79           	ld a,c
 440+ 9532 90           	sub b
 441+ 9533 32 FF 88     	ld (Columnas),a
 442+ 9536 18 1B        	jr 4F
 443+ 9538 79           2 ld a,c
 444+ 9539 32 FF 88     	ld (Columnas),a
 445+ 953C 18 15        	jr 4F
 446+ 953E
 447+ 953E              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 953E
 449+ 953E 3A CA 88     1 ld a,(Coordenada_X)
 450+ 9541 81           	add c
 451+ 9542 3D           	dec a
 452+ 9543 D6 1F        	sub $1f
 453+ 9545 38 08        	jr c,3F
 454+ 9547 47           	ld b,a
 455+ 9548 79           	ld a,c
 456+ 9549 90           	sub b
 457+ 954A 32 FF 88     	ld (Columnas),a
 458+ 954D 18 04        	jr 4F
 459+ 954F 79           3 ld a,c
 460+ 9550 32 FF 88     	ld (Columnas),a
 461+ 9553 D9           4 exx
 462+ 9554 4F           	ld c,a
 463+ 9555 D9           	exx
 464+ 9556 C9            ret
 465+ 9557
 466+ 9557              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9557              ;
 468+ 9557              ;   19/7/23
 469+ 9557              ;
 470+ 9557              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9557              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9557              ;
 473+ 9557              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9557              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9557              ;
 476+ 9557              ;	DESTRUYE: HL,B Y A.
 477+ 9557
 478+ 9557 3A D8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 955A FE 02        	cp 2
 480+ 955C 38 18        	jr c,1F
 481+ 955E 28 16        	jr z,1F
 482+ 9560 E6 01        	and 1
 483+ 9562 28 0D        	jr z,3F
 484+ 9564
 485+ 9564              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9564
 487+ 9564 CD AA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9567
 489+ 9567 7D           9 ld a,l
 490+ 9568 E6 1F        	and $1f
 491+ 956A 28 2A        	jr z,7F
 492+ 956C 2B           	dec hl
 493+ 956D 10 F8        	djnz 9B
 494+ 956F 18 25        	jr 7F
 495+ 9571
 496+ 9571              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9571
 498+ 9571 2A C6 88     3 ld hl,(Posicion_actual)
 499+ 9574 18 20        	jr 7F
 500+ 9576
 501+ 9576 28 14        1 jr z,2F
 502+ 9578
 503+ 9578              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9578
 505+ 9578 CD AA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 957B
 507+ 957B 7D           4 ld a,l
 508+ 957C E6 1F        	and $1f
 509+ 957E 28 03        	jr z,6F
 510+ 9580 2B           	dec hl
 511+ 9581 10 F8        	djnz 4B
 512+ 9583 06 0F        6 ld b,15
 513+ 9585 CD 0B 96     5 call PreviousScan
 514+ 9588 10 FB        	djnz 5B
 515+ 958A 18 0A        	jr 7F
 516+ 958C
 517+ 958C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 958C
 519+ 958C CD AA 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 958F 06 0F        	ld b,15
 521+ 9591 CD 0B 96     8 call PreviousScan
 522+ 9594 10 FB        	djnz 8B
 523+ 9596
 524+ 9596 E5           7 push hl
 525+ 9597 DD E1        	pop ix
 526+ 9599
 527+ 9599 2A C8 88     	ld hl,(Puntero_objeto)
 528+ 959C E5           	push hl
 529+ 959D FD E1        	pop iy
 530+ 959F
 531+ 959F              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 959F
 533+ 959F 3A F2 88     	ld a,(Ctrl_0)
 534+ 95A2 CB 77        	bit 6,a
 535+ 95A4 C8           	ret z
 536+ 95A5
 537+ 95A5              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95A5              ; _ entidad / Amadeus´.
 539+ 95A5
 540+ 95A5 DD 22 A8 85  	ld (p.imp.amadeus),ix
 541+ 95A9
 542+ 95A9 C9           	ret
 543+ 95AA
 544+ 95AA              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95AA              ;
 546+ 95AA              ;	2/1/23
 547+ 95AA              ;
 548+ 95AA              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95AA              ;
 550+ 95AA              ;	Tras esta rutina tenemos:
 551+ 95AA              ;
 552+ 95AA              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95AA              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95AA              ;
 555+ 95AA              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95AA
 557+ 95AA 2A C6 88     Operandos ld hl,(Posicion_actual)
 558+ 95AD 3A FF 88     	ld a,(Columnas)
 559+ 95B0 3D           	dec a
 560+ 95B1 20 01        	jr nz,1F
 561+ 95B3 3C           	inc a
 562+ 95B4 47           1 ld b,a
 563+ 95B5 C9           	ret
 564+ 95B6
 565+ 95B6              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95B6              ;
 567+ 95B6              ;	3/1/23
 568+ 95B6              ;
 569+ 95B6              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95B6              ;
 571+ 95B6              ;	Destruye: A,B,HL y DE.
 572+ 95B6
 573+ 95B6              Define_rutina_de_impresion
 574+ 95B6
 575+ 95B6 3A C5 88     	ld a,(Columns)
 576+ 95B9 47           	ld b,a
 577+ 95BA 3A FF 88     	ld a,(Columnas)
 578+ 95BD B8           	cp b
 579+ 95BE 20 0D        	jr nz,2f
 580+ 95C0
 581+ 95C0              ;	La entidad se imprime entera.
 582+ 95C0
 583+ 95C0 21 DF 96     	ld hl, Indice_entidades_completas
 584+ 95C3 E6 01        	and 1
 585+ 95C5 28 02        	jr z,1F
 586+ 95C7
 587+ 95C7 23           	inc hl
 588+ 95C8 23           	inc hl
 589+ 95C9
 590+ 95C9 CD 90 8C     1 call Extrae_address
 591+ 95CC C9           	ret		;	ret
 592+ 95CD
 593+ 95CD              ;	La entidad no se imprime entera en pantalla.
 594+ 95CD
 595+ 95CD 3A D8 88     2 ld a,(Cuad_objeto)
 596+ 95D0 E6 01        	and 1
 597+ 95D2 28 17        	jr z,3F
 598+ 95D4
 599+ 95D4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95D4
 601+ 95D4 21 E3 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95D7 3A C5 88     4 ld a,(Columns)
 603+ 95DA E6 01        	and 1
 604+ 95DC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 95DE
 606+ 95DE 23           	inc hl
 607+ 95DF 23           	inc hl
 608+ 95E0
 609+ 95E0 3A FF 88     	ld a,(Columnas)
 610+ 95E3 E6 01        	and 1
 611+ 95E5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 95E7
 613+ 95E7 23           	inc hl
 614+ 95E8 23           	inc hl
 615+ 95E9
 616+ 95E9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 95EB
 618+ 95EB 21 E9 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 95EE 18 E7        	jr 4B
 620+ 95F0
 621+ 95F0              ; --------------------------------------------------------------------------------------------------------------------
 622+ 95F0              ;
 623+ 95F0              ;	Prepara_draw
 624+ 95F0              ;
 625+ 95F0              ;	Es una rutina de carga.
 626+ 95F0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 95F0              ;
 628+ 95F0              ;	FUNCIONAMIENTO:
 629+ 95F0              ;
 630+ 95F0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 95F0              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 95F0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 95F0              ;
 634+ 95F0              ;	DESTRUYE:
 635+ 95F0              ;
 636+ 95F0              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 95F0
 638+ 95F0 21 C4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 95F3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 95F4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 95F5 4E           	ld c,(hl)
 642+ 95F6 2A C6 88     	ld hl,(Posicion_actual)
 643+ 95F9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 95FB C9           	ret
 645+ 95FC
 646+ 95FC              ;----------------------------------------------------------------------------------------------------------------
 647+ 95FC              ;
 648+ 95FC              ;	5/08/22
 649+ 95FC              ;
 650+ 95FC              ;   NextScan.
 651+ 95FC              ;
 652+ 95FC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 95FC              ;
 654+ 95FC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 95FC              ;
 656+ 95FC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 95FC              ;
 658+ 95FC              ;       DESTRUIDOS: AF y HL !!!
 659+ 95FC              ;
 660+ 95FC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 95FC              ;
 662+ 95FC
 663+ 95FC 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 95FD 7C               ld a,h
 665+ 95FE E6 07            and 7
 666+ 9600 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9601
 668+ 9601 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9602 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9604 6F               ld l,a
 671+ 9605 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9606
 673+ 9606 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9607 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9609 67               ld h,a
 676+ 960A C9               ret
 677+ 960B
 678+ 960B              ;----------------------------------------------------------------------------------------------------------------
 679+ 960B              ;
 680+ 960B              ;	5/08/22
 681+ 960B              ;
 682+ 960B              ;   PreviousScan.
 683+ 960B              ;
 684+ 960B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 960B              ;
 686+ 960B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 960B              ;
 688+ 960B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 960B              ;
 690+ 960B              ;       DESTRUIDOS: AF y HL !!!
 691+ 960B              ;
 692+ 960B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 960B              ;
 694+ 960B
 695+ 960B 7C           PreviousScan ld a,h
 696+ 960C 25               dec h               ; Dec H.
 697+ 960D E6 07            and 7
 698+ 960F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9610
 700+ 9610 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9611 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9613 6F               ld l,a
 703+ 9614 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9615
 705+ 9615 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9616 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9618 67               ld h,a
 708+ 9619 C9               ret
 709+ 961A
 710+ 961A              ; -----------------------------------------------------------------------------------
 711+ 961A              ;
 712+ 961A              ;	31/7/23
 713+ 961A              ;
 714+ 961A              ;	Rutina principal de pintado de entidades.
 715+ 961A              ;	Extrae la foto del frame, (entidades).
 716+ 961A
 717+ 961A              Extrae_foto_entidades
 718+ 961A
 719+ 961A 21 01 70     	ld hl,Album_de_fotos+1
 720+ 961D 7E           	ld a,(hl)
 721+ 961E A7           	and a
 722+ 961F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9620
 724+ 9620              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9620
 726+ 9620 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9623 A7           	and a
 728+ 9624 C8           	ret z
 729+ 9625
 730+ 9625              ; -----------------------------------
 731+ 9625
 732+ 9625 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9629 31 00 70     	ld sp,Album_de_fotos
 734+ 962C
 735+ 962C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 962E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 962F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9630
 739+ 9630 ED 73 18 89  	ld (Stack_2),sp
 740+ 9634 ED 7B 16 89  	ld sp,(Stack)
 741+ 9638
 742+ 9638              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9638
 744+ 9638 3E CD        	ld a,$cd
 745+ 963A 32 42 96     	ld (Imprime),a
 746+ 963D EB           	ex de,hl
 747+ 963E 22 43 96     	ld (Imprime+1),hl
 748+ 9641 EB           	ex de,hl
 749+ 9642
 750+ 9642              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9642
 752+ 9642 00 00 00     Imprime db 0,0,0
 753+ 9645
 754+ 9645 ED 73 16 89  	ld (Stack),sp
 755+ 9649
 756+ 9649 3A 11 89     	ld a,(Numero_de_malotes)
 757+ 964C 3D           	dec a
 758+ 964D 28 09        	jr z,1F
 759+ 964F 32 11 89      	ld (Numero_de_malotes),a
 760+ 9652
 761+ 9652 ED 7B 18 89  	ld sp,(Stack_2)
 762+ 9656 18 D4        	jr 2B
 763+ 9658
 764+ 9658 AF           1 xor a
 765+ 9659 32 18 89     	ld (Stack_2),a
 766+ 965C
 767+ 965C C9           	ret
 768+ 965D
 769+ 965D              ; -----------------------------------------------------------------------------------
 770+ 965D              ;
 771+ 965D              ;	28/2/23
 772+ 965D              ;
 773+ 965D              ;	Pinta los disparos generados.
 774+ 965D
 775+ 965D              Extrae_foto_disparos
 776+ 965D
 777+ 965D 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 9660 7E               ld a,(hl)
 779+ 9661 A7               and a
 780+ 9662 C8               ret z
 781+ 9663
 782+ 9663 3A 25 89     	ld a,(Numero_de_disparotes)
 783+ 9666 A7           	and a
 784+ 9667 C8           	ret z
 785+ 9668 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 966C 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 966F
 788+ 966F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9671 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9672 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9673
 792+ 9673 ED 73 18 89  	ld (Stack_2),sp
 793+ 9677 ED 7B 16 89  	ld sp,(Stack)
 794+ 967B
 795+ 967B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 967B
 797+ 967B 3E CD        	ld a,$cd
 798+ 967D 32 85 96     	ld (Imprime2),a
 799+ 9680 EB           	ex de,hl
 800+ 9681 22 86 96     	ld (Imprime2+1),hl
 801+ 9684 EB           	ex de,hl
 802+ 9685
 803+ 9685              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 9685
 805+ 9685 00 00 00     Imprime2 db 0,0,0
 806+ 9688
 807+ 9688 3A 25 89     	ld a,(Numero_de_disparotes)
 808+ 968B 3D           	dec a
 809+ 968C 28 09        	jr z,1F
 810+ 968E 32 25 89      	ld (Numero_de_disparotes),a
 811+ 9691
 812+ 9691 ED 7B 18 89  	ld sp,(Stack_2)
 813+ 9695 18 D8        	jr 2B
 814+ 9697
 815+ 9697 AF           1 xor a
 816+ 9698 32 18 89     	ld (Stack_2),a
 817+ 969B C9           	ret
 818+ 969C
 819+ 969C              ; -----------------------------------------------------------------------------------
 820+ 969C              ;
 821+ 969C              ;	4/9/23
 822+ 969C              ;
 823+ 969C              ;	Rutina principal de pintado de Amadeus.
 824+ 969C              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 969C
 826+ 969C 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 969F 7E           	ld a,(hl)
 828+ 96A0 A7           	and a
 829+ 96A1 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96A2
 831+ 96A2 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96A5 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96A6 C8           	ret z
 834+ 96A7
 835+ 96A7              ; -----------------------------------
 836+ 96A7
 837+ 96A7 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96AB 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 96AE
 840+ 96AE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96B0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96B1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96B2
 844+ 96B2 ED 73 18 89  	ld (Stack_2),sp
 845+ 96B6 ED 7B 16 89  	ld sp,(Stack)
 846+ 96BA
 847+ 96BA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96BA
 849+ 96BA 3E CD        	ld a,$cd
 850+ 96BC 32 C4 96     	ld (Imprime_Amadeus),a
 851+ 96BF EB           	ex de,hl
 852+ 96C0 22 C5 96     	ld (Imprime_Amadeus+1),hl
 853+ 96C3 EB           	ex de,hl
 854+ 96C4
 855+ 96C4              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96C4
 857+ 96C4 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96C7
 859+ 96C7 ED 73 16 89  	ld (Stack),sp
 860+ 96CB
 861+ 96CB 3A 11 89     	ld a,(Numero_de_malotes)
 862+ 96CE 3D           	dec a
 863+ 96CF 28 09        	jr z,1F
 864+ 96D1 32 11 89      	ld (Numero_de_malotes),a
 865+ 96D4
 866+ 96D4 ED 7B 18 89  	ld sp,(Stack_2)
 867+ 96D8 18 D4        	jr 2B
 868+ 96DA
 869+ 96DA AF           1 xor a
 870+ 96DB 32 18 89     	ld (Stack_2),a
 871+ 96DE
 872+ 96DE C9           	ret
# file closed: Draw_XOR.asm
1655  96DF              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96DF              ;   índices de Rutinas de impresión.
   2+ 96DF
   3+ 96DF EF 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96E1 1C 97            defw Pinta_Amadeus_3x2
   5+ 96E3
   6+ 96E3 72 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96E5 12 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96E7 C6 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96E9
  10+ 96E9 9C 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96EB A0 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96ED 54 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96EF
  14+ 96EF
  15+ 96EF              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96EF              ;
  17+ 96EF              ;   12/12/22
  18+ 96EF              ;
  19+ 96EF              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96EF              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96EF              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96EF              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96EF              ;
  24+ 96EF              ;   Modifica: DE y HL.
  25+ 96EF
  26+ 96EF ED 73 16 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96F3 FD F9        	ld sp,iy
  28+ 96F5 06 10            ld b,16
  29+ 96F7 D1           1 pop de
  30+ 96F8 7B               ld a,e
  31+ 96F9 AE               xor (hl)
  32+ 96FA 77           	ld (hl),a
  33+ 96FB 23           	inc hl
  34+ 96FC 7A               ld a,d
  35+ 96FD AE               xor (hl)
  36+ 96FE 77           	ld (hl),a
  37+ 96FF 2B           	dec hl
  38+ 9700 24           	inc h
  39+ 9701 7C               ld a,h
  40+ 9702 E6 07            and 7
  41+ 9704 20 0A            jr nz,2F
  42+ 9706 7D               ld a,l
  43+ 9707 C6 20            add a,$20
  44+ 9709 6F               ld l,a
  45+ 970A 38 04            jr c,2F
  46+ 970C 7C               ld a,h
  47+ 970D D6 08            sub 8
  48+ 970F 67               ld h,a
  49+ 9710 7C           2 ld a,h
  50+ 9711 FE 58            cp $58
  51+ 9713 28 02            jr z,3F
  52+ 9715 10 E0            djnz 1B
  53+ 9717 ED 7B 16 89  3 ld sp,(Stack)
  54+ 971B C9           	ret
  55+ 971C
  56+ 971C ED 73 16 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9720 FD F9        	ld sp,iy
  58+ 9722 06 08            ld b,8
  59+ 9724 D1           1 pop de
  60+ 9725 7B               ld a,e
  61+ 9726 AE               xor (hl)
  62+ 9727 77           	ld (hl),a
  63+ 9728 23           	inc hl
  64+ 9729 7A               ld a,d
  65+ 972A AE               xor (hl)
  66+ 972B 77           	ld (hl),a
  67+ 972C 23           	inc hl
  68+ 972D D1           	pop de
  69+ 972E 7B               ld a,e
  70+ 972F AE               xor (hl)
  71+ 9730 77           	ld (hl),a
  72+ 9731 2B           	dec hl
  73+ 9732 2B           	dec hl
  74+ 9733 24           	inc h
  75+ 9734 7C               ld a,h
  76+ 9735 E6 07            and 7
  77+ 9737 20 0A            jr nz,2F
  78+ 9739 7D               ld a,l
  79+ 973A C6 20            add a,$20
  80+ 973C 6F               ld l,a
  81+ 973D 38 04            jr c,2F
  82+ 973F 7C               ld a,h
  83+ 9740 D6 08            sub 8
  84+ 9742 67               ld h,a
  85+ 9743 7C           2 ld a,h
  86+ 9744 FE 58            cp $58
  87+ 9746 28 25            jr z,4F
  88+ 9748 7A               ld a,d
  89+ 9749 AE               xor (hl)
  90+ 974A 77               ld (hl),a
  91+ 974B D1           	pop de
  92+ 974C 23           	inc hl
  93+ 974D 7B               ld a,e
  94+ 974E AE               xor (hl)
  95+ 974F 77           	ld (hl),a
  96+ 9750 23           	inc hl
  97+ 9751 7A               ld a,d
  98+ 9752 AE               xor (hl)
  99+ 9753 77           	ld (hl),a
 100+ 9754 2B           	dec hl
 101+ 9755 2B           	dec hl
 102+ 9756 24           	inc h
 103+ 9757 7C               ld a,h
 104+ 9758 E6 07            and 7
 105+ 975A 20 0A            jr nz,3F
 106+ 975C 7D               ld a,l
 107+ 975D C6 20            add a,$20
 108+ 975F 6F               ld l,a
 109+ 9760 38 04            jr c,3F
 110+ 9762 7C               ld a,h
 111+ 9763 D6 08            sub 8
 112+ 9765 67               ld h,a
 113+ 9766 7C           3 ld a,h
 114+ 9767 FE 58            cp $58
 115+ 9769 28 02            jr z,4F
 116+ 976B 10 B7            djnz 1B
 117+ 976D ED 7B 16 89  4 ld sp,(Stack)
 118+ 9771 C9           	ret
 119+ 9772
 120+ 9772              ; ---------------------------------------------------
 121+ 9772
 122+ 9772 ED 73 16 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9776 FD F9        	ld sp,iy
 124+ 9778
 125+ 9778              ; >>>
 126+ 9778
 127+ 9778 06 10            ld b,16
 128+ 977A D1           1 pop de
 129+ 977B 7A           	ld a,d
 130+ 977C AE           	xor (hl)
 131+ 977D 77           	ld (hl),a
 132+ 977E 24           	inc h
 133+ 977F 7C               ld a,h
 134+ 9780 E6 07            and 7
 135+ 9782 20 0C            jr nz,2F
 136+ 9784 7D               ld a,l
 137+ 9785 C6 20            add a,$20
 138+ 9787 6F               ld l,a
 139+ 9788 38 06            jr c,2F
 140+ 978A 7C               ld a,h
 141+ 978B D6 08            sub 8
 142+ 978D 67               ld h,a
 143+ 978E 18 00            jr 2F
 144+ 9790 7C           2 ld a,h
 145+ 9791 FE 58            cp $58
 146+ 9793 28 02            jr z,3F
 147+ 9795 10 E3            djnz 1B
 148+ 9797 ED 7B 16 89  3 ld sp,(Stack)
 149+ 979B C9           	ret
 150+ 979C
 151+ 979C ED 73 16 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97A0 FD F9        	ld sp,iy
 153+ 97A2
 154+ 97A2              ; >>>
 155+ 97A2
 156+ 97A2 06 10            ld b,16
 157+ 97A4 D1           1 pop de
 158+ 97A5 7B           	ld a,e
 159+ 97A6 AE           	xor (hl)
 160+ 97A7 77           	ld (hl),a
 161+ 97A8 24           	inc h
 162+ 97A9 7C               ld a,h
 163+ 97AA E6 07            and 7
 164+ 97AC 20 0C            jr nz,2F
 165+ 97AE 7D               ld a,l
 166+ 97AF C6 20            add a,$20
 167+ 97B1 6F               ld l,a
 168+ 97B2 38 06            jr c,2F
 169+ 97B4 7C               ld a,h
 170+ 97B5 D6 08            sub 8
 171+ 97B7 67               ld h,a
 172+ 97B8 18 00            jr 2F
 173+ 97BA 7C           2 ld a,h
 174+ 97BB FE 58            cp $58
 175+ 97BD 28 02            jr z,3F
 176+ 97BF 10 E3            djnz 1B
 177+ 97C1 ED 7B 16 89  3 ld sp,(Stack)
 178+ 97C5 C9           	ret
 179+ 97C6
 180+ 97C6              ; ---------------------------------------------------
 181+ 97C6
 182+ 97C6 ED 73 16 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97CA FD F9        	ld sp,iy
 184+ 97CC 06 08            ld b,8
 185+ 97CE D1           1 pop de
 186+ 97CF 7A           	ld a,d
 187+ 97D0 AE           	xor (hl)
 188+ 97D1 77           	ld (hl),a
 189+ 97D2 23           	inc hl
 190+ 97D3 D1           	pop de
 191+ 97D4 7B           	ld a,e
 192+ 97D5 AE           	xor (hl)
 193+ 97D6 77           	ld (hl),a
 194+ 97D7 2B           	dec hl
 195+ 97D8 24            	inc h
 196+ 97D9 7C               ld a,h
 197+ 97DA E6 07            and 7
 198+ 97DC 20 0A            jr nz,2F
 199+ 97DE 7D               ld a,l
 200+ 97DF C6 20            add a,$20
 201+ 97E1 6F               ld l,a
 202+ 97E2 38 04            jr c,2F
 203+ 97E4 7C               ld a,h
 204+ 97E5 D6 08            sub 8
 205+ 97E7 67               ld h,a
 206+ 97E8 7C           2 ld a,h
 207+ 97E9 FE 58            cp $58
 208+ 97EB 28 20            jr z,4F
 209+ 97ED D1               pop de
 210+ 97EE 7B           	ld a,e
 211+ 97EF AE           	xor (hl)
 212+ 97F0 77           	ld (hl),a
 213+ 97F1 23           	inc hl
 214+ 97F2 7A           	ld a,d
 215+ 97F3 AE           	xor (hl)
 216+ 97F4 77           	ld (hl),a
 217+ 97F5 2B           	dec hl
 218+ 97F6 24           	inc h
 219+ 97F7 7C               ld a,h
 220+ 97F8 E6 07            and 7
 221+ 97FA 20 0A            jr nz,3F
 222+ 97FC 7D               ld a,l
 223+ 97FD C6 20            add a,$20
 224+ 97FF 6F               ld l,a
 225+ 9800 38 04            jr c,3F
 226+ 9802 7C               ld a,h
 227+ 9803 D6 08            sub 8
 228+ 9805 67               ld h,a
 229+ 9806 7C           3 ld a,h
 230+ 9807 FE 58            cp $58
 231+ 9809 28 02            jr z,4F
 232+ 980B 10 C1            djnz 1B
 233+ 980D ED 7B 16 89  4 ld sp,(Stack)
 234+ 9811 C9           	ret
 235+ 9812
 236+ 9812 ED 73 16 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9816 FD F9        	ld sp,iy
 238+ 9818 06 08            ld b,8
 239+ 981A D1           1 pop de
 240+ 981B D1           	pop de
 241+ 981C 7B           	ld a,e
 242+ 981D AE           	xor (hl)
 243+ 981E 77           	ld (hl),a
 244+ 981F 24            	inc h
 245+ 9820 7C               ld a,h
 246+ 9821 E6 07            and 7
 247+ 9823 20 0A            jr nz,2F
 248+ 9825 7D               ld a,l
 249+ 9826 C6 20            add a,$20
 250+ 9828 6F               ld l,a
 251+ 9829 38 04            jr c,2F
 252+ 982B 7C               ld a,h
 253+ 982C D6 08            sub 8
 254+ 982E 67               ld h,a
 255+ 982F 7C           2 ld a,h
 256+ 9830 FE 58            cp $58
 257+ 9832 28 1B            jr z,4F
 258+ 9834 D1               pop de
 259+ 9835 7A           	ld a,d
 260+ 9836 AE           	xor (hl)
 261+ 9837 77           	ld (hl),a
 262+ 9838 24           	inc h
 263+ 9839 7C               ld a,h
 264+ 983A E6 07            and 7
 265+ 983C 20 0A            jr nz,3F
 266+ 983E 7D               ld a,l
 267+ 983F C6 20            add a,$20
 268+ 9841 6F               ld l,a
 269+ 9842 38 04            jr c,3F
 270+ 9844 7C               ld a,h
 271+ 9845 D6 08            sub 8
 272+ 9847 67               ld h,a
 273+ 9848 7C           3 ld a,h
 274+ 9849 FE 58            cp $58
 275+ 984B 28 02            jr z,4F
 276+ 984D 10 CB            djnz 1B
 277+ 984F ED 7B 16 89  4 ld sp,(Stack)
 278+ 9853 C9           	ret
 279+ 9854
 280+ 9854 ED 73 16 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9858 FD F9        	ld sp,iy
 282+ 985A 06 08            ld b,8
 283+ 985C D1           1 pop de
 284+ 985D 7B           	ld a,e
 285+ 985E AE           	xor (hl)
 286+ 985F 77           	ld (hl),a
 287+ 9860 23           	inc hl
 288+ 9861 7A           	ld a,d
 289+ 9862 AE           	xor (hl)
 290+ 9863 77           	ld (hl),a
 291+ 9864 2B           	dec hl
 292+ 9865 24             	inc h
 293+ 9866 7C               ld a,h
 294+ 9867 E6 07            and 7
 295+ 9869 20 0A            jr nz,2F
 296+ 986B 7D               ld a,l
 297+ 986C C6 20            add a,$20
 298+ 986E 6F               ld l,a
 299+ 986F 38 04            jr c,2F
 300+ 9871 7C               ld a,h
 301+ 9872 D6 08            sub 8
 302+ 9874 67               ld h,a
 303+ 9875 7C           2 ld a,h
 304+ 9876 FE 58            cp $58
 305+ 9878 28 21            jr z,4F
 306+ 987A D1               pop de
 307+ 987B 7A           	ld a,d
 308+ 987C AE           	xor (hl)
 309+ 987D 77           	ld (hl),a
 310+ 987E 23           	inc hl
 311+ 987F D1               pop de
 312+ 9880 7B           	ld a,e
 313+ 9881 AE           	xor (hl)
 314+ 9882 77           	ld (hl),a
 315+ 9883 2B           	dec hl
 316+ 9884 24           	inc h
 317+ 9885 7C               ld a,h
 318+ 9886 E6 07            and 7
 319+ 9888 20 0A            jr nz,3F
 320+ 988A 7D               ld a,l
 321+ 988B C6 20            add a,$20
 322+ 988D 6F               ld l,a
 323+ 988E 38 04            jr c,3F
 324+ 9890 7C               ld a,h
 325+ 9891 D6 08            sub 8
 326+ 9893 67               ld h,a
 327+ 9894 7C           3 ld a,h
 328+ 9895 FE 58            cp $58
 329+ 9897 28 02            jr z,4F
 330+ 9899 10 C1            djnz 1B
 331+ 989B ED 7B 16 89  4 ld sp,(Stack)
 332+ 989F C9           	ret
 333+ 98A0
 334+ 98A0 ED 73 16 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98A4 FD F9        	ld sp,iy
 336+ 98A6 06 08            ld b,8
 337+ 98A8 D1           1 pop de
 338+ 98A9 7B           	ld a,e
 339+ 98AA AE           	xor (hl)
 340+ 98AB 77           	ld (hl),a
 341+ 98AC 24            	inc h
 342+ 98AD 7C               ld a,h
 343+ 98AE E6 07            and 7
 344+ 98B0 20 0A            jr nz,2F
 345+ 98B2 7D               ld a,l
 346+ 98B3 C6 20            add a,$20
 347+ 98B5 6F               ld l,a
 348+ 98B6 38 04            jr c,2F
 349+ 98B8 7C               ld a,h
 350+ 98B9 D6 08            sub 8
 351+ 98BB 67               ld h,a
 352+ 98BC 7C           2 ld a,h
 353+ 98BD FE 58            cp $58
 354+ 98BF 28 1C            jr z,4F
 355+ 98C1 D1               pop de
 356+ 98C2 7A           	ld a,d
 357+ 98C3 AE           	xor (hl)
 358+ 98C4 77           	ld (hl),a
 359+ 98C5 24           	inc h
 360+ 98C6 7C               ld a,h
 361+ 98C7 E6 07            and 7
 362+ 98C9 20 0A            jr nz,3F
 363+ 98CB 7D               ld a,l
 364+ 98CC C6 20            add a,$20
 365+ 98CE 6F               ld l,a
 366+ 98CF 38 04            jr c,3F
 367+ 98D1 7C               ld a,h
 368+ 98D2 D6 08            sub 8
 369+ 98D4 67               ld h,a
 370+ 98D5 7C           3 ld a,h
 371+ 98D6 FE 58            cp $58
 372+ 98D8 28 03            jr z,4F
 373+ 98DA D1               pop de
 374+ 98DB 10 CB            djnz 1B
 375+ 98DD ED 7B 16 89  4 ld sp,(Stack)
 376+ 98E1 C9           	ret
 377+ 98E2
 378+ 98E2              ; ---------------------------------------------------
 379+ 98E2              ;
 380+ 98E2              ;   27/02/23
 381+ 98E2              ;
 382+ 98E2              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98E2              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98E2              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98E2
 386+ 98E2 ED 73 16 89  Pinta_Disparo ld (Stack),sp
 387+ 98E6 FD F9            ld sp,iy
 388+ 98E8 06 03            ld b,3
 389+ 98EA D1           1 pop de
 390+ 98EB 7B               ld a,e
 391+ 98EC AE               xor (hl)
 392+ 98ED 77               ld (hl),a
 393+ 98EE 23               inc hl
 394+ 98EF 7A               ld a,d
 395+ 98F0 AE               xor (hl)
 396+ 98F1 77               ld (hl),a
 397+ 98F2 2B               dec hl
 398+ 98F3
 399+ 98F3 24               inc h
 400+ 98F4 7C               ld a,h
 401+ 98F5 E6 07            and 7
 402+ 98F7 20 0A            jr nz,2F
 403+ 98F9 7D               ld a,l
 404+ 98FA C6 20            add a,$20
 405+ 98FC 6F               ld l,a
 406+ 98FD 38 04            jr c,2F
 407+ 98FF 7C               ld a,h
 408+ 9900 D6 08            sub 8
 409+ 9902 67               ld h,a
 410+ 9903 7C           2 ld a,h
 411+ 9904 FE 58            cp $58
 412+ 9906 28 02            jr z,3F
 413+ 9908
 414+ 9908 10 E0            djnz 1B
 415+ 990A ED 7B 16 89  3 ld sp,(Stack)
 416+ 990E C9               ret
 417+ 990F
# file closed: Rutinas_de_impresion_sprites.asm
1656  990F              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 990F              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 990F              ;
   3+ 990F              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 990F              ;
   5+ 990F              ; *****************************************************************************************************************************************************************************************
   6+ 990F              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 990F
   8+ 990F 7C           calcula_tercio ld a,h
   9+ 9910 E6 18        	and $18
  10+ 9912 CB 2F        	sra a
  11+ 9914 CB 2F        	sra a
  12+ 9916 CB 2F        	sra a
  13+ 9918 C9           	ret
  14+ 9919
# file closed: calcula_tercio.asm
1657  9919              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9919              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9919              ;
   3+ 9919              ;
   4+ 9919              ;	CLS.
   5+ 9919              ;
   6+ 9919              ;	Limpia la pantalla y define sus atributos.
   7+ 9919              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9919              ;
   9+ 9919              ;	COLORES: 0 ..... NEGRO
  10+ 9919              ;    		 1 ..... AZUL
  11+ 9919              ; 			 2 ..... ROJO
  12+ 9919              ;			 3 ..... MAGENTA
  13+ 9919              ; 			 4 ..... VERDE
  14+ 9919              ; 			 5 ..... CIAN
  15+ 9919              ;			 6 ..... AMARILLO
  16+ 9919              ; 			 7 ..... BLANCO
  17+ 9919              ;
  18+ 9919              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9919              ;
  20+ 9919              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9919
  22+ 9919
  23+ 9919 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 991C 11 01 40     	LD DE,$4001
  25+ 991F 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9922 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9924 ED B0        	LDIR
  28+ 9926 01 FF 02     	LD BC,767
  29+ 9929 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 992A ED B0        	LDIR
  31+ 992C C9           	ret
  32+ 992D
# file closed: Cls.asm
1658  992D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 992D              ; ******************************************************************************************************************************************************************************************
   2+ 992D              ;
   3+ 992D              ;   20/05/23
   4+ 992D              ;
   5+ 992D              ;	Recompone_posicion_inicio
   6+ 992D              ;
   7+ 992D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 992D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 992D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 992D              ;	_ a una u otra rutina.
  11+ 992D
  12+ 992D              Recompone_posicion_inicio
  13+ 992D
  14+ 992D 2A D6 88     	ld hl,(Posicion_inicio)
  15+ 9930 7D           	ld a,l
  16+ 9931 E6 1F        	and $1f
  17+ 9933 28 16        	jr z,1F
  18+ 9935
  19+ 9935 FE 1F        	cp $1f
  20+ 9937 28 0D        	jr z,3F
  21+ 9939
  22+ 9939 21 03 89     	ld hl,Ctrl_2
  23+ 993C CB C6        	set 0,(hl)
  24+ 993E 2A C8 88     	ld hl,(Puntero_objeto)
  25+ 9941 22 06 89     	ld (Repone_puntero_objeto),hl
  26+ 9944 18 08        	jr 2F
  27+ 9946
  28+ 9946 CD F3 9A     3 call Mov_left
  29+ 9949 18 03        	jr 2F
  30+ 994B
  31+ 994B CD D5 99     1 call Mov_right
  32+ 994E 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9951 22 C8 88     	ld (Puntero_objeto),hl
  34+ 9954 C9           	ret
  35+ 9955
  36+ 9955              ; ******************************************************************************************************************************************************************************************
  37+ 9955              ;
  38+ 9955              ;   27/05/23
  39+ 9955              ;
  40+ 9955              ;	Mov_down
  41+ 9955              ;
  42+ 9955              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9955              ;
  44+ 9955              ;
  45+ 9955              Mov_down
  46+ 9955
  47+ 9955 CD C3 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9958              ;																	; _ repone (Puntero_objeto).
  49+ 9958 21 F2 88     	ld hl,Ctrl_0
  50+ 995B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 995D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 995D              ; 																	; _ en el caso de que no lo haya.
  53+ 995D 3A DC 88     	ld a,(Vel_down)
  54+ 9960 47           	ld b,a
  55+ 9961 2A C6 88         ld hl,(Posicion_actual)
  56+ 9964 CD 0F 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9967 E6 02        	and 2
  58+ 9969 28 1B        	jr z,1F
  59+ 996B
  60+ 996B              ; Nos encontramos en el último tercio de pantalla.
  61+ 996B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 996B
  63+ 996B 7C           	ld a,h
  64+ 996C FE 57        	cp $57
  65+ 996E 20 16        	jr nz,1F
  66+ 9970
  67+ 9970 7D           	ld a,l
  68+ 9971 C6 20        	add $20
  69+ 9973 30 11        	jr nc,1F
  70+ 9975
  71+ 9975              ; ------------------------------
  72+ 9975              ;
  73+ 9975              ;	15/12/15
  74+ 9975
  75+ 9975              ;	call Reaparece_arriba
  76+ 9975 CD 80 9C     	call Reinicio
  77+ 9978
  78+ 9978              ;	Homos generado todos los movimientos posibles de esta entidad.
  79+ 9978              ;	Si se trata de una Entidad_guía dejará de serlo.
  80+ 9978
  81+ 9978 3A 03 89     	ld a,(Ctrl_2)
  82+ 997B CB 6F        	bit 5,a
  83+ 997D 28 0F        	jr z,3F
  84+ 997F
  85+ 997F CB AF        	res 5,a
  86+ 9981 32 03 89     	ld (Ctrl_2),a
  87+ 9984
  88+ 9984              ; ------------------------------
  89+ 9984
  90+ 9984 18 08        	jr 3F
  91+ 9986 CD FC 95     1 call NextScan
  92+ 9989 22 C6 88     	ld (Posicion_actual),hl
  93+ 998C 10 D6            djnz 2B
  94+ 998E CD A6 9C     3 call Genera_coordenadas
  95+ 9991 C9           	ret
  96+ 9992
  97+ 9992              ; ******************************************************************************************************************************************************************************************
  98+ 9992              ;
  99+ 9992              ;   27/05/23
 100+ 9992              ;
 101+ 9992              ;	Mov_up
 102+ 9992              ;
 103+ 9992              ; 	Mueve el Sprite hacia arriba.
 104+ 9992              ;
 105+ 9992              ;
 106+ 9992              Mov_up
 107+ 9992
 108+ 9992 CD C3 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 109+ 9995              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 110+ 9995 21 F2 88     	ld hl,Ctrl_0
 111+ 9998 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 112+ 999A              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 113+ 999A              ; 																		; _ en el caso de que no lo haya.
 114+ 999A 3A DB 88     	ld a,(Vel_up)
 115+ 999D 47           	ld b,a
 116+ 999E 2A C6 88     	ld hl,(Posicion_actual)
 117+ 99A1 CD 0F 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 118+ 99A4 A7           	and a
 119+ 99A5 20 10        	jr nz,1F
 120+ 99A7
 121+ 99A7              ; Nos encontramos en el 1er tercio de pantalla.
 122+ 99A7              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 123+ 99A7
 124+ 99A7 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 125+ 99A8 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 126+ 99AA 20 0B            jr nz,1F
 127+ 99AC 7D               ld a,l
 128+ 99AD D6 20            sub $20
 129+ 99AF 30 06            jr nc,1F
 130+ 99B1 25               dec h
 131+ 99B2
 132+ 99B2              ; -----------------------------
 133+ 99B2 CD 61 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 134+ 99B5              ;	call Reinicio
 135+ 99B5              ; -----------------------------
 136+ 99B5
 137+ 99B5 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 138+ 99B7 CD 0B 96     1 call PreviousScan
 139+ 99BA 22 C6 88     	ld (Posicion_actual),hl
 140+ 99BD 10 E2            djnz 3B
 141+ 99BF CD A6 9C     2 call Genera_coordenadas
 142+ 99C2 C9           	ret
 143+ 99C3
 144+ 99C3              ; -----------------------------
 145+ 99C3              ;
 146+ 99C3              ;	27/5/23
 147+ 99C3              ;
 148+ 99C3              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 149+ 99C3              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 150+ 99C3              ;
 151+ 99C3              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 152+ 99C3              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 153+ 99C3              ;
 154+ 99C3              ;	Modifica: A y (Puntero_objeto).
 155+ 99C3
 156+ 99C3 3A 03 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 157+ 99C6 CB 47        	bit 0,a
 158+ 99C8 C8           	ret z
 159+ 99C9 CB 87        	res 0,a
 160+ 99CB 32 03 89     	ld (Ctrl_2),a
 161+ 99CE 2A 06 89     	ld hl,(Repone_puntero_objeto)
 162+ 99D1 22 C8 88     	ld (Puntero_objeto),hl
 163+ 99D4 C9           	ret
 164+ 99D5
 165+ 99D5              ; ******************************************************************************************************************************************************************************************
 166+ 99D5              ;
 167+ 99D5              ;	19/10/22
 168+ 99D5              ;
 169+ 99D5              ;	Mov_right.
 170+ 99D5              ;
 171+ 99D5              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 172+ 99D5              ;
 173+ 99D5
 174+ 99D5 21 F2 88     Mov_right ld hl,Ctrl_0
 175+ 99D8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 176+ 99DA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 177+ 99DA              ; 																	; _ en el caso de que no lo haya.
 178+ 99DA 3A F2 88     	ld a,(Ctrl_0)
 179+ 99DD CB 77        	bit 6,a
 180+ 99DF 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 181+ 99E1
 182+ 99E1 CD 0F 9C     	call Stop_Amadeus_right
 183+ 99E4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 184+ 99E5 18 4D        	jr 8F
 185+ 99E7
 186+ 99E7 3A CA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 187+ 99EA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 188+ 99EC 20 46        	jr nz,8F
 189+ 99EE
 190+ 99EE 3A CC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 191+ 99F1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 192+ 99F2 28 40        	jr z,8F
 193+ 99F4
 194+ 99F4              ; ---------- ---------- ----------
 195+ 99F4              ;
 196+ 99F4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 197+ 99F4
 198+ 99F4 3A DA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 199+ 99F7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 200+ 99F9 28 11        	jr z,1F
 201+ 99FB 38 06        	jr c,6F
 202+ 99FD FE 04        	cp 4
 203+ 99FF 28 14        	jr z,7F
 204+ 9A01 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 205+ 9A03
 206+ 9A03              ; ---------- ---------- ----------
 207+ 9A03              ;
 208+ 9A03              ; Perfiles de velocidad
 209+ 9A03              ;
 210+ 9A03
 211+ 9A03 3A CC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 212+ 9A06 FE FE        	cp $fe
 213+ 9A08 20 2A        	jr nz,8F
 214+ 9A0A 18 10        	jr 3F
 215+ 9A0C 3A CC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 216+ 9A0F FE FD        	cp $fd
 217+ 9A11 20 21        	jr nz,8F
 218+ 9A13 18 07        	jr 3F
 219+ 9A15 3A CC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 220+ 9A18 FE FB        	cp $fb
 221+ 9A1A 20 18        	jr nz,8F
 222+ 9A1C
 223+ 9A1C              ; ---------- ---------- ----------
 224+ 9A1C
 225+ 9A1C              3
 226+ 9A1C CD 4F 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 227+ 9A1F              ;	call Reinicio
 228+ 9A1F
 229+ 9A1F              ; ---------- ---------- ----------
 230+ 9A1F              ;
 231+ 9A1F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 232+ 9A1F
 233+ 9A1F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 234+ 9A21 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 235+ 9A22 CD 3B 9A     	call DESPLZ_DER
 236+ 9A25 C1           	pop bc
 237+ 9A26 10 F9        	djnz 5B
 238+ 9A28 2A C6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 239+ 9A2B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 240+ 9A2C 22 C6 88     	ld (Posicion_actual),hl
 241+ 9A2F CD A6 9C     	call Genera_coordenadas
 242+ 9A32 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 243+ 9A34
 244+ 9A34              ; ---------- ---------- ----------
 245+ 9A34
 246+ 9A34 2A C6 88     8 ld hl,(Posicion_actual)
 247+ 9A37 CD 3B 9A     	call DESPLZ_DER
 248+ 9A3A C9           2 ret
 249+ 9A3B
 250+ 9A3B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 251+ 9A3B              ;
 252+ 9A3B              ;	22/9/22
 253+ 9A3B              ;
 254+ 9A3B
 255+ 9A3B CD 4A 9A     DESPLZ_DER call Desplaza_derecha
 256+ 9A3E CD 96 9A         call modifica_parametros_1er_DESPLZ_2
 257+ 9A41 CD BF 9A         call Ciclo_completo
 258+ 9A44 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 259+ 9A47 CB FE        	set 7,(hl)
 260+ 9A49 C9           	ret
 261+ 9A4A
 262+ 9A4A              ; ******************************************************************************************************************************************************************************************
 263+ 9A4A              ;	15/02/23
 264+ 9A4A              ;
 265+ 9A4A
 266+ 9A4A 3A DA 88     Desplaza_derecha ld a,(Vel_right)
 267+ 9A4D 47           	ld b,a
 268+ 9A4E 2A D2 88     	ld hl,(Puntero_DESPLZ_der)
 269+ 9A51 23           1 inc hl
 270+ 9A52 23           	inc hl
 271+ 9A53 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 272+ 9A55 22 D2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 273+ 9A58 CD 90 8C     	call Extrae_address
 274+ 9A5B 22 C8 88     	ld (Puntero_objeto),hl
 275+ 9A5E
 276+ 9A5E              ; Modifica (Puntero_DESPLZ_izq).
 277+ 9A5E
 278+ 9A5E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 279+ 9A5E              ; Cuántos movimientos hemos hecho ??
 280+ 9A5E              ; DE contiene (Puntero_DESPLZ_der).
 281+ 9A5E
 282+ 9A5E 2A CE 88     7 ld hl,(Indice_Sprite_der)
 283+ 9A61 EB           	ex de,hl
 284+ 9A62 A7           	and a
 285+ 9A63 ED 52        	sbc hl,de
 286+ 9A65 CB 3D        	srl l
 287+ 9A67 3E 08        6 ld a,8
 288+ 9A69 95           	sub l
 289+ 9A6A 30 1E        	jr nc,3F
 290+ 9A6C
 291+ 9A6C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 292+ 9A6C              ; B="0".
 293+ 9A6C
 294+ 9A6C 04           4 inc b
 295+ 9A6D 3C           	inc a
 296+ 9A6E 20 FC        	jr nz,4B
 297+ 9A70 78           	ld a,b
 298+ 9A71 08           	ex af,af
 299+ 9A72 2A CE 88     	ld hl,(Indice_Sprite_der)
 300+ 9A75 23           5 inc hl
 301+ 9A76 23           	inc hl
 302+ 9A77 10 FC        	djnz 5B
 303+ 9A79 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 304+ 9A7C CD 90 8C     	call Extrae_address
 305+ 9A7F 22 C8 88     	ld (Puntero_objeto),hl
 306+ 9A82
 307+ 9A82              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 308+ 9A82              ; _(Posicion_actual).
 309+ 9A82
 310+ 9A82 21 C6 88     	ld hl,Posicion_actual
 311+ 9A85 34           	inc (hl)
 312+ 9A86 08               ex af,af
 313+ 9A87 6F           	ld l,a
 314+ 9A88 18 DD        	jr 6B
 315+ 9A8A
 316+ 9A8A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 317+ 9A8A
 318+ 9A8A 47           3 ld b,a
 319+ 9A8B 2A D0 88     	ld hl,(Indice_Sprite_izq)
 320+ 9A8E 23           2 inc hl
 321+ 9A8F 23           	inc hl
 322+ 9A90 10 FC        	djnz 2B
 323+ 9A92 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 324+ 9A95 C9           8 ret
 325+ 9A96
 326+ 9A96              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 327+ 9A96              ;
 328+ 9A96              ;	24/7/22
 329+ 9A96              ;
 330+ 9A96              ;	modifica_parametros_1er_DESPLZ_2
 331+ 9A96              ;
 332+ 9A96              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 333+ 9A96              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 334+ 9A96              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 335+ 9A96
 336+ 9A96 3A CC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 337+ 9A99 A7           	and a
 338+ 9A9A 20 1F        	jr nz,1F
 339+ 9A9C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 340+ 9A9E 32 CC 88         ld (CTRL_DESPLZ),a
 341+ 9AA1
 342+ 9AA1 21 C5 88     	ld hl,Columns
 343+ 9AA4 34           	inc (hl)
 344+ 9AA5 3A D8 88     	ld a,(Cuad_objeto)
 345+ 9AA8 E6 01        	and 1
 346+ 9AAA 28 0F        	jr z,1F
 347+ 9AAC 2A C6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 348+ 9AAF 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 349+ 9AB0 22 C6 88     	ld (Posicion_actual),hl
 350+ 9AB3 CD A6 9C     	call Genera_coordenadas
 351+ 9AB6 CD 1B 9C     	call Inc_CTRL_DESPLZ
 352+ 9AB9 18 03        	jr 2F
 353+ 9ABB CD 1B 9C     1 call Inc_CTRL_DESPLZ
 354+ 9ABE C9           2 ret
 355+ 9ABF
 356+ 9ABF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 357+ 9ABF              ;
 358+ 9ABF              ;	24/7/22
 359+ 9ABF              ;
 360+ 9ABF              ;	Ciclo_completo.
 361+ 9ABF              ;
 362+ 9ABF              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 363+ 9ABF              ;
 364+ 9ABF              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 365+ 9ABF              ; 	Decrementamos (Columns).
 366+ 9ABF              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 367+ 9ABF              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 368+ 9ABF
 369+ 9ABF
 370+ 9ABF 3A CC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 371+ 9AC2 FE FF        	cp $ff
 372+ 9AC4 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 373+ 9AC6 E6 F0        	and $f0
 374+ 9AC8 20 28        	jr nz,3F
 375+ 9ACA
 376+ 9ACA              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 377+ 9ACA
 378+ 9ACA 3A CC 88     	ld a,(CTRL_DESPLZ)
 379+ 9ACD 47           	ld b,a
 380+ 9ACE 3E F8        	ld a,$f8
 381+ 9AD0 80           	add b
 382+ 9AD1 32 CC 88     	ld (CTRL_DESPLZ),a
 383+ 9AD4 18 1C        	jr 3F
 384+ 9AD6 21 C5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 385+ 9AD9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 386+ 9ADA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 387+ 9ADB 32 CC 88     	ld (CTRL_DESPLZ),a
 388+ 9ADE 3A D8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 389+ 9AE1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 390+ 9AE3 20 0A        	jr nz,2F
 391+ 9AE5 2A C6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 392+ 9AE8 23           	inc hl
 393+ 9AE9 22 C6 88     	ld (Posicion_actual),hl
 394+ 9AEC CD A6 9C     	call Genera_coordenadas
 395+ 9AEF
 396+ 9AEF              ; Inicia el puntero de Sprite.
 397+ 9AEF
 398+ 9AEF CD A7 8C     2 call Inicia_puntero_objeto_der
 399+ 9AF2 C9           3 ret
 400+ 9AF3
 401+ 9AF3              ; ******************************************************************************************************************************************************************************************
 402+ 9AF3              ;
 403+ 9AF3              ;	15/02/23
 404+ 9AF3              ;
 405+ 9AF3              ;	Mov_left.
 406+ 9AF3              ;
 407+ 9AF3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 408+ 9AF3              ;
 409+ 9AF3              Mov_left
 410+ 9AF3
 411+ 9AF3 21 F2 88     	ld hl,Ctrl_0
 412+ 9AF6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 413+ 9AF8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 414+ 9AF8              ; 																	; _ en el caso de que no lo haya.
 415+ 9AF8 3A F2 88     	ld a,(Ctrl_0)
 416+ 9AFB CB 77        	bit 6,a
 417+ 9AFD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 418+ 9AFF
 419+ 9AFF CD 15 9C     	call Stop_Amadeus_left
 420+ 9B02 C8           	ret z
 421+ 9B03 20 4A        	jr nz,8F
 422+ 9B05
 423+ 9B05 3A CA 88     11 ld a,(Coordenada_X)
 424+ 9B08 A7           	and a
 425+ 9B09 20 44        	jr nz,8F
 426+ 9B0B
 427+ 9B0B 3A CC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 428+ 9B0E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 429+ 9B0F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 430+ 9B11
 431+ 9B11              ; ---------- ---------- ----------
 432+ 9B11
 433+ 9B11 3A D9 88     	ld a,(Vel_left)
 434+ 9B14 FE 02        	cp 2
 435+ 9B16 28 0F        	jr z,1F
 436+ 9B18 38 04        	jr c,6F
 437+ 9B1A FE 04        	cp 4
 438+ 9B1C 28 12        	jr z,7F
 439+ 9B1E
 440+ 9B1E              ; ---------- ---------- ----------
 441+ 9B1E
 442+ 9B1E 3A CC 88     6 ld a,(CTRL_DESPLZ)
 443+ 9B21 FE F8        	cp $f8
 444+ 9B23 20 2A        	jr nz,8F
 445+ 9B25 18 10        	jr 4F
 446+ 9B27 3A CC 88     1 ld a,(CTRL_DESPLZ)
 447+ 9B2A FE F9        	cp $f9
 448+ 9B2C 20 21        	jr nz,8F
 449+ 9B2E 18 07        	jr 4F
 450+ 9B30 3A CC 88     7 ld a,(CTRL_DESPLZ)
 451+ 9B33 FE FB        	cp $fb
 452+ 9B35 20 18        	jr nz,8F
 453+ 9B37
 454+ 9B37              ; ---------- ---------- ----------
 455+ 9B37
 456+ 9B37              4
 457+ 9B37 CD 3D 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 458+ 9B3A              ;	call Reinicio
 459+ 9B3A
 460+ 9B3A              ; ---------- ---------- ----------
 461+ 9B3A
 462+ 9B3A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 463+ 9B3C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 464+ 9B3D
 465+ 9B3D              ;	ld hl,(Indice_Sprite_izq)
 466+ 9B3D              ;	ld (Puntero_DESPLZ_izq),hl
 467+ 9B3D
 468+ 9B3D CD 56 9B     	call DESPLZ_IZQ
 469+ 9B40 C1           	pop bc
 470+ 9B41 10 F9        	djnz 5B
 471+ 9B43 2A C6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 472+ 9B46 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 473+ 9B47 22 C6 88     	ld (Posicion_actual),hl
 474+ 9B4A CD A6 9C     	call Genera_coordenadas
 475+ 9B4D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 476+ 9B4F
 477+ 9B4F              ; ---------- ---------- ----------
 478+ 9B4F
 479+ 9B4F              ; Movemos, no hay recolocación.
 480+ 9B4F
 481+ 9B4F 2A C6 88     8 ld hl,(Posicion_actual)
 482+ 9B52 CD 56 9B     	call DESPLZ_IZQ
 483+ 9B55 C9           2 ret
 484+ 9B56
 485+ 9B56              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 486+ 9B56              ;
 487+ 9B56              ;	22/9/22
 488+ 9B56
 489+ 9B56              DESPLZ_IZQ
 490+ 9B56
 491+ 9B56 CD 65 9B     	call Desplaza_izquierda
 492+ 9B59 CD B1 9B         call modifica_parametros_1er_DESPLZ
 493+ 9B5C CD D9 9B     	call Ciclo_completo_2
 494+ 9B5F 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 495+ 9B62 CB BE        	res 7,(hl)
 496+ 9B64 C9           	ret
 497+ 9B65
 498+ 9B65              Desplaza_izquierda
 499+ 9B65
 500+ 9B65 3A D9 88     	ld a,(Vel_left)
 501+ 9B68 47           	ld b,a
 502+ 9B69 2A D4 88     	ld hl,(Puntero_DESPLZ_izq)
 503+ 9B6C 23           1 inc hl
 504+ 9B6D 23           	inc hl
 505+ 9B6E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 506+ 9B70 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 507+ 9B73 CD 90 8C     	call Extrae_address
 508+ 9B76 22 C8 88     	ld (Puntero_objeto),hl
 509+ 9B79
 510+ 9B79              ; Modifica (Puntero_DESPLZ_der).
 511+ 9B79
 512+ 9B79              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 513+ 9B79              ; Cuántos movimientos hemos hecho ??
 514+ 9B79              ; DE contiene (Puntero_DESPLZ_izq).
 515+ 9B79
 516+ 9B79 2A D0 88     7 ld hl,(Indice_Sprite_izq)
 517+ 9B7C EB           	ex de,hl
 518+ 9B7D A7           	and a
 519+ 9B7E ED 52        	sbc hl,de
 520+ 9B80 CB 3D        	srl l
 521+ 9B82 3E 08        6 ld a,8
 522+ 9B84 95           	sub l
 523+ 9B85 30 1E        	jr nc,3F
 524+ 9B87
 525+ 9B87              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 526+ 9B87              ; B="0".
 527+ 9B87
 528+ 9B87 04           4 inc b
 529+ 9B88 3C           	inc a
 530+ 9B89 20 FC        	jr nz,4B
 531+ 9B8B 78           	ld a,b
 532+ 9B8C 08           	ex af,af
 533+ 9B8D 2A D0 88     	ld hl,(Indice_Sprite_izq)
 534+ 9B90 23           5 inc hl
 535+ 9B91 23           	inc hl
 536+ 9B92 10 FC        	djnz 5B
 537+ 9B94 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 538+ 9B97 CD 90 8C     	call Extrae_address
 539+ 9B9A 22 C8 88     	ld (Puntero_objeto),hl
 540+ 9B9D
 541+ 9B9D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 542+ 9B9D              ; _(Posicion_actual).
 543+ 9B9D
 544+ 9B9D 21 C6 88     	ld hl,Posicion_actual
 545+ 9BA0 35           	dec (hl)
 546+ 9BA1 08           	ex af,af
 547+ 9BA2 6F           	ld l,a
 548+ 9BA3 18 DD        	jr 6B
 549+ 9BA5
 550+ 9BA5              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 551+ 9BA5
 552+ 9BA5 47           3 ld b,a
 553+ 9BA6 2A CE 88     	ld hl,(Indice_Sprite_der)
 554+ 9BA9 23           2 inc hl
 555+ 9BAA 23           	inc hl
 556+ 9BAB 10 FC        	djnz 2B
 557+ 9BAD 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 558+ 9BB0 C9           8 ret
 559+ 9BB1
 560+ 9BB1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 561+ 9BB1              ;
 562+ 9BB1              ;	modifica_parametros_1er_DESPLZ
 563+ 9BB1              ;
 564+ 9BB1              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 565+ 9BB1              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 566+ 9BB1              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 567+ 9BB1
 568+ 9BB1 3A CC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 569+ 9BB4 A7           	and a
 570+ 9BB5 20 1E        	jr nz,1F
 571+ 9BB7 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 572+ 9BB8 32 CC 88         ld (CTRL_DESPLZ),a
 573+ 9BBB 21 C5 88     	ld hl,Columns
 574+ 9BBE 34           	inc (hl)
 575+ 9BBF 3A D8 88     	ld a,(Cuad_objeto)
 576+ 9BC2 E6 01        	and 1
 577+ 9BC4 20 0F        	jr nz,1F
 578+ 9BC6 2A C6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 579+ 9BC9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 580+ 9BCA 22 C6 88     	ld (Posicion_actual),hl
 581+ 9BCD CD A6 9C     	call Genera_coordenadas
 582+ 9BD0 CD 2C 9C     	call Dec_CTRL_DESPLZ
 583+ 9BD3 18 03        	jr 2F
 584+ 9BD5 CD 2C 9C     1 call Dec_CTRL_DESPLZ
 585+ 9BD8 C9           2 ret
 586+ 9BD9
 587+ 9BD9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 588+ 9BD9
 589+ 9BD9 3A CC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 590+ 9BDC FE F7        	cp $f7
 591+ 9BDE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 592+ 9BE0 30 2C        	jr nc,3F
 593+ 9BE2
 594+ 9BE2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 595+ 9BE2
 596+ 9BE2 06 00        	ld b,0
 597+ 9BE4 04           4 inc b
 598+ 9BE5 3C           	inc a
 599+ 9BE6 FE F7        	cp $f7
 600+ 9BE8 20 FA        	jr nz,4B
 601+ 9BEA 3E FF        	ld a,$ff
 602+ 9BEC 90           	sub b
 603+ 9BED 32 CC 88     	ld (CTRL_DESPLZ),a
 604+ 9BF0 18 1C        	jr 3F
 605+ 9BF2
 606+ 9BF2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 607+ 9BF2
 608+ 9BF2 21 C5 88     1 ld hl,Columns
 609+ 9BF5 35           	dec (hl)
 610+ 9BF6 AF           	xor a
 611+ 9BF7 32 CC 88     	ld (CTRL_DESPLZ),a
 612+ 9BFA 3A D8 88     	ld a,(Cuad_objeto)
 613+ 9BFD E6 01        	and 1
 614+ 9BFF 28 0A        	jr z,2F
 615+ 9C01 2A C6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 616+ 9C04 2B           	dec hl
 617+ 9C05 22 C6 88     	ld (Posicion_actual),hl
 618+ 9C08 CD A6 9C     	call Genera_coordenadas
 619+ 9C0B
 620+ 9C0B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 621+ 9C0B
 622+ 9C0B CD BA 8C     2 call Inicia_puntero_objeto_izq
 623+ 9C0E C9           3 ret
 624+ 9C0F
 625+ 9C0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 626+ 9C0F              ;
 627+ 9C0F              ;	19/10/22
 628+ 9C0F              ;
 629+ 9C0F              ;	(cp 29) para un Amadeus de 3 Columns.
 630+ 9C0F              ;	(cp 30)   ""  ""    ""     2 Columns.
 631+ 9C0F
 632+ 9C0F 3A CA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 633+ 9C12 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 634+ 9C14 C9           	ret
 635+ 9C15
 636+ 9C15              ; ---------- ---------- ---------- ---------- ---------- ----------
 637+ 9C15              ;
 638+ 9C15              ;	19/10/22
 639+ 9C15              ;
 640+ 9C15              ;	(cp 2) para un Amadeus de 3 Columns.
 641+ 9C15              ;	(cp 1)   ""  ""    ""     2 Columns.
 642+ 9C15
 643+ 9C15 3A CA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 644+ 9C18 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 645+ 9C1A C9           	ret
 646+ 9C1B
 647+ 9C1B              ; ---------- ---------- ---------- ---------- ---------- ----------
 648+ 9C1B              ;
 649+ 9C1B              ;	24/7/22
 650+ 9C1B              ;
 651+ 9C1B              ;	Inc_CTRL_DESPLZ
 652+ 9C1B              ;
 653+ 9C1B              ;
 654+ 9C1B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 655+ 9C1B
 656+ 9C1B 21 CC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 657+ 9C1E 3A DA 88     	ld a,(Vel_right)
 658+ 9C21 A7           	and a
 659+ 9C22 28 06        	jr z,1F
 660+ 9C24 47           	ld b,a
 661+ 9C25 34           3 inc (hl)
 662+ 9C26 10 FD        	djnz 3B
 663+ 9C28 18 01        	jr 2F
 664+ 9C2A 34           1 inc (hl)
 665+ 9C2B C9           2 ret
 666+ 9C2C
 667+ 9C2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 668+ 9C2C              ;
 669+ 9C2C              ;	5/2/23
 670+ 9C2C              ;
 671+ 9C2C              ;	Dec_CTRL_DESPLZ
 672+ 9C2C              ;
 673+ 9C2C              ;
 674+ 9C2C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 675+ 9C2C
 676+ 9C2C 21 CC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 677+ 9C2F 3A D9 88     	ld a,(Vel_left)
 678+ 9C32 A7           	and a
 679+ 9C33 28 06        	jr z,1F
 680+ 9C35 47           	ld b,a
 681+ 9C36 35           3 dec (hl)
 682+ 9C37 10 FD        	djnz 3B
 683+ 9C39 18 01        	jr 2F
 684+ 9C3B 35           1 dec (hl)
 685+ 9C3C C9           2 ret
 686+ 9C3D
 687+ 9C3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 688+ 9C3D
 689+ 9C3D 2A C6 88     Reaparece_derecha ld hl,(Posicion_actual)
 690+ 9C40 01 1F 00     	ld bc,31
 691+ 9C43 A7           	and a
 692+ 9C44 ED 4A        	adc hl,bc
 693+ 9C46 22 C6 88     	ld (Posicion_actual),hl
 694+ 9C49 21 F2 88     	ld hl,Ctrl_0														; $xxx1
 695+ 9C4C CB C6        	set 0,(hl)
 696+ 9C4E C9           	ret
 697+ 9C4F
 698+ 9C4F              ; ---------- ---------- ---------- ---------- ---------- ----------
 699+ 9C4F
 700+ 9C4F 2A C6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 701+ 9C52 01 1F 00     	ld bc,31
 702+ 9C55 A7           	and a
 703+ 9C56 ED 42        	sbc hl,bc
 704+ 9C58 22 C6 88     	ld (Posicion_actual),hl 											; $xx1x
 705+ 9C5B 21 F2 88     	ld hl,Ctrl_0
 706+ 9C5E CB CE        	set 1,(hl)
 707+ 9C60 C9           	ret
 708+ 9C61
 709+ 9C61              ; ---------- ---------- ---------- ---------- ---------- ----------
 710+ 9C61
 711+ 9C61 24           Reaparece_abajo inc h
 712+ 9C62 01 E0 17     	ld bc,$17e0
 713+ 9C65 A7           	and a
 714+ 9C66 ED 4A        	adc hl,bc
 715+ 9C68 22 C6 88     	ld (Posicion_actual),hl
 716+ 9C6B 21 F2 88     	ld hl,Ctrl_0
 717+ 9C6E CB D6        	set 2,(hl)
 718+ 9C70 C9           	ret
 719+ 9C71
 720+ 9C71              ; ---------- ---------- ---------- ---------- ---------- ----------
 721+ 9C71
 722+ 9C71 01 E0 17     Reaparece_arriba ld bc,$17e0
 723+ 9C74 A7           	and a
 724+ 9C75 ED 42        	sbc hl,bc
 725+ 9C77 22 C6 88     	ld (Posicion_actual),hl
 726+ 9C7A 21 F2 88     	ld hl,Ctrl_0
 727+ 9C7D CB DE        	set 3,(hl)
 728+ 9C7F C9           	ret
 729+ 9C80
 730+ 9C80              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 731+ 9C80              ;
 732+ 9C80              ;	15/07/23
 733+ 9C80
 734+ 9C80              Reinicio
 735+ 9C80
 736+ 9C80              ; Vamos a reiniciar los punteros y variables de movimiento.
 737+ 9C80
 738+ 9C80 AF           	xor a
 739+ 9C81 21 F7 88     	ld hl,Puntero_indice_mov_bucle
 740+ 9C84 CD A2 9C     	call Limpia_contenido_hl
 741+ 9C87
 742+ 9C87 21 C6 88     	ld hl,Posicion_actual
 743+ 9C8A CD A2 9C     	call Limpia_contenido_hl
 744+ 9C8D
 745+ 9C8D CD D2 9F     	call Inicializa_Puntero_indice_mov
 746+ 9C90 CD 5C 9F     	call Inicia_Puntero_mov
 747+ 9C93
 748+ 9C93 21 F9 88     	ld hl,Incrementa_puntero
 749+ 9C96 06 05        	ld b,5
 750+ 9C98 77           1 ld (hl),a
 751+ 9C99 23           	inc hl
 752+ 9C9A 10 FC        	djnz 1B
 753+ 9C9C
 754+ 9C9C 21 03 89     	ld hl,Ctrl_2
 755+ 9C9F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 756+ 9CA1
 757+ 9CA1 C9           	ret
 758+ 9CA2
 759+ 9CA2 77           Limpia_contenido_hl	ld (hl),a
 760+ 9CA3 23           	inc hl
 761+ 9CA4 77           	ld (hl),a
 762+ 9CA5 C9           	ret
 763+ 9CA6
 764+ 9CA6
# file closed: Direcciones.asm
1659  9CA6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CA6              ; ------------------------------------------------------------------------
   2+ 9CA6              ;
   3+ 9CA6              ;	02/04/23
   4+ 9CA6              ;
   5+ 9CA6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CA6              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CA6              ;
   8+ 9CA6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CA6              ;
  10+ 9CA6              ;	Modifica: A,BC y DE.
  11+ 9CA6
  12+ 9CA6 C5           Genera_coordenadas push bc
  13+ 9CA7 E5           	push hl
  14+ 9CA8 D5           	push de
  15+ 9CA9
  16+ 9CA9 2A C6 88     	ld hl,(Posicion_actual)
  17+ 9CAC
  18+ 9CAC 7D           	ld a,l
  19+ 9CAD E6 1F        	and $1f
  20+ 9CAF 32 CA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CB2
  22+ 9CB2 CD 0F 99     	call calcula_tercio
  23+ 9CB5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CB6
  25+ 9CB6 1E 00        	ld e,0
  26+ 9CB8 7D           	ld a,l
  27+ 9CB9 E6 E0        	and $e0
  28+ 9CBB 28 01        	jr z,1F
  29+ 9CBD 04           	inc b
  30+ 9CBE
  31+ 9CBE 04           1 inc b
  32+ 9CBF 05           	dec b
  33+ 9CC0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CC2              ;														; _ , salimos.
  35+ 9CC2 1C           3 inc e
  36+ 9CC3 D6 20        	sub 32
  37+ 9CC5 20 FB        	jr nz,3B
  38+ 9CC7 10 F5        	djnz 1B
  39+ 9CC9
  40+ 9CC9 7B           2 ld a,e
  41+ 9CCA 32 CB 88     	ld (Coordenada_y),a
  42+ 9CCD
  43+ 9CCD D1           	pop de
  44+ 9CCE E1           	pop hl
  45+ 9CCF C1           	pop bc
  46+ 9CD0
  47+ 9CD0 C9           	ret
  48+ 9CD1
  49+ 9CD1              ; ------------------------------------------------------------------------
  50+ 9CD1              ;	28/05/23
  51+ 9CD1              ;
  52+ 9CD1              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CD1              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CD1              ;
  55+ 9CD1              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CD1              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CD1              ;
  58+ 9CD1              ;		DE="$120d"
  59+ 9CD1              ;
  60+ 9CD1              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CD1              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CD1              ;
  63+ 9CD1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CD1
  65+ 9CD1              ;	Modifica: A,BC y DE.
  66+ 9CD1
  67+ 9CD1
  68+ 9CD1              Genera_coordenadas_disparo
  69+ 9CD1
  70+ 9CD1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CD1
  72+ 9CD1 7D           	ld a,l
  73+ 9CD2 E6 1F        	and $1f
  74+ 9CD4 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CD5 CD 0F 99     	call calcula_tercio
  76+ 9CD8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CD9 1E 00        	ld e,0
  78+ 9CDB 7D           	ld a,l
  79+ 9CDC E6 E0        	and $e0
  80+ 9CDE 28 01        	jr z,1F
  81+ 9CE0 04           	inc b
  82+ 9CE1 1C           1 inc e
  83+ 9CE2 D6 20        	sub 32
  84+ 9CE4 20 FB        	jr nz,1B
  85+ 9CE6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CE8 C9           	ret
  87+ 9CE9
# file closed: Genera_coordenadas.asm
1660  9CE9              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CE9              ; Relojes y temporizaciones.
   2+ 9CE9
   3+ 9CE9              ; ------------------------------------------------------
   4+ 9CE9              ;
   5+ 9CE9              ;	16/7/23
   6+ 9CE9              ;
   7+ 9CE9              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CE9              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CE9              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CE9              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CE9              ;
  12+ 9CE9              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CE9              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CE9
  15+ 9CE9              ; Disparo_entidad db 1
  16+ 9CE9              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CE9              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CE9
  19+ 9CE9              Habilita_disparos
  20+ 9CE9
  21+ 9CE9 7E           	ld a,(hl)
  22+ 9CEA A7           	and a
  23+ 9CEB C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9CEC
  25+ 9CEC EB           	ex de,hl
  26+ 9CED
  27+ 9CED 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9CEE C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9CEF
  30+ 9CEF              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9CEF
  32+ 9CEF 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9CF0 7E           	ld a,(hl)
  34+ 9CF1 23           	inc hl
  35+ 9CF2 77           	ld (hl),a
  36+ 9CF3
  37+ 9CF3 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9CF4 3E 01        	ld a,1
  39+ 9CF6 77           	ld (hl),a
  40+ 9CF7 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1661  9CF8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CF8
   2+ 9CF8
   3+ 9CF8              ;   07/07/23
   4+ 9CF8              ;
   5+ 9CF8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CF8              ;
   7+ 9CF8              ;   Codificación:
   8+ 9CF8              ;
   9+ 9CF8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CF8              ;
  11+ 9CF8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CF8              ;
  13+ 9CF8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CF8              ;
  15+ 9CF8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CF8              ;
  17+ 9CF8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CF8              ;                               ..... %01000010 Vel_up 4
  19+ 9CF8              ;                                               Vel_down 2
  20+ 9CF8              ;                               ..... $42
  21+ 9CF8              ;
  22+ 9CF8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CF8              ;
  24+ 9CF8              ;                               ..... %01000010 Vel_left 4
  25+ 9CF8              ;                                               Vel_right 2
  26+ 9CF8              ;                               ..... $42
  27+ 9CF8              ;
  28+ 9CF8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CF8              ;
  30+ 9CF8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CF8              ;
  32+ 9CF8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CF8              ;
  34+ 9CF8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CF8              ;                                     $53
  36+ 9CF8              ;
  37+ 9CF8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CF8              ;
  39+ 9CF8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CF8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CF8              ;
  42+ 9CF8              ;                       Arriba ..... $81
  43+ 9CF8              ;                       Arriba - izquierda ..... $a1
  44+ 9CF8              ;                       Arriba - derecha ..... $91
  45+ 9CF8              ;
  46+ 9CF8              ;                       Abajo ..... $41
  47+ 9CF8              ;                       Abajo - izquierda ..... $61
  48+ 9CF8              ;                       Abajo - derecha ..... $51
  49+ 9CF8              ;
  50+ 9CF8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CF8              ;
  52+ 9CF8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CF8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CF8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CF8              ;
  56+ 9CF8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CF8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CF8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CF8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CF8              ;
  61+ 9CF8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CF8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CF8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CF8              ;
  65+ 9CF8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CF8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CF8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CF8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CF8
  70+ 9CF8              ; ----- ----- ----- ----- -----
  71+ 9CF8
  72+ 9CF8 24 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CFA 2C 9D            defw F_1
  74+ 9CFC 36 9D            defw F_2
  75+ 9CFE 40 9D            defw Codo_abajo_derecha
  76+ 9D00 74 9D            defw Derecha_y_subiendo
  77+ 9D02 7E 9D            defw Derecha_y_subiendo_1
  78+ 9D04 88 9D            defw F_3
  79+ 9D06 92 9D            defw F_4
  80+ 9D08 9C 9D            defw Derecha_y_bajando
  81+ 9D0A A6 9D            defw Derecha_y_bajando_1
  82+ 9D0C B0 9D            defw Derecha_y_bajando_2
  83+ 9D0E BA 9D            defw Codo_derecha_abajo
  84+ 9D10 EA 9D            defw Codo_abajo_izq.
  85+ 9D12 1E 9E            defw Izquierda_y_subiendo
  86+ 9D14 28 9E            defw Izquierda_y_subiendo_1
  87+ 9D16 32 9E            defw F_5
  88+ 9D18 3C 9E            defw F_6
  89+ 9D1A 46 9E            defw Izquierda_y_bajando
  90+ 9D1C 50 9E            defw Izquierda_y_bajando_1
  91+ 9D1E 5A 9E            defw Izquierda_y_bajando_2
  92+ 9D20 64 9E            defw Codo_izquierda_abajo
  93+ 9D22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D24
  95+ 9D24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D2C
  98+ 9D2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D34 08 00
 100+ 9D36 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D3E 0F FE
 102+ 9D40
 103+ 9D40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D74
 117+ 9D74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D7C 06 00
 119+ 9D7E
 120+ 9D7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D86 02 00
 122+ 9D88
 123+ 9D88 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D8C 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D90 04 00
 125+ 9D92 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D96 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D9A 08 00
 127+ 9D9C
 128+ 9D9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DA0 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DA4 02 00
 130+ 9DA6
 131+ 9DA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DAA 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DAE 06 00
 133+ 9DB0
 134+ 9DB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DB4 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DB8 06 00
 136+ 9DBA
 137+ 9DBA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DBA
 139+ 9DBA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DBE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DCA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DCE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DDA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DDE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DEA
 152+ 9DEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9DFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E1E
 166+ 9E1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E26 06 00
 168+ 9E28
 169+ 9E28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E30 02 00
 171+ 9E32
 172+ 9E32 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E36 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E3A 04 00
 174+ 9E3C 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E40 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E44 08 00
 176+ 9E46
 177+ 9E46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E4A 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E4E 02 00
 179+ 9E50
 180+ 9E50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E54 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E58 06 00
 182+ 9E5A
 183+ 9E5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E5E 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E62 06 00
 185+ 9E64
 186+ 9E64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E94
 199+ 9E94              ; ----- ----- ----- ----- -----
 200+ 9E94              ;
 201+ 9E94              ;   27/06/23
 202+ 9E94
 203+ 9E94              Movimiento
 204+ 9E94
 205+ 9E94              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E94
 207+ 9E94              ;    ld hl,(Posicion_actual)
 208+ 9E94
 209+ 9E94 3A 03 89         ld a,(Ctrl_2)
 210+ 9E97 CB 57            bit 2,a
 211+ 9E99 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E9B
 213+ 9E9B 2A F5 88         ld hl,(Puntero_mov)
 214+ 9E9E 7E               ld a,(hl)
 215+ 9E9F
 216+ 9E9F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E9F
 218+ 9E9F              Inicia_desplazamiento.
 219+ 9E9F
 220+ 9E9F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E9F
 222+ 9E9F CD 93 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EA2
 224+ 9EA2              ; Iniciamos (Repetimos_mov).
 225+ 9EA2
 226+ 9EA2 7E               ld a,(hl)
 227+ 9EA3 E6 0F            and $0f
 228+ 9EA5 32 FB 88         ld (Repetimos_desplazamiento),a
 229+ 9EA8 32 FC 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EAB
 231+ 9EAB              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EAB
 233+ 9EAB 23               inc hl
 234+ 9EAC 7E               ld a,(hl)
 235+ 9EAD 32 FE 88         ld (Cola_de_desplazamiento),a
 236+ 9EB0 2B               dec hl
 237+ 9EB1
 238+ 9EB1 21 03 89         ld hl,Ctrl_2
 239+ 9EB4 CB D6            set 2,(hl)
 240+ 9EB6
 241+ 9EB6              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EB6              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EB6
 244+ 9EB6              Desplazamiento_iniciado
 245+ 9EB6
 246+ 9EB6 CD 67 9F         call Aplica_desplazamiento
 247+ 9EB9
 248+ 9EB9 3A 03 89         ld a,(Ctrl_2)
 249+ 9EBC CB 67            bit 4,a
 250+ 9EBE C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EBF
 252+ 9EBF 21 FB 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EC2 35               dec (hl)
 254+ 9EC3 C0               ret nz
 255+ 9EC4
 256+ 9EC4              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EC4              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EC4              ; Analiza (Cola_de_desplazamiento).
 259+ 9EC4
 260+ 9EC4 3A FE 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EC7 A7               and a
 262+ 9EC8 CC BC 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9ECB 28 30            jr z,Reinicia_el_movimiento
 264+ 9ECD
 265+ 9ECD FE FF            cp $ff
 266+ 9ECF 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9ED1
 268+ 9ED1 FE FE            cp $fe
 269+ 9ED3 CC 40 9F         call z,Fijamos_bucle
 270+ 9ED6 28 25            jr z,Reinicia_el_movimiento
 271+ 9ED8
 272+ 9ED8 FE FD            cp $fd
 273+ 9EDA 20 11            jr nz,1F
 274+ 9EDC
 275+ 9EDC              ; ---
 276+ 9EDC              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EDC
 278+ 9EDC 3A 03 89         ld a,(Ctrl_2)
 279+ 9EDF CB 5F            bit 3,a
 280+ 9EE1 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EE3
 282+ 9EE3              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EE3
 284+ 9EE3 21 03 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EE6 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EE8
 287+ 9EE8 CD 51 9F         call Inicia_Repetimos_movimiento
 288+ 9EEB 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EED              ; ---
 290+ 9EED
 291+ 9EED FE 01        1 cp 1
 292+ 9EEF CA 2A 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9EF2
 294+ 9EF2 3D               dec a
 295+ 9EF3 32 FE 88         ld (Cola_de_desplazamiento),a
 296+ 9EF6
 297+ 9EF6 3A FC 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9EF9 32 FB 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9EFC              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9EFC C9               ret
 301+ 9EFD
 302+ 9EFD              Reinicia_el_movimiento
 303+ 9EFD
 304+ 9EFD 3A 03 89         ld a,(Ctrl_2)
 305+ 9F00 CB 5F            bit 3,a
 306+ 9F02 28 1B            jr z,2F
 307+ 9F04
 308+ 9F04              ; (Cola_de_desplazamiento)="254".
 309+ 9F04
 310+ 9F04 21 FD 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F07 35               dec (hl)
 312+ 9F08 20 15            jr nz,2F
 313+ 9F0A
 314+ 9F0A              ; Fin de las repeticiones del último movimiento.
 315+ 9F0A
 316+ 9F0A 21 03 89         ld hl,Ctrl_2
 317+ 9F0D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F0F
 319+ 9F0F 2A F5 88         ld hl,(Puntero_mov)
 320+ 9F12 23               inc hl
 321+ 9F13 23               inc hl
 322+ 9F14 23               inc hl
 323+ 9F15 22 F5 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F18              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F18 7E               ld a,(hl)
 326+ 9F19 32 FE 88         ld (Cola_de_desplazamiento),a
 327+ 9F1C
 328+ 9F1C C3 C4 9E         jp Cola
 329+ 9F1F
 330+ 9F1F CD 5C 9F     2 call Inicia_Puntero_mov
 331+ 9F22
 332+ 9F22 21 03 89         ld hl,Ctrl_2
 333+ 9F25 CB 96            res 2,(hl)
 334+ 9F27
 335+ 9F27 C3 94 9E         jp Movimiento
 336+ 9F2A
 337+ 9F2A              Siguiente_desplazamiento
 338+ 9F2A
 339+ 9F2A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F2A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F2A
 342+ 9F2A 21 03 89         ld hl,Ctrl_2
 343+ 9F2D CB 96            res 2,(hl)
 344+ 9F2F
 345+ 9F2F 2A F5 88         ld hl,(Puntero_mov)
 346+ 9F32 23               inc hl
 347+ 9F33 23               inc hl
 348+ 9F34 22 F5 88         ld (Puntero_mov),hl
 349+ 9F37
 350+ 9F37 7E               ld a,(hl)
 351+ 9F38 A7               and a
 352+ 9F39 CC BC 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F3C CA FD 9E         jp z,Reinicia_el_movimiento
 354+ 9F3F
 355+ 9F3F C9               ret
 356+ 9F40
 357+ 9F40              ; Subrutinas -----------------------------------------
 358+ 9F40              ; ---------- --------- --------- ---------- ----------
 359+ 9F40              ;
 360+ 9F40              ;   24/07/23
 361+ 9F40              ;
 362+ 9F40              ;   Fijamos_bucle
 363+ 9F40              ;
 364+ 9F40              ;
 365+ 9F40
 366+ 9F40              Fijamos_bucle
 367+ 9F40
 368+ 9F40 3A F9 88         ld a,(Incrementa_puntero)
 369+ 9F43 3C               inc a
 370+ 9F44 32 FA 88         ld (Incrementa_puntero_backup),a
 371+ 9F47
 372+ 9F47 CD BC 9F         call Incrementa_Puntero_indice_mov
 373+ 9F4A 2A F3 88         ld hl,(Puntero_indice_mov)
 374+ 9F4D 22 F7 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9F50 C9               ret
 376+ 9F51
 377+ 9F51              ; ---------- --------- --------- ---------- ----------
 378+ 9F51              ;
 379+ 9F51              ;   07/7/23
 380+ 9F51              ;
 381+ 9F51              ;   Inicia_Repetimos_movimiento
 382+ 9F51              ;
 383+ 9F51              ;
 384+ 9F51
 385+ 9F51              Inicia_Repetimos_movimiento
 386+ 9F51
 387+ 9F51              ; Iniciamos (Repetimos_movimiento).
 388+ 9F51
 389+ 9F51 DD 2A F5 88      ld ix,(Puntero_mov)
 390+ 9F55 DD 7E 02         ld a,(ix+2)
 391+ 9F58 32 FD 88         ld (Repetimos_movimiento),a
 392+ 9F5B
 393+ 9F5B C9               ret
 394+ 9F5C
 395+ 9F5C              ; ---------- --------- --------- ---------- ----------
 396+ 9F5C              ;
 397+ 9F5C              ;   26/6/23
 398+ 9F5C              ;
 399+ 9F5C              ;   Inicia_Puntero_mov
 400+ 9F5C              ;
 401+ 9F5C              ;
 402+ 9F5C
 403+ 9F5C 2A F3 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F5F 5E               ld e,(hl)
 405+ 9F60 23               inc hl
 406+ 9F61 56               ld d,(hl)
 407+ 9F62 EB               ex de,hl
 408+ 9F63 22 F5 88         ld (Puntero_mov),hl
 409+ 9F66 C9               ret
 410+ 9F67
 411+ 9F67              ; ---------- --------- --------- ---------- ----------
 412+ 9F67              ;
 413+ 9F67              ;   27/06/23
 414+ 9F67              ;
 415+ 9F67              ;   Aplica_movimiento.
 416+ 9F67
 417+ 9F67              Aplica_desplazamiento
 418+ 9F67
 419+ 9F67              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F67
 421+ 9F67 2A F5 88         ld hl, (Puntero_mov)
 422+ 9F6A
 423+ 9F6A 7E               ld a,(hl)
 424+ 9F6B E6 F0            and $f0
 425+ 9F6D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F6E
 427+ 9F6E CB 7E            bit 7,(hl)
 428+ 9F70 28 03            jr z,1F
 429+ 9F72 CD 92 99         call Mov_up
 430+ 9F75 2A F5 88     1 ld hl, (Puntero_mov)
 431+ 9F78 CB 76            bit 6,(hl)
 432+ 9F7A 28 03            jr z,2F
 433+ 9F7C CD 55 99         call Mov_down
 434+ 9F7F 2A F5 88     2 ld hl, (Puntero_mov)
 435+ 9F82 CB 6E            bit 5,(hl)
 436+ 9F84 28 03            jr z,3F
 437+ 9F86 CD F3 9A         call Mov_left
 438+ 9F89 2A F5 88     3 ld hl, (Puntero_mov)
 439+ 9F8C CB 66            bit 4,(hl)
 440+ 9F8E C8               ret z
 441+ 9F8F CD D5 99         call Mov_right
 442+ 9F92 C9               ret
 443+ 9F93
 444+ 9F93              ; ---------- --------- --------- ---------- ----------
 445+ 9F93              ;
 446+ 9F93              ;   26/06/23
 447+ 9F93              ;
 448+ 9F93              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F93
 450+ 9F93              Ajusta_velocidad_desplazamiento
 451+ 9F93
 452+ 9F93              ; 1er byte de la cadena de movimiento.
 453+ 9F93              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F93
 455+ 9F93 CD B1 9F         call Extrae_nibble_alto
 456+ 9F96
 457+ 9F96 32 DB 88         ld (Vel_up),a
 458+ 9F99 79               ld a,c
 459+ 9F9A E6 0F            and $0f
 460+ 9F9C 32 DC 88         ld (Vel_down),a
 461+ 9F9F
 462+ 9F9F              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F9F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F9F
 465+ 9F9F 23               inc hl
 466+ 9FA0 CD B1 9F         call Extrae_nibble_alto
 467+ 9FA3
 468+ 9FA3 32 D9 88         ld (Vel_left),a
 469+ 9FA6 79               ld a,c
 470+ 9FA7 E6 0F            and $0f
 471+ 9FA9 32 DA 88         ld (Vel_right),a
 472+ 9FAC
 473+ 9FAC              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9FAC
 475+ 9FAC 23               inc hl
 476+ 9FAD 22 F5 88         ld (Puntero_mov),hl
 477+ 9FB0 C9               ret
 478+ 9FB1
 479+ 9FB1 06 04        Extrae_nibble_alto ld b,4
 480+ 9FB3 7E               ld a,(hl)
 481+ 9FB4 4F               ld c,a
 482+ 9FB5 E6 F0            and $f0
 483+ 9FB7 CB 3F        1 srl a
 484+ 9FB9 10 FC            djnz 1B
 485+ 9FBB C9               ret
 486+ 9FBC
 487+ 9FBC              ; ---------- --------- --------- ---------- ----------
 488+ 9FBC              ;
 489+ 9FBC              ;   5/7/23
 490+ 9FBC              ;
 491+ 9FBC              ;   Incrementa_Puntero_indice_mov
 492+ 9FBC
 493+ 9FBC              Incrementa_Puntero_indice_mov
 494+ 9FBC
 495+ 9FBC 21 F9 88         ld hl,Incrementa_puntero
 496+ 9FBF 34               inc (hl)
 497+ 9FC0
 498+ 9FC0 2A F3 88         ld hl,(Puntero_indice_mov)
 499+ 9FC3 01 02 00         ld bc,2
 500+ 9FC6 A7               and a
 501+ 9FC7 09               add hl,bc
 502+ 9FC8 22 F3 88         ld (Puntero_indice_mov),hl
 503+ 9FCB
 504+ 9FCB 7E               ld a,(hl)
 505+ 9FCC A7               and a
 506+ 9FCD
 507+ 9FCD              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FCD
 509+ 9FCD              ;    jr z,$
 510+ 9FCD
 511+ 9FCD              ;! Reinicia el Patrón de movimiento.
 512+ 9FCD
 513+ 9FCD CC D2 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FD0
 515+ 9FD0 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FD1
 517+ 9FD1 C9               ret
 518+ 9FD2
 519+ 9FD2
 520+ 9FD2              ; ---------- --------- --------- ---------- ----------
 521+ 9FD2              ;
 522+ 9FD2              ;   24/07/23
 523+ 9FD2              ;
 524+ 9FD2              ;   Inicializa_Puntero_indice_mov
 525+ 9FD2
 526+ 9FD2              Inicializa_Puntero_indice_mov
 527+ 9FD2
 528+ 9FD2              ; Existe etiqueta de bucle principal???
 529+ 9FD2
 530+ 9FD2 2A F7 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FD5 24               inc h
 532+ 9FD6 25               dec h
 533+ 9FD7 28 05            jr z,2F
 534+ 9FD9
 535+ 9FD9 22 F3 88         ld (Puntero_indice_mov),hl
 536+ 9FDC 18 14            jr 3F
 537+ 9FDE
 538+ 9FDE              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FDE
 540+ 9FDE 3A F9 88     2 ld a,(Incrementa_puntero)
 541+ 9FE1 47               ld b,a
 542+ 9FE2
 543+ 9FE2 2A F3 88         ld hl,(Puntero_indice_mov)
 544+ 9FE5 2B           1 dec hl
 545+ 9FE6 2B               dec hl
 546+ 9FE7 10 FC            djnz 1B
 547+ 9FE9 22 F3 88         ld (Puntero_indice_mov),hl
 548+ 9FEC
 549+ 9FEC AF               xor a
 550+ 9FED 32 F9 88         ld (Incrementa_puntero),a
 551+ 9FF0 18 06            jr 4F
 552+ 9FF2
 553+ 9FF2 3A FA 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9FF5 32 F9 88         ld (Incrementa_puntero),a
 555+ 9FF8 C9           4 ret
 556+ 9FF9
 557+ 9FF9
 558+ 9FF9
# file closed: Patrones_de_mov.asm
1662  9FF9              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FF9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FF9              ;
   3+ 9FF9              ;	12/12/23
   4+ 9FF9              ;
   5+ 9FF9              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FF9
   7+ 9FF9              ;	ADC HL,SP	LD (addr),SP
   8+ 9FF9              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FF9              ;	ADD IX,SP	LD SP,nn
  10+ 9FF9              ; 	ADD IY,SP	LD SP,HL
  11+ 9FF9              ;				LD SP,IX
  12+ 9FF9              ;	DEC SP		LD SP,IY
  13+ 9FF9
  14+ 9FF9              ;	EX (SP),HL
  15+ 9FF9              ;	EX (SP),IX
  16+ 9FF9              ;	EX (SP),IY
  17+ 9FF9
  18+ 9FF9              ;	INC SP
  19+ 9FF9
  20+ 9FF9                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 16 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E4 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 F0 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7FB0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7FB2              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7FB2
  50+ 7FB2 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 7FB5
  52+ 7FB5 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 7FB6 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 7FB8 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7FBA
  56+ 7FBA              ; Disparo o entidad?
  57+ 7FBA
  58+ 7FBA 3A 05 89         ld a,(Ctrl_1)
  59+ 7FBD CB 47            bit 0,a
  60+ 7FBF 28 05            jr z,2F
  61+ 7FC1
  62+ 7FC1 2A 1E 89         ld hl,(Stack_snapshot_disparos)
  63+ 7FC4 18 0F            jr 4F
  64+ 7FC6
  65+ 7FC6              ; No es disparo. Entidad/Amadeus ????
  66+ 7FC6
  67+ 7FC6 3A F2 88     2 ld a,(Ctrl_0)
  68+ 7FC9 CB 77            bit 6,a
  69+ 7FCB 28 05            jr z,7F
  70+ 7FCD
  71+ 7FCD              ; Guardamos foto de Amadeus.
  72+ 7FCD
  73+ 7FCD 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7FD0 18 03            jr 4F
  75+ 7FD2
  76+ 7FD2 2A 1C 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 7FD5
  78+ 7FD5 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 7FD7
  80+ 7FD7 D1           1 pop de
  81+ 7FD8 73               ld (hl),e
  82+ 7FD9 23               inc hl
  83+ 7FDA 72               ld (hl),d
  84+ 7FDB 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7FDC 10 F9            djnz 1B
  86+ 7FDE
  87+ 7FDE              ; Disparo o entidad ?
  88+ 7FDE
  89+ 7FDE 3A 05 89         ld a,(Ctrl_1)
  90+ 7FE1 CB 47            bit 0,a
  91+ 7FE3 28 05            jr z,5F
  92+ 7FE5
  93+ 7FE5 22 1E 89         ld (Stack_snapshot_disparos),hl
  94+ 7FE8 18 13            jr 6F
  95+ 7FEA
  96+ 7FEA              ; Entidad o Amadeus ?
  97+ 7FEA
  98+ 7FEA 3A F2 88     5 ld a,(Ctrl_0)
  99+ 7FED CB 77            bit 6,a
 100+ 7FEF 28 09            jr z,8F
 101+ 7FF1
 102+ 7FF1 22 22 89         ld (End_Snapshot_Amadeus),hl
 103+ 7FF4 ED 7B 16 89      ld sp,(Stack)
 104+ 7FF8 FB               ei
 105+ 7FF9 C9               ret
 106+ 7FFA
 107+ 7FFA 22 1C 89     8 ld (Stack_snapshot),hl
 108+ 7FFD ED 7B 16 89  6 ld sp,(Stack)
 109+ 8001
 110+ 8001 FB               ei
 111+ 8002 C9               ret
 112+ 8003
 113+ 8003              ; -----------------------------------------------------------------------------
 114+ 8003              ;
 115+ 8003              ;   21/11/23
 116+ 8003
 117+ 8003              Limpia_y_reinicia_Stack_Snapshot
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos.
 120+ 8003
 121+ 8003 2A 1C 89         ld hl,(Stack_snapshot)
 122+ 8006 7D               ld a,l
 123+ 8007 A7               and a
 124+ 8008 C8               ret z   ;   Salimos si el álbum está vacío.
 125+ 8009
 126+ 8009 47               ld b,a
 127+ 800A 04               inc b
 128+ 800B
 129+ 800B 36 00        1 ld (hl),0
 130+ 800D 2D               dec l
 131+ 800E 10 FB            djnz 1B
 132+ 8010
 133+ 8010              ;   Reinicializa (Stack_snapshot).
 134+ 8010
 135+ 8010 AF               xor a
 136+ 8011 32 1C 89         ld (Stack_snapshot),a
 137+ 8014
 138+ 8014 C9               ret
# file closed: Guarda_foto_registros.asm
1663  8015
1664  8015              	SAVESNA "Pruebas.sna", START
1665  8015
1666  8015
1667  8015
1668  8015
# file closed: Banco_de_Pruebas.asm
