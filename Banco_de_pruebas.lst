# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 18 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15 CD 90 8E     	call Guarda_parametros_DRAW
  41  AA18
  42  AA18              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA18              ; Pintamos Amadeus.
  44  AA18
  45  AA18 CD 6F 8E     	call Pinta_entidades
  46  AA1B CD 61 8E     	call Pinta_Amadeus
  47  AA1E CD 16 8E     	call Gestiona_entidades
  48  AA21 CD DF 8A     	call Gestiona_Amadeus
  49  AA24
  50  AA24              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA24
  52  AA24 CD 82 8E     	call Actualiza_relojes
  53  AA27
  54  AA27 CD 9C 8E     	call Recupera_parametros_DRAW
  55  AA2A
  56  AA2A              ;! debuggggg ..... 27/09/23
  57  AA2A
  58  AA2A              ;	ld a,(Contador_de_frames_2)
  59  AA2A              ;	cp 1
  60  AA2A              ;	jr nz,1F
  61  AA2A              ;	ld a,(Contador_de_frames)
  62  AA2A              ;	cp $94	; $97 último FRAME que no peta !!!!!!!!!!
  63  AA2A              ;	jr z,$
  64  AA2A
  65  AA2A              ;! debuggggg
  66  AA2A
  67  AA2A FD E1        	pop iy
  68  AA2C DD E1        	pop ix
  69  AA2E F1           	pop af
  70  AA2F C1           	pop bc
  71  AA30 D1           	pop de
  72  AA31 E1           	pop hl
  73  AA32 D9           	exx
  74  AA33 C1           	pop bc
  75  AA34 D1           	pop de
  76  AA35 E1           	pop hl
  77  AA36 08           	ex af,af'
  78  AA37 F1           	pop af
  79  AA38 08           	ex af,af'
  80  AA39 D9           	exx
  81  AA3A
  82  AA3A ED 7B 18 89  	ld sp,(Stack_3)
  83  AA3E
  84  AA3E FB           	ei
  85  AA3F ED 4D        	reti
  86  AA41
  87  AA41              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA41
  89  AA41              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA41              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA41              ;
   3+ AA41              ;	17/02/23
   4+ AA41              ;
   5+ AA41              ;	Sprites e índices.
   6+ AA41
   7+ AA41              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 7E 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 7E 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5B 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 9E 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5D 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 9E 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5D 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 9E 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5D 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5D 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 9E 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  92  88C6
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ; Constantes.
  95  88C6              ; ******************************************************************************************************************************************************************************************
  96  88C6              ;
  97  88C6              ; 4/9/23
  98  88C6              ;
  99  88C6              ; Constantes generales.
 100  88C6              ;
 101  88C6
 102  88C6              Sprite_vacio equ $f000
 103  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C6
 108  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C6              ;
 114  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C6
 121  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C6
 124  88C6
 125  88C6
 126  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C6
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ; Variables.
 130  88C6              ; ******************************************************************************************************************************************************************************************
 131  88C6              ;
 132  88C6              ; 28/07/23
 133  88C6              ;
 134  88C6              ; Variables de DRAW. (Motor principal).
 135  88C6              ;
 136  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C6
 138  88C6 00           Filas db 0												; Filas. [DRAW]
 139  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CE
 145  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CE
 147  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CF 00           Attr db 0												; Atributos de la entidad:
 151  88D0
 152  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D0              ;
 154  88D0              ;	COLORES: 0 ..... NEGRO
 155  88D0              ;    		 1 ..... AZUL
 156  88D0              ; 			 2 ..... ROJO
 157  88D0              ;			 3 ..... MAGENTA
 158  88D0              ; 			 4 ..... VERDE
 159  88D0              ; 			 5 ..... CIAN
 160  88D0              ;			 6 ..... AMARILLO
 161  88D0              ; 			 7 ..... BLANCO
 162  88D0
 163  88D0 00 00        Indice_Sprite_der defw 0
 164  88D2 00 00        Indice_Sprite_izq defw 0
 165  88D4 00 00        Puntero_DESPLZ_der defw 0
 166  88D6 00 00        Puntero_DESPLZ_izq defw 0
 167  88D8
 168  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DB
 171  88DB              ; Variables de objeto. (Características).
 172  88DB
 173  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DF
 178  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E0 00 00 00...  Variables_de_borrado ds 6
 182  88E6
 183  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E8 00 00        	defw 0
 185  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EC 00 00 00 00  	db 0,0,0,0
 187  88F0
 188  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F0
 190  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F1              ;
 196  88F1              ; 														DESCRIPCIÖN:
 197  88F1              ;
 198  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F1              ;
 212  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F1
 216  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F1
 218  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F7              ;
 222  88F7              ;
 223  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F8 00           Incrementa_puntero_backup db 0
 227  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FD              ;
 233  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FD              ;
 237  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FD              ;
 242  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FD
 246  88FD
 247  88FD              ; Variables de funcionamiento. [DRAW].
 248  88FD
 249  88FD 00           Columnas db 0
 250  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8901
 254  8901              ; variables de control general.
 255  8901
 256  8901 00           Ctrl_2 db 0
 257  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8902              ;
 265  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8902
 271  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8903
 273  8903              ;! 61 Bytes por entidad.
 274  8903
 275  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8903              ;					         		---------;      ;---------
 277  8903
 278  8903
 279  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8903
 281  8903 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 282  8904
 283  8904              ;														DESCRIPCIÓN:
 284  8904              ;
 285  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8904
 292  8904              ;														BIT 3, Recarga de nueva oleada.
 293  8904              ;														BIT 4, Recarga de nueva oleada.
 294  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 295  8904              ;														BIT 6, **** Frame completo.
 296  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8904
 298  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8906
 303  8906
 304  8906
 305  8906              ; Gestión de ENTIDADES y CAJAS.
 306  8906
 307  8906 00 00        Puntero_store_caja defw 0
 308  8908 00 00        Puntero_restore_caja defw 0
 309  890A 00 00        Indice_restore_caja defw 0
 310  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 311  890D 00           Numero_parcial_de_entidades db 0
 312  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 313  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 314  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 315  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 316  8910              ;														; _ (Numero_de_malotes)="0".
 317  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 318  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 319  8914              ;														; _ puntero (Indice_entidades).
 320  8914
 321  8914
 322  8914              ;---------------------------------------------------------------------------------------------------------------
 323  8914              ;
 324  8914              ;	2/9/23
 325  8914              ;
 326  8914              ;	Álbumes.
 327  8914
 328  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 329  8916              ;														; _variable para almacenar lo posición del puntero_
 330  8916              ; 														; _de pila, SP.
 331  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 332  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 333  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 334  891A 00 00        Stack_snapshot defw 0
 335  891C 00 00        Stack_snapshot_disparos defw 0
 336  891E
 337  891E 00 00        End_Snapshot defw 0
 338  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 339  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 340  8922              ;														; _el snapshot de los registros del siguiente disparo.
 341  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 342  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 343  8924 00 00        End_Snapshot_1 defw 0
 344  8926 00 00        End_Snapshot_disparos_1 defw 0
 345  8928 00 00        End_Snapshot_2 defw 0
 346  892A 00 00        End_Snapshot_disparos_2 defw 0
 347  892C 00 00        End_Snapshot_3 defw 0
 348  892E 00 00        End_Snapshot_disparos_3 defw 0
 349  8930
 350  8930 00 00        Puntero_indice_album_de_fotos defw 0
 351  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 352  8934
 353  8934 00 00        Puntero_indice_End_Snapshot defw 0
 354  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 355  8938 00 00        Puntero_de_End_Snapshot defw 0
 356  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 357  893C
 358  893C              ;---------------------------------------------------------------------------------------------------------------
 359  893C
 360  893C              ; Gestión de Disparos.
 361  893C
 362  893C 00           Numero_de_disparotes db 0
 363  893D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 364  893F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 365  8941 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 366  8942              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 367  8942              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 368  8942 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 369  8944              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 370  8944              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 371  8944              ;														; _produzca colisión.
 372  8944 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 373  8946              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 374  8946 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 375  8949              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 376  8949 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 377  894C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 378  894C 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 379  894E 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 380  894F
 381  894F              ;---------------------------------------------------------------------------------------------------------------
 382  894F
 383  894F              ; Relojes y temporizaciones.
 384  894F
 385  894F 00           Contador_de_frames db 0
 386  8950 00           Contador_de_frames_2 db 0
 387  8951
 388  8951 04           Clock_explosion db 4
 389  8952 1E           Clock_Entidades_en_curso db 30
 390  8953 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 391  8954              ;														; Repite la oleada de entidades.
 392  8954 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 393  8955 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 394  8956 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 395  8957
 396  8957 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 397  8958 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 398  8959 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 399  895A
 400  895A              ;---------------------------------------------------------------------------------------------------------------
 401  895A
 402  895A              ; Gestión de NIVELES.
 403  895A
 404  895A 00           Nivel db 0												; Nivel actual del juego.
 405  895B 00 00        Puntero_indice_NIVELES defw 0
 406  895D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 407  895F              ; 														; _ que definen el NIVEL.
 408  895F              ; Y todo comienza aquí .....
 409  895F              ;
 410  895F              ; Rutina principal *************************************************************************************************************************************************************************
 411  895F              ;
 412  895F              ;	14/11/22
 413  895F
 414  895F              START
 415  895F
 416  895F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 417  8962 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 418  8964 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 419  8966 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 420  8968 F3           	DI
 421  8969
 422  8969 3E 07        	ld a,%00000111
 423  896B CD AB 99     	call Cls
 424  896E
 425  896E CD 80 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 426  8971
 427  8971              ; INICIALIZACIÓN.
 428  8971
 429  8971 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 430  8974
 431  8974 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 432  8977
 433  8977 CD 9F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 434  897A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 435  897A CD B5 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 436  897D              ;													     ; _ malotes antes de guardar ninguna foto.
 437  897D              ; ----------
 438  897D
 439  897D CD 30 8D     	call Restore_entidad
 440  8980
 441  8980 21 0D 89     	ld hl,Numero_parcial_de_entidades
 442  8983 46           	ld b,(hl)
 443  8984 04           	inc b
 444  8985 05           	dec b
 445  8986 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 446  8988
 447  8988              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 448  8988              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 449  8988              ;	Pintamos el resto de entidades:
 450  8988
 451  8988              ;	INICIA ENTIDADES !!!!!
 452  8988
 453  8988 C5           1 push bc  												; Guardo el contador de entidades.
 454  8989 CD 6C 8B     	call Inicia_entidad
 455  898C C1           	pop bc
 456  898D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 457  898F
 458  898F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 459  898F              ; (Esto se dá cuando se inicia una nueva oleada).
 460  898F
 461  898F 3A 03 89     	ld a,(Ctrl_1)
 462  8992 CB 5F        	bit 3,a
 463  8994 20 15        	jr nz,5F											; Loop
 464  8996
 465  8996              ; 	INICIA AMADEUS !!!!!
 466  8996
 467  8996 CD 57 8D     3 call Restore_Amadeus
 468  8999 CD A4 8C     	call Inicia_Puntero_objeto
 469  899C CD 9E 93     	call Draw
 470  899F CD A0 7F     	call Guarda_foto_registros
 471  89A2 CD E3 8D     	call Guarda_datos_de_borrado_Amadeus
 472  89A5
 473  89A5 11 9E 85     	ld de,Amadeus_db
 474  89A8 CD 69 8D     	call Store_Amadeus
 475  89AB
 476  89AB              ; 	INICIA DISPAROS !!!!!
 477  89AB
 478  89AB              ;	call Inicia_Puntero_Disparo_Entidades
 479  89AB              ;	call Inicia_Puntero_Disparo_Amadeus
 480  89AB
 481  89AB              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 482  89AB
 483  89AB CD 9F 8B     5 call Inicia_punteros_de_cajas
 484  89AE CD 30 8D     	call Restore_entidad
 485  89B1
 486  89B1 3A 03 89     	ld a,(Ctrl_1)
 487  89B4 CB 5F        	bit 3,a
 488  89B6 28 07        	jr z,6F
 489  89B8
 490  89B8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 491  89B8
 492  89B8 21 03 89     	ld hl,Ctrl_1
 493  89BB CB 9E        	res 3,(hl)
 494  89BD 18 04        	jr Main
 495  89BF
 496  89BF
 497  89BF              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 498  89BF              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 499  89BF              ; _ para situarnos en el siguiente album.
 500  89BF
 501  89BF CD E6 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 502  89C2 F3           	di
 503  89C3
 504  89C3              ; ------------------------------------
 505  89C3
 506  89C3              Main
 507  89C3              ;
 508  89C3              ;	3/8/23
 509  89C3
 510  89C3 3E 01            ld a,1
 511  89C5 D3 FE        	out ($fe),a											; Azul.
 512  89C7
 513  89C7 FB           	ei
 514  89C8
 515  89C8 3A 52 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 516  89CB 47           	ld b,a
 517  89CC 3A 4F 89     	ld a,(Contador_de_frames)
 518  89CF B8           	cp b
 519  89D0 20 18        	jr nz,13F
 520  89D2
 521  89D2 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 522  89D5 47           	ld b,a
 523  89D6 3A 0E 89     	ld a,(Entidades_en_curso)
 524  89D9 B8           	cp b
 525  89DA 28 0E        	jr z,13F
 526  89DC 30 0C        	jr nc,13F
 527  89DE
 528  89DE 3C           	inc a
 529  89DF 32 0E 89     	ld (Entidades_en_curso),a
 530  89E2
 531  89E2 3A 52 89     	ld a,(Clock_Entidades_en_curso)
 532  89E5
 533  89E5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 534  89E5              ;! _ IMPREDECIBLE !!!!
 535  89E5
 536  89E5 C6 64        	add 100
 537  89E7 32 52 89     	ld (Clock_Entidades_en_curso),a
 538  89EA
 539  89EA              ; Habilita disparos.
 540  89EA
 541  89EA 21 54 89     13 ld hl,Disparo_Amadeus
 542  89ED 11 56 89     	ld de,CLOCK_repone_disparo_Amadeus
 543  89F0 CD 6F 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 544  89F3
 545  89F3 21 57 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 546  89F6 11 59 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 547  89F9 CD 6F 9D     	call Habilita_disparos
 548  89FC
 549  89FC              ; COLISIONES.
 550  89FC
 551  89FC CD 80 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 552  89FF
 553  89FF              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 554  89FF              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 555  89FF              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 556  89FF
 557  89FF AF           	xor a
 558  8A00 32 41 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 559  8A03
 560  8A03 CD 9F 8B     	call Inicia_punteros_de_cajas
 561  8A06 CD 30 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 562  8A09              ; 														; _ en DRAW.
 563  8A09 3A C6 88     	ld a,(Filas)
 564  8A0C A7           	and a
 565  8A0D 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 566  8A0F CD 42 8D     	call Incrementa_punteros_de_cajas
 567  8A12 18 F2        	jr 12B
 568  8A14
 569  8A14              ; ---------------------------------------------------------------------------------------
 570  8A14
 571  8A14 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 572  8A17 47               ld b,a
 573  8A18 A7           	and a
 574  8A19 20 14        	jr nz,11F
 575  8A1B
 576  8A1B 21 03 89     	ld hl,Ctrl_1
 577  8A1E CB 66        	bit 4,(hl)
 578  8A20 C2 B0 8A     	jp nz,16F
 579  8A23
 580  8A23 21 03 89     	ld hl,Ctrl_1
 581  8A26 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 582  8A28
 583  8A28 3A 4F 89     	ld a,(Contador_de_frames)
 584  8A2B 3C           	inc a
 585  8A2C 32 53 89     	ld (Activa_recarga_cajas),a
 586  8A2F
 587  8A2F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 588  8A2F
 589  8A2F 3A 0E 89     11 ld a,(Entidades_en_curso)
 590  8A32 A7           	and a
 591  8A33 CA B0 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 592  8A36 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 593  8A37
 594  8A37              ; Código que ejecutamos con cada entidad:
 595  8A37              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 596  8A37
 597  8A37 C5           15 push bc 												; Nº de entidades en curso.
 598  8A38
 599  8A38              ; Impacto ???
 600  8A38
 601  8A38 3A DF 88     	ld a,(Impacto)
 602  8A3B A7           	and a
 603  8A3C 28 32        	jr z,8F
 604  8A3E
 605  8A3E              ; Hay Impacto en esta entidad.
 606  8A3E
 607  8A3E 21 51 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 608  8A41 35           	dec (hl)
 609  8A42 20 66        	jr nz,17F
 610  8A44
 611  8A44              ;! Velocidad de la animación de la explosión.
 612  8A44
 613  8A44 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 614  8A46              ;														; _,(velocidad de la explosión).
 615  8A46
 616  8A46              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 617  8A46 18 FE        	jr $
 618  8A48
 619  8A48 CD 03 8E     	call Repone_datos_de_borrado
 620  8A4B CD 40 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 621  8A4E
 622  8A4E
 623  8A4E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 624  8A4E
 625  8A4E 3A 01 89     	ld a,(Ctrl_2)
 626  8A51 CB 4F        	bit 1,a
 627  8A53 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 628  8A55
 629  8A55              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 630  8A55
 631  8A55 3A CE 88     	ld a,(CTRL_DESPLZ)
 632  8A58 A7           	and a
 633  8A59 20 08        	jr nz,18F
 634  8A5B
 635  8A5B 21 84 84     	ld hl,Indice_Explosion_2x2-2
 636  8A5E 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 637  8A61 18 06        	jr 19F
 638  8A63
 639  8A63 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 640  8A66 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 641  8A69
 642  8A69 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 643  8A6C CB CE        	set 1,(hl)
 644  8A6E 18 22        	jr 7F
 645  8A70
 646  8A70              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 647  8A70              ; _con las coordenadas de la entidad almacenada en DRAW.
 648  8A70
 649  8A70 3A 03 89     8 ld a,(Ctrl_1)
 650  8A73 CB 57        	bit 2,a
 651  8A75 28 1B        	jr z,7F
 652  8A77
 653  8A77 2A 44 89     	ld hl,(Coordenadas_disparo_certero)
 654  8A7A EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 655  8A7B              ;														; E contiene la coordenada_X del disparo.
 656  8A7B 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 657  8A7E              ;														; H FILA, (Coordenada_y de la entidad).
 658  8A7E A7           	and a
 659  8A7F ED 52        	sbc hl,de
 660  8A81
 661  8A81 CD B7 92     	call Determina_resultado_comparativa
 662  8A84
 663  8A84 78           	ld a,b
 664  8A85 A7           	and a
 665  8A86 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 666  8A88
 667  8A88              ; ----- ----- -----
 668  8A88
 669  8A88 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 670  8A8A 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 671  8A8D
 672  8A8D 21 03 89     	ld hl,Ctrl_1
 673  8A90 CB 96        	res 2,(hl)
 674  8A92
 675  8A92 CD 08 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 676  8A95
 677  8A95 3A F0 88     	ld a,(Ctrl_0)
 678  8A98 CB 67        	bit 4,a
 679  8A9A 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 680  8A9C
 681  8A9C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 682  8A9C              ; [[[
 683  8A9C CD CB 8D     	call Detecta_disparo_entidad
 684  8A9F              ; ]]]
 685  8A9F
 686  8A9F CD 80 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 687  8AA2 CD D1 8D     	call Guarda_datos_de_borrado
 688  8AA5
 689  8AA5 21 F0 88     	ld hl,Ctrl_0
 690  8AA8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 691  8AAA
 692  8AAA CD EC 8C     17 call Store_Restore_cajas
 693  8AAD
 694  8AAD C1           	pop bc
 695  8AAE 10 87        	djnz 15B
 696  8AB0
 697  8AB0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 698  8AB0              ; Hemos gestionado todas las unidades.
 699  8AB0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 700  8AB0
 701  8AB0              ;	ld hl,Ctrl_1
 702  8AB0              ;	res 2,(hl)
 703  8AB0
 704  8AB0 CD E6 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 705  8AB3              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 706  8AB3              ;														; _ interrupción.
 707  8AB3              ; ----------------------------------------
 708  8AB3
 709  8AB3 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 710  8AB6 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 711  8AB8 CA C3 89     	jp z,Main
 712  8ABB
 713  8ABB 3A 4F 89     	ld a,(Contador_de_frames)
 714  8ABE 47           	ld b,a
 715  8ABF 3A 53 89     	ld a,(Activa_recarga_cajas)
 716  8AC2 B8           	cp b
 717  8AC3 28 08        	jr z,20F
 718  8AC5
 719  8AC5 21 03 89     	ld hl,Ctrl_1
 720  8AC8 CB E6        	set 4,(hl)
 721  8ACA C3 C3 89     	jp Main
 722  8ACD
 723  8ACD 21 03 89     20 ld hl,Ctrl_1
 724  8AD0 CB A6        	res 4,(hl)
 725  8AD2
 726  8AD2 F3           	di
 727  8AD3
 728  8AD3 3A 4F 89     	ld a,(Contador_de_frames)
 729  8AD6
 730  8AD6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 731  8AD6              ;! _ IMPREDECIBLE !!!!
 732  8AD6
 733  8AD6 C6 0A        	add 10
 734  8AD8 32 52 89     	ld (Clock_Entidades_en_curso),a
 735  8ADB
 736  8ADB C3 74 89     	jp 4B
 737  8ADE
 738  8ADE C9           	ret
 739  8ADF
 740  8ADF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 741  8ADF
 742  8ADF              Gestiona_Amadeus
 743  8ADF
 744  8ADF 3E 04            ld a,4
 745  8AE1 D3 FE        	out ($fe),a											; Azul.
 746  8AE3
 747  8AE3 CD 57 8D     	call Restore_Amadeus
 748  8AE6
 749  8AE6              ;! Activa/desactiva impacto con Amadeus.
 750  8AE6
 751  8AE6 3A DF 88     	ld a,(Impacto)
 752  8AE9 A7           	and a
 753  8AEA 20 FE        	jr nz,$
 754  8AEC
 755  8AEC CD 59 8B     	call Mov_Amadeus
 756  8AEF
 757  8AEF 3A F0 88     	ld a,(Ctrl_0)
 758  8AF2 CB 67        	bit 4,a
 759  8AF4 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 760  8AF6
 761  8AF6 CD 80 8B     	call Guarda_foto_entidad_a_pintar
 762  8AF9 CD E3 8D     	call Guarda_datos_de_borrado_Amadeus
 763  8AFC
 764  8AFC 21 F0 88     14 ld hl,Ctrl_0
 765  8AFF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 766  8B01
 767  8B01 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 768  8B04 CD 69 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 769  8B07
 770  8B07              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 771  8B07
 772  8B07              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 773  8B07
 774  8B07              ;	call Calcula_numero_de_disparotes
 775  8B07
 776  8B07 C9           	ret
 777  8B08
 778  8B08              ; --------------------------------------------------------------------------------------------------------------
 779  8B08              ;
 780  8B08              ;	27/05/23
 781  8B08
 782  8B08              Mov_obj
 783  8B08
 784  8B08 3A 01 89     	ld a,(Ctrl_2)
 785  8B0B CB 4F        	bit 1,a
 786  8B0D 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 787  8B0F
 788  8B0F              ; Explosión:
 789  8B0F
 790  8B0F 3A 02 89     	ld a,(Frames_explosion)
 791  8B12 A7           	and a
 792  8B13 20 11        	jr nz,4F
 793  8B15
 794  8B15              ; Una alimaña menos!!!!!!!!!1
 795  8B15
 796  8B15 CD 72 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 797  8B18 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 798  8B1B 35           	dec (hl)
 799  8B1C 21 0E 89     	ld hl,Entidades_en_curso
 800  8B1F 35           	dec (hl)
 801  8B20 21 0C 89     	ld hl,Numero_de_entidades
 802  8B23 35           	dec (hl)
 803  8B24 18 32        	jr 3F
 804  8B26
 805  8B26              ; -----
 806  8B26
 807  8B26              ;	`Movemos´ la explosión.
 808  8B26
 809  8B26 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 810  8B29 23           	inc hl
 811  8B2A 23           	inc hl
 812  8B2B 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 813  8B2E CD 9E 8C     	call Extrae_address
 814  8B31 22 CA 88     	ld (Puntero_objeto),hl
 815  8B34
 816  8B34 21 02 89     	ld hl,Frames_explosion
 817  8B37 35           	dec (hl)
 818  8B38
 819  8B38              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 820  8B38 18 1E        	jr 3F
 821  8B3A
 822  8B3A AF           2 xor a
 823  8B3B 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 824  8B3E
 825  8B3E              ; Movemos Entidades malignas.
 826  8B3E
 827  8B3E CD 1A 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 828  8B41
 829  8B41 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 830  8B44 CB 67        	bit 4,a
 831  8B46 C8           	ret z
 832  8B47
 833  8B47              ; Ha habido desplazamiento de la entidad maligna.
 834  8B47              ; Ha llegado a zona de AMADEUS ???
 835  8B47
 836  8B47 3A CD 88     	ld a,(Coordenada_y)
 837  8B4A FE 14        	cp $14
 838  8B4C D4 45 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 839  8B4F              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 840  8B4F              ; ---------
 841  8B4F
 842  8B4F CD 87 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 843  8B52 CD 03 8E     	call Repone_datos_de_borrado
 844  8B55 CD 40 8C     	call Limpia_Variables_de_borrado
 845  8B58
 846  8B58 C9           3 ret													; _de la misma.
 847  8B59
 848  8B59              ; --------------------------------------------------------------------------------------------------------------
 849  8B59              ;
 850  8B59              ;	29/1/23
 851  8B59
 852  8B59              Mov_Amadeus
 853  8B59
 854  8B59 CD 94 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 855  8B5C
 856  8B5C 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 857  8B5F CB 67        	bit 4,a
 858  8B61 C8           	ret z
 859  8B62
 860  8B62              ; ---------
 861  8B62
 862  8B62 CD 87 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 863  8B65 CD F3 8D     	call Repone_datos_de_borrado_Amadeus
 864  8B68 CD 40 8C     	call Limpia_Variables_de_borrado
 865  8B6B
 866  8B6B C9           	ret
 867  8B6C
 868  8B6C              ; -----------------------------------------------------------------------------------
 869  8B6C
 870  8B6C CD A4 8C     Inicia_entidad	call Inicia_Puntero_objeto
 871  8B6F CD BF 99     	call Recompone_posicion_inicio
 872  8B72 CD 9E 93     	call Draw
 873  8B75 CD A0 7F     	call Guarda_foto_registros
 874  8B78 CD D1 8D     	call Guarda_datos_de_borrado
 875  8B7B F3           	di
 876  8B7C CD EC 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 877  8B7F C9           	ret
 878  8B80
 879  8B80              ; --------------------------------------------------------------------------------------------------------------
 880  8B80              ;
 881  8B80              ;	31/08/23
 882  8B80              ;
 883  8B80              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 884  8B80              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 885  8B80
 886  8B80              Guarda_foto_entidad_a_pintar
 887  8B80
 888  8B80              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 889  8B80
 890  8B80 CD 9E 93     	call Draw
 891  8B83 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 892  8B86 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 893  8B87
 894  8B87              ; --------------------------------------------------------------------------------------------------------------
 895  8B87              ;
 896  8B87              ;	19/9/23
 897  8B87
 898  8B87 21 C6 88     Prepara_var_pintado ld hl,Filas
 899  8B8A 11 E6 88     	ld de,Variables_de_pintado
 900  8B8D 01 08 00     	ld bc,8
 901  8B90 ED B0        	ldir
 902  8B92 C9           	ret
 903  8B93
 904  8B93              ; --------------------------------------------------------------------------------------------------------------
 905  8B93
 906  8B93 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 907  8B96 11 C6 88     	ld de,Filas
 908  8B99 01 08 00     	ld bc,8
 909  8B9C ED B0        	ldir
 910  8B9E C9           	ret
 911  8B9F
 912  8B9F              ; *************************************************************************************************************************************************************
 913  8B9F              ;
 914  8B9F              ; 8/1/23
 915  8B9F              ;
 916  8B9F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 917  8B9F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 918  8B9F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 919  8B9F
 920  8B9F              ; Destruye HL y DE !!!!!
 921  8B9F
 922  8B9F              Inicia_punteros_de_cajas
 923  8B9F
 924  8B9F 21 8C 85     	ld hl,Indice_de_cajas
 925  8BA2 CD 9E 8C         call Extrae_address
 926  8BA5 22 06 89         ld (Puntero_store_caja),hl
 927  8BA8 21 8E 85     	ld hl,Indice_de_cajas+2
 928  8BAB 22 0A 89     	ld (Indice_restore_caja),hl
 929  8BAE CD 9E 8C     	call Extrae_address
 930  8BB1 22 08 89     	ld (Puntero_restore_caja),hl
 931  8BB4 C9               ret
 932  8BB5
 933  8BB5              ; ---------------------------------------------------------------
 934  8BB5              ;
 935  8BB5              ;	9/8/23
 936  8BB5              ;
 937  8BB5              ;	Inicialización y gestión de álbumes de fotos y cajas.
 938  8BB5
 939  8BB5              Inicia_punteros_de_albumes_y_malotes
 940  8BB5
 941  8BB5 21 EC 84     	ld hl,Indice_album_de_fotos
 942  8BB8 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 943  8BBB CD 9E 8C     	call Extrae_address
 944  8BBE 22 1A 89     	ld (Stack_snapshot),hl
 945  8BC1
 946  8BC1 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 947  8BC4 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 948  8BC7 CD 9E 8C     	call Extrae_address
 949  8BCA 22 1C 89     	ld (Stack_snapshot_disparos),hl
 950  8BCD
 951  8BCD 21 FC 84     	ld hl,Indice_End_Snapshot
 952  8BD0 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 953  8BD3 CD 9E 8C     	call Extrae_address
 954  8BD6 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 955  8BD9
 956  8BD9 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 957  8BDC 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 958  8BDF CD 9E 8C     	call Extrae_address
 959  8BE2 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 960  8BE5
 961  8BE5 C9           	ret
 962  8BE6
 963  8BE6              ;	23/9/23
 964  8BE6
 965  8BE6              Avanza_puntero_de_album_de_fotos_y_malotes
 966  8BE6
 967  8BE6              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 968  8BE6
 969  8BE6              ; Estamos en el último álbum del índice???.
 970  8BE6
 971  8BE6 F3           	di
 972  8BE7 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 973  8BEA 01 F2 84     	ld bc,Indice_album_de_fotos+6
 974  8BED A7           	and a
 975  8BEE ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 976  8BF0 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 977  8BF2 FB           	ei
 978  8BF3
 979  8BF3 21 03 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 980  8BF6 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 981  8BF8 76           	halt
 982  8BF9 C9           	ret
 983  8BFA
 984  8BFA 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
 985  8BFD 23           	inc hl
 986  8BFE 23           	inc hl
 987  8BFF 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 988  8C02 CD 9E 8C     	call Extrae_address
 989  8C05 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 990  8C08
 991  8C08 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
 992  8C0B 23           	inc hl
 993  8C0C 23           	inc hl
 994  8C0D 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 995  8C10 CD 9E 8C     	call Extrae_address
 996  8C13 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 997  8C16
 998  8C16 FB           	ei
 999  8C17 C9           	ret
1000  8C18
1001  8C18              ; *************************************************************************************************************************************************************
1002  8C18              ;
1003  8C18              ; 8/1/23
1004  8C18              ;
1005  8C18              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1006  8C18
1007  8C18 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1008  8C1B 22 3D 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1009  8C1E C9           	ret
1010  8C1F 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1011  8C22 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1012  8C25 C9           	ret
1013  8C26
1014  8C26              ; -------------------------------------------------------------------------------------------------------------
1015  8C26              ;
1016  8C26              ; 21/9/23
1017  8C26              ;
1018  8C26
1019  8C26              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1020  8C26
1021  8C26              Limpia_album_Amadeus
1022  8C26
1023  8C26 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1024  8C29 7E           	ld a,(hl)
1025  8C2A A7           	and a
1026  8C2B C8           	ret z
1027  8C2C
1028  8C2C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1029  8C2F 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1030  8C32 01 0B 00     	ld bc,11
1031  8C35 AF           	xor a
1032  8C36 77           	ld (hl),a
1033  8C37 ED B0        	ldir
1034  8C39
1035  8C39 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1036  8C3C 22 22 89     	ld (End_Snapshot_Amadeus),hl
1037  8C3F
1038  8C3F C9           	ret
1039  8C40
1040  8C40 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1041  8C43 11 E1 88     	ld de,Variables_de_borrado+1
1042  8C46 01 05 00     	ld bc,5
1043  8C49 AF           	xor a
1044  8C4A 77           	ld (hl),a
1045  8C4B ED B0        	ldir
1046  8C4D C9           	ret
1047  8C4E
1048  8C4E              ; -------------------------------------------------------------------------------------------------------------
1049  8C4E              ;
1050  8C4E              ; 8/9/23
1051  8C4E              ;
1052  8C4E
1053  8C4E              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1054  8C4E              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1055  8C4E
1056  8C4E              Calcula_numero_de_malotes
1057  8C4E
1058  8C4E 21 00 70     	ld hl,Album_de_fotos
1059  8C51 EB           	ex de,hl
1060  8C52 2A 1E 89     	ld hl,(End_Snapshot)
1061  8C55
1062  8C55 7C           	ld a,h
1063  8C56 A7           	and a
1064  8C57 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1065  8C59
1066  8C59 06 00        4 ld b,0
1067  8C5B 7D           	ld a,l
1068  8C5C 93           	sub e
1069  8C5D 28 07        	jr z,1F
1070  8C5F
1071  8C5F              ; Nº de malotes no es "0".
1072  8C5F
1073  8C5F D6 06        2 sub 6
1074  8C61 04           	inc b
1075  8C62 A7           	and a
1076  8C63 20 FA        	jr nz,2B
1077  8C65 78           	ld a,b
1078  8C66
1079  8C66 32 0F 89     1 ld (Numero_de_malotes),a
1080  8C69 C9           	ret
1081  8C6A
1082  8C6A              ; -------------------------------------------------------------------------------------------------------------
1083  8C6A              ;
1084  8C6A              ; 8/9/23
1085  8C6A              ;
1086  8C6A
1087  8C6A              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1088  8C6A              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1089  8C6A
1090  8C6A              Calcula_malotes_Amadeus
1091  8C6A
1092  8C6A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1093  8C6D EB           	ex de,hl
1094  8C6E 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1095  8C71
1096  8C71 7C           	ld a,h
1097  8C72 A7           	and a
1098  8C73 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1099  8C75
1100  8C75 06 00        	ld b,0
1101  8C77 7D           	ld a,l
1102  8C78 93           	sub e
1103  8C79 28 07        	jr z,1F
1104  8C7B
1105  8C7B              ; Nº de malotes no es "0".
1106  8C7B
1107  8C7B D6 06        2 sub 6
1108  8C7D 04           	inc b
1109  8C7E A7           	and a
1110  8C7F 20 FA        	jr nz,2B
1111  8C81 78           	ld a,b
1112  8C82
1113  8C82 32 0F 89     1 ld (Numero_de_malotes),a
1114  8C85 C9           	ret
1115  8C86
1116  8C86              ; -------------------------------------------------------------------------------------------------------------
1117  8C86              ;
1118  8C86              ; 28/2/23
1119  8C86              ;
1120  8C86
1121  8C86              Calcula_numero_de_disparotes
1122  8C86
1123  8C86 21 50 71     	ld hl,Album_de_fotos_disparos
1124  8C89 EB           	ex de,hl
1125  8C8A 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1126  8C8D
1127  8C8D 06 00        	ld b,0
1128  8C8F 7D           	ld a,l
1129  8C90 93           	sub e
1130  8C91 28 07        	jr z,1F
1131  8C93
1132  8C93              ; Nº de malotes no es "0".
1133  8C93
1134  8C93 D6 06        2 sub 6
1135  8C95 04           	inc b
1136  8C96 A7           	and a
1137  8C97 20 FA        	jr nz,2B
1138  8C99 78           	ld a,b
1139  8C9A
1140  8C9A 32 3C 89     1 ld (Numero_de_disparotes),a
1141  8C9D C9           	ret
1142  8C9E
1143  8C9E              ; *************************************************************************************************************************************************************
1144  8C9E              ;
1145  8C9E              ; 20/10/22
1146  8C9E              ;
1147  8C9E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1148  8C9E              ;
1149  8C9E              ; Destruye el puntero y DE !!!!!
1150  8C9E
1151  8C9E 5E           Extrae_address ld e,(hl)
1152  8C9F 23           	inc hl
1153  8CA0 56           	ld d,(hl)
1154  8CA1 2B           	dec hl
1155  8CA2 EB           	ex de,hl
1156  8CA3 C9           	ret
1157  8CA4
1158  8CA4              ; *************************************************************************************************************************************************************
1159  8CA4              ;
1160  8CA4              ;	7/2/23
1161  8CA4              ;
1162  8CA4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1163  8CA4              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1164  8CA4              ;
1165  8CA4              ;   Destruye HL y BC !!!!!,
1166  8CA4              ;
1167  8CA4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1168  8CA4              ;					"0" ..... Izquierda.
1169  8CA4
1170  8CA4              Inicia_Puntero_objeto
1171  8CA4
1172  8CA4 3A DA 88     	ld a,(Cuad_objeto)
1173  8CA7 E6 01        	and 1
1174  8CA9 F5           	push af
1175  8CAA CC C8 8C     	call z,Inicia_puntero_objeto_izq
1176  8CAD F1           	pop af
1177  8CAE 28 2B        	jr z,1F
1178  8CB0 CD B5 8C     	call Inicia_puntero_objeto_der
1179  8CB3 18 26        	jr 1F
1180  8CB5
1181  8CB5              ; Arrancamos desde la parte izquierda de la pantalla.
1182  8CB5              ; Iniciamos (Indice_Sprite_der).
1183  8CB5
1184  8CB5 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1185  8CB8 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1186  8CBB CD 9E 8C     	call Extrae_address
1187  8CBE 22 CA 88     	ld (Puntero_objeto),hl
1188  8CC1
1189  8CC1 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1190  8CC4 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1191  8CC7 C9           	ret
1192  8CC8
1193  8CC8              ; Arrancamos desde la parte derecha de la pantalla.
1194  8CC8              ; Iniciamos (Indice_Sprite_izq).
1195  8CC8
1196  8CC8 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1197  8CCB 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1198  8CCE CD 9E 8C     	call Extrae_address
1199  8CD1 22 CA 88     	ld (Puntero_objeto),hl
1200  8CD4
1201  8CD4 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1202  8CD7 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1203  8CDA C9           	ret
1204  8CDB
1205  8CDB              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1206  8CDB
1207  8CDB 21 40 83     1 ld hl,Amadeus
1208  8CDE ED 4B CA 88  	ld bc,(Puntero_objeto)
1209  8CE2 B7 ED 42     	sub hl,bc
1210  8CE5 C0           	ret nz
1211  8CE6 21 F0 88     	ld hl,Ctrl_0
1212  8CE9 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1213  8CEB C9           	ret 												; _de nuestra nave en los extremos.
1214  8CEC
1215  8CEC              ; *************************************************************************************************************************************************************
1216  8CEC              ;
1217  8CEC              ;	14/5/23
1218  8CEC              ;
1219  8CEC              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1220  8CEC              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1221  8CEC
1222  8CEC              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1223  8CEC              ;	_de la 2ª y 3ª entidad respectivamente.
1224  8CEC
1225  8CEC              Store_Restore_cajas
1226  8CEC
1227  8CEC
1228  8CEC              ;! debuggggg
1229  8CEC F3           	di
1230  8CED 3A 4F 89     	ld a,(Contador_de_frames)
1231  8CF0 FE E6        	cp $e6
1232  8CF2 28 FE        	jr z,$
1233  8CF4 FB           	ei
1234  8CF5
1235  8CF5 E5           	push hl
1236  8CF6 D5           	push de
1237  8CF7 C5            	push bc
1238  8CF8
1239  8CF8              ;	STORE !!!!!
1240  8CF8              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1241  8CF8
1242  8CF8 21 C6 88     	ld hl,Filas
1243  8CFB ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1244  8CFF 01 3D 00     	ld bc,61
1245  8D02 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1246  8D04
1247  8D04              ; 	Entidad_sospechosa. 20/4/23
1248  8D04
1249  8D04 3A DF 88     	ld a,(Impacto)
1250  8D07 A7           	and a
1251  8D08 28 0C        	jr z,1F
1252  8D0A
1253  8D0A 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1254  8D0D 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1255  8D10 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1256  8D11 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1257  8D13 22 42 89     	ld (Entidad_sospechosa_de_colision),hl
1258  8D16
1259  8D16              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1260  8D16
1261  8D16 2A 08 89     1 ld hl,(Puntero_restore_caja)
1262  8D19 7E           	ld a,(hl)
1263  8D1A A7           	and a
1264  8D1B F5           	push af
1265  8D1C 28 08        	jr z,2F
1266  8D1E
1267  8D1E 11 C6 88     	ld de,Filas
1268  8D21 01 3D 00     	ld bc,61
1269  8D24 ED B0        	ldir
1270  8D26
1271  8D26 CD 42 8D     2 call Incrementa_punteros_de_cajas
1272  8D29 F1           	pop af
1273  8D2A 28 EA        	jr z,1B
1274  8D2C
1275  8D2C C1           	pop bc
1276  8D2D D1           	pop de
1277  8D2E E1           	pop hl
1278  8D2F
1279  8D2F C9           	ret
1280  8D30
1281  8D30              ; **************************************************************************************************
1282  8D30              ;
1283  8D30              ;	12/05/23
1284  8D30              ;
1285  8D30              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1286  8D30
1287  8D30 E5           Restore_entidad push hl
1288  8D31 D5           	push de
1289  8D32 C5            	push bc
1290  8D33
1291  8D33 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1292  8D36 11 C6 88     	ld de,Filas
1293  8D39 01 3D 00     	ld bc,61
1294  8D3C ED B0        	ldir
1295  8D3E
1296  8D3E C1           	pop bc
1297  8D3F D1           	pop de
1298  8D40 E1           	pop hl
1299  8D41 C9           	ret
1300  8D42
1301  8D42
1302  8D42              ; **************************************************************************************************
1303  8D42              ;
1304  8D42              ;	08/05/23
1305  8D42              ;
1306  8D42              ;	Incrementamos los dos punteros de entidades. (+1).
1307  8D42
1308  8D42              Incrementa_punteros_de_cajas
1309  8D42
1310  8D42 2A 08 89     	ld hl,(Puntero_restore_caja)
1311  8D45 22 06 89     	ld (Puntero_store_caja),hl
1312  8D48 2A 0A 89     	ld hl,(Indice_restore_caja)
1313  8D4B 23           	inc hl
1314  8D4C 23           	inc hl
1315  8D4D 22 0A 89     	ld (Indice_restore_caja),hl
1316  8D50 CD 9E 8C         call Extrae_address
1317  8D53 22 08 89         ld (Puntero_restore_caja),hl
1318  8D56 C9               ret
1319  8D57
1320  8D57              ; **************************************************************************************************
1321  8D57              ;
1322  8D57              ;	25/01/23
1323  8D57              ;
1324  8D57              ;	Restore_Amadeus
1325  8D57              ;
1326  8D57              ;	Cargamos en DRAW los parámetros de Amadeus.
1327  8D57              ;
1328  8D57
1329  8D57 E5           Restore_Amadeus	push hl
1330  8D58 D5           	push de
1331  8D59 C5            	push bc
1332  8D5A 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1333  8D5D 11 C6 88     	ld de,Filas
1334  8D60 01 3D 00     	ld bc,61
1335  8D63 ED B0        	ldir
1336  8D65 C1           	pop bc
1337  8D66 D1           	pop de
1338  8D67 E1           	pop hl
1339  8D68 C9           	ret
1340  8D69
1341  8D69              ; *************************************************************************************************************************************************************
1342  8D69              ;
1343  8D69              ;	29/04/23
1344  8D69              ;
1345  8D69              ;	Store_Amadeus
1346  8D69              ;
1347  8D69              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1348  8D69              ;
1349  8D69              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1350  8D69              ;
1351  8D69              ;	DESTRUYE: HL y BC y DE.
1352  8D69
1353  8D69 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1354  8D6C 01 3D 00     	ld bc,61
1355  8D6F ED B0        	ldir
1356  8D71 C9           	ret
1357  8D72
1358  8D72              ; -----------------------------------------------------------
1359  8D72              ;
1360  8D72              ;	27/04/23
1361  8D72              ;
1362  8D72              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1363  8D72              ;
1364  8D72              ;	Destruye: HL,BC,DE,A
1365  8D72
1366  8D72 21 C6 88     Borra_datos_entidad ld hl,Filas
1367  8D75 01 3C 00     	ld bc,60
1368  8D78 AF           	xor a
1369  8D79 77           	ld (hl),a
1370  8D7A 11 C7 88     	ld de,Filas+1
1371  8D7D ED B0        	ldir
1372  8D7F C9           	ret
1373  8D80
1374  8D80              ; -----------------------------------------------------------
1375  8D80
1376  8D80              ; Teclado.
1377  8D80
1378  8D80 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1379  8D82 DB FE        	in a,($fe)
1380  8D84 E6 01        	and $01
1381  8D86 28 02        	jr z,1f
1382  8D88 18 F6        	jr Pulsa_ENTER
1383  8D8A C9           1 ret
1384  8D8B
1385  8D8B              ; **************************************************************************************************
1386  8D8B              ;
1387  8D8B              ; Temporización.
1388  8D8B
1389  8D8B              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1390  8D8B              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1391  8D8B              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1392  8D8B              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1393  8D8B
1394  8D8B              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1395  8D8B              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1396  8D8B              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1397  8D8B
1398  8D8B              ; A partir de $4f61 no hace falta DELAY.
1399  8D8B
1400  8D8B              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1401  8D8B
1402  8D8B 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1403  8D8E 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1404  8D8F 78           	LD A,B
1405  8D90 A7           	AND A
1406  8D91 20 FB        	JR NZ,wait
1407  8D93 C9           	RET
1408  8D94
1409  8D94              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1410  8D94              ;
1411  8D94              ;	5/3/23
1412  8D94              ;
1413  8D94              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1414  8D94
1415  8D94              Movimiento_Amadeus
1416  8D94
1417  8D94              ; Disparo.
1418  8D94
1419  8D94 3A 54 89     	ld a,(Disparo_Amadeus)
1420  8D97 A7           	and a
1421  8D98 20 02        	jr nz,1F
1422  8D9A 18 15        	jr 2F
1423  8D9C
1424  8D9C 3E F7        1 ld a,$f7													; "5" para disparar.
1425  8D9E DB FE        	in a,($fe)
1426  8DA0 E6 10        	and $10
1427  8DA2
1428  8DA2 F5           	push af
1429  8DA3 CC A8 8E     	call z,Genera_disparo
1430  8DA6 F1           	pop af
1431  8DA7 20 08        	jr nz,2F
1432  8DA9
1433  8DA9 3A 54 89     	ld a,(Disparo_Amadeus)
1434  8DAC EE 01        	xor 1
1435  8DAE 32 54 89     	ld (Disparo_Amadeus),a
1436  8DB1
1437  8DB1 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1438  8DB3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1439  8DB5 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1440  8DB7 CC 79 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1441  8DBA
1442  8DBA 3E F7        	ld a,$f7
1443  8DBC DB FE        	in a,($fe)
1444  8DBE E6 01        	and $01
1445  8DC0 C8           	ret z
1446  8DC1
1447  8DC1 3E F7        	ld a,$f7
1448  8DC3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1449  8DC5 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1450  8DC7 CC 5B 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1451  8DCA C9           	ret
1452  8DCB
1453  8DCB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1454  8DCB              ;
1455  8DCB              ;	Rutina provisional para que los malotes cagen balas.
1456  8DCB
1457  8DCB              Detecta_disparo_entidad
1458  8DCB
1459  8DCB 3A 57 89     	ld a,(Disparo_entidad)
1460  8DCE A7           	and a
1461  8DCF C8           	ret z
1462  8DD0
1463  8DD0              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1464  8DD0
1465  8DD0              ;	ld a,$7f				; Detecta SPACE.
1466  8DD0              ;	in a,($fe)
1467  8DD0              ;	and 1
1468  8DD0              ;	ret nz
1469  8DD0
1470  8DD0              ;	call Genera_disparo
1471  8DD0 C9           	ret
1472  8DD1
1473  8DD1              ; ----------------------------------------------------------------------
1474  8DD1              ;
1475  8DD1              ;	8/9/23
1476  8DD1
1477  8DD1              Guarda_datos_de_borrado
1478  8DD1
1479  8DD1 F3           	di
1480  8DD2
1481  8DD2 2A 1A 89     	ld hl,(Stack_snapshot)
1482  8DD5
1483  8DD5 2B           	dec hl
1484  8DD6 7E           	ld a,(hl)
1485  8DD7 A7           	and a
1486  8DD8 C8           	ret z										; Salimos si es álbum está vacío.
1487  8DD9
1488  8DD9 11 E5 88     	ld de,Variables_de_borrado+5
1489  8DDC 01 06 00     	ld bc,6
1490  8DDF ED B8        	lddr
1491  8DE1
1492  8DE1 FB           	ei
1493  8DE2
1494  8DE2 C9           	ret
1495  8DE3
1496  8DE3              ; ----------------------------------------------------------------------
1497  8DE3              ;
1498  8DE3              ;	8/9/23
1499  8DE3
1500  8DE3 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1501  8DE6 2B            	dec hl
1502  8DE7 7E           	ld a,(hl)
1503  8DE8 A7           	and a
1504  8DE9 C8           	ret z										; Salimos si es álbum está vacío.
1505  8DEA
1506  8DEA 11 E5 88     	ld de,Variables_de_borrado+5
1507  8DED 01 06 00     	ld bc,6
1508  8DF0 ED B8        	lddr
1509  8DF2 C9           	ret
1510  8DF3
1511  8DF3              ; ----------------------------------------------------------------------
1512  8DF3              ;
1513  8DF3              ;	9/9/23
1514  8DF3
1515  8DF3              Repone_datos_de_borrado_Amadeus
1516  8DF3
1517  8DF3 21 E0 88     	ld hl,Variables_de_borrado
1518  8DF6 11 A0 72     	ld de,Album_de_fotos_Amadeus
1519  8DF9 01 06 00     	ld bc,6
1520  8DFC ED B0        	ldir
1521  8DFE
1522  8DFE EB           	ex de,hl
1523  8DFF 22 22 89     	ld (End_Snapshot_Amadeus),hl
1524  8E02
1525  8E02 C9           	ret
1526  8E03
1527  8E03              ; ----------------------------------------------------------------------
1528  8E03              ;
1529  8E03              ;	18/9/23
1530  8E03              ;
1531  8E03
1532  8E03              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1533  8E03              ;	_ Album_de_fotos correspondiente.
1534  8E03
1535  8E03              ;	DI.
1536  8E03
1537  8E03              Repone_datos_de_borrado
1538  8E03
1539  8E03 F3           	di
1540  8E04
1541  8E04 ED 5B 1A 89  	ld de,(Stack_snapshot)
1542  8E08 21 E0 88     	ld hl,Variables_de_borrado
1543  8E0B 01 06 00     	ld bc,6
1544  8E0E ED B0        	ldir
1545  8E10
1546  8E10 EB           	ex de,hl
1547  8E11 22 1A 89     	ld (Stack_snapshot),hl
1548  8E14
1549  8E14 FB           	ei
1550  8E15
1551  8E15 C9           	ret
1552  8E16
1553  8E16              ; ----------------------------------------------------------------------
1554  8E16              ;
1555  8E16              ;	11/8/23
1556  8E16
1557  8E16              Gestiona_entidades
1558  8E16
1559  8E16 3E 02        	ld a,2
1560  8E18 D3 FE            out ($fe),a											; Rojo.
1561  8E1A
1562  8E1A              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1563  8E1A              ; _ , no gestionamos los álbumes de fotos.
1564  8E1A
1565  8E1A 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1566  8E1D 01 EC 84     	ld bc,Indice_album_de_fotos
1567  8E20 A7           	and a
1568  8E21 ED 42        	sbc hl,bc
1569  8E23
1570  8E23 28 FE        	jr z,$
1571  8E25 C8           	ret z
1572  8E26
1573  8E26              ;	call Extrae_foto_disparos
1574  8E26              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1575  8E26
1576  8E26 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1577  8E29
1578  8E29              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1579  8E29
1580  8E29 3A 03 89     	ld a,(Ctrl_1)
1581  8E2C CB 6F        	bit 5,a
1582  8E2E 20 22        	jr nz,1F
1583  8E30
1584  8E30              ; No hemos terminado de guardar el último FRAME.
1585  8E30
1586  8E30 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1587  8E33 2B           	dec hl
1588  8E34 2B           	dec hl
1589  8E35 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1590  8E38
1591  8E38 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1592  8E3B 2B           	dec hl
1593  8E3C 2B           	dec hl
1594  8E3D 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1595  8E40 CD 9E 8C     	call Extrae_address
1596  8E43 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1597  8E46
1598  8E46 CD 9E 8C     	call Extrae_address
1599  8E49
1600  8E49              ; Esta vacío este album???
1601  8E49
1602  8E49 24           	inc h
1603  8E4A 25           	dec h
1604  8E4B 28 05        	jr z,1F
1605  8E4D
1606  8E4D              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1607  8E4D
1608  8E4D 22 1A 89     	ld (Stack_snapshot),hl
1609  8E50 18 09        	jr 2F
1610  8E52
1611  8E52              ; FRAME completo.
1612  8E52
1613  8E52 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1614  8E55 CD 9E 8C     	call Extrae_address
1615  8E58 22 1A 89     	ld (Stack_snapshot),hl
1616  8E5B
1617  8E5B              ;	En este punto:
1618  8E5B
1619  8E5B              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1620  8E5B              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1621  8E5B
1622  8E5B 21 03 89     2 ld hl,Ctrl_1
1623  8E5E CB AE        	res 5,(hl)
1624  8E60
1625  8E60 C9           	ret
1626  8E61
1627  8E61              ; -----------------------------------------------------------------------------------
1628  8E61
1629  8E61              Pinta_Amadeus
1630  8E61
1631  8E61 3E 06        	ld a,6
1632  8E63 D3 FE            out ($fe),a										; Amarillo
1633  8E65
1634  8E65 CD 6A 8C        	call Calcula_malotes_Amadeus
1635  8E68 CD 2E 97     	call Extrae_foto_Amadeus
1636  8E6B CD 26 8C     	call Limpia_album_Amadeus
1637  8E6E
1638  8E6E C9           	ret
1639  8E6F
1640  8E6F              Pinta_entidades
1641  8E6F
1642  8E6F 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1643  8E72 01 EC 84     	ld bc,Indice_album_de_fotos
1644  8E75 A7           	and a
1645  8E76 ED 42        	sbc hl,bc
1646  8E78
1647  8E78 28 FE        	jr z,$
1648  8E7A C8           	ret z
1649  8E7B
1650  8E7B              ; Pintamos siempre que esté completo Album_de_fotos.
1651  8E7B
1652  8E7B CD 4E 8C     	call Calcula_numero_de_malotes
1653  8E7E CD AC 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1654  8E81
1655  8E81 C9           	ret
1656  8E82
1657  8E82              ; -----------------------------------------------------------------------------------
1658  8E82
1659  8E82              Actualiza_relojes
1660  8E82
1661  8E82 21 4F 89     	ld hl,Contador_de_frames
1662  8E85 7E           	ld a,(hl)
1663  8E86 FE FF        	cp $ff
1664  8E88 20 04        	jr nz,1F
1665  8E8A 34           	inc (hl)
1666  8E8B 21 50 89     	ld hl,Contador_de_frames_2
1667  8E8E 34           1 inc (hl)											; 0 - 255
1668  8E8F C9           	ret
1669  8E90
1670  8E90              ; ---------------------------------------------------------------
1671  8E90              ;
1672  8E90              ;	27/9/23
1673  8E90
1674  8E90              Guarda_parametros_DRAW
1675  8E90
1676  8E90 21 C6 88     	ld hl,Filas
1677  8E93 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1678  8E96 01 3D 00     	ld bc,61
1679  8E99 ED B0        	ldir
1680  8E9B C9           	ret
1681  8E9C
1682  8E9C              Recupera_parametros_DRAW
1683  8E9C
1684  8E9C 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1685  8E9F 11 C6 88     	ld de,Filas
1686  8EA2 01 3D 00     	ld bc,61
1687  8EA5 ED B0        	ldir
1688  8EA7 C9           	ret
1689  8EA8
1690  8EA8              ; ---------------------------------------------------------------
1691  8EA8
1692  8EA8
1693  8EA8              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EA8              ; ******************************************************************************************************************************************************************************************
   2+ 8EA8              ;
   3+ 8EA8              ;   21/07/23
   4+ 8EA8              ;
   5+ 8EA8              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EA8              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EA8              ;
   8+ 8EA8              ;
   9+ 8EA8              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EA8              ;
  11+ 8EA8              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EA8              ;               _ hacen las entidades hacia abajo.
  13+ 8EA8              ;
  14+ 8EA8              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EA8              ;
  16+ 8EA8              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EA8              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EA8              ;
  19+ 8EA8              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EA8              ;           _ la bala.
  21+ 8EA8              ;
  22+ 8EA8              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EA8              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EA8              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EA8              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EA8              ;           _ en el momento de generarse la bala)).
  27+ 8EA8
  28+ 8EA8              Genera_disparo
  29+ 8EA8
  30+ 8EA8              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EA8              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EA8              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EA8              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EA8              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EA8              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EA8              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EA8
  38+ 8EA8              ; Exclusiones:
  39+ 8EA8
  40+ 8EA8 3A DE 88         ld a,(Vel_down)
  41+ 8EAB 47               ld b,a
  42+ 8EAC 3A 4E 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EAF B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EB0 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EB1 3A FD 88         ld a,(Columnas)
  46+ 8EB4 47               ld b,a
  47+ 8EB5 3A C7 88         ld a,(Columns)
  48+ 8EB8 B8               cp b
  49+ 8EB9 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EBA
  51+ 8EBA              ; ----- ----- -----
  52+ 8EBA
  53+ 8EBA 3A F0 88         ld a,(Ctrl_0)
  54+ 8EBD CB 77            bit 6,a
  55+ 8EBF 20 06            jr nz,14F
  56+ 8EC1
  57+ 8EC1 3A CD 88         ld a,(Coordenada_y)
  58+ 8EC4 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EC6 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EC7
  61+ 8EC7 21 00 80     14 ld hl,Indice_disparo
  62+ 8ECA 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8ECD 4F               ld c,a
  64+ 8ECE 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8ED0              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8ED0              ;                                            ""        ""       "f9", B="1"
  67+ 8ED0              ;                                            ""        ""       "fb", B="2"
  68+ 8ED0              ;                                            ""        ""       "fb", B="3"
  69+ 8ED0 A7               and a
  70+ 8ED1 28 10            jr z,1F
  71+ 8ED3 E6 01            and 1
  72+ 8ED5 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8ED6
  74+ 8ED6 79               ld a,c
  75+ 8ED7 16 F9            ld d,$f9
  76+ 8ED9 23           2 inc hl
  77+ 8EDA 23               inc hl
  78+ 8EDB 04               inc b
  79+ 8EDC BA               cp d
  80+ 8EDD 28 04            jr z,1F
  81+ 8EDF 14               inc d
  82+ 8EE0 14               inc d
  83+ 8EE1 18 F6            jr 2B
  84+ 8EE3
  85+ 8EE3 CD 9E 8C     1 call Extrae_address
  86+ 8EE6 E5               push hl
  87+ 8EE7 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EE9 DD 21 74 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EED
  90+ 8EED              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EED              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EED
  93+ 8EED 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EF0 CB 77            bit 6,a
  95+ 8EF2 20 04            jr nz,19F
  96+ 8EF4
  97+ 8EF4 AF               xor a
  98+ 8EF5 32 57 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EF8
 100+ 8EF8 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8EFB FE 02            cp 2
 102+ 8EFD 38 66            jr c,3F
 103+ 8EFF 28 64            jr z,3F
 104+ 8F01
 105+ 8F01              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F01
 107+ 8F01 E6 01            and 1
 108+ 8F03 28 30            jr z,4F
 109+ 8F05
 110+ 8F05              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F05              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F05              ;
 113+ 8F05              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F05              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F05              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F05
 117+ 8F05 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8F08
 119+ 8F08              ;   Amadeus o entidad ???.
 120+ 8F08
 121+ 8F08 3A F0 88         ld a,(Ctrl_0)
 122+ 8F0B CB 77            bit 6,a
 123+ 8F0D 28 0A            jr z,8F
 124+ 8F0F
 125+ 8F0F              ; 	Dispara Amadeus.
 126+ 8F0F
 127+ 8F0F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F11 CD 9D 96         call PreviousScan
 129+ 8F14 CD 9D 96         call PreviousScan
 130+ 8F17
 131+ 8F17              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F17              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F17              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F17
 136+ 8F17 18 11            jr 10F
 137+ 8F19
 138+ 8F19              ; 	Dispara Entidad.
 139+ 8F19
 140+ 8F19 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F1C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F1C
 143+ 8F1C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F1C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F1C
 146+ 8F1C C5               push bc
 147+ 8F1D 06 10            ld b,16
 148+ 8F1F CD 8E 96     9 call NextScan
 149+ 8F22 10 FB            djnz 9B
 150+ 8F24 C1               pop bc
 151+ 8F25 CD 8F 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F28 18 06            jr 17F
 153+ 8F2A
 154+ 8F2A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F2A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F2A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F2A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F2A
 159+ 8F2A CD 8F 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F2D CD 04 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F30              ;                                                      ; _al generar el disparo.
 162+ 8F30
 163+ 8F30              ; 	LLegados a este punto tendremos:
 164+ 8F30              ;
 165+ 8F30              ;       Puntero_objeto_disparo en IY.
 166+ 8F30              ;       Rutinas_de_impresion en IX.
 167+ 8F30              ;       Puntero_de_impresion en HL.
 168+ 8F30              ;       Impacto/Dirección en BC.
 169+ 8F30
 170+ 8F30 CD 97 8F     17 call Almacena_disparo
 171+ 8F33 18 52            jr 6F                                             ; RET.
 172+ 8F35
 173+ 8F35              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F35              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F35              ;
 176+ 8F35              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F35              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F35              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F35
 180+ 8F35 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8F38
 182+ 8F38              ;   Amadeus o entidad ???.
 183+ 8F38
 184+ 8F38 3A F0 88         ld a,(Ctrl_0)
 185+ 8F3B CB 77            bit 6,a
 186+ 8F3D 28 0A            jr z,11F
 187+ 8F3F
 188+ 8F3F              ; 	Dispara Amadeus.
 189+ 8F3F
 190+ 8F3F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F41 CD 9D 96         call PreviousScan
 192+ 8F44 CD 9D 96         call PreviousScan
 193+ 8F47
 194+ 8F47              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F47              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F47              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F47              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F47
 199+ 8F47 18 11            jr 13F
 200+ 8F49
 201+ 8F49              ; 	Dispara Entidad.
 202+ 8F49
 203+ 8F49 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F4C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F4C
 206+ 8F4C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F4C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F4C
 209+ 8F4C C5               push bc
 210+ 8F4D 06 10            ld b,16
 211+ 8F4F CD 8E 96     12 call NextScan
 212+ 8F52 10 FB            djnz 12B
 213+ 8F54 C1               pop bc
 214+ 8F55
 215+ 8F55 CD 88 8F         call Ajusta_disparo_parte_derecha
 216+ 8F58 18 06            jr 18F
 217+ 8F5A
 218+ 8F5A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F5A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F5A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F5A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F5A
 223+ 8F5A CD 88 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F5D CD 04 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F60              ;                                                       ; _al generar el disparo.
 226+ 8F60
 227+ 8F60              ; LLegados a este punto tendremos:
 228+ 8F60              ;
 229+ 8F60              ;       Puntero_objeto_disparo en IY.
 230+ 8F60              ;       Rutinas_de_impresion en IX.
 231+ 8F60              ;       Puntero_de_impresion en HL.
 232+ 8F60              ;       Impacto/Dirección en BC.
 233+ 8F60
 234+ 8F60 CD 97 8F     18 call Almacena_disparo
 235+ 8F63 18 22            jr 6F                                               ; RET.
 236+ 8F65
 237+ 8F65              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F65
 239+ 8F65 28 11        3 jr z,5F
 240+ 8F67
 241+ 8F67              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F67              ;
 243+ 8F67              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F67              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F67              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F67              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F67
 248+ 8F67              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F67              ;	   ""        ""       "f9", B="1"
 250+ 8F67              ;	   ""        ""       "fb", B="2"
 251+ 8F67              ; 	   ""        ""       "fb", B="3"
 252+ 8F67
 253+ 8F67 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8F6A CD 8E 96     	call NextScan
 255+ 8F6D
 256+ 8F6D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F6D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F6D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F6D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F6D
 261+ 8F6D CD 8F 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F70
 263+ 8F70              ; 	No se produce impacto. B="$80"
 264+ 8F70              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F70
 266+ 8F70 01 80 80         ld bc,$8080
 267+ 8F73
 268+ 8F73              ; 	LLegados a este punto tendremos:
 269+ 8F73              ;
 270+ 8F73              ;       Puntero_objeto_disparo en IY.
 271+ 8F73              ;       Rutinas_de_impresion en IX.
 272+ 8F73              ;       Puntero_de_impresion en HL.
 273+ 8F73              ;       Impacto/Dirección en BC.
 274+ 8F73
 275+ 8F73 CD 97 8F         call Almacena_disparo
 276+ 8F76 18 0F            jr 6F                                           ; RET.
 277+ 8F78
 278+ 8F78              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F78              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F78              ;
 281+ 8F78              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F78              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F78              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F78              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F78
 286+ 8F78 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F7B CD 8E 96     	call NextScan
 288+ 8F7E
 289+ 8F7E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F7E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F7E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F7E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F7E
 294+ 8F7E CD 88 8F         call Ajusta_disparo_parte_derecha
 295+ 8F81
 296+ 8F81              ; 	No se produce impacto. B="$80"
 297+ 8F81              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F81
 299+ 8F81 01 80 80     15 ld bc,$8080
 300+ 8F84
 301+ 8F84              ; 	LLegados a este punto tendremos:
 302+ 8F84              ;
 303+ 8F84              ;       Puntero_objeto_disparo en IY.
 304+ 8F84              ;       Rutinas_de_impresion en IX.
 305+ 8F84              ;       Puntero_de_impresion en HL.
 306+ 8F84              ;       Impacto/Dirección en BC.
 307+ 8F84
 308+ 8F84 CD 97 8F         call Almacena_disparo
 309+ 8F87
 310+ 8F87 C9           6 ret
 311+ 8F88
 312+ 8F88              ; ----------------------------------------------------------------
 313+ 8F88              ;
 314+ 8F88              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F88              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F88              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F88
 318+ 8F88 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F89 FE 02            cp 2
 320+ 8F8B 38 01            jr c,1F
 321+ 8F8D 23               inc hl
 322+ 8F8E C9           1 ret
 323+ 8F8F
 324+ 8F8F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F90 FE 01        	cp 1
 326+ 8F92 20 01        	jr nz,1F
 327+ 8F94 2B           	dec hl
 328+ 8F95 2B           1 dec hl
 329+ 8F96 C9               ret
 330+ 8F97
 331+ 8F97              ; ----------------------------------------------------------------
 332+ 8F97              ;
 333+ 8F97              ;   25/02/23
 334+ 8F97              ;
 335+ 8F97              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F97              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F97              ;
 338+ 8F97              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F97              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F97
 341+ 8F97              Almacena_disparo
 342+ 8F97
 343+ 8F97 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F98 F1               pop af
 345+ 8F99 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F9A
 347+ 8F9A 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F9B E6 01            and 1
 349+ 8F9D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F9F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F9F              ; 	Dispara AMADEUS.
 352+ 8F9F
 353+ 8F9F              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F9F              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F9F              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F9F              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F9F
 358+ 8F9F C5               push bc
 359+ 8FA0 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FA3 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FA6 A7               and a
 362+ 8FA7 ED 42            sbc hl,bc
 363+ 8FA9 CC 1F 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FAC C1               pop bc
 365+ 8FAD 28 54            jr z,4F
 366+ 8FAF
 367+ 8FAF 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FB2 23               inc hl
 369+ 8FB3 23               inc hl
 370+ 8FB4 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FB7              ;                                                   ; _ Disparo_(+1).
 372+ 8FB7 18 18            jr 2F
 373+ 8FB9
 374+ 8FB9              ; Dispara una entidad.
 375+ 8FB9
 376+ 8FB9 C5           1 push bc
 377+ 8FBA 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FBD 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FC0 A7               and a
 380+ 8FC1 ED 42            sbc hl,bc
 381+ 8FC3 CC 18 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FC6 C1               pop bc
 383+ 8FC7 28 3A            jr z,4F
 384+ 8FC9
 385+ 8FC9 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FCC 23               inc hl
 387+ 8FCD 23               inc hl
 388+ 8FCE 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FD1              ;                                                   ; _ Disparo_(+1).
 390+ 8FD1 CD 9E 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FD4              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FD4              ;
 393+ 8FD4              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FD4              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FD4              ;                                                     Puntero_de_impresion en HL.
 396+ 8FD4              ;                                                     Impacto/Dirección en BC.
 397+ 8FD4
 398+ 8FD4 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FD5 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FD6 23               inc hl                                          ; _ al siguiente.
 401+ 8FD7 A7               and a
 402+ 8FD8 20 C0            jr nz,3B
 403+ 8FDA
 404+ 8FDA 08               ex af,af
 405+ 8FDB ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FDF F9               ld sp,hl
 407+ 8FE0
 408+ 8FE0 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FE2 F5               push af                                         ; Puntero de impresión.
 410+ 8FE3 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FE5 C5               push bc                                         ; Control.
 412+ 8FE6
 413+ 8FE6 ED 7B 14 89      ld sp,(Stack)
 414+ 8FEA
 415+ 8FEA              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FEA
 417+ 8FEA 21 03 89     	ld hl,Ctrl_1
 418+ 8FED CB C6        	set 0,(hl)
 419+ 8FEF
 420+ 8FEF DD E5        	push ix
 421+ 8FF1 E1               pop hl
 422+ 8FF2 F5               push af
 423+ 8FF3 DD E1            pop ix
 424+ 8FF5
 425+ 8FF5 CD A0 7F     	call Guarda_foto_registros
 426+ 8FF8
 427+ 8FF8 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FFB CB 86        	res 0,(hl)
 429+ 8FFD
 430+ 8FFD              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FFD              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FFD
 433+ 8FFD CD 1F 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9000 CD 18 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9003
 436+ 9003 C9           4 ret
 437+ 9004
 438+ 9004              ; ----------------------------------------------------------------
 439+ 9004              ;
 440+ 9004              ;   4/3/23
 441+ 9004              ;
 442+ 9004              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9004              ;   _ al generarse el disparo.
 444+ 9004              ;
 445+ 9004              ;       "$80" ..... No se produce colisión.
 446+ 9004              ;       "$81" ..... Se produce colisión.
 447+ 9004              ;
 448+ 9004              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9004              ;         _ que forman el disparo.
 450+ 9004
 451+ 9004
 452+ 9004              Comprueba_Colision
 453+ 9004
 454+ 9004              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9004
 456+ 9004 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9006 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9007
 459+ 9007 CD 3D 90         call Modifica_H_Velocidad_disparo
 460+ 900A
 461+ 900A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 900B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 900D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 900F
 465+ 900F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9011 CD 2D 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9014
 468+ 9014 7B               ld a,e
 469+ 9015 E6 01            and 1
 470+ 9017 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9019              ;                                                  ; _ para activar IMPACTO.
 472+ 9019 E1               pop hl
 473+ 901A E5               push hl
 474+ 901B CD 8E 96         call NextScan
 475+ 901E
 476+ 901E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 901F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9021 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9023              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9023 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9025 CD 2D 90         call Bucle_2
 482+ 9028
 483+ 9028 43           1 ld b,e
 484+ 9029 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 902A FD E1            pop iy
 486+ 902C C9               ret
 487+ 902D
 488+ 902D              ; ---------- ----------
 489+ 902D
 490+ 902D 06 02        Bucle_2 ld b,2
 491+ 902F FD 7E 00     2 ld a,(iy)
 492+ 9032 A6               and (hl)
 493+ 9033 28 02            jr z,1F
 494+ 9035 1E 81            ld e,$81
 495+ 9037 23           1 inc hl
 496+ 9038 FD 23            inc iy
 497+ 903A 10 F3            djnz 2B
 498+ 903C C9               ret
 499+ 903D
 500+ 903D              ; ---------- ----------
 501+ 903D              ;
 502+ 903D              ;   21/7/23
 503+ 903D
 504+ 903D              Modifica_H_Velocidad_disparo
 505+ 903D
 506+ 903D 3A 4E 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9040 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9042 D0               ret nc                                         ; _ incrementamos H.
 509+ 9043 24               inc h
 510+ 9044
 511+ 9044 C9               ret
 512+ 9045
 513+ 9045              ; -------------------------------------------------------------------------------------------------------------
 514+ 9045              ;
 515+ 9045              ;   11/04/23
 516+ 9045              ;
 517+ 9045              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9045              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9045              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9045              ;
 521+ 9045              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9045
 523+ 9045              Compara_coordenadas_X
 524+ 9045
 525+ 9045              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9045              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9045
 528+ 9045              ; Preparamos registros:
 529+ 9045
 530+ 9045 21 CC 88         ld hl,Filas+6
 531+ 9048 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9049 23               inc hl
 533+ 904A 23               inc hl
 534+ 904B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 904C 43               ld b,e
 536+ 904D
 537+ 904D 21 DA 88         ld hl,Filas+20
 538+ 9050 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9051 21 49 89         ld hl,Coordenadas_X_Entidad
 540+ 9054 CD 70 92         call Guarda_coordenadas_X
 541+ 9057
 542+ 9057              ; Preparamos registros:
 543+ 9057
 544+ 9057 21 A4 85         ld hl,Amadeus_db+6
 545+ 905A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 905B 23               inc hl
 547+ 905C 23               inc hl
 548+ 905D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 905E 7B               ld a,e
 550+ 905F 08               ex af,af'
 551+ 9060 21 B2 85         ld hl,Amadeus_db+20
 552+ 9063 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9064 21 46 89         ld hl,Coordenadas_X_Amadeus
 554+ 9067 CD 70 92         call Guarda_coordenadas_X
 555+ 906A
 556+ 906A              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 906A              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 906A
 559+ 906A 04               inc b
 560+ 906B 05               dec b
 561+ 906C 28 04            jr z,1F
 562+ 906E 06 03            ld b,3
 563+ 9070 18 02            jr 2F
 564+ 9072 06 02        1 ld b,2
 565+ 9074 08           2 ex af,af'
 566+ 9075 3C               inc a
 567+ 9076 3D               dec a
 568+ 9077 28 04            jr z,5F
 569+ 9079 0E 03            ld c,3
 570+ 907B 18 02            jr 6F
 571+ 907D 0E 02        5 ld c,2
 572+ 907F 79           6 ld a,c
 573+ 9080 08               ex af,af'
 574+ 9081 11 49 89         ld de,Coordenadas_X_Entidad
 575+ 9084 1A           4 ld a,(de)
 576+ 9085 21 46 89         ld hl,Coordenadas_X_Amadeus
 577+ 9088 BE           3 cp (hl)
 578+ 9089 28 0E            jr z,7F
 579+ 908B 23               inc hl
 580+ 908C 0D               dec c
 581+ 908D 20 F9            jr nz,3B
 582+ 908F 13               inc de
 583+ 9090 08               ex af,af'
 584+ 9091 4F               ld c,a
 585+ 9092 08               ex af,af'
 586+ 9093 10 EF            djnz 4B
 587+ 9095
 588+ 9095              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9095
 590+ 9095 CD AC 92     8 call Limpia_Coordenadas_X
 591+ 9098 C9               ret
 592+ 9099
 593+ 9099 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 909B 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 909E 21 41 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90A1 CB D6            set 2,(hl)
 597+ 90A3 18 F0            jr 8B
 598+ 90A5
 599+ 90A5              ; -----------------------------------------------------------------------
 600+ 90A5              ;
 601+ 90A5              ;   17/04/23
 602+ 90A5              ;
 603+ 90A5
 604+ 90A5              Detecta_colision_nave_entidad
 605+ 90A5
 606+ 90A5              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90A5
 608+ 90A5 2A C8 88         ld hl,(Posicion_actual)
 609+ 90A8 CD E9 95         call Calcula_puntero_de_impresion
 610+ 90AB
 611+ 90AB              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90AB              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90AB
 614+ 90AB DD E5            push ix
 615+ 90AD E1               pop hl
 616+ 90AE E5               push hl
 617+ 90AF
 618+ 90AF              ; ----- ----- -----
 619+ 90AF 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90B1 06 0A            ld b,10
 621+ 90B3 CD E3 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90B6 7B               ld a,e
 623+ 90B7 FE 05            cp 5
 624+ 90B9 38 0E            jr c,3F
 625+ 90BB
 626+ 90BB              ; LLegados a este punto:
 627+ 90BB              ;
 628+ 90BB              ;   HAY COLISIÓN !!!!!.
 629+ 90BB              ;
 630+ 90BB              ;   .db (Impacto) de Amadeus a "1".
 631+ 90BB              ;   SET el bit3 de (Impacto2).
 632+ 90BB              ;
 633+ 90BB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90BB
 635+ 90BB 21 B7 85         ld hl,Amadeus_db+25
 636+ 90BE 36 01            ld (hl),1
 637+ 90C0 21 41 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90C3 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90C5 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90C7 18 18            jr 1F
 641+ 90C9
 642+ 90C9              ; -----
 643+ 90C9
 644+ 90C9 E1           3 pop hl
 645+ 90CA CD 8E 96         call NextScan
 646+ 90CD E5               push hl
 647+ 90CE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90CF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90D1 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90D3 30 0C            jr nc,1F
 651+ 90D5              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90D5 10 DC            djnz 2B
 653+ 90D7
 654+ 90D7              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90D7
 656+ 90D7              ; LLegados a este punto:
 657+ 90D7              ;
 658+ 90D7              ;   NO HAY COLISIÓN !!!!!.
 659+ 90D7              ;
 660+ 90D7              ;   .db (Impacto) de Amadeus a "0".
 661+ 90D7              ;   RES el bit2 de (Impacto2).
 662+ 90D7              ;
 663+ 90D7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90D7              ;   Lo colocamos a "0".
 665+ 90D7
 666+ 90D7 21 41 89         ld hl,Impacto2
 667+ 90DA CB 96            res 2,(hl)
 668+ 90DC 2A 42 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90DF 36 00            ld (hl),0
 670+ 90E1
 671+ 90E1 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90E2 C9               ret
 673+ 90E3
 674+ 90E3               ; ---------- ----------
 675+ 90E3
 676+ 90E3 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90E4 3A C7 88         ld a,(Columns)
 678+ 90E7 47               ld b,a
 679+ 90E8 FD 7E 00     2 ld a,(iy)
 680+ 90EB BE               cp (hl)
 681+ 90EC 28 01            jr z,1F
 682+ 90EE
 683+ 90EE 1C               inc e
 684+ 90EF
 685+ 90EF 23           1 inc hl
 686+ 90F0 FD 23            inc iy
 687+ 90F2 10 F4            djnz 2B
 688+ 90F4 C1               pop bc
 689+ 90F5 C9               ret
 690+ 90F6
 691+ 90F6              ; -------------------------------------------------------------------------------------------------------------
 692+ 90F6              ;
 693+ 90F6              ;   13/03/23
 694+ 90F6              ;
 695+ 90F6              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90F6              ;
 697+ 90F6              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90F6
 699+ 90F6 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90F9 7E               ld a,(hl)
 701+ 90FA A7               and a
 702+ 90FB C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90FC
 704+ 90FC 44               ld b,h
 705+ 90FD 4D               ld c,l
 706+ 90FE 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 9101 E5               push hl
 708+ 9102 A7               and a
 709+ 9103 ED 42            sbc hl,bc
 710+ 9105 E5               push hl
 711+ 9106 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9107
 713+ 9107 E1               pop hl
 714+ 9108 54               ld d,h
 715+ 9109 5D               ld e,l
 716+ 910A 1B               dec de
 717+ 910B ED B8            lddr                                                ; Limpiamos.
 718+ 910D
 719+ 910D 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9110 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 9113
 722+ 9113 C9               ret
 723+ 9114
 724+ 9114              ; -------------------------------------------------------------------------------------------------------------
 725+ 9114              ;
 726+ 9114              ;   18/07/23
 727+ 9114              ;
 728+ 9114
 729+ 9114              Motor_de_disparos
 730+ 9114
 731+ 9114              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9114
 733+ 9114 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9117 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 911A
 736+ 911A CD 9E 8C     2 call Extrae_address
 737+ 911D 7E               ld a,(hl)
 738+ 911E A7               and a
 739+ 911F 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9121
 741+ 9121              ; ----- ----- ----- ----- ----- -----
 742+ 9121
 743+ 9121 C5               push bc
 744+ 9122 CD E6 91         call foto_disparo_a_borrar
 745+ 9125
 746+ 9125              ; Existe colisión con este disparo???
 747+ 9125
 748+ 9125 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9126 7E               ld a,(hl)
 750+ 9127 2B               dec hl
 751+ 9128 E6 01            and 1
 752+ 912A 28 1D            jr z,9F
 753+ 912C
 754+ 912C              ;   En este punto:
 755+ 912C              ;
 756+ 912C              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 912C              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 912C              ;   _con la entidad).
 759+ 912C              ;
 760+ 912C              ;   Disparo_2A defw 0                                ; Control.
 761+ 912C              ;    defw 0                                          ; Puntero objeto.
 762+ 912C              ;    defw 0                                          ; Puntero de impresión.
 763+ 912C              ;    defw 0                                          ; Rutina de impresión.
 764+ 912C
 765+ 912C E5               push hl
 766+ 912D
 767+ 912D 06 04            ld b,4
 768+ 912F 23           19 inc hl
 769+ 9130 10 FD            djnz 19B
 770+ 9132
 771+ 9132 CD 9E 8C         call Extrae_address
 772+ 9135 CD 57 9D         call Genera_coordenadas_disparo
 773+ 9138
 774+ 9138              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9138
 776+ 9138 21 44 89         ld hl,Coordenadas_disparo_certero
 777+ 913B 72               ld (hl),d
 778+ 913C 23               inc hl
 779+ 913D 73               ld (hl),e
 780+ 913E
 781+ 913E              ; Elimino el disparo de la base de datos.
 782+ 913E
 783+ 913E E1               pop hl
 784+ 913F CD 65 92         call Elimina_disparo_de_base_de_datos
 785+ 9142 21 41 89         ld hl,Impacto2
 786+ 9145 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9147
 788+ 9147 18 06            jr 11F
 789+ 9149
 790+ 9149 CD 0F 92     9 call Mueve_disparo
 791+ 914C CD E6 91         call foto_disparo_a_borrar
 792+ 914F
 793+ 914F C1           11 pop bc
 794+ 9150 18 04            jr 7F
 795+ 9152
 796+ 9152              ; ----- ----- ----- ----- ----- -----
 797+ 9152
 798+ 9152 ED 42        1 sbc hl,bc
 799+ 9154 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9156
 801+ 9156 2A 3F 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9159 23               inc hl
 803+ 915A 23               inc hl
 804+ 915B 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 915E 18 BA            jr 2B
 806+ 9160
 807+ 9160 CD 1F 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9163              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9163
 810+ 9163              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9163
 812+ 9163 01 8A 85         ld bc,Disparo_11
 813+ 9166 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9169
 815+ 9169 CD 9E 8C     5 call Extrae_address
 816+ 916C 7E               ld a,(hl)
 817+ 916D A7               and a
 818+ 916E 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9170
 820+ 9170              ; ----- ----- ----- ----- ----- -----
 821+ 9170
 822+ 9170 C5               push bc
 823+ 9171 CD E6 91         call foto_disparo_a_borrar
 824+ 9174
 825+ 9174              ; Existe colisión con este disparo???
 826+ 9174
 827+ 9174 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9175 7E               ld a,(hl)
 829+ 9176 2B               dec hl
 830+ 9177 E6 01            and 1
 831+ 9179 28 4D            jr z,10F
 832+ 917B
 833+ 917B              ;! La colisión se produce con Amadeus???
 834+ 917B              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 917B
 836+ 917B E5               push hl
 837+ 917C
 838+ 917C 06 04            ld b,4
 839+ 917E 23           16 inc hl
 840+ 917F 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9181
 842+ 9181 CD 9E 8C         call Extrae_address
 843+ 9184 CD 57 9D         call Genera_coordenadas_disparo
 844+ 9187
 845+ 9187 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9188 FE 16            cp $16
 847+ 918A 38 2A            jr c,15F
 848+ 918C
 849+ 918C
 850+ 918C              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 918C
 852+ 918C D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 918D
 854+ 918D              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 918D
 856+ 918D
 857+ 918D 2A 4C 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9190
 859+ 9190              ; Coordenada X de Amadeus en D.
 860+ 9190
 861+ 9190 7D               ld a,l
 862+ 9191 E6 1F            and $1F
 863+ 9193 57               ld d,a
 864+ 9194
 865+ 9194 21 A6 85         ld hl,Amadeus_db+8
 866+ 9197 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9198
 868+ 9198 21 46 89         ld hl,Coordenadas_X_Amadeus
 869+ 919B CD 70 92         call Guarda_coordenadas_X
 870+ 919E
 871+ 919E D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 919F
 873+ 919F              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 919F
 875+ 919F 06 02            ld b,2
 876+ 91A1 C5           20 push bc
 877+ 91A2
 878+ 91A2 06 03            ld b,3
 879+ 91A4 21 46 89         ld hl,Coordenadas_X_Amadeus
 880+ 91A7 7E           18 ld a,(hl)
 881+ 91A8 BA               cp d
 882+ 91A9 20 04            jr nz,17F
 883+ 91AB
 884+ 91AB              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91AB
 886+ 91AB C1               pop bc
 887+ 91AC E1               pop hl
 888+ 91AD 18 0D            jr 14F
 889+ 91AF
 890+ 91AF 23           17 inc hl
 891+ 91B0 10 F5            djnz 18B
 892+ 91B2
 893+ 91B2 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91B3
 895+ 91B3 C1               pop bc
 896+ 91B4 10 EB            djnz 20B
 897+ 91B6
 898+ 91B6
 899+ 91B6              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91B6              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91B6
 902+ 91B6 E1           15 pop hl
 903+ 91B7 23               inc hl
 904+ 91B8 35               dec (hl)
 905+ 91B9 2B               dec hl
 906+ 91BA 18 0C            jr 10F
 907+ 91BC
 908+ 91BC              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91BC              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91BC
 911+ 91BC E5           14 push hl
 912+ 91BD CD 65 92         call Elimina_disparo_de_base_de_datos
 913+ 91C0 21 41 89         ld hl,Impacto2
 914+ 91C3 CB CE            set 1,(hl)
 915+ 91C5 E1               pop hl
 916+ 91C6 18 06            jr 12F
 917+ 91C8
 918+ 91C8              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91C8
 920+ 91C8 CD 0F 92     10 call Mueve_disparo
 921+ 91CB CD E6 91         call foto_disparo_a_borrar
 922+ 91CE C1           12 pop bc
 923+ 91CF
 924+ 91CF 18 04            jr 8F
 925+ 91D1
 926+ 91D1              ; ----- ----- ----- ----- ----- -----
 927+ 91D1
 928+ 91D1 ED 42        4 sbc hl,bc
 929+ 91D3 28 0A            jr z,6F
 930+ 91D5
 931+ 91D5 2A 3D 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91D8 23               inc hl
 933+ 91D9 23               inc hl
 934+ 91DA 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91DD 18 8A            jr 5B
 936+ 91DF
 937+ 91DF CD 18 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91E2 CD AC 92         call Limpia_Coordenadas_X
 939+ 91E5 C9               ret
 940+ 91E6
 941+ 91E6              ; ------------------------------------------------------------------
 942+ 91E6
 943+ 91E6              foto_disparo_a_borrar
 944+ 91E6
 945+ 91E6 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91E7 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91E8 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91E9
 949+ 91E9 E5               push hl
 950+ 91EA 23               inc hl
 951+ 91EB 23               inc hl
 952+ 91EC ED 73 14 89      ld (Stack),sp
 953+ 91F0 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91F1 FD E1            pop iy
 955+ 91F3 DD E1            pop ix
 956+ 91F5 E1               pop hl
 957+ 91F6 ED 7B 14 89      ld sp,(Stack)
 958+ 91FA 3A 03 89         ld a,(Ctrl_1)
 959+ 91FD CB C7            set 0,a
 960+ 91FF 32 03 89         ld (Ctrl_1),a
 961+ 9202 CD A0 7F         call Guarda_foto_registros
 962+ 9205 3A 03 89         ld a,(Ctrl_1)
 963+ 9208 CB 87            res 0,a
 964+ 920A 32 03 89         ld (Ctrl_1),a
 965+ 920D E1               pop hl
 966+ 920E C9               ret
 967+ 920F
 968+ 920F              ;---------------------------------------------------
 969+ 920F              ;
 970+ 920F              ;   18/07/23
 971+ 920F              ;
 972+ 920F
 973+ 920F              Mueve_disparo
 974+ 920F
 975+ 920F              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 920F              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 920F              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 920F
 979+ 920F E5               push hl
 980+ 9210
 981+ 9210 7E               ld a,(hl)
 982+ 9211
 983+ 9211 06 04            ld b,4
 984+ 9213 23           1 inc hl
 985+ 9214 10 FD            djnz 1B
 986+ 9216
 987+ 9216              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9216
 989+ 9216 CD 9E 8C         call Extrae_address
 990+ 9219
 991+ 9219 E6 01            and 1
 992+ 921B 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 921D
 994+ 921D              ; Disparo hacia arriba, (Amadeus).
 995+ 921D
 996+ 921D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 921D              ; _ de la dificultad.
 998+ 921D
 999+ 921D CD 9D 96         call PreviousScan
1000+ 9220 CD 9D 96         call PreviousScan
1001+ 9223 CD 9D 96         call PreviousScan
1002+ 9226 CD 9D 96         call PreviousScan
1003+ 9229
1004+ 9229              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9229
1006+ 9229 7C               ld a,h
1007+ 922A FE 40            cp $40
1008+ 922C 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 922E
1010+ 922E              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 922E
1012+ 922E EB               ex de,hl
1013+ 922F 06 04            ld b,4
1014+ 9231 2B           6 dec hl
1015+ 9232 10 FD            djnz 6B
1016+ 9234
1017+ 9234 CD 65 92         call Elimina_disparo_de_base_de_datos
1018+ 9237 E1               pop hl
1019+ 9238 18 10            jr 7F
1020+ 923A
1021+ 923A              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 923A              ; HL contiene el puntero de impresión del disparo.
1023+ 923A              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 923A
1025+ 923A D5           3 push de
1026+ 923B C5               push bc
1027+ 923C
1028+ 923C CD 04 90         call Comprueba_Colision
1029+ 923F
1030+ 923F              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 923F
1032+ 923F 78               ld a,b
1033+ 9240
1034+ 9240 C1               pop bc
1035+ 9241 D1               pop de
1036+ 9242
1037+ 9242 EB               ex de,hl
1038+ 9243
1039+ 9243 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9244 23               inc hl                                      ; _ movimiento.
1041+ 9245 72               ld (hl),d
1042+ 9246
1043+ 9246 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9247
1045+ 9247 23               inc hl                                      ; _ en curso.
1046+ 9248 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9249 2B               dec hl
1048+ 924A
1049+ 924A C9           7 ret
1050+ 924B
1051+ 924B              ; Disparo hacia abajo, (Entidad).
1052+ 924B
1053+ 924B 3A 4E 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 924E 47               ld b,a
1055+ 924F
1056+ 924F CD 8E 96     4 call NextScan
1057+ 9252 10 FB            djnz 4B
1058+ 9254
1059+ 9254              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9254
1061+ 9254 7C               ld a,h
1062+ 9255 FE 58            cp $58
1063+ 9257 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9259
1065+ 9259 EB               ex de,hl
1066+ 925A 06 04            ld b,4
1067+ 925C 2B           5 dec hl
1068+ 925D 10 FD            djnz 5B
1069+ 925F
1070+ 925F CD 65 92         call Elimina_disparo_de_base_de_datos
1071+ 9262 E1               pop hl
1072+ 9263 18 E5            jr 7B
1073+ 9265
1074+ 9265              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9265
1076+ 9265 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9268 AF               xor a
1078+ 9269 77               ld (hl),a
1079+ 926A 54               ld d,h
1080+ 926B 5D               ld e,l
1081+ 926C 13               inc de
1082+ 926D ED B0            ldir
1083+ 926F C9               ret
1084+ 9270
1085+ 9270              ; -----------------------------------------------------------------
1086+ 9270              ;
1087+ 9270              ;   19/7/23
1088+ 9270              ;
1089+ 9270              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9270              ;
1091+ 9270              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9270              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9270              ;
1094+ 9270              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9270              ;
1096+ 9270              ;   INPUTS:
1097+ 9270              ;
1098+ 9270              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9270              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9270
1101+ 9270              ;   MODIFICA: A, HL, BC y DE.
1102+ 9270
1103+ 9270              Guarda_coordenadas_X
1104+ 9270
1105+ 9270 7B               ld a,e
1106+ 9271 A7               and a
1107+ 9272 20 04            jr nz,1F
1108+ 9274
1109+ 9274 06 02            ld b,2
1110+ 9276 18 02            jr 2F
1111+ 9278
1112+ 9278 06 03        1 ld b,3
1113+ 927A 72           2 ld (hl),d
1114+ 927B 23               inc hl
1115+ 927C 14               inc d
1116+ 927D 10 FB            djnz 2B
1117+ 927F
1118+ 927F C9               ret
1119+ 9280
1120+ 9280              ; -----------------------------------------------------------------
1121+ 9280              ;
1122+ 9280              ;   12/04/23
1123+ 9280              ;
1124+ 9280
1125+ 9280 3A 41 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9283 A7               and a
1127+ 9284 C8               ret z
1128+ 9285
1129+ 9285 FE 04            cp 4
1130+ 9287 20 09            jr nz,1F
1131+ 9289
1132+ 9289
1133+ 9289              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9289
1135+ 9289 CD A5 90         call Detecta_colision_nave_entidad
1136+ 928C
1137+ 928C 21 41 89         ld hl,Impacto2
1138+ 928F CB 5E            bit 3,(hl)
1139+ 9291 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9292
1141+ 9292              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9292              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9292
1144+ 9292 21 41 89     1 ld hl,Impacto2
1145+ 9295 CB 4E            bit 1,(hl)
1146+ 9297 28 07            jr z,2F
1147+ 9299
1148+ 9299 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 929C 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 929E 18 0B            jr 3F
1151+ 92A0
1152+ 92A0 21 41 89     2 ld hl,Impacto2
1153+ 92A3 CB 46            bit 0,(hl)
1154+ 92A5 C8               ret z
1155+ 92A6
1156+ 92A6              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92A6
1158+ 92A6 21 03 89         ld hl,Ctrl_1
1159+ 92A9 CB D6            set 2,(hl)
1160+ 92AB
1161+ 92AB C9           3 ret
1162+ 92AC
1163+ 92AC              ; -----------------------------------------------------------------
1164+ 92AC              ;
1165+ 92AC              ;   19/7/23
1166+ 92AC              ;
1167+ 92AC              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92AC
1169+ 92AC AF           Limpia_Coordenadas_X xor a
1170+ 92AD 06 06            ld b,6
1171+ 92AF 21 46 89         ld hl,Coordenadas_X_Amadeus
1172+ 92B2 77           1 ld (hl),a
1173+ 92B3 23               inc hl
1174+ 92B4 10 FC            djnz 1B
1175+ 92B6 C9               ret
1176+ 92B7
1177+ 92B7              ; -----------------------------------------------------------------
1178+ 92B7              ;
1179+ 92B7              ;   25/04/23
1180+ 92B7              ;
1181+ 92B7
1182+ 92B7              Determina_resultado_comparativa
1183+ 92B7
1184+ 92B7              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92B7              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92B7              ;
1187+ 92B7              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92B7              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92B7              ;
1190+ 92B7              ;   SBC HL,DE
1191+ 92B7
1192+ 92B7              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92B7              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92B7
1195+ 92B7              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92B7              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92B7
1198+ 92B7
1199+ 92B7 3A DA 88         ld a,(Cuad_objeto)
1200+ 92BA FE 02            cp 2
1201+ 92BC 28 26            jr z,2F
1202+ 92BE 38 24            jr c,2F
1203+ 92C0
1204+ 92C0              ; Cuadrantes 3º y 4º
1205+ 92C0
1206+ 92C0 E6 01            and 1
1207+ 92C2 28 10            jr z,4F
1208+ 92C4
1209+ 92C4              ; Cuadrante 3º
1210+ 92C4
1211+ 92C4 7C               ld a,h
1212+ 92C5 06 00            ld b,0
1213+ 92C7
1214+ 92C7 CD 52 93         call Compara_cositas_H3
1215+ 92CA
1216+ 92CA 04               inc b
1217+ 92CB 05               dec b
1218+ 92CC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92CD
1220+ 92CD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92CE 06 00            ld b,0
1222+ 92D0
1223+ 92D0 CD 64 93         call Compara_cositas_L3
1224+ 92D3 C9               ret
1225+ 92D4
1226+ 92D4              ; Cuadrante 4º
1227+ 92D4
1228+ 92D4 7C           4 ld a,h
1229+ 92D5 06 00            ld b,0
1230+ 92D7
1231+ 92D7 CD 76 93         call Compara_cositas_H4
1232+ 92DA
1233+ 92DA 04               inc b
1234+ 92DB 05               dec b
1235+ 92DC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92DD
1237+ 92DD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92DE 06 00            ld b,0
1239+ 92E0
1240+ 92E0 CD 8C 93         call Compara_cositas_L4
1241+ 92E3 C9               ret
1242+ 92E4
1243+ 92E4              ; Cuadrantes 1º y 2º.
1244+ 92E4
1245+ 92E4 28 10        2 jr z,3F
1246+ 92E6
1247+ 92E6              ; 1er Cuadrante
1248+ 92E6
1249+ 92E6 7C               ld a,h
1250+ 92E7 06 00            ld b,0
1251+ 92E9
1252+ 92E9 CD 2A 93         call Compara_cositas_H1
1253+ 92EC
1254+ 92EC 04               inc b
1255+ 92ED 05               dec b
1256+ 92EE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92EF
1258+ 92EF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92F0 06 00            ld b,0
1260+ 92F2
1261+ 92F2 CD 40 93         call Compara_cositas_L1
1262+ 92F5 C9               ret
1263+ 92F6
1264+ 92F6
1265+ 92F6              ; 2º Cuadrante
1266+ 92F6
1267+ 92F6 7C           3 ld a,h
1268+ 92F7 06 00            ld b,0
1269+ 92F9
1270+ 92F9 CD 06 93         call Compara_cositas_H2
1271+ 92FC
1272+ 92FC 04               inc b
1273+ 92FD 05               dec b
1274+ 92FE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92FF
1276+ 92FF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9300 06 00            ld b,0
1278+ 9302
1279+ 9302 CD 18 93         call Compara_cositas_L2
1280+ 9305 C9               ret
1281+ 9306
1282+ 9306 A7           Compara_cositas_H2 and a
1283+ 9307 28 0D            jr z,1F
1284+ 9309              ;    cp $fd
1285+ 9309              ;    jr z,1F
1286+ 9309              ;    cp $fe
1287+ 9309              ;    jr z,1F
1288+ 9309 FE FF            cp $ff
1289+ 930B 28 09            jr z,1F
1290+ 930D FE 01            cp $01
1291+ 930F 28 05            jr z,1F
1292+ 9311 FE 02            cp $02
1293+ 9313 28 01            jr z,1F
1294+ 9315 C0               ret nz
1295+ 9316 04           1 inc b
1296+ 9317 C9               ret
1297+ 9318
1298+ 9318 A7           Compara_cositas_L2 and a
1299+ 9319 28 0D            jr z,1F
1300+ 931B              ;    cp $fd
1301+ 931B              ;    jr z,1F
1302+ 931B FE FE            cp $fe
1303+ 931D 28 09            jr z,1F
1304+ 931F FE FF            cp $ff
1305+ 9321 28 05            jr z,1F
1306+ 9323 FE 01            cp $01
1307+ 9325 28 01            jr z,1F
1308+ 9327              ;    cp $02
1309+ 9327              ;    jr z,1F
1310+ 9327 C0               ret nz
1311+ 9328 04           1 inc b
1312+ 9329 C9               ret
1313+ 932A
1314+ 932A A7           Compara_cositas_H1 and a
1315+ 932B 28 11            jr z,1F
1316+ 932D              ;    cp $fd
1317+ 932D              ;    jr z,1F
1318+ 932D              ;    cp $fe
1319+ 932D              ;    jr z,1F
1320+ 932D FE FF            cp $ff
1321+ 932F 28 0D            jr z,1F
1322+ 9331 FE 01            cp $01
1323+ 9333 28 09            jr z,1F
1324+ 9335 FE 02            cp $02
1325+ 9337 28 05            jr z,1F
1326+ 9339 FE 03            cp $03
1327+ 933B 28 01            jr z,1F
1328+ 933D C0               ret nz
1329+ 933E 04           1 inc b
1330+ 933F C9               ret
1331+ 9340
1332+ 9340 A7           Compara_cositas_L1 and a
1333+ 9341 28 0D            jr z,1F
1334+ 9343              ;    cp $fd
1335+ 9343              ;    jr z,1F
1336+ 9343              ;    cp $fe
1337+ 9343              ;    jr z,1F
1338+ 9343              ;    cp $ff
1339+ 9343              ;    jr z,1F
1340+ 9343 FE 01            cp $01
1341+ 9345 28 09            jr z,1F
1342+ 9347 FE 02            cp $02
1343+ 9349 28 05            jr z,1F
1344+ 934B FE 03            cp $03
1345+ 934D 28 01            jr z,1F
1346+ 934F C0               ret nz
1347+ 9350 04           1 inc b
1348+ 9351 C9               ret
1349+ 9352
1350+ 9352 A7           Compara_cositas_H3 and a
1351+ 9353 28 0D            jr z,1F
1352+ 9355              ;    cp $fd
1353+ 9355              ;    jr z,1F
1354+ 9355 FE FE            cp $fe
1355+ 9357 28 09            jr z,1F
1356+ 9359 FE FF            cp $ff
1357+ 935B 28 05            jr z,1F
1358+ 935D FE 01            cp $01
1359+ 935F 28 01            jr z,1F
1360+ 9361              ;    cp $02
1361+ 9361              ;    jr z,1F
1362+ 9361              ;    cp $03
1363+ 9361              ;    jr z,1F
1364+ 9361 C0               ret nz
1365+ 9362 04           1 inc b
1366+ 9363 C9               ret
1367+ 9364
1368+ 9364 A7           Compara_cositas_L3 and a
1369+ 9365 28 0D            jr z,1F
1370+ 9367              ;    cp $fd
1371+ 9367              ;    jr z,1F
1372+ 9367              ;    cp $fe
1373+ 9367              ;    jr z,1F
1374+ 9367              ;    cp $ff
1375+ 9367              ;    jr z,1F
1376+ 9367 FE 01            cp $01
1377+ 9369 28 09            jr z,1F
1378+ 936B FE 02            cp $02
1379+ 936D 28 05            jr z,1F
1380+ 936F FE 03            cp $03
1381+ 9371 28 01            jr z,1F
1382+ 9373 C0               ret nz
1383+ 9374 04           1 inc b
1384+ 9375 C9               ret
1385+ 9376
1386+ 9376 A7           Compara_cositas_H4 and a
1387+ 9377 28 11            jr z,1F
1388+ 9379 FE FD            cp $fd
1389+ 937B 28 0D            jr z,1F
1390+ 937D FE FE            cp $fe
1391+ 937F 28 09            jr z,1F
1392+ 9381 FE FF            cp $ff
1393+ 9383 28 05            jr z,1F
1394+ 9385 FE 01            cp $01
1395+ 9387 28 01            jr z,1F
1396+ 9389              ;    cp $02
1397+ 9389              ;    jr z,1F
1398+ 9389              ;    cp $03
1399+ 9389              ;    jr z,1F
1400+ 9389 C0               ret nz
1401+ 938A 04           1 inc b
1402+ 938B C9               ret
1403+ 938C
1404+ 938C A7           Compara_cositas_L4 and a
1405+ 938D 28 0D            jr z,1F
1406+ 938F              ;    cp $fd
1407+ 938F              ;    jr z,1F
1408+ 938F FE FE            cp $fe
1409+ 9391 28 09            jr z,1F
1410+ 9393 FE FF            cp $ff
1411+ 9395 28 05            jr z,1F
1412+ 9397 FE 01            cp $01
1413+ 9399 28 01            jr z,1F
1414+ 939B              ;    cp $02
1415+ 939B              ;    jr z,1F
1416+ 939B              ;    cp $03
1417+ 939B              ;    jr z,1F
1418+ 939B C0               ret nz
1419+ 939C 04           1 inc b
1420+ 939D C9               ret
# file closed: Disparo.asm
1694  939E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 939E              ; ******************************************************************************************************************************************************************************************
   2+ 939E              ;
   3+ 939E              ; 26/06/23
   4+ 939E              ;
   5+ 939E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 939E
   7+ 939E CD 82 96     Draw call Prepara_draw
   8+ 93A1 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93A2 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93A3 28 05        	jr z,2F
  11+ 93A5
  12+ 93A5 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93A8 18 0C        	jr 1F
  14+ 93AA
  15+ 93AA 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93AD 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93B0 CD 3F 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93B3              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93B3 CD E4 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93B6
  21+ 93B6 3A F0 88     1 ld a,(Ctrl_0)
  22+ 93B9 CB 6F        	bit 5,a
  23+ 93BB 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93BD
  25+ 93BD CD D5 93     	call Comprueba_limite_horizontal
  26+ 93C0 CD 65 94     	call Comprueba_limite_vertical
  27+ 93C3
  28+ 93C3              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93C3              ; -----------------------
  30+ 93C3              ; -----------------------
  31+ 93C3              ; -----------------------
  32+ 93C3
  33+ 93C3 CD B2 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93C6 CD E9 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93C9 CD 48 96     	call Define_rutina_de_impresion
  36+ 93CC
  37+ 93CC 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93CF CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93D1 32 F0 88     	ld (Ctrl_0),a
  40+ 93D4
  41+ 93D4 C9           	ret
  42+ 93D5
  43+ 93D5              ; *******************************************************************************************************************************************************************************************
  44+ 93D5              ;	21/01/23
  45+ 93D5              ;
  46+ 93D5              ; 	Comprueba_limite_horizontal.
  47+ 93D5              ;
  48+ 93D5              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93D5              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93D5              ;
  51+ 93D5              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93D5              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93D5              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93D5              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93D5
  56+ 93D5
  57+ 93D5
  58+ 93D5 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93D8 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93DA 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93DC E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93DE 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93E1 18 09            jr 6F
  64+ 93E3 CB 5F        1 bit 3,a
  65+ 93E5 28 0A            jr z,2F
  66+ 93E7 E6 F7            and $f7
  67+ 93E9 32 F0 88         ld (Ctrl_0),a
  68+ 93EC CD 3F 95     6 call Inicializacion
  69+ 93EF 18 5B            jr 5F
  70+ 93F1 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93F2
  72+ 93F2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93F2              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93F2
  75+ 93F2 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93F3 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93F6 CD A1 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93F9 67           	ld h,a
  79+ 93FA EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93FB CD A1 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93FE 67           	ld h,a
  82+ 93FF A7           	and a
  83+ 9400 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9402 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9403 3A DA 88     	ld a,(Cuad_objeto)
  86+ 9406 FE 02        	cp 2
  87+ 9408 38 1E        	jr c,3F
  88+ 940A 28 1C        	jr z,3F
  89+ 940C 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 940D 28 23            jr z,7F
  91+ 940F 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9411 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9413 E1           	pop hl
  94+ 9414
  95+ 9414              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9414              ; _para indicar con E="2" en caso necesario.
  97+ 9414
  98+ 9414 E5               push hl
  99+ 9415 C5               push bc
 100+ 9416 CD A1 99     	call calcula_tercio
 101+ 9419 FE 01        	cp 1
 102+ 941B 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 941D CD 4D 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9420 28 26            jr z,9F
 105+ 9422 38 24            jr c,9F
 106+ 9424 1E 00        11 ld e,0
 107+ 9426 18 22            jr 8F
 108+ 9428 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9429 28 07        	jr z, 7F
 110+ 942B 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 942D 1E 00         	ld e,0
 112+ 942F E1           	pop hl
 113+ 9430 18 04        	jr 4F
 114+ 9432 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9434 18 15            jr 10F
 116+ 9436
 117+ 9436              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9436              ; _para indicar con E="2" en caso necesario.
 119+ 9436
 120+ 9436 E5           4 push hl
 121+ 9437 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9438 CD A1 99     	call calcula_tercio
 123+ 943B FE 01        	cp 1
 124+ 943D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 943F CD 4D 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9442 28 04            jr z,9F
 127+ 9444 30 02            jr nc,9F
 128+ 9446 18 02        	jr 8F
 129+ 9448 1E 02        9 ld e,2
 130+ 944A C1           8 pop bc
 131+ 944B E1           10 pop hl
 132+ 944C C9           5 ret
 133+ 944D
 134+ 944D              ; --------------------
 135+ 944D              ;
 136+ 944D              ; 25/08/22
 137+ 944D
 138+ 944D CD A1 99     Comprueba_centro call calcula_tercio
 139+ 9450 67               ld h,a
 140+ 9451 08           	ex af,af
 141+ 9452 FE 02        	cp 2
 142+ 9454 38 07        	jr c,1F
 143+ 9456 28 05        	jr z,1F
 144+ 9458 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 945B 18 03        	jr 2F
 146+ 945D 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9460 08           2 ex af,af
 148+ 9461 A7               and a
 149+ 9462 ED 42            sbc hl,bc
 150+ 9464 C9               ret
 151+ 9465
 152+ 9465              ; *********************************************************************************************************************************************************************************************
 153+ 9465              ;
 154+ 9465              ;   16/8/22
 155+ 9465              ;
 156+ 9465              ;	Comprueba_limite_vertical
 157+ 9465              ;
 158+ 9465              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9465              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9465              ;
 161+ 9465
 162+ 9465 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9468 7D           	ld a,l
 164+ 9469 E6 1F        	and $1F
 165+ 946B 57           	ld d,a
 166+ 946C 3A 00 89     	ld a,(Limite_vertical)
 167+ 946F BA           	cp d 											; Límite - Posición.
 168+ 9470 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9471 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9474 CB 47        	bit 0,a
 171+ 9476 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9478
 173+ 9478              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9478
 175+ 9478 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9479 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 947B
 178+ 947B              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 947B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 947B
 181+ 947B 3A CC 88         ld a,(Coordenada_X)
 182+ 947E 16 0F            ld d,Centro_izquierda
 183+ 9480 A7               and a
 184+ 9481 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9482 28 1E            jr z,3F
 186+ 9484 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9486              ;                                                    ; _salimos sin modificar nada.
 188+ 9486 18 0E            jr 2F
 189+ 9488 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9489 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 948B
 192+ 948B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 948B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 948B
 195+ 948B 3A CC 88         ld a,(Coordenada_X)
 196+ 948E 16 10            ld d,Centro_derecha
 197+ 9490 A7               and a
 198+ 9491 92               sub d
 199+ 9492 28 0E            jr z,3F
 200+ 9494 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9496              ;                                                    ; _salimos sin modificar nada.
 202+ 9496 CB 43        2 bit 0,e
 203+ 9498 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 949A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 949B CD 2F 95         call Modificaccionne
 206+ 949E C1           	pop bc
 207+ 949F CD 3F 95         call Inicializacion
 208+ 94A2 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94A3
 210+ 94A3              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94A3
 212+ 94A3 C5           4 push bc
 213+ 94A4 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94A7 0A           	ld a,(bc)
 215+ 94A8 3D           	dec a
 216+ 94A9 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94AA 7D           	ld a,l
 218+ 94AB 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94AC CB 47        	bit 0,a
 220+ 94AE 28 03        	jr z,5F
 221+ 94B0 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94B1 18 2E        	jr 7F
 223+ 94B3
 224+ 94B3              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94B3
 226+ 94B3 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94B4 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94B5 3A F0 88     	ld a,(Ctrl_0)
 229+ 94B8 CB 4F        	bit 1,a
 230+ 94BA 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94BC F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94BD
 233+ 94BD              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94BD
 235+ 94BD 1C               inc e
 236+ 94BE 1D               dec e
 237+ 94BF 20 07            jr nz,12F
 238+ 94C1 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94C2 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94C3 22 C8 88     	ld (Posicion_actual),hl
 241+ 94C6 18 44        13 jr 9F
 242+ 94C8 CB 43        12 bit 0,e
 243+ 94CA 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94CC              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94CC C1           	pop bc
 246+ 94CD 18 D3        	jr 3B
 247+ 94CF 80           14 add b
 248+ 94D0 6F               ld l,a
 249+ 94D1 22 C8 88     	ld (Posicion_actual),hl
 250+ 94D4 CD 2F 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94D7 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94D9 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94DB 32 F0 88         ld (Ctrl_0),a
 254+ 94DE F1           	pop af
 255+ 94DF 18 2B        	jr 9F
 256+ 94E1
 257+ 94E1              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94E1
 259+ 94E1 F5           7 push af
 260+ 94E2 3A F0 88     	ld a,(Ctrl_0)
 261+ 94E5 CB 47        	bit 0,a
 262+ 94E7 20 1D        	jr nz,8F
 263+ 94E9 F1           	pop af
 264+ 94EA
 265+ 94EA              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94EA
 267+ 94EA 1C           	inc e
 268+ 94EB 1D               dec e
 269+ 94EC 20 07            jr nz,10F
 270+ 94EE 90           	sub b
 271+ 94EF 6F               ld l,a
 272+ 94F0 22 C8 88     	ld (Posicion_actual),hl
 273+ 94F3 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94F5              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94F5 CB 43        10 bit 0,e
 276+ 94F7 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94F9              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94F9 C1           	pop bc
 279+ 94FA 18 A6        	jr 3B
 280+ 94FC 90           16 sub b
 281+ 94FD 6F               ld l,a
 282+ 94FE 22 C8 88     	ld (Posicion_actual),hl
 283+ 9501 CD 2F 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9504 18 06            jr 9F
 285+ 9506 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9508 32 F0 88         ld (Ctrl_0),a
 287+ 950B F1           	pop af
 288+ 950C C1           9 pop bc
 289+ 950D 1E 00        	ld e,0
 290+ 950F CD 3F 95         call Inicializacion
 291+ 9512 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9513 08           	ex af,af
 293+ 9514 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9515 18 8B            jr 3B
 295+ 9517
 296+ 9517              ; --------------------
 297+ 9517
 298+ 9517 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9519 CD 9D 96     1 call PreviousScan
 300+ 951C 10 FB            djnz 1B
 301+ 951E 22 C8 88     	ld (Posicion_actual),hl
 302+ 9521 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9522 C9           	ret
 304+ 9523
 305+ 9523              ; --------------------
 306+ 9523
 307+ 9523 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9525 CD 8E 96     1 call NextScan
 309+ 9528 10 FB            djnz 1B
 310+ 952A 22 C8 88     	ld (Posicion_actual),hl
 311+ 952D AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 952E C9           	ret
 313+ 952F
 314+ 952F              ; --------------------
 315+ 952F              ;
 316+ 952F              ;	22/01/23
 317+ 952F              ;
 318+ 952F              ;	E="1". Hemos cambiado de cuadrante.
 319+ 952F              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 952F              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 952F
 322+ 952F
 323+ 952F              Modificaccionne
 324+ 952F
 325+ 952F 3A DA 88     	ld a,(Cuad_objeto)
 326+ 9532 FE 02        	cp 2
 327+ 9534 CC 17 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9537 DC 17 95         call c,Modifica_Pos_actual
 329+ 953A C8           	ret z
 330+ 953B CD 23 95         call Modifica_Pos_actual2
 331+ 953E C9               ret
 332+ 953F
 333+ 953F              ; *************************************************************************************************************************************************************************************************
 334+ 953F              ;
 335+ 953F              ;	13/8/22
 336+ 953F              ;
 337+ 953F              ;	Inicializacion
 338+ 953F              ;
 339+ 953F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 953F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 953F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 953F              ;
 343+ 953F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 953F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 953F              ;	_ desaparece/aparece.
 346+ 953F
 347+ 953F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 953F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 953F              ;
 350+ 953F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 953F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 953F              ; 		   [E] ="0"
 353+ 953F
 354+ 953F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 953F
 356+ 953F CD A1 99     Inicializacion call calcula_tercio
 357+ 9542 28 36        	jr z,primit
 358+ 9544 E6 02        	and 2
 359+ 9546 20 07        	jr nz,segmit
 360+ 9548 7D           	ld a,l
 361+ 9549 FE 7F        	cp $7f
 362+ 954B 38 2D        	jr c,primit
 363+ 954D 28 2B        	jr z,primit
 364+ 954F CD AC 95     segmit call column
 365+ 9552 38 13        	jr c,tercuad
 366+ 9554 3E 04        cuarcuad ld a,4
 367+ 9556 32 DA 88     	ld (Cuad_objeto),a
 368+ 9559 21 20 48     	ld hl,$4820
 369+ 955C 22 FE 88     	ld (Limite_horizontal),hl
 370+ 955F 21 00 89     	ld hl,Limite_vertical
 371+ 9562 36 0D        	ld (hl),$0d
 372+ 9564 08           	ex af,af
 373+ 9565 18 3C        	jr 1F
 374+ 9567              tercuad
 375+ 9567 3E 03        	ld a,3
 376+ 9569 32 DA 88     	ld (Cuad_objeto),a
 377+ 956C 21 20 48     	ld hl,$4820
 378+ 956F 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9572 21 00 89     	ld hl,Limite_vertical
 380+ 9575 36 12        	ld (hl),$12
 381+ 9577 08           	ex af,af
 382+ 9578 18 29        	jr 1F
 383+ 957A CD AC 95     primit call column
 384+ 957D 38 13        	jr c, primcuad
 385+ 957F              segcuad
 386+ 957F 3E 02        	ld a,2
 387+ 9581 32 DA 88     	ld (Cuad_objeto),a
 388+ 9584 21 C0 4F     	ld hl,$4fc0
 389+ 9587 22 FE 88     	ld (Limite_horizontal),hl
 390+ 958A 21 00 89     	ld hl,Limite_vertical
 391+ 958D 36 0D        	ld (hl),$0d
 392+ 958F 08           	ex af,af
 393+ 9590 18 11        	jr 1F
 394+ 9592              primcuad
 395+ 9592 3E 01        	ld a,1
 396+ 9594 32 DA 88     	ld (Cuad_objeto),a
 397+ 9597 21 C0 4F     	ld hl,$4fc0
 398+ 959A 22 FE 88     	ld (Limite_horizontal),hl
 399+ 959D 21 00 89     	ld hl,Limite_vertical
 400+ 95A0 36 12        	ld (hl),$12
 401+ 95A2 08           	ex af,af
 402+ 95A3 CD 2C 9D     1 call Genera_coordenadas
 403+ 95A6 21 F0 88     	ld hl,Ctrl_0
 404+ 95A9 CB EE        	set 5,(hl)
 405+ 95AB C9           	ret
 406+ 95AC
 407+ 95AC              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95AC
 409+ 95AC              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95AC              ;
 411+ 95AC              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95AC
 413+ 95AC 7D           column ld a,l
 414+ 95AD E6 1F        	and $1f
 415+ 95AF FE 10         	cp $10
 416+ 95B1 C9            	ret
 417+ 95B2
 418+ 95B2              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95B2              ;
 420+ 95B2              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95B2              ;
 422+ 95B2              ; 14/12/22
 423+ 95B2              ;
 424+ 95B2              ;	Modifica: A y BC.
 425+ 95B2
 426+ 95B2 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95B5 E6 01        	and 1
 428+ 95B7 28 17        	jr z,1F
 429+ 95B9
 430+ 95B9              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95B9
 432+ 95B9 3A CC 88     	ld a,(Coordenada_X)
 433+ 95BC 47           	ld b,a
 434+ 95BD 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95BE 79           	ld a,c
 436+ 95BF 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95C0 38 08        	jr c,2F
 438+ 95C2 47           	ld b,a
 439+ 95C3 79           	ld a,c
 440+ 95C4 90           	sub b
 441+ 95C5 32 FD 88     	ld (Columnas),a
 442+ 95C8 18 1B        	jr 4F
 443+ 95CA 79           2 ld a,c
 444+ 95CB 32 FD 88     	ld (Columnas),a
 445+ 95CE 18 15        	jr 4F
 446+ 95D0
 447+ 95D0              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95D0
 449+ 95D0 3A CC 88     1 ld a,(Coordenada_X)
 450+ 95D3 81           	add c
 451+ 95D4 3D           	dec a
 452+ 95D5 D6 1F        	sub $1f
 453+ 95D7 38 08        	jr c,3F
 454+ 95D9 47           	ld b,a
 455+ 95DA 79           	ld a,c
 456+ 95DB 90           	sub b
 457+ 95DC 32 FD 88     	ld (Columnas),a
 458+ 95DF 18 04        	jr 4F
 459+ 95E1 79           3 ld a,c
 460+ 95E2 32 FD 88     	ld (Columnas),a
 461+ 95E5 D9           4 exx
 462+ 95E6 4F           	ld c,a
 463+ 95E7 D9           	exx
 464+ 95E8 C9            ret
 465+ 95E9
 466+ 95E9              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95E9              ;
 468+ 95E9              ;   19/7/23
 469+ 95E9              ;
 470+ 95E9              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95E9              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95E9              ;
 473+ 95E9              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95E9              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95E9              ;
 476+ 95E9              ;	DESTRUYE: HL,B Y A.
 477+ 95E9
 478+ 95E9 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95EC FE 02        	cp 2
 480+ 95EE 38 18        	jr c,1F
 481+ 95F0 28 16        	jr z,1F
 482+ 95F2 E6 01        	and 1
 483+ 95F4 28 0D        	jr z,3F
 484+ 95F6
 485+ 95F6              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95F6
 487+ 95F6 CD 3C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95F9
 489+ 95F9 7D           9 ld a,l
 490+ 95FA E6 1F        	and $1f
 491+ 95FC 28 2A        	jr z,7F
 492+ 95FE 2B           	dec hl
 493+ 95FF 10 F8        	djnz 9B
 494+ 9601 18 25        	jr 7F
 495+ 9603
 496+ 9603              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9603
 498+ 9603 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 9606 18 20        	jr 7F
 500+ 9608
 501+ 9608 28 14        1 jr z,2F
 502+ 960A
 503+ 960A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 960A
 505+ 960A CD 3C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 960D
 507+ 960D 7D           4 ld a,l
 508+ 960E E6 1F        	and $1f
 509+ 9610 28 03        	jr z,6F
 510+ 9612 2B           	dec hl
 511+ 9613 10 F8        	djnz 4B
 512+ 9615 06 0F        6 ld b,15
 513+ 9617 CD 9D 96     5 call PreviousScan
 514+ 961A 10 FB        	djnz 5B
 515+ 961C 18 0A        	jr 7F
 516+ 961E
 517+ 961E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 961E
 519+ 961E CD 3C 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9621 06 0F        	ld b,15
 521+ 9623 CD 9D 96     8 call PreviousScan
 522+ 9626 10 FB        	djnz 8B
 523+ 9628
 524+ 9628 E5           7 push hl
 525+ 9629 DD E1        	pop ix
 526+ 962B
 527+ 962B 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 962E E5           	push hl
 529+ 962F FD E1        	pop iy
 530+ 9631
 531+ 9631              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9631
 533+ 9631 3A F0 88     	ld a,(Ctrl_0)
 534+ 9634 CB 77        	bit 6,a
 535+ 9636 C8           	ret z
 536+ 9637
 537+ 9637              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9637              ; _ entidad / Amadeus´.
 539+ 9637
 540+ 9637 DD 22 4C 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 963B
 542+ 963B C9           	ret
 543+ 963C
 544+ 963C              ; --------------------------------------------------------------------------------------------------------------------
 545+ 963C              ;
 546+ 963C              ;	2/1/23
 547+ 963C              ;
 548+ 963C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 963C              ;
 550+ 963C              ;	Tras esta rutina tenemos:
 551+ 963C              ;
 552+ 963C              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 963C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 963C              ;
 555+ 963C              ;	DESTRUYE!!!!! HL,B y A.
 556+ 963C
 557+ 963C 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 963F 3A FD 88     	ld a,(Columnas)
 559+ 9642 3D           	dec a
 560+ 9643 20 01        	jr nz,1F
 561+ 9645 3C           	inc a
 562+ 9646 47           1 ld b,a
 563+ 9647 C9           	ret
 564+ 9648
 565+ 9648              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9648              ;
 567+ 9648              ;	3/1/23
 568+ 9648              ;
 569+ 9648              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9648              ;
 571+ 9648              ;	Destruye: A,B,HL y DE.
 572+ 9648
 573+ 9648              Define_rutina_de_impresion
 574+ 9648
 575+ 9648 3A C7 88     	ld a,(Columns)
 576+ 964B 47           	ld b,a
 577+ 964C 3A FD 88     	ld a,(Columnas)
 578+ 964F B8           	cp b
 579+ 9650 20 0D        	jr nz,2f
 580+ 9652
 581+ 9652              ;	La entidad se imprime entera.
 582+ 9652
 583+ 9652 21 71 97     	ld hl, Indice_entidades_completas
 584+ 9655 E6 01        	and 1
 585+ 9657 28 02        	jr z,1F
 586+ 9659
 587+ 9659 23           	inc hl
 588+ 965A 23           	inc hl
 589+ 965B
 590+ 965B CD 9E 8C     1 call Extrae_address
 591+ 965E C9           	ret		;	ret
 592+ 965F
 593+ 965F              ;	La entidad no se imprime entera en pantalla.
 594+ 965F
 595+ 965F 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 9662 E6 01        	and 1
 597+ 9664 28 17        	jr z,3F
 598+ 9666
 599+ 9666              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9666
 601+ 9666 21 75 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9669 3A C7 88     4 ld a,(Columns)
 603+ 966C E6 01        	and 1
 604+ 966E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9670
 606+ 9670 23           	inc hl
 607+ 9671 23           	inc hl
 608+ 9672
 609+ 9672 3A FD 88     	ld a,(Columnas)
 610+ 9675 E6 01        	and 1
 611+ 9677 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9679
 613+ 9679 23           	inc hl
 614+ 967A 23           	inc hl
 615+ 967B
 616+ 967B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 967D
 618+ 967D 21 7B 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9680 18 E7        	jr 4B
 620+ 9682
 621+ 9682              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9682              ;
 623+ 9682              ;	Prepara_draw
 624+ 9682              ;
 625+ 9682              ;	Es una rutina de carga.
 626+ 9682              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9682              ;
 628+ 9682              ;	FUNCIONAMIENTO:
 629+ 9682              ;
 630+ 9682              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9682              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9682              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9682              ;
 634+ 9682              ;	DESTRUYE:
 635+ 9682              ;
 636+ 9682              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9682
 638+ 9682 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9685 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9686 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9687 4E           	ld c,(hl)
 642+ 9688 2A C8 88     	ld hl,(Posicion_actual)
 643+ 968B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 968D C9           	ret
 645+ 968E
 646+ 968E              ;----------------------------------------------------------------------------------------------------------------
 647+ 968E              ;
 648+ 968E              ;	5/08/22
 649+ 968E              ;
 650+ 968E              ;   NextScan.
 651+ 968E              ;
 652+ 968E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 968E              ;
 654+ 968E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 968E              ;
 656+ 968E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 968E              ;
 658+ 968E              ;       DESTRUIDOS: AF y HL !!!
 659+ 968E              ;
 660+ 968E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 968E              ;
 662+ 968E
 663+ 968E 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 968F 7C               ld a,h
 665+ 9690 E6 07            and 7
 666+ 9692 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9693
 668+ 9693 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9694 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9696 6F               ld l,a
 671+ 9697 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9698
 673+ 9698 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9699 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 969B 67               ld h,a
 676+ 969C C9               ret
 677+ 969D
 678+ 969D              ;----------------------------------------------------------------------------------------------------------------
 679+ 969D              ;
 680+ 969D              ;	5/08/22
 681+ 969D              ;
 682+ 969D              ;   PreviousScan.
 683+ 969D              ;
 684+ 969D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 969D              ;
 686+ 969D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 969D              ;
 688+ 969D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 969D              ;
 690+ 969D              ;       DESTRUIDOS: AF y HL !!!
 691+ 969D              ;
 692+ 969D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 969D              ;
 694+ 969D
 695+ 969D 7C           PreviousScan ld a,h
 696+ 969E 25               dec h               ; Dec H.
 697+ 969F E6 07            and 7
 698+ 96A1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96A2
 700+ 96A2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96A3 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96A5 6F               ld l,a
 703+ 96A6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96A7
 705+ 96A7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96A8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96AA 67               ld h,a
 708+ 96AB C9               ret
 709+ 96AC
 710+ 96AC              ; -----------------------------------------------------------------------------------
 711+ 96AC              ;
 712+ 96AC              ;	31/7/23
 713+ 96AC              ;
 714+ 96AC              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96AC              ;	Extrae fotos de Album_de_fotos.
 716+ 96AC
 717+ 96AC              Extrae_foto_entidades
 718+ 96AC
 719+ 96AC 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96AF 7E           	ld a,(hl)
 721+ 96B0 A7           	and a
 722+ 96B1 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96B2
 724+ 96B2 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96B5 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96B6 C8           	ret z
 727+ 96B7
 728+ 96B7              ; -----------------------------------
 729+ 96B7
 730+ 96B7 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96BB 31 00 70     	ld sp,Album_de_fotos
 732+ 96BE
 733+ 96BE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96C0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96C1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96C2
 737+ 96C2 ED 73 16 89  	ld (Stack_2),sp
 738+ 96C6 ED 7B 14 89  	ld sp,(Stack)
 739+ 96CA
 740+ 96CA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96CA
 742+ 96CA 3E CD        	ld a,$cd
 743+ 96CC 32 D4 96     	ld (Imprime),a
 744+ 96CF EB           	ex de,hl
 745+ 96D0 22 D5 96     	ld (Imprime+1),hl
 746+ 96D3 EB           	ex de,hl
 747+ 96D4
 748+ 96D4              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96D4
 750+ 96D4 00 00 00     Imprime db 0,0,0
 751+ 96D7
 752+ 96D7 ED 73 14 89  	ld (Stack),sp
 753+ 96DB
 754+ 96DB 3A 0F 89     	ld a,(Numero_de_malotes)
 755+ 96DE 3D           	dec a
 756+ 96DF 28 09        	jr z,1F
 757+ 96E1 32 0F 89      	ld (Numero_de_malotes),a
 758+ 96E4
 759+ 96E4 ED 7B 16 89  	ld sp,(Stack_2)
 760+ 96E8 18 D4        	jr 2B
 761+ 96EA
 762+ 96EA AF           1 xor a
 763+ 96EB 32 16 89     	ld (Stack_2),a
 764+ 96EE
 765+ 96EE C9           	ret
 766+ 96EF
 767+ 96EF              ; -----------------------------------------------------------------------------------
 768+ 96EF              ;
 769+ 96EF              ;	28/2/23
 770+ 96EF              ;
 771+ 96EF              ;	Pinta los disparos generados.
 772+ 96EF
 773+ 96EF              Extrae_foto_disparos
 774+ 96EF
 775+ 96EF 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96F2 7E               ld a,(hl)
 777+ 96F3 A7               and a
 778+ 96F4 C8               ret z
 779+ 96F5
 780+ 96F5 3A 3C 89     	ld a,(Numero_de_disparotes)
 781+ 96F8 A7           	and a
 782+ 96F9 C8           	ret z
 783+ 96FA ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96FE 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 9701
 786+ 9701 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 9703 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 9704 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 9705
 790+ 9705 ED 73 16 89  	ld (Stack_2),sp
 791+ 9709 ED 7B 14 89  	ld sp,(Stack)
 792+ 970D
 793+ 970D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 970D
 795+ 970D 3E CD        	ld a,$cd
 796+ 970F 32 17 97     	ld (Imprime2),a
 797+ 9712 EB           	ex de,hl
 798+ 9713 22 18 97     	ld (Imprime2+1),hl
 799+ 9716 EB           	ex de,hl
 800+ 9717
 801+ 9717              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 9717
 803+ 9717 00 00 00     Imprime2 db 0,0,0
 804+ 971A
 805+ 971A 3A 3C 89     	ld a,(Numero_de_disparotes)
 806+ 971D 3D           	dec a
 807+ 971E 28 09        	jr z,1F
 808+ 9720 32 3C 89      	ld (Numero_de_disparotes),a
 809+ 9723
 810+ 9723 ED 7B 16 89  	ld sp,(Stack_2)
 811+ 9727 18 D8        	jr 2B
 812+ 9729
 813+ 9729 AF           1 xor a
 814+ 972A 32 16 89     	ld (Stack_2),a
 815+ 972D C9           	ret
 816+ 972E
 817+ 972E              ; -----------------------------------------------------------------------------------
 818+ 972E              ;
 819+ 972E              ;	4/9/23
 820+ 972E              ;
 821+ 972E              ;	Rutina principal de pintado de Amadeus.
 822+ 972E              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 972E
 824+ 972E 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 9731 7E           	ld a,(hl)
 826+ 9732 A7           	and a
 827+ 9733 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 9734
 829+ 9734 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 9737 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 9738 C8           	ret z
 832+ 9739
 833+ 9739              ; -----------------------------------
 834+ 9739
 835+ 9739 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 973D 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 9740
 838+ 9740 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 9742 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9743 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9744
 842+ 9744 ED 73 16 89  	ld (Stack_2),sp
 843+ 9748 ED 7B 14 89  	ld sp,(Stack)
 844+ 974C
 845+ 974C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 974C
 847+ 974C 3E CD        	ld a,$cd
 848+ 974E 32 56 97     	ld (Imprime_Amadeus),a
 849+ 9751 EB           	ex de,hl
 850+ 9752 22 57 97     	ld (Imprime_Amadeus+1),hl
 851+ 9755 EB           	ex de,hl
 852+ 9756
 853+ 9756              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9756
 855+ 9756 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9759
 857+ 9759 ED 73 14 89  	ld (Stack),sp
 858+ 975D
 859+ 975D 3A 0F 89     	ld a,(Numero_de_malotes)
 860+ 9760 3D           	dec a
 861+ 9761 28 09        	jr z,1F
 862+ 9763 32 0F 89      	ld (Numero_de_malotes),a
 863+ 9766
 864+ 9766 ED 7B 16 89  	ld sp,(Stack_2)
 865+ 976A 18 D4        	jr 2B
 866+ 976C
 867+ 976C AF           1 xor a
 868+ 976D 32 16 89     	ld (Stack_2),a
 869+ 9770
 870+ 9770 C9           	ret
# file closed: Draw_XOR.asm
1695  9771              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9771              ;   índices de Rutinas de impresión.
   2+ 9771
   3+ 9771 81 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9773 AE 97            defw Pinta_Amadeus_3x2
   5+ 9775
   6+ 9775 04 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9777 A4 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9779 58 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 977B
  10+ 977B 2E 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 977D 32 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 977F E6 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9781
  14+ 9781
  15+ 9781              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9781              ;
  17+ 9781              ;   12/12/22
  18+ 9781              ;
  19+ 9781              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9781              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9781              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9781              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9781              ;
  24+ 9781              ;   Modifica: DE y HL.
  25+ 9781
  26+ 9781 ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9785 FD F9        	ld sp,iy
  28+ 9787 06 10            ld b,16
  29+ 9789 D1           1 pop de
  30+ 978A 7B               ld a,e
  31+ 978B AE               xor (hl)
  32+ 978C 77           	ld (hl),a
  33+ 978D 23           	inc hl
  34+ 978E 7A               ld a,d
  35+ 978F AE               xor (hl)
  36+ 9790 77           	ld (hl),a
  37+ 9791 2B           	dec hl
  38+ 9792 24           	inc h
  39+ 9793 7C               ld a,h
  40+ 9794 E6 07            and 7
  41+ 9796 20 0A            jr nz,2F
  42+ 9798 7D               ld a,l
  43+ 9799 C6 20            add a,$20
  44+ 979B 6F               ld l,a
  45+ 979C 38 04            jr c,2F
  46+ 979E 7C               ld a,h
  47+ 979F D6 08            sub 8
  48+ 97A1 67               ld h,a
  49+ 97A2 7C           2 ld a,h
  50+ 97A3 FE 58            cp $58
  51+ 97A5 28 02            jr z,3F
  52+ 97A7 10 E0            djnz 1B
  53+ 97A9 ED 7B 14 89  3 ld sp,(Stack)
  54+ 97AD C9           	ret
  55+ 97AE
  56+ 97AE ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97B2 FD F9        	ld sp,iy
  58+ 97B4 06 08            ld b,8
  59+ 97B6 D1           1 pop de
  60+ 97B7 7B               ld a,e
  61+ 97B8 AE               xor (hl)
  62+ 97B9 77           	ld (hl),a
  63+ 97BA 23           	inc hl
  64+ 97BB 7A               ld a,d
  65+ 97BC AE               xor (hl)
  66+ 97BD 77           	ld (hl),a
  67+ 97BE 23           	inc hl
  68+ 97BF D1           	pop de
  69+ 97C0 7B               ld a,e
  70+ 97C1 AE               xor (hl)
  71+ 97C2 77           	ld (hl),a
  72+ 97C3 2B           	dec hl
  73+ 97C4 2B           	dec hl
  74+ 97C5 24           	inc h
  75+ 97C6 7C               ld a,h
  76+ 97C7 E6 07            and 7
  77+ 97C9 20 0A            jr nz,2F
  78+ 97CB 7D               ld a,l
  79+ 97CC C6 20            add a,$20
  80+ 97CE 6F               ld l,a
  81+ 97CF 38 04            jr c,2F
  82+ 97D1 7C               ld a,h
  83+ 97D2 D6 08            sub 8
  84+ 97D4 67               ld h,a
  85+ 97D5 7C           2 ld a,h
  86+ 97D6 FE 58            cp $58
  87+ 97D8 28 25            jr z,4F
  88+ 97DA 7A               ld a,d
  89+ 97DB AE               xor (hl)
  90+ 97DC 77               ld (hl),a
  91+ 97DD D1           	pop de
  92+ 97DE 23           	inc hl
  93+ 97DF 7B               ld a,e
  94+ 97E0 AE               xor (hl)
  95+ 97E1 77           	ld (hl),a
  96+ 97E2 23           	inc hl
  97+ 97E3 7A               ld a,d
  98+ 97E4 AE               xor (hl)
  99+ 97E5 77           	ld (hl),a
 100+ 97E6 2B           	dec hl
 101+ 97E7 2B           	dec hl
 102+ 97E8 24           	inc h
 103+ 97E9 7C               ld a,h
 104+ 97EA E6 07            and 7
 105+ 97EC 20 0A            jr nz,3F
 106+ 97EE 7D               ld a,l
 107+ 97EF C6 20            add a,$20
 108+ 97F1 6F               ld l,a
 109+ 97F2 38 04            jr c,3F
 110+ 97F4 7C               ld a,h
 111+ 97F5 D6 08            sub 8
 112+ 97F7 67               ld h,a
 113+ 97F8 7C           3 ld a,h
 114+ 97F9 FE 58            cp $58
 115+ 97FB 28 02            jr z,4F
 116+ 97FD 10 B7            djnz 1B
 117+ 97FF ED 7B 14 89  4 ld sp,(Stack)
 118+ 9803 C9           	ret
 119+ 9804
 120+ 9804              ; ---------------------------------------------------
 121+ 9804
 122+ 9804 ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9808 FD F9        	ld sp,iy
 124+ 980A
 125+ 980A              ; >>>
 126+ 980A
 127+ 980A 06 10            ld b,16
 128+ 980C D1           1 pop de
 129+ 980D 7A           	ld a,d
 130+ 980E AE           	xor (hl)
 131+ 980F 77           	ld (hl),a
 132+ 9810 24           	inc h
 133+ 9811 7C               ld a,h
 134+ 9812 E6 07            and 7
 135+ 9814 20 0C            jr nz,2F
 136+ 9816 7D               ld a,l
 137+ 9817 C6 20            add a,$20
 138+ 9819 6F               ld l,a
 139+ 981A 38 06            jr c,2F
 140+ 981C 7C               ld a,h
 141+ 981D D6 08            sub 8
 142+ 981F 67               ld h,a
 143+ 9820 18 00            jr 2F
 144+ 9822 7C           2 ld a,h
 145+ 9823 FE 58            cp $58
 146+ 9825 28 02            jr z,3F
 147+ 9827 10 E3            djnz 1B
 148+ 9829 ED 7B 14 89  3 ld sp,(Stack)
 149+ 982D C9           	ret
 150+ 982E
 151+ 982E ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9832 FD F9        	ld sp,iy
 153+ 9834
 154+ 9834              ; >>>
 155+ 9834
 156+ 9834 06 10            ld b,16
 157+ 9836 D1           1 pop de
 158+ 9837 7B           	ld a,e
 159+ 9838 AE           	xor (hl)
 160+ 9839 77           	ld (hl),a
 161+ 983A 24           	inc h
 162+ 983B 7C               ld a,h
 163+ 983C E6 07            and 7
 164+ 983E 20 0C            jr nz,2F
 165+ 9840 7D               ld a,l
 166+ 9841 C6 20            add a,$20
 167+ 9843 6F               ld l,a
 168+ 9844 38 06            jr c,2F
 169+ 9846 7C               ld a,h
 170+ 9847 D6 08            sub 8
 171+ 9849 67               ld h,a
 172+ 984A 18 00            jr 2F
 173+ 984C 7C           2 ld a,h
 174+ 984D FE 58            cp $58
 175+ 984F 28 02            jr z,3F
 176+ 9851 10 E3            djnz 1B
 177+ 9853 ED 7B 14 89  3 ld sp,(Stack)
 178+ 9857 C9           	ret
 179+ 9858
 180+ 9858              ; ---------------------------------------------------
 181+ 9858
 182+ 9858 ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 985C FD F9        	ld sp,iy
 184+ 985E 06 08            ld b,8
 185+ 9860 D1           1 pop de
 186+ 9861 7A           	ld a,d
 187+ 9862 AE           	xor (hl)
 188+ 9863 77           	ld (hl),a
 189+ 9864 23           	inc hl
 190+ 9865 D1           	pop de
 191+ 9866 7B           	ld a,e
 192+ 9867 AE           	xor (hl)
 193+ 9868 77           	ld (hl),a
 194+ 9869 2B           	dec hl
 195+ 986A 24            	inc h
 196+ 986B 7C               ld a,h
 197+ 986C E6 07            and 7
 198+ 986E 20 0A            jr nz,2F
 199+ 9870 7D               ld a,l
 200+ 9871 C6 20            add a,$20
 201+ 9873 6F               ld l,a
 202+ 9874 38 04            jr c,2F
 203+ 9876 7C               ld a,h
 204+ 9877 D6 08            sub 8
 205+ 9879 67               ld h,a
 206+ 987A 7C           2 ld a,h
 207+ 987B FE 58            cp $58
 208+ 987D 28 20            jr z,4F
 209+ 987F D1               pop de
 210+ 9880 7B           	ld a,e
 211+ 9881 AE           	xor (hl)
 212+ 9882 77           	ld (hl),a
 213+ 9883 23           	inc hl
 214+ 9884 7A           	ld a,d
 215+ 9885 AE           	xor (hl)
 216+ 9886 77           	ld (hl),a
 217+ 9887 2B           	dec hl
 218+ 9888 24           	inc h
 219+ 9889 7C               ld a,h
 220+ 988A E6 07            and 7
 221+ 988C 20 0A            jr nz,3F
 222+ 988E 7D               ld a,l
 223+ 988F C6 20            add a,$20
 224+ 9891 6F               ld l,a
 225+ 9892 38 04            jr c,3F
 226+ 9894 7C               ld a,h
 227+ 9895 D6 08            sub 8
 228+ 9897 67               ld h,a
 229+ 9898 7C           3 ld a,h
 230+ 9899 FE 58            cp $58
 231+ 989B 28 02            jr z,4F
 232+ 989D 10 C1            djnz 1B
 233+ 989F ED 7B 14 89  4 ld sp,(Stack)
 234+ 98A3 C9           	ret
 235+ 98A4
 236+ 98A4 ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98A8 FD F9        	ld sp,iy
 238+ 98AA 06 08            ld b,8
 239+ 98AC D1           1 pop de
 240+ 98AD D1           	pop de
 241+ 98AE 7B           	ld a,e
 242+ 98AF AE           	xor (hl)
 243+ 98B0 77           	ld (hl),a
 244+ 98B1 24            	inc h
 245+ 98B2 7C               ld a,h
 246+ 98B3 E6 07            and 7
 247+ 98B5 20 0A            jr nz,2F
 248+ 98B7 7D               ld a,l
 249+ 98B8 C6 20            add a,$20
 250+ 98BA 6F               ld l,a
 251+ 98BB 38 04            jr c,2F
 252+ 98BD 7C               ld a,h
 253+ 98BE D6 08            sub 8
 254+ 98C0 67               ld h,a
 255+ 98C1 7C           2 ld a,h
 256+ 98C2 FE 58            cp $58
 257+ 98C4 28 1B            jr z,4F
 258+ 98C6 D1               pop de
 259+ 98C7 7A           	ld a,d
 260+ 98C8 AE           	xor (hl)
 261+ 98C9 77           	ld (hl),a
 262+ 98CA 24           	inc h
 263+ 98CB 7C               ld a,h
 264+ 98CC E6 07            and 7
 265+ 98CE 20 0A            jr nz,3F
 266+ 98D0 7D               ld a,l
 267+ 98D1 C6 20            add a,$20
 268+ 98D3 6F               ld l,a
 269+ 98D4 38 04            jr c,3F
 270+ 98D6 7C               ld a,h
 271+ 98D7 D6 08            sub 8
 272+ 98D9 67               ld h,a
 273+ 98DA 7C           3 ld a,h
 274+ 98DB FE 58            cp $58
 275+ 98DD 28 02            jr z,4F
 276+ 98DF 10 CB            djnz 1B
 277+ 98E1 ED 7B 14 89  4 ld sp,(Stack)
 278+ 98E5 C9           	ret
 279+ 98E6
 280+ 98E6 ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98EA FD F9        	ld sp,iy
 282+ 98EC 06 08            ld b,8
 283+ 98EE D1           1 pop de
 284+ 98EF 7B           	ld a,e
 285+ 98F0 AE           	xor (hl)
 286+ 98F1 77           	ld (hl),a
 287+ 98F2 23           	inc hl
 288+ 98F3 7A           	ld a,d
 289+ 98F4 AE           	xor (hl)
 290+ 98F5 77           	ld (hl),a
 291+ 98F6 2B           	dec hl
 292+ 98F7 24             	inc h
 293+ 98F8 7C               ld a,h
 294+ 98F9 E6 07            and 7
 295+ 98FB 20 0A            jr nz,2F
 296+ 98FD 7D               ld a,l
 297+ 98FE C6 20            add a,$20
 298+ 9900 6F               ld l,a
 299+ 9901 38 04            jr c,2F
 300+ 9903 7C               ld a,h
 301+ 9904 D6 08            sub 8
 302+ 9906 67               ld h,a
 303+ 9907 7C           2 ld a,h
 304+ 9908 FE 58            cp $58
 305+ 990A 28 21            jr z,4F
 306+ 990C D1               pop de
 307+ 990D 7A           	ld a,d
 308+ 990E AE           	xor (hl)
 309+ 990F 77           	ld (hl),a
 310+ 9910 23           	inc hl
 311+ 9911 D1               pop de
 312+ 9912 7B           	ld a,e
 313+ 9913 AE           	xor (hl)
 314+ 9914 77           	ld (hl),a
 315+ 9915 2B           	dec hl
 316+ 9916 24           	inc h
 317+ 9917 7C               ld a,h
 318+ 9918 E6 07            and 7
 319+ 991A 20 0A            jr nz,3F
 320+ 991C 7D               ld a,l
 321+ 991D C6 20            add a,$20
 322+ 991F 6F               ld l,a
 323+ 9920 38 04            jr c,3F
 324+ 9922 7C               ld a,h
 325+ 9923 D6 08            sub 8
 326+ 9925 67               ld h,a
 327+ 9926 7C           3 ld a,h
 328+ 9927 FE 58            cp $58
 329+ 9929 28 02            jr z,4F
 330+ 992B 10 C1            djnz 1B
 331+ 992D ED 7B 14 89  4 ld sp,(Stack)
 332+ 9931 C9           	ret
 333+ 9932
 334+ 9932 ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9936 FD F9        	ld sp,iy
 336+ 9938 06 08            ld b,8
 337+ 993A D1           1 pop de
 338+ 993B 7B           	ld a,e
 339+ 993C AE           	xor (hl)
 340+ 993D 77           	ld (hl),a
 341+ 993E 24            	inc h
 342+ 993F 7C               ld a,h
 343+ 9940 E6 07            and 7
 344+ 9942 20 0A            jr nz,2F
 345+ 9944 7D               ld a,l
 346+ 9945 C6 20            add a,$20
 347+ 9947 6F               ld l,a
 348+ 9948 38 04            jr c,2F
 349+ 994A 7C               ld a,h
 350+ 994B D6 08            sub 8
 351+ 994D 67               ld h,a
 352+ 994E 7C           2 ld a,h
 353+ 994F FE 58            cp $58
 354+ 9951 28 1C            jr z,4F
 355+ 9953 D1               pop de
 356+ 9954 7A           	ld a,d
 357+ 9955 AE           	xor (hl)
 358+ 9956 77           	ld (hl),a
 359+ 9957 24           	inc h
 360+ 9958 7C               ld a,h
 361+ 9959 E6 07            and 7
 362+ 995B 20 0A            jr nz,3F
 363+ 995D 7D               ld a,l
 364+ 995E C6 20            add a,$20
 365+ 9960 6F               ld l,a
 366+ 9961 38 04            jr c,3F
 367+ 9963 7C               ld a,h
 368+ 9964 D6 08            sub 8
 369+ 9966 67               ld h,a
 370+ 9967 7C           3 ld a,h
 371+ 9968 FE 58            cp $58
 372+ 996A 28 03            jr z,4F
 373+ 996C D1               pop de
 374+ 996D 10 CB            djnz 1B
 375+ 996F ED 7B 14 89  4 ld sp,(Stack)
 376+ 9973 C9           	ret
 377+ 9974
 378+ 9974              ; ---------------------------------------------------
 379+ 9974              ;
 380+ 9974              ;   27/02/23
 381+ 9974              ;
 382+ 9974              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9974              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9974              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9974
 386+ 9974 ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 9978 FD F9            ld sp,iy
 388+ 997A 06 03            ld b,3
 389+ 997C D1           1 pop de
 390+ 997D 7B               ld a,e
 391+ 997E AE               xor (hl)
 392+ 997F 77               ld (hl),a
 393+ 9980 23               inc hl
 394+ 9981 7A               ld a,d
 395+ 9982 AE               xor (hl)
 396+ 9983 77               ld (hl),a
 397+ 9984 2B               dec hl
 398+ 9985
 399+ 9985 24               inc h
 400+ 9986 7C               ld a,h
 401+ 9987 E6 07            and 7
 402+ 9989 20 0A            jr nz,2F
 403+ 998B 7D               ld a,l
 404+ 998C C6 20            add a,$20
 405+ 998E 6F               ld l,a
 406+ 998F 38 04            jr c,2F
 407+ 9991 7C               ld a,h
 408+ 9992 D6 08            sub 8
 409+ 9994 67               ld h,a
 410+ 9995 7C           2 ld a,h
 411+ 9996 FE 58            cp $58
 412+ 9998 28 02            jr z,3F
 413+ 999A
 414+ 999A 10 E0            djnz 1B
 415+ 999C ED 7B 14 89  3 ld sp,(Stack)
 416+ 99A0 C9               ret
 417+ 99A1
# file closed: Rutinas_de_impresion_sprites.asm
1696  99A1              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99A1              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99A1              ;
   3+ 99A1              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99A1              ;
   5+ 99A1              ; *****************************************************************************************************************************************************************************************
   6+ 99A1              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99A1
   8+ 99A1 7C           calcula_tercio ld a,h
   9+ 99A2 E6 18        	and $18
  10+ 99A4 CB 2F        	sra a
  11+ 99A6 CB 2F        	sra a
  12+ 99A8 CB 2F        	sra a
  13+ 99AA C9           	ret
  14+ 99AB
# file closed: calcula_tercio.asm
1697  99AB              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99AB              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99AB              ;
   3+ 99AB              ;
   4+ 99AB              ;	CLS.
   5+ 99AB              ;
   6+ 99AB              ;	Limpia la pantalla y define sus atributos.
   7+ 99AB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99AB              ;
   9+ 99AB              ;	COLORES: 0 ..... NEGRO
  10+ 99AB              ;    		 1 ..... AZUL
  11+ 99AB              ; 			 2 ..... ROJO
  12+ 99AB              ;			 3 ..... MAGENTA
  13+ 99AB              ; 			 4 ..... VERDE
  14+ 99AB              ; 			 5 ..... CIAN
  15+ 99AB              ;			 6 ..... AMARILLO
  16+ 99AB              ; 			 7 ..... BLANCO
  17+ 99AB              ;
  18+ 99AB              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99AB              ;
  20+ 99AB              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99AB
  22+ 99AB
  23+ 99AB 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99AE 11 01 40     	LD DE,$4001
  25+ 99B1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99B4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99B6 ED B0        	LDIR
  28+ 99B8 01 FF 02     	LD BC,767
  29+ 99BB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99BC ED B0        	LDIR
  31+ 99BE C9           	ret
  32+ 99BF
# file closed: Cls.asm
1698  99BF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99BF              ; ******************************************************************************************************************************************************************************************
   2+ 99BF              ;
   3+ 99BF              ;   20/05/23
   4+ 99BF              ;
   5+ 99BF              ;	Recompone_posicion_inicio
   6+ 99BF              ;
   7+ 99BF              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99BF              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99BF              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99BF              ;	_ a una u otra rutina.
  11+ 99BF
  12+ 99BF              Recompone_posicion_inicio
  13+ 99BF
  14+ 99BF 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 99C2 7D           	ld a,l
  16+ 99C3 E6 1F        	and $1f
  17+ 99C5 28 16        	jr z,1F
  18+ 99C7
  19+ 99C7 FE 1F        	cp $1f
  20+ 99C9 28 0D        	jr z,3F
  21+ 99CB
  22+ 99CB 21 01 89     	ld hl,Ctrl_2
  23+ 99CE CB C6        	set 0,(hl)
  24+ 99D0 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 99D3 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 99D6 18 08        	jr 2F
  27+ 99D8
  28+ 99D8 CD 79 9B     3 call Mov_left
  29+ 99DB 18 03        	jr 2F
  30+ 99DD
  31+ 99DD CD 5B 9A     1 call Mov_right
  32+ 99E0 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99E3 22 CA 88     	ld (Puntero_objeto),hl
  34+ 99E6 C9           	ret
  35+ 99E7
  36+ 99E7              ; ******************************************************************************************************************************************************************************************
  37+ 99E7              ;
  38+ 99E7              ;   27/05/23
  39+ 99E7              ;
  40+ 99E7              ;	Mov_down
  41+ 99E7              ;
  42+ 99E7              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99E7              ;
  44+ 99E7              ;
  45+ 99E7              Mov_down
  46+ 99E7
  47+ 99E7 CD 49 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99EA              ;																	; _ repone (Puntero_objeto).
  49+ 99EA 21 F0 88     	ld hl,Ctrl_0
  50+ 99ED CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99EF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99EF              ; 																	; _ en el caso de que no lo haya.
  53+ 99EF 3A DE 88     	ld a,(Vel_down)
  54+ 99F2 47           	ld b,a
  55+ 99F3 2A C8 88         ld hl,(Posicion_actual)
  56+ 99F6 CD A1 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99F9 E6 02        	and 2
  58+ 99FB 28 0F        	jr z,1F
  59+ 99FD
  60+ 99FD              ; Nos encontramos en el último tercio de pantalla.
  61+ 99FD              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99FD
  63+ 99FD 7C           	ld a,h
  64+ 99FE FE 57        	cp $57
  65+ 9A00 20 0A        	jr nz,1F
  66+ 9A02
  67+ 9A02 7D           	ld a,l
  68+ 9A03 C6 20        	add $20
  69+ 9A05 30 05        	jr nc,1F
  70+ 9A07
  71+ 9A07              ; ------------------------------
  72+ 9A07              ;	call Reaparece_arriba
  73+ 9A07 CD 06 9D     	call Reinicio
  74+ 9A0A              ; ------------------------------
  75+ 9A0A
  76+ 9A0A 18 08        	jr 3F
  77+ 9A0C CD 8E 96     1 call NextScan
  78+ 9A0F 22 C8 88     	ld (Posicion_actual),hl
  79+ 9A12 10 E2            djnz 2B
  80+ 9A14 CD 2C 9D     3 call Genera_coordenadas
  81+ 9A17 C9           	ret
  82+ 9A18
  83+ 9A18              ; ******************************************************************************************************************************************************************************************
  84+ 9A18              ;
  85+ 9A18              ;   27/05/23
  86+ 9A18              ;
  87+ 9A18              ;	Mov_up
  88+ 9A18              ;
  89+ 9A18              ; 	Mueve el Sprite hacia arriba.
  90+ 9A18              ;
  91+ 9A18              ;
  92+ 9A18              Mov_up
  93+ 9A18
  94+ 9A18 CD 49 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A1B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A1B 21 F0 88     	ld hl,Ctrl_0
  97+ 9A1E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A20              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A20              ; 																		; _ en el caso de que no lo haya.
 100+ 9A20 3A DD 88     	ld a,(Vel_up)
 101+ 9A23 47           	ld b,a
 102+ 9A24 2A C8 88     	ld hl,(Posicion_actual)
 103+ 9A27 CD A1 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A2A A7           	and a
 105+ 9A2B 20 10        	jr nz,1F
 106+ 9A2D
 107+ 9A2D              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A2D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A2D
 110+ 9A2D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A2E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A30 20 0B            jr nz,1F
 113+ 9A32 7D               ld a,l
 114+ 9A33 D6 20            sub $20
 115+ 9A35 30 06            jr nc,1F
 116+ 9A37 25               dec h
 117+ 9A38
 118+ 9A38              ; -----------------------------
 119+ 9A38 CD E7 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A3B              ;	call Reinicio
 121+ 9A3B              ; -----------------------------
 122+ 9A3B
 123+ 9A3B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A3D CD 9D 96     1 call PreviousScan
 125+ 9A40 22 C8 88     	ld (Posicion_actual),hl
 126+ 9A43 10 E2            djnz 3B
 127+ 9A45 CD 2C 9D     2 call Genera_coordenadas
 128+ 9A48 C9           	ret
 129+ 9A49
 130+ 9A49              ; -----------------------------
 131+ 9A49              ;
 132+ 9A49              ;	27/5/23
 133+ 9A49              ;
 134+ 9A49              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A49              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A49              ;
 137+ 9A49              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A49              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A49              ;
 140+ 9A49              ;	Modifica: A y (Puntero_objeto).
 141+ 9A49
 142+ 9A49 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A4C CB 47        	bit 0,a
 144+ 9A4E C8           	ret z
 145+ 9A4F CB 87        	res 0,a
 146+ 9A51 32 01 89     	ld (Ctrl_2),a
 147+ 9A54 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A57 22 CA 88     	ld (Puntero_objeto),hl
 149+ 9A5A C9           	ret
 150+ 9A5B
 151+ 9A5B              ; ******************************************************************************************************************************************************************************************
 152+ 9A5B              ;
 153+ 9A5B              ;	19/10/22
 154+ 9A5B              ;
 155+ 9A5B              ;	Mov_right.
 156+ 9A5B              ;
 157+ 9A5B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A5B              ;
 159+ 9A5B
 160+ 9A5B 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 9A5E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A60              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A60              ; 																	; _ en el caso de que no lo haya.
 164+ 9A60 3A F0 88     	ld a,(Ctrl_0)
 165+ 9A63 CB 77        	bit 6,a
 166+ 9A65 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A67
 168+ 9A67 CD 95 9C     	call Stop_Amadeus_right
 169+ 9A6A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A6B 18 4D        	jr 8F
 171+ 9A6D
 172+ 9A6D 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A70 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A72 20 46        	jr nz,8F
 175+ 9A74
 176+ 9A74 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A77 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A78 28 40        	jr z,8F
 179+ 9A7A
 180+ 9A7A              ; ---------- ---------- ----------
 181+ 9A7A              ;
 182+ 9A7A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A7A
 184+ 9A7A 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A7D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A7F 28 11        	jr z,1F
 187+ 9A81 38 06        	jr c,6F
 188+ 9A83 FE 04        	cp 4
 189+ 9A85 28 14        	jr z,7F
 190+ 9A87 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A89
 192+ 9A89              ; ---------- ---------- ----------
 193+ 9A89              ;
 194+ 9A89              ; Perfiles de velocidad
 195+ 9A89              ;
 196+ 9A89
 197+ 9A89 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A8C FE FE        	cp $fe
 199+ 9A8E 20 2A        	jr nz,8F
 200+ 9A90 18 10        	jr 3F
 201+ 9A92 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A95 FE FD        	cp $fd
 203+ 9A97 20 21        	jr nz,8F
 204+ 9A99 18 07        	jr 3F
 205+ 9A9B 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A9E FE FB        	cp $fb
 207+ 9AA0 20 18        	jr nz,8F
 208+ 9AA2
 209+ 9AA2              ; ---------- ---------- ----------
 210+ 9AA2
 211+ 9AA2              3
 212+ 9AA2 CD D5 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AA5              ;	call Reinicio
 214+ 9AA5
 215+ 9AA5              ; ---------- ---------- ----------
 216+ 9AA5              ;
 217+ 9AA5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AA5
 219+ 9AA5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AA7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AA8 CD C1 9A     	call DESPLZ_DER
 222+ 9AAB C1           	pop bc
 223+ 9AAC 10 F9        	djnz 5B
 224+ 9AAE 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AB1 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AB2 22 C8 88     	ld (Posicion_actual),hl
 227+ 9AB5 CD 2C 9D     	call Genera_coordenadas
 228+ 9AB8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9ABA
 230+ 9ABA              ; ---------- ---------- ----------
 231+ 9ABA
 232+ 9ABA 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9ABD CD C1 9A     	call DESPLZ_DER
 234+ 9AC0 C9           2 ret
 235+ 9AC1
 236+ 9AC1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AC1              ;
 238+ 9AC1              ;	22/9/22
 239+ 9AC1              ;
 240+ 9AC1
 241+ 9AC1 CD D0 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AC4 CD 1C 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AC7 CD 45 9B         call Ciclo_completo
 244+ 9ACA 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9ACD CB FE        	set 7,(hl)
 246+ 9ACF C9           	ret
 247+ 9AD0
 248+ 9AD0              ; ******************************************************************************************************************************************************************************************
 249+ 9AD0              ;	15/02/23
 250+ 9AD0              ;
 251+ 9AD0
 252+ 9AD0 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AD3 47           	ld b,a
 254+ 9AD4 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AD7 23           1 inc hl
 256+ 9AD8 23           	inc hl
 257+ 9AD9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9ADB 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9ADE CD 9E 8C     	call Extrae_address
 260+ 9AE1 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9AE4
 262+ 9AE4              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AE4
 264+ 9AE4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AE4              ; Cuántos movimientos hemos hecho ??
 266+ 9AE4              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AE4
 268+ 9AE4 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AE7 EB           	ex de,hl
 270+ 9AE8 A7           	and a
 271+ 9AE9 ED 52        	sbc hl,de
 272+ 9AEB CB 3D        	srl l
 273+ 9AED 3E 08        6 ld a,8
 274+ 9AEF 95           	sub l
 275+ 9AF0 30 1E        	jr nc,3F
 276+ 9AF2
 277+ 9AF2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AF2              ; B="0".
 279+ 9AF2
 280+ 9AF2 04           4 inc b
 281+ 9AF3 3C           	inc a
 282+ 9AF4 20 FC        	jr nz,4B
 283+ 9AF6 78           	ld a,b
 284+ 9AF7 08           	ex af,af
 285+ 9AF8 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9AFB 23           5 inc hl
 287+ 9AFC 23           	inc hl
 288+ 9AFD 10 FC        	djnz 5B
 289+ 9AFF 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B02 CD 9E 8C     	call Extrae_address
 291+ 9B05 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9B08
 293+ 9B08              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B08              ; _(Posicion_actual).
 295+ 9B08
 296+ 9B08 21 C8 88     	ld hl,Posicion_actual
 297+ 9B0B 34           	inc (hl)
 298+ 9B0C 08               ex af,af
 299+ 9B0D 6F           	ld l,a
 300+ 9B0E 18 DD        	jr 6B
 301+ 9B10
 302+ 9B10              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B10
 304+ 9B10 47           3 ld b,a
 305+ 9B11 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B14 23           2 inc hl
 307+ 9B15 23           	inc hl
 308+ 9B16 10 FC        	djnz 2B
 309+ 9B18 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B1B C9           8 ret
 311+ 9B1C
 312+ 9B1C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B1C              ;
 314+ 9B1C              ;	24/7/22
 315+ 9B1C              ;
 316+ 9B1C              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B1C              ;
 318+ 9B1C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B1C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B1C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B1C
 322+ 9B1C 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B1F A7           	and a
 324+ 9B20 20 1F        	jr nz,1F
 325+ 9B22 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B24 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9B27
 328+ 9B27 21 C7 88     	ld hl,Columns
 329+ 9B2A 34           	inc (hl)
 330+ 9B2B 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9B2E E6 01        	and 1
 332+ 9B30 28 0F        	jr z,1F
 333+ 9B32 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B35 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B36 22 C8 88     	ld (Posicion_actual),hl
 336+ 9B39 CD 2C 9D     	call Genera_coordenadas
 337+ 9B3C CD A1 9C     	call Inc_CTRL_DESPLZ
 338+ 9B3F 18 03        	jr 2F
 339+ 9B41 CD A1 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B44 C9           2 ret
 341+ 9B45
 342+ 9B45              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B45              ;
 344+ 9B45              ;	24/7/22
 345+ 9B45              ;
 346+ 9B45              ;	Ciclo_completo.
 347+ 9B45              ;
 348+ 9B45              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B45              ;
 350+ 9B45              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B45              ; 	Decrementamos (Columns).
 352+ 9B45              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B45              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B45
 355+ 9B45
 356+ 9B45 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B48 FE FF        	cp $ff
 358+ 9B4A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B4C E6 F0        	and $f0
 360+ 9B4E 20 28        	jr nz,3F
 361+ 9B50
 362+ 9B50              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B50
 364+ 9B50 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9B53 47           	ld b,a
 366+ 9B54 3E F8        	ld a,$f8
 367+ 9B56 80           	add b
 368+ 9B57 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9B5A 18 1C        	jr 3F
 370+ 9B5C 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B5F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B60 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B61 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9B64 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B67 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B69 20 0A        	jr nz,2F
 377+ 9B6B 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B6E 23           	inc hl
 379+ 9B6F 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B72 CD 2C 9D     	call Genera_coordenadas
 381+ 9B75
 382+ 9B75              ; Inicia el puntero de Sprite.
 383+ 9B75
 384+ 9B75 CD B5 8C     2 call Inicia_puntero_objeto_der
 385+ 9B78 C9           3 ret
 386+ 9B79
 387+ 9B79              ; ******************************************************************************************************************************************************************************************
 388+ 9B79              ;
 389+ 9B79              ;	15/02/23
 390+ 9B79              ;
 391+ 9B79              ;	Mov_left.
 392+ 9B79              ;
 393+ 9B79              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B79              ;
 395+ 9B79              Mov_left
 396+ 9B79
 397+ 9B79 21 F0 88     	ld hl,Ctrl_0
 398+ 9B7C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B7E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B7E              ; 																	; _ en el caso de que no lo haya.
 401+ 9B7E 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B81 CB 77        	bit 6,a
 403+ 9B83 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B85
 405+ 9B85 CD 9B 9C     	call Stop_Amadeus_left
 406+ 9B88 C8           	ret z
 407+ 9B89 20 4A        	jr nz,8F
 408+ 9B8B
 409+ 9B8B 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B8E A7           	and a
 411+ 9B8F 20 44        	jr nz,8F
 412+ 9B91
 413+ 9B91 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B94 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B95 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B97
 417+ 9B97              ; ---------- ---------- ----------
 418+ 9B97
 419+ 9B97 3A DB 88     	ld a,(Vel_left)
 420+ 9B9A FE 02        	cp 2
 421+ 9B9C 28 0F        	jr z,1F
 422+ 9B9E 38 04        	jr c,6F
 423+ 9BA0 FE 04        	cp 4
 424+ 9BA2 28 12        	jr z,7F
 425+ 9BA4
 426+ 9BA4              ; ---------- ---------- ----------
 427+ 9BA4
 428+ 9BA4 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9BA7 FE F8        	cp $f8
 430+ 9BA9 20 2A        	jr nz,8F
 431+ 9BAB 18 10        	jr 4F
 432+ 9BAD 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BB0 FE F9        	cp $f9
 434+ 9BB2 20 21        	jr nz,8F
 435+ 9BB4 18 07        	jr 4F
 436+ 9BB6 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BB9 FE FB        	cp $fb
 438+ 9BBB 20 18        	jr nz,8F
 439+ 9BBD
 440+ 9BBD              ; ---------- ---------- ----------
 441+ 9BBD
 442+ 9BBD              4
 443+ 9BBD CD C3 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BC0              ;	call Reinicio
 445+ 9BC0
 446+ 9BC0              ; ---------- ---------- ----------
 447+ 9BC0
 448+ 9BC0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BC2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BC3
 451+ 9BC3              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BC3              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BC3
 454+ 9BC3 CD DC 9B     	call DESPLZ_IZQ
 455+ 9BC6 C1           	pop bc
 456+ 9BC7 10 F9        	djnz 5B
 457+ 9BC9 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BCC 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BCD 22 C8 88     	ld (Posicion_actual),hl
 460+ 9BD0 CD 2C 9D     	call Genera_coordenadas
 461+ 9BD3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BD5
 463+ 9BD5              ; ---------- ---------- ----------
 464+ 9BD5
 465+ 9BD5              ; Movemos, no hay recolocación.
 466+ 9BD5
 467+ 9BD5 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9BD8 CD DC 9B     	call DESPLZ_IZQ
 469+ 9BDB C9           2 ret
 470+ 9BDC
 471+ 9BDC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BDC              ;
 473+ 9BDC              ;	22/9/22
 474+ 9BDC
 475+ 9BDC              DESPLZ_IZQ
 476+ 9BDC
 477+ 9BDC CD EB 9B     	call Desplaza_izquierda
 478+ 9BDF CD 37 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BE2 CD 5F 9C     	call Ciclo_completo_2
 480+ 9BE5 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BE8 CB BE        	res 7,(hl)
 482+ 9BEA C9           	ret
 483+ 9BEB
 484+ 9BEB              Desplaza_izquierda
 485+ 9BEB
 486+ 9BEB 3A DB 88     	ld a,(Vel_left)
 487+ 9BEE 47           	ld b,a
 488+ 9BEF 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BF2 23           1 inc hl
 490+ 9BF3 23           	inc hl
 491+ 9BF4 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BF6 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BF9 CD 9E 8C     	call Extrae_address
 494+ 9BFC 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9BFF
 496+ 9BFF              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BFF
 498+ 9BFF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BFF              ; Cuántos movimientos hemos hecho ??
 500+ 9BFF              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BFF
 502+ 9BFF 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9C02 EB           	ex de,hl
 504+ 9C03 A7           	and a
 505+ 9C04 ED 52        	sbc hl,de
 506+ 9C06 CB 3D        	srl l
 507+ 9C08 3E 08        6 ld a,8
 508+ 9C0A 95           	sub l
 509+ 9C0B 30 1E        	jr nc,3F
 510+ 9C0D
 511+ 9C0D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C0D              ; B="0".
 513+ 9C0D
 514+ 9C0D 04           4 inc b
 515+ 9C0E 3C           	inc a
 516+ 9C0F 20 FC        	jr nz,4B
 517+ 9C11 78           	ld a,b
 518+ 9C12 08           	ex af,af
 519+ 9C13 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C16 23           5 inc hl
 521+ 9C17 23           	inc hl
 522+ 9C18 10 FC        	djnz 5B
 523+ 9C1A 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C1D CD 9E 8C     	call Extrae_address
 525+ 9C20 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9C23
 527+ 9C23              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C23              ; _(Posicion_actual).
 529+ 9C23
 530+ 9C23 21 C8 88     	ld hl,Posicion_actual
 531+ 9C26 35           	dec (hl)
 532+ 9C27 08           	ex af,af
 533+ 9C28 6F           	ld l,a
 534+ 9C29 18 DD        	jr 6B
 535+ 9C2B
 536+ 9C2B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C2B
 538+ 9C2B 47           3 ld b,a
 539+ 9C2C 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9C2F 23           2 inc hl
 541+ 9C30 23           	inc hl
 542+ 9C31 10 FC        	djnz 2B
 543+ 9C33 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C36 C9           8 ret
 545+ 9C37
 546+ 9C37              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C37              ;
 548+ 9C37              ;	modifica_parametros_1er_DESPLZ
 549+ 9C37              ;
 550+ 9C37              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C37              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C37              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C37
 554+ 9C37 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C3A A7           	and a
 556+ 9C3B 20 1E        	jr nz,1F
 557+ 9C3D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C3E 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9C41 21 C7 88     	ld hl,Columns
 560+ 9C44 34           	inc (hl)
 561+ 9C45 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9C48 E6 01        	and 1
 563+ 9C4A 20 0F        	jr nz,1F
 564+ 9C4C 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C4F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C50 22 C8 88     	ld (Posicion_actual),hl
 567+ 9C53 CD 2C 9D     	call Genera_coordenadas
 568+ 9C56 CD B2 9C     	call Dec_CTRL_DESPLZ
 569+ 9C59 18 03        	jr 2F
 570+ 9C5B CD B2 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C5E C9           2 ret
 572+ 9C5F
 573+ 9C5F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C5F
 575+ 9C5F 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C62 FE F7        	cp $f7
 577+ 9C64 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C66 30 2C        	jr nc,3F
 579+ 9C68
 580+ 9C68              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C68
 582+ 9C68 06 00        	ld b,0
 583+ 9C6A 04           4 inc b
 584+ 9C6B 3C           	inc a
 585+ 9C6C FE F7        	cp $f7
 586+ 9C6E 20 FA        	jr nz,4B
 587+ 9C70 3E FF        	ld a,$ff
 588+ 9C72 90           	sub b
 589+ 9C73 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C76 18 1C        	jr 3F
 591+ 9C78
 592+ 9C78              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C78
 594+ 9C78 21 C7 88     1 ld hl,Columns
 595+ 9C7B 35           	dec (hl)
 596+ 9C7C AF           	xor a
 597+ 9C7D 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C80 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C83 E6 01        	and 1
 600+ 9C85 28 0A        	jr z,2F
 601+ 9C87 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C8A 2B           	dec hl
 603+ 9C8B 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C8E CD 2C 9D     	call Genera_coordenadas
 605+ 9C91
 606+ 9C91              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C91
 608+ 9C91 CD C8 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C94 C9           3 ret
 610+ 9C95
 611+ 9C95              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C95              ;
 613+ 9C95              ;	19/10/22
 614+ 9C95              ;
 615+ 9C95              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C95              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C95
 618+ 9C95 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C98 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C9A C9           	ret
 621+ 9C9B
 622+ 9C9B              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C9B              ;
 624+ 9C9B              ;	19/10/22
 625+ 9C9B              ;
 626+ 9C9B              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C9B              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C9B
 629+ 9C9B 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C9E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9CA0 C9           	ret
 632+ 9CA1
 633+ 9CA1              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9CA1              ;
 635+ 9CA1              ;	24/7/22
 636+ 9CA1              ;
 637+ 9CA1              ;	Inc_CTRL_DESPLZ
 638+ 9CA1              ;
 639+ 9CA1              ;
 640+ 9CA1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9CA1
 642+ 9CA1 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9CA4 3A DC 88     	ld a,(Vel_right)
 644+ 9CA7 A7           	and a
 645+ 9CA8 28 06        	jr z,1F
 646+ 9CAA 47           	ld b,a
 647+ 9CAB 34           3 inc (hl)
 648+ 9CAC 10 FD        	djnz 3B
 649+ 9CAE 18 01        	jr 2F
 650+ 9CB0 34           1 inc (hl)
 651+ 9CB1 C9           2 ret
 652+ 9CB2
 653+ 9CB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CB2              ;
 655+ 9CB2              ;	5/2/23
 656+ 9CB2              ;
 657+ 9CB2              ;	Dec_CTRL_DESPLZ
 658+ 9CB2              ;
 659+ 9CB2              ;
 660+ 9CB2              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CB2
 662+ 9CB2 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CB5 3A DB 88     	ld a,(Vel_left)
 664+ 9CB8 A7           	and a
 665+ 9CB9 28 06        	jr z,1F
 666+ 9CBB 47           	ld b,a
 667+ 9CBC 35           3 dec (hl)
 668+ 9CBD 10 FD        	djnz 3B
 669+ 9CBF 18 01        	jr 2F
 670+ 9CC1 35           1 dec (hl)
 671+ 9CC2 C9           2 ret
 672+ 9CC3
 673+ 9CC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CC3
 675+ 9CC3 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CC6 01 1F 00     	ld bc,31
 677+ 9CC9 A7           	and a
 678+ 9CCA ED 4A        	adc hl,bc
 679+ 9CCC 22 C8 88     	ld (Posicion_actual),hl
 680+ 9CCF 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CD2 CB C6        	set 0,(hl)
 682+ 9CD4 C9           	ret
 683+ 9CD5
 684+ 9CD5              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CD5
 686+ 9CD5 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CD8 01 1F 00     	ld bc,31
 688+ 9CDB A7           	and a
 689+ 9CDC ED 42        	sbc hl,bc
 690+ 9CDE 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CE1 21 F0 88     	ld hl,Ctrl_0
 692+ 9CE4 CB CE        	set 1,(hl)
 693+ 9CE6 C9           	ret
 694+ 9CE7
 695+ 9CE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CE7
 697+ 9CE7 24           Reaparece_abajo inc h
 698+ 9CE8 01 E0 17     	ld bc,$17e0
 699+ 9CEB A7           	and a
 700+ 9CEC ED 4A        	adc hl,bc
 701+ 9CEE 22 C8 88     	ld (Posicion_actual),hl
 702+ 9CF1 21 F0 88     	ld hl,Ctrl_0
 703+ 9CF4 CB D6        	set 2,(hl)
 704+ 9CF6 C9           	ret
 705+ 9CF7
 706+ 9CF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CF7
 708+ 9CF7 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CFA A7           	and a
 710+ 9CFB ED 42        	sbc hl,bc
 711+ 9CFD 22 C8 88     	ld (Posicion_actual),hl
 712+ 9D00 21 F0 88     	ld hl,Ctrl_0
 713+ 9D03 CB DE        	set 3,(hl)
 714+ 9D05 C9           	ret
 715+ 9D06
 716+ 9D06              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9D06              ;
 718+ 9D06              ;	15/07/23
 719+ 9D06
 720+ 9D06              Reinicio
 721+ 9D06
 722+ 9D06              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9D06
 724+ 9D06 AF           	xor a
 725+ 9D07 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D0A CD 28 9D     	call Limpia_contenido_hl
 727+ 9D0D
 728+ 9D0D 21 C8 88     	ld hl,Posicion_actual
 729+ 9D10 CD 28 9D     	call Limpia_contenido_hl
 730+ 9D13
 731+ 9D13 CD 5A A0     	call Inicializa_Puntero_indice_mov
 732+ 9D16 CD E4 9F     	call Inicia_Puntero_mov
 733+ 9D19
 734+ 9D19 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9D1C 06 05        	ld b,5
 736+ 9D1E 77           1 ld (hl),a
 737+ 9D1F 23           	inc hl
 738+ 9D20 10 FC        	djnz 1B
 739+ 9D22
 740+ 9D22 21 01 89     	ld hl,Ctrl_2
 741+ 9D25 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D27
 743+ 9D27 C9           	ret
 744+ 9D28
 745+ 9D28 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D29 23           	inc hl
 747+ 9D2A 77           	ld (hl),a
 748+ 9D2B C9           	ret
 749+ 9D2C
 750+ 9D2C
# file closed: Direcciones.asm
1699  9D2C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D2C              ; ------------------------------------------------------------------------
   2+ 9D2C              ;
   3+ 9D2C              ;	02/04/23
   4+ 9D2C              ;
   5+ 9D2C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D2C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D2C              ;
   8+ 9D2C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D2C              ;
  10+ 9D2C              ;	Modifica: A,BC y DE.
  11+ 9D2C
  12+ 9D2C C5           Genera_coordenadas push bc
  13+ 9D2D E5           	push hl
  14+ 9D2E D5           	push de
  15+ 9D2F
  16+ 9D2F 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9D32
  18+ 9D32 7D           	ld a,l
  19+ 9D33 E6 1F        	and $1f
  20+ 9D35 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D38
  22+ 9D38 CD A1 99     	call calcula_tercio
  23+ 9D3B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D3C
  25+ 9D3C 1E 00        	ld e,0
  26+ 9D3E 7D           	ld a,l
  27+ 9D3F E6 E0        	and $e0
  28+ 9D41 28 01        	jr z,1F
  29+ 9D43 04           	inc b
  30+ 9D44
  31+ 9D44 04           1 inc b
  32+ 9D45 05           	dec b
  33+ 9D46 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D48              ;														; _ , salimos.
  35+ 9D48 1C           3 inc e
  36+ 9D49 D6 20        	sub 32
  37+ 9D4B 20 FB        	jr nz,3B
  38+ 9D4D 10 F5        	djnz 1B
  39+ 9D4F
  40+ 9D4F 7B           2 ld a,e
  41+ 9D50 32 CD 88     	ld (Coordenada_y),a
  42+ 9D53
  43+ 9D53 D1           	pop de
  44+ 9D54 E1           	pop hl
  45+ 9D55 C1           	pop bc
  46+ 9D56
  47+ 9D56 C9           	ret
  48+ 9D57
  49+ 9D57              ; ------------------------------------------------------------------------
  50+ 9D57              ;	28/05/23
  51+ 9D57              ;
  52+ 9D57              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D57              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D57              ;
  55+ 9D57              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D57              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D57              ;
  58+ 9D57              ;		DE="$120d"
  59+ 9D57              ;
  60+ 9D57              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D57              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D57              ;
  63+ 9D57              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D57
  65+ 9D57              ;	Modifica: A,BC y DE.
  66+ 9D57
  67+ 9D57
  68+ 9D57              Genera_coordenadas_disparo
  69+ 9D57
  70+ 9D57              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D57
  72+ 9D57 7D           	ld a,l
  73+ 9D58 E6 1F        	and $1f
  74+ 9D5A 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D5B CD A1 99     	call calcula_tercio
  76+ 9D5E 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D5F 1E 00        	ld e,0
  78+ 9D61 7D           	ld a,l
  79+ 9D62 E6 E0        	and $e0
  80+ 9D64 28 01        	jr z,1F
  81+ 9D66 04           	inc b
  82+ 9D67 1C           1 inc e
  83+ 9D68 D6 20        	sub 32
  84+ 9D6A 20 FB        	jr nz,1B
  85+ 9D6C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D6E C9           	ret
  87+ 9D6F
# file closed: Genera_coordenadas.asm
1700  9D6F              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D6F              ; Relojes y temporizaciones.
   2+ 9D6F
   3+ 9D6F              ; ------------------------------------------------------
   4+ 9D6F              ;
   5+ 9D6F              ;	16/7/23
   6+ 9D6F              ;
   7+ 9D6F              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D6F              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D6F              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D6F              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D6F              ;
  12+ 9D6F              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D6F              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D6F
  15+ 9D6F              ; Disparo_entidad db 1
  16+ 9D6F              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D6F              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D6F
  19+ 9D6F              Habilita_disparos
  20+ 9D6F
  21+ 9D6F 7E           	ld a,(hl)
  22+ 9D70 A7           	and a
  23+ 9D71 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D72
  25+ 9D72 EB           	ex de,hl
  26+ 9D73
  27+ 9D73 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D74 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D75
  30+ 9D75              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D75
  32+ 9D75 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D76 7E           	ld a,(hl)
  34+ 9D77 23           	inc hl
  35+ 9D78 77           	ld (hl),a
  36+ 9D79
  37+ 9D79 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D7A 3E 01        	ld a,1
  39+ 9D7C 77           	ld (hl),a
  40+ 9D7D C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1701  9D7E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D7E
   2+ 9D7E
   3+ 9D7E              ;   07/07/23
   4+ 9D7E              ;
   5+ 9D7E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D7E              ;
   7+ 9D7E              ;   Codificación:
   8+ 9D7E              ;
   9+ 9D7E              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D7E              ;
  11+ 9D7E              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D7E              ;
  13+ 9D7E              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D7E              ;
  15+ 9D7E              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D7E              ;
  17+ 9D7E              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D7E              ;                               ..... %01000010 Vel_up 4
  19+ 9D7E              ;                                               Vel_down 2
  20+ 9D7E              ;                               ..... $42
  21+ 9D7E              ;
  22+ 9D7E              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D7E              ;
  24+ 9D7E              ;                               ..... %01000010 Vel_left 4
  25+ 9D7E              ;                                               Vel_right 2
  26+ 9D7E              ;                               ..... $42
  27+ 9D7E              ;
  28+ 9D7E              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D7E              ;
  30+ 9D7E              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D7E              ;
  32+ 9D7E              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D7E              ;
  34+ 9D7E              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D7E              ;                                     $53
  36+ 9D7E              ;
  37+ 9D7E              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D7E              ;
  39+ 9D7E              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D7E              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D7E              ;
  42+ 9D7E              ;                       Arriba ..... $81
  43+ 9D7E              ;                       Arriba - izquierda ..... $a1
  44+ 9D7E              ;                       Arriba - derecha ..... $91
  45+ 9D7E              ;
  46+ 9D7E              ;                       Abajo ..... $41
  47+ 9D7E              ;                       Abajo - izquierda ..... $61
  48+ 9D7E              ;                       Abajo - derecha ..... $51
  49+ 9D7E              ;
  50+ 9D7E              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D7E              ;
  52+ 9D7E              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D7E              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D7E              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D7E              ;
  56+ 9D7E              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D7E              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D7E              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D7E              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D7E              ;
  61+ 9D7E              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D7E              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D7E              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D7E              ;
  65+ 9D7E              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D7E              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D7E              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D7E              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D7E
  70+ 9D7E              ; ----- ----- ----- ----- -----
  71+ 9D7E
  72+ 9D7E AA 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D80 B2 9D            defw F_1
  74+ 9D82 BC 9D            defw F_2
  75+ 9D84 C6 9D            defw Codo_abajo_derecha
  76+ 9D86 FA 9D            defw Derecha_y_subiendo
  77+ 9D88 04 9E            defw Derecha_y_subiendo_1
  78+ 9D8A 0E 9E            defw F_3
  79+ 9D8C 18 9E            defw F_4
  80+ 9D8E 22 9E            defw Derecha_y_bajando
  81+ 9D90 2C 9E            defw Derecha_y_bajando_1
  82+ 9D92 36 9E            defw Derecha_y_bajando_2
  83+ 9D94 40 9E            defw Codo_derecha_abajo
  84+ 9D96 70 9E            defw Codo_abajo_izq.
  85+ 9D98 A4 9E            defw Izquierda_y_subiendo
  86+ 9D9A AE 9E            defw Izquierda_y_subiendo_1
  87+ 9D9C B8 9E            defw F_5
  88+ 9D9E C2 9E            defw F_6
  89+ 9DA0 CC 9E            defw Izquierda_y_bajando
  90+ 9DA2 D6 9E            defw Izquierda_y_bajando_1
  91+ 9DA4 E0 9E            defw Izquierda_y_bajando_2
  92+ 9DA6 EA 9E            defw Codo_izquierda_abajo
  93+ 9DA8 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DAA
  95+ 9DAA 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DAE 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DB2
  98+ 9DB2 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DB6 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DBA 08 00
 100+ 9DBC 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DC0 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DC4 0F FE
 102+ 9DC6
 103+ 9DC6 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DCA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DCE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DD2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DD6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DDA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DDE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DE2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DE6 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DEA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DEE 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DF2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DF6 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DFA
 117+ 9DFA 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DFE 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E02 06 00
 119+ 9E04
 120+ 9E04 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E08 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E0C 02 00
 122+ 9E0E
 123+ 9E0E 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E12 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E16 04 00
 125+ 9E18 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E1C 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E20 08 00
 127+ 9E22
 128+ 9E22 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E26 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E2A 02 00
 130+ 9E2C
 131+ 9E2C 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E30 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E34 06 00
 133+ 9E36
 134+ 9E36 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E3A 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E3E 06 00
 136+ 9E40
 137+ 9E40              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E40
 139+ 9E40 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E44 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E48 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E4C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E5C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E60 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E64 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E68 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E6C 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E70
 152+ 9E70 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E74 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E78 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E7C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E80 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E84 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E88 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E8C 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E90 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E94 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E98 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E9C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EA0 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EA4
 166+ 9EA4 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EA8 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EAC 06 00
 168+ 9EAE
 169+ 9EAE 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EB2 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EB6 02 00
 171+ 9EB8
 172+ 9EB8 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EBC 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EC0 04 00
 174+ 9EC2 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EC6 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9ECA 08 00
 176+ 9ECC
 177+ 9ECC 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9ED0 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9ED4 02 00
 179+ 9ED6
 180+ 9ED6 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EDA 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EDE 06 00
 182+ 9EE0
 183+ 9EE0 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EE4 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EE8 06 00
 185+ 9EEA
 186+ 9EEA 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EEE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EF2 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EF6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EFA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EFE 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F02 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F06 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F0A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F0E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F12 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F16 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F1A
 199+ 9F1A              ; ----- ----- ----- ----- -----
 200+ 9F1A              ;
 201+ 9F1A              ;   27/06/23
 202+ 9F1A
 203+ 9F1A              Movimiento
 204+ 9F1A
 205+ 9F1A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F1A
 207+ 9F1A              ;    ld hl,(Posicion_actual)
 208+ 9F1A
 209+ 9F1A FB               ei
 210+ 9F1B
 211+ 9F1B 3A 01 89         ld a,(Ctrl_2)
 212+ 9F1E CB 57            bit 2,a
 213+ 9F20 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F22
 215+ 9F22 2A F3 88         ld hl,(Puntero_mov)
 216+ 9F25 7E               ld a,(hl)
 217+ 9F26
 218+ 9F26              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F26
 220+ 9F26              Inicia_desplazamiento.
 221+ 9F26
 222+ 9F26              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F26
 224+ 9F26 CD 1B A0         call Ajusta_velocidad_desplazamiento
 225+ 9F29
 226+ 9F29              ; Iniciamos (Repetimos_mov).
 227+ 9F29
 228+ 9F29 7E               ld a,(hl)
 229+ 9F2A E6 0F            and $0f
 230+ 9F2C 32 F9 88         ld (Repetimos_desplazamiento),a
 231+ 9F2F 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F32
 233+ 9F32              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F32
 235+ 9F32 23               inc hl
 236+ 9F33 7E               ld a,(hl)
 237+ 9F34 32 FC 88         ld (Cola_de_desplazamiento),a
 238+ 9F37 2B               dec hl
 239+ 9F38
 240+ 9F38 21 01 89         ld hl,Ctrl_2
 241+ 9F3B CB D6            set 2,(hl)
 242+ 9F3D
 243+ 9F3D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F3D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F3D
 246+ 9F3D              Desplazamiento_iniciado
 247+ 9F3D
 248+ 9F3D CD EF 9F         call Aplica_desplazamiento
 249+ 9F40
 250+ 9F40 3A 01 89         ld a,(Ctrl_2)
 251+ 9F43 CB 67            bit 4,a
 252+ 9F45 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F46
 254+ 9F46 21 F9 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F49 35               dec (hl)
 256+ 9F4A C0               ret nz
 257+ 9F4B
 258+ 9F4B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F4B              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F4B              ; Analiza (Cola_de_desplazamiento).
 261+ 9F4B
 262+ 9F4B 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F4E A7               and a
 264+ 9F4F CC 44 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F52 28 30            jr z,Reinicia_el_movimiento
 266+ 9F54
 267+ 9F54 FE FF            cp $ff
 268+ 9F56 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F58
 270+ 9F58 FE FE            cp $fe
 271+ 9F5A CC C8 9F         call z,Fijamos_bucle
 272+ 9F5D 28 25            jr z,Reinicia_el_movimiento
 273+ 9F5F
 274+ 9F5F FE FD            cp $fd
 275+ 9F61 20 11            jr nz,1F
 276+ 9F63
 277+ 9F63              ; ---
 278+ 9F63              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F63
 280+ 9F63 3A 01 89         ld a,(Ctrl_2)
 281+ 9F66 CB 5F            bit 3,a
 282+ 9F68 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F6A
 284+ 9F6A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F6A
 286+ 9F6A 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F6D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F6F
 289+ 9F6F CD D9 9F         call Inicia_Repetimos_movimiento
 290+ 9F72 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F74              ; ---
 292+ 9F74
 293+ 9F74 FE 01        1 cp 1
 294+ 9F76 CA B2 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F79
 296+ 9F79 3D               dec a
 297+ 9F7A 32 FC 88         ld (Cola_de_desplazamiento),a
 298+ 9F7D
 299+ 9F7D 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F80 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F83              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F83 C9               ret
 303+ 9F84
 304+ 9F84              Reinicia_el_movimiento
 305+ 9F84
 306+ 9F84 F3               di
 307+ 9F85
 308+ 9F85 3A 01 89         ld a,(Ctrl_2)
 309+ 9F88 CB 5F            bit 3,a
 310+ 9F8A 28 1B            jr z,2F
 311+ 9F8C
 312+ 9F8C              ; (Cola_de_desplazamiento)="254".
 313+ 9F8C
 314+ 9F8C 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F8F 35               dec (hl)
 316+ 9F90 20 15            jr nz,2F
 317+ 9F92
 318+ 9F92              ; Fin de las repeticiones del último movimiento.
 319+ 9F92
 320+ 9F92 21 01 89         ld hl,Ctrl_2
 321+ 9F95 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F97
 323+ 9F97 2A F3 88         ld hl,(Puntero_mov)
 324+ 9F9A 23               inc hl
 325+ 9F9B 23               inc hl
 326+ 9F9C 23               inc hl
 327+ 9F9D 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FA0              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FA0 7E               ld a,(hl)
 330+ 9FA1 32 FC 88         ld (Cola_de_desplazamiento),a
 331+ 9FA4
 332+ 9FA4 C3 4B 9F         jp Cola
 333+ 9FA7
 334+ 9FA7 CD E4 9F     2 call Inicia_Puntero_mov
 335+ 9FAA
 336+ 9FAA 21 01 89         ld hl,Ctrl_2
 337+ 9FAD CB 96            res 2,(hl)
 338+ 9FAF
 339+ 9FAF C3 1A 9F         jp Movimiento
 340+ 9FB2
 341+ 9FB2              Siguiente_desplazamiento
 342+ 9FB2
 343+ 9FB2              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FB2              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FB2
 346+ 9FB2 21 01 89         ld hl,Ctrl_2
 347+ 9FB5 CB 96            res 2,(hl)
 348+ 9FB7
 349+ 9FB7 2A F3 88         ld hl,(Puntero_mov)
 350+ 9FBA 23               inc hl
 351+ 9FBB 23               inc hl
 352+ 9FBC 22 F3 88         ld (Puntero_mov),hl
 353+ 9FBF
 354+ 9FBF 7E               ld a,(hl)
 355+ 9FC0 A7               and a
 356+ 9FC1 CC 44 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FC4 CA 84 9F         jp z,Reinicia_el_movimiento
 358+ 9FC7
 359+ 9FC7 C9               ret
 360+ 9FC8              ; Subrutinas -----------------------------------------
 361+ 9FC8              ; ---------- --------- --------- ---------- ----------
 362+ 9FC8              ;
 363+ 9FC8              ;   24/07/23
 364+ 9FC8              ;
 365+ 9FC8              ;   Fijamos_bucle
 366+ 9FC8              ;
 367+ 9FC8              ;
 368+ 9FC8
 369+ 9FC8              Fijamos_bucle
 370+ 9FC8
 371+ 9FC8 3A F7 88         ld a,(Incrementa_puntero)
 372+ 9FCB 3C               inc a
 373+ 9FCC 32 F8 88         ld (Incrementa_puntero_backup),a
 374+ 9FCF
 375+ 9FCF CD 44 A0         call Incrementa_Puntero_indice_mov
 376+ 9FD2 2A F1 88         ld hl,(Puntero_indice_mov)
 377+ 9FD5 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FD8 C9               ret
 379+ 9FD9
 380+ 9FD9              ; ---------- --------- --------- ---------- ----------
 381+ 9FD9              ;
 382+ 9FD9              ;   07/7/23
 383+ 9FD9              ;
 384+ 9FD9              ;   Inicia_Repetimos_movimiento
 385+ 9FD9              ;
 386+ 9FD9              ;
 387+ 9FD9
 388+ 9FD9              Inicia_Repetimos_movimiento
 389+ 9FD9
 390+ 9FD9              ; Iniciamos (Repetimos_movimiento).
 391+ 9FD9
 392+ 9FD9 DD 2A F3 88      ld ix,(Puntero_mov)
 393+ 9FDD DD 7E 02         ld a,(ix+2)
 394+ 9FE0 32 FB 88         ld (Repetimos_movimiento),a
 395+ 9FE3
 396+ 9FE3 C9               ret
 397+ 9FE4
 398+ 9FE4              ; ---------- --------- --------- ---------- ----------
 399+ 9FE4              ;
 400+ 9FE4              ;   26/6/23
 401+ 9FE4              ;
 402+ 9FE4              ;   Inicia_Puntero_mov
 403+ 9FE4              ;
 404+ 9FE4              ;
 405+ 9FE4
 406+ 9FE4 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FE7 5E               ld e,(hl)
 408+ 9FE8 23               inc hl
 409+ 9FE9 56               ld d,(hl)
 410+ 9FEA EB               ex de,hl
 411+ 9FEB 22 F3 88         ld (Puntero_mov),hl
 412+ 9FEE C9               ret
 413+ 9FEF
 414+ 9FEF              ; ---------- --------- --------- ---------- ----------
 415+ 9FEF              ;
 416+ 9FEF              ;   27/06/23
 417+ 9FEF              ;
 418+ 9FEF              ;   Aplica_movimiento.
 419+ 9FEF
 420+ 9FEF              Aplica_desplazamiento
 421+ 9FEF
 422+ 9FEF              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FEF
 424+ 9FEF 2A F3 88         ld hl, (Puntero_mov)
 425+ 9FF2
 426+ 9FF2 7E               ld a,(hl)
 427+ 9FF3 E6 F0            and $f0
 428+ 9FF5 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FF6
 430+ 9FF6 CB 7E            bit 7,(hl)
 431+ 9FF8 28 03            jr z,1F
 432+ 9FFA CD 18 9A         call Mov_up
 433+ 9FFD 2A F3 88     1 ld hl, (Puntero_mov)
 434+ A000 CB 76            bit 6,(hl)
 435+ A002 28 03            jr z,2F
 436+ A004 CD E7 99         call Mov_down
 437+ A007 2A F3 88     2 ld hl, (Puntero_mov)
 438+ A00A CB 6E            bit 5,(hl)
 439+ A00C 28 03            jr z,3F
 440+ A00E CD 79 9B         call Mov_left
 441+ A011 2A F3 88     3 ld hl, (Puntero_mov)
 442+ A014 CB 66            bit 4,(hl)
 443+ A016 C8               ret z
 444+ A017 CD 5B 9A         call Mov_right
 445+ A01A C9               ret
 446+ A01B
 447+ A01B              ; ---------- --------- --------- ---------- ----------
 448+ A01B              ;
 449+ A01B              ;   26/06/23
 450+ A01B              ;
 451+ A01B              ;   Ajusta_velocidad_desplazamiento.
 452+ A01B
 453+ A01B              Ajusta_velocidad_desplazamiento
 454+ A01B
 455+ A01B              ; 1er byte de la cadena de movimiento.
 456+ A01B              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A01B
 458+ A01B CD 39 A0         call Extrae_nibble_alto
 459+ A01E
 460+ A01E 32 DD 88         ld (Vel_up),a
 461+ A021 79               ld a,c
 462+ A022 E6 0F            and $0f
 463+ A024 32 DE 88         ld (Vel_down),a
 464+ A027
 465+ A027              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A027              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A027
 468+ A027 23               inc hl
 469+ A028 CD 39 A0         call Extrae_nibble_alto
 470+ A02B
 471+ A02B 32 DB 88         ld (Vel_left),a
 472+ A02E 79               ld a,c
 473+ A02F E6 0F            and $0f
 474+ A031 32 DC 88         ld (Vel_right),a
 475+ A034
 476+ A034              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A034
 478+ A034 23               inc hl
 479+ A035 22 F3 88         ld (Puntero_mov),hl
 480+ A038 C9               ret
 481+ A039
 482+ A039 06 04        Extrae_nibble_alto ld b,4
 483+ A03B 7E               ld a,(hl)
 484+ A03C 4F               ld c,a
 485+ A03D E6 F0            and $f0
 486+ A03F CB 3F        1 srl a
 487+ A041 10 FC            djnz 1B
 488+ A043 C9               ret
 489+ A044
 490+ A044              ; ---------- --------- --------- ---------- ----------
 491+ A044              ;
 492+ A044              ;   5/7/23
 493+ A044              ;
 494+ A044              ;   Incrementa_Puntero_indice_mov
 495+ A044
 496+ A044              Incrementa_Puntero_indice_mov
 497+ A044
 498+ A044 21 F7 88         ld hl,Incrementa_puntero
 499+ A047 34               inc (hl)
 500+ A048
 501+ A048 2A F1 88         ld hl,(Puntero_indice_mov)
 502+ A04B 01 02 00         ld bc,2
 503+ A04E A7               and a
 504+ A04F 09               add hl,bc
 505+ A050 22 F1 88         ld (Puntero_indice_mov),hl
 506+ A053
 507+ A053 7E               ld a,(hl)
 508+ A054 A7               and a
 509+ A055
 510+ A055              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A055
 512+ A055              ;    jr z,$
 513+ A055
 514+ A055              ;! Reinicia el Patrón de movimiento.
 515+ A055
 516+ A055 CC 5A A0         call z,Inicializa_Puntero_indice_mov
 517+ A058
 518+ A058 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A059
 520+ A059 C9               ret
 521+ A05A
 522+ A05A
 523+ A05A              ; ---------- --------- --------- ---------- ----------
 524+ A05A              ;
 525+ A05A              ;   24/07/23
 526+ A05A              ;
 527+ A05A              ;   Inicializa_Puntero_indice_mov
 528+ A05A
 529+ A05A              Inicializa_Puntero_indice_mov
 530+ A05A
 531+ A05A              ; Existe etiqueta de bucle principal???
 532+ A05A
 533+ A05A 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A05D 24               inc h
 535+ A05E 25               dec h
 536+ A05F 28 05            jr z,2F
 537+ A061
 538+ A061 22 F1 88         ld (Puntero_indice_mov),hl
 539+ A064 18 14            jr 3F
 540+ A066
 541+ A066              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A066
 543+ A066 3A F7 88     2 ld a,(Incrementa_puntero)
 544+ A069 47               ld b,a
 545+ A06A
 546+ A06A 2A F1 88         ld hl,(Puntero_indice_mov)
 547+ A06D 2B           1 dec hl
 548+ A06E 2B               dec hl
 549+ A06F 10 FC            djnz 1B
 550+ A071 22 F1 88         ld (Puntero_indice_mov),hl
 551+ A074
 552+ A074 AF               xor a
 553+ A075 32 F7 88         ld (Incrementa_puntero),a
 554+ A078 18 06            jr 4F
 555+ A07A
 556+ A07A 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 557+ A07D 32 F7 88         ld (Incrementa_puntero),a
 558+ A080 C9           4 ret
 559+ A081
 560+ A081
 561+ A081
# file closed: Patrones_de_mov.asm
1702  A081              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A081              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A081              ;
   3+ A081              ;	4/9/23
   4+ A081              ;
   5+ A081              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A081
   7+ A081              ;	ADC HL,SP	LD (addr),SP
   8+ A081              ;	ADD HL,SP	LD SP,(addr)
   9+ A081              ;	ADD IX,SP	LD SP,nn
  10+ A081              ; 	ADD IY,SP	LD SP,HL
  11+ A081              ;				LD SP,IX
  12+ A081              ;	DEC SP		LD SP,IY
  13+ A081
  14+ A081              ;	EX (SP),HL
  15+ A081              ;	EX (SP),IX
  16+ A081              ;	EX (SP),IY
  17+ A081
  18+ A081              ;	INC SP
  19+ A081
  20+ A081                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 03 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A F0 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 03 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1C 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A F0 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 22 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 14 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 1A 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 14 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 113+ 7FFE
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ec
 118+ 72EC
 119+ 72EC              Gestiona_albumes_de_fotos
 120+ 72EC
 121+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72EC              ;   Vaciamos Album_de_fotos.
 123+ 72EC
 124+ 72EC              ;   Album_de_fotos. Contiene datos ???
 125+ 72EC
 126+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72EF 7E               ld a,(hl)
 128+ 72F0 A7               and a
 129+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72F3
 131+ 72F3 2A 1E 89         ld hl,(End_Snapshot)
 132+ 72F6 01 00 70         ld bc,Album_de_fotos
 133+ 72F9 11 01 70         ld de,Album_de_fotos+1
 134+ 72FC AF               xor a
 135+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72FE
 137+ 72FE CD 8E 73         call Limpia_album
 138+ 7301
 139+ 7301 21 00 00         ld hl,0
 140+ 7304 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 7307
 142+ 7307              ; ----- ----- ----- -----
 143+ 7307
 144+ 7307              ;   Album_de_fotos_1. Contiene datos ???
 145+ 7307
 146+ 7307 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 730A 7E               ld a,(hl)
 148+ 730B A7               and a
 149+ 730C 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 730E              ;                               ; _ información del album2 al album1.
 151+ 730E
 152+ 730E              ; ----- ----- ----- -----
 153+ 730E              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 730E
 155+ 730E 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 7311 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 7314 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 7317
 159+ 7317 CD 8E 73         call Limpia_album
 160+ 731A
 161+ 731A              ;   Calculamos (End_Snapshot)
 162+ 731A
 163+ 731A A7               and a
 164+ 731B ED 4A            adc hl,bc
 165+ 731D 22 1E 89         ld (End_Snapshot),hl
 166+ 7320
 167+ 7320              ;   Limpiamos Album_de_fotos_1.
 168+ 7320
 169+ 7320 2A 24 89         ld hl,(End_Snapshot_1)
 170+ 7323 01 54 70         ld bc,Album_de_fotos_1
 171+ 7326 11 55 70         ld de,Album_de_fotos_1+1
 172+ 7329 AF               xor a
 173+ 732A 02               ld (bc),a
 174+ 732B
 175+ 732B CD 8E 73         call Limpia_album
 176+ 732E
 177+ 732E 21 00 00         ld hl,0
 178+ 7331 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 7334
 180+ 7334              ; ----- ----- ----- -----
 181+ 7334
 182+ 7334              ;   Album_de_fotos_2. Contiene datos ???
 183+ 7334
 184+ 7334 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 7337 7E               ld a,(hl)
 186+ 7338 A7               and a
 187+ 7339 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 733B              ;                               ; _ información del album3 al album2.
 189+ 733B              ; ----- ----- ----- -----
 190+ 733B              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 733B
 192+ 733B 2A 28 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 733E 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7341 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7344
 196+ 7344 CD 8E 73         call Limpia_album
 197+ 7347
 198+ 7347              ;   Calculamos (End_Snapshot_1):
 199+ 7347
 200+ 7347 A7               and a
 201+ 7348 ED 4A            adc hl,bc
 202+ 734A 22 24 89         ld (End_Snapshot_1),hl
 203+ 734D
 204+ 734D              ;   Limpiamos Album_de_fotos_2.
 205+ 734D
 206+ 734D 2A 28 89         ld hl,(End_Snapshot_2)
 207+ 7350 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7353 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7356 AF               xor a
 210+ 7357 02               ld (bc),a
 211+ 7358
 212+ 7358 CD 8E 73         call Limpia_album
 213+ 735B
 214+ 735B 21 00 00         ld hl,0
 215+ 735E 22 28 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7361
 217+ 7361              ; ----- ----- ----- -----
 218+ 7361
 219+ 7361              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7361
 221+ 7361 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7364 7E               ld a,(hl)
 223+ 7365 A7               and a
 224+ 7366 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7367
 226+ 7367              ; ----- ----- ----- -----
 227+ 7367              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7367
 229+ 7367 2A 2C 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 736A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 736D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7370
 233+ 7370 CD 8E 73         call Limpia_album
 234+ 7373
 235+ 7373              ;   Calculamos (End_Snapshot_2):
 236+ 7373
 237+ 7373 A7               and a
 238+ 7374 ED 4A            adc hl,bc
 239+ 7376 22 28 89         ld (End_Snapshot_2),hl
 240+ 7379
 241+ 7379              ;   Limpiamos Album_de_fotos_3.
 242+ 7379
 243+ 7379 2A 2C 89         ld hl,(End_Snapshot_3)
 244+ 737C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 737F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7382 AF               xor a
 247+ 7383 02               ld (bc),a
 248+ 7384
 249+ 7384 CD 8E 73         call Limpia_album
 250+ 7387
 251+ 7387 21 00 00         ld hl,0
 252+ 738A 22 2C 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 738D C9               ret
 254+ 738E
 255+ 738E              ; ----------------------------------------------------
 256+ 738E              ;
 257+ 738E              ;   10/8/23
 258+ 738E              ;
 259+ 738E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 738E              ;
 261+ 738E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 738E              ;           BC ..... Dirección de inicio del álbum.
 263+ 738E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 738E
 265+ 738E              ;    ld hl,(End_Snapshot)
 266+ 738E              ;    ld bc,Album_de_fotos
 267+ 738E              ;    ld de,Album_de_fotos+1
 268+ 738E
 269+ 738E              ;   MODIFICA: A,HL,BC y DE.
 270+ 738E
 271+ 738E              Limpia_album
 272+ 738E D5               push de                     ; Guardo DESTINO.
 273+ 738F C5               push bc                     ; Guardo ORIGEN.
 274+ 7390 ED 42            sbc hl,bc
 275+ 7392 4D               ld c,l
 276+ 7393 44               ld b,h
 277+ 7394 E1               pop hl
 278+ 7395 C5               push bc
 279+ 7396 ED B0            ldir
 280+ 7398 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7399 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 739A C9               ret                         ; _ a otro).
 283+ 739B              ;
 284+ 739B
 285+ 739B              ; -----------------------------------------------
 286+ 739B
 287+ 739B
 288+ 739B
 289+ 739B
 290+ 739B
# file closed: Guarda_foto_registros.asm
1703  739B
1704  739B              	SAVESNA "Pruebas.sna", START
1705  739B
1706  739B
1707  739B
1708  739B
# file closed: Banco_de_pruebas.asm
