# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 4D 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD DE 8C     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD EE 8C     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 57 88     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B 4D 88  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC E3 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 C4 85        	defw Caja_2
 110+ 8574 D0 85        	defw Caja_3
 111+ 8576 DC 85        	defw Caja_4
 112+ 8578 E8 85        	defw Caja_5
 113+ 857A F4 85        	defw Caja_6
 114+ 857C 00 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 12 bytes !!!
 155+ 85B8
 156+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 157+ 85BA 00           	db %00000000										; (Attr).
 158+ 85BB              ;	db 0												; (Cuad_objeto).
 159+ 85BB 00           	db 0												; (Impacto).
 160+ 85BC 00 00        	defw 0												; (Puntero_de_impresion).
 161+ 85BE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 162+ 85C0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 163+ 85C2 00           	db 0												; (Ctrl_0).
 164+ 85C3 00           	db 0												; (Ctrl_2).
 165+ 85C4
 166+ 85C4              ; ---------- ---------- ---------- ---------- ----------
 167+ 85C4
 168+ 85C4 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 169+ 85C6 00           	db %00000000										; (Attr).
 170+ 85C7              ;	db 0												; (Cuad_objeto).
 171+ 85C7 00           	db 0												; (Impacto).
 172+ 85C8 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 85CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 85CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 85CE 00           	db 0												; (Ctrl_0).
 176+ 85CF 00           	db 0												; (Ctrl_2).
 177+ 85D0
 178+ 85D0              ; ---------- ---------- ---------- ---------- ----------
 179+ 85D0
 180+ 85D0 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 181+ 85D2 00           	db %00000000										; (Attr).
 182+ 85D3              ;	db 0												; (Cuad_objeto).
 183+ 85D3 00           	db 0												; (Impacto).
 184+ 85D4 00 00        	defw 0												; (Puntero_de_impresion).
 185+ 85D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 186+ 85D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 187+ 85DA 00           	db 0												; (Ctrl_0).
 188+ 85DB 00           	db 0												; (Ctrl_2).
 189+ 85DC
 190+ 85DC              ; ---------- ---------- ---------- ---------- ----------
 191+ 85DC
 192+ 85DC 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 193+ 85DE 00           	db %00000000										; (Attr).
 194+ 85DF              ;	db 0												; (Cuad_objeto).
 195+ 85DF 00           	db 0												; (Impacto).
 196+ 85E0 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 85E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 85E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 85E6 00           	db 0												; (Ctrl_0).
 200+ 85E7 00           	db 0												; (Ctrl_2).
 201+ 85E8
 202+ 85E8              ; ---------- ---------- ---------- ---------- ----------
 203+ 85E8
 204+ 85E8 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 205+ 85EA 00           	db %00000000										; (Attr).
 206+ 85EB              ;	db 0												; (Cuad_objeto).
 207+ 85EB 00           	db 0												; (Impacto).
 208+ 85EC 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 85EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 85F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 85F2 00           	db 0												; (Ctrl_0).
 212+ 85F3 00           	db 0												; (Ctrl_2).
 213+ 85F4
 214+ 85F4              ; ---------- ---------- ---------- ---------- ----------
 215+ 85F4
 216+ 85F4 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 217+ 85F6 00           	db %00000000										; (Attr).
 218+ 85F7              ;	db 0												; (Cuad_objeto).
 219+ 85F7 00           	db 0												; (Impacto).
 220+ 85F8 00 00        	defw 0												; (Puntero_de_impresion).
 221+ 85FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 222+ 85FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 223+ 85FE 00           	db 0												; (Ctrl_0).
 224+ 85FF 00           	db 0												; (Ctrl_2).
 225+ 8600
 226+ 8600              ; ---------- ---------- ---------- ---------- ----------
 227+ 8600
 228+ 8600 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 229+ 8602 00           	db %00000000										; (Attr).
 230+ 8603              ;	db 0												; (Cuad_objeto).
 231+ 8603 00           	db 0												; (Impacto).
 232+ 8604 00 00        	defw 0												; (Puntero_de_impresion).
 233+ 8606 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 234+ 8608 00 00        	defw 0 												; (Contador_de_mov_masticados).
 235+ 860A 00           	db 0												; (Ctrl_0).
 236+ 860B 00           	db 0												; (Ctrl_2).
 237+ 860C
 238+ 860C              ; -------------------------------------------------------------------------------------
 239+ 860C              ;
 240+ 860C              ;	11/1/24
 241+ 860C              ;
 242+ 860C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 243+ 860C              ;
 244+ 860C              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 245+ 860C              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 246+ 860C              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 247+ 860C              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 248+ 860C
 249+ 860C              Indice_de_definiciones_de_entidades
 250+ 860C
 251+ 860C 10 86        	defw Entidad_1
 252+ 860E 1D 86        	defw Entidad_2
 253+ 8610
 254+ 8610              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 255+ 8610
 256+ 8610              ;	BADSAT, (Satélite malvado).
 257+ 8610
 258+ 8610 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 259+ 8613 04           	db %00000100										; (Attr).
 260+ 8614 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 261+ 8616 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 262+ 8618 03 40        	defw $4003                                      	; (Posicion_inicio).
 263+ 861A 01           	db 1												; (Cuad_objeto).
 264+ 861B 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 265+ 861D
 266+ 861D 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 267+ 8620 02           	db %00000010										; (Attr).
 268+ 8621 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 269+ 8623 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 270+ 8625 40 50        	defw $5040                                      	; (Posicion_inicio).
 271+ 8627 01           	db 1												; (Cuad_objeto).
 272+ 8628 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 273+ 862A
# file closed: Cajas_y_disparos.asm
 105  862A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 862A              ; 19/1/24
   2+ 862A
   3+ 862A              Indice_de_niveles
   4+ 862A
   5+ 862A 32 86        	defw Nivel_1
   6+ 862C 3A 86        	defw Nivel_2
   7+ 862E
   8+ 862E              ;	...
   9+ 862E              ;	...
  10+ 862E              ;	+ Niveles ...
  11+ 862E
  12+ 862E 00 00        	defw 0
  13+ 8630 00 00        	defw 0
  14+ 8632
  15+ 8632 03           Nivel_1 db 3									; Nº de entidades.
  16+ 8633 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8637 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 863A
  19+ 863A 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 863B 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 863F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8643 01 02
  22+ 8645 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8649 01 02
  23+ 864B
  24+ 864B              ;---------------------------------------------------------------------------------------------------------------
  25+ 864B              ;
  26+ 864B              ;   19/1/24
  27+ 864B              ;
  28+ 864B              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 864B              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 864B              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 864B              ;	_ de la 1ª entidad del Nivel.
  32+ 864B              ;
  33+ 864B              ;	MODIFICA: HL,DE y A.
  34+ 864B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 864B
  36+ 864B              Inicializa_Nivel
  37+ 864B
  38+ 864B 2A 76 88     	ld hl,(Puntero_indice_NIVELES)
  39+ 864E CD C1 8B     	call Extrae_address
  40+ 8651 7E           	ld a,(hl)
  41+ 8652 32 41 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 8655 23           	inc hl
  43+ 8656 CD 60 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 8659 22 78 88     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 865C CD 69 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 865F C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 8660
  48+ 8660              ; ----------------------
  49+ 8660
  50+ 8660 11 20 88     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8663 01 04 00     	ld bc,4
  52+ 8666 ED B0        	ldir
  53+ 8668 C9           	ret
  54+ 8669
  55+ 8669 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 866A CD 5C 87         call Calcula_salto_en_BC
  57+ 866D 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 8670 A7               and a
  59+ 8671 ED 4A            adc hl,bc
  60+ 8673 CD C1 8B         call Extrae_address
  61+ 8676 22 2C 88         ld (Puntero_indice_mov),hl
  62+ 8679 C9               ret
  63+ 867A
  64+ 867A              ;---------------------------------------------------------------------------------------------------------------
  65+ 867A              ;
  66+ 867A              ;   5/1/24
  67+ 867A              ;
  68+ 867A              ;	Destruye A,BC,HL,DE
  69+ 867A
  70+ 867A              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 867A              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 867A
  73+ 867A              Prepara_cajas_de_entidades
  74+ 867A
  75+ 867A              ; Preparamos los punteros de las cajas de entidades:
  76+ 867A
  77+ 867A CD 29 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 867D              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 867D CD D9 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 8680
  81+ 8680 2A 78 88     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 8683
  83+ 8683 22 78 88     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 8686
  85+ 8686 CD 0A 87     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 8689
  87+ 8689 2A 78 88     	ld hl,(Datos_de_nivel)
  88+ 868C
  89+ 868C              ; En este punto:
  90+ 868C              ;
  91+ 868C              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 868C              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 868C
  94+ 868C C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 868D
  96+ 868D 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 868E CD 5C 87     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 8691
  99+ 8691 21 0C 86     	ld hl,Indice_de_definiciones_de_entidades
 100+ 8694 CD 64 87     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 8697
 102+ 8697 CD 6E 87     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 869A
 104+ 869A              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 869A
 106+ 869A CD 2C 87     	call Busca_mov_masticados_segun_tipo
 107+ 869D
 108+ 869D A7           	and a
 109+ 869E 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 86A0
 111+ 86A0              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 86A0
 113+ 86A0              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 86A0              ;	_ de este tipo de entidad.
 115+ 86A0
 116+ 86A0 CD F0 9E     	call Situa_en_Contador_general_de_mov_masticados
 117+ 86A3
 118+ 86A3              	; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
 119+ 86A3
 120+ 86A3              	; HL apunta al bye bajo del (Contador_general_de_mov_masticados) de esta entidad.
 121+ 86A3
 122+ 86A3              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
 123+ 86A3
 124+ 86A3 CD F0 9E     	call Situa_en_Contador_general_de_mov_masticados
 125+ 86A6
 126+ 86A6              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
 127+ 86A6              ; Cargamos (Contador_de_mov_masticados) con el (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 128+ 86A6
 129+ 86A6 18 FE        	jr $
 130+ 86A8
 131+ 86A8 CD 79 8A     3 call Construye_movimientos_masticados_entidad
 132+ 86AB
 133+ 86AB              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 134+ 86AB              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 135+ 86AB              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 136+ 86AB              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 137+ 86AB              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 138+ 86AB
 139+ 86AB CD EA 86     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 140+ 86AE              ;																; _ Mov_masticados ya generados.
 141+ 86AE CD CE 8A     4 call Cargamos_registros_con_mov_masticado
 142+ 86B1
 143+ 86B1 CD 16 71     	call Guarda_foto_registros
 144+ 86B4 F3           	di
 145+ 86B5              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 146+ 86B5              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 147+ 86B5              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 148+ 86B5
 149+ 86B5              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 150+ 86B5
 151+ 86B5 CD E2 86     	call Decrementa_Contador_de_mov_masticados
 152+ 86B8
 153+ 86B8              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 154+ 86B8
 155+ 86B8 2A 13 88     	ld hl,(Puntero_de_impresion)
 156+ 86BB CD 90 9B     	call Genera_coordenadas
 157+ 86BE
 158+ 86BE CD A1 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 159+ 86C1 CD D7 86     	call Limpiamos_bandeja_DRAW
 160+ 86C4
 161+ 86C4              ; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 162+ 86C4
 163+ 86C4 CD 0F 8C     	call Incrementa_punteros_de_cajas							; Nos situamos en la siguiente caja de entidades.
 164+ 86C7
 165+ 86C7              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 166+ 86C7              ; _ entidad del Nivel.
 167+ 86C7
 168+ 86C7 3A 58 88     	ld a,(Ctrl_4)
 169+ 86CA E6 F0        	and $f0
 170+ 86CC 32 58 88     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 171+ 86CF
 172+ 86CF              ; Siguiente entidad del Nivel.
 173+ 86CF
 174+ 86CF 2A 78 88     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 175+ 86D2 23           	inc hl 														; _ entidad del Nivel.
 176+ 86D3
 177+ 86D3 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 178+ 86D4 10 AD        	djnz 2B
 179+ 86D6
 180+ 86D6 C9           	ret
 181+ 86D7
 182+ 86D7              ; ---------------------------------------------------------------------
 183+ 86D7              ;
 184+ 86D7              ;	25/01/24
 185+ 86D7
 186+ 86D7 21 F6 87     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 187+ 86DA 06 2A        	ld b,42
 188+ 86DC AF           	xor a
 189+ 86DD
 190+ 86DD 77           1 ld (hl),a
 191+ 86DE 23           	inc hl
 192+ 86DF 10 FC        	djnz 1B
 193+ 86E1
 194+ 86E1 C9           	ret
 195+ 86E2
 196+ 86E2              ; ---------------------------------------------------------------------
 197+ 86E2              ;
 198+ 86E2              ;	22/01/24
 199+ 86E2
 200+ 86E2 2A 17 88     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 201+ 86E5 2B           	dec hl
 202+ 86E6 22 17 88     	ld (Contador_de_mov_masticados),hl
 203+ 86E9 C9           	ret
 204+ 86EA
 205+ 86EA              ; ---------------------------------------------------------------------
 206+ 86EA              ;
 207+ 86EA              ;	22/01/24
 208+ 86EA
 209+ 86EA 21 58 88     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 210+ 86ED CB 46        	bit 0,(hl)
 211+ 86EF 20 0D        	jr nz,1F
 212+ 86F1 CB 4E        	bit 1,(hl)
 213+ 86F3 20 0C        	jr nz,2F
 214+ 86F5 CB 56        	bit 2,(hl)
 215+ 86F7 20 0B        	jr nz,3F
 216+ 86F9 CB 5E        	bit 3,(hl)
 217+ 86FB 20 0A        	jr nz,4F
 218+ 86FD C9           	ret
 219+ 86FE
 220+ 86FE CB E6        1 set 4,(hl)
 221+ 8700 C9           	ret
 222+ 8701 CB EE        2 set 5,(hl)
 223+ 8703 C9           	ret
 224+ 8704 CB F6        3 set 6,(hl)
 225+ 8706 C9           	ret
 226+ 8707 CB FE        4 set 7,(hl)
 227+ 8709 C9           	ret
 228+ 870A
 229+ 870A              ; ---------------------------------------------------------------------
 230+ 870A              ;
 231+ 870A              ;	23/01/24
 232+ 870A              ;
 233+ 870A              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 234+ 870A              ;
 235+ 870A              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 236+ 870A              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 237+ 870A              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 238+ 870A              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 239+ 870A
 240+ 870A              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 241+ 870A
 242+ 870A 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 243+ 870B 3D           	dec a
 244+ 870C 20 06        	jr nz,1F
 245+ 870E
 246+ 870E              ; --- Tipo_1
 247+ 870E
 248+ 870E 21 58 88     	ld hl,Ctrl_4
 249+ 8711 CB C6        	set 0,(hl)
 250+ 8713 C9           	ret
 251+ 8714
 252+ 8714 3D           1 dec a
 253+ 8715 20 06        	jr nz,2F
 254+ 8717
 255+ 8717              ; --- Tipo_2
 256+ 8717
 257+ 8717 21 58 88     	ld hl,Ctrl_4
 258+ 871A CB CE        	set 1,(hl)
 259+ 871C C9           	ret
 260+ 871D
 261+ 871D 3D           2 dec a
 262+ 871E 20 06        	jr nz,3F
 263+ 8720
 264+ 8720              ; --- Tipo_3
 265+ 8720
 266+ 8720 21 58 88     	ld hl,Ctrl_4
 267+ 8723 CB D6        	set 2,(hl)
 268+ 8725 C9           	ret
 269+ 8726
 270+ 8726              ; --- Tipo_3
 271+ 8726
 272+ 8726 21 58 88     3 ld hl,Ctrl_4
 273+ 8729 CB D6        	set 2,(hl)
 274+ 872B C9           	ret
 275+ 872C
 276+ 872C              ; ---------------------------------------------------------------------
 277+ 872C              ;
 278+ 872C              ;	22/01/24
 279+ 872C
 280+ 872C 21 58 88     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 281+ 872F CB 46        	bit 0,(hl)
 282+ 8731 20 0E        	jr nz,1F
 283+ 8733
 284+ 8733 CB 4E        	bit 1,(hl)
 285+ 8735 20 10        	jr nz,2F
 286+ 8737
 287+ 8737 CB 56        	bit 2,(hl)
 288+ 8739 20 12        	jr nz,3F
 289+ 873B
 290+ 873B CB 5E        	bit 3,(hl)
 291+ 873D 20 14        	jr nz,4F
 292+ 873F 18 19        	jr 6F
 293+ 8741
 294+ 8741              ; Entidad_de_Tipo_1.
 295+ 8741
 296+ 8741 CB 66        1 bit 4,(hl)
 297+ 8743 28 15        	jr z,6F
 298+ 8745 18 10        	jr 5F
 299+ 8747
 300+ 8747              ; Entidad_de_Tipo_2.
 301+ 8747
 302+ 8747 CB 6E        2 bit 5,(hl)
 303+ 8749 28 0F        	jr z,6F
 304+ 874B 18 0A        	jr 5F
 305+ 874D
 306+ 874D              ; Entidad_de_Tipo_3.
 307+ 874D
 308+ 874D CB 76        3 bit 6,(hl)
 309+ 874F 28 09        	jr z,6F
 310+ 8751 18 04        	jr 5F
 311+ 8753
 312+ 8753              ; Entidad_de_Tipo_4.
 313+ 8753
 314+ 8753 CB 7E        4 bit 7,(hl)
 315+ 8755 28 03        	jr z,6F
 316+ 8757
 317+ 8757              ; Esta entidad TIENE MOV_MASTICADOS.
 318+ 8757
 319+ 8757 AF           5 xor a
 320+ 8758 3C           	inc a
 321+ 8759 C9           	ret
 322+ 875A
 323+ 875A              ; Esta entidad NO TIENE MOV_MASTICADOS.
 324+ 875A
 325+ 875A AF           6 xor a
 326+ 875B C9           	ret
 327+ 875C
 328+ 875C              ;	------------------------------------------------------------------------------------
 329+ 875C              ;
 330+ 875C              ;	12/01/24
 331+ 875C              ;
 332+ 875C              ;	INPUTS:	A contiene el (Tipo) de entidad.
 333+ 875C              ;
 334+ 875C              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 335+ 875C              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 336+ 875C
 337+ 875C CB 27        Calcula_salto_en_BC sla a
 338+ 875E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 339+ 8760 4F           	ld c,a
 340+ 8761 06 00        	ld b,0
 341+ 8763 C9           	ret
 342+ 8764
 343+ 8764              ; ------------------------------------------------------------------
 344+ 8764              ;
 345+ 8764              ;	19/1/24
 346+ 8764              ;
 347+ 8764              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 348+ 8764              ;	Actualiza (Datos_de_entidad) con esa dirección.
 349+ 8764
 350+ 8764 A7           Situa_en_datos_de_definicion and a
 351+ 8765 ED 4A        	adc hl,bc
 352+ 8767 CD C1 8B     	call Extrae_address
 353+ 876A 22 47 88         ld (Datos_de_entidad),hl
 354+ 876D C9           	ret
 355+ 876E
 356+ 876E              ; ------------------------------------------------------------------
 357+ 876E
 358+ 876E              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 359+ 876E              ; 	inc de
 360+ 876E              ; 	inc de
 361+ 876E              ; 	ex de,hl
 362+ 876E              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 363+ 876E              ; 	ret
 364+ 876E
 365+ 876E              ; ----------------------------------------------------------------------------------------------------------
 366+ 876E              ;
 367+ 876E              ;	19/1/24
 368+ 876E              ;
 369+ 876E              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 370+ 876E              ;	_ de entidad.
 371+ 876E              ;
 372+ 876E              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 373+ 876E              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 374+ 876E              ;
 375+ 876E              ;	MODIFICA: HL,DE y BC
 376+ 876E
 377+ 876E
 378+ 876E              Definicion_de_entidad_a_bandeja_DRAW
 379+ 876E
 380+ 876E 11 F6 87     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW
 381+ 8771
 382+ 8771 01 03 00     	ld bc,3
 383+ 8774 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 384+ 8776              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 385+ 8776 01 07 00     	ld bc,7
 386+ 8779 CD CF 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 387+ 877C
 388+ 877C 01 05 00     	ld bc,5
 389+ 877F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 390+ 8781              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 391+ 8781 01 04 00     	ld bc,4
 392+ 8784 CD CF 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 393+ 8787
 394+ 8787 01 03 00     	ld bc,3
 395+ 878A ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 396+ 878C              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 397+ 878C
 398+ 878C 01 09 00     	ld bc,9
 399+ 878F CD CF 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 400+ 8792
 401+ 8792 01 02 00     	ld bc,2
 402+ 8795 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 403+ 8797
 404+ 8797 01 08 00     	ld bc,8
 405+ 879A CD CF 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 406+ 879D
 407+ 879D 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 408+ 879F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 409+ 87A0
 410+ 87A0 C9           	ret
 411+ 87A1
 412+ 87A1              ; ----------------------------------------------------------------------------------------------------------
 413+ 87A1              ;
 414+ 87A1              ;	22/01/24
 415+ 87A1              ;
 416+ 87A1              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 417+ 87A1              ;
 418+ 87A1              ;	Las cajas contienen entidades iniciadas:
 419+ 87A1              ;
 420+ 87A1              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 421+ 87A1              ;
 422+ 87A1              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 423+ 87A1              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 424+ 87A1              ;
 425+ 87A1              ;	MODIFICA: HL,DE y BC
 426+ 87A1
 427+ 87A1 21 FD 87     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW+7		; HL situado en (Coordenada_X) de la bandeja DRAW.
 428+ 87A4 ED 5B 3B 88  	ld de,(Puntero_store_caja) 								; DE situado en el 1er .db de la correspondiente caja de entidades.
 429+ 87A8 01 02 00     	ld bc,2
 430+ 87AB ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 431+ 87AD              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 432+ 87AD 23           	inc hl
 433+ 87AE 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 434+ 87AF 12           	ld (de),a
 435+ 87B0 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 436+ 87B1
 437+ 87B1 01 0C 00     	ld bc,12
 438+ 87B4 CD D5 87     	call Situa_HL
 439+ 87B7 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 440+ 87B8 12           	ld (de),a
 441+ 87B9 13           	inc de 													; (Impacto), volcado a la caja.
 442+ 87BA              ;															; DE situado ahora en (Puntero_de_impresion).
 443+ 87BA 01 07 00     	ld bc,7
 444+ 87BD CD D5 87     	call Situa_HL
 445+ 87C0 01 07 00     	ld bc,7
 446+ 87C3 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 447+ 87C5              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 448+ 87C5              ;															; HL apunta ahora a (Columnas).
 449+ 87C5 01 04 00     	ld bc,4
 450+ 87C8 CD D5 87     	call Situa_HL
 451+ 87CB 7E           	ld a,(hl)
 452+ 87CC 12           	ld (de),a 												; Volcamos (Ctrl_2).
 453+ 87CD 13           	inc de
 454+ 87CE
 455+ 87CE C9           	ret
 456+ 87CF
 457+ 87CF              ; -------------------------------------------------------------
 458+ 87CF
 459+ 87CF EB           Situa_DE ex de,hl
 460+ 87D0 A7           	and a
 461+ 87D1 ED 4A        	adc hl,bc
 462+ 87D3 EB           	ex de,hl
 463+ 87D4 C9           	ret
 464+ 87D5
 465+ 87D5 A7           Situa_HL and a
 466+ 87D6 ED 4A        	adc hl,bc
 467+ 87D8 C9           	ret
 468+ 87D9
 469+ 87D9              ;---------------------------------------------------------------------------------------------------------------
 470+ 87D9              ;
 471+ 87D9              ;	5/1/24
 472+ 87D9              ;
 473+ 87D9              ;	INICIALIZA (Numero_parcial_de_entidades).
 474+ 87D9              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 475+ 87D9              ;
 476+ 87D9              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 477+ 87D9              ;
 478+ 87D9              ;	(Numero_parcial_de_entidades)="7".
 479+ 87D9              ;
 480+ 87D9              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 481+ 87D9              ;
 482+ 87D9              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 483+ 87D9              ;
 484+ 87D9              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 485+ 87D9              ;	MODIFICA: A y B.
 486+ 87D9              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 487+ 87D9
 488+ 87D9              Inicializa_Numero_parcial_de_entidades
 489+ 87D9
 490+ 87D9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 491+ 87D9
 492+ 87D9 3A 41 88     	ld a,(Numero_de_entidades)
 493+ 87DC A7           	and a
 494+ 87DD
 495+ 87DD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 496+ 87DD              ;	jr z,$
 497+ 87DD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 498+ 87DD
 499+ 87DD 20 03        	jr nz,3F
 500+ 87DF
 501+ 87DF              ; ---------- ---------- ----------
 502+ 87DF
 503+ 87DF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 504+ 87DF              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 505+ 87DF
 506+ 87DF CD 4B 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 507+ 87E2
 508+ 87E2              ; ---------- ---------- ----------
 509+ 87E2
 510+ 87E2 3A 41 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 511+ 87E5 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 512+ 87E7 38 08        	jr c,1F
 513+ 87E9
 514+ 87E9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 515+ 87E9              ; Actualizamos variables.
 516+ 87E9
 517+ 87E9 3E 07        	ld a,7
 518+ 87EB 32 42 88     	ld (Numero_parcial_de_entidades),a
 519+ 87EE 47           	ld b,a
 520+ 87EF 18 04        	jr 2F
 521+ 87F1
 522+ 87F1              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 523+ 87F1              ; (Numero_de_entidades)="0".
 524+ 87F1
 525+ 87F1 32 42 88     1 ld (Numero_parcial_de_entidades),a
 526+ 87F4 47           	ld b,a
 527+ 87F5 C9           2 ret
# file closed: Niveles.asm
 106  87F6
 107  87F6              ; ******************************************************************************************************************************************************************************************
 108  87F6              ; Constantes.
 109  87F6              ; ******************************************************************************************************************************************************************************************
 110  87F6              ;
 111  87F6              ; 25/12/23
 112  87F6
 113  87F6              ;
 114  87F6              ; Constantes.
 115  87F6              ;
 116  87F6
 117  87F6              Sprite_vacio equ $f000
 118  87F6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  87F6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  87F6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  87F6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  87F6
 123  87F6              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  87F6              ;														;
 125  87F6              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  87F6
 127  87F6              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  87F6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  87F6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  87F6              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  87F6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  87F6
 133  87F6              ;														; 55 Bytes.
 134  87F6              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  87F6              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  87F6
 137  87F6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  87F6
 139  87F6              ; ******************************************************************************************************************************************************************************************
 140  87F6              ; Variables.
 141  87F6              ; ******************************************************************************************************************************************************************************************
 142  87F6              ;
 143  87F6              ; 18/01/24
 144  87F6              ;
 145  87F6              ; Variables de DRAW. (Motor principal).	42 Bytes.
 146  87F6              ;
 147  87F6
 148  87F6              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 149  87F6
 150  87F6 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  87F7              ;															- Patrón de movimiento.
 152  87F7              ;															- Aspecto
 153  87F7 00           Filas db 0												; Filas. [DRAW]
 154  87F8 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  87F9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  87FB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  87FD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  87FE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  87FF
 160  87FF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  87FF
 162  87FF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  8800              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  8800              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  8800 00           Attr db 0												; Atributos de la entidad:
 166  8801
 167  8801              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  8801              ;
 169  8801              ;	COLORES: 0 ..... NEGRO
 170  8801              ;    		 1 ..... AZUL
 171  8801              ; 			 2 ..... ROJO
 172  8801              ;			 3 ..... MAGENTA
 173  8801              ; 			 4 ..... VERDE
 174  8801              ; 			 5 ..... CIAN
 175  8801              ;			 6 ..... AMARILLO
 176  8801              ; 			 7 ..... BLANCO
 177  8801
 178  8801 00 00        Indice_Sprite_der defw 0
 179  8803 00 00        Indice_Sprite_izq defw 0
 180  8805 00 00        Puntero_DESPLZ_der defw 0
 181  8807 00 00        Puntero_DESPLZ_izq defw 0
 182  8809
 183  8809 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  880B 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  880C
 186  880C              ; Variables de objeto. (Características).
 187  880C
 188  880C 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 189  880D              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 190  880D              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 191  880D 00 00 00...  Variables_de_borrado ds 6
 192  8813
 193  8813 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 194  8815              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 195  8815
 196  8815 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 197  8817
 198  8817              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 199  8817              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 200  8817
 201  8817 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 202  8819              ;														; _palabras que componen el "movimiento_masticado".
 203  8819
 204  8819              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 205  8819
 206  8819 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 207  881A              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 208  881A              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 209  881A              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 210  881A              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 211  881A              ;
 212  881A              ; 														DESCRIPCIÖN:
 213  881A              ;
 214  881A              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 215  881A              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 216  881A              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 217  881A              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 218  881A              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 219  881A              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 220  881A              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 221  881A              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 222  881A              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 223  881A              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 224  881A              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 225  881A              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 226  881A              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 227  881A              ;
 228  881A              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 229  881A              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 230  881A              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 231  881A
 232  881A              ; Variables de funcionamiento. [DRAW].
 233  881A
 234  881A 00           Columnas db 0
 235  881B 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 236  881D              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 237  881D 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  881E
 239  881E              ; variables de control general.
 240  881E
 241  881E 00           Ctrl_2 db 0
 242  881F              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 243  881F              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 244  881F              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 245  881F              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 246  881F              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 247  881F              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 248  881F              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 249  881F              ;
 250  881F              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 251  881F              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 252  881F              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 253  881F              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 254  881F              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 255  881F              ;														BIT 4, ???
 256  881F              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 257  881F
 258  881F 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 259  8820
 260  8820              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 261  8820
 262  8820              ;					         		---------;      ;---------
 263  8820
 264  8820              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 265  8820
 266  8820              Perfiles_de_velocidad
 267  8820
 268  8820 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 269  8821 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 270  8822 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 271  8823 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 272  8824
 273  8824              ; Contadores de 16 bits.
 274  8824
 275  8824 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 276  8826 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 277  8828 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 278  882A 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 279  882C
 280  882C              ; Movimiento. ------------------------------------------------------------------------------------------------------
 281  882C
 282  882C 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 283  882E 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 284  8830 00 00        Puntero_indice_mov_bucle defw 0							;
 285  8832              ;
 286  8832              ;
 287  8832 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 288  8833              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 289  8833              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 290  8833 00           Incrementa_puntero_backup db 0
 291  8834 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 292  8835              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 293  8835 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 294  8836 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 295  8837 00           Cola_de_desplazamiento db 0								; Este byte indica:
 296  8838              ;
 297  8838              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 298  8838              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 299  8838              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 300  8838              ;
 301  8838              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 302  8838              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 303  8838              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 304  8838              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 305  8838              ;
 306  8838              ;														;	"$ff" ..... Bucle infinito de repetición.
 307  8838              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 308  8838              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 309  8838              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  8838
 311  8838 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  8839
 313  8839              ;														DESCRIPCIÓN:
 314  8839              ;
 315  8839              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  8839              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  8839              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  8839              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  8839              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  8839              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  8839
 322  8839              ;														BIT 3, Recarga de nueva oleada.
 323  8839              ;														BIT 4, Recarga de nueva oleada.
 324  8839              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  8839              ;														BIT 6, **** Frame completo.
 326  8839              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  8839
 328  8839 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  883B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  883B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  883B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  883B
 333  883B              ; Gestión de ENTIDADES y CAJAS.
 334  883B
 335  883B 00 00        Puntero_store_caja defw 0
 336  883D 00 00        Puntero_restore_caja defw 0
 337  883F 00 00        Indice_restore_caja defw 0
 338  8841 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  8842 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  8843 00           Entidades_en_curso db 0									; ..... ..... .....
 341  8844 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  8845              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  8845              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  8845              ;														; _ (Numero_de_malotes)="0".
 345  8845 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  8847 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  8849              ;														; _ puntero (Indice_entidades).
 348  8849
 349  8849              ;---------------------------------------------------------------------------------------------------------------
 350  8849              ;
 351  8849              ;	11/01/24
 352  8849              ;
 353  8849              ;	Álbumes.
 354  8849
 355  8849 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  884B              ;														; _variable para almacenar lo posición del puntero_
 357  884B              ; 														; _de pila, SP.
 358  884B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  884D              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  884D 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  884F 00 70        Stack_snapshot defw Album_de_fotos
 362  8851 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  8853
 364  8853              ;End_Snapshot defw Album_de_fotos
 365  8853              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  8853 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  8855              ;														; _el snapshot de los registros del siguiente disparo.
 368  8855              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  8855 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  8857
 371  8857 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  8858              ;
 373  8858              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  8858              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 375  8858              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 376  8858
 377  8858 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 378  8859              ;
 379  8859              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 380  8859              ;
 381  8859              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 382  8859              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 383  8859              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 384  8859              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 385  8859              ;
 386  8859              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 387  8859              ;															_ masticados ya generados.
 388  8859              ;
 389  8859              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 390  8859              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 391  8859              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 392  8859              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 393  8859
 394  8859
 395  8859              ; Gestión de Disparos.
 396  8859
 397  8859 00           Numero_de_disparotes db 0
 398  885A 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 399  885C 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 400  885E 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 401  885F              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 402  885F              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 403  885F 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 404  8861              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 405  8861              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 406  8861              ;														; _produzca colisión.
 407  8861 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 408  8863              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 409  8863 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 410  8866              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 411  8866 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 412  8869              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 413  8869 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 414  886A
 415  886A              ;---------------------------------------------------------------------------------------------------------------
 416  886A
 417  886A              ; Relojes y temporizaciones.
 418  886A
 419  886A 00           Contador_de_frames db 0
 420  886B 00           Contador_de_frames_2 db 0
 421  886C
 422  886C 04           Clock_explosion db 4
 423  886D 14           Clock_Entidades_en_curso db 20
 424  886E 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 425  886F              ;														; Repite la oleada de entidades.
 426  886F 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 427  8870 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 428  8871 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 429  8872
 430  8872 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 431  8873 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 432  8874 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 433  8875
 434  8875              ;---------------------------------------------------------------------------------------------------------------
 435  8875
 436  8875              ; Gestión de NIVELES.
 437  8875
 438  8875 00           Nivel db 0												; Nivel actual del juego.
 439  8876 00 00        Puntero_indice_NIVELES defw 0
 440  8878 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 441  887A              ; 														; _ que definen el NIVEL.
 442  887A              ; Y todo comienza aquí .....
 443  887A              ;
 444  887A              ; 	INICIO  *************************************************************************************************************************************************************************
 445  887A              ;
 446  887A              ;	5/1/24
 447  887A
 448  887A              START
 449  887A
 450  887A 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 451  887D 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 452  887F ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 453  8881 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 454  8883 F3           	DI
 455  8884
 456  8884 3E 07        	ld a,%00000111
 457  8886 CD 02 98     	call Cls
 458  8889 CD 4D 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 459  888C
 460  888C              ; INICIALIZACIÓN.
 461  888C
 462  888C              ;	Inicializa 1er Nivel.
 463  888C
 464  888C 21 2A 86     	ld hl,Indice_de_niveles
 465  888F 22 76 88     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 466  8892 CD 4B 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 467  8895              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 468  8895              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 469  8895              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 470  8895
 471  8895 CD 7A 86     4 call Prepara_cajas_de_entidades
 472  8898
 473  8898              ;	call Inicia_punteros_de_cajas 						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 474  8898              ;														 ; Situa (Puntero_restore-caja) en el 1er .db de la 2ª caja del índice de entidades.
 475  8898 CD FD 8B     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 476  889B
 477  889B 21 42 88     	ld hl,Numero_parcial_de_entidades
 478  889E 46           	ld b,(hl)
 479  889F              ;	inc b
 480  889F              ;	dec b
 481  889F              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 482  889F
 483  889F              ;	INICIA ENTIDADES !!!!!
 484  889F
 485  889F              ;1 push bc  												; Guardo el contador de entidades.
 486  889F              ;	call Inicia_entidad
 487  889F
 488  889F              ;	pop bc
 489  889F              ;	djnz 1B  											; Decremento el contador de entidades.
 490  889F
 491  889F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 492  889F              ; (Esto se dá cuando se inicia una nueva oleada).
 493  889F
 494  889F              ;	ld a,(Ctrl_1)
 495  889F              ;	bit 3,a
 496  889F              ;	jr nz,5F											; Loop
 497  889F
 498  889F              ; 	INICIA AMADEUS !!!!!
 499  889F
 500  889F              ;3 call Restore_Amadeus
 501  889F              ;	call Inicia_Puntero_objeto
 502  889F              ;	call Draw
 503  889F
 504  889F              ;	call Guarda_movimiento_masticado	;! Provisional
 505  889F
 506  889F              ;	call Guarda_foto_registros
 507  889F              ;	call Guarda_datos_de_borrado_Amadeus
 508  889F
 509  889F              ;	ld de,Amadeus_db
 510  889F              ;	call Store_Amadeus
 511  889F
 512  889F              ; 	INICIA DISPAROS !!!!!
 513  889F
 514  889F              ;	call Inicia_Puntero_Disparo_Entidades
 515  889F              ;	call Inicia_Puntero_Disparo_Amadeus
 516  889F
 517  889F              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 518  889F
 519  889F              5
 520  889F              ;	call Inicia_punteros_de_cajas
 521  889F CD FD 8B     	call Restore_entidad
 522  88A2
 523  88A2 3A 38 88     	ld a,(Ctrl_1)
 524  88A5 CB 5F        	bit 3,a
 525  88A7 28 07        	jr z,6F
 526  88A9
 527  88A9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 528  88A9
 529  88A9 21 38 88     	ld hl,Ctrl_1
 530  88AC CB 9E        	res 3,(hl)
 531  88AE 18 07        	jr Main
 532  88B0
 533  88B0              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 534  88B0
 535  88B0 21 57 88     6 ld hl,Ctrl_3
 536  88B3 CB C6        	set 0,(hl)											; Frame completo.
 537  88B5 FB           	ei
 538  88B6 76           	halt
 539  88B7
 540  88B7              ; ------------------------------------
 541  88B7
 542  88B7              Main
 543  88B7              ;
 544  88B7              ;	11/12/23
 545  88B7
 546  88B7              ; Aparece nueva entidad ???
 547  88B7
 548  88B7              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 549  88B7              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 550  88B7              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 551  88B7              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 552  88B7              ;														; _un 2º bloque.
 553  88B7
 554  88B7 3E 01        	ld a,1
 555  88B9 D3 FE        	out ($fe),a
 556  88BB
 557  88BB 3A 6D 88     	ld a,(Clock_Entidades_en_curso)
 558  88BE 47           	ld b,a
 559  88BF 3A 6A 88     	ld a,(Contador_de_frames)
 560  88C2 B8           	cp b
 561  88C3 20 18        	jr nz,13F
 562  88C5
 563  88C5              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 564  88C5              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 565  88C5
 566  88C5 3A 42 88     21 ld a,(Numero_parcial_de_entidades)
 567  88C8 47           	ld b,a
 568  88C9 3A 43 88     	ld a,(Entidades_en_curso)
 569  88CC B8           	cp b
 570  88CD 28 0E        	jr z,13F
 571  88CF 30 0C        	jr nc,13F
 572  88D1
 573  88D1 3C           	inc a
 574  88D2 32 43 88     	ld (Entidades_en_curso),a
 575  88D5
 576  88D5              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 577  88D5
 578  88D5 3A 6D 88     	ld a,(Clock_Entidades_en_curso)
 579  88D8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 580  88D8              ;! _ IMPREDECIBLE !!!!
 581  88D8 C6 64        	add 100
 582  88DA 32 6D 88     	ld (Clock_Entidades_en_curso),a
 583  88DD
 584  88DD              ; -------------------------------------------------------------------------------------------------------------
 585  88DD
 586  88DD              ; Habilita disparos.
 587  88DD
 588  88DD 21 6F 88     13 ld hl,Disparo_Amadeus
 589  88E0 11 71 88     	ld de,CLOCK_repone_disparo_Amadeus
 590  88E3 CD D4 9B     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 591  88E6
 592  88E6 21 72 88     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 593  88E9 11 74 88     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 594  88EC CD D4 9B     	call Habilita_disparos
 595  88EF
 596  88EF              ; COLISIONES.
 597  88EF
 598  88EF CD EC 90     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 599  88F2
 600  88F2              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 601  88F2              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 602  88F2              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 603  88F2
 604  88F2 AF           	xor a
 605  88F3 32 5E 88     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 606  88F6
 607  88F6 CD 29 8B     	call Inicia_punteros_de_cajas
 608  88F9 CD FD 8B     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 609  88FC              ; 														; _ en DRAW.
 610  88FC 3A F7 87     	ld a,(Filas)
 611  88FF A7           	and a
 612  8900 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 613  8902 CD 0F 8C     	call Incrementa_punteros_de_cajas
 614  8905 18 F2        	jr 12B
 615  8907
 616  8907              ; ---------------------------------------------------------------------------------------
 617  8907
 618  8907 3A 42 88     10 ld a,(Numero_parcial_de_entidades)
 619  890A 47               ld b,a
 620  890B A7           	and a
 621  890C 20 14        	jr nz,11F
 622  890E
 623  890E 21 38 88     	ld hl,Ctrl_1
 624  8911 CB 66        	bit 4,(hl)
 625  8913 C2 BB 89     	jp nz,16F
 626  8916
 627  8916              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 628  8916
 629  8916 21 38 88     	ld hl,Ctrl_1
 630  8919 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 631  891B
 632  891B 3A 6A 88     	ld a,(Contador_de_frames)
 633  891E 3C           	inc a
 634  891F 32 6E 88     	ld (Activa_recarga_cajas),a
 635  8922
 636  8922              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 637  8922
 638  8922 3A 43 88     11 ld a,(Entidades_en_curso)
 639  8925 A7           	and a
 640  8926 CA BB 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 641  8929 47           	ld b,a												; No hay entidades que gestionar.
 642  892A
 643  892A              ; ( Código que ejecutamos con cada entidad: ).
 644  892A
 645  892A              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 646  892A
 647  892A C5           15 push bc 												; Nº de entidades en curso.
 648  892B
 649  892B              ; Existe "Entidad_guía" ???.
 650  892B              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 651  892B
 652  892B 3A 57 88     	ld a,(Ctrl_3)
 653  892E CB 4F        	bit 1,a
 654  8930 20 11        	jr nz,22F
 655  8932
 656  8932              ; Almacén de "Movimientos_masticados" lleno ???
 657  8932              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 658  8932              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 659  8932
 660  8932 3A 57 88     	ld a,(Ctrl_3)
 661  8935 CB 5F        	bit 3,a
 662  8937 20 0A        	jr nz,22F
 663  8939
 664  8939              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 665  8939
 666  8939 21 1E 88     	ld hl,Ctrl_2
 667  893C CB EE        	set 5,(hl)
 668  893E 21 57 88     	ld hl,Ctrl_3
 669  8941 CB CE        	set 1,(hl)
 670  8943
 671  8943              ; Impacto ???
 672  8943
 673  8943 3A 0C 88     22 ld a,(Impacto)
 674  8946 A7           	and a
 675  8947 28 31        	jr z,8F
 676  8949
 677  8949              ; Hay Impacto en esta entidad.
 678  8949
 679  8949 21 6C 88     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 680  894C 35           	dec (hl)
 681  894D C2 AE 89     	jp nz,17F
 682  8950
 683  8950              ;! Velocidad de la animación de la explosión.
 684  8950
 685  8950 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 686  8952              ;														; _,(velocidad de la explosión).
 687  8952              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 688  8952
 689  8952 CD C1 8C     	call Repone_datos_de_borrado
 690  8955 CD 67 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 691  8958
 692  8958              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 693  8958
 694  8958 3A 1E 88     	ld a,(Ctrl_2)
 695  895B CB 4F        	bit 1,a
 696  895D 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 697  895F
 698  895F              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 699  895F
 700  895F 3A FF 87     	ld a,(CTRL_DESPLZ)
 701  8962 A7           	and a
 702  8963 20 08        	jr nz,18F
 703  8965
 704  8965 21 84 84     	ld hl,Indice_Explosion_2x2-2
 705  8968 22 05 88     	ld (Puntero_DESPLZ_der),hl
 706  896B 18 06        	jr 19F
 707  896D
 708  896D 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 709  8970 22 05 88     	ld (Puntero_DESPLZ_der),hl
 710  8973
 711  8973 21 1E 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 712  8976 CB CE        	set 1,(hl)
 713  8978 18 22        	jr 7F
 714  897A
 715  897A              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 716  897A              ; _con las coordenadas de la entidad almacenada en DRAW.
 717  897A
 718  897A 3A 38 88     8 ld a,(Ctrl_1)
 719  897D CB 57        	bit 2,a
 720  897F 28 1B        	jr z,7F
 721  8981
 722  8981 2A 61 88     	ld hl,(Coordenadas_disparo_certero)
 723  8984 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 724  8985              ;														; E contiene la coordenada_X del disparo.
 725  8985 2A FD 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 726  8988              ;														; H FILA, (Coordenada_y de la entidad).
 727  8988 A7           	and a
 728  8989 ED 52        	sbc hl,de
 729  898B
 730  898B CD 05 91     	call Determina_resultado_comparativa
 731  898E
 732  898E 78           	ld a,b
 733  898F A7           	and a
 734  8990 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 735  8992
 736  8992              ; ----- ----- -----
 737  8992
 738  8992 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 739  8994 32 0C 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 740  8997
 741  8997 21 38 88     	ld hl,Ctrl_1
 742  899A CB 96        	res 2,(hl)
 743  899C
 744  899C CD 0C 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 745  899F
 746  899F 3A 19 88     	ld a,(Ctrl_0)
 747  89A2 CB 67        	bit 4,a
 748  89A4 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 749  89A6
 750  89A6              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 751  89A6              ; [[[
 752  89A6              ;	call Detecta_disparo_entidad
 753  89A6              ; ]]]
 754  89A6
 755  89A6 CD E4 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 756  89A9
 757  89A9 21 19 88     	ld hl,Ctrl_0
 758  89AC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 759  89AE
 760  89AE CD FC 8B     17 call Store_Restore_cajas
 761  89B1
 762  89B1 C1           	pop bc
 763  89B2
 764  89B2 05           	dec b
 765  89B3 C2 2A 89     	jp nz,15B
 766  89B6
 767  89B6              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 768  89B6              ; Hemos gestionado todas las unidades.
 769  89B6              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 770  89B6
 771  89B6 21 38 88     	ld hl,Ctrl_1
 772  89B9 CB 96        	res 2,(hl)
 773  89BB
 774  89BB 21 57 88     16 ld hl,Ctrl_3
 775  89BE CB C6        	set 0,(hl)											; Frame completo.
 776  89C0
 777  89C0 AF           	xor a
 778  89C1 D3 FE        	out ($fe),a
 779  89C3
 780  89C3 FB           	ei
 781  89C4 76           	halt
 782  89C5
 783  89C5              ; ----------------------------------------
 784  89C5
 785  89C5 3A 38 88     	ld a,(Ctrl_1) 										; Existe Loop?
 786  89C8 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 787  89CA CA B7 88     	jp z,Main
 788  89CD
 789  89CD              ; RECARGA DE NUEVA OLEADA.
 790  89CD
 791  89CD 3A 6A 88     	ld a,(Contador_de_frames)
 792  89D0 47           	ld b,a
 793  89D1 3A 6E 88     	ld a,(Activa_recarga_cajas)
 794  89D4 B8           	cp b
 795  89D5 28 08        	jr z,20F
 796  89D7
 797  89D7 21 38 88     	ld hl,Ctrl_1
 798  89DA CB E6        	set 4,(hl)
 799  89DC C3 B7 88     	jp Main
 800  89DF
 801  89DF 21 38 88     20 ld hl,Ctrl_1
 802  89E2 CB A6        	res 4,(hl)
 803  89E4
 804  89E4 3A 6A 88     	ld a,(Contador_de_frames)
 805  89E7
 806  89E7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 807  89E7              ;! _ IMPREDECIBLE !!!!
 808  89E7
 809  89E7 C6 0A        	add 10
 810  89E9 32 6D 88     	ld (Clock_Entidades_en_curso),a
 811  89EC
 812  89EC C3 95 88     	jp 4B
 813  89EF
 814  89EF C9           	ret
 815  89F0
 816  89F0              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 817  89F0              ;
 818  89F0              ;	16/11/23
 819  89F0
 820  89F0              Gestiona_Amadeus
 821  89F0
 822  89F0              ;! Activa/desactiva impacto con Amadeus.
 823  89F0
 824  89F0              ;	ld a,(Impacto)
 825  89F0              ;	and a
 826  89F0              ;	jr nz,2F
 827  89F0
 828  89F0 CD 69 8A     	call Mov_Amadeus
 829  89F3
 830  89F3 3A 19 88     2 ld a,(Ctrl_0)
 831  89F6 CB 67        	bit 4,a
 832  89F8 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 833  89FA
 834  89FA CD E4 8A     	call Guarda_foto_entidad_a_pintar
 835  89FD CD A1 8C     	call Guarda_datos_de_borrado_Amadeus
 836  8A00
 837  8A00 21 19 88     1 ld hl,Ctrl_0
 838  8A03 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 839  8A05
 840  8A05 CD 90 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 841  8A08
 842  8A08              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 843  8A08
 844  8A08 CD A9 8B     	call Calcula_numero_de_disparotes
 845  8A0B
 846  8A0B C9           	ret
 847  8A0C
 848  8A0C              ; --------------------------------------------------------------------------------------------------------------
 849  8A0C              ;
 850  8A0C              ;	15/12/23
 851  8A0C
 852  8A0C              Mov_obj
 853  8A0C
 854  8A0C 3A 1E 88     	ld a,(Ctrl_2)
 855  8A0F CB 4F        	bit 1,a
 856  8A11 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 857  8A13
 858  8A13              ; Explosión:
 859  8A13
 860  8A13 3A 1F 88     	ld a,(Frames_explosion)
 861  8A16 A7           	and a
 862  8A17 20 1D        	jr nz,4F
 863  8A19
 864  8A19              ;!  Una alimaña menos!!!!!!!!!1
 865  8A19
 866  8A19              ; Se trataba de una Entidad_guía ???
 867  8A19
 868  8A19 3A 1E 88     	ld a,(Ctrl_2)
 869  8A1C CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 870  8A1E 28 05        	jr z,5F
 871  8A20
 872  8A20 21 57 88     	ld hl,Ctrl_3
 873  8A23 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 874  8A25
 875  8A25              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 876  8A25              ;!! _generado puede ser distinto, (aletoriedad).
 877  8A25
 878  8A25 CD 3F 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 879  8A28 21 42 88     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 880  8A2B 35           	dec (hl)
 881  8A2C 21 43 88     	ld hl,Entidades_en_curso
 882  8A2F 35           	dec (hl)
 883  8A30 21 41 88     	ld hl,Numero_de_entidades
 884  8A33 35           	dec (hl)
 885  8A34 18 32        	jr 3F
 886  8A36
 887  8A36              ; -----
 888  8A36
 889  8A36              ;	`Movemos´ la explosión.
 890  8A36
 891  8A36 2A 05 88     4 ld hl,(Puntero_DESPLZ_der)
 892  8A39 23           	inc hl
 893  8A3A 23           	inc hl
 894  8A3B 22 05 88     	ld (Puntero_DESPLZ_der),hl
 895  8A3E CD C1 8B     	call Extrae_address
 896  8A41 22 FB 87     	ld (Puntero_objeto),hl
 897  8A44
 898  8A44 21 1F 88     	ld hl,Frames_explosion
 899  8A47 35           	dec (hl)
 900  8A48
 901  8A48 21 19 88     	ld hl,Ctrl_0
 902  8A4B CB E6        	set 4,(hl)
 903  8A4D
 904  8A4D 18 19        	jr 3F
 905  8A4F
 906  8A4F              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 907  8A4F
 908  8A4F AF           2 xor a
 909  8A50 32 19 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 910  8A53
 911  8A53              ; Movemos Entidades malignas.
 912  8A53              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 913  8A53
 914  8A53              ;	ld a,(Ctrl_2)
 915  8A53              ;	bit 5,a
 916  8A53              ;	jr nz,8F
 917  8A53
 918  8A53              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 919  8A53              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 920  8A53              ;	jr 7F
 921  8A53
 922  8A53              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 923  8A53
 924  8A53              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 925  8A53              ;	bit 4,a
 926  8A53              ;	ret z
 927  8A53
 928  8A53              ; Ha habido desplazamiento de la entidad maligna.
 929  8A53              ; Ha llegado a zona de AMADEUS ???
 930  8A53
 931  8A53 3A FE 87     7 ld a,(Coordenada_y)
 932  8A56 FE 14        	cp $14
 933  8A58 38 08        	jr c,1F
 934  8A5A
 935  8A5A              ; ---------
 936  8A5A
 937  8A5A              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 938  8A5A              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 939  8A5A
 940  8A5A F3           	di
 941  8A5B CD B5 8E     	call Genera_coordenadas_X
 942  8A5E CD F1 8E     	call Compara_coordenadas_X
 943  8A61 FB           	ei
 944  8A62
 945  8A62              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 946  8A62
 947  8A62              ; ---------
 948  8A62
 949  8A62              1
 950  8A62
 951  8A62              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 952  8A62 CD C1 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 953  8A65 CD 67 8B     	call Limpia_Variables_de_borrado
 954  8A68
 955  8A68 C9           3 ret
 956  8A69
 957  8A69              ; --------------------------------------------------------------------------------------------------------------
 958  8A69              ;
 959  8A69              ;	29/1/23
 960  8A69
 961  8A69              Mov_Amadeus
 962  8A69
 963  8A69              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 964  8A69
 965  8A69 CD BA 98     	call Mov_right
 966  8A6C
 967  8A6C 3A 19 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 968  8A6F CB 67        	bit 4,a
 969  8A71 C8           	ret z
 970  8A72
 971  8A72              ; ---------
 972  8A72
 973  8A72              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 974  8A72 CD B1 8C     	call Repone_datos_de_borrado_Amadeus
 975  8A75 CD 67 8B     	call Limpia_Variables_de_borrado
 976  8A78
 977  8A78 C9           	ret
 978  8A79
 979  8A79              ; -----------------------------------------------------------------------------------
 980  8A79              ;
 981  8A79              ;	20/01/24
 982  8A79              ;
 983  8A79              ;
 984  8A79
 985  8A79              Construye_movimientos_masticados_entidad
 986  8A79
 987  8A79 2A 15 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 988  8A7C E5           	push hl
 989  8A7D
 990  8A7D CD C1 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 991  8A80              ;															; _ el (Contador_de_mov_masticados).
 992  8A80 CD C7 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 993  8A83              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 994  8A83 CD 16 98     	call Recompone_posicion_inicio
 995  8A86
 996  8A86 CD EC 91     1 call Draw
 997  8A89 CD A5 8A     	call Guarda_movimiento_masticado
 998  8A8C CD 7F 9D     	call Movimiento
 999  8A8F
1000  8A8F 3A 57 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1001  8A92 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1002  8A94 28 F0        	jr z,1B
1003  8A96
1004  8A96              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1005  8A96              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1006  8A96
1007  8A96 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1008  8A97 22 15 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1009  8A9A
1010  8A9A
1011  8A9A              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1012  8A9A
1013  8A9A CD F0 9E     	call Situa_en_Contador_general_de_mov_masticados
1014  8A9D
1015  8A9D              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1016  8A9D              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1017  8A9D
1018  8A9D ED 4B 17 88  	ld bc,(Contador_de_mov_masticados)
1019  8AA1 71           	ld (hl),c
1020  8AA2 23           	inc hl
1021  8AA3 70           	ld (hl),b
1022  8AA4
1023  8AA4 C9           	ret
1024  8AA5
1025  8AA5              ; -----------------------------------------------------------------------------------
1026  8AA5              ;
1027  8AA5              ;	28/12/23
1028  8AA5              ;
1029  8AA5              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1030  8AA5              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1031  8AA5
1032  8AA5              Guarda_movimiento_masticado
1033  8AA5
1034  8AA5 ED 73 49 88  	ld (Stack),sp
1035  8AA9 ED 7B 15 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1036  8AAD
1037  8AAD E5           	push hl
1038  8AAE DD E5            push ix
1039  8AB0 FD E5            push iy
1040  8AB2
1041  8AB2 ED 7B 49 88      ld sp,(Stack)
1042  8AB6
1043  8AB6              ;    push hl
1044  8AB6
1045  8AB6 2A 17 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1046  8AB9 23           	inc hl
1047  8ABA 22 17 88     	ld (Contador_de_mov_masticados),hl
1048  8ABD
1049  8ABD              ;	pop hl
1050  8ABD
1051  8ABD CD C1 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1052  8AC0              ;															; _ el (Contador_de_mov_masticados).
1053  8AC0 C9               ret
1054  8AC1
1055  8AC1              ; --------------------------------------------------------------------------------------------------------------
1056  8AC1              ;
1057  8AC1              ;	12/1/24
1058  8AC1              ;
1059  8AC1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1060  8AC1
1061  8AC1              Actualiza_Puntero_de_almacen_de_mov_masticados
1062  8AC1
1063  8AC1              ;	push hl
1064  8AC1              ;	push bc
1065  8AC1
1066  8AC1 2A 15 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1067  8AC4 01 06 00     	ld bc,6
1068  8AC7 A7           	and a
1069  8AC8 ED 4A        	adc hl,bc
1070  8ACA 22 15 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1071  8ACD
1072  8ACD              ;	pop bc
1073  8ACD              ;	pop hl
1074  8ACD
1075  8ACD C9           	ret
1076  8ACE
1077  8ACE              ; --------------------------------------------------------------------------------------------------------------
1078  8ACE              ;
1079  8ACE              ;	15/01/24
1080  8ACE              ;
1081  8ACE              ;	Cargamos los registros_
1082  8ACE              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1083  8ACE              ;
1084  8ACE              ;	HL contiene la dirección de la rutina de impresión.
1085  8ACE              ;	IX contiene el puntero de impresión.
1086  8ACE              ;	IY contiene (Puntero_objeto).
1087  8ACE
1088  8ACE
1089  8ACE ED 73 49 88  Cargamos_registros_con_mov_masticado ld (Stack),sp
1090  8AD2 ED 7B 15 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1091  8AD6
1092  8AD6 FD E1        	pop iy
1093  8AD8 DD E1        	pop ix
1094  8ADA E1           	pop hl
1095  8ADB
1096  8ADB ED 73 15 88  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1097  8ADF
1098  8ADF ED 7B 49 88  	ld sp,(Stack)
1099  8AE3
1100  8AE3 C9           	ret
1101  8AE4
1102  8AE4              ; --------------------------------------------------------------------------------------------------------------
1103  8AE4              ;
1104  8AE4              ;	28/12/23
1105  8AE4              ;
1106  8AE4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1107  8AE4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1108  8AE4
1109  8AE4              Guarda_foto_entidad_a_pintar
1110  8AE4
1111  8AE4 3A 19 88     	ld a,(Ctrl_0)
1112  8AE7 CB 77        	bit 6,a
1113  8AE9 28 0E        	jr z,5F
1114  8AEB
1115  8AEB              ;	Guarda la foto de Amadeus.
1116  8AEB
1117  8AEB CD EC 91     	call Draw
1118  8AEE
1119  8AEE CD A5 8A     	call Guarda_movimiento_masticado	;! Provisional
1120  8AF1
1121  8AF1 CD 16 71     	call Guarda_foto_registros
1122  8AF4
1123  8AF4 F3           	di
1124  8AF5 18 FE        	jr $
1125  8AF7 FB           	ei
1126  8AF8
1127  8AF8 C9           	ret
1128  8AF9
1129  8AF9              ; ENTIDADES!
1130  8AF9              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1131  8AF9
1132  8AF9 3A 57 88     5 ld a,(Ctrl_3)
1133  8AFC CB 5F        	bit 3,a
1134  8AFE 28 01        	jr z,1F
1135  8B00
1136  8B00              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1137  8B00
1138  8B00              4
1139  8B00              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1140  8B00 C9           	ret
1141  8B01
1142  8B01              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1143  8B01
1144  8B01 3A 57 88     1 ld a,(Ctrl_3)
1145  8B04 CB 57        	bit 2,a
1146  8B06 20 10        	jr nz,6F
1147  8B08
1148  8B08              ; Entidad guía o fantasma ???
1149  8B08
1150  8B08 3A 1E 88     	ld a,(Ctrl_2)
1151  8B0B CB 6F        	bit 5,a
1152  8B0D 20 10        	jr nz,3F
1153  8B0F
1154  8B0F              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1155  8B0F
1156  8B0F 18 EF        	jr 4B
1157  8B11
1158  8B11              ; ENTIDAD_GUÍA:
1159  8B11              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1160  8B11              ; _guardando "movimientos_masticados".
1161  8B11
1162  8B11 3A 57 88     2 ld a,(Ctrl_3)
1163  8B14 CB 57        	bit 2,a
1164  8B16 28 07        	jr z,3F
1165  8B18
1166  8B18              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1167  8B18              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1168  8B18
1169  8B18 CB 97        6 res 2,a
1170  8B1A CB DF        	set 3,a
1171  8B1C 32 57 88     	ld (Ctrl_3),a
1172  8B1F
1173  8B1F
1174  8B1F              ;	Esto sólo lo ejecuta una entidad guía.
1175  8B1F
1176  8B1F CD EC 91     3 	call Draw
1177  8B22 CD A5 8A     	call Guarda_movimiento_masticado
1178  8B25 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1179  8B28
1180  8B28              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1181  8B28              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1182  8B28
1183  8B28              ;	call Convierte_guia_en_fantasma
1184  8B28 C9           	ret
1185  8B29
1186  8B29              ; --------------------------------------------------------------------------------------------------------------
1187  8B29              ;
1188  8B29              ;	19/9/23
1189  8B29
1190  8B29              ;Prepara_var_pintado
1191  8B29
1192  8B29              ;	ld hl,Filas
1193  8B29              ;	ld de,Variables_de_pintado
1194  8B29              ;	ld bc,8
1195  8B29              ;	ldir
1196  8B29              ;	ret
1197  8B29
1198  8B29              ; --------------------------------------------------------------------------------------------------------------
1199  8B29
1200  8B29              ;Repone_pintar
1201  8B29
1202  8B29              ;	ld hl,Variables_de_pintado
1203  8B29              ;	ld de,Filas
1204  8B29              ;	ld bc,8
1205  8B29              ;	ldir
1206  8B29              ;	ret
1207  8B29
1208  8B29              ; *************************************************************************************************************************************************************
1209  8B29              ;
1210  8B29              ; 8/1/23
1211  8B29              ;
1212  8B29              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1213  8B29              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1214  8B29              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1215  8B29
1216  8B29              ; Destruye HL y DE !!!!!
1217  8B29
1218  8B29              Inicia_punteros_de_cajas
1219  8B29
1220  8B29 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1221  8B2C CD C1 8B         call Extrae_address
1222  8B2F 22 3B 88         ld (Puntero_store_caja),hl
1223  8B32 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1224  8B35 22 3F 88     	ld (Indice_restore_caja),hl
1225  8B38 CD C1 8B     	call Extrae_address
1226  8B3B 22 3D 88     	ld (Puntero_restore_caja),hl
1227  8B3E C9               ret
1228  8B3F
1229  8B3F              ; *************************************************************************************************************************************************************
1230  8B3F              ;
1231  8B3F              ; 8/1/23
1232  8B3F              ;
1233  8B3F              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1234  8B3F
1235  8B3F 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1236  8B42 22 5A 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1237  8B45 C9           	ret
1238  8B46 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1239  8B49 22 5C 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1240  8B4C C9           	ret
1241  8B4D
1242  8B4D              ; -------------------------------------------------------------------------------------------------------------
1243  8B4D              ;
1244  8B4D              ; 21/9/23
1245  8B4D              ;
1246  8B4D
1247  8B4D              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1248  8B4D
1249  8B4D              Limpia_album_Amadeus
1250  8B4D
1251  8B4D 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1252  8B50 7E           	ld a,(hl)
1253  8B51 A7           	and a
1254  8B52 C8           	ret z
1255  8B53
1256  8B53 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1257  8B56 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1258  8B59 01 0B 00     	ld bc,11
1259  8B5C AF           	xor a
1260  8B5D 77           	ld (hl),a
1261  8B5E ED B0        	ldir
1262  8B60
1263  8B60 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1264  8B63 22 55 88     	ld (End_Snapshot_Amadeus),hl
1265  8B66
1266  8B66 C9           	ret
1267  8B67
1268  8B67 21 0D 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1269  8B6A 11 0E 88     	ld de,Variables_de_borrado+1
1270  8B6D 01 05 00     	ld bc,5
1271  8B70 AF           	xor a
1272  8B71 77           	ld (hl),a
1273  8B72 ED B0        	ldir
1274  8B74 C9           	ret
1275  8B75
1276  8B75              ; -------------------------------------------------------------------------------------------------------------
1277  8B75              ;
1278  8B75              ; 8/9/23
1279  8B75              ;
1280  8B75
1281  8B75              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1282  8B75              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1283  8B75
1284  8B75              Calcula_numero_de_malotes
1285  8B75
1286  8B75 21 00 70     	ld hl,Album_de_fotos
1287  8B78 EB           	ex de,hl
1288  8B79 2A 4F 88     	ld hl,(Stack_snapshot)
1289  8B7C
1290  8B7C 06 00        	ld b,0
1291  8B7E 7D           	ld a,l
1292  8B7F 93           	sub e
1293  8B80 28 07        	jr z,1F
1294  8B82
1295  8B82              ; Nº de malotes no es "0".
1296  8B82
1297  8B82 D6 06        2 sub 6
1298  8B84 04           	inc b
1299  8B85 A7           	and a
1300  8B86 20 FA        	jr nz,2B
1301  8B88 78           	ld a,b
1302  8B89
1303  8B89 32 44 88     1 ld (Numero_de_malotes),a
1304  8B8C C9           	ret
1305  8B8D
1306  8B8D              ; -------------------------------------------------------------------------------------------------------------
1307  8B8D              ;
1308  8B8D              ; 8/9/23
1309  8B8D              ;
1310  8B8D
1311  8B8D              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1312  8B8D              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1313  8B8D
1314  8B8D              Calcula_malotes_Amadeus
1315  8B8D
1316  8B8D 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1317  8B90 EB           	ex de,hl
1318  8B91 2A 55 88     	ld hl,(End_Snapshot_Amadeus)
1319  8B94
1320  8B94 7C           	ld a,h
1321  8B95 A7           	and a
1322  8B96 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1323  8B98
1324  8B98 06 00        	ld b,0
1325  8B9A 7D           	ld a,l
1326  8B9B 93           	sub e
1327  8B9C 28 07        	jr z,1F
1328  8B9E
1329  8B9E              ; Nº de malotes no es "0".
1330  8B9E
1331  8B9E D6 06        2 sub 6
1332  8BA0 04           	inc b
1333  8BA1 A7           	and a
1334  8BA2 20 FA        	jr nz,2B
1335  8BA4 78           	ld a,b
1336  8BA5
1337  8BA5 32 44 88     1 ld (Numero_de_malotes),a
1338  8BA8 C9           	ret
1339  8BA9
1340  8BA9              ; -------------------------------------------------------------------------------------------------------------
1341  8BA9              ;
1342  8BA9              ; 28/2/23
1343  8BA9              ;
1344  8BA9
1345  8BA9              Calcula_numero_de_disparotes
1346  8BA9
1347  8BA9 21 56 70     	ld hl,Album_de_fotos_disparos
1348  8BAC EB           	ex de,hl
1349  8BAD 2A 53 88     	ld hl,(End_Snapshot_disparos)
1350  8BB0
1351  8BB0 06 00        	ld b,0
1352  8BB2 7D           	ld a,l
1353  8BB3 93           	sub e
1354  8BB4 28 07        	jr z,1F
1355  8BB6
1356  8BB6              ; Nº de malotes no es "0".
1357  8BB6
1358  8BB6 D6 06        2 sub 6
1359  8BB8 04           	inc b
1360  8BB9 A7           	and a
1361  8BBA 20 FA        	jr nz,2B
1362  8BBC 78           	ld a,b
1363  8BBD
1364  8BBD 32 59 88     1 ld (Numero_de_disparotes),a
1365  8BC0 C9           	ret
1366  8BC1
1367  8BC1              ; *************************************************************************************************************************************************************
1368  8BC1              ;
1369  8BC1              ; 20/10/22
1370  8BC1              ;
1371  8BC1              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1372  8BC1              ;
1373  8BC1              ; Destruye el puntero y DE !!!!!
1374  8BC1
1375  8BC1 5E           Extrae_address ld e,(hl)
1376  8BC2 23           	inc hl
1377  8BC3 56           	ld d,(hl)
1378  8BC4 2B           	dec hl
1379  8BC5 EB           	ex de,hl
1380  8BC6 C9           	ret
1381  8BC7
1382  8BC7              ; *************************************************************************************************************************************************************
1383  8BC7              ;
1384  8BC7              ;	20/1/24
1385  8BC7              ;
1386  8BC7              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1387  8BC7              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1388  8BC7              ;
1389  8BC7              ;   Destruye HL y BC !!!!!,
1390  8BC7              ;
1391  8BC7              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1392  8BC7              ;					"0" ..... Izquierda.
1393  8BC7
1394  8BC7              Inicia_Puntero_objeto
1395  8BC7
1396  8BC7 3A 0B 88     	ld a,(Cuad_objeto)
1397  8BCA E6 01        	and 1
1398  8BCC F5           	push af
1399  8BCD CC E9 8B     	call z,Inicia_puntero_objeto_izq
1400  8BD0 F1           	pop af
1401  8BD1 C8           	ret z
1402  8BD2 CD D6 8B     	call Inicia_puntero_objeto_der
1403  8BD5 C9           	ret
1404  8BD6
1405  8BD6              ; Arrancamos desde la parte izquierda de la pantalla.
1406  8BD6              ; Iniciamos (Indice_Sprite_der).
1407  8BD6
1408  8BD6 2A 01 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1409  8BD9 22 05 88     	ld (Puntero_DESPLZ_der),hl
1410  8BDC CD C1 8B     	call Extrae_address
1411  8BDF 22 FB 87     	ld (Puntero_objeto),hl
1412  8BE2
1413  8BE2 2A 03 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1414  8BE5 22 07 88     	ld (Puntero_DESPLZ_izq),hl
1415  8BE8 C9           	ret
1416  8BE9
1417  8BE9              ; Arrancamos desde la parte derecha de la pantalla.
1418  8BE9              ; Iniciamos (Indice_Sprite_izq).
1419  8BE9
1420  8BE9 2A 03 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1421  8BEC 22 07 88     	ld (Puntero_DESPLZ_izq),hl
1422  8BEF CD C1 8B     	call Extrae_address
1423  8BF2 22 FB 87     	ld (Puntero_objeto),hl
1424  8BF5
1425  8BF5 2A 01 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1426  8BF8 22 05 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1427  8BFB C9           	ret
1428  8BFC
1429  8BFC              ; *************************************************************************************************************************************************************
1430  8BFC              ;
1431  8BFC              ;	21/12/23
1432  8BFC              ;
1433  8BFC              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1434  8BFC              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1435  8BFC
1436  8BFC              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1437  8BFC              ;	_de la 2ª y 3ª entidad respectivamente.
1438  8BFC
1439  8BFC              Store_Restore_cajas
1440  8BFC
1441  8BFC              ; 	Entidad_sospechosa. 20/4/23
1442  8BFC
1443  8BFC              ;	ld a,(Impacto)
1444  8BFC              ;	and a
1445  8BFC              ;	jr z,1F
1446  8BFC
1447  8BFC              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1448  8BFC              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1449  8BFC              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1450  8BFC              ;	adc hl,bc 											; _ "0" más adelante.
1451  8BFC              ;	ld (Entidad_sospechosa_de_colision),hl
1452  8BFC
1453  8BFC              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1454  8BFC
1455  8BFC              ;	jr $
1456  8BFC
1457  8BFC
1458  8BFC              ;1 ld hl,(Puntero_restore_caja)
1459  8BFC              ;	ld a,(hl)
1460  8BFC              ;	and a
1461  8BFC              ;	push af
1462  8BFC              ;	jr z,2F
1463  8BFC
1464  8BFC              ;	di
1465  8BFC              ;	jr $
1466  8BFC              ;	ei
1467  8BFC
1468  8BFC              ;	di
1469  8BFC              ;	ld de,Bandeja_DRAW
1470  8BFC              ;	ld bc,42
1471  8BFC              ;	ldir
1472  8BFC              ;	ei
1473  8BFC
1474  8BFC              ;2 call Incrementa_punteros_de_cajas
1475  8BFC
1476  8BFC
1477  8BFC C9           	ret
1478  8BFD
1479  8BFD              ; **************************************************************************************************
1480  8BFD              ;
1481  8BFD              ;	21/12/23
1482  8BFD              ;
1483  8BFD              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1484  8BFD
1485  8BFD E5           Restore_entidad push hl
1486  8BFE D5           	push de
1487  8BFF C5            	push bc
1488  8C00
1489  8C00 2A 3B 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1490  8C03 11 F6 87     	ld de,Bandeja_DRAW
1491  8C06 01 2A 00     	ld bc,42
1492  8C09 ED B0        	ldir
1493  8C0B
1494  8C0B C1           	pop bc
1495  8C0C D1           	pop de
1496  8C0D E1           	pop hl
1497  8C0E C9           	ret
1498  8C0F
1499  8C0F              ; **************************************************************************************************
1500  8C0F              ;
1501  8C0F              ;	08/05/23
1502  8C0F              ;
1503  8C0F              ;	Incrementamos los dos punteros de entidades. (+1).
1504  8C0F
1505  8C0F              Incrementa_punteros_de_cajas
1506  8C0F
1507  8C0F 2A 3D 88     	ld hl,(Puntero_restore_caja)
1508  8C12 22 3B 88     	ld (Puntero_store_caja),hl
1509  8C15 2A 3F 88     	ld hl,(Indice_restore_caja)
1510  8C18 23           	inc hl
1511  8C19 23           	inc hl
1512  8C1A 22 3F 88     	ld (Indice_restore_caja),hl
1513  8C1D CD C1 8B         call Extrae_address
1514  8C20 22 3D 88         ld (Puntero_restore_caja),hl
1515  8C23 C9               ret
1516  8C24
1517  8C24              ; **************************************************************************************************
1518  8C24              ;
1519  8C24              ;	21/12/23
1520  8C24              ;
1521  8C24              ;	Restore_Amadeus
1522  8C24              ;
1523  8C24              ;	Cargamos en DRAW los parámetros de Amadeus.
1524  8C24              ;
1525  8C24
1526  8C24 E5           Restore_Amadeus	push hl
1527  8C25 D5           	push de
1528  8C26 C5            	push bc
1529  8C27 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1530  8C2A 11 F6 87     	ld de,Bandeja_DRAW
1531  8C2D 01 2A 00     	ld bc,42
1532  8C30 ED B0        	ldir
1533  8C32 C1           	pop bc
1534  8C33 D1           	pop de
1535  8C34 E1           	pop hl
1536  8C35 C9           	ret
1537  8C36
1538  8C36              ; *************************************************************************************************************************************************************
1539  8C36              ;
1540  8C36              ;	21/12/23
1541  8C36              ;
1542  8C36              ;	Store_Amadeus
1543  8C36              ;
1544  8C36              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1545  8C36              ;
1546  8C36              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1547  8C36              ;
1548  8C36              ;	DESTRUYE: HL y BC y DE.
1549  8C36
1550  8C36 21 F6 87     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1551  8C39 01 2A 00     	ld bc,42
1552  8C3C ED B0        	ldir
1553  8C3E C9           	ret
1554  8C3F
1555  8C3F              ; -----------------------------------------------------------
1556  8C3F              ;
1557  8C3F              ;	21/12/23
1558  8C3F              ;
1559  8C3F              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1560  8C3F              ;
1561  8C3F              ;	Destruye: HL,BC,DE,A
1562  8C3F
1563  8C3F 21 F6 87     Borra_datos_entidad ld hl,Bandeja_DRAW
1564  8C42 01 29 00     	ld bc,41
1565  8C45 AF           	xor a
1566  8C46 77           	ld (hl),a
1567  8C47 11 F7 87     	ld de,Bandeja_DRAW+1
1568  8C4A ED B0        	ldir
1569  8C4C C9           	ret
1570  8C4D
1571  8C4D              ; -----------------------------------------------------------
1572  8C4D
1573  8C4D              ; Teclado.
1574  8C4D
1575  8C4D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1576  8C4F DB FE        	in a,($fe)
1577  8C51 E6 01        	and $01
1578  8C53 28 02        	jr z,1f
1579  8C55 18 F6        	jr Pulsa_ENTER
1580  8C57 C9           1 ret
1581  8C58
1582  8C58              ; **************************************************************************************************
1583  8C58              ;
1584  8C58              ; Temporización.
1585  8C58
1586  8C58              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1587  8C58              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1588  8C58              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1589  8C58              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1590  8C58
1591  8C58              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1592  8C58              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1593  8C58              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1594  8C58
1595  8C58              ; A partir de $4f61 no hace falta DELAY.
1596  8C58
1597  8C58              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1598  8C58
1599  8C58 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1600  8C5B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1601  8C5C 78           	LD A,B
1602  8C5D A7           	AND A
1603  8C5E 20 FB        	JR NZ,wait
1604  8C60 C9           	RET
1605  8C61
1606  8C61              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1607  8C61              ;
1608  8C61              ;	5/3/23
1609  8C61              ;
1610  8C61              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1611  8C61
1612  8C61              Movimiento_Amadeus
1613  8C61
1614  8C61              ; Disparo.
1615  8C61
1616  8C61 3A 6F 88     	ld a,(Disparo_Amadeus)
1617  8C64 A7           	and a
1618  8C65 20 02        	jr nz,1F
1619  8C67 18 15        	jr 2F
1620  8C69
1621  8C69 3E F7        1 ld a,$f7													; "5" para disparar.
1622  8C6B DB FE        	in a,($fe)
1623  8C6D E6 10        	and $10
1624  8C6F
1625  8C6F F5           	push af
1626  8C70 CC 18 8D     	call z,Genera_disparo
1627  8C73 F1           	pop af
1628  8C74 20 08        	jr nz,2F
1629  8C76
1630  8C76 3A 6F 88     	ld a,(Disparo_Amadeus)
1631  8C79 EE 01        	xor 1
1632  8C7B 32 6F 88     	ld (Disparo_Amadeus),a
1633  8C7E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1634  8C80 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1635  8C82 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1636  8C84 CC DD 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1637  8C87
1638  8C87 3E F7        	ld a,$f7
1639  8C89 DB FE        	in a,($fe)
1640  8C8B E6 01        	and $01
1641  8C8D C8           	ret z
1642  8C8E
1643  8C8E 3E F7        	ld a,$f7
1644  8C90 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1645  8C92 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1646  8C94 CC BA 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1647  8C97 C9           	ret
1648  8C98
1649  8C98              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1650  8C98              ;
1651  8C98              ;	Rutina provisional para que los malotes cagen balas.
1652  8C98
1653  8C98              Detecta_disparo_entidad
1654  8C98
1655  8C98 3A 72 88     	ld a,(Disparo_entidad)
1656  8C9B A7           	and a
1657  8C9C C8           	ret z
1658  8C9D
1659  8C9D              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1660  8C9D
1661  8C9D              ;	ld a,$7f				; Detecta SPACE.
1662  8C9D              ;	in a,($fe)
1663  8C9D              ;	and 1
1664  8C9D              ;	ret nz
1665  8C9D
1666  8C9D CD 18 8D     	call Genera_disparo
1667  8CA0 C9           	ret
1668  8CA1
1669  8CA1              ; ----------------------------------------------------------------------
1670  8CA1              ;
1671  8CA1              ;	8/9/23
1672  8CA1
1673  8CA1 2A 55 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1674  8CA4 2B            	dec hl
1675  8CA5 7E           	ld a,(hl)
1676  8CA6 A7           	and a
1677  8CA7 C8           	ret z										; Salimos si es álbum está vacío.
1678  8CA8
1679  8CA8 11 12 88     	ld de,Variables_de_borrado+5
1680  8CAB 01 06 00     	ld bc,6
1681  8CAE ED B8        	lddr
1682  8CB0 C9           	ret
1683  8CB1
1684  8CB1              ; ----------------------------------------------------------------------
1685  8CB1              ;
1686  8CB1              ;	9/9/23
1687  8CB1
1688  8CB1              Repone_datos_de_borrado_Amadeus
1689  8CB1
1690  8CB1 21 0D 88     	ld hl,Variables_de_borrado
1691  8CB4 11 AC 70     	ld de,Album_de_fotos_Amadeus
1692  8CB7 01 06 00     	ld bc,6
1693  8CBA ED B0        	ldir
1694  8CBC
1695  8CBC EB           	ex de,hl
1696  8CBD 22 55 88     	ld (End_Snapshot_Amadeus),hl
1697  8CC0
1698  8CC0 C9           	ret
1699  8CC1
1700  8CC1              ; ----------------------------------------------------------------------
1701  8CC1              ;
1702  8CC1              ;	27/10/23
1703  8CC1              ;
1704  8CC1
1705  8CC1              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1706  8CC1              ;	_ Album_de_fotos correspondiente.
1707  8CC1
1708  8CC1              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1709  8CC1              ;	_ durante el proceso de escritura.
1710  8CC1
1711  8CC1              Repone_datos_de_borrado
1712  8CC1
1713  8CC1 F3           	di
1714  8CC2 ED 5B 4F 88  	ld de,(Stack_snapshot)
1715  8CC6 21 0D 88     	ld hl,Variables_de_borrado
1716  8CC9 01 06 00     	ld bc,6
1717  8CCC ED B0        	ldir
1718  8CCE FB           	ei
1719  8CCF
1720  8CCF EB           	ex de,hl
1721  8CD0 22 4F 88     	ld (Stack_snapshot),hl
1722  8CD3
1723  8CD3 C9           	ret
1724  8CD4
1725  8CD4              ; --------------------------------------------------------------------------------------
1726  8CD4
1727  8CD4              Pinta_Amadeus
1728  8CD4
1729  8CD4 CD 8D 8B        	call Calcula_malotes_Amadeus
1730  8CD7 CD 85 95     	call Extrae_foto_Amadeus
1731  8CDA CD 4D 8B     	call Limpia_album_Amadeus
1732  8CDD
1733  8CDD C9           	ret
1734  8CDE
1735  8CDE              Pinta_entidades
1736  8CDE
1737  8CDE              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1738  8CDE
1739  8CDE 3A 57 88     	ld a,(Ctrl_3)
1740  8CE1 CB 47        	bit 0,a
1741  8CE3 C8           	ret z
1742  8CE4
1743  8CE4 CD 75 8B     	call Calcula_numero_de_malotes
1744  8CE7 CD 03 95     	call Extrae_foto_entidades
1745  8CEA CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1746  8CED
1747  8CED C9           	ret
1748  8CEE
1749  8CEE              ; -----------------------------------------------------------------------------------
1750  8CEE              ;
1751  8CEE              ;	10/12/23
1752  8CEE              ;
1753  8CEE              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1754  8CEE
1755  8CEE              Actualiza_relojes
1756  8CEE
1757  8CEE 3A 57 88     	ld a,(Ctrl_3)
1758  8CF1 CB 47        	bit 0,a
1759  8CF3 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1760  8CF4
1761  8CF4 21 6A 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1762  8CF7 34           	inc (hl)
1763  8CF8
1764  8CF8 34           	inc (hl)
1765  8CF9 35           	dec (hl)
1766  8CFA C0           	ret nz
1767  8CFB
1768  8CFB 21 6B 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1769  8CFE 34           	inc (hl)
1770  8CFF C9           	ret
1771  8D00
1772  8D00              ; ---------------------------------------------------------------
1773  8D00              ;
1774  8D00              ;	21/12/23
1775  8D00
1776  8D00              Guarda_parametros_DRAW
1777  8D00
1778  8D00 21 F6 87     	ld hl,Bandeja_DRAW
1779  8D03 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1780  8D06 01 2A 00     	ld bc,42
1781  8D09 ED B0        	ldir
1782  8D0B C9           	ret
1783  8D0C
1784  8D0C              Recupera_parametros_DRAW
1785  8D0C
1786  8D0C 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1787  8D0F 11 F6 87     	ld de,Bandeja_DRAW
1788  8D12 01 2A 00     	ld bc,42
1789  8D15 ED B0        	ldir
1790  8D17 C9           	ret
1791  8D18
1792  8D18              ; ---------------------------------------------------------------
1793  8D18
1794  8D18              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D18              ; ******************************************************************************************************************************************************************************************
   2+ 8D18              ;
   3+ 8D18              ;   21/07/23
   4+ 8D18              ;
   5+ 8D18              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D18              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D18              ;
   8+ 8D18              ;
   9+ 8D18              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D18              ;
  11+ 8D18              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D18              ;               _ hacen las entidades hacia abajo.
  13+ 8D18              ;
  14+ 8D18              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D18              ;
  16+ 8D18              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D18              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D18              ;
  19+ 8D18              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D18              ;           _ la bala.
  21+ 8D18              ;
  22+ 8D18              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D18              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D18              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D18              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D18              ;           _ en el momento de generarse la bala)).
  27+ 8D18
  28+ 8D18              Genera_disparo
  29+ 8D18
  30+ 8D18              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D18              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D18              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D18              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D18              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D18              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D18              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D18
  38+ 8D18              ; Exclusiones:
  39+ 8D18
  40+ 8D18 3A 23 88         ld a,(Vel_down)
  41+ 8D1B 47               ld b,a
  42+ 8D1C 3A 69 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D1F B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D20 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D21 3A 1A 88         ld a,(Columnas)
  46+ 8D24 47               ld b,a
  47+ 8D25 3A F8 87         ld a,(Columns)
  48+ 8D28 B8               cp b
  49+ 8D29 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D2A
  51+ 8D2A              ; ----- ----- -----
  52+ 8D2A
  53+ 8D2A 3A 19 88         ld a,(Ctrl_0)
  54+ 8D2D CB 77            bit 6,a
  55+ 8D2F 20 06            jr nz,14F
  56+ 8D31
  57+ 8D31 3A FE 87         ld a,(Coordenada_y)
  58+ 8D34 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D36 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D37
  61+ 8D37 21 00 80     14 ld hl,Indice_disparo
  62+ 8D3A 3A FF 87         ld a,(CTRL_DESPLZ)
  63+ 8D3D 4F               ld c,a
  64+ 8D3E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D40              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D40              ;                                            ""        ""       "f9", B="1"
  67+ 8D40              ;                                            ""        ""       "fb", B="2"
  68+ 8D40              ;                                            ""        ""       "fb", B="3"
  69+ 8D40 A7               and a
  70+ 8D41 28 10            jr z,1F
  71+ 8D43 E6 01            and 1
  72+ 8D45 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D46
  74+ 8D46 79               ld a,c
  75+ 8D47 16 F9            ld d,$f9
  76+ 8D49 23           2 inc hl
  77+ 8D4A 23               inc hl
  78+ 8D4B 04               inc b
  79+ 8D4C BA               cp d
  80+ 8D4D 28 04            jr z,1F
  81+ 8D4F 14               inc d
  82+ 8D50 14               inc d
  83+ 8D51 18 F6            jr 2B
  84+ 8D53
  85+ 8D53 CD C1 8B     1 call Extrae_address
  86+ 8D56 E5               push hl
  87+ 8D57 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D59 DD 21 CB 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D5D
  90+ 8D5D              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D5D              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D5D
  93+ 8D5D 3A 19 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D60 CB 77            bit 6,a
  95+ 8D62 20 04            jr nz,19F
  96+ 8D64
  97+ 8D64 AF               xor a
  98+ 8D65 32 72 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D68
 100+ 8D68 3A 0B 88     19 ld a,(Cuad_objeto)
 101+ 8D6B FE 02            cp 2
 102+ 8D6D 38 66            jr c,3F
 103+ 8D6F 28 64            jr z,3F
 104+ 8D71
 105+ 8D71              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D71
 107+ 8D71 E6 01            and 1
 108+ 8D73 28 30            jr z,4F
 109+ 8D75
 110+ 8D75              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D75              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D75              ;
 113+ 8D75              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D75              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D75              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D75
 117+ 8D75 2A F9 87     	ld hl,(Posicion_actual)
 118+ 8D78
 119+ 8D78              ;   Amadeus o entidad ???.
 120+ 8D78
 121+ 8D78 3A 19 88         ld a,(Ctrl_0)
 122+ 8D7B CB 77            bit 6,a
 123+ 8D7D 28 0A            jr z,8F
 124+ 8D7F
 125+ 8D7F              ; 	Dispara Amadeus.
 126+ 8D7F
 127+ 8D7F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D81 CD F4 94         call PreviousScan
 129+ 8D84 CD F4 94         call PreviousScan
 130+ 8D87
 131+ 8D87              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D87              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D87              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D87              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D87
 136+ 8D87 18 11            jr 10F
 137+ 8D89
 138+ 8D89              ; 	Dispara Entidad.
 139+ 8D89
 140+ 8D89 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D8C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D8C
 143+ 8D8C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D8C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D8C
 146+ 8D8C C5               push bc
 147+ 8D8D 06 10            ld b,16
 148+ 8D8F CD E5 94     9 call NextScan
 149+ 8D92 10 FB            djnz 9B
 150+ 8D94 C1               pop bc
 151+ 8D95 CD FF 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D98 18 06            jr 17F
 153+ 8D9A
 154+ 8D9A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D9A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D9A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D9A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D9A
 159+ 8D9A CD FF 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D9D CD 74 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DA0              ;                                                      ; _al generar el disparo.
 162+ 8DA0
 163+ 8DA0              ; 	LLegados a este punto tendremos:
 164+ 8DA0              ;
 165+ 8DA0              ;       Puntero_objeto_disparo en IY.
 166+ 8DA0              ;       Rutinas_de_impresion en IX.
 167+ 8DA0              ;       Puntero_de_impresion en HL.
 168+ 8DA0              ;       Impacto/Dirección en BC.
 169+ 8DA0
 170+ 8DA0 CD 07 8E     17 call Almacena_disparo
 171+ 8DA3 18 52            jr 6F                                             ; RET.
 172+ 8DA5
 173+ 8DA5              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DA5              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DA5              ;
 176+ 8DA5              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DA5              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DA5              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DA5
 180+ 8DA5 2A F9 87     4 ld hl,(Posicion_actual)
 181+ 8DA8
 182+ 8DA8              ;   Amadeus o entidad ???.
 183+ 8DA8
 184+ 8DA8 3A 19 88         ld a,(Ctrl_0)
 185+ 8DAB CB 77            bit 6,a
 186+ 8DAD 28 0A            jr z,11F
 187+ 8DAF
 188+ 8DAF              ; 	Dispara Amadeus.
 189+ 8DAF
 190+ 8DAF 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DB1 CD F4 94         call PreviousScan
 192+ 8DB4 CD F4 94         call PreviousScan
 193+ 8DB7
 194+ 8DB7              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DB7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DB7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DB7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DB7
 199+ 8DB7 18 11            jr 13F
 200+ 8DB9
 201+ 8DB9              ; 	Dispara Entidad.
 202+ 8DB9
 203+ 8DB9 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DBC              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DBC
 206+ 8DBC              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DBC              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DBC
 209+ 8DBC C5               push bc
 210+ 8DBD 06 10            ld b,16
 211+ 8DBF CD E5 94     12 call NextScan
 212+ 8DC2 10 FB            djnz 12B
 213+ 8DC4 C1               pop bc
 214+ 8DC5
 215+ 8DC5 CD F8 8D         call Ajusta_disparo_parte_derecha
 216+ 8DC8 18 06            jr 18F
 217+ 8DCA
 218+ 8DCA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DCA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DCA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DCA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DCA
 223+ 8DCA CD F8 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8DCD CD 74 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DD0              ;                                                       ; _al generar el disparo.
 226+ 8DD0
 227+ 8DD0              ; LLegados a este punto tendremos:
 228+ 8DD0              ;
 229+ 8DD0              ;       Puntero_objeto_disparo en IY.
 230+ 8DD0              ;       Rutinas_de_impresion en IX.
 231+ 8DD0              ;       Puntero_de_impresion en HL.
 232+ 8DD0              ;       Impacto/Dirección en BC.
 233+ 8DD0
 234+ 8DD0 CD 07 8E     18 call Almacena_disparo
 235+ 8DD3 18 22            jr 6F                                               ; RET.
 236+ 8DD5
 237+ 8DD5              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DD5
 239+ 8DD5 28 11        3 jr z,5F
 240+ 8DD7
 241+ 8DD7              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DD7              ;
 243+ 8DD7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DD7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DD7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DD7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DD7
 248+ 8DD7              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DD7              ;	   ""        ""       "f9", B="1"
 250+ 8DD7              ;	   ""        ""       "fb", B="2"
 251+ 8DD7              ; 	   ""        ""       "fb", B="3"
 252+ 8DD7
 253+ 8DD7 2A F9 87     	ld hl,(Posicion_actual)
 254+ 8DDA CD E5 94     	call NextScan
 255+ 8DDD
 256+ 8DDD              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DDD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DDD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DDD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DDD
 261+ 8DDD CD FF 8D         call Ajusta_disparo_parte_izquierda
 262+ 8DE0
 263+ 8DE0              ; 	No se produce impacto. B="$80"
 264+ 8DE0              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DE0
 266+ 8DE0 01 80 80         ld bc,$8080
 267+ 8DE3
 268+ 8DE3              ; 	LLegados a este punto tendremos:
 269+ 8DE3              ;
 270+ 8DE3              ;       Puntero_objeto_disparo en IY.
 271+ 8DE3              ;       Rutinas_de_impresion en IX.
 272+ 8DE3              ;       Puntero_de_impresion en HL.
 273+ 8DE3              ;       Impacto/Dirección en BC.
 274+ 8DE3
 275+ 8DE3 CD 07 8E         call Almacena_disparo
 276+ 8DE6 18 0F            jr 6F                                           ; RET.
 277+ 8DE8
 278+ 8DE8              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DE8              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DE8              ;
 281+ 8DE8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DE8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DE8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DE8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DE8
 286+ 8DE8 2A F9 87     5 ld hl,(Posicion_actual)
 287+ 8DEB CD E5 94     	call NextScan
 288+ 8DEE
 289+ 8DEE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DEE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DEE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DEE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DEE
 294+ 8DEE CD F8 8D         call Ajusta_disparo_parte_derecha
 295+ 8DF1
 296+ 8DF1              ; 	No se produce impacto. B="$80"
 297+ 8DF1              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8DF1
 299+ 8DF1 01 80 80     15 ld bc,$8080
 300+ 8DF4
 301+ 8DF4              ; 	LLegados a este punto tendremos:
 302+ 8DF4              ;
 303+ 8DF4              ;       Puntero_objeto_disparo en IY.
 304+ 8DF4              ;       Rutinas_de_impresion en IX.
 305+ 8DF4              ;       Puntero_de_impresion en HL.
 306+ 8DF4              ;       Impacto/Dirección en BC.
 307+ 8DF4
 308+ 8DF4 CD 07 8E         call Almacena_disparo
 309+ 8DF7
 310+ 8DF7 C9           6 ret
 311+ 8DF8
 312+ 8DF8              ; ----------------------------------------------------------------
 313+ 8DF8              ;
 314+ 8DF8              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8DF8              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8DF8              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8DF8
 318+ 8DF8 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8DF9 FE 02            cp 2
 320+ 8DFB 38 01            jr c,1F
 321+ 8DFD 23               inc hl
 322+ 8DFE C9           1 ret
 323+ 8DFF
 324+ 8DFF 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E00 FE 01        	cp 1
 326+ 8E02 20 01        	jr nz,1F
 327+ 8E04 2B           	dec hl
 328+ 8E05 2B           1 dec hl
 329+ 8E06 C9               ret
 330+ 8E07
 331+ 8E07              ; ----------------------------------------------------------------
 332+ 8E07              ;
 333+ 8E07              ;   25/02/23
 334+ 8E07              ;
 335+ 8E07              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E07              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E07              ;
 338+ 8E07              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E07              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E07
 341+ 8E07              Almacena_disparo
 342+ 8E07
 343+ 8E07 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E08 F1               pop af
 345+ 8E09 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E0A
 347+ 8E0A 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E0B E6 01            and 1
 349+ 8E0D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E0F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E0F              ; 	Dispara AMADEUS.
 352+ 8E0F
 353+ 8E0F              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E0F              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E0F              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E0F              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E0F
 358+ 8E0F C5               push bc
 359+ 8E10 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E13 2A 5C 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E16 A7               and a
 362+ 8E17 ED 42            sbc hl,bc
 363+ 8E19 CC 46 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E1C C1               pop bc
 365+ 8E1D 28 54            jr z,4F
 366+ 8E1F
 367+ 8E1F 2A 5C 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E22 23               inc hl
 369+ 8E23 23               inc hl
 370+ 8E24 22 5C 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E27              ;                                                   ; _ Disparo_(+1).
 372+ 8E27 18 18            jr 2F
 373+ 8E29
 374+ 8E29              ; Dispara una entidad.
 375+ 8E29
 376+ 8E29 C5           1 push bc
 377+ 8E2A 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E2D 2A 5A 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E30 A7               and a
 380+ 8E31 ED 42            sbc hl,bc
 381+ 8E33 CC 3F 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E36 C1               pop bc
 383+ 8E37 28 3A            jr z,4F
 384+ 8E39
 385+ 8E39 2A 5A 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E3C 23               inc hl
 387+ 8E3D 23               inc hl
 388+ 8E3E 22 5A 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E41              ;                                                   ; _ Disparo_(+1).
 390+ 8E41 CD C1 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E44              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E44              ;
 393+ 8E44              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E44              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E44              ;                                                     Puntero_de_impresion en HL.
 396+ 8E44              ;                                                     Impacto/Dirección en BC.
 397+ 8E44
 398+ 8E44 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E45 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E46 23               inc hl                                          ; _ al siguiente.
 401+ 8E47 A7               and a
 402+ 8E48 20 C0            jr nz,3B
 403+ 8E4A
 404+ 8E4A 08               ex af,af
 405+ 8E4B ED 73 49 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E4F F9               ld sp,hl
 407+ 8E50
 408+ 8E50 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E52 F5               push af                                         ; Puntero de impresión.
 410+ 8E53 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E55 C5               push bc                                         ; Control.
 412+ 8E56
 413+ 8E56 ED 7B 49 88      ld sp,(Stack)
 414+ 8E5A
 415+ 8E5A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E5A
 417+ 8E5A 21 38 88     	ld hl,Ctrl_1
 418+ 8E5D CB C6        	set 0,(hl)
 419+ 8E5F
 420+ 8E5F DD E5        	push ix
 421+ 8E61 E1               pop hl
 422+ 8E62 F5               push af
 423+ 8E63 DD E1            pop ix
 424+ 8E65
 425+ 8E65 CD 16 71     	call Guarda_foto_registros
 426+ 8E68
 427+ 8E68 21 38 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E6B CB 86        	res 0,(hl)
 429+ 8E6D
 430+ 8E6D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E6D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E6D
 433+ 8E6D CD 46 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E70 CD 3F 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8E73
 436+ 8E73 C9           4 ret
 437+ 8E74
 438+ 8E74              ; ----------------------------------------------------------------
 439+ 8E74              ;
 440+ 8E74              ;   4/3/23
 441+ 8E74              ;
 442+ 8E74              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E74              ;   _ al generarse el disparo.
 444+ 8E74              ;
 445+ 8E74              ;       "$80" ..... No se produce colisión.
 446+ 8E74              ;       "$81" ..... Se produce colisión.
 447+ 8E74              ;
 448+ 8E74              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E74              ;         _ que forman el disparo.
 450+ 8E74
 451+ 8E74
 452+ 8E74              Comprueba_Colision
 453+ 8E74
 454+ 8E74              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E74
 456+ 8E74 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E76 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E77
 459+ 8E77 CD AD 8E         call Modifica_H_Velocidad_disparo
 460+ 8E7A
 461+ 8E7A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E7B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E7D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E7F
 465+ 8E7F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E81 CD 9D 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E84
 468+ 8E84 7B               ld a,e
 469+ 8E85 E6 01            and 1
 470+ 8E87 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E89              ;                                                  ; _ para activar IMPACTO.
 472+ 8E89 E1               pop hl
 473+ 8E8A E5               push hl
 474+ 8E8B CD E5 94         call NextScan
 475+ 8E8E
 476+ 8E8E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E8F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E91 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E93              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E93 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E95 CD 9D 8E         call Bucle_2
 482+ 8E98
 483+ 8E98 43           1 ld b,e
 484+ 8E99 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E9A FD E1            pop iy
 486+ 8E9C C9               ret
 487+ 8E9D
 488+ 8E9D              ; ---------- ----------
 489+ 8E9D
 490+ 8E9D 06 02        Bucle_2 ld b,2
 491+ 8E9F FD 7E 00     2 ld a,(iy)
 492+ 8EA2 A6               and (hl)
 493+ 8EA3 28 02            jr z,1F
 494+ 8EA5 1E 81            ld e,$81
 495+ 8EA7 23           1 inc hl
 496+ 8EA8 FD 23            inc iy
 497+ 8EAA 10 F3            djnz 2B
 498+ 8EAC C9               ret
 499+ 8EAD
 500+ 8EAD              ; ---------- ----------
 501+ 8EAD              ;
 502+ 8EAD              ;   21/7/23
 503+ 8EAD
 504+ 8EAD              Modifica_H_Velocidad_disparo
 505+ 8EAD
 506+ 8EAD 3A 69 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EB0 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EB2 D0               ret nc                                         ; _ incrementamos H.
 509+ 8EB3 24               inc h
 510+ 8EB4
 511+ 8EB4 C9               ret
 512+ 8EB5
 513+ 8EB5              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EB5              ;
 515+ 8EB5              ;   04/12/23
 516+ 8EB5              ;
 517+ 8EB5              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EB5              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EB5              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EB5              ;
 521+ 8EB5              ;   MODIFICA: HL,DE,B y A.
 522+ 8EB5
 523+ 8EB5              Genera_coordenadas_X
 524+ 8EB5
 525+ 8EB5              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EB5              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EB5
 528+ 8EB5              ;   Limpiamos almacenes.
 529+ 8EB5
 530+ 8EB5 CD E6 8E         call Limpia_Coordenadas_X
 531+ 8EB8
 532+ 8EB8              ;   Almacenamos coordenadas X.
 533+ 8EB8
 534+ 8EB8              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8EB8
 536+ 8EB8 2A 13 88         ld hl,(Puntero_de_impresion)
 537+ 8EBB 11 66 88         ld de,Coordenadas_X_Entidad
 538+ 8EBE 06 02            ld b,2
 539+ 8EC0
 540+ 8EC0 3A FF 87         ld a,(CTRL_DESPLZ)
 541+ 8EC3 A7               and a
 542+ 8EC4 28 01            jr z,1F
 543+ 8EC6 04               inc b
 544+ 8EC7
 545+ 8EC7 CD DD 8E     1 call Guarda_coordenadas_X
 546+ 8ECA
 547+ 8ECA              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8ECA
 549+ 8ECA 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8ECD 11 63 88         ld de,Coordenadas_X_Amadeus
 551+ 8ED0 06 02            ld b,2
 552+ 8ED2
 553+ 8ED2 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8ED5 A7               and a
 555+ 8ED6 28 01            jr z,2F
 556+ 8ED8 04               inc b
 557+ 8ED9
 558+ 8ED9 CD DD 8E     2 call Guarda_coordenadas_X
 559+ 8EDC
 560+ 8EDC              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8EDC
 562+ 8EDC C9               ret
 563+ 8EDD
 564+ 8EDD              ; ----- ----- ----- ----- -----
 565+ 8EDD
 566+ 8EDD 7D           Guarda_coordenadas_X  ld a,l
 567+ 8EDE E6 1F            and $1f
 568+ 8EE0 12           1 ld (de),a
 569+ 8EE1 3C               inc a
 570+ 8EE2 13               inc de
 571+ 8EE3 10 FB            djnz 1B
 572+ 8EE5 C9               ret
 573+ 8EE6
 574+ 8EE6 AF           Limpia_Coordenadas_X xor a
 575+ 8EE7 06 06            ld b,6
 576+ 8EE9 21 63 88         ld hl,Coordenadas_X_Amadeus
 577+ 8EEC 77           1 ld (hl),a
 578+ 8EED 23               inc hl
 579+ 8EEE 10 FC            djnz 1B
 580+ 8EF0 C9               ret
 581+ 8EF1
 582+ 8EF1              ; ----- ----- ----- ----- -----
 583+ 8EF1
 584+ 8EF1              Compara_coordenadas_X
 585+ 8EF1
 586+ 8EF1 06 03            ld b,3
 587+ 8EF3 11 68 88         ld de,Coordenadas_X_Entidad+2
 588+ 8EF6
 589+ 8EF6 1A               ld a,(de)
 590+ 8EF7 A7               and a
 591+ 8EF8 20 01            jr nz,2F
 592+ 8EFA 05               dec b
 593+ 8EFB
 594+ 8EFB 1B           2 dec de
 595+ 8EFC 1B               dec de
 596+ 8EFD 21 63 88         ld hl,Coordenadas_X_Amadeus
 597+ 8F00
 598+ 8F00 D5           1 push de
 599+ 8F01 E5               push hl
 600+ 8F02 C5               push bc
 601+ 8F03
 602+ 8F03 CD 0D 8F         call Comparando
 603+ 8F06
 604+ 8F06 C1               pop bc
 605+ 8F07 E1               pop hl
 606+ 8F08 D1               pop de
 607+ 8F09
 608+ 8F09 13               inc de
 609+ 8F0A 10 F4            djnz 1B
 610+ 8F0C
 611+ 8F0C C9               ret
 612+ 8F0D
 613+ 8F0D              ; ----- ----- ----- ----- -----
 614+ 8F0D              ;
 615+ 8F0D              ;   4/12/23
 616+ 8F0D              ;
 617+ 8F0D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8F0D
 619+ 8F0D 06 03        Comparando ld b,3
 620+ 8F0F 1A               ld a,(de)
 621+ 8F10 4E           2 ld c,(hl)
 622+ 8F11 B9               cp c
 623+ 8F12 28 04            jr z,1F
 624+ 8F14 23               inc hl
 625+ 8F15 10 F9            djnz 2B
 626+ 8F17 C9               ret
 627+ 8F18
 628+ 8F18 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F1A 32 0C 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F1D 21 5E 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F20 CB D6            set 2,(hl)
 632+ 8F22 C9               ret
 633+ 8F23
 634+ 8F23              ; -----------------------------------------------------------------------
 635+ 8F23              ;
 636+ 8F23              ;   7/12/23
 637+ 8F23              ;
 638+ 8F23
 639+ 8F23              Detecta_colision_nave_entidad
 640+ 8F23
 641+ 8F23              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F23
 643+ 8F23 FD 2A FB 87      ld iy,(Puntero_objeto)
 644+ 8F27 2A 13 88         ld hl,(Puntero_de_impresion)
 645+ 8F2A
 646+ 8F2A E5               push hl
 647+ 8F2B
 648+ 8F2B              ; ----- ----- -----
 649+ 8F2B 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F2D 06 0A            ld b,10
 651+ 8F2F CD 5F 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F32 7B               ld a,e
 653+ 8F33 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F35 38 0E            jr c,3F
 655+ 8F37
 656+ 8F37              ; LLegados a este punto:
 657+ 8F37              ;
 658+ 8F37              ;   HAY COLISIÓN !!!!!.
 659+ 8F37              ;
 660+ 8F37              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F37              ;   SET el bit3 de (Impacto2).
 662+ 8F37              ;
 663+ 8F37              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F37
 665+ 8F37 21 0C 88         ld hl,Impacto
 666+ 8F3A 36 01            ld (hl),1
 667+ 8F3C 21 5E 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F3F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F41 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F43
 671+ 8F43 18 18            jr 1F
 672+ 8F45
 673+ 8F45              ; -----
 674+ 8F45
 675+ 8F45 E1           3 pop hl
 676+ 8F46 CD E5 94         call NextScan
 677+ 8F49 E5               push hl
 678+ 8F4A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F4B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F4D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F4F 30 0C            jr nc,1F
 682+ 8F51              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F51 10 DC            djnz 2B
 684+ 8F53
 685+ 8F53              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F53
 687+ 8F53              ; LLegados a este punto:
 688+ 8F53              ;
 689+ 8F53              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F53              ;
 691+ 8F53              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F53              ;   RES el bit2 de (Impacto2).
 693+ 8F53              ;
 694+ 8F53              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F53              ;   Lo colocamos a "0".
 696+ 8F53
 697+ 8F53 21 5E 88         ld hl,Impacto2
 698+ 8F56 CB 96            res 2,(hl)
 699+ 8F58 2A 5F 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F5B 36 00            ld (hl),0
 701+ 8F5D
 702+ 8F5D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F5E C9               ret
 704+ 8F5F
 705+ 8F5F               ; ---------- ----------
 706+ 8F5F
 707+ 8F5F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F60 3A F8 87         ld a,(Columns)
 709+ 8F63 47               ld b,a
 710+ 8F64 FD 7E 00     2 ld a,(iy)
 711+ 8F67 BE               cp (hl)
 712+ 8F68 28 01            jr z,1F
 713+ 8F6A
 714+ 8F6A 1C               inc e
 715+ 8F6B
 716+ 8F6B 23           1 inc hl
 717+ 8F6C FD 23            inc iy
 718+ 8F6E 10 F4            djnz 2B
 719+ 8F70 C1               pop bc
 720+ 8F71 C9               ret
 721+ 8F72
 722+ 8F72              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F72              ;
 724+ 8F72              ;   13/03/23
 725+ 8F72              ;
 726+ 8F72              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F72              ;
 728+ 8F72              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F72
 730+ 8F72 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F75 7E               ld a,(hl)
 732+ 8F76 A7               and a
 733+ 8F77 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F78
 735+ 8F78 44               ld b,h
 736+ 8F79 4D               ld c,l
 737+ 8F7A 2A 51 88         ld hl,(Stack_snapshot_disparos)
 738+ 8F7D E5               push hl
 739+ 8F7E A7               and a
 740+ 8F7F ED 42            sbc hl,bc
 741+ 8F81 E5               push hl
 742+ 8F82 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F83
 744+ 8F83 E1               pop hl
 745+ 8F84 54               ld d,h
 746+ 8F85 5D               ld e,l
 747+ 8F86 1B               dec de
 748+ 8F87 ED B8            lddr                                                ; Limpiamos.
 749+ 8F89
 750+ 8F89 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8F8C 22 51 88         ld (Stack_snapshot_disparos),hl
 752+ 8F8F
 753+ 8F8F C9               ret
 754+ 8F90
 755+ 8F90              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F90              ;
 757+ 8F90              ;   18/07/23
 758+ 8F90              ;
 759+ 8F90
 760+ 8F90              Motor_de_disparos
 761+ 8F90
 762+ 8F90              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F90
 764+ 8F90 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F93 2A 5C 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F96
 767+ 8F96 CD C1 8B     2 call Extrae_address
 768+ 8F99 7E               ld a,(hl)
 769+ 8F9A A7               and a
 770+ 8F9B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F9D
 772+ 8F9D              ; ----- ----- ----- ----- ----- -----
 773+ 8F9D
 774+ 8F9D C5               push bc
 775+ 8F9E CD 62 90         call foto_disparo_a_borrar
 776+ 8FA1
 777+ 8FA1              ; Existe colisión con este disparo???
 778+ 8FA1
 779+ 8FA1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8FA2 7E               ld a,(hl)
 781+ 8FA3 2B               dec hl
 782+ 8FA4 E6 01            and 1
 783+ 8FA6 28 1D            jr z,9F
 784+ 8FA8
 785+ 8FA8              ;   En este punto:
 786+ 8FA8              ;
 787+ 8FA8              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8FA8              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8FA8              ;   _con la entidad).
 790+ 8FA8              ;
 791+ 8FA8              ;   Disparo_2A defw 0                                ; Control.
 792+ 8FA8              ;    defw 0                                          ; Puntero objeto.
 793+ 8FA8              ;    defw 0                                          ; Puntero de impresión.
 794+ 8FA8              ;    defw 0                                          ; Rutina de impresión.
 795+ 8FA8
 796+ 8FA8 E5               push hl
 797+ 8FA9
 798+ 8FA9 06 04            ld b,4
 799+ 8FAB 23           19 inc hl
 800+ 8FAC 10 FD            djnz 19B
 801+ 8FAE
 802+ 8FAE CD C1 8B         call Extrae_address
 803+ 8FB1 CD BC 9B         call Genera_coordenadas_disparo
 804+ 8FB4
 805+ 8FB4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FB4
 807+ 8FB4 21 61 88         ld hl,Coordenadas_disparo_certero
 808+ 8FB7 72               ld (hl),d
 809+ 8FB8 23               inc hl
 810+ 8FB9 73               ld (hl),e
 811+ 8FBA
 812+ 8FBA              ; Elimino el disparo de la base de datos.
 813+ 8FBA
 814+ 8FBA E1               pop hl
 815+ 8FBB CD E1 90         call Elimina_disparo_de_base_de_datos
 816+ 8FBE 21 5E 88         ld hl,Impacto2
 817+ 8FC1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FC3
 819+ 8FC3 18 06            jr 11F
 820+ 8FC5
 821+ 8FC5 CD 8B 90     9 call Mueve_disparo
 822+ 8FC8 CD 62 90         call foto_disparo_a_borrar
 823+ 8FCB
 824+ 8FCB C1           11 pop bc
 825+ 8FCC 18 04            jr 7F
 826+ 8FCE
 827+ 8FCE              ; ----- ----- ----- ----- ----- -----
 828+ 8FCE
 829+ 8FCE ED 42        1 sbc hl,bc
 830+ 8FD0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FD2
 832+ 8FD2 2A 5C 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FD5 23               inc hl
 834+ 8FD6 23               inc hl
 835+ 8FD7 22 5C 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FDA 18 BA            jr 2B
 837+ 8FDC
 838+ 8FDC CD 46 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FDF              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FDF
 841+ 8FDF              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FDF
 843+ 8FDF 01 6E 85         ld bc,Disparo_11
 844+ 8FE2 2A 5A 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FE5
 846+ 8FE5 CD C1 8B     5 call Extrae_address
 847+ 8FE8 7E               ld a,(hl)
 848+ 8FE9 A7               and a
 849+ 8FEA 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FEC
 851+ 8FEC              ; ----- ----- ----- ----- ----- -----
 852+ 8FEC
 853+ 8FEC C5               push bc
 854+ 8FED CD 62 90         call foto_disparo_a_borrar
 855+ 8FF0
 856+ 8FF0              ; Existe colisión con este disparo???
 857+ 8FF0
 858+ 8FF0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8FF1 7E               ld a,(hl)
 860+ 8FF2 2B               dec hl
 861+ 8FF3 E6 01            and 1
 862+ 8FF5 28 4D            jr z,10F
 863+ 8FF7
 864+ 8FF7              ;! La colisión se produce con Amadeus???
 865+ 8FF7              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8FF7
 867+ 8FF7 E5               push hl
 868+ 8FF8
 869+ 8FF8 06 04            ld b,4
 870+ 8FFA 23           16 inc hl
 871+ 8FFB 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8FFD
 873+ 8FFD CD C1 8B         call Extrae_address
 874+ 9000 CD BC 9B         call Genera_coordenadas_disparo
 875+ 9003
 876+ 9003 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9004 FE 16            cp $16
 878+ 9006 38 2A            jr c,15F
 879+ 9008
 880+ 9008
 881+ 9008              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9008
 883+ 9008 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9009
 885+ 9009              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9009
 887+ 9009 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 900C
 889+ 900C              ; Coordenada X de Amadeus en D.
 890+ 900C
 891+ 900C 7D               ld a,l
 892+ 900D E6 1F            and $1F
 893+ 900F 57               ld d,a
 894+ 9010
 895+ 9010 21 8A 85         ld hl,Amadeus_db+8
 896+ 9013 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9014
 898+ 9014 21 63 88         ld hl,Coordenadas_X_Amadeus
 899+ 9017 CD DD 8E         call Guarda_coordenadas_X
 900+ 901A
 901+ 901A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 901B
 903+ 901B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 901B
 905+ 901B 06 02            ld b,2
 906+ 901D C5           20 push bc
 907+ 901E
 908+ 901E 06 03            ld b,3
 909+ 9020 21 63 88         ld hl,Coordenadas_X_Amadeus
 910+ 9023 7E           18 ld a,(hl)
 911+ 9024 BA               cp d
 912+ 9025 20 04            jr nz,17F
 913+ 9027
 914+ 9027              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9027
 916+ 9027 C1               pop bc
 917+ 9028 E1               pop hl
 918+ 9029 18 0D            jr 14F
 919+ 902B
 920+ 902B 23           17 inc hl
 921+ 902C 10 F5            djnz 18B
 922+ 902E
 923+ 902E 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 902F
 925+ 902F C1               pop bc
 926+ 9030 10 EB            djnz 20B
 927+ 9032
 928+ 9032
 929+ 9032              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9032              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9032
 932+ 9032 E1           15 pop hl
 933+ 9033 23               inc hl
 934+ 9034 35               dec (hl)
 935+ 9035 2B               dec hl
 936+ 9036 18 0C            jr 10F
 937+ 9038
 938+ 9038              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9038              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9038
 941+ 9038 E5           14 push hl
 942+ 9039 CD E1 90         call Elimina_disparo_de_base_de_datos
 943+ 903C 21 5E 88         ld hl,Impacto2
 944+ 903F CB CE            set 1,(hl)
 945+ 9041 E1               pop hl
 946+ 9042 18 06            jr 12F
 947+ 9044
 948+ 9044              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9044
 950+ 9044 CD 8B 90     10 call Mueve_disparo
 951+ 9047 CD 62 90         call foto_disparo_a_borrar
 952+ 904A C1           12 pop bc
 953+ 904B
 954+ 904B 18 04            jr 8F
 955+ 904D
 956+ 904D              ; ----- ----- ----- ----- ----- -----
 957+ 904D
 958+ 904D ED 42        4 sbc hl,bc
 959+ 904F 28 0A            jr z,6F
 960+ 9051
 961+ 9051 2A 5A 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9054 23               inc hl
 963+ 9055 23               inc hl
 964+ 9056 22 5A 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9059 18 8A            jr 5B
 966+ 905B
 967+ 905B CD 3F 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 905E CD E6 8E         call Limpia_Coordenadas_X
 969+ 9061 C9               ret
 970+ 9062
 971+ 9062              ; ------------------------------------------------------------------
 972+ 9062
 973+ 9062              foto_disparo_a_borrar
 974+ 9062
 975+ 9062 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9063 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9064 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9065
 979+ 9065 E5               push hl
 980+ 9066 23               inc hl
 981+ 9067 23               inc hl
 982+ 9068 ED 73 49 88      ld (Stack),sp
 983+ 906C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 906D FD E1            pop iy
 985+ 906F DD E1            pop ix
 986+ 9071 E1               pop hl
 987+ 9072 ED 7B 49 88      ld sp,(Stack)
 988+ 9076 3A 38 88         ld a,(Ctrl_1)
 989+ 9079 CB C7            set 0,a
 990+ 907B 32 38 88         ld (Ctrl_1),a
 991+ 907E CD 16 71         call Guarda_foto_registros
 992+ 9081 3A 38 88         ld a,(Ctrl_1)
 993+ 9084 CB 87            res 0,a
 994+ 9086 32 38 88         ld (Ctrl_1),a
 995+ 9089 E1               pop hl
 996+ 908A C9               ret
 997+ 908B
 998+ 908B              ;---------------------------------------------------
 999+ 908B              ;
1000+ 908B              ;   18/07/23
1001+ 908B              ;
1002+ 908B
1003+ 908B              Mueve_disparo
1004+ 908B
1005+ 908B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 908B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 908B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 908B
1009+ 908B E5               push hl
1010+ 908C
1011+ 908C 7E               ld a,(hl)
1012+ 908D
1013+ 908D 06 04            ld b,4
1014+ 908F 23           1 inc hl
1015+ 9090 10 FD            djnz 1B
1016+ 9092
1017+ 9092              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9092
1019+ 9092 CD C1 8B         call Extrae_address
1020+ 9095
1021+ 9095 E6 01            and 1
1022+ 9097 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9099
1024+ 9099              ; Disparo hacia arriba, (Amadeus).
1025+ 9099
1026+ 9099              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9099              ; _ de la dificultad.
1028+ 9099
1029+ 9099 CD F4 94         call PreviousScan
1030+ 909C CD F4 94         call PreviousScan
1031+ 909F CD F4 94         call PreviousScan
1032+ 90A2 CD F4 94         call PreviousScan
1033+ 90A5
1034+ 90A5              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 90A5
1036+ 90A5 7C               ld a,h
1037+ 90A6 FE 40            cp $40
1038+ 90A8 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 90AA
1040+ 90AA              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 90AA
1042+ 90AA EB               ex de,hl
1043+ 90AB 06 04            ld b,4
1044+ 90AD 2B           6 dec hl
1045+ 90AE 10 FD            djnz 6B
1046+ 90B0
1047+ 90B0 CD E1 90         call Elimina_disparo_de_base_de_datos
1048+ 90B3 E1               pop hl
1049+ 90B4 18 10            jr 7F
1050+ 90B6
1051+ 90B6              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90B6              ; HL contiene el puntero de impresión del disparo.
1053+ 90B6              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90B6
1055+ 90B6 D5           3 push de
1056+ 90B7 C5               push bc
1057+ 90B8
1058+ 90B8 CD 74 8E         call Comprueba_Colision
1059+ 90BB
1060+ 90BB              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90BB
1062+ 90BB 78               ld a,b
1063+ 90BC
1064+ 90BC C1               pop bc
1065+ 90BD D1               pop de
1066+ 90BE
1067+ 90BE EB               ex de,hl
1068+ 90BF
1069+ 90BF 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90C0 23               inc hl                                      ; _ movimiento.
1071+ 90C1 72               ld (hl),d
1072+ 90C2
1073+ 90C2 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90C3
1075+ 90C3 23               inc hl                                      ; _ en curso.
1076+ 90C4 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90C5 2B               dec hl
1078+ 90C6
1079+ 90C6 C9           7 ret
1080+ 90C7
1081+ 90C7              ; Disparo hacia abajo, (Entidad).
1082+ 90C7
1083+ 90C7 3A 69 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 90CA 47               ld b,a
1085+ 90CB
1086+ 90CB CD E5 94     4 call NextScan
1087+ 90CE 10 FB            djnz 4B
1088+ 90D0
1089+ 90D0              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90D0
1091+ 90D0 7C               ld a,h
1092+ 90D1 FE 58            cp $58
1093+ 90D3 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90D5
1095+ 90D5 EB               ex de,hl
1096+ 90D6 06 04            ld b,4
1097+ 90D8 2B           5 dec hl
1098+ 90D9 10 FD            djnz 5B
1099+ 90DB
1100+ 90DB CD E1 90         call Elimina_disparo_de_base_de_datos
1101+ 90DE E1               pop hl
1102+ 90DF 18 E5            jr 7B
1103+ 90E1
1104+ 90E1              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90E1
1106+ 90E1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90E4 AF               xor a
1108+ 90E5 77               ld (hl),a
1109+ 90E6 54               ld d,h
1110+ 90E7 5D               ld e,l
1111+ 90E8 13               inc de
1112+ 90E9 ED B0            ldir
1113+ 90EB C9               ret
1114+ 90EC
1115+ 90EC              ; -----------------------------------------------------------------
1116+ 90EC              ;
1117+ 90EC              ;   7/12/23
1118+ 90EC              ;
1119+ 90EC
1120+ 90EC 3A 5E 88     Selector_de_impactos ld a,(Impacto2)
1121+ 90EF A7               and a
1122+ 90F0 C8               ret z
1123+ 90F1
1124+ 90F1              ; Analizamos si hay impacto por disparos.
1125+ 90F1
1126+ 90F1              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 90F1
1128+ 90F1 CB 4F            bit 1,a
1129+ 90F3 28 07            jr z,1F
1130+ 90F5
1131+ 90F5 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 90F8 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 90FA 18 08            jr 2F
1134+ 90FC
1135+ 90FC CB 47        1 bit 0,a
1136+ 90FE C8               ret z
1137+ 90FF
1138+ 90FF              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 90FF
1140+ 90FF 21 38 88         ld hl,Ctrl_1
1141+ 9102 CB D6            set 2,(hl)
1142+ 9104
1143+ 9104 C9           2 ret
1144+ 9105
1145+ 9105              ; -----------------------------------------------------------------
1146+ 9105              ;
1147+ 9105              ;   25/04/23
1148+ 9105              ;
1149+ 9105
1150+ 9105              Determina_resultado_comparativa
1151+ 9105
1152+ 9105              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9105              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9105              ;
1155+ 9105              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9105              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9105              ;
1158+ 9105              ;   SBC HL,DE
1159+ 9105
1160+ 9105              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9105              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9105
1163+ 9105              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9105              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9105
1166+ 9105
1167+ 9105 3A 0B 88         ld a,(Cuad_objeto)
1168+ 9108 FE 02            cp 2
1169+ 910A 28 26            jr z,2F
1170+ 910C 38 24            jr c,2F
1171+ 910E
1172+ 910E              ; Cuadrantes 3º y 4º
1173+ 910E
1174+ 910E E6 01            and 1
1175+ 9110 28 10            jr z,4F
1176+ 9112
1177+ 9112              ; Cuadrante 3º
1178+ 9112
1179+ 9112 7C               ld a,h
1180+ 9113 06 00            ld b,0
1181+ 9115
1182+ 9115 CD A0 91         call Compara_cositas_H3
1183+ 9118
1184+ 9118 04               inc b
1185+ 9119 05               dec b
1186+ 911A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 911B
1188+ 911B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 911C 06 00            ld b,0
1190+ 911E
1191+ 911E CD B2 91         call Compara_cositas_L3
1192+ 9121 C9               ret
1193+ 9122
1194+ 9122              ; Cuadrante 4º
1195+ 9122
1196+ 9122 7C           4 ld a,h
1197+ 9123 06 00            ld b,0
1198+ 9125
1199+ 9125 CD C4 91         call Compara_cositas_H4
1200+ 9128
1201+ 9128 04               inc b
1202+ 9129 05               dec b
1203+ 912A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 912B
1205+ 912B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 912C 06 00            ld b,0
1207+ 912E
1208+ 912E CD DA 91         call Compara_cositas_L4
1209+ 9131 C9               ret
1210+ 9132
1211+ 9132              ; Cuadrantes 1º y 2º.
1212+ 9132
1213+ 9132 28 10        2 jr z,3F
1214+ 9134
1215+ 9134              ; 1er Cuadrante
1216+ 9134
1217+ 9134 7C               ld a,h
1218+ 9135 06 00            ld b,0
1219+ 9137
1220+ 9137 CD 78 91         call Compara_cositas_H1
1221+ 913A
1222+ 913A 04               inc b
1223+ 913B 05               dec b
1224+ 913C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 913D
1226+ 913D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 913E 06 00            ld b,0
1228+ 9140
1229+ 9140 CD 8E 91         call Compara_cositas_L1
1230+ 9143 C9               ret
1231+ 9144
1232+ 9144
1233+ 9144              ; 2º Cuadrante
1234+ 9144
1235+ 9144 7C           3 ld a,h
1236+ 9145 06 00            ld b,0
1237+ 9147
1238+ 9147 CD 54 91         call Compara_cositas_H2
1239+ 914A
1240+ 914A 04               inc b
1241+ 914B 05               dec b
1242+ 914C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 914D
1244+ 914D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 914E 06 00            ld b,0
1246+ 9150
1247+ 9150 CD 66 91         call Compara_cositas_L2
1248+ 9153 C9               ret
1249+ 9154
1250+ 9154 A7           Compara_cositas_H2 and a
1251+ 9155 28 0D            jr z,1F
1252+ 9157              ;    cp $fd
1253+ 9157              ;    jr z,1F
1254+ 9157              ;    cp $fe
1255+ 9157              ;    jr z,1F
1256+ 9157 FE FF            cp $ff
1257+ 9159 28 09            jr z,1F
1258+ 915B FE 01            cp $01
1259+ 915D 28 05            jr z,1F
1260+ 915F FE 02            cp $02
1261+ 9161 28 01            jr z,1F
1262+ 9163 C0               ret nz
1263+ 9164 04           1 inc b
1264+ 9165 C9               ret
1265+ 9166
1266+ 9166 A7           Compara_cositas_L2 and a
1267+ 9167 28 0D            jr z,1F
1268+ 9169              ;    cp $fd
1269+ 9169              ;    jr z,1F
1270+ 9169 FE FE            cp $fe
1271+ 916B 28 09            jr z,1F
1272+ 916D FE FF            cp $ff
1273+ 916F 28 05            jr z,1F
1274+ 9171 FE 01            cp $01
1275+ 9173 28 01            jr z,1F
1276+ 9175              ;    cp $02
1277+ 9175              ;    jr z,1F
1278+ 9175 C0               ret nz
1279+ 9176 04           1 inc b
1280+ 9177 C9               ret
1281+ 9178
1282+ 9178 A7           Compara_cositas_H1 and a
1283+ 9179 28 11            jr z,1F
1284+ 917B              ;    cp $fd
1285+ 917B              ;    jr z,1F
1286+ 917B              ;    cp $fe
1287+ 917B              ;    jr z,1F
1288+ 917B FE FF            cp $ff
1289+ 917D 28 0D            jr z,1F
1290+ 917F FE 01            cp $01
1291+ 9181 28 09            jr z,1F
1292+ 9183 FE 02            cp $02
1293+ 9185 28 05            jr z,1F
1294+ 9187 FE 03            cp $03
1295+ 9189 28 01            jr z,1F
1296+ 918B C0               ret nz
1297+ 918C 04           1 inc b
1298+ 918D C9               ret
1299+ 918E
1300+ 918E A7           Compara_cositas_L1 and a
1301+ 918F 28 0D            jr z,1F
1302+ 9191              ;    cp $fd
1303+ 9191              ;    jr z,1F
1304+ 9191              ;    cp $fe
1305+ 9191              ;    jr z,1F
1306+ 9191              ;    cp $ff
1307+ 9191              ;    jr z,1F
1308+ 9191 FE 01            cp $01
1309+ 9193 28 09            jr z,1F
1310+ 9195 FE 02            cp $02
1311+ 9197 28 05            jr z,1F
1312+ 9199 FE 03            cp $03
1313+ 919B 28 01            jr z,1F
1314+ 919D C0               ret nz
1315+ 919E 04           1 inc b
1316+ 919F C9               ret
1317+ 91A0
1318+ 91A0 A7           Compara_cositas_H3 and a
1319+ 91A1 28 0D            jr z,1F
1320+ 91A3              ;    cp $fd
1321+ 91A3              ;    jr z,1F
1322+ 91A3 FE FE            cp $fe
1323+ 91A5 28 09            jr z,1F
1324+ 91A7 FE FF            cp $ff
1325+ 91A9 28 05            jr z,1F
1326+ 91AB FE 01            cp $01
1327+ 91AD 28 01            jr z,1F
1328+ 91AF              ;    cp $02
1329+ 91AF              ;    jr z,1F
1330+ 91AF              ;    cp $03
1331+ 91AF              ;    jr z,1F
1332+ 91AF C0               ret nz
1333+ 91B0 04           1 inc b
1334+ 91B1 C9               ret
1335+ 91B2
1336+ 91B2 A7           Compara_cositas_L3 and a
1337+ 91B3 28 0D            jr z,1F
1338+ 91B5              ;    cp $fd
1339+ 91B5              ;    jr z,1F
1340+ 91B5              ;    cp $fe
1341+ 91B5              ;    jr z,1F
1342+ 91B5              ;    cp $ff
1343+ 91B5              ;    jr z,1F
1344+ 91B5 FE 01            cp $01
1345+ 91B7 28 09            jr z,1F
1346+ 91B9 FE 02            cp $02
1347+ 91BB 28 05            jr z,1F
1348+ 91BD FE 03            cp $03
1349+ 91BF 28 01            jr z,1F
1350+ 91C1 C0               ret nz
1351+ 91C2 04           1 inc b
1352+ 91C3 C9               ret
1353+ 91C4
1354+ 91C4 A7           Compara_cositas_H4 and a
1355+ 91C5 28 11            jr z,1F
1356+ 91C7 FE FD            cp $fd
1357+ 91C9 28 0D            jr z,1F
1358+ 91CB FE FE            cp $fe
1359+ 91CD 28 09            jr z,1F
1360+ 91CF FE FF            cp $ff
1361+ 91D1 28 05            jr z,1F
1362+ 91D3 FE 01            cp $01
1363+ 91D5 28 01            jr z,1F
1364+ 91D7              ;    cp $02
1365+ 91D7              ;    jr z,1F
1366+ 91D7              ;    cp $03
1367+ 91D7              ;    jr z,1F
1368+ 91D7 C0               ret nz
1369+ 91D8 04           1 inc b
1370+ 91D9 C9               ret
1371+ 91DA
1372+ 91DA A7           Compara_cositas_L4 and a
1373+ 91DB 28 0D            jr z,1F
1374+ 91DD              ;    cp $fd
1375+ 91DD              ;    jr z,1F
1376+ 91DD FE FE            cp $fe
1377+ 91DF 28 09            jr z,1F
1378+ 91E1 FE FF            cp $ff
1379+ 91E3 28 05            jr z,1F
1380+ 91E5 FE 01            cp $01
1381+ 91E7 28 01            jr z,1F
1382+ 91E9              ;    cp $02
1383+ 91E9              ;    jr z,1F
1384+ 91E9              ;    cp $03
1385+ 91E9              ;    jr z,1F
1386+ 91E9 C0               ret nz
1387+ 91EA 04           1 inc b
1388+ 91EB C9               ret
# file closed: Disparo.asm
1795  91EC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91EC              ; ******************************************************************************************************************************************************************************************
   2+ 91EC              ;
   3+ 91EC              ; 26/06/23
   4+ 91EC              ;
   5+ 91EC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91EC
   7+ 91EC              Draw
   8+ 91EC
   9+ 91EC CD D9 94     	call Prepara_draw
  10+ 91EF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 91F0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 91F1 28 05        	jr z,2F
  13+ 91F3
  14+ 91F3 3A 0B 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 91F6 18 0C        	jr 1F
  16+ 91F8
  17+ 91F8 2A 09 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 91FB 22 F9 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 91FE CD 8D 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9201              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9201
  22+ 9201 CD 4D 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9204
  24+ 9204 3A 19 88     1 ld a,(Ctrl_0)
  25+ 9207 CB 6F        	bit 5,a
  26+ 9209 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 920B
  28+ 920B CD 23 92     	call Comprueba_limite_horizontal
  29+ 920E CD B3 92     	call Comprueba_limite_vertical
  30+ 9211
  31+ 9211              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9211              ; -----------------------
  33+ 9211              ; -----------------------
  34+ 9211              ; -----------------------
  35+ 9211
  36+ 9211 CD 09 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9214 CD 40 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9217 CD 9F 94     	call Define_rutina_de_impresion
  39+ 921A
  40+ 921A 3A 19 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 921D CB AF        	res 5,a											; _a ser de utilidad.
  42+ 921F 32 19 88     	ld (Ctrl_0),a
  43+ 9222
  44+ 9222 C9           	ret
  45+ 9223
  46+ 9223              ; *******************************************************************************************************************************************************************************************
  47+ 9223              ;	21/01/23
  48+ 9223              ;
  49+ 9223              ; 	Comprueba_limite_horizontal.
  50+ 9223              ;
  51+ 9223              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9223              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9223              ;
  54+ 9223              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9223              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9223              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9223              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9223
  59+ 9223
  60+ 9223
  61+ 9223 3A 19 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9226 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9228 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 922A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 922C 32 19 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 922F 18 09            jr 6F
  67+ 9231 CB 5F        1 bit 3,a
  68+ 9233 28 0A            jr z,2F
  69+ 9235 E6 F7            and $f7
  70+ 9237 32 19 88         ld (Ctrl_0),a
  71+ 923A CD 8D 93     6 call Inicializacion
  72+ 923D 18 5B            jr 5F
  73+ 923F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9240
  75+ 9240              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9240              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9240
  78+ 9240 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9241 2A 1B 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9244 CD F8 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9247 67           	ld h,a
  82+ 9248 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9249 CD F8 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 924C 67           	ld h,a
  85+ 924D A7           	and a
  86+ 924E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9250 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9251 3A 0B 88     	ld a,(Cuad_objeto)
  89+ 9254 FE 02        	cp 2
  90+ 9256 38 1E        	jr c,3F
  91+ 9258 28 1C        	jr z,3F
  92+ 925A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 925B 28 23            jr z,7F
  94+ 925D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 925F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9261 E1           	pop hl
  97+ 9262
  98+ 9262              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9262              ; _para indicar con E="2" en caso necesario.
 100+ 9262
 101+ 9262 E5               push hl
 102+ 9263 C5               push bc
 103+ 9264 CD F8 97     	call calcula_tercio
 104+ 9267 FE 01        	cp 1
 105+ 9269 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 926B CD 9B 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 926E 28 26            jr z,9F
 108+ 9270 38 24            jr c,9F
 109+ 9272 1E 00        11 ld e,0
 110+ 9274 18 22            jr 8F
 111+ 9276 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9277 28 07        	jr z, 7F
 113+ 9279 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 927B 1E 00         	ld e,0
 115+ 927D E1           	pop hl
 116+ 927E 18 04        	jr 4F
 117+ 9280 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9282 18 15            jr 10F
 119+ 9284
 120+ 9284              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9284              ; _para indicar con E="2" en caso necesario.
 122+ 9284
 123+ 9284 E5           4 push hl
 124+ 9285 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9286 CD F8 97     	call calcula_tercio
 126+ 9289 FE 01        	cp 1
 127+ 928B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 928D CD 9B 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9290 28 04            jr z,9F
 130+ 9292 30 02            jr nc,9F
 131+ 9294 18 02        	jr 8F
 132+ 9296 1E 02        9 ld e,2
 133+ 9298 C1           8 pop bc
 134+ 9299 E1           10 pop hl
 135+ 929A C9           5 ret
 136+ 929B
 137+ 929B              ; --------------------
 138+ 929B              ;
 139+ 929B              ; 25/08/22
 140+ 929B
 141+ 929B CD F8 97     Comprueba_centro call calcula_tercio
 142+ 929E 67               ld h,a
 143+ 929F 08           	ex af,af
 144+ 92A0 FE 02        	cp 2
 145+ 92A2 38 07        	jr c,1F
 146+ 92A4 28 05        	jr z,1F
 147+ 92A6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 92A9 18 03        	jr 2F
 149+ 92AB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 92AE 08           2 ex af,af
 151+ 92AF A7               and a
 152+ 92B0 ED 42            sbc hl,bc
 153+ 92B2 C9               ret
 154+ 92B3
 155+ 92B3              ; *********************************************************************************************************************************************************************************************
 156+ 92B3              ;
 157+ 92B3              ;   16/8/22
 158+ 92B3              ;
 159+ 92B3              ;	Comprueba_limite_vertical
 160+ 92B3              ;
 161+ 92B3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 92B3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 92B3              ;
 164+ 92B3
 165+ 92B3 2A F9 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 92B6 7D           	ld a,l
 167+ 92B7 E6 1F        	and $1F
 168+ 92B9 57           	ld d,a
 169+ 92BA 3A 1D 88     	ld a,(Limite_vertical)
 170+ 92BD BA           	cp d 											; Límite - Posición.
 171+ 92BE 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 92BF 3A 0B 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 92C2 CB 47        	bit 0,a
 174+ 92C4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 92C6
 176+ 92C6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 92C6
 178+ 92C6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 92C7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 92C9
 181+ 92C9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 92C9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 92C9
 184+ 92C9 3A FD 87         ld a,(Coordenada_X)
 185+ 92CC 16 0F            ld d,Centro_izquierda
 186+ 92CE A7               and a
 187+ 92CF 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 92D0 28 1E            jr z,3F
 189+ 92D2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 92D4              ;                                                    ; _salimos sin modificar nada.
 191+ 92D4 18 0E            jr 2F
 192+ 92D6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 92D7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 92D9
 195+ 92D9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 92D9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 92D9
 198+ 92D9 3A FD 87         ld a,(Coordenada_X)
 199+ 92DC 16 10            ld d,Centro_derecha
 200+ 92DE A7               and a
 201+ 92DF 92               sub d
 202+ 92E0 28 0E            jr z,3F
 203+ 92E2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 92E4              ;                                                    ; _salimos sin modificar nada.
 205+ 92E4 CB 43        2 bit 0,e
 206+ 92E6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 92E8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 92E9 CD 7D 93         call Modificaccionne
 209+ 92EC C1           	pop bc
 210+ 92ED CD 8D 93         call Inicializacion
 211+ 92F0 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 92F1
 213+ 92F1              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 92F1
 215+ 92F1 C5           4 push bc
 216+ 92F2 01 F8 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 92F5 0A           	ld a,(bc)
 218+ 92F6 3D           	dec a
 219+ 92F7 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 92F8 7D           	ld a,l
 221+ 92F9 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 92FA CB 47        	bit 0,a
 223+ 92FC 28 03        	jr z,5F
 224+ 92FE 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 92FF 18 2E        	jr 7F
 226+ 9301
 227+ 9301              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9301
 229+ 9301 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9302 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9303 3A 19 88     	ld a,(Ctrl_0)
 232+ 9306 CB 4F        	bit 1,a
 233+ 9308 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 930A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 930B
 236+ 930B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 930B
 238+ 930B 1C               inc e
 239+ 930C 1D               dec e
 240+ 930D 20 07            jr nz,12F
 241+ 930F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9310 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9311 22 F9 87     	ld (Posicion_actual),hl
 244+ 9314 18 44        13 jr 9F
 245+ 9316 CB 43        12 bit 0,e
 246+ 9318 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 931A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 931A C1           	pop bc
 249+ 931B 18 D3        	jr 3B
 250+ 931D 80           14 add b
 251+ 931E 6F               ld l,a
 252+ 931F 22 F9 87     	ld (Posicion_actual),hl
 253+ 9322 CD 7D 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9325 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9327 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9329 32 19 88         ld (Ctrl_0),a
 257+ 932C F1           	pop af
 258+ 932D 18 2B        	jr 9F
 259+ 932F
 260+ 932F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 932F
 262+ 932F F5           7 push af
 263+ 9330 3A 19 88     	ld a,(Ctrl_0)
 264+ 9333 CB 47        	bit 0,a
 265+ 9335 20 1D        	jr nz,8F
 266+ 9337 F1           	pop af
 267+ 9338
 268+ 9338              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9338
 270+ 9338 1C           	inc e
 271+ 9339 1D               dec e
 272+ 933A 20 07            jr nz,10F
 273+ 933C 90           	sub b
 274+ 933D 6F               ld l,a
 275+ 933E 22 F9 87     	ld (Posicion_actual),hl
 276+ 9341 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9343              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9343 CB 43        10 bit 0,e
 279+ 9345 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9347              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9347 C1           	pop bc
 282+ 9348 18 A6        	jr 3B
 283+ 934A 90           16 sub b
 284+ 934B 6F               ld l,a
 285+ 934C 22 F9 87     	ld (Posicion_actual),hl
 286+ 934F CD 7D 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9352 18 06            jr 9F
 288+ 9354 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9356 32 19 88         ld (Ctrl_0),a
 290+ 9359 F1           	pop af
 291+ 935A C1           9 pop bc
 292+ 935B 1E 00        	ld e,0
 293+ 935D CD 8D 93         call Inicializacion
 294+ 9360 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9361 08           	ex af,af
 296+ 9362 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9363 18 8B            jr 3B
 298+ 9365
 299+ 9365              ; --------------------
 300+ 9365
 301+ 9365 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9367 CD F4 94     1 call PreviousScan
 303+ 936A 10 FB            djnz 1B
 304+ 936C 22 F9 87     	ld (Posicion_actual),hl
 305+ 936F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9370 C9           	ret
 307+ 9371
 308+ 9371              ; --------------------
 309+ 9371
 310+ 9371 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9373 CD E5 94     1 call NextScan
 312+ 9376 10 FB            djnz 1B
 313+ 9378 22 F9 87     	ld (Posicion_actual),hl
 314+ 937B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 937C C9           	ret
 316+ 937D
 317+ 937D              ; --------------------
 318+ 937D              ;
 319+ 937D              ;	22/01/23
 320+ 937D              ;
 321+ 937D              ;	E="1". Hemos cambiado de cuadrante.
 322+ 937D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 937D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 937D
 325+ 937D
 326+ 937D              Modificaccionne
 327+ 937D
 328+ 937D 3A 0B 88     	ld a,(Cuad_objeto)
 329+ 9380 FE 02        	cp 2
 330+ 9382 CC 65 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9385 DC 65 93         call c,Modifica_Pos_actual
 332+ 9388 C8           	ret z
 333+ 9389 CD 71 93         call Modifica_Pos_actual2
 334+ 938C C9               ret
 335+ 938D
 336+ 938D              ; *************************************************************************************************************************************************************************************************
 337+ 938D              ;
 338+ 938D              ;	13/8/22
 339+ 938D              ;
 340+ 938D              ;	Inicializacion
 341+ 938D              ;
 342+ 938D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 938D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 938D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 938D              ;
 346+ 938D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 938D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 938D              ;	_ desaparece/aparece.
 349+ 938D
 350+ 938D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 938D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 938D              ;
 353+ 938D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 938D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 938D              ; 		   [E] ="0"
 356+ 938D
 357+ 938D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 938D
 359+ 938D CD F8 97     Inicializacion call calcula_tercio
 360+ 9390 28 36        	jr z,primit
 361+ 9392 E6 02        	and 2
 362+ 9394 20 07        	jr nz,segmit
 363+ 9396 7D           	ld a,l
 364+ 9397 FE 7F        	cp $7f
 365+ 9399 38 2D        	jr c,primit
 366+ 939B 28 2B        	jr z,primit
 367+ 939D CD 03 94     segmit call column
 368+ 93A0 38 13        	jr c,tercuad
 369+ 93A2 3E 04        cuarcuad ld a,4
 370+ 93A4 32 0B 88     	ld (Cuad_objeto),a
 371+ 93A7 21 20 48     	ld hl,$4820
 372+ 93AA 22 1B 88     	ld (Limite_horizontal),hl
 373+ 93AD 21 1D 88     	ld hl,Limite_vertical
 374+ 93B0 36 0D        	ld (hl),$0d
 375+ 93B2 08           	ex af,af
 376+ 93B3 18 3C        	jr 1F
 377+ 93B5              tercuad
 378+ 93B5 3E 03        	ld a,3
 379+ 93B7 32 0B 88     	ld (Cuad_objeto),a
 380+ 93BA 21 20 48     	ld hl,$4820
 381+ 93BD 22 1B 88     	ld (Limite_horizontal),hl
 382+ 93C0 21 1D 88     	ld hl,Limite_vertical
 383+ 93C3 36 12        	ld (hl),$12
 384+ 93C5 08           	ex af,af
 385+ 93C6 18 29        	jr 1F
 386+ 93C8 CD 03 94     primit call column
 387+ 93CB 38 13        	jr c, primcuad
 388+ 93CD              segcuad
 389+ 93CD 3E 02        	ld a,2
 390+ 93CF 32 0B 88     	ld (Cuad_objeto),a
 391+ 93D2 21 C0 4F     	ld hl,$4fc0
 392+ 93D5 22 1B 88     	ld (Limite_horizontal),hl
 393+ 93D8 21 1D 88     	ld hl,Limite_vertical
 394+ 93DB 36 0D        	ld (hl),$0d
 395+ 93DD 08           	ex af,af
 396+ 93DE 18 11        	jr 1F
 397+ 93E0              primcuad
 398+ 93E0 3E 01        	ld a,1
 399+ 93E2 32 0B 88     	ld (Cuad_objeto),a
 400+ 93E5 21 C0 4F     	ld hl,$4fc0
 401+ 93E8 22 1B 88     	ld (Limite_horizontal),hl
 402+ 93EB 21 1D 88     	ld hl,Limite_vertical
 403+ 93EE 36 12        	ld (hl),$12
 404+ 93F0 08           	ex af,af
 405+ 93F1
 406+ 93F1 C5           1 push bc
 407+ 93F2 E5           	push hl
 408+ 93F3 D5           	push de
 409+ 93F4
 410+ 93F4 2A F9 87     	ld hl,(Posicion_actual)
 411+ 93F7 CD 90 9B     	call Genera_coordenadas
 412+ 93FA
 413+ 93FA D1           	pop de
 414+ 93FB E1           	pop hl
 415+ 93FC C1           	pop bc
 416+ 93FD
 417+ 93FD 21 19 88     	ld hl,Ctrl_0
 418+ 9400 CB EE        	set 5,(hl)
 419+ 9402 C9           	ret
 420+ 9403
 421+ 9403              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9403
 423+ 9403              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9403              ;
 425+ 9403              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9403
 427+ 9403 7D           column ld a,l
 428+ 9404 E6 1F        	and $1f
 429+ 9406 FE 10         	cp $10
 430+ 9408 C9            	ret
 431+ 9409
 432+ 9409              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9409              ;
 434+ 9409              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9409              ;
 436+ 9409              ; 14/12/22
 437+ 9409              ;
 438+ 9409              ;	Modifica: A y BC.
 439+ 9409
 440+ 9409 3A 0B 88     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 940C E6 01        	and 1
 442+ 940E 28 17        	jr z,1F
 443+ 9410
 444+ 9410              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9410
 446+ 9410 3A FD 87     	ld a,(Coordenada_X)
 447+ 9413 47           	ld b,a
 448+ 9414 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9415 79           	ld a,c
 450+ 9416 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9417 38 08        	jr c,2F
 452+ 9419 47           	ld b,a
 453+ 941A 79           	ld a,c
 454+ 941B 90           	sub b
 455+ 941C 32 1A 88     	ld (Columnas),a
 456+ 941F 18 1B        	jr 4F
 457+ 9421 79           2 ld a,c
 458+ 9422 32 1A 88     	ld (Columnas),a
 459+ 9425 18 15        	jr 4F
 460+ 9427
 461+ 9427              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9427
 463+ 9427 3A FD 87     1 ld a,(Coordenada_X)
 464+ 942A 81           	add c
 465+ 942B 3D           	dec a
 466+ 942C D6 1F        	sub $1f
 467+ 942E 38 08        	jr c,3F
 468+ 9430 47           	ld b,a
 469+ 9431 79           	ld a,c
 470+ 9432 90           	sub b
 471+ 9433 32 1A 88     	ld (Columnas),a
 472+ 9436 18 04        	jr 4F
 473+ 9438 79           3 ld a,c
 474+ 9439 32 1A 88     	ld (Columnas),a
 475+ 943C D9           4 exx
 476+ 943D 4F           	ld c,a
 477+ 943E D9           	exx
 478+ 943F C9            ret
 479+ 9440
 480+ 9440              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9440              ;
 482+ 9440              ;   19/7/23
 483+ 9440              ;
 484+ 9440              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9440              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9440              ;
 487+ 9440              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9440              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9440              ;
 490+ 9440              ;	DESTRUYE: HL,B Y A.
 491+ 9440
 492+ 9440 3A 0B 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9443 FE 02        	cp 2
 494+ 9445 38 18        	jr c,1F
 495+ 9447 28 16        	jr z,1F
 496+ 9449 E6 01        	and 1
 497+ 944B 28 0D        	jr z,3F
 498+ 944D
 499+ 944D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 944D
 501+ 944D CD 93 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9450
 503+ 9450 7D           9 ld a,l
 504+ 9451 E6 1F        	and $1f
 505+ 9453 28 2A        	jr z,7F
 506+ 9455 2B           	dec hl
 507+ 9456 10 F8        	djnz 9B
 508+ 9458 18 25        	jr 7F
 509+ 945A
 510+ 945A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 945A
 512+ 945A 2A F9 87     3 ld hl,(Posicion_actual)
 513+ 945D 18 20        	jr 7F
 514+ 945F
 515+ 945F 28 14        1 jr z,2F
 516+ 9461
 517+ 9461              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9461
 519+ 9461 CD 93 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9464
 521+ 9464 7D           4 ld a,l
 522+ 9465 E6 1F        	and $1f
 523+ 9467 28 03        	jr z,6F
 524+ 9469 2B           	dec hl
 525+ 946A 10 F8        	djnz 4B
 526+ 946C 06 0F        6 ld b,15
 527+ 946E CD F4 94     5 call PreviousScan
 528+ 9471 10 FB        	djnz 5B
 529+ 9473 18 0A        	jr 7F
 530+ 9475
 531+ 9475              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9475
 533+ 9475 CD 93 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9478 06 0F        	ld b,15
 535+ 947A CD F4 94     8 call PreviousScan
 536+ 947D 10 FB        	djnz 8B
 537+ 947F
 538+ 947F E5           7 push hl
 539+ 9480 DD E1        	pop ix
 540+ 9482
 541+ 9482 2A FB 87     	ld hl,(Puntero_objeto)
 542+ 9485 E5           	push hl
 543+ 9486 FD E1        	pop iy
 544+ 9488
 545+ 9488              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9488
 547+ 9488 3A 19 88     	ld a,(Ctrl_0)
 548+ 948B CB 77        	bit 6,a
 549+ 948D C8           	ret z
 550+ 948E
 551+ 948E              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 948E              ; _ entidad / Amadeus´.
 553+ 948E
 554+ 948E DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 9492
 556+ 9492 C9           	ret
 557+ 9493
 558+ 9493              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9493              ;
 560+ 9493              ;	2/1/23
 561+ 9493              ;
 562+ 9493              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9493              ;
 564+ 9493              ;	Tras esta rutina tenemos:
 565+ 9493              ;
 566+ 9493              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9493              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9493              ;
 569+ 9493              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9493
 571+ 9493 2A F9 87     Operandos ld hl,(Posicion_actual)
 572+ 9496 3A 1A 88     	ld a,(Columnas)
 573+ 9499 3D           	dec a
 574+ 949A 20 01        	jr nz,1F
 575+ 949C 3C           	inc a
 576+ 949D 47           1 ld b,a
 577+ 949E C9           	ret
 578+ 949F
 579+ 949F              ; --------------------------------------------------------------------------------------------------------------------
 580+ 949F              ;
 581+ 949F              ;	3/1/23
 582+ 949F              ;
 583+ 949F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 949F              ;
 585+ 949F              ;	Destruye: A,B,HL y DE.
 586+ 949F
 587+ 949F              Define_rutina_de_impresion
 588+ 949F
 589+ 949F 3A F8 87     	ld a,(Columns)
 590+ 94A2 47           	ld b,a
 591+ 94A3 3A 1A 88     	ld a,(Columnas)
 592+ 94A6 B8           	cp b
 593+ 94A7 20 0D        	jr nz,2f
 594+ 94A9
 595+ 94A9              ;	La entidad se imprime entera.
 596+ 94A9
 597+ 94A9 21 C8 95     	ld hl, Indice_entidades_completas
 598+ 94AC E6 01        	and 1
 599+ 94AE 28 02        	jr z,1F
 600+ 94B0
 601+ 94B0 23           	inc hl
 602+ 94B1 23           	inc hl
 603+ 94B2
 604+ 94B2 CD C1 8B     1 call Extrae_address
 605+ 94B5 C9           	ret		;	ret
 606+ 94B6
 607+ 94B6              ;	La entidad no se imprime entera en pantalla.
 608+ 94B6
 609+ 94B6 3A 0B 88     2 ld a,(Cuad_objeto)
 610+ 94B9 E6 01        	and 1
 611+ 94BB 28 17        	jr z,3F
 612+ 94BD
 613+ 94BD              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 94BD
 615+ 94BD 21 CC 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 94C0 3A F8 87     4 ld a,(Columns)
 617+ 94C3 E6 01        	and 1
 618+ 94C5 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 94C7
 620+ 94C7 23           	inc hl
 621+ 94C8 23           	inc hl
 622+ 94C9
 623+ 94C9 3A 1A 88     	ld a,(Columnas)
 624+ 94CC E6 01        	and 1
 625+ 94CE 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 94D0
 627+ 94D0 23           	inc hl
 628+ 94D1 23           	inc hl
 629+ 94D2
 630+ 94D2 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 94D4
 632+ 94D4 21 D2 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 94D7 18 E7        	jr 4B
 634+ 94D9
 635+ 94D9              ; --------------------------------------------------------------------------------------------------------------------
 636+ 94D9              ;
 637+ 94D9              ;	Prepara_draw
 638+ 94D9              ;
 639+ 94D9              ;	Es una rutina de carga.
 640+ 94D9              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 94D9              ;
 642+ 94D9              ;	FUNCIONAMIENTO:
 643+ 94D9              ;
 644+ 94D9              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 94D9              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 94D9              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 94D9              ;
 648+ 94D9              ;	DESTRUYE:
 649+ 94D9              ;
 650+ 94D9              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 94D9
 652+ 94D9 21 F7 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 94DC 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 94DD 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 94DE 4E           	ld c,(hl)
 656+ 94DF 2A F9 87     	ld hl,(Posicion_actual)
 657+ 94E2 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 94E4 C9           	ret
 659+ 94E5
 660+ 94E5              ;----------------------------------------------------------------------------------------------------------------
 661+ 94E5              ;
 662+ 94E5              ;	5/08/22
 663+ 94E5              ;
 664+ 94E5              ;   NextScan.
 665+ 94E5              ;
 666+ 94E5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 94E5              ;
 668+ 94E5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 94E5              ;
 670+ 94E5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 94E5              ;
 672+ 94E5              ;       DESTRUIDOS: AF y HL !!!
 673+ 94E5              ;
 674+ 94E5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 94E5              ;
 676+ 94E5
 677+ 94E5 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 94E6 7C               ld a,h
 679+ 94E7 E6 07            and 7
 680+ 94E9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 94EA
 682+ 94EA 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 94EB C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 94ED 6F               ld l,a
 685+ 94EE D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 94EF
 687+ 94EF 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 94F0 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 94F2 67               ld h,a
 690+ 94F3 C9               ret
 691+ 94F4
 692+ 94F4              ;----------------------------------------------------------------------------------------------------------------
 693+ 94F4              ;
 694+ 94F4              ;	5/08/22
 695+ 94F4              ;
 696+ 94F4              ;   PreviousScan.
 697+ 94F4              ;
 698+ 94F4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 94F4              ;
 700+ 94F4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 94F4              ;
 702+ 94F4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 94F4              ;
 704+ 94F4              ;       DESTRUIDOS: AF y HL !!!
 705+ 94F4              ;
 706+ 94F4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 94F4              ;
 708+ 94F4
 709+ 94F4 7C           PreviousScan ld a,h
 710+ 94F5 25               dec h               ; Dec H.
 711+ 94F6 E6 07            and 7
 712+ 94F8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 94F9
 714+ 94F9 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 94FA D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 94FC 6F               ld l,a
 717+ 94FD D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 94FE
 719+ 94FE 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 94FF C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9501 67               ld h,a
 722+ 9502 C9               ret
 723+ 9503
 724+ 9503              ; -----------------------------------------------------------------------------------
 725+ 9503              ;
 726+ 9503              ;	31/7/23
 727+ 9503              ;
 728+ 9503              ;	Rutina principal de pintado de entidades.
 729+ 9503              ;	Extrae la foto del frame, (entidades).
 730+ 9503
 731+ 9503              Extrae_foto_entidades
 732+ 9503
 733+ 9503 21 01 70     	ld hl,Album_de_fotos+1
 734+ 9506 7E           	ld a,(hl)
 735+ 9507 A7           	and a
 736+ 9508 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9509
 738+ 9509              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9509
 740+ 9509 3A 44 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 950C A7           	and a
 742+ 950D C8           	ret z
 743+ 950E
 744+ 950E              ; -----------------------------------
 745+ 950E
 746+ 950E ED 73 49 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9512 31 00 70     	ld sp,Album_de_fotos
 748+ 9515
 749+ 9515 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9517 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9518 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9519
 753+ 9519 ED 73 4B 88  	ld (Stack_2),sp
 754+ 951D ED 7B 49 88  	ld sp,(Stack)
 755+ 9521
 756+ 9521              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9521
 758+ 9521 3E CD        	ld a,$cd
 759+ 9523 32 2B 95     	ld (Imprime),a
 760+ 9526 EB           	ex de,hl
 761+ 9527 22 2C 95     	ld (Imprime+1),hl
 762+ 952A EB           	ex de,hl
 763+ 952B
 764+ 952B              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 952B
 766+ 952B 00 00 00     Imprime db 0,0,0
 767+ 952E
 768+ 952E ED 73 49 88  	ld (Stack),sp
 769+ 9532
 770+ 9532 3A 44 88     	ld a,(Numero_de_malotes)
 771+ 9535 3D           	dec a
 772+ 9536 28 09        	jr z,1F
 773+ 9538 32 44 88      	ld (Numero_de_malotes),a
 774+ 953B
 775+ 953B ED 7B 4B 88  	ld sp,(Stack_2)
 776+ 953F 18 D4        	jr 2B
 777+ 9541
 778+ 9541 AF           1 xor a
 779+ 9542 32 4B 88     	ld (Stack_2),a
 780+ 9545
 781+ 9545 C9           	ret
 782+ 9546
 783+ 9546              ; -----------------------------------------------------------------------------------
 784+ 9546              ;
 785+ 9546              ;	28/2/23
 786+ 9546              ;
 787+ 9546              ;	Pinta los disparos generados.
 788+ 9546
 789+ 9546              Extrae_foto_disparos
 790+ 9546
 791+ 9546 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 9549 7E               ld a,(hl)
 793+ 954A A7               and a
 794+ 954B C8               ret z
 795+ 954C
 796+ 954C 3A 59 88     	ld a,(Numero_de_disparotes)
 797+ 954F A7           	and a
 798+ 9550 C8           	ret z
 799+ 9551 ED 73 49 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9555 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 9558
 802+ 9558 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 955A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 955B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 955C
 806+ 955C ED 73 4B 88  	ld (Stack_2),sp
 807+ 9560 ED 7B 49 88  	ld sp,(Stack)
 808+ 9564
 809+ 9564              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9564
 811+ 9564 3E CD        	ld a,$cd
 812+ 9566 32 6E 95     	ld (Imprime2),a
 813+ 9569 EB           	ex de,hl
 814+ 956A 22 6F 95     	ld (Imprime2+1),hl
 815+ 956D EB           	ex de,hl
 816+ 956E
 817+ 956E              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 956E
 819+ 956E 00 00 00     Imprime2 db 0,0,0
 820+ 9571
 821+ 9571 3A 59 88     	ld a,(Numero_de_disparotes)
 822+ 9574 3D           	dec a
 823+ 9575 28 09        	jr z,1F
 824+ 9577 32 59 88      	ld (Numero_de_disparotes),a
 825+ 957A
 826+ 957A ED 7B 4B 88  	ld sp,(Stack_2)
 827+ 957E 18 D8        	jr 2B
 828+ 9580
 829+ 9580 AF           1 xor a
 830+ 9581 32 4B 88     	ld (Stack_2),a
 831+ 9584 C9           	ret
 832+ 9585
 833+ 9585              ; -----------------------------------------------------------------------------------
 834+ 9585              ;
 835+ 9585              ;	4/9/23
 836+ 9585              ;
 837+ 9585              ;	Rutina principal de pintado de Amadeus.
 838+ 9585              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9585
 840+ 9585 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9588 7E           	ld a,(hl)
 842+ 9589 A7           	and a
 843+ 958A C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 958B
 845+ 958B 3A 44 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 958E A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 958F C8           	ret z
 848+ 9590
 849+ 9590              ; -----------------------------------
 850+ 9590
 851+ 9590 ED 73 49 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9594 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 9597
 854+ 9597 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9599 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 959A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 959B
 858+ 959B ED 73 4B 88  	ld (Stack_2),sp
 859+ 959F ED 7B 49 88  	ld sp,(Stack)
 860+ 95A3
 861+ 95A3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 95A3
 863+ 95A3 3E CD        	ld a,$cd
 864+ 95A5 32 AD 95     	ld (Imprime_Amadeus),a
 865+ 95A8 EB           	ex de,hl
 866+ 95A9 22 AE 95     	ld (Imprime_Amadeus+1),hl
 867+ 95AC EB           	ex de,hl
 868+ 95AD
 869+ 95AD              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 95AD
 871+ 95AD 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 95B0
 873+ 95B0 ED 73 49 88  	ld (Stack),sp
 874+ 95B4
 875+ 95B4 3A 44 88     	ld a,(Numero_de_malotes)
 876+ 95B7 3D           	dec a
 877+ 95B8 28 09        	jr z,1F
 878+ 95BA 32 44 88      	ld (Numero_de_malotes),a
 879+ 95BD
 880+ 95BD ED 7B 4B 88  	ld sp,(Stack_2)
 881+ 95C1 18 D4        	jr 2B
 882+ 95C3
 883+ 95C3 AF           1 xor a
 884+ 95C4 32 4B 88     	ld (Stack_2),a
 885+ 95C7
 886+ 95C7 C9           	ret
# file closed: Draw_XOR.asm
1796  95C8              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95C8              ;   índices de Rutinas de impresión.
   2+ 95C8
   3+ 95C8 D8 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95CA 05 96            defw Pinta_Amadeus_3x2
   5+ 95CC
   6+ 95CC 5B 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95CE FB 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95D0 AF 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95D2
  10+ 95D2 85 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95D4 89 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95D6 3D 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95D8
  14+ 95D8
  15+ 95D8              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95D8              ;
  17+ 95D8              ;   12/12/22
  18+ 95D8              ;
  19+ 95D8              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95D8              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95D8              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95D8              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95D8              ;
  24+ 95D8              ;   Modifica: DE y HL.
  25+ 95D8
  26+ 95D8 ED 73 49 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95DC FD F9        	ld sp,iy
  28+ 95DE 06 10            ld b,16
  29+ 95E0 D1           1 pop de
  30+ 95E1 7B               ld a,e
  31+ 95E2 AE               xor (hl)
  32+ 95E3 77           	ld (hl),a
  33+ 95E4 23           	inc hl
  34+ 95E5 7A               ld a,d
  35+ 95E6 AE               xor (hl)
  36+ 95E7 77           	ld (hl),a
  37+ 95E8 2B           	dec hl
  38+ 95E9 24           	inc h
  39+ 95EA 7C               ld a,h
  40+ 95EB E6 07            and 7
  41+ 95ED 20 0A            jr nz,2F
  42+ 95EF 7D               ld a,l
  43+ 95F0 C6 20            add a,$20
  44+ 95F2 6F               ld l,a
  45+ 95F3 38 04            jr c,2F
  46+ 95F5 7C               ld a,h
  47+ 95F6 D6 08            sub 8
  48+ 95F8 67               ld h,a
  49+ 95F9 7C           2 ld a,h
  50+ 95FA FE 58            cp $58
  51+ 95FC 28 02            jr z,3F
  52+ 95FE 10 E0            djnz 1B
  53+ 9600 ED 7B 49 88  3 ld sp,(Stack)
  54+ 9604 C9           	ret
  55+ 9605
  56+ 9605 ED 73 49 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9609 FD F9        	ld sp,iy
  58+ 960B 06 08            ld b,8
  59+ 960D D1           1 pop de
  60+ 960E 7B               ld a,e
  61+ 960F AE               xor (hl)
  62+ 9610 77           	ld (hl),a
  63+ 9611 23           	inc hl
  64+ 9612 7A               ld a,d
  65+ 9613 AE               xor (hl)
  66+ 9614 77           	ld (hl),a
  67+ 9615 23           	inc hl
  68+ 9616 D1           	pop de
  69+ 9617 7B               ld a,e
  70+ 9618 AE               xor (hl)
  71+ 9619 77           	ld (hl),a
  72+ 961A 2B           	dec hl
  73+ 961B 2B           	dec hl
  74+ 961C 24           	inc h
  75+ 961D 7C               ld a,h
  76+ 961E E6 07            and 7
  77+ 9620 20 0A            jr nz,2F
  78+ 9622 7D               ld a,l
  79+ 9623 C6 20            add a,$20
  80+ 9625 6F               ld l,a
  81+ 9626 38 04            jr c,2F
  82+ 9628 7C               ld a,h
  83+ 9629 D6 08            sub 8
  84+ 962B 67               ld h,a
  85+ 962C 7C           2 ld a,h
  86+ 962D FE 58            cp $58
  87+ 962F 28 25            jr z,4F
  88+ 9631 7A               ld a,d
  89+ 9632 AE               xor (hl)
  90+ 9633 77               ld (hl),a
  91+ 9634 D1           	pop de
  92+ 9635 23           	inc hl
  93+ 9636 7B               ld a,e
  94+ 9637 AE               xor (hl)
  95+ 9638 77           	ld (hl),a
  96+ 9639 23           	inc hl
  97+ 963A 7A               ld a,d
  98+ 963B AE               xor (hl)
  99+ 963C 77           	ld (hl),a
 100+ 963D 2B           	dec hl
 101+ 963E 2B           	dec hl
 102+ 963F 24           	inc h
 103+ 9640 7C               ld a,h
 104+ 9641 E6 07            and 7
 105+ 9643 20 0A            jr nz,3F
 106+ 9645 7D               ld a,l
 107+ 9646 C6 20            add a,$20
 108+ 9648 6F               ld l,a
 109+ 9649 38 04            jr c,3F
 110+ 964B 7C               ld a,h
 111+ 964C D6 08            sub 8
 112+ 964E 67               ld h,a
 113+ 964F 7C           3 ld a,h
 114+ 9650 FE 58            cp $58
 115+ 9652 28 02            jr z,4F
 116+ 9654 10 B7            djnz 1B
 117+ 9656 ED 7B 49 88  4 ld sp,(Stack)
 118+ 965A C9           	ret
 119+ 965B
 120+ 965B              ; ---------------------------------------------------
 121+ 965B
 122+ 965B ED 73 49 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 965F FD F9        	ld sp,iy
 124+ 9661
 125+ 9661              ; >>>
 126+ 9661
 127+ 9661 06 10            ld b,16
 128+ 9663 D1           1 pop de
 129+ 9664 7A           	ld a,d
 130+ 9665 AE           	xor (hl)
 131+ 9666 77           	ld (hl),a
 132+ 9667 24           	inc h
 133+ 9668 7C               ld a,h
 134+ 9669 E6 07            and 7
 135+ 966B 20 0C            jr nz,2F
 136+ 966D 7D               ld a,l
 137+ 966E C6 20            add a,$20
 138+ 9670 6F               ld l,a
 139+ 9671 38 06            jr c,2F
 140+ 9673 7C               ld a,h
 141+ 9674 D6 08            sub 8
 142+ 9676 67               ld h,a
 143+ 9677 18 00            jr 2F
 144+ 9679 7C           2 ld a,h
 145+ 967A FE 58            cp $58
 146+ 967C 28 02            jr z,3F
 147+ 967E 10 E3            djnz 1B
 148+ 9680 ED 7B 49 88  3 ld sp,(Stack)
 149+ 9684 C9           	ret
 150+ 9685
 151+ 9685 ED 73 49 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9689 FD F9        	ld sp,iy
 153+ 968B
 154+ 968B              ; >>>
 155+ 968B
 156+ 968B 06 10            ld b,16
 157+ 968D D1           1 pop de
 158+ 968E 7B           	ld a,e
 159+ 968F AE           	xor (hl)
 160+ 9690 77           	ld (hl),a
 161+ 9691 24           	inc h
 162+ 9692 7C               ld a,h
 163+ 9693 E6 07            and 7
 164+ 9695 20 0C            jr nz,2F
 165+ 9697 7D               ld a,l
 166+ 9698 C6 20            add a,$20
 167+ 969A 6F               ld l,a
 168+ 969B 38 06            jr c,2F
 169+ 969D 7C               ld a,h
 170+ 969E D6 08            sub 8
 171+ 96A0 67               ld h,a
 172+ 96A1 18 00            jr 2F
 173+ 96A3 7C           2 ld a,h
 174+ 96A4 FE 58            cp $58
 175+ 96A6 28 02            jr z,3F
 176+ 96A8 10 E3            djnz 1B
 177+ 96AA ED 7B 49 88  3 ld sp,(Stack)
 178+ 96AE C9           	ret
 179+ 96AF
 180+ 96AF              ; ---------------------------------------------------
 181+ 96AF
 182+ 96AF ED 73 49 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96B3 FD F9        	ld sp,iy
 184+ 96B5 06 08            ld b,8
 185+ 96B7 D1           1 pop de
 186+ 96B8 7A           	ld a,d
 187+ 96B9 AE           	xor (hl)
 188+ 96BA 77           	ld (hl),a
 189+ 96BB 23           	inc hl
 190+ 96BC D1           	pop de
 191+ 96BD 7B           	ld a,e
 192+ 96BE AE           	xor (hl)
 193+ 96BF 77           	ld (hl),a
 194+ 96C0 2B           	dec hl
 195+ 96C1 24            	inc h
 196+ 96C2 7C               ld a,h
 197+ 96C3 E6 07            and 7
 198+ 96C5 20 0A            jr nz,2F
 199+ 96C7 7D               ld a,l
 200+ 96C8 C6 20            add a,$20
 201+ 96CA 6F               ld l,a
 202+ 96CB 38 04            jr c,2F
 203+ 96CD 7C               ld a,h
 204+ 96CE D6 08            sub 8
 205+ 96D0 67               ld h,a
 206+ 96D1 7C           2 ld a,h
 207+ 96D2 FE 58            cp $58
 208+ 96D4 28 20            jr z,4F
 209+ 96D6 D1               pop de
 210+ 96D7 7B           	ld a,e
 211+ 96D8 AE           	xor (hl)
 212+ 96D9 77           	ld (hl),a
 213+ 96DA 23           	inc hl
 214+ 96DB 7A           	ld a,d
 215+ 96DC AE           	xor (hl)
 216+ 96DD 77           	ld (hl),a
 217+ 96DE 2B           	dec hl
 218+ 96DF 24           	inc h
 219+ 96E0 7C               ld a,h
 220+ 96E1 E6 07            and 7
 221+ 96E3 20 0A            jr nz,3F
 222+ 96E5 7D               ld a,l
 223+ 96E6 C6 20            add a,$20
 224+ 96E8 6F               ld l,a
 225+ 96E9 38 04            jr c,3F
 226+ 96EB 7C               ld a,h
 227+ 96EC D6 08            sub 8
 228+ 96EE 67               ld h,a
 229+ 96EF 7C           3 ld a,h
 230+ 96F0 FE 58            cp $58
 231+ 96F2 28 02            jr z,4F
 232+ 96F4 10 C1            djnz 1B
 233+ 96F6 ED 7B 49 88  4 ld sp,(Stack)
 234+ 96FA C9           	ret
 235+ 96FB
 236+ 96FB ED 73 49 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96FF FD F9        	ld sp,iy
 238+ 9701 06 08            ld b,8
 239+ 9703 D1           1 pop de
 240+ 9704 D1           	pop de
 241+ 9705 7B           	ld a,e
 242+ 9706 AE           	xor (hl)
 243+ 9707 77           	ld (hl),a
 244+ 9708 24            	inc h
 245+ 9709 7C               ld a,h
 246+ 970A E6 07            and 7
 247+ 970C 20 0A            jr nz,2F
 248+ 970E 7D               ld a,l
 249+ 970F C6 20            add a,$20
 250+ 9711 6F               ld l,a
 251+ 9712 38 04            jr c,2F
 252+ 9714 7C               ld a,h
 253+ 9715 D6 08            sub 8
 254+ 9717 67               ld h,a
 255+ 9718 7C           2 ld a,h
 256+ 9719 FE 58            cp $58
 257+ 971B 28 1B            jr z,4F
 258+ 971D D1               pop de
 259+ 971E 7A           	ld a,d
 260+ 971F AE           	xor (hl)
 261+ 9720 77           	ld (hl),a
 262+ 9721 24           	inc h
 263+ 9722 7C               ld a,h
 264+ 9723 E6 07            and 7
 265+ 9725 20 0A            jr nz,3F
 266+ 9727 7D               ld a,l
 267+ 9728 C6 20            add a,$20
 268+ 972A 6F               ld l,a
 269+ 972B 38 04            jr c,3F
 270+ 972D 7C               ld a,h
 271+ 972E D6 08            sub 8
 272+ 9730 67               ld h,a
 273+ 9731 7C           3 ld a,h
 274+ 9732 FE 58            cp $58
 275+ 9734 28 02            jr z,4F
 276+ 9736 10 CB            djnz 1B
 277+ 9738 ED 7B 49 88  4 ld sp,(Stack)
 278+ 973C C9           	ret
 279+ 973D
 280+ 973D ED 73 49 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9741 FD F9        	ld sp,iy
 282+ 9743 06 08            ld b,8
 283+ 9745 D1           1 pop de
 284+ 9746 7B           	ld a,e
 285+ 9747 AE           	xor (hl)
 286+ 9748 77           	ld (hl),a
 287+ 9749 23           	inc hl
 288+ 974A 7A           	ld a,d
 289+ 974B AE           	xor (hl)
 290+ 974C 77           	ld (hl),a
 291+ 974D 2B           	dec hl
 292+ 974E 24             	inc h
 293+ 974F 7C               ld a,h
 294+ 9750 E6 07            and 7
 295+ 9752 20 0A            jr nz,2F
 296+ 9754 7D               ld a,l
 297+ 9755 C6 20            add a,$20
 298+ 9757 6F               ld l,a
 299+ 9758 38 04            jr c,2F
 300+ 975A 7C               ld a,h
 301+ 975B D6 08            sub 8
 302+ 975D 67               ld h,a
 303+ 975E 7C           2 ld a,h
 304+ 975F FE 58            cp $58
 305+ 9761 28 21            jr z,4F
 306+ 9763 D1               pop de
 307+ 9764 7A           	ld a,d
 308+ 9765 AE           	xor (hl)
 309+ 9766 77           	ld (hl),a
 310+ 9767 23           	inc hl
 311+ 9768 D1               pop de
 312+ 9769 7B           	ld a,e
 313+ 976A AE           	xor (hl)
 314+ 976B 77           	ld (hl),a
 315+ 976C 2B           	dec hl
 316+ 976D 24           	inc h
 317+ 976E 7C               ld a,h
 318+ 976F E6 07            and 7
 319+ 9771 20 0A            jr nz,3F
 320+ 9773 7D               ld a,l
 321+ 9774 C6 20            add a,$20
 322+ 9776 6F               ld l,a
 323+ 9777 38 04            jr c,3F
 324+ 9779 7C               ld a,h
 325+ 977A D6 08            sub 8
 326+ 977C 67               ld h,a
 327+ 977D 7C           3 ld a,h
 328+ 977E FE 58            cp $58
 329+ 9780 28 02            jr z,4F
 330+ 9782 10 C1            djnz 1B
 331+ 9784 ED 7B 49 88  4 ld sp,(Stack)
 332+ 9788 C9           	ret
 333+ 9789
 334+ 9789 ED 73 49 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 978D FD F9        	ld sp,iy
 336+ 978F 06 08            ld b,8
 337+ 9791 D1           1 pop de
 338+ 9792 7B           	ld a,e
 339+ 9793 AE           	xor (hl)
 340+ 9794 77           	ld (hl),a
 341+ 9795 24            	inc h
 342+ 9796 7C               ld a,h
 343+ 9797 E6 07            and 7
 344+ 9799 20 0A            jr nz,2F
 345+ 979B 7D               ld a,l
 346+ 979C C6 20            add a,$20
 347+ 979E 6F               ld l,a
 348+ 979F 38 04            jr c,2F
 349+ 97A1 7C               ld a,h
 350+ 97A2 D6 08            sub 8
 351+ 97A4 67               ld h,a
 352+ 97A5 7C           2 ld a,h
 353+ 97A6 FE 58            cp $58
 354+ 97A8 28 1C            jr z,4F
 355+ 97AA D1               pop de
 356+ 97AB 7A           	ld a,d
 357+ 97AC AE           	xor (hl)
 358+ 97AD 77           	ld (hl),a
 359+ 97AE 24           	inc h
 360+ 97AF 7C               ld a,h
 361+ 97B0 E6 07            and 7
 362+ 97B2 20 0A            jr nz,3F
 363+ 97B4 7D               ld a,l
 364+ 97B5 C6 20            add a,$20
 365+ 97B7 6F               ld l,a
 366+ 97B8 38 04            jr c,3F
 367+ 97BA 7C               ld a,h
 368+ 97BB D6 08            sub 8
 369+ 97BD 67               ld h,a
 370+ 97BE 7C           3 ld a,h
 371+ 97BF FE 58            cp $58
 372+ 97C1 28 03            jr z,4F
 373+ 97C3 D1               pop de
 374+ 97C4 10 CB            djnz 1B
 375+ 97C6 ED 7B 49 88  4 ld sp,(Stack)
 376+ 97CA C9           	ret
 377+ 97CB
 378+ 97CB              ; ---------------------------------------------------
 379+ 97CB              ;
 380+ 97CB              ;   27/02/23
 381+ 97CB              ;
 382+ 97CB              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97CB              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97CB              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97CB
 386+ 97CB ED 73 49 88  Pinta_Disparo ld (Stack),sp
 387+ 97CF FD F9            ld sp,iy
 388+ 97D1 06 03            ld b,3
 389+ 97D3 D1           1 pop de
 390+ 97D4 7B               ld a,e
 391+ 97D5 AE               xor (hl)
 392+ 97D6 77               ld (hl),a
 393+ 97D7 23               inc hl
 394+ 97D8 7A               ld a,d
 395+ 97D9 AE               xor (hl)
 396+ 97DA 77               ld (hl),a
 397+ 97DB 2B               dec hl
 398+ 97DC
 399+ 97DC 24               inc h
 400+ 97DD 7C               ld a,h
 401+ 97DE E6 07            and 7
 402+ 97E0 20 0A            jr nz,2F
 403+ 97E2 7D               ld a,l
 404+ 97E3 C6 20            add a,$20
 405+ 97E5 6F               ld l,a
 406+ 97E6 38 04            jr c,2F
 407+ 97E8 7C               ld a,h
 408+ 97E9 D6 08            sub 8
 409+ 97EB 67               ld h,a
 410+ 97EC 7C           2 ld a,h
 411+ 97ED FE 58            cp $58
 412+ 97EF 28 02            jr z,3F
 413+ 97F1
 414+ 97F1 10 E0            djnz 1B
 415+ 97F3 ED 7B 49 88  3 ld sp,(Stack)
 416+ 97F7 C9               ret
 417+ 97F8
# file closed: Rutinas_de_impresion_sprites.asm
1797  97F8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97F8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97F8              ;
   3+ 97F8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97F8              ;
   5+ 97F8              ; *****************************************************************************************************************************************************************************************
   6+ 97F8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97F8
   8+ 97F8 7C           calcula_tercio ld a,h
   9+ 97F9 E6 18        	and $18
  10+ 97FB CB 2F        	sra a
  11+ 97FD CB 2F        	sra a
  12+ 97FF CB 2F        	sra a
  13+ 9801 C9           	ret
  14+ 9802
# file closed: calcula_tercio.asm
1798  9802              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9802              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9802              ;
   3+ 9802              ;
   4+ 9802              ;	CLS.
   5+ 9802              ;
   6+ 9802              ;	Limpia la pantalla y define sus atributos.
   7+ 9802              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9802              ;
   9+ 9802              ;	COLORES: 0 ..... NEGRO
  10+ 9802              ;    		 1 ..... AZUL
  11+ 9802              ; 			 2 ..... ROJO
  12+ 9802              ;			 3 ..... MAGENTA
  13+ 9802              ; 			 4 ..... VERDE
  14+ 9802              ; 			 5 ..... CIAN
  15+ 9802              ;			 6 ..... AMARILLO
  16+ 9802              ; 			 7 ..... BLANCO
  17+ 9802              ;
  18+ 9802              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9802              ;
  20+ 9802              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9802
  22+ 9802
  23+ 9802 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9805 11 01 40     	LD DE,$4001
  25+ 9808 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 980B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 980D ED B0        	LDIR
  28+ 980F 01 FF 02     	LD BC,767
  29+ 9812 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9813 ED B0        	LDIR
  31+ 9815 C9           	ret
  32+ 9816
# file closed: Cls.asm
1799  9816              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9816
   2+ 9816              ; ******************************************************************************************************************************************************************************************
   3+ 9816              ;
   4+ 9816              ;   20/05/23
   5+ 9816              ;
   6+ 9816              ;	Recompone_posicion_inicio
   7+ 9816              ;
   8+ 9816              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9816              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9816              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9816              ;	_ a una u otra rutina.
  12+ 9816
  13+ 9816              Recompone_posicion_inicio
  14+ 9816
  15+ 9816 2A 09 88     	ld hl,(Posicion_inicio)
  16+ 9819 7D           	ld a,l
  17+ 981A E6 1F        	and $1f
  18+ 981C 28 16        	jr z,1F
  19+ 981E
  20+ 981E FE 1F        	cp $1f
  21+ 9820 28 0D        	jr z,3F
  22+ 9822
  23+ 9822 21 1E 88     	ld hl,Ctrl_2
  24+ 9825 CB C6        	set 0,(hl)
  25+ 9827 2A FB 87     	ld hl,(Puntero_objeto)
  26+ 982A 22 39 88     	ld (Repone_puntero_objeto),hl
  27+ 982D 18 08        	jr 2F
  28+ 982F
  29+ 982F CD DD 99     3 call Mov_left
  30+ 9832 18 03        	jr 2F
  31+ 9834
  32+ 9834 CD BA 98     1 call Mov_right
  33+ 9837 21 00 F0     2 ld hl,Sprite_vacio
  34+ 983A 22 FB 87     	ld (Puntero_objeto),hl
  35+ 983D C9           	ret
  36+ 983E
  37+ 983E              ; ******************************************************************************************************************************************************************************************
  38+ 983E              ;
  39+ 983E              ;   27/05/23
  40+ 983E              ;
  41+ 983E              ;	Mov_down
  42+ 983E              ;
  43+ 983E              ; 	Mueve el Sprite X px hacia abajo.
  44+ 983E              ;
  45+ 983E              ;
  46+ 983E              Mov_down
  47+ 983E
  48+ 983E CD A8 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9841              ;																	; _ repone (Puntero_objeto).
  50+ 9841 21 19 88     	ld hl,Ctrl_0
  51+ 9844 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9846              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9846              ; 																	; _ en el caso de que no lo haya.
  54+ 9846 3A 23 88     	ld a,(Vel_down)
  55+ 9849 47           	ld b,a
  56+ 984A 2A F9 87         ld hl,(Posicion_actual)
  57+ 984D CD F8 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9850 E6 02        	and 2
  59+ 9852 28 17        	jr z,1F
  60+ 9854
  61+ 9854              ; Nos encontramos en el último tercio de pantalla.
  62+ 9854              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9854
  64+ 9854 7C           	ld a,h
  65+ 9855 FE 57        	cp $57
  66+ 9857 20 12        	jr nz,1F
  67+ 9859
  68+ 9859 7D           	ld a,l
  69+ 985A C6 20        	add $20
  70+ 985C 30 0D        	jr nc,1F
  71+ 985E
  72+ 985E              ; ------------------------------
  73+ 985E              ;
  74+ 985E              ;	12/01/24
  75+ 985E
  76+ 985E              ;	call Reaparece_arriba
  77+ 985E CD 6A 9B     	call Reinicio
  78+ 9861
  79+ 9861              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9861
  81+ 9861 3A 57 88     	ld a,(Ctrl_3)
  82+ 9864 CB CF        	set 1,a
  83+ 9866 32 57 88     	ld (Ctrl_3),a
  84+ 9869
  85+ 9869 18 08        	jr 3F
  86+ 986B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 986B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 986B              ; ------------------------------
  89+ 986B
  90+ 986B CD E5 94     1 call NextScan
  91+ 986E 22 F9 87     	ld (Posicion_actual),hl
  92+ 9871 10 DA            djnz 2B
  93+ 9873 CD 90 9B     3 call Genera_coordenadas
  94+ 9876 C9           	ret
  95+ 9877
  96+ 9877              ; ******************************************************************************************************************************************************************************************
  97+ 9877              ;
  98+ 9877              ;   27/05/23
  99+ 9877              ;
 100+ 9877              ;	Mov_up
 101+ 9877              ;
 102+ 9877              ; 	Mueve el Sprite hacia arriba.
 103+ 9877              ;
 104+ 9877              ;
 105+ 9877              Mov_up
 106+ 9877
 107+ 9877 CD A8 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 987A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 987A 21 19 88     	ld hl,Ctrl_0
 110+ 987D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 987F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 987F              ; 																		; _ en el caso de que no lo haya.
 113+ 987F 3A 22 88     	ld a,(Vel_up)
 114+ 9882 47           	ld b,a
 115+ 9883 2A F9 87     	ld hl,(Posicion_actual)
 116+ 9886 CD F8 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9889 A7           	and a
 118+ 988A 20 10        	jr nz,1F
 119+ 988C
 120+ 988C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 988C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 988C
 123+ 988C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 988D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 988F 20 0B            jr nz,1F
 126+ 9891 7D               ld a,l
 127+ 9892 D6 20            sub $20
 128+ 9894 30 06            jr nc,1F
 129+ 9896 25               dec h
 130+ 9897
 131+ 9897              ; -----------------------------
 132+ 9897 CD 4B 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 989A              ;	call Reinicio
 134+ 989A              ; -----------------------------
 135+ 989A
 136+ 989A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 989C CD F4 94     1 call PreviousScan
 138+ 989F 22 F9 87     	ld (Posicion_actual),hl
 139+ 98A2 10 E2            djnz 3B
 140+ 98A4 CD 90 9B     2 call Genera_coordenadas
 141+ 98A7 C9           	ret
 142+ 98A8
 143+ 98A8              ; -----------------------------
 144+ 98A8              ;
 145+ 98A8              ;	27/5/23
 146+ 98A8              ;
 147+ 98A8              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 98A8              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 98A8              ;
 150+ 98A8              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 98A8              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 98A8              ;
 153+ 98A8              ;	Modifica: A y (Puntero_objeto).
 154+ 98A8
 155+ 98A8 3A 1E 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 98AB CB 47        	bit 0,a
 157+ 98AD C8           	ret z
 158+ 98AE CB 87        	res 0,a
 159+ 98B0 32 1E 88     	ld (Ctrl_2),a
 160+ 98B3 2A 39 88     	ld hl,(Repone_puntero_objeto)
 161+ 98B6 22 FB 87     	ld (Puntero_objeto),hl
 162+ 98B9 C9           	ret
 163+ 98BA
 164+ 98BA              ; ******************************************************************************************************************************************************************************************
 165+ 98BA              ;
 166+ 98BA              ;	19/10/22
 167+ 98BA              ;
 168+ 98BA              ;	Mov_right.
 169+ 98BA              ;
 170+ 98BA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 98BA              ;
 172+ 98BA
 173+ 98BA 3A 19 88     Mov_right ld a,(Ctrl_0)
 174+ 98BD CB 77        	bit 6,a
 175+ 98BF 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 98C1
 177+ 98C1 CD F9 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 98C4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 98C5
 180+ 98C5 21 19 88     	ld hl,Ctrl_0
 181+ 98C8 CB E6        	set 4,(hl)
 182+ 98CA 18 52        	jr 8F
 183+ 98CC
 184+ 98CC 21 19 88     10 ld hl,Ctrl_0
 185+ 98CF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 98D1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 98D1              ; 																	; _ en el caso de que no lo haya.
 188+ 98D1 3A FD 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 98D4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 98D6 20 46        	jr nz,8F
 191+ 98D8
 192+ 98D8 3A FF 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 98DB A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 98DC 28 40        	jr z,8F
 195+ 98DE
 196+ 98DE              ; ---------- ---------- ----------
 197+ 98DE              ;
 198+ 98DE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98DE
 200+ 98DE 3A 21 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 98E1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98E3 28 11        	jr z,1F
 203+ 98E5 38 06        	jr c,6F
 204+ 98E7 FE 04        	cp 4
 205+ 98E9 28 14        	jr z,7F
 206+ 98EB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 98ED
 208+ 98ED              ; ---------- ---------- ----------
 209+ 98ED              ;
 210+ 98ED              ; Perfiles de velocidad
 211+ 98ED              ;
 212+ 98ED
 213+ 98ED 3A FF 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 98F0 FE FE        	cp $fe
 215+ 98F2 20 2A        	jr nz,8F
 216+ 98F4 18 10        	jr 3F
 217+ 98F6 3A FF 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 98F9 FE FD        	cp $fd
 219+ 98FB 20 21        	jr nz,8F
 220+ 98FD 18 07        	jr 3F
 221+ 98FF 3A FF 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9902 FE FB        	cp $fb
 223+ 9904 20 18        	jr nz,8F
 224+ 9906
 225+ 9906              ; ---------- ---------- ----------
 226+ 9906
 227+ 9906              3
 228+ 9906 CD 39 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9909              ;	call Reinicio
 230+ 9909
 231+ 9909              ; ---------- ---------- ----------
 232+ 9909              ;
 233+ 9909              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9909
 235+ 9909 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 990B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 990C CD 25 99     	call DESPLZ_DER
 238+ 990F C1           	pop bc
 239+ 9910 10 F9        	djnz 5B
 240+ 9912 2A F9 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9915 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9916 22 F9 87     	ld (Posicion_actual),hl
 243+ 9919 CD 90 9B     	call Genera_coordenadas
 244+ 991C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 991E
 246+ 991E              ; ---------- ---------- ----------
 247+ 991E
 248+ 991E 2A F9 87     8 ld hl,(Posicion_actual)
 249+ 9921 CD 25 99     	call DESPLZ_DER
 250+ 9924 C9           2 ret
 251+ 9925
 252+ 9925              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9925              ;
 254+ 9925              ;	22/9/22
 255+ 9925              ;
 256+ 9925
 257+ 9925 CD 34 99     DESPLZ_DER call Desplaza_derecha
 258+ 9928 CD 80 99         call modifica_parametros_1er_DESPLZ_2
 259+ 992B CD A9 99         call Ciclo_completo
 260+ 992E 21 19 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9931 CB FE        	set 7,(hl)
 262+ 9933 C9           	ret
 263+ 9934
 264+ 9934              ; ******************************************************************************************************************************************************************************************
 265+ 9934              ;	15/02/23
 266+ 9934              ;
 267+ 9934
 268+ 9934 3A 21 88     Desplaza_derecha ld a,(Vel_right)
 269+ 9937 47           	ld b,a
 270+ 9938 2A 05 88     	ld hl,(Puntero_DESPLZ_der)
 271+ 993B 23           1 inc hl
 272+ 993C 23           	inc hl
 273+ 993D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 993F 22 05 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9942 CD C1 8B     	call Extrae_address
 276+ 9945 22 FB 87     	ld (Puntero_objeto),hl
 277+ 9948
 278+ 9948              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9948
 280+ 9948              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9948              ; Cuántos movimientos hemos hecho ??
 282+ 9948              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9948
 284+ 9948 2A 01 88     7 ld hl,(Indice_Sprite_der)
 285+ 994B EB           	ex de,hl
 286+ 994C A7           	and a
 287+ 994D ED 52        	sbc hl,de
 288+ 994F CB 3D        	srl l
 289+ 9951 3E 08        6 ld a,8
 290+ 9953 95           	sub l
 291+ 9954 30 1E        	jr nc,3F
 292+ 9956
 293+ 9956              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9956              ; B="0".
 295+ 9956
 296+ 9956 04           4 inc b
 297+ 9957 3C           	inc a
 298+ 9958 20 FC        	jr nz,4B
 299+ 995A 78           	ld a,b
 300+ 995B 08           	ex af,af
 301+ 995C 2A 01 88     	ld hl,(Indice_Sprite_der)
 302+ 995F 23           5 inc hl
 303+ 9960 23           	inc hl
 304+ 9961 10 FC        	djnz 5B
 305+ 9963 22 05 88     	ld (Puntero_DESPLZ_der),hl
 306+ 9966 CD C1 8B     	call Extrae_address
 307+ 9969 22 FB 87     	ld (Puntero_objeto),hl
 308+ 996C
 309+ 996C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 996C              ; _(Posicion_actual).
 311+ 996C
 312+ 996C 21 F9 87     	ld hl,Posicion_actual
 313+ 996F 34           	inc (hl)
 314+ 9970 08               ex af,af
 315+ 9971 6F           	ld l,a
 316+ 9972 18 DD        	jr 6B
 317+ 9974
 318+ 9974              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9974
 320+ 9974 47           3 ld b,a
 321+ 9975 2A 03 88     	ld hl,(Indice_Sprite_izq)
 322+ 9978 23           2 inc hl
 323+ 9979 23           	inc hl
 324+ 997A 10 FC        	djnz 2B
 325+ 997C 22 07 88     	ld (Puntero_DESPLZ_izq),hl
 326+ 997F C9           8 ret
 327+ 9980
 328+ 9980              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9980              ;
 330+ 9980              ;	24/7/22
 331+ 9980              ;
 332+ 9980              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9980              ;
 334+ 9980              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9980              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9980              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9980
 338+ 9980 3A FF 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9983 A7           	and a
 340+ 9984 20 1F        	jr nz,1F
 341+ 9986 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9988 32 FF 87         ld (CTRL_DESPLZ),a
 343+ 998B
 344+ 998B 21 F8 87     	ld hl,Columns
 345+ 998E 34           	inc (hl)
 346+ 998F 3A 0B 88     	ld a,(Cuad_objeto)
 347+ 9992 E6 01        	and 1
 348+ 9994 28 0F        	jr z,1F
 349+ 9996 2A F9 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9999 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 999A 22 F9 87     	ld (Posicion_actual),hl
 352+ 999D CD 90 9B     	call Genera_coordenadas
 353+ 99A0 CD 05 9B     	call Inc_CTRL_DESPLZ
 354+ 99A3 18 03        	jr 2F
 355+ 99A5 CD 05 9B     1 call Inc_CTRL_DESPLZ
 356+ 99A8 C9           2 ret
 357+ 99A9
 358+ 99A9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 99A9              ;
 360+ 99A9              ;	24/7/22
 361+ 99A9              ;
 362+ 99A9              ;	Ciclo_completo.
 363+ 99A9              ;
 364+ 99A9              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 99A9              ;
 366+ 99A9              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 99A9              ; 	Decrementamos (Columns).
 368+ 99A9              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 99A9              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 99A9
 371+ 99A9
 372+ 99A9 3A FF 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 99AC FE FF        	cp $ff
 374+ 99AE 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 99B0 E6 F0        	and $f0
 376+ 99B2 20 28        	jr nz,3F
 377+ 99B4
 378+ 99B4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 99B4
 380+ 99B4 3A FF 87     	ld a,(CTRL_DESPLZ)
 381+ 99B7 47           	ld b,a
 382+ 99B8 3E F8        	ld a,$f8
 383+ 99BA 80           	add b
 384+ 99BB 32 FF 87     	ld (CTRL_DESPLZ),a
 385+ 99BE 18 1C        	jr 3F
 386+ 99C0 21 F8 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 99C3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 99C4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 99C5 32 FF 87     	ld (CTRL_DESPLZ),a
 390+ 99C8 3A 0B 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 99CB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 99CD 20 0A        	jr nz,2F
 393+ 99CF 2A F9 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 99D2 23           	inc hl
 395+ 99D3 22 F9 87     	ld (Posicion_actual),hl
 396+ 99D6 CD 90 9B     	call Genera_coordenadas
 397+ 99D9
 398+ 99D9              ; Inicia el puntero de Sprite.
 399+ 99D9
 400+ 99D9 CD D6 8B     2 call Inicia_puntero_objeto_der
 401+ 99DC C9           3 ret
 402+ 99DD
 403+ 99DD              ; ******************************************************************************************************************************************************************************************
 404+ 99DD              ;
 405+ 99DD              ;	15/02/23
 406+ 99DD              ;
 407+ 99DD              ;	Mov_left.
 408+ 99DD              ;
 409+ 99DD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 99DD              ;
 411+ 99DD              Mov_left
 412+ 99DD
 413+ 99DD 21 19 88     	ld hl,Ctrl_0
 414+ 99E0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99E2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99E2              ; 																	; _ en el caso de que no lo haya.
 417+ 99E2 3A 19 88     	ld a,(Ctrl_0)
 418+ 99E5 CB 77        	bit 6,a
 419+ 99E7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 99E9
 421+ 99E9 CD FF 9A     	call Stop_Amadeus_left
 422+ 99EC C8           	ret z
 423+ 99ED 20 4A        	jr nz,8F
 424+ 99EF
 425+ 99EF 3A FD 87     11 ld a,(Coordenada_X)
 426+ 99F2 A7           	and a
 427+ 99F3 20 44        	jr nz,8F
 428+ 99F5
 429+ 99F5 3A FF 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 99F8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 99F9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 99FB
 433+ 99FB              ; ---------- ---------- ----------
 434+ 99FB
 435+ 99FB 3A 20 88     	ld a,(Vel_left)
 436+ 99FE FE 02        	cp 2
 437+ 9A00 28 0F        	jr z,1F
 438+ 9A02 38 04        	jr c,6F
 439+ 9A04 FE 04        	cp 4
 440+ 9A06 28 12        	jr z,7F
 441+ 9A08
 442+ 9A08              ; ---------- ---------- ----------
 443+ 9A08
 444+ 9A08 3A FF 87     6 ld a,(CTRL_DESPLZ)
 445+ 9A0B FE F8        	cp $f8
 446+ 9A0D 20 2A        	jr nz,8F
 447+ 9A0F 18 10        	jr 4F
 448+ 9A11 3A FF 87     1 ld a,(CTRL_DESPLZ)
 449+ 9A14 FE F9        	cp $f9
 450+ 9A16 20 21        	jr nz,8F
 451+ 9A18 18 07        	jr 4F
 452+ 9A1A 3A FF 87     7 ld a,(CTRL_DESPLZ)
 453+ 9A1D FE FB        	cp $fb
 454+ 9A1F 20 18        	jr nz,8F
 455+ 9A21
 456+ 9A21              ; ---------- ---------- ----------
 457+ 9A21
 458+ 9A21              4
 459+ 9A21 CD 27 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9A24              ;	call Reinicio
 461+ 9A24
 462+ 9A24              ; ---------- ---------- ----------
 463+ 9A24
 464+ 9A24 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9A26 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9A27
 467+ 9A27              ;	ld hl,(Indice_Sprite_izq)
 468+ 9A27              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9A27
 470+ 9A27 CD 40 9A     	call DESPLZ_IZQ
 471+ 9A2A C1           	pop bc
 472+ 9A2B 10 F9        	djnz 5B
 473+ 9A2D 2A F9 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9A30 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9A31 22 F9 87     	ld (Posicion_actual),hl
 476+ 9A34 CD 90 9B     	call Genera_coordenadas
 477+ 9A37 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9A39
 479+ 9A39              ; ---------- ---------- ----------
 480+ 9A39
 481+ 9A39              ; Movemos, no hay recolocación.
 482+ 9A39
 483+ 9A39 2A F9 87     8 ld hl,(Posicion_actual)
 484+ 9A3C CD 40 9A     	call DESPLZ_IZQ
 485+ 9A3F C9           2 ret
 486+ 9A40
 487+ 9A40              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A40              ;
 489+ 9A40              ;	22/9/22
 490+ 9A40
 491+ 9A40              DESPLZ_IZQ
 492+ 9A40
 493+ 9A40 CD 4F 9A     	call Desplaza_izquierda
 494+ 9A43 CD 9B 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A46 CD C3 9A     	call Ciclo_completo_2
 496+ 9A49 21 19 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A4C CB BE        	res 7,(hl)
 498+ 9A4E C9           	ret
 499+ 9A4F
 500+ 9A4F              Desplaza_izquierda
 501+ 9A4F
 502+ 9A4F 3A 20 88     	ld a,(Vel_left)
 503+ 9A52 47           	ld b,a
 504+ 9A53 2A 07 88     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A56 23           1 inc hl
 506+ 9A57 23           	inc hl
 507+ 9A58 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A5A 22 07 88     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A5D CD C1 8B     	call Extrae_address
 510+ 9A60 22 FB 87     	ld (Puntero_objeto),hl
 511+ 9A63
 512+ 9A63              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A63
 514+ 9A63              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A63              ; Cuántos movimientos hemos hecho ??
 516+ 9A63              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A63
 518+ 9A63 2A 03 88     7 ld hl,(Indice_Sprite_izq)
 519+ 9A66 EB           	ex de,hl
 520+ 9A67 A7           	and a
 521+ 9A68 ED 52        	sbc hl,de
 522+ 9A6A CB 3D        	srl l
 523+ 9A6C 3E 08        6 ld a,8
 524+ 9A6E 95           	sub l
 525+ 9A6F 30 1E        	jr nc,3F
 526+ 9A71
 527+ 9A71              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A71              ; B="0".
 529+ 9A71
 530+ 9A71 04           4 inc b
 531+ 9A72 3C           	inc a
 532+ 9A73 20 FC        	jr nz,4B
 533+ 9A75 78           	ld a,b
 534+ 9A76 08           	ex af,af
 535+ 9A77 2A 03 88     	ld hl,(Indice_Sprite_izq)
 536+ 9A7A 23           5 inc hl
 537+ 9A7B 23           	inc hl
 538+ 9A7C 10 FC        	djnz 5B
 539+ 9A7E 22 07 88     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A81 CD C1 8B     	call Extrae_address
 541+ 9A84 22 FB 87     	ld (Puntero_objeto),hl
 542+ 9A87
 543+ 9A87              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A87              ; _(Posicion_actual).
 545+ 9A87
 546+ 9A87 21 F9 87     	ld hl,Posicion_actual
 547+ 9A8A 35           	dec (hl)
 548+ 9A8B 08           	ex af,af
 549+ 9A8C 6F           	ld l,a
 550+ 9A8D 18 DD        	jr 6B
 551+ 9A8F
 552+ 9A8F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A8F
 554+ 9A8F 47           3 ld b,a
 555+ 9A90 2A 01 88     	ld hl,(Indice_Sprite_der)
 556+ 9A93 23           2 inc hl
 557+ 9A94 23           	inc hl
 558+ 9A95 10 FC        	djnz 2B
 559+ 9A97 22 05 88     	ld (Puntero_DESPLZ_der),hl
 560+ 9A9A C9           8 ret
 561+ 9A9B
 562+ 9A9B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A9B              ;
 564+ 9A9B              ;	modifica_parametros_1er_DESPLZ
 565+ 9A9B              ;
 566+ 9A9B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A9B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A9B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A9B
 570+ 9A9B 3A FF 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A9E A7           	and a
 572+ 9A9F 20 1E        	jr nz,1F
 573+ 9AA1 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9AA2 32 FF 87         ld (CTRL_DESPLZ),a
 575+ 9AA5 21 F8 87     	ld hl,Columns
 576+ 9AA8 34           	inc (hl)
 577+ 9AA9 3A 0B 88     	ld a,(Cuad_objeto)
 578+ 9AAC E6 01        	and 1
 579+ 9AAE 20 0F        	jr nz,1F
 580+ 9AB0 2A F9 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9AB3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9AB4 22 F9 87     	ld (Posicion_actual),hl
 583+ 9AB7 CD 90 9B     	call Genera_coordenadas
 584+ 9ABA CD 16 9B     	call Dec_CTRL_DESPLZ
 585+ 9ABD 18 03        	jr 2F
 586+ 9ABF CD 16 9B     1 call Dec_CTRL_DESPLZ
 587+ 9AC2 C9           2 ret
 588+ 9AC3
 589+ 9AC3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9AC3
 591+ 9AC3 3A FF 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9AC6 FE F7        	cp $f7
 593+ 9AC8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9ACA 30 2C        	jr nc,3F
 595+ 9ACC
 596+ 9ACC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9ACC
 598+ 9ACC 06 00        	ld b,0
 599+ 9ACE 04           4 inc b
 600+ 9ACF 3C           	inc a
 601+ 9AD0 FE F7        	cp $f7
 602+ 9AD2 20 FA        	jr nz,4B
 603+ 9AD4 3E FF        	ld a,$ff
 604+ 9AD6 90           	sub b
 605+ 9AD7 32 FF 87     	ld (CTRL_DESPLZ),a
 606+ 9ADA 18 1C        	jr 3F
 607+ 9ADC
 608+ 9ADC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9ADC
 610+ 9ADC 21 F8 87     1 ld hl,Columns
 611+ 9ADF 35           	dec (hl)
 612+ 9AE0 AF           	xor a
 613+ 9AE1 32 FF 87     	ld (CTRL_DESPLZ),a
 614+ 9AE4 3A 0B 88     	ld a,(Cuad_objeto)
 615+ 9AE7 E6 01        	and 1
 616+ 9AE9 28 0A        	jr z,2F
 617+ 9AEB 2A F9 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9AEE 2B           	dec hl
 619+ 9AEF 22 F9 87     	ld (Posicion_actual),hl
 620+ 9AF2 CD 90 9B     	call Genera_coordenadas
 621+ 9AF5
 622+ 9AF5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9AF5
 624+ 9AF5 CD E9 8B     2 call Inicia_puntero_objeto_izq
 625+ 9AF8 C9           3 ret
 626+ 9AF9
 627+ 9AF9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9AF9              ;
 629+ 9AF9              ;	19/10/22
 630+ 9AF9              ;
 631+ 9AF9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9AF9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9AF9
 634+ 9AF9 3A FD 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9AFC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9AFE C9           	ret
 637+ 9AFF
 638+ 9AFF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9AFF              ;
 640+ 9AFF              ;	19/10/22
 641+ 9AFF              ;
 642+ 9AFF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9AFF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9AFF
 645+ 9AFF 3A FD 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9B02 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9B04 C9           	ret
 648+ 9B05
 649+ 9B05              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9B05              ;
 651+ 9B05              ;	24/7/22
 652+ 9B05              ;
 653+ 9B05              ;	Inc_CTRL_DESPLZ
 654+ 9B05              ;
 655+ 9B05              ;
 656+ 9B05              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9B05
 658+ 9B05 21 FF 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9B08 3A 21 88     	ld a,(Vel_right)
 660+ 9B0B A7           	and a
 661+ 9B0C 28 06        	jr z,1F
 662+ 9B0E 47           	ld b,a
 663+ 9B0F 34           3 inc (hl)
 664+ 9B10 10 FD        	djnz 3B
 665+ 9B12 18 01        	jr 2F
 666+ 9B14 34           1 inc (hl)
 667+ 9B15 C9           2 ret
 668+ 9B16
 669+ 9B16              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9B16              ;
 671+ 9B16              ;	5/2/23
 672+ 9B16              ;
 673+ 9B16              ;	Dec_CTRL_DESPLZ
 674+ 9B16              ;
 675+ 9B16              ;
 676+ 9B16              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9B16
 678+ 9B16 21 FF 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9B19 3A 20 88     	ld a,(Vel_left)
 680+ 9B1C A7           	and a
 681+ 9B1D 28 06        	jr z,1F
 682+ 9B1F 47           	ld b,a
 683+ 9B20 35           3 dec (hl)
 684+ 9B21 10 FD        	djnz 3B
 685+ 9B23 18 01        	jr 2F
 686+ 9B25 35           1 dec (hl)
 687+ 9B26 C9           2 ret
 688+ 9B27
 689+ 9B27              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9B27
 691+ 9B27 2A F9 87     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9B2A 01 1F 00     	ld bc,31
 693+ 9B2D A7           	and a
 694+ 9B2E ED 4A        	adc hl,bc
 695+ 9B30 22 F9 87     	ld (Posicion_actual),hl
 696+ 9B33 21 19 88     	ld hl,Ctrl_0														; $xxx1
 697+ 9B36 CB C6        	set 0,(hl)
 698+ 9B38 C9           	ret
 699+ 9B39
 700+ 9B39              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9B39
 702+ 9B39 2A F9 87     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9B3C 01 1F 00     	ld bc,31
 704+ 9B3F A7           	and a
 705+ 9B40 ED 42        	sbc hl,bc
 706+ 9B42 22 F9 87     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B45 21 19 88     	ld hl,Ctrl_0
 708+ 9B48 CB CE        	set 1,(hl)
 709+ 9B4A C9           	ret
 710+ 9B4B
 711+ 9B4B              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B4B
 713+ 9B4B 24           Reaparece_abajo inc h
 714+ 9B4C 01 E0 17     	ld bc,$17e0
 715+ 9B4F A7           	and a
 716+ 9B50 ED 4A        	adc hl,bc
 717+ 9B52 22 F9 87     	ld (Posicion_actual),hl
 718+ 9B55 21 19 88     	ld hl,Ctrl_0
 719+ 9B58 CB D6        	set 2,(hl)
 720+ 9B5A C9           	ret
 721+ 9B5B
 722+ 9B5B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B5B
 724+ 9B5B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B5E A7           	and a
 726+ 9B5F ED 42        	sbc hl,bc
 727+ 9B61 22 F9 87     	ld (Posicion_actual),hl
 728+ 9B64 21 19 88     	ld hl,Ctrl_0
 729+ 9B67 CB DE        	set 3,(hl)
 730+ 9B69 C9           	ret
 731+ 9B6A
 732+ 9B6A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B6A              ;
 734+ 9B6A              ;	15/07/23
 735+ 9B6A
 736+ 9B6A              Reinicio
 737+ 9B6A
 738+ 9B6A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B6A
 740+ 9B6A AF           	xor a
 741+ 9B6B 21 30 88     	ld hl,Puntero_indice_mov_bucle
 742+ 9B6E CD 8C 9B     	call Limpia_contenido_hl
 743+ 9B71
 744+ 9B71 21 F9 87     	ld hl,Posicion_actual
 745+ 9B74 CD 8C 9B     	call Limpia_contenido_hl
 746+ 9B77
 747+ 9B77 CD 69 86     	call Inicializa_Puntero_indice_mov
 748+ 9B7A CD 4D 9E     	call Inicia_Puntero_mov
 749+ 9B7D
 750+ 9B7D 21 32 88     	ld hl,Incrementa_puntero
 751+ 9B80 06 05        	ld b,5
 752+ 9B82 77           1 ld (hl),a
 753+ 9B83 23           	inc hl
 754+ 9B84 10 FC        	djnz 1B
 755+ 9B86
 756+ 9B86 21 1E 88     	ld hl,Ctrl_2
 757+ 9B89 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B8B
 759+ 9B8B C9           	ret
 760+ 9B8C
 761+ 9B8C 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B8D 23           	inc hl
 763+ 9B8E 77           	ld (hl),a
 764+ 9B8F C9           	ret
 765+ 9B90
 766+ 9B90
# file closed: Direcciones.asm
1800  9B90              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B90              ; ------------------------------------------------------------------------
   2+ 9B90              ;
   3+ 9B90              ;	22/1/24
   4+ 9B90              ;
   5+ 9B90              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B90              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B90              ;
   8+ 9B90              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B90              ;
  10+ 9B90              ;	Modifica: A,BC y DE.
  11+ 9B90
  12+ 9B90 7D           Genera_coordenadas ld a,l
  13+ 9B91 E6 1F        	and $1f
  14+ 9B93 32 FD 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B96
  16+ 9B96 3E 39        	ld a,$39											; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9B98 BC           	cp h
  18+ 9B99 20 05        	jr nz,4F
  19+ 9B9B
  20+ 9B9B AF           	xor a
  21+ 9B9C 32 FE 87     	ld (Coordenada_y),a
  22+ 9B9F C9           	ret
  23+ 9BA0
  24+ 9BA0 CD F8 97     4 call calcula_tercio
  25+ 9BA3 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  26+ 9BA4
  27+ 9BA4 1E 00        	ld e,0
  28+ 9BA6 7D           	ld a,l
  29+ 9BA7 E6 E0        	and $e0
  30+ 9BA9 28 01        	jr z,1F
  31+ 9BAB 04           	inc b
  32+ 9BAC
  33+ 9BAC 04           1 inc b
  34+ 9BAD 05           	dec b
  35+ 9BAE 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  36+ 9BB0              ;														; _ , salimos.
  37+ 9BB0 1C           3 inc e
  38+ 9BB1 D6 20        	sub 32
  39+ 9BB3 20 FB        	jr nz,3B
  40+ 9BB5 10 F5        	djnz 1B
  41+ 9BB7
  42+ 9BB7 7B           2 ld a,e
  43+ 9BB8 32 FE 87     	ld (Coordenada_y),a
  44+ 9BBB
  45+ 9BBB C9           	ret
  46+ 9BBC
  47+ 9BBC              ; ------------------------------------------------------------------------
  48+ 9BBC              ;	28/05/23
  49+ 9BBC              ;
  50+ 9BBC              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  51+ 9BBC              ;	Fila superior "0", Columna izquierda "0".
  52+ 9BBC              ;
  53+ 9BBC              ;	Input: HL contendrá la posición del proyectil en pantalla.
  54+ 9BBC              ;	Output: DE contendrá las coordenadas del disparo:
  55+ 9BBC              ;
  56+ 9BBC              ;		DE="$120d"
  57+ 9BBC              ;
  58+ 9BBC              ;		D, (Coordenada_X), Columnas, $12
  59+ 9BBC              ;		E, (Coordenada_y), Filas, $0d
  60+ 9BBC              ;
  61+ 9BBC              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  62+ 9BBC
  63+ 9BBC              ;	Modifica: A,BC y DE.
  64+ 9BBC
  65+ 9BBC
  66+ 9BBC              Genera_coordenadas_disparo
  67+ 9BBC
  68+ 9BBC              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  69+ 9BBC
  70+ 9BBC 7D           	ld a,l
  71+ 9BBD E6 1F        	and $1f
  72+ 9BBF 57           	ld d,a 												; Columnas en D. Coordenada_X.
  73+ 9BC0 CD F8 97     	call calcula_tercio
  74+ 9BC3 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  75+ 9BC4 1E 00        	ld e,0
  76+ 9BC6 7D           	ld a,l
  77+ 9BC7 E6 E0        	and $e0
  78+ 9BC9 28 01        	jr z,1F
  79+ 9BCB 04           	inc b
  80+ 9BCC 1C           1 inc e
  81+ 9BCD D6 20        	sub 32
  82+ 9BCF 20 FB        	jr nz,1B
  83+ 9BD1 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  84+ 9BD3 C9           	ret
  85+ 9BD4
# file closed: Genera_coordenadas.asm
1801  9BD4              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BD4              ; Relojes y temporizaciones.
   2+ 9BD4
   3+ 9BD4              ; ------------------------------------------------------
   4+ 9BD4              ;
   5+ 9BD4              ;	16/7/23
   6+ 9BD4              ;
   7+ 9BD4              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BD4              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BD4              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BD4              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BD4              ;
  12+ 9BD4              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BD4              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BD4
  15+ 9BD4              ; Disparo_entidad db 1
  16+ 9BD4              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BD4              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BD4
  19+ 9BD4              Habilita_disparos
  20+ 9BD4
  21+ 9BD4 7E           	ld a,(hl)
  22+ 9BD5 A7           	and a
  23+ 9BD6 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BD7
  25+ 9BD7 EB           	ex de,hl
  26+ 9BD8
  27+ 9BD8 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BD9 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BDA
  30+ 9BDA              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BDA
  32+ 9BDA 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BDB 7E           	ld a,(hl)
  34+ 9BDC 23           	inc hl
  35+ 9BDD 77           	ld (hl),a
  36+ 9BDE
  37+ 9BDE EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BDF 3E 01        	ld a,1
  39+ 9BE1 77           	ld (hl),a
  40+ 9BE2 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1802  9BE3              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BE3
   2+ 9BE3
   3+ 9BE3              ;   07/07/23
   4+ 9BE3              ;
   5+ 9BE3              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BE3              ;
   7+ 9BE3              ;   Codificación:
   8+ 9BE3              ;
   9+ 9BE3              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BE3              ;
  11+ 9BE3              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BE3              ;
  13+ 9BE3              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BE3              ;
  15+ 9BE3              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BE3              ;
  17+ 9BE3              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BE3              ;                               ..... %01000010 Vel_up 4
  19+ 9BE3              ;                                               Vel_down 2
  20+ 9BE3              ;                               ..... $42
  21+ 9BE3              ;
  22+ 9BE3              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BE3              ;
  24+ 9BE3              ;                               ..... %01000010 Vel_left 4
  25+ 9BE3              ;                                               Vel_right 2
  26+ 9BE3              ;                               ..... $42
  27+ 9BE3              ;
  28+ 9BE3              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BE3              ;
  30+ 9BE3              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BE3              ;
  32+ 9BE3              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BE3              ;
  34+ 9BE3              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BE3              ;                                     $53
  36+ 9BE3              ;
  37+ 9BE3              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BE3              ;
  39+ 9BE3              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BE3              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BE3              ;
  42+ 9BE3              ;                       Arriba ..... $81
  43+ 9BE3              ;                       Arriba - izquierda ..... $a1
  44+ 9BE3              ;                       Arriba - derecha ..... $91
  45+ 9BE3              ;
  46+ 9BE3              ;                       Abajo ..... $41
  47+ 9BE3              ;                       Abajo - izquierda ..... $61
  48+ 9BE3              ;                       Abajo - derecha ..... $51
  49+ 9BE3              ;
  50+ 9BE3              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BE3              ;
  52+ 9BE3              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BE3              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BE3              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BE3              ;
  56+ 9BE3              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BE3              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BE3              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BE3              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BE3              ;
  61+ 9BE3              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BE3              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BE3              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BE3              ;
  65+ 9BE3              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BE3              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BE3              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BE3              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BE3
  70+ 9BE3              ; ----- ----- ----- ----- -----
  71+ 9BE3
  72+ 9BE3 0F 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BE5 17 9C            defw F_1
  74+ 9BE7 21 9C            defw F_2
  75+ 9BE9 2B 9C            defw Codo_abajo_derecha
  76+ 9BEB 5F 9C            defw Derecha_y_subiendo
  77+ 9BED 69 9C            defw Derecha_y_subiendo_1
  78+ 9BEF 73 9C            defw F_3
  79+ 9BF1 7D 9C            defw F_4
  80+ 9BF3 87 9C            defw Derecha_y_bajando
  81+ 9BF5 91 9C            defw Derecha_y_bajando_1
  82+ 9BF7 9B 9C            defw Derecha_y_bajando_2
  83+ 9BF9 A5 9C            defw Codo_derecha_abajo
  84+ 9BFB D5 9C            defw Codo_abajo_izq.
  85+ 9BFD 09 9D            defw Izquierda_y_subiendo
  86+ 9BFF 13 9D            defw Izquierda_y_subiendo_1
  87+ 9C01 1D 9D            defw F_5
  88+ 9C03 27 9D            defw F_6
  89+ 9C05 31 9D            defw Izquierda_y_bajando
  90+ 9C07 3B 9D            defw Izquierda_y_bajando_1
  91+ 9C09 45 9D            defw Izquierda_y_bajando_2
  92+ 9C0B 4F 9D            defw Codo_izquierda_abajo
  93+ 9C0D 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C0F
  95+ 9C0F 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C13 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C17
  98+ 9C17 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C1B 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C1F 08 00
 100+ 9C21 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C25 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C29 0F FE
 102+ 9C2B
 103+ 9C2B 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C2F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C33 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C37 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C3B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C3F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C43 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C47 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C4B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C4F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C53 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C57 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C5B 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C5F
 117+ 9C5F 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C63 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C67 06 00
 119+ 9C69
 120+ 9C69 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C6D 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C71 02 00
 122+ 9C73
 123+ 9C73 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C77 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C7B 04 00
 125+ 9C7D 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C81 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C85 08 00
 127+ 9C87
 128+ 9C87 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C8B 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C8F 02 00
 130+ 9C91
 131+ 9C91 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9C95 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9C99 06 00
 133+ 9C9B
 134+ 9C9B 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9C9F 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CA3 06 00
 136+ 9CA5
 137+ 9CA5              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CA5
 139+ 9CA5 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CA9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9CAD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9CB1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CB5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CB9 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CBD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CC1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CC5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CC9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CCD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9CD1 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9CD5
 152+ 9CD5 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9CD9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9CDD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9CE1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9CE5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9CE9 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9CED 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CF1 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9CF5 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9CF9 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9CFD 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D01 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D05 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D09
 166+ 9D09 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D0D 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D11 06 00
 168+ 9D13
 169+ 9D13 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D17 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D1B 02 00
 171+ 9D1D
 172+ 9D1D 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D21 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D25 04 00
 174+ 9D27 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D2B 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D2F 08 00
 176+ 9D31
 177+ 9D31 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D35 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D39 02 00
 179+ 9D3B
 180+ 9D3B 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D3F 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D43 06 00
 182+ 9D45
 183+ 9D45 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D49 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D4D 06 00
 185+ 9D4F
 186+ 9D4F 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D53 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D57 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D5B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D5F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D63 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D67 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D6B 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D6F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D73 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D77 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D7B 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D7F
 199+ 9D7F              ; ----- ----- ----- ----- -----
 200+ 9D7F              ;
 201+ 9D7F              ;   28/12/23
 202+ 9D7F
 203+ 9D7F              Movimiento
 204+ 9D7F
 205+ 9D7F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D7F
 207+ 9D7F 3A 1E 88         ld a,(Ctrl_2)
 208+ 9D82 CB 57            bit 2,a
 209+ 9D84 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D86
 211+ 9D86 2A 2E 88         ld hl,(Puntero_mov)
 212+ 9D89 7E               ld a,(hl)
 213+ 9D8A
 214+ 9D8A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D8A
 216+ 9D8A              Inicia_desplazamiento.
 217+ 9D8A
 218+ 9D8A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D8A
 220+ 9D8A CD 8A 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D8D
 222+ 9D8D              ; Iniciamos (Repetimos_mov).
 223+ 9D8D
 224+ 9D8D 7E               ld a,(hl)
 225+ 9D8E E6 0F            and $0f
 226+ 9D90 32 34 88         ld (Repetimos_desplazamiento),a
 227+ 9D93 32 35 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9D96
 229+ 9D96              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9D96
 231+ 9D96 23               inc hl
 232+ 9D97 7E               ld a,(hl)
 233+ 9D98 32 37 88         ld (Cola_de_desplazamiento),a
 234+ 9D9B 2B               dec hl
 235+ 9D9C
 236+ 9D9C 21 1E 88         ld hl,Ctrl_2
 237+ 9D9F CB D6            set 2,(hl)
 238+ 9DA1
 239+ 9DA1              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9DA1              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9DA1
 242+ 9DA1              Desplazamiento_iniciado
 243+ 9DA1
 244+ 9DA1 CD 58 9E         call Aplica_desplazamiento
 245+ 9DA4
 246+ 9DA4              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9DA4
 248+ 9DA4 3A 57 88         ld a,(Ctrl_3)
 249+ 9DA7 CB 57            bit 2,a
 250+ 9DA9 C0               ret nz
 251+ 9DAA
 252+ 9DAA 3A 1E 88         ld a,(Ctrl_2)
 253+ 9DAD CB 67            bit 4,a
 254+ 9DAF C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9DB0
 256+ 9DB0 21 34 88     3 ld hl,Repetimos_desplazamiento
 257+ 9DB3 35               dec (hl)
 258+ 9DB4 C0               ret nz
 259+ 9DB5
 260+ 9DB5              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DB5              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DB5              ; Analiza (Cola_de_desplazamiento).
 263+ 9DB5
 264+ 9DB5 3A 37 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DB8 A7               and a
 266+ 9DB9 CC B3 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DBC 28 30            jr z,Reinicia_el_movimiento
 268+ 9DBE
 269+ 9DBE FE FF            cp $ff
 270+ 9DC0 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DC2
 272+ 9DC2 FE FE            cp $fe
 273+ 9DC4 CC 31 9E         call z,Fijamos_bucle
 274+ 9DC7 28 25            jr z,Reinicia_el_movimiento
 275+ 9DC9
 276+ 9DC9 FE FD            cp $fd
 277+ 9DCB 20 11            jr nz,1F
 278+ 9DCD
 279+ 9DCD              ; ---
 280+ 9DCD              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DCD
 282+ 9DCD 3A 1E 88         ld a,(Ctrl_2)
 283+ 9DD0 CB 5F            bit 3,a
 284+ 9DD2 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9DD4
 286+ 9DD4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9DD4
 288+ 9DD4 21 1E 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9DD7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9DD9
 291+ 9DD9 CD 42 9E         call Inicia_Repetimos_movimiento
 292+ 9DDC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9DDE              ; ---
 294+ 9DDE
 295+ 9DDE FE 01        1 cp 1
 296+ 9DE0 CA 1B 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9DE3
 298+ 9DE3 3D               dec a
 299+ 9DE4 32 37 88         ld (Cola_de_desplazamiento),a
 300+ 9DE7
 301+ 9DE7 3A 35 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9DEA 32 34 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9DED              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9DED C9               ret
 305+ 9DEE
 306+ 9DEE              Reinicia_el_movimiento
 307+ 9DEE
 308+ 9DEE 3A 1E 88         ld a,(Ctrl_2)
 309+ 9DF1 CB 5F            bit 3,a
 310+ 9DF3 28 1B            jr z,2F
 311+ 9DF5
 312+ 9DF5              ; (Cola_de_desplazamiento)="254".
 313+ 9DF5
 314+ 9DF5 21 36 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9DF8 35               dec (hl)
 316+ 9DF9 20 15            jr nz,2F
 317+ 9DFB
 318+ 9DFB              ; Fin de las repeticiones del último movimiento.
 319+ 9DFB
 320+ 9DFB 21 1E 88         ld hl,Ctrl_2
 321+ 9DFE CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9E00
 323+ 9E00 2A 2E 88         ld hl,(Puntero_mov)
 324+ 9E03 23               inc hl
 325+ 9E04 23               inc hl
 326+ 9E05 23               inc hl
 327+ 9E06 22 2E 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9E09              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9E09 7E               ld a,(hl)
 330+ 9E0A 32 37 88         ld (Cola_de_desplazamiento),a
 331+ 9E0D
 332+ 9E0D C3 B5 9D         jp Cola
 333+ 9E10
 334+ 9E10 CD 4D 9E     2 call Inicia_Puntero_mov
 335+ 9E13
 336+ 9E13 21 1E 88         ld hl,Ctrl_2
 337+ 9E16 CB 96            res 2,(hl)
 338+ 9E18
 339+ 9E18 C3 7F 9D         jp Movimiento
 340+ 9E1B
 341+ 9E1B              Siguiente_desplazamiento
 342+ 9E1B
 343+ 9E1B              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E1B              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E1B
 346+ 9E1B 21 1E 88         ld hl,Ctrl_2
 347+ 9E1E CB 96            res 2,(hl)
 348+ 9E20
 349+ 9E20 2A 2E 88         ld hl,(Puntero_mov)
 350+ 9E23 23               inc hl
 351+ 9E24 23               inc hl
 352+ 9E25 22 2E 88         ld (Puntero_mov),hl
 353+ 9E28
 354+ 9E28 7E               ld a,(hl)
 355+ 9E29 A7               and a
 356+ 9E2A CC B3 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E2D CA EE 9D         jp z,Reinicia_el_movimiento
 358+ 9E30
 359+ 9E30 C9               ret
 360+ 9E31
 361+ 9E31              ; Subrutinas -----------------------------------------
 362+ 9E31              ; ---------- --------- --------- ---------- ----------
 363+ 9E31              ;
 364+ 9E31              ;   24/07/23
 365+ 9E31              ;
 366+ 9E31              ;   Fijamos_bucle
 367+ 9E31              ;
 368+ 9E31              ;
 369+ 9E31
 370+ 9E31              Fijamos_bucle
 371+ 9E31
 372+ 9E31 3A 32 88         ld a,(Incrementa_puntero)
 373+ 9E34 3C               inc a
 374+ 9E35 32 33 88         ld (Incrementa_puntero_backup),a
 375+ 9E38
 376+ 9E38 CD B3 9E         call Incrementa_Puntero_indice_mov
 377+ 9E3B 2A 2C 88         ld hl,(Puntero_indice_mov)
 378+ 9E3E 22 30 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9E41 C9               ret
 380+ 9E42
 381+ 9E42              ; ---------- --------- --------- ---------- ----------
 382+ 9E42              ;
 383+ 9E42              ;   07/7/23
 384+ 9E42              ;
 385+ 9E42              ;   Inicia_Repetimos_movimiento
 386+ 9E42              ;
 387+ 9E42              ;
 388+ 9E42
 389+ 9E42              Inicia_Repetimos_movimiento
 390+ 9E42
 391+ 9E42              ; Iniciamos (Repetimos_movimiento).
 392+ 9E42
 393+ 9E42 DD 2A 2E 88      ld ix,(Puntero_mov)
 394+ 9E46 DD 7E 02         ld a,(ix+2)
 395+ 9E49 32 36 88         ld (Repetimos_movimiento),a
 396+ 9E4C
 397+ 9E4C C9               ret
 398+ 9E4D
 399+ 9E4D              ; ---------- --------- --------- ---------- ----------
 400+ 9E4D              ;
 401+ 9E4D              ;   26/6/23
 402+ 9E4D              ;
 403+ 9E4D              ;   Inicia_Puntero_mov
 404+ 9E4D              ;
 405+ 9E4D              ;
 406+ 9E4D
 407+ 9E4D 2A 2C 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E50 5E               ld e,(hl)
 409+ 9E51 23               inc hl
 410+ 9E52 56               ld d,(hl)
 411+ 9E53 EB               ex de,hl
 412+ 9E54 22 2E 88         ld (Puntero_mov),hl
 413+ 9E57 C9               ret
 414+ 9E58
 415+ 9E58              ; ---------- --------- --------- ---------- ----------
 416+ 9E58              ;
 417+ 9E58              ;   27/06/23
 418+ 9E58              ;
 419+ 9E58              ;   Aplica_movimiento.
 420+ 9E58
 421+ 9E58              Aplica_desplazamiento
 422+ 9E58
 423+ 9E58              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E58
 425+ 9E58 2A 2E 88         ld hl, (Puntero_mov)
 426+ 9E5B
 427+ 9E5B 7E               ld a,(hl)
 428+ 9E5C E6 F0            and $f0
 429+ 9E5E C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E5F
 431+ 9E5F CB 7E            bit 7,(hl)
 432+ 9E61 28 03            jr z,1F
 433+ 9E63 CD 77 98         call Mov_up
 434+ 9E66 2A 2E 88     1 ld hl, (Puntero_mov)
 435+ 9E69 CB 76            bit 6,(hl)
 436+ 9E6B 28 09            jr z,2F
 437+ 9E6D CD 3E 98         call Mov_down
 438+ 9E70
 439+ 9E70              ; Se ha aplicado reinicio ???
 440+ 9E70              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E70
 442+ 9E70 3A 57 88         ld a,(Ctrl_3)
 443+ 9E73 CB 57            bit 2,a
 444+ 9E75 C0               ret nz
 445+ 9E76
 446+ 9E76 2A 2E 88     2 ld hl, (Puntero_mov)
 447+ 9E79 CB 6E            bit 5,(hl)
 448+ 9E7B 28 03            jr z,3F
 449+ 9E7D CD DD 99         call Mov_left
 450+ 9E80 2A 2E 88     3 ld hl, (Puntero_mov)
 451+ 9E83 CB 66            bit 4,(hl)
 452+ 9E85 C8               ret z
 453+ 9E86 CD BA 98         call Mov_right
 454+ 9E89 C9               ret
 455+ 9E8A
 456+ 9E8A              ; ---------- --------- --------- ---------- ----------
 457+ 9E8A              ;
 458+ 9E8A              ;   26/06/23
 459+ 9E8A              ;
 460+ 9E8A              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E8A
 462+ 9E8A              Ajusta_velocidad_desplazamiento
 463+ 9E8A
 464+ 9E8A              ; 1er byte de la cadena de movimiento.
 465+ 9E8A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E8A
 467+ 9E8A CD A8 9E         call Extrae_nibble_alto
 468+ 9E8D
 469+ 9E8D 32 22 88         ld (Vel_up),a
 470+ 9E90 79               ld a,c
 471+ 9E91 E6 0F            and $0f
 472+ 9E93 32 23 88         ld (Vel_down),a
 473+ 9E96
 474+ 9E96              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9E96              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9E96
 477+ 9E96 23               inc hl
 478+ 9E97 CD A8 9E         call Extrae_nibble_alto
 479+ 9E9A
 480+ 9E9A 32 20 88         ld (Vel_left),a
 481+ 9E9D 79               ld a,c
 482+ 9E9E E6 0F            and $0f
 483+ 9EA0 32 21 88         ld (Vel_right),a
 484+ 9EA3
 485+ 9EA3              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9EA3
 487+ 9EA3 23               inc hl
 488+ 9EA4 22 2E 88         ld (Puntero_mov),hl
 489+ 9EA7 C9               ret
 490+ 9EA8
 491+ 9EA8 06 04        Extrae_nibble_alto ld b,4
 492+ 9EAA 7E               ld a,(hl)
 493+ 9EAB 4F               ld c,a
 494+ 9EAC E6 F0            and $f0
 495+ 9EAE CB 3F        1 srl a
 496+ 9EB0 10 FC            djnz 1B
 497+ 9EB2 C9               ret
 498+ 9EB3
 499+ 9EB3              ; ---------- --------- --------- ---------- ----------
 500+ 9EB3              ;
 501+ 9EB3              ;   5/7/23
 502+ 9EB3              ;
 503+ 9EB3              ;   Incrementa_Puntero_indice_mov
 504+ 9EB3
 505+ 9EB3              Incrementa_Puntero_indice_mov
 506+ 9EB3
 507+ 9EB3 21 32 88         ld hl,Incrementa_puntero
 508+ 9EB6 34               inc (hl)
 509+ 9EB7
 510+ 9EB7 2A 2C 88         ld hl,(Puntero_indice_mov)
 511+ 9EBA 01 02 00         ld bc,2
 512+ 9EBD A7               and a
 513+ 9EBE 09               add hl,bc
 514+ 9EBF 22 2C 88         ld (Puntero_indice_mov),hl
 515+ 9EC2
 516+ 9EC2 7E               ld a,(hl)
 517+ 9EC3 A7               and a
 518+ 9EC4
 519+ 9EC4              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9EC4
 521+ 9EC4              ;    jr z,$
 522+ 9EC4
 523+ 9EC4              ;! Reinicia el Patrón de movimiento.
 524+ 9EC4
 525+ 9EC4 CC C9 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9EC7
 527+ 9EC7 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9EC8
 529+ 9EC8 C9               ret
 530+ 9EC9
 531+ 9EC9              ; ---------- --------- --------- ---------- ----------
 532+ 9EC9              ;
 533+ 9EC9              ;   15/01/24
 534+ 9EC9              ;
 535+ 9EC9              ;   Inicializa_Puntero_indice_mov
 536+ 9EC9
 537+ 9EC9              Inicializa_Puntero_indice_mov_2
 538+ 9EC9
 539+ 9EC9              ; Existe etiqueta de bucle principal???
 540+ 9EC9
 541+ 9EC9 2A 30 88         ld hl,(Puntero_indice_mov_bucle)
 542+ 9ECC 24               inc h
 543+ 9ECD 25               dec h
 544+ 9ECE 28 05            jr z,2F
 545+ 9ED0
 546+ 9ED0 22 2C 88         ld (Puntero_indice_mov),hl
 547+ 9ED3 18 14            jr 3F
 548+ 9ED5
 549+ 9ED5              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9ED5
 551+ 9ED5 3A 32 88     2 ld a,(Incrementa_puntero)
 552+ 9ED8 47               ld b,a
 553+ 9ED9
 554+ 9ED9 2A 2C 88         ld hl,(Puntero_indice_mov)
 555+ 9EDC 2B           1 dec hl
 556+ 9EDD 2B               dec hl
 557+ 9EDE 10 FC            djnz 1B
 558+ 9EE0 22 2C 88         ld (Puntero_indice_mov),hl
 559+ 9EE3
 560+ 9EE3 AF               xor a
 561+ 9EE4 32 32 88         ld (Incrementa_puntero),a
 562+ 9EE7 18 06            jr 4F
 563+ 9EE9
 564+ 9EE9 3A 33 88     3 ld a,(Incrementa_puntero_backup)
 565+ 9EEC 32 32 88         ld (Incrementa_puntero),a
 566+ 9EEF C9           4 ret
 567+ 9EF0
 568+ 9EF0              ; ----------------------------------------------------------------------
 569+ 9EF0              ;
 570+ 9EF0              ;   25/01/24
 571+ 9EF0              ;
 572+ 9EF0              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 573+ 9EF0
 574+ 9EF0 3A F6 87     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 575+ 9EF3 CD 5C 87         call Calcula_salto_en_BC
 576+ 9EF6 21 24 88         ld hl,Contador_general_de_mov_masticados_Entidad_1
 577+ 9EF9 A7               and a
 578+ 9EFA ED 4A            adc hl,bc
 579+ 9EFC C9               ret
 580+ 9EFD
 581+ 9EFD
# file closed: Patrones_de_mov.asm
1803  9EFD              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9EFD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9EFD              ;
   3+ 9EFD              ;	12/12/23
   4+ 9EFD              ;
   5+ 9EFD              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9EFD
   7+ 9EFD              ;	ADC HL,SP	LD (addr),SP
   8+ 9EFD              ;	ADD HL,SP	LD SP,(addr)
   9+ 9EFD              ;	ADD IX,SP	LD SP,nn
  10+ 9EFD              ; 	ADD IY,SP	LD SP,HL
  11+ 9EFD              ;				LD SP,IX
  12+ 9EFD              ;	DEC SP		LD SP,IY
  13+ 9EFD
  14+ 9EFD              ;	EX (SP),HL
  15+ 9EFD              ;	EX (SP),IX
  16+ 9EFD              ;	EX (SP),IY
  17+ 9EFD
  18+ 9EFD              ;	INC SP
  19+ 9EFD
  20+ 9EFD                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 49 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 13 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 15 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 38 88         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 51 88         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 19 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 55 88         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 4F 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 38 88         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 51 88         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 19 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 55 88         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 49 88      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 4F 88     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 49 88  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 4F 88         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 4F 88         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1804  718B
1805  718B              	SAVESNA "Pruebas.sna", START
1806  718B
1807  718B
1808  718B
1809  718B
# file closed: Banco_de_pruebas.asm
