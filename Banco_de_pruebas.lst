# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 99 87  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD A9 8C     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD B9 8C     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 A3 87     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B 99 87  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC A4 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 C5 85        	defw Caja_2
 110+ 8574 D2 85        	defw Caja_3
 111+ 8576 DF 85        	defw Caja_4
 112+ 8578 EC 85        	defw Caja_5
 113+ 857A F9 85        	defw Caja_6
 114+ 857C 06 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8
 152+ 85B8              ; Cada caja tiene 19 bytes !!!
 153+ 85B8
 154+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 155+ 85BA 00           	db %00000000										; (Attr).
 156+ 85BB 00           	db 0												; (Cuad_objeto).
 157+ 85BC 00           	db 0												; (Impacto).
 158+ 85BD 00 00        	defw 0												; (Puntero_de_impresion).
 159+ 85BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 160+ 85C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 161+ 85C3 00           	db 0												; (Ctrl_0).
 162+ 85C4 00           	db 0												; (Ctrl_2).
 163+ 85C5
 164+ 85C5              ; ---------- ---------- ---------- ---------- ----------
 165+ 85C5
 166+ 85C5 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 167+ 85C7 00           	db %00000000										; (Attr).
 168+ 85C8 00           	db 0												; (Cuad_objeto).
 169+ 85C9 00           	db 0												; (Impacto).
 170+ 85CA 00 00        	defw 0												; (Puntero_de_impresion).
 171+ 85CC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 172+ 85CE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 173+ 85D0 00           	db 0												; (Ctrl_0).
 174+ 85D1 00           	db 0												; (Ctrl_2).
 175+ 85D2
 176+ 85D2              ; ---------- ---------- ---------- ---------- ----------
 177+ 85D2
 178+ 85D2 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 179+ 85D4 00           	db %00000000										; (Attr).
 180+ 85D5 00           	db 0												; (Cuad_objeto).
 181+ 85D6 00           	db 0												; (Impacto).
 182+ 85D7 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 85D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 85DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 85DD 00           	db 0												; (Ctrl_0).
 186+ 85DE 00           	db 0												; (Ctrl_2).
 187+ 85DF
 188+ 85DF              ; ---------- ---------- ---------- ---------- ----------
 189+ 85DF
 190+ 85DF 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 191+ 85E1 00           	db %00000000										; (Attr).
 192+ 85E2 00           	db 0												; (Cuad_objeto).
 193+ 85E3 00           	db 0												; (Impacto).
 194+ 85E4 00 00        	defw 0												; (Puntero_de_impresion).
 195+ 85E6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 196+ 85E8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 197+ 85EA 00           	db 0												; (Ctrl_0).
 198+ 85EB 00           	db 0												; (Ctrl_2).
 199+ 85EC
 200+ 85EC              ; ---------- ---------- ---------- ---------- ----------
 201+ 85EC
 202+ 85EC 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 203+ 85EE 00           	db %00000000										; (Attr).
 204+ 85EF 00           	db 0												; (Cuad_objeto).
 205+ 85F0 00           	db 0												; (Impacto).
 206+ 85F1 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 85F3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 85F5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 85F7 00           	db 0												; (Ctrl_0).
 210+ 85F8 00           	db 0												; (Ctrl_2).
 211+ 85F9
 212+ 85F9              ; ---------- ---------- ---------- ---------- ----------
 213+ 85F9
 214+ 85F9 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 215+ 85FB 00           	db %00000000										; (Attr).
 216+ 85FC 00           	db 0												; (Cuad_objeto).
 217+ 85FD 00           	db 0												; (Impacto).
 218+ 85FE 00 00        	defw 0												; (Puntero_de_impresion).
 219+ 8600 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 220+ 8602 00 00        	defw 0 												; (Contador_de_mov_masticados).
 221+ 8604 00           	db 0												; (Ctrl_0).
 222+ 8605 00           	db 0												; (Ctrl_2).
 223+ 8606
 224+ 8606              ; ---------- ---------- ---------- ---------- ----------
 225+ 8606
 226+ 8606 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 227+ 8608 00           	db %00000000										; (Attr).
 228+ 8609 00           	db 0												; (Cuad_objeto).
 229+ 860A 00           	db 0												; (Impacto).
 230+ 860B 00 00        	defw 0												; (Puntero_de_impresion).
 231+ 860D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 232+ 860F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 233+ 8611 00           	db 0												; (Ctrl_0).
 234+ 8612 00           	db 0												; (Ctrl_2).
 235+ 8613
 236+ 8613              ; -------------------------------------------------------------------------------------
 237+ 8613              ;
 238+ 8613              ;	11/1/24
 239+ 8613              ;
 240+ 8613              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 241+ 8613              ;
 242+ 8613              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 243+ 8613              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 244+ 8613              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 245+ 8613              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 246+ 8613
 247+ 8613              Indice_de_definiciones_de_entidades
 248+ 8613
 249+ 8613 17 86        	defw Entidad_1
 250+ 8615 24 86        	defw Entidad_2
 251+ 8617
 252+ 8617              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 253+ 8617
 254+ 8617              ;	BADSAT, (Satélite malvado).
 255+ 8617
 256+ 8617 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 257+ 861A 04           	db %00000100										; (Attr).
 258+ 861B A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 259+ 861D 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 260+ 861F 03 40        	defw $4003                                      	; (Posicion_inicio).
 261+ 8621 01           	db 1												; (Cuad_objeto).
 262+ 8622 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 263+ 8624
 264+ 8624 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 265+ 8627 02           	db %00000010										; (Attr).
 266+ 8628 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 267+ 862A 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 268+ 862C 40 50        	defw $5040                                      	; (Posicion_inicio).
 269+ 862E 01           	db 1												; (Cuad_objeto).
 270+ 862F 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 271+ 8631
# file closed: Cajas_y_disparos.asm
 105  8631              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8631              ; 19/1/24
   2+ 8631
   3+ 8631              Indice_de_niveles
   4+ 8631
   5+ 8631 39 86        	defw Nivel_1
   6+ 8633 3F 86        	defw Nivel_2
   7+ 8635
   8+ 8635              ;	...
   9+ 8635              ;	...
  10+ 8635              ;	+ Niveles ...
  11+ 8635
  12+ 8635 00 00        	defw 0
  13+ 8637 00 00        	defw 0
  14+ 8639
  15+ 8639 01           Nivel_1 db 1									; Nº de entidades.
  16+ 863A 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 863E 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 863F
  19+ 863F 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8640 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8644 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8648 01 02
  22+ 864A 02 01 01 01  	db 2,1,1,1,1,2
  22+ 864E 01 02
  23+ 8650
  24+ 8650              ;---------------------------------------------------------------------------------------------------------------
  25+ 8650              ;
  26+ 8650              ;   19/1/24
  27+ 8650              ;
  28+ 8650              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 8650              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 8650              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 8650              ;	_ de la 1ª entidad del Nivel.
  32+ 8650              ;
  33+ 8650              ;	MODIFICA: HL,DE y A.
  34+ 8650              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 8650
  36+ 8650              Inicializa_Nivel
  37+ 8650
  38+ 8650 2A C2 87     	ld hl,(Puntero_indice_NIVELES)
  39+ 8653 CD 4D 8B     	call Extrae_address
  40+ 8656 7E           	ld a,(hl)
  41+ 8657 32 8D 87     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 865A 23           	inc hl
  43+ 865B CD 65 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 865E 22 C4 87     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 8661 CD 6E 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 8664 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 8665
  48+ 8665              ; ----------------------
  49+ 8665
  50+ 8665 11 6C 87     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8668 01 04 00     	ld bc,4
  52+ 866B ED B0        	ldir
  53+ 866D C9           	ret
  54+ 866E
  55+ 866E 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 866F CD D0 86         call Calcula_salto_en_BC
  57+ 8672 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 8675 A7               and a
  59+ 8676 ED 4A            adc hl,bc
  60+ 8678 CD 4D 8B         call Extrae_address
  61+ 867B 22 78 87         ld (Puntero_indice_mov),hl
  62+ 867E C9               ret
  63+ 867F
  64+ 867F              ;---------------------------------------------------------------------------------------------------------------
  65+ 867F              ;
  66+ 867F              ;   5/1/24
  67+ 867F              ;
  68+ 867F              ;	Destruye A,BC,HL,DE
  69+ 867F
  70+ 867F              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 867F              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 867F
  73+ 867F              Prepara_cajas_de_entidades
  74+ 867F
  75+ 867F              ; Preparamos los punteros de las cajas de entidades:
  76+ 867F
  77+ 867F 21 70 85     	ld hl,Indice_de_cajas_de_entidades
  78+ 8682 CD 4D 8B     	call Extrae_address
  79+ 8685 CD E2 86     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  80+ 8688              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  81+ 8688 CD 25 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  82+ 868B
  83+ 868B              ;	TIPO DE ENTIDAD.
  84+ 868B
  85+ 868B 2A C4 87     	ld hl,(Datos_de_nivel)
  86+ 868E 7E           	ld a,(hl)
  87+ 868F 3D           	dec a
  88+ 8690 20 FE        	jr nz,$														; STOP si no es una entidad de tipo 1.
  89+ 8692
  90+ 8692 21 A4 87     	ld hl,Ctrl_4
  91+ 8695 CB 46        	bit 0,(hl)
  92+ 8697 20 FE        	jr nz,$														; STOP si ya hemos generado todos los movimientos masticados de una entidad Tipo 1.
  93+ 8699 CB E6        	set 4,(hl)													; FLAG que indica que hemos completado todos los movimientos masticados de una entidad tipo 1.
  94+ 869B
  95+ 869B              ;	La 1ª entidad del Nivel es una Entidad de tipo 1.
  96+ 869B              ;	Vamos a cargar la definición de una entidad de tipo 1 en DRAW para poder generar todos sus movimientos masticados.
  97+ 869B
  98+ 869B 2A C4 87     	ld hl,(Datos_de_nivel)
  99+ 869E
 100+ 869E              ; En este punto:
 101+ 869E              ;
 102+ 869E              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
 103+ 869E              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 104+ 869E
 105+ 869E C5           1 push bc 										; Guardo el nº de cajas a rellenar.
 106+ 869F
 107+ 869F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 108+ 86A0 CD D0 86     	call Calcula_salto_en_BC					; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 109+ 86A3
 110+ 86A3 21 13 86     	ld hl,Indice_de_definiciones_de_entidades
 111+ 86A6 CD D8 86     	call Situa_en_datos_de_definicion			; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 112+ 86A9              ;
 113+ 86A9 CD EC 86     	call Definicion_de_entidad_a_bandeja_DRAW	; Vuelca los datos de la definición en DRAW.
 114+ 86AC
 115+ 86AC CD CB 89     	call Construye_movimientos_masticados_entidad
 116+ 86AF
 117+ 86AF              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 118+ 86AF              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 119+ 86AF              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 120+ 86AF              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 121+ 86AF              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 122+ 86AF
 123+ 86AF CD 20 8A     	call Cargamos_registros_con_mov_masticado
 124+ 86B2 CD 16 71     	call Guarda_foto_registros
 125+ 86B5 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 126+ 86B6
 127+ 86B6              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 128+ 86B6              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 129+ 86B6
 130+ 86B6 18 FE        	jr $
 131+ 86B8
 132+ 86B8 CD 89 8B     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 133+ 86BB C9           	ret
 134+ 86BC
 135+ 86BC
 136+ 86BC
 137+ 86BC
 138+ 86BC
 139+ 86BC
 140+ 86BC
 141+ 86BC
 142+ 86BC
 143+ 86BC 2A 8B 87     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
 144+ 86BF CD 4D 8B     	call Extrae_address
 145+ 86C2 CD E2 86     	call Avanza_caja_de_entidades
 146+ 86C5
 147+ 86C5 2A C4 87     	ld hl,(Datos_de_nivel)
 148+ 86C8 23           	inc hl
 149+ 86C9 22 C4 87     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 150+ 86CC
 151+ 86CC C1           	pop bc
 152+ 86CD 10 CF        	djnz 1B
 153+ 86CF
 154+ 86CF C9           	ret
 155+ 86D0
 156+ 86D0              ;	------------------------------------------------------------------------------------
 157+ 86D0              ;
 158+ 86D0              ;	12/01/24
 159+ 86D0              ;
 160+ 86D0              ;	INPUTS:	A contiene el (Tipo) de entidad.
 161+ 86D0              ;
 162+ 86D0              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 163+ 86D0              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 164+ 86D0
 165+ 86D0 CB 27        Calcula_salto_en_BC sla a
 166+ 86D2 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 167+ 86D4 4F           	ld c,a
 168+ 86D5 06 00        	ld b,0
 169+ 86D7 C9           	ret
 170+ 86D8
 171+ 86D8              ; ------------------------------------------------------------------
 172+ 86D8              ;
 173+ 86D8              ;	19/1/24
 174+ 86D8              ;
 175+ 86D8              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 176+ 86D8              ;	Actualiza (Datos_de_entidad) con esa dirección.
 177+ 86D8
 178+ 86D8 A7           Situa_en_datos_de_definicion and a
 179+ 86D9 ED 4A        	adc hl,bc
 180+ 86DB CD 4D 8B     	call Extrae_address
 181+ 86DE 22 93 87         ld (Datos_de_entidad),hl
 182+ 86E1 C9           	ret
 183+ 86E2
 184+ 86E2              ; ------------------------------------------------------------------
 185+ 86E2
 186+ 86E2 22 87 87     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 187+ 86E5 13           	inc de
 188+ 86E6 13           	inc de
 189+ 86E7 EB           	ex de,hl
 190+ 86E8 22 8B 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 191+ 86EB C9           	ret
 192+ 86EC
 193+ 86EC              ; ----------------------------------------------------------------------------------------------------------
 194+ 86EC              ;
 195+ 86EC              ;	19/1/24
 196+ 86EC              ;
 197+ 86EC              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 198+ 86EC              ;	_ de entidad.
 199+ 86EC              ;
 200+ 86EC              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 201+ 86EC              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 202+ 86EC              ;
 203+ 86EC              ;	MODIFICA: HL,DE y BC
 204+ 86EC
 205+ 86EC
 206+ 86EC              Definicion_de_entidad_a_bandeja_DRAW
 207+ 86EC
 208+ 86EC 11 42 87     	ld de,Variables_DRAW	 					; DE apunta al 1er .db de las variables DRAW
 209+ 86EF
 210+ 86EF 01 03 00     	ld bc,3
 211+ 86F2 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 212+ 86F4              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 213+ 86F4 01 07 00     	ld bc,7
 214+ 86F7 CD 1F 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 215+ 86FA
 216+ 86FA 01 05 00     	ld bc,5
 217+ 86FD ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 218+ 86FF              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 219+ 86FF 01 04 00     	ld bc,4
 220+ 8702 CD 1F 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 221+ 8705
 222+ 8705 01 03 00     	ld bc,3
 223+ 8708 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 224+ 870A              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 225+ 870A
 226+ 870A 01 09 00     	ld bc,9
 227+ 870D CD 1F 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 228+ 8710
 229+ 8710 01 02 00     	ld bc,2
 230+ 8713 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 231+ 8715
 232+ 8715 01 08 00     	ld bc,8
 233+ 8718 CD 1F 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 234+ 871B
 235+ 871B 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 236+ 871D 12           	ld (de),a 									; Vuelco (Frames_explosion).
 237+ 871E
 238+ 871E C9           	ret
 239+ 871F
 240+ 871F              ; ---------- -------------- ----------------
 241+ 871F
 242+ 871F EB           Situa_DE ex de,hl
 243+ 8720 A7           	and a
 244+ 8721 ED 4A        	adc hl,bc
 245+ 8723 EB           	ex de,hl
 246+ 8724 C9           	ret
 247+ 8725
 248+ 8725              ;---------------------------------------------------------------------------------------------------------------
 249+ 8725              ;
 250+ 8725              ;	5/1/24
 251+ 8725              ;
 252+ 8725              ;	INICIALIZA (Numero_parcial_de_entidades).
 253+ 8725              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 254+ 8725              ;
 255+ 8725              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 256+ 8725              ;
 257+ 8725              ;	(Numero_parcial_de_entidades)="7".
 258+ 8725              ;
 259+ 8725              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 260+ 8725              ;
 261+ 8725              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 262+ 8725              ;
 263+ 8725              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 264+ 8725              ;	MODIFICA: A y B.
 265+ 8725              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 266+ 8725
 267+ 8725              Inicializa_Numero_parcial_de_entidades
 268+ 8725
 269+ 8725              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 270+ 8725
 271+ 8725 3A 8D 87     	ld a,(Numero_de_entidades)
 272+ 8728 A7           	and a
 273+ 8729
 274+ 8729              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 275+ 8729              ;	jr z,$
 276+ 8729              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 277+ 8729
 278+ 8729 20 03        	jr nz,3F
 279+ 872B
 280+ 872B              ; ---------- ---------- ----------
 281+ 872B
 282+ 872B              ;! RESET para pruebas. Omitir esta línea en modo normal.
 283+ 872B              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 284+ 872B
 285+ 872B CD 50 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 286+ 872E
 287+ 872E              ; ---------- ---------- ----------
 288+ 872E
 289+ 872E 3A 8D 87     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 290+ 8731 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 291+ 8733 38 08        	jr c,1F
 292+ 8735
 293+ 8735              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 294+ 8735              ; Actualizamos variables.
 295+ 8735
 296+ 8735 3E 07        	ld a,7
 297+ 8737 32 8E 87     	ld (Numero_parcial_de_entidades),a
 298+ 873A 47           	ld b,a
 299+ 873B 18 04        	jr 2F
 300+ 873D
 301+ 873D              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 302+ 873D              ; (Numero_de_entidades)="0".
 303+ 873D
 304+ 873D 32 8E 87     1 ld (Numero_parcial_de_entidades),a
 305+ 8740 47           	ld b,a
 306+ 8741 C9           2 ret
# file closed: Niveles.asm
 106  8742
 107  8742              ; ******************************************************************************************************************************************************************************************
 108  8742              ; Constantes.
 109  8742              ; ******************************************************************************************************************************************************************************************
 110  8742              ;
 111  8742              ; 25/12/23
 112  8742
 113  8742              ;
 114  8742              ; Constantes.
 115  8742              ;
 116  8742
 117  8742              Sprite_vacio equ $f000
 118  8742              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  8742              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  8742              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  8742              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  8742
 123  8742              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  8742              ;														;
 125  8742              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  8742
 127  8742              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  8742              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  8742              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  8742              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  8742              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  8742
 133  8742              ;														; 55 Bytes.
 134  8742              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  8742              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  8742
 137  8742              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  8742
 139  8742              ; ******************************************************************************************************************************************************************************************
 140  8742              ; Variables.
 141  8742              ; ******************************************************************************************************************************************************************************************
 142  8742              ;
 143  8742              ; 18/01/24
 144  8742              ;
 145  8742              ; Variables de DRAW. (Motor principal).	42 Bytes.
 146  8742              ;
 147  8742
 148  8742              Variables_DRAW ; -----------------------------------------------------------------------------------------------
 149  8742
 150  8742 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  8743              ;															- Patrón de movimiento.
 152  8743              ;															- Aspecto
 153  8743 00           Filas db 0												; Filas. [DRAW]
 154  8744 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  8745 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  8747 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  8749 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  874A 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  874B
 160  874B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  874B
 162  874B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  874C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  874C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  874C 00           Attr db 0												; Atributos de la entidad:
 166  874D
 167  874D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  874D              ;
 169  874D              ;	COLORES: 0 ..... NEGRO
 170  874D              ;    		 1 ..... AZUL
 171  874D              ; 			 2 ..... ROJO
 172  874D              ;			 3 ..... MAGENTA
 173  874D              ; 			 4 ..... VERDE
 174  874D              ; 			 5 ..... CIAN
 175  874D              ;			 6 ..... AMARILLO
 176  874D              ; 			 7 ..... BLANCO
 177  874D
 178  874D 00 00        Indice_Sprite_der defw 0
 179  874F 00 00        Indice_Sprite_izq defw 0
 180  8751 00 00        Puntero_DESPLZ_der defw 0
 181  8753 00 00        Puntero_DESPLZ_izq defw 0
 182  8755
 183  8755 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  8757 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  8758
 186  8758              ; Variables de objeto. (Características).
 187  8758
 188  8758 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 189  8759              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 190  8759              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 191  8759 00 00 00...  Variables_de_borrado ds 6
 192  875F
 193  875F 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 194  8761              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 195  8761
 196  8761 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 197  8763
 198  8763              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 199  8763              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 200  8763
 201  8763 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 202  8765              ;														; _palabras que componen el "movimiento_masticado".
 203  8765
 204  8765              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 205  8765
 206  8765 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 207  8766              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 208  8766              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 209  8766              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 210  8766              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 211  8766              ;
 212  8766              ; 														DESCRIPCIÖN:
 213  8766              ;
 214  8766              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 215  8766              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 216  8766              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 217  8766              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 218  8766              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 219  8766              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 220  8766              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 221  8766              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 222  8766              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 223  8766              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 224  8766              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 225  8766              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 226  8766              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 227  8766              ;
 228  8766              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 229  8766              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 230  8766              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 231  8766
 232  8766              ; Variables de funcionamiento. [DRAW].
 233  8766
 234  8766 00           Columnas db 0
 235  8767 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 236  8769              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 237  8769 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  876A
 239  876A              ; variables de control general.
 240  876A
 241  876A 00           Ctrl_2 db 0
 242  876B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 243  876B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 244  876B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 245  876B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 246  876B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 247  876B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 248  876B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 249  876B              ;
 250  876B              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 251  876B              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 252  876B              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 253  876B              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 254  876B              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 255  876B              ;														BIT 4, ???
 256  876B              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 257  876B
 258  876B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 259  876C
 260  876C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 261  876C
 262  876C              ;					         		---------;      ;---------
 263  876C
 264  876C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 265  876C
 266  876C              Perfiles_de_velocidad
 267  876C
 268  876C 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 269  876D 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 270  876E 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 271  876F 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 272  8770
 273  8770              ; Contadores de 16 bits.
 274  8770
 275  8770 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 276  8772 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 277  8774 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 278  8776 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 279  8778
 280  8778              ; Movimiento. ------------------------------------------------------------------------------------------------------
 281  8778
 282  8778 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 283  877A 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 284  877C 00 00        Puntero_indice_mov_bucle defw 0							;
 285  877E              ;
 286  877E              ;
 287  877E 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 288  877F              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 289  877F              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 290  877F 00           Incrementa_puntero_backup db 0
 291  8780 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 292  8781              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 293  8781 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 294  8782 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 295  8783 00           Cola_de_desplazamiento db 0								; Este byte indica:
 296  8784              ;
 297  8784              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 298  8784              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 299  8784              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 300  8784              ;
 301  8784              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 302  8784              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 303  8784              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 304  8784              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 305  8784              ;
 306  8784              ;														;	"$ff" ..... Bucle infinito de repetición.
 307  8784              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 308  8784              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 309  8784              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  8784
 311  8784 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  8785
 313  8785              ;														DESCRIPCIÓN:
 314  8785              ;
 315  8785              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  8785              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  8785              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  8785              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  8785              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  8785              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  8785
 322  8785              ;														BIT 3, Recarga de nueva oleada.
 323  8785              ;														BIT 4, Recarga de nueva oleada.
 324  8785              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  8785              ;														BIT 6, **** Frame completo.
 326  8785              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  8785
 328  8785 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  8787              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  8787              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  8787              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  8787
 333  8787              ; Gestión de ENTIDADES y CAJAS.
 334  8787
 335  8787 00 00        Puntero_store_caja defw 0
 336  8789 00 00        Puntero_restore_caja defw 0
 337  878B 00 00        Indice_restore_caja defw 0
 338  878D 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  878E 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  878F 00           Entidades_en_curso db 0									; ..... ..... .....
 341  8790 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  8791              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  8791              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  8791              ;														; _ (Numero_de_malotes)="0".
 345  8791 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  8793 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  8795              ;														; _ puntero (Indice_entidades).
 348  8795
 349  8795              ;---------------------------------------------------------------------------------------------------------------
 350  8795              ;
 351  8795              ;	11/01/24
 352  8795              ;
 353  8795              ;	Álbumes.
 354  8795
 355  8795 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  8797              ;														; _variable para almacenar lo posición del puntero_
 357  8797              ; 														; _de pila, SP.
 358  8797 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  8799              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  8799 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  879B 00 70        Stack_snapshot defw Album_de_fotos
 362  879D 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  879F
 364  879F              ;End_Snapshot defw Album_de_fotos
 365  879F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  879F 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  87A1              ;														; _el snapshot de los registros del siguiente disparo.
 368  87A1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  87A1 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  87A3
 371  87A3 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  87A4              ;
 373  87A4              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  87A4              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 375  87A4              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 376  87A4
 377  87A4 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 378  87A5              ;
 379  87A5              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 380  87A5
 381  87A5              ; Gestión de Disparos.
 382  87A5
 383  87A5 00           Numero_de_disparotes db 0
 384  87A6 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 385  87A8 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 386  87AA 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 387  87AB              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 388  87AB              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 389  87AB 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 390  87AD              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 391  87AD              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 392  87AD              ;														; _produzca colisión.
 393  87AD 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 394  87AF              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 395  87AF 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 396  87B2              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 397  87B2 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 398  87B5              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 399  87B5 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 400  87B6
 401  87B6              ;---------------------------------------------------------------------------------------------------------------
 402  87B6
 403  87B6              ; Relojes y temporizaciones.
 404  87B6
 405  87B6 00           Contador_de_frames db 0
 406  87B7 00           Contador_de_frames_2 db 0
 407  87B8
 408  87B8 04           Clock_explosion db 4
 409  87B9 14           Clock_Entidades_en_curso db 20
 410  87BA 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 411  87BB              ;														; Repite la oleada de entidades.
 412  87BB 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 413  87BC 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 414  87BD 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 415  87BE
 416  87BE 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 417  87BF 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 418  87C0 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 419  87C1
 420  87C1              ;---------------------------------------------------------------------------------------------------------------
 421  87C1
 422  87C1              ; Gestión de NIVELES.
 423  87C1
 424  87C1 00           Nivel db 0												; Nivel actual del juego.
 425  87C2 00 00        Puntero_indice_NIVELES defw 0
 426  87C4 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 427  87C6              ; 														; _ que definen el NIVEL.
 428  87C6              ; Y todo comienza aquí .....
 429  87C6              ;
 430  87C6              ; 	INICIO  *************************************************************************************************************************************************************************
 431  87C6              ;
 432  87C6              ;	5/1/24
 433  87C6
 434  87C6              START
 435  87C6
 436  87C6 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 437  87C9 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 438  87CB ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 439  87CD ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 440  87CF F3           	DI
 441  87D0
 442  87D0 3E 07        	ld a,%00000111
 443  87D2 CD C4 97     	call Cls
 444  87D5 CD 18 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 445  87D8
 446  87D8              ; INICIALIZACIÓN.
 447  87D8
 448  87D8              ;	Inicializa 1er Nivel.
 449  87D8
 450  87D8 21 31 86     	ld hl,Indice_de_niveles
 451  87DB 22 C2 87     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 452  87DE CD 50 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 453  87E1              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 454  87E1              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 455  87E1              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 456  87E1
 457  87E1 CD 7F 86     4 call Prepara_cajas_de_entidades
 458  87E4
 459  87E4 CD B5 8A     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 460  87E7              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 461  87E7 CD C8 8B     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 462  87EA
 463  87EA 21 8E 87     	ld hl,Numero_parcial_de_entidades
 464  87ED 46           	ld b,(hl)
 465  87EE              ;	inc b
 466  87EE              ;	dec b
 467  87EE              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 468  87EE
 469  87EE              ;	INICIA ENTIDADES !!!!!
 470  87EE
 471  87EE              ;1 push bc  												; Guardo el contador de entidades.
 472  87EE              ;	call Inicia_entidad
 473  87EE
 474  87EE              ;	pop bc
 475  87EE              ;	djnz 1B  											; Decremento el contador de entidades.
 476  87EE
 477  87EE              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 478  87EE              ; (Esto se dá cuando se inicia una nueva oleada).
 479  87EE
 480  87EE              ;	ld a,(Ctrl_1)
 481  87EE              ;	bit 3,a
 482  87EE              ;	jr nz,5F											; Loop
 483  87EE
 484  87EE              ; 	INICIA AMADEUS !!!!!
 485  87EE
 486  87EE              ;3 call Restore_Amadeus
 487  87EE              ;	call Inicia_Puntero_objeto
 488  87EE              ;	call Draw
 489  87EE
 490  87EE              ;	call Guarda_movimiento_masticado	;! Provisional
 491  87EE
 492  87EE              ;	call Guarda_foto_registros
 493  87EE              ;	call Guarda_datos_de_borrado_Amadeus
 494  87EE
 495  87EE              ;	ld de,Amadeus_db
 496  87EE              ;	call Store_Amadeus
 497  87EE
 498  87EE              ; 	INICIA DISPAROS !!!!!
 499  87EE
 500  87EE              ;	call Inicia_Puntero_Disparo_Entidades
 501  87EE              ;	call Inicia_Puntero_Disparo_Amadeus
 502  87EE
 503  87EE              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 504  87EE
 505  87EE CD B5 8A     5 call Inicia_punteros_de_cajas
 506  87F1 CD C8 8B     	call Restore_entidad
 507  87F4
 508  87F4 3A 84 87     	ld a,(Ctrl_1)
 509  87F7 CB 5F        	bit 3,a
 510  87F9 28 07        	jr z,6F
 511  87FB
 512  87FB              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 513  87FB
 514  87FB 21 84 87     	ld hl,Ctrl_1
 515  87FE CB 9E        	res 3,(hl)
 516  8800 18 07        	jr Main
 517  8802
 518  8802              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 519  8802
 520  8802 21 A3 87     6 ld hl,Ctrl_3
 521  8805 CB C6        	set 0,(hl)											; Frame completo.
 522  8807 FB           	ei
 523  8808 76           	halt
 524  8809
 525  8809              ; ------------------------------------
 526  8809
 527  8809              Main
 528  8809              ;
 529  8809              ;	11/12/23
 530  8809
 531  8809              ; Aparece nueva entidad ???
 532  8809
 533  8809              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 534  8809              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 535  8809              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 536  8809              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 537  8809              ;														; _un 2º bloque.
 538  8809
 539  8809 3E 01        	ld a,1
 540  880B D3 FE        	out ($fe),a
 541  880D
 542  880D 3A B9 87     	ld a,(Clock_Entidades_en_curso)
 543  8810 47           	ld b,a
 544  8811 3A B6 87     	ld a,(Contador_de_frames)
 545  8814 B8           	cp b
 546  8815 20 18        	jr nz,13F
 547  8817
 548  8817              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 549  8817              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 550  8817
 551  8817 3A 8E 87     21 ld a,(Numero_parcial_de_entidades)
 552  881A 47           	ld b,a
 553  881B 3A 8F 87     	ld a,(Entidades_en_curso)
 554  881E B8           	cp b
 555  881F 28 0E        	jr z,13F
 556  8821 30 0C        	jr nc,13F
 557  8823
 558  8823 3C           	inc a
 559  8824 32 8F 87     	ld (Entidades_en_curso),a
 560  8827
 561  8827              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 562  8827
 563  8827 3A B9 87     	ld a,(Clock_Entidades_en_curso)
 564  882A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 565  882A              ;! _ IMPREDECIBLE !!!!
 566  882A C6 64        	add 100
 567  882C 32 B9 87     	ld (Clock_Entidades_en_curso),a
 568  882F
 569  882F              ; -------------------------------------------------------------------------------------------------------------
 570  882F
 571  882F              ; Habilita disparos.
 572  882F
 573  882F 21 BB 87     13 ld hl,Disparo_Amadeus
 574  8832 11 BD 87     	ld de,CLOCK_repone_disparo_Amadeus
 575  8835 CD 95 9B     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 576  8838
 577  8838 21 BE 87     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 578  883B 11 C0 87     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 579  883E CD 95 9B     	call Habilita_disparos
 580  8841
 581  8841              ; COLISIONES.
 582  8841
 583  8841 CD B7 90     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 584  8844
 585  8844              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 586  8844              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 587  8844              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 588  8844
 589  8844 AF           	xor a
 590  8845 32 AA 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 591  8848
 592  8848 CD B5 8A     	call Inicia_punteros_de_cajas
 593  884B CD C8 8B     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 594  884E              ; 														; _ en DRAW.
 595  884E 3A 43 87     	ld a,(Filas)
 596  8851 A7           	and a
 597  8852 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 598  8854 CD DA 8B     	call Incrementa_punteros_de_cajas
 599  8857 18 F2        	jr 12B
 600  8859
 601  8859              ; ---------------------------------------------------------------------------------------
 602  8859
 603  8859 3A 8E 87     10 ld a,(Numero_parcial_de_entidades)
 604  885C 47               ld b,a
 605  885D A7           	and a
 606  885E 20 14        	jr nz,11F
 607  8860
 608  8860 21 84 87     	ld hl,Ctrl_1
 609  8863 CB 66        	bit 4,(hl)
 610  8865 C2 0D 89     	jp nz,16F
 611  8868
 612  8868              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 613  8868
 614  8868 21 84 87     	ld hl,Ctrl_1
 615  886B CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 616  886D
 617  886D 3A B6 87     	ld a,(Contador_de_frames)
 618  8870 3C           	inc a
 619  8871 32 BA 87     	ld (Activa_recarga_cajas),a
 620  8874
 621  8874              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 622  8874
 623  8874 3A 8F 87     11 ld a,(Entidades_en_curso)
 624  8877 A7           	and a
 625  8878 CA 0D 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 626  887B 47           	ld b,a												; No hay entidades que gestionar.
 627  887C
 628  887C              ; ( Código que ejecutamos con cada entidad: ).
 629  887C
 630  887C              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 631  887C
 632  887C C5           15 push bc 												; Nº de entidades en curso.
 633  887D
 634  887D              ; Existe "Entidad_guía" ???.
 635  887D              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 636  887D
 637  887D 3A A3 87     	ld a,(Ctrl_3)
 638  8880 CB 4F        	bit 1,a
 639  8882 20 11        	jr nz,22F
 640  8884
 641  8884              ; Almacén de "Movimientos_masticados" lleno ???
 642  8884              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 643  8884              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 644  8884
 645  8884 3A A3 87     	ld a,(Ctrl_3)
 646  8887 CB 5F        	bit 3,a
 647  8889 20 0A        	jr nz,22F
 648  888B
 649  888B              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 650  888B
 651  888B 21 6A 87     	ld hl,Ctrl_2
 652  888E CB EE        	set 5,(hl)
 653  8890 21 A3 87     	ld hl,Ctrl_3
 654  8893 CB CE        	set 1,(hl)
 655  8895
 656  8895              ; Impacto ???
 657  8895
 658  8895 3A 58 87     22 ld a,(Impacto)
 659  8898 A7           	and a
 660  8899 28 31        	jr z,8F
 661  889B
 662  889B              ; Hay Impacto en esta entidad.
 663  889B
 664  889B 21 B8 87     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 665  889E 35           	dec (hl)
 666  889F C2 00 89     	jp nz,17F
 667  88A2
 668  88A2              ;! Velocidad de la animación de la explosión.
 669  88A2
 670  88A2 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 671  88A4              ;														; _,(velocidad de la explosión).
 672  88A4              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 673  88A4
 674  88A4 CD 8C 8C     	call Repone_datos_de_borrado
 675  88A7 CD F3 8A     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 676  88AA
 677  88AA              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 678  88AA
 679  88AA 3A 6A 87     	ld a,(Ctrl_2)
 680  88AD CB 4F        	bit 1,a
 681  88AF 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 682  88B1
 683  88B1              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 684  88B1
 685  88B1 3A 4B 87     	ld a,(CTRL_DESPLZ)
 686  88B4 A7           	and a
 687  88B5 20 08        	jr nz,18F
 688  88B7
 689  88B7 21 84 84     	ld hl,Indice_Explosion_2x2-2
 690  88BA 22 51 87     	ld (Puntero_DESPLZ_der),hl
 691  88BD 18 06        	jr 19F
 692  88BF
 693  88BF 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 694  88C2 22 51 87     	ld (Puntero_DESPLZ_der),hl
 695  88C5
 696  88C5 21 6A 87     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 697  88C8 CB CE        	set 1,(hl)
 698  88CA 18 22        	jr 7F
 699  88CC
 700  88CC              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 701  88CC              ; _con las coordenadas de la entidad almacenada en DRAW.
 702  88CC
 703  88CC 3A 84 87     8 ld a,(Ctrl_1)
 704  88CF CB 57        	bit 2,a
 705  88D1 28 1B        	jr z,7F
 706  88D3
 707  88D3 2A AD 87     	ld hl,(Coordenadas_disparo_certero)
 708  88D6 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 709  88D7              ;														; E contiene la coordenada_X del disparo.
 710  88D7 2A 49 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 711  88DA              ;														; H FILA, (Coordenada_y de la entidad).
 712  88DA A7           	and a
 713  88DB ED 52        	sbc hl,de
 714  88DD
 715  88DD CD D0 90     	call Determina_resultado_comparativa
 716  88E0
 717  88E0 78           	ld a,b
 718  88E1 A7           	and a
 719  88E2 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 720  88E4
 721  88E4              ; ----- ----- -----
 722  88E4
 723  88E4 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 724  88E6 32 58 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 725  88E9
 726  88E9 21 84 87     	ld hl,Ctrl_1
 727  88EC CB 96        	res 2,(hl)
 728  88EE
 729  88EE CD 5E 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 730  88F1
 731  88F1 3A 65 87     	ld a,(Ctrl_0)
 732  88F4 CB 67        	bit 4,a
 733  88F6 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 734  88F8
 735  88F8              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 736  88F8              ; [[[
 737  88F8              ;	call Detecta_disparo_entidad
 738  88F8              ; ]]]
 739  88F8
 740  88F8 CD 36 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 741  88FB
 742  88FB 21 65 87     	ld hl,Ctrl_0
 743  88FE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 744  8900
 745  8900 CD 89 8B     17 call Store_Restore_cajas
 746  8903
 747  8903 C1           	pop bc
 748  8904
 749  8904 05           	dec b
 750  8905 C2 7C 88     	jp nz,15B
 751  8908
 752  8908              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 753  8908              ; Hemos gestionado todas las unidades.
 754  8908              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 755  8908
 756  8908 21 84 87     	ld hl,Ctrl_1
 757  890B CB 96        	res 2,(hl)
 758  890D
 759  890D 21 A3 87     16 ld hl,Ctrl_3
 760  8910 CB C6        	set 0,(hl)											; Frame completo.
 761  8912
 762  8912 AF           	xor a
 763  8913 D3 FE        	out ($fe),a
 764  8915
 765  8915 FB           	ei
 766  8916 76           	halt
 767  8917
 768  8917              ; ----------------------------------------
 769  8917
 770  8917 3A 84 87     	ld a,(Ctrl_1) 										; Existe Loop?
 771  891A CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 772  891C CA 09 88     	jp z,Main
 773  891F
 774  891F              ; RECARGA DE NUEVA OLEADA.
 775  891F
 776  891F 3A B6 87     	ld a,(Contador_de_frames)
 777  8922 47           	ld b,a
 778  8923 3A BA 87     	ld a,(Activa_recarga_cajas)
 779  8926 B8           	cp b
 780  8927 28 08        	jr z,20F
 781  8929
 782  8929 21 84 87     	ld hl,Ctrl_1
 783  892C CB E6        	set 4,(hl)
 784  892E C3 09 88     	jp Main
 785  8931
 786  8931 21 84 87     20 ld hl,Ctrl_1
 787  8934 CB A6        	res 4,(hl)
 788  8936
 789  8936 3A B6 87     	ld a,(Contador_de_frames)
 790  8939
 791  8939              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 792  8939              ;! _ IMPREDECIBLE !!!!
 793  8939
 794  8939 C6 0A        	add 10
 795  893B 32 B9 87     	ld (Clock_Entidades_en_curso),a
 796  893E
 797  893E C3 E1 87     	jp 4B
 798  8941
 799  8941 C9           	ret
 800  8942
 801  8942              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 802  8942              ;
 803  8942              ;	16/11/23
 804  8942
 805  8942              Gestiona_Amadeus
 806  8942
 807  8942              ;! Activa/desactiva impacto con Amadeus.
 808  8942
 809  8942              ;	ld a,(Impacto)
 810  8942              ;	and a
 811  8942              ;	jr nz,2F
 812  8942
 813  8942 CD BB 89     	call Mov_Amadeus
 814  8945
 815  8945 3A 65 87     2 ld a,(Ctrl_0)
 816  8948 CB 67        	bit 4,a
 817  894A 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 818  894C
 819  894C CD 36 8A     	call Guarda_foto_entidad_a_pintar
 820  894F CD 6C 8C     	call Guarda_datos_de_borrado_Amadeus
 821  8952
 822  8952 21 65 87     1 ld hl,Ctrl_0
 823  8955 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 824  8957
 825  8957 CD 5B 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 826  895A
 827  895A              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 828  895A
 829  895A CD 35 8B     	call Calcula_numero_de_disparotes
 830  895D
 831  895D C9           	ret
 832  895E
 833  895E              ; --------------------------------------------------------------------------------------------------------------
 834  895E              ;
 835  895E              ;	15/12/23
 836  895E
 837  895E              Mov_obj
 838  895E
 839  895E 3A 6A 87     	ld a,(Ctrl_2)
 840  8961 CB 4F        	bit 1,a
 841  8963 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 842  8965
 843  8965              ; Explosión:
 844  8965
 845  8965 3A 6B 87     	ld a,(Frames_explosion)
 846  8968 A7           	and a
 847  8969 20 1D        	jr nz,4F
 848  896B
 849  896B              ;!  Una alimaña menos!!!!!!!!!1
 850  896B
 851  896B              ; Se trataba de una Entidad_guía ???
 852  896B
 853  896B 3A 6A 87     	ld a,(Ctrl_2)
 854  896E CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 855  8970 28 05        	jr z,5F
 856  8972
 857  8972 21 A3 87     	ld hl,Ctrl_3
 858  8975 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 859  8977
 860  8977              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 861  8977              ;!! _generado puede ser distinto, (aletoriedad).
 862  8977
 863  8977 CD 0A 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 864  897A 21 8E 87     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 865  897D 35           	dec (hl)
 866  897E 21 8F 87     	ld hl,Entidades_en_curso
 867  8981 35           	dec (hl)
 868  8982 21 8D 87     	ld hl,Numero_de_entidades
 869  8985 35           	dec (hl)
 870  8986 18 32        	jr 3F
 871  8988
 872  8988              ; -----
 873  8988
 874  8988              ;	`Movemos´ la explosión.
 875  8988
 876  8988 2A 51 87     4 ld hl,(Puntero_DESPLZ_der)
 877  898B 23           	inc hl
 878  898C 23           	inc hl
 879  898D 22 51 87     	ld (Puntero_DESPLZ_der),hl
 880  8990 CD 4D 8B     	call Extrae_address
 881  8993 22 47 87     	ld (Puntero_objeto),hl
 882  8996
 883  8996 21 6B 87     	ld hl,Frames_explosion
 884  8999 35           	dec (hl)
 885  899A
 886  899A 21 65 87     	ld hl,Ctrl_0
 887  899D CB E6        	set 4,(hl)
 888  899F
 889  899F 18 19        	jr 3F
 890  89A1
 891  89A1              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 892  89A1
 893  89A1 AF           2 xor a
 894  89A2 32 65 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 895  89A5
 896  89A5              ; Movemos Entidades malignas.
 897  89A5              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 898  89A5
 899  89A5              ;	ld a,(Ctrl_2)
 900  89A5              ;	bit 5,a
 901  89A5              ;	jr nz,8F
 902  89A5
 903  89A5              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 904  89A5              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 905  89A5              ;	jr 7F
 906  89A5
 907  89A5              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 908  89A5
 909  89A5              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 910  89A5              ;	bit 4,a
 911  89A5              ;	ret z
 912  89A5
 913  89A5              ; Ha habido desplazamiento de la entidad maligna.
 914  89A5              ; Ha llegado a zona de AMADEUS ???
 915  89A5
 916  89A5 3A 4A 87     7 ld a,(Coordenada_y)
 917  89A8 FE 14        	cp $14
 918  89AA 38 08        	jr c,1F
 919  89AC
 920  89AC              ; ---------
 921  89AC
 922  89AC              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 923  89AC              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 924  89AC
 925  89AC F3           	di
 926  89AD CD 80 8E     	call Genera_coordenadas_X
 927  89B0 CD BC 8E     	call Compara_coordenadas_X
 928  89B3 FB           	ei
 929  89B4
 930  89B4              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 931  89B4
 932  89B4              ; ---------
 933  89B4
 934  89B4              1
 935  89B4
 936  89B4              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 937  89B4 CD 8C 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 938  89B7 CD F3 8A     	call Limpia_Variables_de_borrado
 939  89BA
 940  89BA C9           3 ret
 941  89BB
 942  89BB              ; --------------------------------------------------------------------------------------------------------------
 943  89BB              ;
 944  89BB              ;	29/1/23
 945  89BB
 946  89BB              Mov_Amadeus
 947  89BB
 948  89BB              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 949  89BB
 950  89BB CD 7C 98     	call Mov_right
 951  89BE
 952  89BE 3A 65 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 953  89C1 CB 67        	bit 4,a
 954  89C3 C8           	ret z
 955  89C4
 956  89C4              ; ---------
 957  89C4
 958  89C4              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 959  89C4 CD 7C 8C     	call Repone_datos_de_borrado_Amadeus
 960  89C7 CD F3 8A     	call Limpia_Variables_de_borrado
 961  89CA
 962  89CA C9           	ret
 963  89CB
 964  89CB              ; -----------------------------------------------------------------------------------
 965  89CB              ;
 966  89CB              ;	20/01/24
 967  89CB              ;
 968  89CB              ;
 969  89CB
 970  89CB              Construye_movimientos_masticados_entidad
 971  89CB
 972  89CB 2A 61 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 973  89CE E5           	push hl
 974  89CF
 975  89CF CD 13 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 976  89D2              ;															; _ el (Contador_de_mov_masticados).
 977  89D2 CD 53 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 978  89D5              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 979  89D5 CD D8 97     	call Recompone_posicion_inicio
 980  89D8
 981  89D8 CD B7 91     1 call Draw
 982  89DB CD F7 89     	call Guarda_movimiento_masticado
 983  89DE CD 40 9D     	call Movimiento
 984  89E1
 985  89E1 3A A3 87     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 986  89E4 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
 987  89E6 28 F0        	jr z,1B
 988  89E8
 989  89E8              ;	Hemos completado el almacén de movimientos masticados de la entidad.
 990  89E8              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
 991  89E8
 992  89E8 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
 993  89E9 22 61 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
 994  89EC
 995  89EC
 996  89EC              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
 997  89EC
 998  89EC CD B1 9E     	call Situa_en_Contador_general_de_mov_masticados
 999  89EF
1000  89EF              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1001  89EF              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1002  89EF
1003  89EF ED 4B 63 87  	ld bc,(Contador_de_mov_masticados)
1004  89F3 71           	ld (hl),c
1005  89F4 23           	inc hl
1006  89F5 70           	ld (hl),b
1007  89F6
1008  89F6 C9           	ret
1009  89F7
1010  89F7              ; -----------------------------------------------------------------------------------
1011  89F7              ;
1012  89F7              ;	28/12/23
1013  89F7              ;
1014  89F7              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1015  89F7              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1016  89F7
1017  89F7              Guarda_movimiento_masticado
1018  89F7
1019  89F7 ED 73 95 87  	ld (Stack),sp
1020  89FB ED 7B 61 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1021  89FF
1022  89FF E5           	push hl
1023  8A00 DD E5            push ix
1024  8A02 FD E5            push iy
1025  8A04
1026  8A04 ED 7B 95 87      ld sp,(Stack)
1027  8A08
1028  8A08              ;    push hl
1029  8A08
1030  8A08 2A 63 87        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1031  8A0B 23           	inc hl
1032  8A0C 22 63 87     	ld (Contador_de_mov_masticados),hl
1033  8A0F
1034  8A0F              ;	pop hl
1035  8A0F
1036  8A0F CD 13 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1037  8A12              ;															; _ el (Contador_de_mov_masticados).
1038  8A12 C9               ret
1039  8A13
1040  8A13              ; --------------------------------------------------------------------------------------------------------------
1041  8A13              ;
1042  8A13              ;	12/1/24
1043  8A13              ;
1044  8A13              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1045  8A13
1046  8A13              Actualiza_Puntero_de_almacen_de_mov_masticados
1047  8A13
1048  8A13              ;	push hl
1049  8A13              ;	push bc
1050  8A13
1051  8A13 2A 61 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1052  8A16 01 06 00     	ld bc,6
1053  8A19 A7           	and a
1054  8A1A ED 4A        	adc hl,bc
1055  8A1C 22 61 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1056  8A1F
1057  8A1F              ;	pop bc
1058  8A1F              ;	pop hl
1059  8A1F
1060  8A1F C9           	ret
1061  8A20
1062  8A20              ; --------------------------------------------------------------------------------------------------------------
1063  8A20              ;
1064  8A20              ;	15/01/24
1065  8A20              ;
1066  8A20              ;	Cargamos los registros_
1067  8A20              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1068  8A20              ;
1069  8A20              ;	HL contiene la dirección de la rutina de impresión.
1070  8A20              ;	IX contiene el puntero de impresión.
1071  8A20              ;	IY contiene (Puntero_objeto).
1072  8A20
1073  8A20
1074  8A20 ED 73 95 87  Cargamos_registros_con_mov_masticado ld (Stack),sp
1075  8A24 ED 7B 61 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1076  8A28
1077  8A28 FD E1        	pop iy
1078  8A2A DD E1        	pop ix
1079  8A2C E1           	pop hl
1080  8A2D
1081  8A2D ED 73 61 87  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1082  8A31
1083  8A31 ED 7B 95 87  	ld sp,(Stack)
1084  8A35
1085  8A35 C9           	ret
1086  8A36
1087  8A36              ; --------------------------------------------------------------------------------------------------------------
1088  8A36              ;
1089  8A36              ;	28/12/23
1090  8A36              ;
1091  8A36              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1092  8A36              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1093  8A36
1094  8A36              Guarda_foto_entidad_a_pintar
1095  8A36
1096  8A36 3A 65 87     	ld a,(Ctrl_0)
1097  8A39 CB 77        	bit 6,a
1098  8A3B 28 0A        	jr z,5F
1099  8A3D
1100  8A3D              ; Guarda la foto de Amadeus.
1101  8A3D
1102  8A3D CD B7 91     	call Draw
1103  8A40
1104  8A40 CD F7 89     	call Guarda_movimiento_masticado	;! Provisional
1105  8A43
1106  8A43 CD 16 71     	call Guarda_foto_registros
1107  8A46
1108  8A46              ;	di
1109  8A46              ;	jr $
1110  8A46              ;	ei
1111  8A46
1112  8A46 C9           	ret
1113  8A47
1114  8A47              ; ENTIDADES!
1115  8A47              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1116  8A47
1117  8A47 3A A3 87     5 ld a,(Ctrl_3)
1118  8A4A CB 5F        	bit 3,a
1119  8A4C 28 04        	jr z,1F
1120  8A4E
1121  8A4E              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1122  8A4E
1123  8A4E CD 89 8A     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1124  8A51 C9           	ret
1125  8A52
1126  8A52              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1127  8A52
1128  8A52 3A A3 87     1 ld a,(Ctrl_3)
1129  8A55 CB 57        	bit 2,a
1130  8A57 20 10        	jr nz,6F
1131  8A59
1132  8A59              ; Entidad guía o fantasma ???
1133  8A59
1134  8A59 3A 6A 87     	ld a,(Ctrl_2)
1135  8A5C CB 6F        	bit 5,a
1136  8A5E 20 10        	jr nz,3F
1137  8A60
1138  8A60              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1139  8A60
1140  8A60 18 EC        	jr 4B
1141  8A62
1142  8A62              ; ENTIDAD_GUÍA:
1143  8A62              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1144  8A62              ; _guardando "movimientos_masticados".
1145  8A62
1146  8A62 3A A3 87     2 ld a,(Ctrl_3)
1147  8A65 CB 57        	bit 2,a
1148  8A67 28 07        	jr z,3F
1149  8A69
1150  8A69              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1151  8A69              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1152  8A69
1153  8A69 CB 97        6 res 2,a
1154  8A6B CB DF        	set 3,a
1155  8A6D 32 A3 87     	ld (Ctrl_3),a
1156  8A70
1157  8A70
1158  8A70              ;	Esto sólo lo ejecuta una entidad guía.
1159  8A70
1160  8A70 CD B7 91     3 	call Draw
1161  8A73 CD F7 89     	call Guarda_movimiento_masticado
1162  8A76 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1163  8A79
1164  8A79              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1165  8A79              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1166  8A79
1167  8A79 CD 7D 8A     	call Convierte_guia_en_fantasma
1168  8A7C C9           	ret
1169  8A7D
1170  8A7D              ; --------------------------------------------------------------------------------------------------------------
1171  8A7D              ;
1172  8A7D              ;	28/12/23
1173  8A7D              ;
1174  8A7D
1175  8A7D 3A A3 87     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1176  8A80 CB 5F        	bit 3,a
1177  8A82 C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1178  8A83
1179  8A83              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1180  8A83
1181  8A83 21 6A 87     	ld hl,Ctrl_2
1182  8A86 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1183  8A88
1184  8A88 C9           	ret
1185  8A89
1186  8A89              ; --------------------------------------------------------------------------------------------------------------
1187  8A89              ;
1188  8A89              ;	21/12/23
1189  8A89              ;
1190  8A89              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1191  8A89              ;
1192  8A89              ;		IY contiene (Puntero_objeto).
1193  8A89              ;		IX contiene el puntero de impresión.
1194  8A89              ;		HL contiene la dirección de la rutina de impresión.
1195  8A89              ;
1196  8A89              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1197  8A89              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1198  8A89              ;	Decrementa el (Contador_de_mov_masticados)
1199  8A89              ;
1200  8A89              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1201  8A89              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1202  8A89              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1203  8A89
1204  8A89
1205  8A89 ED 73 95 87  Prepara_registros_con_mov_masticados ld (Stack),sp
1206  8A8D ED 7B 61 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1207  8A91
1208  8A91 FD E1        	pop iy
1209  8A93 DD E1        	pop ix
1210  8A95 E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1211  8A96
1212  8A96 ED 73 61 87  	ld (Puntero_de_almacen_de_mov_masticados),sp
1213  8A9A ED 7B 95 87  	ld sp,(Stack)
1214  8A9E
1215  8A9E CD 16 71     	call Guarda_foto_registros
1216  8AA1
1217  8AA1 E5           	push hl
1218  8AA2
1219  8AA2 2A 63 87     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1220  8AA5 23           	inc hl
1221  8AA6 22 63 87     	ld (Contador_de_mov_masticados),hl
1222  8AA9
1223  8AA9              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1224  8AA9
1225  8AA9 ED 4B 70 87  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1226  8AAD A7           	and a
1227  8AAE ED 42        	sbc hl,bc
1228  8AB0 CC 7D 8A     	call z,Convierte_guia_en_fantasma
1229  8AB3
1230  8AB3 E1           	pop hl
1231  8AB4
1232  8AB4 C9           	ret
1233  8AB5
1234  8AB5              ; --------------------------------------------------------------------------------------------------------------
1235  8AB5              ;
1236  8AB5              ;	19/9/23
1237  8AB5
1238  8AB5              ;Prepara_var_pintado
1239  8AB5
1240  8AB5              ;	ld hl,Filas
1241  8AB5              ;	ld de,Variables_de_pintado
1242  8AB5              ;	ld bc,8
1243  8AB5              ;	ldir
1244  8AB5              ;	ret
1245  8AB5
1246  8AB5              ; --------------------------------------------------------------------------------------------------------------
1247  8AB5
1248  8AB5              ;Repone_pintar
1249  8AB5
1250  8AB5              ;	ld hl,Variables_de_pintado
1251  8AB5              ;	ld de,Filas
1252  8AB5              ;	ld bc,8
1253  8AB5              ;	ldir
1254  8AB5              ;	ret
1255  8AB5
1256  8AB5              ; *************************************************************************************************************************************************************
1257  8AB5              ;
1258  8AB5              ; 8/1/23
1259  8AB5              ;
1260  8AB5              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1261  8AB5              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1262  8AB5              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1263  8AB5
1264  8AB5              ; Destruye HL y DE !!!!!
1265  8AB5
1266  8AB5              Inicia_punteros_de_cajas
1267  8AB5
1268  8AB5 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1269  8AB8 CD 4D 8B         call Extrae_address
1270  8ABB 22 87 87         ld (Puntero_store_caja),hl
1271  8ABE 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1272  8AC1 22 8B 87     	ld (Indice_restore_caja),hl
1273  8AC4 CD 4D 8B     	call Extrae_address
1274  8AC7 22 89 87     	ld (Puntero_restore_caja),hl
1275  8ACA C9               ret
1276  8ACB
1277  8ACB              ; *************************************************************************************************************************************************************
1278  8ACB              ;
1279  8ACB              ; 8/1/23
1280  8ACB              ;
1281  8ACB              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1282  8ACB
1283  8ACB 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1284  8ACE 22 A6 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1285  8AD1 C9           	ret
1286  8AD2 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1287  8AD5 22 A8 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1288  8AD8 C9           	ret
1289  8AD9
1290  8AD9              ; -------------------------------------------------------------------------------------------------------------
1291  8AD9              ;
1292  8AD9              ; 21/9/23
1293  8AD9              ;
1294  8AD9
1295  8AD9              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1296  8AD9
1297  8AD9              Limpia_album_Amadeus
1298  8AD9
1299  8AD9 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1300  8ADC 7E           	ld a,(hl)
1301  8ADD A7           	and a
1302  8ADE C8           	ret z
1303  8ADF
1304  8ADF 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1305  8AE2 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1306  8AE5 01 0B 00     	ld bc,11
1307  8AE8 AF           	xor a
1308  8AE9 77           	ld (hl),a
1309  8AEA ED B0        	ldir
1310  8AEC
1311  8AEC 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1312  8AEF 22 A1 87     	ld (End_Snapshot_Amadeus),hl
1313  8AF2
1314  8AF2 C9           	ret
1315  8AF3
1316  8AF3 21 59 87     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1317  8AF6 11 5A 87     	ld de,Variables_de_borrado+1
1318  8AF9 01 05 00     	ld bc,5
1319  8AFC AF           	xor a
1320  8AFD 77           	ld (hl),a
1321  8AFE ED B0        	ldir
1322  8B00 C9           	ret
1323  8B01
1324  8B01              ; -------------------------------------------------------------------------------------------------------------
1325  8B01              ;
1326  8B01              ; 8/9/23
1327  8B01              ;
1328  8B01
1329  8B01              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1330  8B01              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1331  8B01
1332  8B01              Calcula_numero_de_malotes
1333  8B01
1334  8B01 21 00 70     	ld hl,Album_de_fotos
1335  8B04 EB           	ex de,hl
1336  8B05 2A 9B 87     	ld hl,(Stack_snapshot)
1337  8B08
1338  8B08 06 00        	ld b,0
1339  8B0A 7D           	ld a,l
1340  8B0B 93           	sub e
1341  8B0C 28 07        	jr z,1F
1342  8B0E
1343  8B0E              ; Nº de malotes no es "0".
1344  8B0E
1345  8B0E D6 06        2 sub 6
1346  8B10 04           	inc b
1347  8B11 A7           	and a
1348  8B12 20 FA        	jr nz,2B
1349  8B14 78           	ld a,b
1350  8B15
1351  8B15 32 90 87     1 ld (Numero_de_malotes),a
1352  8B18 C9           	ret
1353  8B19
1354  8B19              ; -------------------------------------------------------------------------------------------------------------
1355  8B19              ;
1356  8B19              ; 8/9/23
1357  8B19              ;
1358  8B19
1359  8B19              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1360  8B19              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1361  8B19
1362  8B19              Calcula_malotes_Amadeus
1363  8B19
1364  8B19 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1365  8B1C EB           	ex de,hl
1366  8B1D 2A A1 87     	ld hl,(End_Snapshot_Amadeus)
1367  8B20
1368  8B20 7C           	ld a,h
1369  8B21 A7           	and a
1370  8B22 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1371  8B24
1372  8B24 06 00        	ld b,0
1373  8B26 7D           	ld a,l
1374  8B27 93           	sub e
1375  8B28 28 07        	jr z,1F
1376  8B2A
1377  8B2A              ; Nº de malotes no es "0".
1378  8B2A
1379  8B2A D6 06        2 sub 6
1380  8B2C 04           	inc b
1381  8B2D A7           	and a
1382  8B2E 20 FA        	jr nz,2B
1383  8B30 78           	ld a,b
1384  8B31
1385  8B31 32 90 87     1 ld (Numero_de_malotes),a
1386  8B34 C9           	ret
1387  8B35
1388  8B35              ; -------------------------------------------------------------------------------------------------------------
1389  8B35              ;
1390  8B35              ; 28/2/23
1391  8B35              ;
1392  8B35
1393  8B35              Calcula_numero_de_disparotes
1394  8B35
1395  8B35 21 56 70     	ld hl,Album_de_fotos_disparos
1396  8B38 EB           	ex de,hl
1397  8B39 2A 9F 87     	ld hl,(End_Snapshot_disparos)
1398  8B3C
1399  8B3C 06 00        	ld b,0
1400  8B3E 7D           	ld a,l
1401  8B3F 93           	sub e
1402  8B40 28 07        	jr z,1F
1403  8B42
1404  8B42              ; Nº de malotes no es "0".
1405  8B42
1406  8B42 D6 06        2 sub 6
1407  8B44 04           	inc b
1408  8B45 A7           	and a
1409  8B46 20 FA        	jr nz,2B
1410  8B48 78           	ld a,b
1411  8B49
1412  8B49 32 A5 87     1 ld (Numero_de_disparotes),a
1413  8B4C C9           	ret
1414  8B4D
1415  8B4D              ; *************************************************************************************************************************************************************
1416  8B4D              ;
1417  8B4D              ; 20/10/22
1418  8B4D              ;
1419  8B4D              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1420  8B4D              ;
1421  8B4D              ; Destruye el puntero y DE !!!!!
1422  8B4D
1423  8B4D 5E           Extrae_address ld e,(hl)
1424  8B4E 23           	inc hl
1425  8B4F 56           	ld d,(hl)
1426  8B50 2B           	dec hl
1427  8B51 EB           	ex de,hl
1428  8B52 C9           	ret
1429  8B53
1430  8B53              ; *************************************************************************************************************************************************************
1431  8B53              ;
1432  8B53              ;	20/1/24
1433  8B53              ;
1434  8B53              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1435  8B53              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1436  8B53              ;
1437  8B53              ;   Destruye HL y BC !!!!!,
1438  8B53              ;
1439  8B53              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1440  8B53              ;					"0" ..... Izquierda.
1441  8B53
1442  8B53              Inicia_Puntero_objeto
1443  8B53
1444  8B53 3A 57 87     	ld a,(Cuad_objeto)
1445  8B56 E6 01        	and 1
1446  8B58 F5           	push af
1447  8B59 CC 76 8B     	call z,Inicia_puntero_objeto_izq
1448  8B5C F1           	pop af
1449  8B5D 28 4C        	jr z,1F
1450  8B5F CD 63 8B     	call Inicia_puntero_objeto_der
1451  8B62 C9           	ret
1452  8B63
1453  8B63              ; Arrancamos desde la parte izquierda de la pantalla.
1454  8B63              ; Iniciamos (Indice_Sprite_der).
1455  8B63
1456  8B63 2A 4D 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1457  8B66 22 51 87     	ld (Puntero_DESPLZ_der),hl
1458  8B69 CD 4D 8B     	call Extrae_address
1459  8B6C 22 47 87     	ld (Puntero_objeto),hl
1460  8B6F
1461  8B6F 2A 4F 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1462  8B72 22 53 87     	ld (Puntero_DESPLZ_izq),hl
1463  8B75 C9           	ret
1464  8B76
1465  8B76              ; Arrancamos desde la parte derecha de la pantalla.
1466  8B76              ; Iniciamos (Indice_Sprite_izq).
1467  8B76
1468  8B76 2A 4F 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1469  8B79 22 53 87     	ld (Puntero_DESPLZ_izq),hl
1470  8B7C CD 4D 8B     	call Extrae_address
1471  8B7F 22 47 87     	ld (Puntero_objeto),hl
1472  8B82
1473  8B82 2A 4D 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1474  8B85 22 51 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1475  8B88 C9           	ret
1476  8B89
1477  8B89              ; *************************************************************************************************************************************************************
1478  8B89              ;
1479  8B89              ;	21/12/23
1480  8B89              ;
1481  8B89              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1482  8B89              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1483  8B89
1484  8B89              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1485  8B89              ;	_de la 2ª y 3ª entidad respectivamente.
1486  8B89
1487  8B89              Store_Restore_cajas
1488  8B89
1489  8B89              ;	push hl
1490  8B89              ;	push de
1491  8B89              ; 	push bc
1492  8B89
1493  8B89              ;	STORE !!!!!
1494  8B89              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1495  8B89
1496  8B89
1497  8B89 F3           	di
1498  8B8A 21 42 87     	ld hl,Variables_DRAW
1499  8B8D ED 5B 87 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1500  8B91 01 2A 00     	ld bc,42
1501  8B94 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1502  8B96 FB           	ei
1503  8B97
1504  8B97 18 FE        	jr $
1505  8B99
1506  8B99              ; 	Entidad_sospechosa. 20/4/23
1507  8B99
1508  8B99 3A 58 87     	ld a,(Impacto)
1509  8B9C A7           	and a
1510  8B9D 28 0C        	jr z,1F
1511  8B9F
1512  8B9F 2A 87 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1513  8BA2 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1514  8BA5 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1515  8BA6 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1516  8BA8 22 AB 87     	ld (Entidad_sospechosa_de_colision),hl
1517  8BAB
1518  8BAB              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1519  8BAB
1520  8BAB 2A 89 87     1 ld hl,(Puntero_restore_caja)
1521  8BAE 7E           	ld a,(hl)
1522  8BAF A7           	and a
1523  8BB0 F5           	push af
1524  8BB1 28 0E        	jr z,2F
1525  8BB3
1526  8BB3 F3           	di
1527  8BB4 18 FE        	jr $
1528  8BB6 FB           	ei
1529  8BB7
1530  8BB7 F3           	di
1531  8BB8 11 42 87     	ld de,Variables_DRAW
1532  8BBB 01 2A 00     	ld bc,42
1533  8BBE ED B0        	ldir
1534  8BC0 FB           	ei
1535  8BC1
1536  8BC1 CD DA 8B     2 call Incrementa_punteros_de_cajas
1537  8BC4
1538  8BC4 F1           	pop af
1539  8BC5 28 E4        	jr z,1B
1540  8BC7
1541  8BC7              ;	pop bc
1542  8BC7              ;	pop de
1543  8BC7              ;	pop hl
1544  8BC7
1545  8BC7 C9           	ret
1546  8BC8
1547  8BC8              ; **************************************************************************************************
1548  8BC8              ;
1549  8BC8              ;	21/12/23
1550  8BC8              ;
1551  8BC8              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1552  8BC8
1553  8BC8 E5           Restore_entidad push hl
1554  8BC9 D5           	push de
1555  8BCA C5            	push bc
1556  8BCB
1557  8BCB 2A 87 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1558  8BCE 11 42 87     	ld de,Variables_DRAW
1559  8BD1 01 2A 00     	ld bc,42
1560  8BD4 ED B0        	ldir
1561  8BD6
1562  8BD6 C1           	pop bc
1563  8BD7 D1           	pop de
1564  8BD8 E1           	pop hl
1565  8BD9 C9           	ret
1566  8BDA
1567  8BDA              ; **************************************************************************************************
1568  8BDA              ;
1569  8BDA              ;	08/05/23
1570  8BDA              ;
1571  8BDA              ;	Incrementamos los dos punteros de entidades. (+1).
1572  8BDA
1573  8BDA              Incrementa_punteros_de_cajas
1574  8BDA
1575  8BDA 2A 89 87     	ld hl,(Puntero_restore_caja)
1576  8BDD 22 87 87     	ld (Puntero_store_caja),hl
1577  8BE0 2A 8B 87     	ld hl,(Indice_restore_caja)
1578  8BE3 23           	inc hl
1579  8BE4 23           	inc hl
1580  8BE5 22 8B 87     	ld (Indice_restore_caja),hl
1581  8BE8 CD 4D 8B         call Extrae_address
1582  8BEB 22 89 87         ld (Puntero_restore_caja),hl
1583  8BEE C9               ret
1584  8BEF
1585  8BEF              ; **************************************************************************************************
1586  8BEF              ;
1587  8BEF              ;	21/12/23
1588  8BEF              ;
1589  8BEF              ;	Restore_Amadeus
1590  8BEF              ;
1591  8BEF              ;	Cargamos en DRAW los parámetros de Amadeus.
1592  8BEF              ;
1593  8BEF
1594  8BEF E5           Restore_Amadeus	push hl
1595  8BF0 D5           	push de
1596  8BF1 C5            	push bc
1597  8BF2 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1598  8BF5 11 42 87     	ld de,Variables_DRAW
1599  8BF8 01 2A 00     	ld bc,42
1600  8BFB ED B0        	ldir
1601  8BFD C1           	pop bc
1602  8BFE D1           	pop de
1603  8BFF E1           	pop hl
1604  8C00 C9           	ret
1605  8C01
1606  8C01              ; *************************************************************************************************************************************************************
1607  8C01              ;
1608  8C01              ;	21/12/23
1609  8C01              ;
1610  8C01              ;	Store_Amadeus
1611  8C01              ;
1612  8C01              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1613  8C01              ;
1614  8C01              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1615  8C01              ;
1616  8C01              ;	DESTRUYE: HL y BC y DE.
1617  8C01
1618  8C01 21 42 87     Store_Amadeus ld hl,Variables_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1619  8C04 01 2A 00     	ld bc,42
1620  8C07 ED B0        	ldir
1621  8C09 C9           	ret
1622  8C0A
1623  8C0A              ; -----------------------------------------------------------
1624  8C0A              ;
1625  8C0A              ;	21/12/23
1626  8C0A              ;
1627  8C0A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1628  8C0A              ;
1629  8C0A              ;	Destruye: HL,BC,DE,A
1630  8C0A
1631  8C0A 21 42 87     Borra_datos_entidad ld hl,Variables_DRAW
1632  8C0D 01 29 00     	ld bc,41
1633  8C10 AF           	xor a
1634  8C11 77           	ld (hl),a
1635  8C12 11 43 87     	ld de,Variables_DRAW+1
1636  8C15 ED B0        	ldir
1637  8C17 C9           	ret
1638  8C18
1639  8C18              ; -----------------------------------------------------------
1640  8C18
1641  8C18              ; Teclado.
1642  8C18
1643  8C18 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1644  8C1A DB FE        	in a,($fe)
1645  8C1C E6 01        	and $01
1646  8C1E 28 02        	jr z,1f
1647  8C20 18 F6        	jr Pulsa_ENTER
1648  8C22 C9           1 ret
1649  8C23
1650  8C23              ; **************************************************************************************************
1651  8C23              ;
1652  8C23              ; Temporización.
1653  8C23
1654  8C23              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1655  8C23              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1656  8C23              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1657  8C23              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1658  8C23
1659  8C23              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1660  8C23              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1661  8C23              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1662  8C23
1663  8C23              ; A partir de $4f61 no hace falta DELAY.
1664  8C23
1665  8C23              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1666  8C23
1667  8C23 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1668  8C26 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1669  8C27 78           	LD A,B
1670  8C28 A7           	AND A
1671  8C29 20 FB        	JR NZ,wait
1672  8C2B C9           	RET
1673  8C2C
1674  8C2C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1675  8C2C              ;
1676  8C2C              ;	5/3/23
1677  8C2C              ;
1678  8C2C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1679  8C2C
1680  8C2C              Movimiento_Amadeus
1681  8C2C
1682  8C2C              ; Disparo.
1683  8C2C
1684  8C2C 3A BB 87     	ld a,(Disparo_Amadeus)
1685  8C2F A7           	and a
1686  8C30 20 02        	jr nz,1F
1687  8C32 18 15        	jr 2F
1688  8C34
1689  8C34 3E F7        1 ld a,$f7													; "5" para disparar.
1690  8C36 DB FE        	in a,($fe)
1691  8C38 E6 10        	and $10
1692  8C3A
1693  8C3A F5           	push af
1694  8C3B CC E3 8C     	call z,Genera_disparo
1695  8C3E F1           	pop af
1696  8C3F 20 08        	jr nz,2F
1697  8C41
1698  8C41 3A BB 87     	ld a,(Disparo_Amadeus)
1699  8C44 EE 01        	xor 1
1700  8C46 32 BB 87     	ld (Disparo_Amadeus),a
1701  8C49 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1702  8C4B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1703  8C4D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1704  8C4F CC 9F 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1705  8C52
1706  8C52 3E F7        	ld a,$f7
1707  8C54 DB FE        	in a,($fe)
1708  8C56 E6 01        	and $01
1709  8C58 C8           	ret z
1710  8C59
1711  8C59 3E F7        	ld a,$f7
1712  8C5B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1713  8C5D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1714  8C5F CC 7C 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1715  8C62 C9           	ret
1716  8C63
1717  8C63              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1718  8C63              ;
1719  8C63              ;	Rutina provisional para que los malotes cagen balas.
1720  8C63
1721  8C63              Detecta_disparo_entidad
1722  8C63
1723  8C63 3A BE 87     	ld a,(Disparo_entidad)
1724  8C66 A7           	and a
1725  8C67 C8           	ret z
1726  8C68
1727  8C68              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1728  8C68
1729  8C68              ;	ld a,$7f				; Detecta SPACE.
1730  8C68              ;	in a,($fe)
1731  8C68              ;	and 1
1732  8C68              ;	ret nz
1733  8C68
1734  8C68 CD E3 8C     	call Genera_disparo
1735  8C6B C9           	ret
1736  8C6C
1737  8C6C              ; ----------------------------------------------------------------------
1738  8C6C              ;
1739  8C6C              ;	8/9/23
1740  8C6C
1741  8C6C 2A A1 87     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1742  8C6F 2B            	dec hl
1743  8C70 7E           	ld a,(hl)
1744  8C71 A7           	and a
1745  8C72 C8           	ret z										; Salimos si es álbum está vacío.
1746  8C73
1747  8C73 11 5E 87     	ld de,Variables_de_borrado+5
1748  8C76 01 06 00     	ld bc,6
1749  8C79 ED B8        	lddr
1750  8C7B C9           	ret
1751  8C7C
1752  8C7C              ; ----------------------------------------------------------------------
1753  8C7C              ;
1754  8C7C              ;	9/9/23
1755  8C7C
1756  8C7C              Repone_datos_de_borrado_Amadeus
1757  8C7C
1758  8C7C 21 59 87     	ld hl,Variables_de_borrado
1759  8C7F 11 AC 70     	ld de,Album_de_fotos_Amadeus
1760  8C82 01 06 00     	ld bc,6
1761  8C85 ED B0        	ldir
1762  8C87
1763  8C87 EB           	ex de,hl
1764  8C88 22 A1 87     	ld (End_Snapshot_Amadeus),hl
1765  8C8B
1766  8C8B C9           	ret
1767  8C8C
1768  8C8C              ; ----------------------------------------------------------------------
1769  8C8C              ;
1770  8C8C              ;	27/10/23
1771  8C8C              ;
1772  8C8C
1773  8C8C              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1774  8C8C              ;	_ Album_de_fotos correspondiente.
1775  8C8C
1776  8C8C              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1777  8C8C              ;	_ durante el proceso de escritura.
1778  8C8C
1779  8C8C              Repone_datos_de_borrado
1780  8C8C
1781  8C8C F3           	di
1782  8C8D ED 5B 9B 87  	ld de,(Stack_snapshot)
1783  8C91 21 59 87     	ld hl,Variables_de_borrado
1784  8C94 01 06 00     	ld bc,6
1785  8C97 ED B0        	ldir
1786  8C99 FB           	ei
1787  8C9A
1788  8C9A EB           	ex de,hl
1789  8C9B 22 9B 87     	ld (Stack_snapshot),hl
1790  8C9E
1791  8C9E C9           	ret
1792  8C9F
1793  8C9F              ; --------------------------------------------------------------------------------------
1794  8C9F
1795  8C9F              Pinta_Amadeus
1796  8C9F
1797  8C9F CD 19 8B        	call Calcula_malotes_Amadeus
1798  8CA2 CD 47 95     	call Extrae_foto_Amadeus
1799  8CA5 CD D9 8A     	call Limpia_album_Amadeus
1800  8CA8
1801  8CA8 C9           	ret
1802  8CA9
1803  8CA9              Pinta_entidades
1804  8CA9
1805  8CA9              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1806  8CA9
1807  8CA9 3A A3 87     	ld a,(Ctrl_3)
1808  8CAC CB 47        	bit 0,a
1809  8CAE C8           	ret z
1810  8CAF
1811  8CAF CD 01 8B     	call Calcula_numero_de_malotes
1812  8CB2 CD C5 94     	call Extrae_foto_entidades
1813  8CB5 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1814  8CB8
1815  8CB8 C9           	ret
1816  8CB9
1817  8CB9              ; -----------------------------------------------------------------------------------
1818  8CB9              ;
1819  8CB9              ;	10/12/23
1820  8CB9              ;
1821  8CB9              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1822  8CB9
1823  8CB9              Actualiza_relojes
1824  8CB9
1825  8CB9 3A A3 87     	ld a,(Ctrl_3)
1826  8CBC CB 47        	bit 0,a
1827  8CBE C8           	ret z 						;	Salimos si no hemos pintado unidades.
1828  8CBF
1829  8CBF 21 B6 87     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1830  8CC2 34           	inc (hl)
1831  8CC3
1832  8CC3 34           	inc (hl)
1833  8CC4 35           	dec (hl)
1834  8CC5 C0           	ret nz
1835  8CC6
1836  8CC6 21 B7 87     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1837  8CC9 34           	inc (hl)
1838  8CCA C9           	ret
1839  8CCB
1840  8CCB              ; ---------------------------------------------------------------
1841  8CCB              ;
1842  8CCB              ;	21/12/23
1843  8CCB
1844  8CCB              Guarda_parametros_DRAW
1845  8CCB
1846  8CCB 21 42 87     	ld hl,Variables_DRAW
1847  8CCE 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1848  8CD1 01 2A 00     	ld bc,42
1849  8CD4 ED B0        	ldir
1850  8CD6 C9           	ret
1851  8CD7
1852  8CD7              Recupera_parametros_DRAW
1853  8CD7
1854  8CD7 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1855  8CDA 11 42 87     	ld de,Variables_DRAW
1856  8CDD 01 2A 00     	ld bc,42
1857  8CE0 ED B0        	ldir
1858  8CE2 C9           	ret
1859  8CE3
1860  8CE3              ; ---------------------------------------------------------------
1861  8CE3
1862  8CE3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8CE3              ; ******************************************************************************************************************************************************************************************
   2+ 8CE3              ;
   3+ 8CE3              ;   21/07/23
   4+ 8CE3              ;
   5+ 8CE3              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8CE3              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8CE3              ;
   8+ 8CE3              ;
   9+ 8CE3              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8CE3              ;
  11+ 8CE3              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8CE3              ;               _ hacen las entidades hacia abajo.
  13+ 8CE3              ;
  14+ 8CE3              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8CE3              ;
  16+ 8CE3              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8CE3              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8CE3              ;
  19+ 8CE3              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8CE3              ;           _ la bala.
  21+ 8CE3              ;
  22+ 8CE3              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8CE3              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8CE3              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8CE3              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8CE3              ;           _ en el momento de generarse la bala)).
  27+ 8CE3
  28+ 8CE3              Genera_disparo
  29+ 8CE3
  30+ 8CE3              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8CE3              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8CE3              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8CE3              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8CE3              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8CE3              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8CE3              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8CE3
  38+ 8CE3              ; Exclusiones:
  39+ 8CE3
  40+ 8CE3 3A 6F 87         ld a,(Vel_down)
  41+ 8CE6 47               ld b,a
  42+ 8CE7 3A B5 87         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8CEA B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8CEB D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8CEC 3A 66 87         ld a,(Columnas)
  46+ 8CEF 47               ld b,a
  47+ 8CF0 3A 44 87         ld a,(Columns)
  48+ 8CF3 B8               cp b
  49+ 8CF4 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8CF5
  51+ 8CF5              ; ----- ----- -----
  52+ 8CF5
  53+ 8CF5 3A 65 87         ld a,(Ctrl_0)
  54+ 8CF8 CB 77            bit 6,a
  55+ 8CFA 20 06            jr nz,14F
  56+ 8CFC
  57+ 8CFC 3A 4A 87         ld a,(Coordenada_y)
  58+ 8CFF FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D01 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D02
  61+ 8D02 21 00 80     14 ld hl,Indice_disparo
  62+ 8D05 3A 4B 87         ld a,(CTRL_DESPLZ)
  63+ 8D08 4F               ld c,a
  64+ 8D09 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D0B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D0B              ;                                            ""        ""       "f9", B="1"
  67+ 8D0B              ;                                            ""        ""       "fb", B="2"
  68+ 8D0B              ;                                            ""        ""       "fb", B="3"
  69+ 8D0B A7               and a
  70+ 8D0C 28 10            jr z,1F
  71+ 8D0E E6 01            and 1
  72+ 8D10 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D11
  74+ 8D11 79               ld a,c
  75+ 8D12 16 F9            ld d,$f9
  76+ 8D14 23           2 inc hl
  77+ 8D15 23               inc hl
  78+ 8D16 04               inc b
  79+ 8D17 BA               cp d
  80+ 8D18 28 04            jr z,1F
  81+ 8D1A 14               inc d
  82+ 8D1B 14               inc d
  83+ 8D1C 18 F6            jr 2B
  84+ 8D1E
  85+ 8D1E CD 4D 8B     1 call Extrae_address
  86+ 8D21 E5               push hl
  87+ 8D22 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D24 DD 21 8D 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D28
  90+ 8D28              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D28              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D28
  93+ 8D28 3A 65 87         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D2B CB 77            bit 6,a
  95+ 8D2D 20 04            jr nz,19F
  96+ 8D2F
  97+ 8D2F AF               xor a
  98+ 8D30 32 BE 87         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D33
 100+ 8D33 3A 57 87     19 ld a,(Cuad_objeto)
 101+ 8D36 FE 02            cp 2
 102+ 8D38 38 66            jr c,3F
 103+ 8D3A 28 64            jr z,3F
 104+ 8D3C
 105+ 8D3C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D3C
 107+ 8D3C E6 01            and 1
 108+ 8D3E 28 30            jr z,4F
 109+ 8D40
 110+ 8D40              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D40              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D40              ;
 113+ 8D40              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D40              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D40              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D40
 117+ 8D40 2A 45 87     	ld hl,(Posicion_actual)
 118+ 8D43
 119+ 8D43              ;   Amadeus o entidad ???.
 120+ 8D43
 121+ 8D43 3A 65 87         ld a,(Ctrl_0)
 122+ 8D46 CB 77            bit 6,a
 123+ 8D48 28 0A            jr z,8F
 124+ 8D4A
 125+ 8D4A              ; 	Dispara Amadeus.
 126+ 8D4A
 127+ 8D4A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D4C CD B6 94         call PreviousScan
 129+ 8D4F CD B6 94         call PreviousScan
 130+ 8D52
 131+ 8D52              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D52              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D52              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D52              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D52
 136+ 8D52 18 11            jr 10F
 137+ 8D54
 138+ 8D54              ; 	Dispara Entidad.
 139+ 8D54
 140+ 8D54 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D57              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D57
 143+ 8D57              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D57              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D57
 146+ 8D57 C5               push bc
 147+ 8D58 06 10            ld b,16
 148+ 8D5A CD A7 94     9 call NextScan
 149+ 8D5D 10 FB            djnz 9B
 150+ 8D5F C1               pop bc
 151+ 8D60 CD CA 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D63 18 06            jr 17F
 153+ 8D65
 154+ 8D65              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D65              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D65              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D65              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D65
 159+ 8D65 CD CA 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D68 CD 3F 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8D6B              ;                                                      ; _al generar el disparo.
 162+ 8D6B
 163+ 8D6B              ; 	LLegados a este punto tendremos:
 164+ 8D6B              ;
 165+ 8D6B              ;       Puntero_objeto_disparo en IY.
 166+ 8D6B              ;       Rutinas_de_impresion en IX.
 167+ 8D6B              ;       Puntero_de_impresion en HL.
 168+ 8D6B              ;       Impacto/Dirección en BC.
 169+ 8D6B
 170+ 8D6B CD D2 8D     17 call Almacena_disparo
 171+ 8D6E 18 52            jr 6F                                             ; RET.
 172+ 8D70
 173+ 8D70              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8D70              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8D70              ;
 176+ 8D70              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8D70              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8D70              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8D70
 180+ 8D70 2A 45 87     4 ld hl,(Posicion_actual)
 181+ 8D73
 182+ 8D73              ;   Amadeus o entidad ???.
 183+ 8D73
 184+ 8D73 3A 65 87         ld a,(Ctrl_0)
 185+ 8D76 CB 77            bit 6,a
 186+ 8D78 28 0A            jr z,11F
 187+ 8D7A
 188+ 8D7A              ; 	Dispara Amadeus.
 189+ 8D7A
 190+ 8D7A 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8D7C CD B6 94         call PreviousScan
 192+ 8D7F CD B6 94         call PreviousScan
 193+ 8D82
 194+ 8D82              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8D82              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8D82              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8D82              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8D82
 199+ 8D82 18 11            jr 13F
 200+ 8D84
 201+ 8D84              ; 	Dispara Entidad.
 202+ 8D84
 203+ 8D84 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8D87              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8D87
 206+ 8D87              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8D87              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8D87
 209+ 8D87 C5               push bc
 210+ 8D88 06 10            ld b,16
 211+ 8D8A CD A7 94     12 call NextScan
 212+ 8D8D 10 FB            djnz 12B
 213+ 8D8F C1               pop bc
 214+ 8D90
 215+ 8D90 CD C3 8D         call Ajusta_disparo_parte_derecha
 216+ 8D93 18 06            jr 18F
 217+ 8D95
 218+ 8D95              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8D95              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8D95              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8D95              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8D95
 223+ 8D95 CD C3 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8D98 CD 3F 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8D9B              ;                                                       ; _al generar el disparo.
 226+ 8D9B
 227+ 8D9B              ; LLegados a este punto tendremos:
 228+ 8D9B              ;
 229+ 8D9B              ;       Puntero_objeto_disparo en IY.
 230+ 8D9B              ;       Rutinas_de_impresion en IX.
 231+ 8D9B              ;       Puntero_de_impresion en HL.
 232+ 8D9B              ;       Impacto/Dirección en BC.
 233+ 8D9B
 234+ 8D9B CD D2 8D     18 call Almacena_disparo
 235+ 8D9E 18 22            jr 6F                                               ; RET.
 236+ 8DA0
 237+ 8DA0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DA0
 239+ 8DA0 28 11        3 jr z,5F
 240+ 8DA2
 241+ 8DA2              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DA2              ;
 243+ 8DA2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DA2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DA2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DA2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DA2
 248+ 8DA2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DA2              ;	   ""        ""       "f9", B="1"
 250+ 8DA2              ;	   ""        ""       "fb", B="2"
 251+ 8DA2              ; 	   ""        ""       "fb", B="3"
 252+ 8DA2
 253+ 8DA2 2A 45 87     	ld hl,(Posicion_actual)
 254+ 8DA5 CD A7 94     	call NextScan
 255+ 8DA8
 256+ 8DA8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DA8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DA8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DA8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DA8
 261+ 8DA8 CD CA 8D         call Ajusta_disparo_parte_izquierda
 262+ 8DAB
 263+ 8DAB              ; 	No se produce impacto. B="$80"
 264+ 8DAB              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DAB
 266+ 8DAB 01 80 80         ld bc,$8080
 267+ 8DAE
 268+ 8DAE              ; 	LLegados a este punto tendremos:
 269+ 8DAE              ;
 270+ 8DAE              ;       Puntero_objeto_disparo en IY.
 271+ 8DAE              ;       Rutinas_de_impresion en IX.
 272+ 8DAE              ;       Puntero_de_impresion en HL.
 273+ 8DAE              ;       Impacto/Dirección en BC.
 274+ 8DAE
 275+ 8DAE CD D2 8D         call Almacena_disparo
 276+ 8DB1 18 0F            jr 6F                                           ; RET.
 277+ 8DB3
 278+ 8DB3              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DB3              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DB3              ;
 281+ 8DB3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DB3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DB3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DB3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DB3
 286+ 8DB3 2A 45 87     5 ld hl,(Posicion_actual)
 287+ 8DB6 CD A7 94     	call NextScan
 288+ 8DB9
 289+ 8DB9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DB9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DB9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DB9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DB9
 294+ 8DB9 CD C3 8D         call Ajusta_disparo_parte_derecha
 295+ 8DBC
 296+ 8DBC              ; 	No se produce impacto. B="$80"
 297+ 8DBC              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8DBC
 299+ 8DBC 01 80 80     15 ld bc,$8080
 300+ 8DBF
 301+ 8DBF              ; 	LLegados a este punto tendremos:
 302+ 8DBF              ;
 303+ 8DBF              ;       Puntero_objeto_disparo en IY.
 304+ 8DBF              ;       Rutinas_de_impresion en IX.
 305+ 8DBF              ;       Puntero_de_impresion en HL.
 306+ 8DBF              ;       Impacto/Dirección en BC.
 307+ 8DBF
 308+ 8DBF CD D2 8D         call Almacena_disparo
 309+ 8DC2
 310+ 8DC2 C9           6 ret
 311+ 8DC3
 312+ 8DC3              ; ----------------------------------------------------------------
 313+ 8DC3              ;
 314+ 8DC3              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8DC3              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8DC3              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8DC3
 318+ 8DC3 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8DC4 FE 02            cp 2
 320+ 8DC6 38 01            jr c,1F
 321+ 8DC8 23               inc hl
 322+ 8DC9 C9           1 ret
 323+ 8DCA
 324+ 8DCA 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8DCB FE 01        	cp 1
 326+ 8DCD 20 01        	jr nz,1F
 327+ 8DCF 2B           	dec hl
 328+ 8DD0 2B           1 dec hl
 329+ 8DD1 C9               ret
 330+ 8DD2
 331+ 8DD2              ; ----------------------------------------------------------------
 332+ 8DD2              ;
 333+ 8DD2              ;   25/02/23
 334+ 8DD2              ;
 335+ 8DD2              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8DD2              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8DD2              ;
 338+ 8DD2              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8DD2              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8DD2
 341+ 8DD2              Almacena_disparo
 342+ 8DD2
 343+ 8DD2 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8DD3 F1               pop af
 345+ 8DD4 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8DD5
 347+ 8DD5 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8DD6 E6 01            and 1
 349+ 8DD8 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8DDA              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8DDA              ; 	Dispara AMADEUS.
 352+ 8DDA
 353+ 8DDA              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8DDA              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8DDA              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8DDA              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8DDA
 358+ 8DDA C5               push bc
 359+ 8DDB 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8DDE 2A A8 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8DE1 A7               and a
 362+ 8DE2 ED 42            sbc hl,bc
 363+ 8DE4 CC D2 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8DE7 C1               pop bc
 365+ 8DE8 28 54            jr z,4F
 366+ 8DEA
 367+ 8DEA 2A A8 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8DED 23               inc hl
 369+ 8DEE 23               inc hl
 370+ 8DEF 22 A8 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8DF2              ;                                                   ; _ Disparo_(+1).
 372+ 8DF2 18 18            jr 2F
 373+ 8DF4
 374+ 8DF4              ; Dispara una entidad.
 375+ 8DF4
 376+ 8DF4 C5           1 push bc
 377+ 8DF5 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8DF8 2A A6 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8DFB A7               and a
 380+ 8DFC ED 42            sbc hl,bc
 381+ 8DFE CC CB 8A         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E01 C1               pop bc
 383+ 8E02 28 3A            jr z,4F
 384+ 8E04
 385+ 8E04 2A A6 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E07 23               inc hl
 387+ 8E08 23               inc hl
 388+ 8E09 22 A6 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E0C              ;                                                   ; _ Disparo_(+1).
 390+ 8E0C CD 4D 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E0F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E0F              ;
 393+ 8E0F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E0F              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E0F              ;                                                     Puntero_de_impresion en HL.
 396+ 8E0F              ;                                                     Impacto/Dirección en BC.
 397+ 8E0F
 398+ 8E0F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E10 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E11 23               inc hl                                          ; _ al siguiente.
 401+ 8E12 A7               and a
 402+ 8E13 20 C0            jr nz,3B
 403+ 8E15
 404+ 8E15 08               ex af,af
 405+ 8E16 ED 73 95 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E1A F9               ld sp,hl
 407+ 8E1B
 408+ 8E1B DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E1D F5               push af                                         ; Puntero de impresión.
 410+ 8E1E FD E5            push iy                                         ; Puntero objeto.
 411+ 8E20 C5               push bc                                         ; Control.
 412+ 8E21
 413+ 8E21 ED 7B 95 87      ld sp,(Stack)
 414+ 8E25
 415+ 8E25              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E25
 417+ 8E25 21 84 87     	ld hl,Ctrl_1
 418+ 8E28 CB C6        	set 0,(hl)
 419+ 8E2A
 420+ 8E2A DD E5        	push ix
 421+ 8E2C E1               pop hl
 422+ 8E2D F5               push af
 423+ 8E2E DD E1            pop ix
 424+ 8E30
 425+ 8E30 CD 16 71     	call Guarda_foto_registros
 426+ 8E33
 427+ 8E33 21 84 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E36 CB 86        	res 0,(hl)
 429+ 8E38
 430+ 8E38              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E38              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E38
 433+ 8E38 CD D2 8A         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E3B CD CB 8A         call Inicia_Puntero_Disparo_Entidades
 435+ 8E3E
 436+ 8E3E C9           4 ret
 437+ 8E3F
 438+ 8E3F              ; ----------------------------------------------------------------
 439+ 8E3F              ;
 440+ 8E3F              ;   4/3/23
 441+ 8E3F              ;
 442+ 8E3F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E3F              ;   _ al generarse el disparo.
 444+ 8E3F              ;
 445+ 8E3F              ;       "$80" ..... No se produce colisión.
 446+ 8E3F              ;       "$81" ..... Se produce colisión.
 447+ 8E3F              ;
 448+ 8E3F              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E3F              ;         _ que forman el disparo.
 450+ 8E3F
 451+ 8E3F
 452+ 8E3F              Comprueba_Colision
 453+ 8E3F
 454+ 8E3F              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E3F
 456+ 8E3F FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E41 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E42
 459+ 8E42 CD 78 8E         call Modifica_H_Velocidad_disparo
 460+ 8E45
 461+ 8E45 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E46 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E48 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E4A
 465+ 8E4A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E4C CD 68 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E4F
 468+ 8E4F 7B               ld a,e
 469+ 8E50 E6 01            and 1
 470+ 8E52 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E54              ;                                                  ; _ para activar IMPACTO.
 472+ 8E54 E1               pop hl
 473+ 8E55 E5               push hl
 474+ 8E56 CD A7 94         call NextScan
 475+ 8E59
 476+ 8E59 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E5A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E5C 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E5E              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E5E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E60 CD 68 8E         call Bucle_2
 482+ 8E63
 483+ 8E63 43           1 ld b,e
 484+ 8E64 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E65 FD E1            pop iy
 486+ 8E67 C9               ret
 487+ 8E68
 488+ 8E68              ; ---------- ----------
 489+ 8E68
 490+ 8E68 06 02        Bucle_2 ld b,2
 491+ 8E6A FD 7E 00     2 ld a,(iy)
 492+ 8E6D A6               and (hl)
 493+ 8E6E 28 02            jr z,1F
 494+ 8E70 1E 81            ld e,$81
 495+ 8E72 23           1 inc hl
 496+ 8E73 FD 23            inc iy
 497+ 8E75 10 F3            djnz 2B
 498+ 8E77 C9               ret
 499+ 8E78
 500+ 8E78              ; ---------- ----------
 501+ 8E78              ;
 502+ 8E78              ;   21/7/23
 503+ 8E78
 504+ 8E78              Modifica_H_Velocidad_disparo
 505+ 8E78
 506+ 8E78 3A B5 87         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8E7B FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8E7D D0               ret nc                                         ; _ incrementamos H.
 509+ 8E7E 24               inc h
 510+ 8E7F
 511+ 8E7F C9               ret
 512+ 8E80
 513+ 8E80              ; -------------------------------------------------------------------------------------------------------------
 514+ 8E80              ;
 515+ 8E80              ;   04/12/23
 516+ 8E80              ;
 517+ 8E80              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8E80              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8E80              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8E80              ;
 521+ 8E80              ;   MODIFICA: HL,DE,B y A.
 522+ 8E80
 523+ 8E80              Genera_coordenadas_X
 524+ 8E80
 525+ 8E80              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8E80              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8E80
 528+ 8E80              ;   Limpiamos almacenes.
 529+ 8E80
 530+ 8E80 CD B1 8E         call Limpia_Coordenadas_X
 531+ 8E83
 532+ 8E83              ;   Almacenamos coordenadas X.
 533+ 8E83
 534+ 8E83              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8E83
 536+ 8E83 2A 5F 87         ld hl,(Puntero_de_impresion)
 537+ 8E86 11 B2 87         ld de,Coordenadas_X_Entidad
 538+ 8E89 06 02            ld b,2
 539+ 8E8B
 540+ 8E8B 3A 4B 87         ld a,(CTRL_DESPLZ)
 541+ 8E8E A7               and a
 542+ 8E8F 28 01            jr z,1F
 543+ 8E91 04               inc b
 544+ 8E92
 545+ 8E92 CD A8 8E     1 call Guarda_coordenadas_X
 546+ 8E95
 547+ 8E95              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8E95
 549+ 8E95 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8E98 11 AF 87         ld de,Coordenadas_X_Amadeus
 551+ 8E9B 06 02            ld b,2
 552+ 8E9D
 553+ 8E9D 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8EA0 A7               and a
 555+ 8EA1 28 01            jr z,2F
 556+ 8EA3 04               inc b
 557+ 8EA4
 558+ 8EA4 CD A8 8E     2 call Guarda_coordenadas_X
 559+ 8EA7
 560+ 8EA7              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8EA7
 562+ 8EA7 C9               ret
 563+ 8EA8
 564+ 8EA8              ; ----- ----- ----- ----- -----
 565+ 8EA8
 566+ 8EA8 7D           Guarda_coordenadas_X  ld a,l
 567+ 8EA9 E6 1F            and $1f
 568+ 8EAB 12           1 ld (de),a
 569+ 8EAC 3C               inc a
 570+ 8EAD 13               inc de
 571+ 8EAE 10 FB            djnz 1B
 572+ 8EB0 C9               ret
 573+ 8EB1
 574+ 8EB1 AF           Limpia_Coordenadas_X xor a
 575+ 8EB2 06 06            ld b,6
 576+ 8EB4 21 AF 87         ld hl,Coordenadas_X_Amadeus
 577+ 8EB7 77           1 ld (hl),a
 578+ 8EB8 23               inc hl
 579+ 8EB9 10 FC            djnz 1B
 580+ 8EBB C9               ret
 581+ 8EBC
 582+ 8EBC              ; ----- ----- ----- ----- -----
 583+ 8EBC
 584+ 8EBC              Compara_coordenadas_X
 585+ 8EBC
 586+ 8EBC 06 03            ld b,3
 587+ 8EBE 11 B4 87         ld de,Coordenadas_X_Entidad+2
 588+ 8EC1
 589+ 8EC1 1A               ld a,(de)
 590+ 8EC2 A7               and a
 591+ 8EC3 20 01            jr nz,2F
 592+ 8EC5 05               dec b
 593+ 8EC6
 594+ 8EC6 1B           2 dec de
 595+ 8EC7 1B               dec de
 596+ 8EC8 21 AF 87         ld hl,Coordenadas_X_Amadeus
 597+ 8ECB
 598+ 8ECB D5           1 push de
 599+ 8ECC E5               push hl
 600+ 8ECD C5               push bc
 601+ 8ECE
 602+ 8ECE CD D8 8E         call Comparando
 603+ 8ED1
 604+ 8ED1 C1               pop bc
 605+ 8ED2 E1               pop hl
 606+ 8ED3 D1               pop de
 607+ 8ED4
 608+ 8ED4 13               inc de
 609+ 8ED5 10 F4            djnz 1B
 610+ 8ED7
 611+ 8ED7 C9               ret
 612+ 8ED8
 613+ 8ED8              ; ----- ----- ----- ----- -----
 614+ 8ED8              ;
 615+ 8ED8              ;   4/12/23
 616+ 8ED8              ;
 617+ 8ED8              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8ED8
 619+ 8ED8 06 03        Comparando ld b,3
 620+ 8EDA 1A               ld a,(de)
 621+ 8EDB 4E           2 ld c,(hl)
 622+ 8EDC B9               cp c
 623+ 8EDD 28 04            jr z,1F
 624+ 8EDF 23               inc hl
 625+ 8EE0 10 F9            djnz 2B
 626+ 8EE2 C9               ret
 627+ 8EE3
 628+ 8EE3 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8EE5 32 58 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8EE8 21 AA 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8EEB CB D6            set 2,(hl)
 632+ 8EED C9               ret
 633+ 8EEE
 634+ 8EEE              ; -----------------------------------------------------------------------
 635+ 8EEE              ;
 636+ 8EEE              ;   7/12/23
 637+ 8EEE              ;
 638+ 8EEE
 639+ 8EEE              Detecta_colision_nave_entidad
 640+ 8EEE
 641+ 8EEE              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8EEE
 643+ 8EEE FD 2A 47 87      ld iy,(Puntero_objeto)
 644+ 8EF2 2A 5F 87         ld hl,(Puntero_de_impresion)
 645+ 8EF5
 646+ 8EF5 E5               push hl
 647+ 8EF6
 648+ 8EF6              ; ----- ----- -----
 649+ 8EF6 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8EF8 06 0A            ld b,10
 651+ 8EFA CD 2A 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8EFD 7B               ld a,e
 653+ 8EFE FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F00 38 0E            jr c,3F
 655+ 8F02
 656+ 8F02              ; LLegados a este punto:
 657+ 8F02              ;
 658+ 8F02              ;   HAY COLISIÓN !!!!!.
 659+ 8F02              ;
 660+ 8F02              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F02              ;   SET el bit3 de (Impacto2).
 662+ 8F02              ;
 663+ 8F02              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F02
 665+ 8F02 21 58 87         ld hl,Impacto
 666+ 8F05 36 01            ld (hl),1
 667+ 8F07 21 AA 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F0A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F0C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F0E
 671+ 8F0E 18 18            jr 1F
 672+ 8F10
 673+ 8F10              ; -----
 674+ 8F10
 675+ 8F10 E1           3 pop hl
 676+ 8F11 CD A7 94         call NextScan
 677+ 8F14 E5               push hl
 678+ 8F15 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F16 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F18 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F1A 30 0C            jr nc,1F
 682+ 8F1C              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F1C 10 DC            djnz 2B
 684+ 8F1E
 685+ 8F1E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F1E
 687+ 8F1E              ; LLegados a este punto:
 688+ 8F1E              ;
 689+ 8F1E              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F1E              ;
 691+ 8F1E              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F1E              ;   RES el bit2 de (Impacto2).
 693+ 8F1E              ;
 694+ 8F1E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F1E              ;   Lo colocamos a "0".
 696+ 8F1E
 697+ 8F1E 21 AA 87         ld hl,Impacto2
 698+ 8F21 CB 96            res 2,(hl)
 699+ 8F23 2A AB 87         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F26 36 00            ld (hl),0
 701+ 8F28
 702+ 8F28 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F29 C9               ret
 704+ 8F2A
 705+ 8F2A               ; ---------- ----------
 706+ 8F2A
 707+ 8F2A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F2B 3A 44 87         ld a,(Columns)
 709+ 8F2E 47               ld b,a
 710+ 8F2F FD 7E 00     2 ld a,(iy)
 711+ 8F32 BE               cp (hl)
 712+ 8F33 28 01            jr z,1F
 713+ 8F35
 714+ 8F35 1C               inc e
 715+ 8F36
 716+ 8F36 23           1 inc hl
 717+ 8F37 FD 23            inc iy
 718+ 8F39 10 F4            djnz 2B
 719+ 8F3B C1               pop bc
 720+ 8F3C C9               ret
 721+ 8F3D
 722+ 8F3D              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F3D              ;
 724+ 8F3D              ;   13/03/23
 725+ 8F3D              ;
 726+ 8F3D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F3D              ;
 728+ 8F3D              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F3D
 730+ 8F3D 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F40 7E               ld a,(hl)
 732+ 8F41 A7               and a
 733+ 8F42 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F43
 735+ 8F43 44               ld b,h
 736+ 8F44 4D               ld c,l
 737+ 8F45 2A 9D 87         ld hl,(Stack_snapshot_disparos)
 738+ 8F48 E5               push hl
 739+ 8F49 A7               and a
 740+ 8F4A ED 42            sbc hl,bc
 741+ 8F4C E5               push hl
 742+ 8F4D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F4E
 744+ 8F4E E1               pop hl
 745+ 8F4F 54               ld d,h
 746+ 8F50 5D               ld e,l
 747+ 8F51 1B               dec de
 748+ 8F52 ED B8            lddr                                                ; Limpiamos.
 749+ 8F54
 750+ 8F54 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8F57 22 9D 87         ld (Stack_snapshot_disparos),hl
 752+ 8F5A
 753+ 8F5A C9               ret
 754+ 8F5B
 755+ 8F5B              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F5B              ;
 757+ 8F5B              ;   18/07/23
 758+ 8F5B              ;
 759+ 8F5B
 760+ 8F5B              Motor_de_disparos
 761+ 8F5B
 762+ 8F5B              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F5B
 764+ 8F5B 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F5E 2A A8 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F61
 767+ 8F61 CD 4D 8B     2 call Extrae_address
 768+ 8F64 7E               ld a,(hl)
 769+ 8F65 A7               and a
 770+ 8F66 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F68
 772+ 8F68              ; ----- ----- ----- ----- ----- -----
 773+ 8F68
 774+ 8F68 C5               push bc
 775+ 8F69 CD 2D 90         call foto_disparo_a_borrar
 776+ 8F6C
 777+ 8F6C              ; Existe colisión con este disparo???
 778+ 8F6C
 779+ 8F6C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8F6D 7E               ld a,(hl)
 781+ 8F6E 2B               dec hl
 782+ 8F6F E6 01            and 1
 783+ 8F71 28 1D            jr z,9F
 784+ 8F73
 785+ 8F73              ;   En este punto:
 786+ 8F73              ;
 787+ 8F73              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8F73              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8F73              ;   _con la entidad).
 790+ 8F73              ;
 791+ 8F73              ;   Disparo_2A defw 0                                ; Control.
 792+ 8F73              ;    defw 0                                          ; Puntero objeto.
 793+ 8F73              ;    defw 0                                          ; Puntero de impresión.
 794+ 8F73              ;    defw 0                                          ; Rutina de impresión.
 795+ 8F73
 796+ 8F73 E5               push hl
 797+ 8F74
 798+ 8F74 06 04            ld b,4
 799+ 8F76 23           19 inc hl
 800+ 8F77 10 FD            djnz 19B
 801+ 8F79
 802+ 8F79 CD 4D 8B         call Extrae_address
 803+ 8F7C CD 7D 9B         call Genera_coordenadas_disparo
 804+ 8F7F
 805+ 8F7F              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8F7F
 807+ 8F7F 21 AD 87         ld hl,Coordenadas_disparo_certero
 808+ 8F82 72               ld (hl),d
 809+ 8F83 23               inc hl
 810+ 8F84 73               ld (hl),e
 811+ 8F85
 812+ 8F85              ; Elimino el disparo de la base de datos.
 813+ 8F85
 814+ 8F85 E1               pop hl
 815+ 8F86 CD AC 90         call Elimina_disparo_de_base_de_datos
 816+ 8F89 21 AA 87         ld hl,Impacto2
 817+ 8F8C CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8F8E
 819+ 8F8E 18 06            jr 11F
 820+ 8F90
 821+ 8F90 CD 56 90     9 call Mueve_disparo
 822+ 8F93 CD 2D 90         call foto_disparo_a_borrar
 823+ 8F96
 824+ 8F96 C1           11 pop bc
 825+ 8F97 18 04            jr 7F
 826+ 8F99
 827+ 8F99              ; ----- ----- ----- ----- ----- -----
 828+ 8F99
 829+ 8F99 ED 42        1 sbc hl,bc
 830+ 8F9B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8F9D
 832+ 8F9D 2A A8 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FA0 23               inc hl
 834+ 8FA1 23               inc hl
 835+ 8FA2 22 A8 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FA5 18 BA            jr 2B
 837+ 8FA7
 838+ 8FA7 CD D2 8A     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FAA              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FAA
 841+ 8FAA              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FAA
 843+ 8FAA 01 6E 85         ld bc,Disparo_11
 844+ 8FAD 2A A6 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FB0
 846+ 8FB0 CD 4D 8B     5 call Extrae_address
 847+ 8FB3 7E               ld a,(hl)
 848+ 8FB4 A7               and a
 849+ 8FB5 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FB7
 851+ 8FB7              ; ----- ----- ----- ----- ----- -----
 852+ 8FB7
 853+ 8FB7 C5               push bc
 854+ 8FB8 CD 2D 90         call foto_disparo_a_borrar
 855+ 8FBB
 856+ 8FBB              ; Existe colisión con este disparo???
 857+ 8FBB
 858+ 8FBB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8FBC 7E               ld a,(hl)
 860+ 8FBD 2B               dec hl
 861+ 8FBE E6 01            and 1
 862+ 8FC0 28 4D            jr z,10F
 863+ 8FC2
 864+ 8FC2              ;! La colisión se produce con Amadeus???
 865+ 8FC2              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8FC2
 867+ 8FC2 E5               push hl
 868+ 8FC3
 869+ 8FC3 06 04            ld b,4
 870+ 8FC5 23           16 inc hl
 871+ 8FC6 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8FC8
 873+ 8FC8 CD 4D 8B         call Extrae_address
 874+ 8FCB CD 7D 9B         call Genera_coordenadas_disparo
 875+ 8FCE
 876+ 8FCE 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8FCF FE 16            cp $16
 878+ 8FD1 38 2A            jr c,15F
 879+ 8FD3
 880+ 8FD3
 881+ 8FD3              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8FD3
 883+ 8FD3 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8FD4
 885+ 8FD4              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8FD4
 887+ 8FD4 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 8FD7
 889+ 8FD7              ; Coordenada X de Amadeus en D.
 890+ 8FD7
 891+ 8FD7 7D               ld a,l
 892+ 8FD8 E6 1F            and $1F
 893+ 8FDA 57               ld d,a
 894+ 8FDB
 895+ 8FDB 21 8A 85         ld hl,Amadeus_db+8
 896+ 8FDE 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 8FDF
 898+ 8FDF 21 AF 87         ld hl,Coordenadas_X_Amadeus
 899+ 8FE2 CD A8 8E         call Guarda_coordenadas_X
 900+ 8FE5
 901+ 8FE5 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 8FE6
 903+ 8FE6              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 8FE6
 905+ 8FE6 06 02            ld b,2
 906+ 8FE8 C5           20 push bc
 907+ 8FE9
 908+ 8FE9 06 03            ld b,3
 909+ 8FEB 21 AF 87         ld hl,Coordenadas_X_Amadeus
 910+ 8FEE 7E           18 ld a,(hl)
 911+ 8FEF BA               cp d
 912+ 8FF0 20 04            jr nz,17F
 913+ 8FF2
 914+ 8FF2              ;! Colisión Amadeus !!!!!!!!!!
 915+ 8FF2
 916+ 8FF2 C1               pop bc
 917+ 8FF3 E1               pop hl
 918+ 8FF4 18 0D            jr 14F
 919+ 8FF6
 920+ 8FF6 23           17 inc hl
 921+ 8FF7 10 F5            djnz 18B
 922+ 8FF9
 923+ 8FF9 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 8FFA
 925+ 8FFA C1               pop bc
 926+ 8FFB 10 EB            djnz 20B
 927+ 8FFD
 928+ 8FFD
 929+ 8FFD              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 8FFD              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 8FFD
 932+ 8FFD E1           15 pop hl
 933+ 8FFE 23               inc hl
 934+ 8FFF 35               dec (hl)
 935+ 9000 2B               dec hl
 936+ 9001 18 0C            jr 10F
 937+ 9003
 938+ 9003              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9003              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9003
 941+ 9003 E5           14 push hl
 942+ 9004 CD AC 90         call Elimina_disparo_de_base_de_datos
 943+ 9007 21 AA 87         ld hl,Impacto2
 944+ 900A CB CE            set 1,(hl)
 945+ 900C E1               pop hl
 946+ 900D 18 06            jr 12F
 947+ 900F
 948+ 900F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 900F
 950+ 900F CD 56 90     10 call Mueve_disparo
 951+ 9012 CD 2D 90         call foto_disparo_a_borrar
 952+ 9015 C1           12 pop bc
 953+ 9016
 954+ 9016 18 04            jr 8F
 955+ 9018
 956+ 9018              ; ----- ----- ----- ----- ----- -----
 957+ 9018
 958+ 9018 ED 42        4 sbc hl,bc
 959+ 901A 28 0A            jr z,6F
 960+ 901C
 961+ 901C 2A A6 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 901F 23               inc hl
 963+ 9020 23               inc hl
 964+ 9021 22 A6 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9024 18 8A            jr 5B
 966+ 9026
 967+ 9026 CD CB 8A     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9029 CD B1 8E         call Limpia_Coordenadas_X
 969+ 902C C9               ret
 970+ 902D
 971+ 902D              ; ------------------------------------------------------------------
 972+ 902D
 973+ 902D              foto_disparo_a_borrar
 974+ 902D
 975+ 902D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 902E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 902F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9030
 979+ 9030 E5               push hl
 980+ 9031 23               inc hl
 981+ 9032 23               inc hl
 982+ 9033 ED 73 95 87      ld (Stack),sp
 983+ 9037 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9038 FD E1            pop iy
 985+ 903A DD E1            pop ix
 986+ 903C E1               pop hl
 987+ 903D ED 7B 95 87      ld sp,(Stack)
 988+ 9041 3A 84 87         ld a,(Ctrl_1)
 989+ 9044 CB C7            set 0,a
 990+ 9046 32 84 87         ld (Ctrl_1),a
 991+ 9049 CD 16 71         call Guarda_foto_registros
 992+ 904C 3A 84 87         ld a,(Ctrl_1)
 993+ 904F CB 87            res 0,a
 994+ 9051 32 84 87         ld (Ctrl_1),a
 995+ 9054 E1               pop hl
 996+ 9055 C9               ret
 997+ 9056
 998+ 9056              ;---------------------------------------------------
 999+ 9056              ;
1000+ 9056              ;   18/07/23
1001+ 9056              ;
1002+ 9056
1003+ 9056              Mueve_disparo
1004+ 9056
1005+ 9056              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9056              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9056              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9056
1009+ 9056 E5               push hl
1010+ 9057
1011+ 9057 7E               ld a,(hl)
1012+ 9058
1013+ 9058 06 04            ld b,4
1014+ 905A 23           1 inc hl
1015+ 905B 10 FD            djnz 1B
1016+ 905D
1017+ 905D              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 905D
1019+ 905D CD 4D 8B         call Extrae_address
1020+ 9060
1021+ 9060 E6 01            and 1
1022+ 9062 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9064
1024+ 9064              ; Disparo hacia arriba, (Amadeus).
1025+ 9064
1026+ 9064              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9064              ; _ de la dificultad.
1028+ 9064
1029+ 9064 CD B6 94         call PreviousScan
1030+ 9067 CD B6 94         call PreviousScan
1031+ 906A CD B6 94         call PreviousScan
1032+ 906D CD B6 94         call PreviousScan
1033+ 9070
1034+ 9070              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9070
1036+ 9070 7C               ld a,h
1037+ 9071 FE 40            cp $40
1038+ 9073 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9075
1040+ 9075              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9075
1042+ 9075 EB               ex de,hl
1043+ 9076 06 04            ld b,4
1044+ 9078 2B           6 dec hl
1045+ 9079 10 FD            djnz 6B
1046+ 907B
1047+ 907B CD AC 90         call Elimina_disparo_de_base_de_datos
1048+ 907E E1               pop hl
1049+ 907F 18 10            jr 7F
1050+ 9081
1051+ 9081              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9081              ; HL contiene el puntero de impresión del disparo.
1053+ 9081              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9081
1055+ 9081 D5           3 push de
1056+ 9082 C5               push bc
1057+ 9083
1058+ 9083 CD 3F 8E         call Comprueba_Colision
1059+ 9086
1060+ 9086              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9086
1062+ 9086 78               ld a,b
1063+ 9087
1064+ 9087 C1               pop bc
1065+ 9088 D1               pop de
1066+ 9089
1067+ 9089 EB               ex de,hl
1068+ 908A
1069+ 908A 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 908B 23               inc hl                                      ; _ movimiento.
1071+ 908C 72               ld (hl),d
1072+ 908D
1073+ 908D E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 908E
1075+ 908E 23               inc hl                                      ; _ en curso.
1076+ 908F 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9090 2B               dec hl
1078+ 9091
1079+ 9091 C9           7 ret
1080+ 9092
1081+ 9092              ; Disparo hacia abajo, (Entidad).
1082+ 9092
1083+ 9092 3A B5 87     2 ld a,(Velocidad_disparo_entidades)
1084+ 9095 47               ld b,a
1085+ 9096
1086+ 9096 CD A7 94     4 call NextScan
1087+ 9099 10 FB            djnz 4B
1088+ 909B
1089+ 909B              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 909B
1091+ 909B 7C               ld a,h
1092+ 909C FE 58            cp $58
1093+ 909E 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90A0
1095+ 90A0 EB               ex de,hl
1096+ 90A1 06 04            ld b,4
1097+ 90A3 2B           5 dec hl
1098+ 90A4 10 FD            djnz 5B
1099+ 90A6
1100+ 90A6 CD AC 90         call Elimina_disparo_de_base_de_datos
1101+ 90A9 E1               pop hl
1102+ 90AA 18 E5            jr 7B
1103+ 90AC
1104+ 90AC              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90AC
1106+ 90AC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90AF AF               xor a
1108+ 90B0 77               ld (hl),a
1109+ 90B1 54               ld d,h
1110+ 90B2 5D               ld e,l
1111+ 90B3 13               inc de
1112+ 90B4 ED B0            ldir
1113+ 90B6 C9               ret
1114+ 90B7
1115+ 90B7              ; -----------------------------------------------------------------
1116+ 90B7              ;
1117+ 90B7              ;   7/12/23
1118+ 90B7              ;
1119+ 90B7
1120+ 90B7 3A AA 87     Selector_de_impactos ld a,(Impacto2)
1121+ 90BA A7               and a
1122+ 90BB C8               ret z
1123+ 90BC
1124+ 90BC              ; Analizamos si hay impacto por disparos.
1125+ 90BC
1126+ 90BC              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 90BC
1128+ 90BC CB 4F            bit 1,a
1129+ 90BE 28 07            jr z,1F
1130+ 90C0
1131+ 90C0 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 90C3 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 90C5 18 08            jr 2F
1134+ 90C7
1135+ 90C7 CB 47        1 bit 0,a
1136+ 90C9 C8               ret z
1137+ 90CA
1138+ 90CA              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 90CA
1140+ 90CA 21 84 87         ld hl,Ctrl_1
1141+ 90CD CB D6            set 2,(hl)
1142+ 90CF
1143+ 90CF C9           2 ret
1144+ 90D0
1145+ 90D0              ; -----------------------------------------------------------------
1146+ 90D0              ;
1147+ 90D0              ;   25/04/23
1148+ 90D0              ;
1149+ 90D0
1150+ 90D0              Determina_resultado_comparativa
1151+ 90D0
1152+ 90D0              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 90D0              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 90D0              ;
1155+ 90D0              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 90D0              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 90D0              ;
1158+ 90D0              ;   SBC HL,DE
1159+ 90D0
1160+ 90D0              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 90D0              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 90D0
1163+ 90D0              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 90D0              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 90D0
1166+ 90D0
1167+ 90D0 3A 57 87         ld a,(Cuad_objeto)
1168+ 90D3 FE 02            cp 2
1169+ 90D5 28 26            jr z,2F
1170+ 90D7 38 24            jr c,2F
1171+ 90D9
1172+ 90D9              ; Cuadrantes 3º y 4º
1173+ 90D9
1174+ 90D9 E6 01            and 1
1175+ 90DB 28 10            jr z,4F
1176+ 90DD
1177+ 90DD              ; Cuadrante 3º
1178+ 90DD
1179+ 90DD 7C               ld a,h
1180+ 90DE 06 00            ld b,0
1181+ 90E0
1182+ 90E0 CD 6B 91         call Compara_cositas_H3
1183+ 90E3
1184+ 90E3 04               inc b
1185+ 90E4 05               dec b
1186+ 90E5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 90E6
1188+ 90E6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 90E7 06 00            ld b,0
1190+ 90E9
1191+ 90E9 CD 7D 91         call Compara_cositas_L3
1192+ 90EC C9               ret
1193+ 90ED
1194+ 90ED              ; Cuadrante 4º
1195+ 90ED
1196+ 90ED 7C           4 ld a,h
1197+ 90EE 06 00            ld b,0
1198+ 90F0
1199+ 90F0 CD 8F 91         call Compara_cositas_H4
1200+ 90F3
1201+ 90F3 04               inc b
1202+ 90F4 05               dec b
1203+ 90F5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 90F6
1205+ 90F6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 90F7 06 00            ld b,0
1207+ 90F9
1208+ 90F9 CD A5 91         call Compara_cositas_L4
1209+ 90FC C9               ret
1210+ 90FD
1211+ 90FD              ; Cuadrantes 1º y 2º.
1212+ 90FD
1213+ 90FD 28 10        2 jr z,3F
1214+ 90FF
1215+ 90FF              ; 1er Cuadrante
1216+ 90FF
1217+ 90FF 7C               ld a,h
1218+ 9100 06 00            ld b,0
1219+ 9102
1220+ 9102 CD 43 91         call Compara_cositas_H1
1221+ 9105
1222+ 9105 04               inc b
1223+ 9106 05               dec b
1224+ 9107 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9108
1226+ 9108 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9109 06 00            ld b,0
1228+ 910B
1229+ 910B CD 59 91         call Compara_cositas_L1
1230+ 910E C9               ret
1231+ 910F
1232+ 910F
1233+ 910F              ; 2º Cuadrante
1234+ 910F
1235+ 910F 7C           3 ld a,h
1236+ 9110 06 00            ld b,0
1237+ 9112
1238+ 9112 CD 1F 91         call Compara_cositas_H2
1239+ 9115
1240+ 9115 04               inc b
1241+ 9116 05               dec b
1242+ 9117 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9118
1244+ 9118 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9119 06 00            ld b,0
1246+ 911B
1247+ 911B CD 31 91         call Compara_cositas_L2
1248+ 911E C9               ret
1249+ 911F
1250+ 911F A7           Compara_cositas_H2 and a
1251+ 9120 28 0D            jr z,1F
1252+ 9122              ;    cp $fd
1253+ 9122              ;    jr z,1F
1254+ 9122              ;    cp $fe
1255+ 9122              ;    jr z,1F
1256+ 9122 FE FF            cp $ff
1257+ 9124 28 09            jr z,1F
1258+ 9126 FE 01            cp $01
1259+ 9128 28 05            jr z,1F
1260+ 912A FE 02            cp $02
1261+ 912C 28 01            jr z,1F
1262+ 912E C0               ret nz
1263+ 912F 04           1 inc b
1264+ 9130 C9               ret
1265+ 9131
1266+ 9131 A7           Compara_cositas_L2 and a
1267+ 9132 28 0D            jr z,1F
1268+ 9134              ;    cp $fd
1269+ 9134              ;    jr z,1F
1270+ 9134 FE FE            cp $fe
1271+ 9136 28 09            jr z,1F
1272+ 9138 FE FF            cp $ff
1273+ 913A 28 05            jr z,1F
1274+ 913C FE 01            cp $01
1275+ 913E 28 01            jr z,1F
1276+ 9140              ;    cp $02
1277+ 9140              ;    jr z,1F
1278+ 9140 C0               ret nz
1279+ 9141 04           1 inc b
1280+ 9142 C9               ret
1281+ 9143
1282+ 9143 A7           Compara_cositas_H1 and a
1283+ 9144 28 11            jr z,1F
1284+ 9146              ;    cp $fd
1285+ 9146              ;    jr z,1F
1286+ 9146              ;    cp $fe
1287+ 9146              ;    jr z,1F
1288+ 9146 FE FF            cp $ff
1289+ 9148 28 0D            jr z,1F
1290+ 914A FE 01            cp $01
1291+ 914C 28 09            jr z,1F
1292+ 914E FE 02            cp $02
1293+ 9150 28 05            jr z,1F
1294+ 9152 FE 03            cp $03
1295+ 9154 28 01            jr z,1F
1296+ 9156 C0               ret nz
1297+ 9157 04           1 inc b
1298+ 9158 C9               ret
1299+ 9159
1300+ 9159 A7           Compara_cositas_L1 and a
1301+ 915A 28 0D            jr z,1F
1302+ 915C              ;    cp $fd
1303+ 915C              ;    jr z,1F
1304+ 915C              ;    cp $fe
1305+ 915C              ;    jr z,1F
1306+ 915C              ;    cp $ff
1307+ 915C              ;    jr z,1F
1308+ 915C FE 01            cp $01
1309+ 915E 28 09            jr z,1F
1310+ 9160 FE 02            cp $02
1311+ 9162 28 05            jr z,1F
1312+ 9164 FE 03            cp $03
1313+ 9166 28 01            jr z,1F
1314+ 9168 C0               ret nz
1315+ 9169 04           1 inc b
1316+ 916A C9               ret
1317+ 916B
1318+ 916B A7           Compara_cositas_H3 and a
1319+ 916C 28 0D            jr z,1F
1320+ 916E              ;    cp $fd
1321+ 916E              ;    jr z,1F
1322+ 916E FE FE            cp $fe
1323+ 9170 28 09            jr z,1F
1324+ 9172 FE FF            cp $ff
1325+ 9174 28 05            jr z,1F
1326+ 9176 FE 01            cp $01
1327+ 9178 28 01            jr z,1F
1328+ 917A              ;    cp $02
1329+ 917A              ;    jr z,1F
1330+ 917A              ;    cp $03
1331+ 917A              ;    jr z,1F
1332+ 917A C0               ret nz
1333+ 917B 04           1 inc b
1334+ 917C C9               ret
1335+ 917D
1336+ 917D A7           Compara_cositas_L3 and a
1337+ 917E 28 0D            jr z,1F
1338+ 9180              ;    cp $fd
1339+ 9180              ;    jr z,1F
1340+ 9180              ;    cp $fe
1341+ 9180              ;    jr z,1F
1342+ 9180              ;    cp $ff
1343+ 9180              ;    jr z,1F
1344+ 9180 FE 01            cp $01
1345+ 9182 28 09            jr z,1F
1346+ 9184 FE 02            cp $02
1347+ 9186 28 05            jr z,1F
1348+ 9188 FE 03            cp $03
1349+ 918A 28 01            jr z,1F
1350+ 918C C0               ret nz
1351+ 918D 04           1 inc b
1352+ 918E C9               ret
1353+ 918F
1354+ 918F A7           Compara_cositas_H4 and a
1355+ 9190 28 11            jr z,1F
1356+ 9192 FE FD            cp $fd
1357+ 9194 28 0D            jr z,1F
1358+ 9196 FE FE            cp $fe
1359+ 9198 28 09            jr z,1F
1360+ 919A FE FF            cp $ff
1361+ 919C 28 05            jr z,1F
1362+ 919E FE 01            cp $01
1363+ 91A0 28 01            jr z,1F
1364+ 91A2              ;    cp $02
1365+ 91A2              ;    jr z,1F
1366+ 91A2              ;    cp $03
1367+ 91A2              ;    jr z,1F
1368+ 91A2 C0               ret nz
1369+ 91A3 04           1 inc b
1370+ 91A4 C9               ret
1371+ 91A5
1372+ 91A5 A7           Compara_cositas_L4 and a
1373+ 91A6 28 0D            jr z,1F
1374+ 91A8              ;    cp $fd
1375+ 91A8              ;    jr z,1F
1376+ 91A8 FE FE            cp $fe
1377+ 91AA 28 09            jr z,1F
1378+ 91AC FE FF            cp $ff
1379+ 91AE 28 05            jr z,1F
1380+ 91B0 FE 01            cp $01
1381+ 91B2 28 01            jr z,1F
1382+ 91B4              ;    cp $02
1383+ 91B4              ;    jr z,1F
1384+ 91B4              ;    cp $03
1385+ 91B4              ;    jr z,1F
1386+ 91B4 C0               ret nz
1387+ 91B5 04           1 inc b
1388+ 91B6 C9               ret
# file closed: Disparo.asm
1863  91B7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91B7              ; ******************************************************************************************************************************************************************************************
   2+ 91B7              ;
   3+ 91B7              ; 26/06/23
   4+ 91B7              ;
   5+ 91B7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91B7
   7+ 91B7              Draw
   8+ 91B7
   9+ 91B7 CD 9B 94     	call Prepara_draw
  10+ 91BA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 91BB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 91BC 28 05        	jr z,2F
  13+ 91BE
  14+ 91BE 3A 57 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 91C1 18 0C        	jr 1F
  16+ 91C3
  17+ 91C3 2A 55 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 91C6 22 45 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 91C9 CD 58 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 91CC              ;													; _la esquina superior izquierda de la pantalla.
  21+ 91CC
  22+ 91CC CD 0E 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 91CF
  24+ 91CF 3A 65 87     1 ld a,(Ctrl_0)
  25+ 91D2 CB 6F        	bit 5,a
  26+ 91D4 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 91D6
  28+ 91D6 CD EE 91     	call Comprueba_limite_horizontal
  29+ 91D9 CD 7E 92     	call Comprueba_limite_vertical
  30+ 91DC
  31+ 91DC              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 91DC              ; -----------------------
  33+ 91DC              ; -----------------------
  34+ 91DC              ; -----------------------
  35+ 91DC
  36+ 91DC CD CB 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 91DF CD 02 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 91E2 CD 61 94     	call Define_rutina_de_impresion
  39+ 91E5
  40+ 91E5 3A 65 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 91E8 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 91EA 32 65 87     	ld (Ctrl_0),a
  43+ 91ED
  44+ 91ED C9           	ret
  45+ 91EE
  46+ 91EE              ; *******************************************************************************************************************************************************************************************
  47+ 91EE              ;	21/01/23
  48+ 91EE              ;
  49+ 91EE              ; 	Comprueba_limite_horizontal.
  50+ 91EE              ;
  51+ 91EE              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 91EE              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 91EE              ;
  54+ 91EE              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 91EE              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 91EE              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 91EE              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 91EE
  59+ 91EE
  60+ 91EE
  61+ 91EE 3A 65 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 91F1 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 91F3 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 91F5 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 91F7 32 65 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 91FA 18 09            jr 6F
  67+ 91FC CB 5F        1 bit 3,a
  68+ 91FE 28 0A            jr z,2F
  69+ 9200 E6 F7            and $f7
  70+ 9202 32 65 87         ld (Ctrl_0),a
  71+ 9205 CD 58 93     6 call Inicializacion
  72+ 9208 18 5B            jr 5F
  73+ 920A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 920B
  75+ 920B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 920B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 920B
  78+ 920B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 920C 2A 67 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 920F CD BA 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9212 67           	ld h,a
  82+ 9213 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9214 CD BA 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9217 67           	ld h,a
  85+ 9218 A7           	and a
  86+ 9219 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 921B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 921C 3A 57 87     	ld a,(Cuad_objeto)
  89+ 921F FE 02        	cp 2
  90+ 9221 38 1E        	jr c,3F
  91+ 9223 28 1C        	jr z,3F
  92+ 9225 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9226 28 23            jr z,7F
  94+ 9228 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 922A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 922C E1           	pop hl
  97+ 922D
  98+ 922D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 922D              ; _para indicar con E="2" en caso necesario.
 100+ 922D
 101+ 922D E5               push hl
 102+ 922E C5               push bc
 103+ 922F CD BA 97     	call calcula_tercio
 104+ 9232 FE 01        	cp 1
 105+ 9234 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9236 CD 66 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9239 28 26            jr z,9F
 108+ 923B 38 24            jr c,9F
 109+ 923D 1E 00        11 ld e,0
 110+ 923F 18 22            jr 8F
 111+ 9241 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9242 28 07        	jr z, 7F
 113+ 9244 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9246 1E 00         	ld e,0
 115+ 9248 E1           	pop hl
 116+ 9249 18 04        	jr 4F
 117+ 924B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 924D 18 15            jr 10F
 119+ 924F
 120+ 924F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 924F              ; _para indicar con E="2" en caso necesario.
 122+ 924F
 123+ 924F E5           4 push hl
 124+ 9250 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9251 CD BA 97     	call calcula_tercio
 126+ 9254 FE 01        	cp 1
 127+ 9256 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9258 CD 66 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 925B 28 04            jr z,9F
 130+ 925D 30 02            jr nc,9F
 131+ 925F 18 02        	jr 8F
 132+ 9261 1E 02        9 ld e,2
 133+ 9263 C1           8 pop bc
 134+ 9264 E1           10 pop hl
 135+ 9265 C9           5 ret
 136+ 9266
 137+ 9266              ; --------------------
 138+ 9266              ;
 139+ 9266              ; 25/08/22
 140+ 9266
 141+ 9266 CD BA 97     Comprueba_centro call calcula_tercio
 142+ 9269 67               ld h,a
 143+ 926A 08           	ex af,af
 144+ 926B FE 02        	cp 2
 145+ 926D 38 07        	jr c,1F
 146+ 926F 28 05        	jr z,1F
 147+ 9271 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9274 18 03        	jr 2F
 149+ 9276 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9279 08           2 ex af,af
 151+ 927A A7               and a
 152+ 927B ED 42            sbc hl,bc
 153+ 927D C9               ret
 154+ 927E
 155+ 927E              ; *********************************************************************************************************************************************************************************************
 156+ 927E              ;
 157+ 927E              ;   16/8/22
 158+ 927E              ;
 159+ 927E              ;	Comprueba_limite_vertical
 160+ 927E              ;
 161+ 927E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 927E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 927E              ;
 164+ 927E
 165+ 927E 2A 45 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 9281 7D           	ld a,l
 167+ 9282 E6 1F        	and $1F
 168+ 9284 57           	ld d,a
 169+ 9285 3A 69 87     	ld a,(Limite_vertical)
 170+ 9288 BA           	cp d 											; Límite - Posición.
 171+ 9289 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 928A 3A 57 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 928D CB 47        	bit 0,a
 174+ 928F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 9291
 176+ 9291              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 9291
 178+ 9291 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 9292 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9294
 181+ 9294              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9294              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9294
 184+ 9294 3A 49 87         ld a,(Coordenada_X)
 185+ 9297 16 0F            ld d,Centro_izquierda
 186+ 9299 A7               and a
 187+ 929A 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 929B 28 1E            jr z,3F
 189+ 929D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 929F              ;                                                    ; _salimos sin modificar nada.
 191+ 929F 18 0E            jr 2F
 192+ 92A1 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 92A2 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 92A4
 195+ 92A4              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 92A4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 92A4
 198+ 92A4 3A 49 87         ld a,(Coordenada_X)
 199+ 92A7 16 10            ld d,Centro_derecha
 200+ 92A9 A7               and a
 201+ 92AA 92               sub d
 202+ 92AB 28 0E            jr z,3F
 203+ 92AD 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 92AF              ;                                                    ; _salimos sin modificar nada.
 205+ 92AF CB 43        2 bit 0,e
 206+ 92B1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 92B3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 92B4 CD 48 93         call Modificaccionne
 209+ 92B7 C1           	pop bc
 210+ 92B8 CD 58 93         call Inicializacion
 211+ 92BB C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 92BC
 213+ 92BC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 92BC
 215+ 92BC C5           4 push bc
 216+ 92BD 01 44 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 92C0 0A           	ld a,(bc)
 218+ 92C1 3D           	dec a
 219+ 92C2 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 92C3 7D           	ld a,l
 221+ 92C4 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 92C5 CB 47        	bit 0,a
 223+ 92C7 28 03        	jr z,5F
 224+ 92C9 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 92CA 18 2E        	jr 7F
 226+ 92CC
 227+ 92CC              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 92CC
 229+ 92CC 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 92CD F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 92CE 3A 65 87     	ld a,(Ctrl_0)
 232+ 92D1 CB 4F        	bit 1,a
 233+ 92D3 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 92D5 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 92D6
 236+ 92D6              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 92D6
 238+ 92D6 1C               inc e
 239+ 92D7 1D               dec e
 240+ 92D8 20 07            jr nz,12F
 241+ 92DA 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 92DB 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 92DC 22 45 87     	ld (Posicion_actual),hl
 244+ 92DF 18 44        13 jr 9F
 245+ 92E1 CB 43        12 bit 0,e
 246+ 92E3 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 92E5              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 92E5 C1           	pop bc
 249+ 92E6 18 D3        	jr 3B
 250+ 92E8 80           14 add b
 251+ 92E9 6F               ld l,a
 252+ 92EA 22 45 87     	ld (Posicion_actual),hl
 253+ 92ED CD 48 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 92F0 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 92F2 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 92F4 32 65 87         ld (Ctrl_0),a
 257+ 92F7 F1           	pop af
 258+ 92F8 18 2B        	jr 9F
 259+ 92FA
 260+ 92FA              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 92FA
 262+ 92FA F5           7 push af
 263+ 92FB 3A 65 87     	ld a,(Ctrl_0)
 264+ 92FE CB 47        	bit 0,a
 265+ 9300 20 1D        	jr nz,8F
 266+ 9302 F1           	pop af
 267+ 9303
 268+ 9303              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9303
 270+ 9303 1C           	inc e
 271+ 9304 1D               dec e
 272+ 9305 20 07            jr nz,10F
 273+ 9307 90           	sub b
 274+ 9308 6F               ld l,a
 275+ 9309 22 45 87     	ld (Posicion_actual),hl
 276+ 930C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 930E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 930E CB 43        10 bit 0,e
 279+ 9310 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9312              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9312 C1           	pop bc
 282+ 9313 18 A6        	jr 3B
 283+ 9315 90           16 sub b
 284+ 9316 6F               ld l,a
 285+ 9317 22 45 87     	ld (Posicion_actual),hl
 286+ 931A CD 48 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 931D 18 06            jr 9F
 288+ 931F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9321 32 65 87         ld (Ctrl_0),a
 290+ 9324 F1           	pop af
 291+ 9325 C1           9 pop bc
 292+ 9326 1E 00        	ld e,0
 293+ 9328 CD 58 93         call Inicializacion
 294+ 932B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 932C 08           	ex af,af
 296+ 932D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 932E 18 8B            jr 3B
 298+ 9330
 299+ 9330              ; --------------------
 300+ 9330
 301+ 9330 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9332 CD B6 94     1 call PreviousScan
 303+ 9335 10 FB            djnz 1B
 304+ 9337 22 45 87     	ld (Posicion_actual),hl
 305+ 933A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 933B C9           	ret
 307+ 933C
 308+ 933C              ; --------------------
 309+ 933C
 310+ 933C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 933E CD A7 94     1 call NextScan
 312+ 9341 10 FB            djnz 1B
 313+ 9343 22 45 87     	ld (Posicion_actual),hl
 314+ 9346 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9347 C9           	ret
 316+ 9348
 317+ 9348              ; --------------------
 318+ 9348              ;
 319+ 9348              ;	22/01/23
 320+ 9348              ;
 321+ 9348              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9348              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9348              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9348
 325+ 9348
 326+ 9348              Modificaccionne
 327+ 9348
 328+ 9348 3A 57 87     	ld a,(Cuad_objeto)
 329+ 934B FE 02        	cp 2
 330+ 934D CC 30 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9350 DC 30 93         call c,Modifica_Pos_actual
 332+ 9353 C8           	ret z
 333+ 9354 CD 3C 93         call Modifica_Pos_actual2
 334+ 9357 C9               ret
 335+ 9358
 336+ 9358              ; *************************************************************************************************************************************************************************************************
 337+ 9358              ;
 338+ 9358              ;	13/8/22
 339+ 9358              ;
 340+ 9358              ;	Inicializacion
 341+ 9358              ;
 342+ 9358              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9358              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9358              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9358              ;
 346+ 9358              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9358              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9358              ;	_ desaparece/aparece.
 349+ 9358
 350+ 9358              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9358              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9358              ;
 353+ 9358              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9358              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9358              ; 		   [E] ="0"
 356+ 9358
 357+ 9358              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9358
 359+ 9358 CD BA 97     Inicializacion call calcula_tercio
 360+ 935B 28 36        	jr z,primit
 361+ 935D E6 02        	and 2
 362+ 935F 20 07        	jr nz,segmit
 363+ 9361 7D           	ld a,l
 364+ 9362 FE 7F        	cp $7f
 365+ 9364 38 2D        	jr c,primit
 366+ 9366 28 2B        	jr z,primit
 367+ 9368 CD C5 93     segmit call column
 368+ 936B 38 13        	jr c,tercuad
 369+ 936D 3E 04        cuarcuad ld a,4
 370+ 936F 32 57 87     	ld (Cuad_objeto),a
 371+ 9372 21 20 48     	ld hl,$4820
 372+ 9375 22 67 87     	ld (Limite_horizontal),hl
 373+ 9378 21 69 87     	ld hl,Limite_vertical
 374+ 937B 36 0D        	ld (hl),$0d
 375+ 937D 08           	ex af,af
 376+ 937E 18 3C        	jr 1F
 377+ 9380              tercuad
 378+ 9380 3E 03        	ld a,3
 379+ 9382 32 57 87     	ld (Cuad_objeto),a
 380+ 9385 21 20 48     	ld hl,$4820
 381+ 9388 22 67 87     	ld (Limite_horizontal),hl
 382+ 938B 21 69 87     	ld hl,Limite_vertical
 383+ 938E 36 12        	ld (hl),$12
 384+ 9390 08           	ex af,af
 385+ 9391 18 29        	jr 1F
 386+ 9393 CD C5 93     primit call column
 387+ 9396 38 13        	jr c, primcuad
 388+ 9398              segcuad
 389+ 9398 3E 02        	ld a,2
 390+ 939A 32 57 87     	ld (Cuad_objeto),a
 391+ 939D 21 C0 4F     	ld hl,$4fc0
 392+ 93A0 22 67 87     	ld (Limite_horizontal),hl
 393+ 93A3 21 69 87     	ld hl,Limite_vertical
 394+ 93A6 36 0D        	ld (hl),$0d
 395+ 93A8 08           	ex af,af
 396+ 93A9 18 11        	jr 1F
 397+ 93AB              primcuad
 398+ 93AB 3E 01        	ld a,1
 399+ 93AD 32 57 87     	ld (Cuad_objeto),a
 400+ 93B0 21 C0 4F     	ld hl,$4fc0
 401+ 93B3 22 67 87     	ld (Limite_horizontal),hl
 402+ 93B6 21 69 87     	ld hl,Limite_vertical
 403+ 93B9 36 12        	ld (hl),$12
 404+ 93BB 08           	ex af,af
 405+ 93BC CD 52 9B     1 call Genera_coordenadas
 406+ 93BF 21 65 87     	ld hl,Ctrl_0
 407+ 93C2 CB EE        	set 5,(hl)
 408+ 93C4 C9           	ret
 409+ 93C5
 410+ 93C5              ; ------------------------------------------------------------------------------------------------------------------
 411+ 93C5
 412+ 93C5              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 413+ 93C5              ;
 414+ 93C5              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 415+ 93C5
 416+ 93C5 7D           column ld a,l
 417+ 93C6 E6 1F        	and $1f
 418+ 93C8 FE 10         	cp $10
 419+ 93CA C9            	ret
 420+ 93CB
 421+ 93CB              ; --------------------------------------------------------------------------------------------------------------------
 422+ 93CB              ;
 423+ 93CB              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 424+ 93CB              ;
 425+ 93CB              ; 14/12/22
 426+ 93CB              ;
 427+ 93CB              ;	Modifica: A y BC.
 428+ 93CB
 429+ 93CB 3A 57 87     calcula_CColumnass ld a,(Cuad_objeto)
 430+ 93CE E6 01        	and 1
 431+ 93D0 28 17        	jr z,1F
 432+ 93D2
 433+ 93D2              ; Nos encontramos en la parte izquierda de la pantalla
 434+ 93D2
 435+ 93D2 3A 49 87     	ld a,(Coordenada_X)
 436+ 93D5 47           	ld b,a
 437+ 93D6 04           	inc b											; (Coordenada_X)+1 en B.
 438+ 93D7 79           	ld a,c
 439+ 93D8 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 440+ 93D9 38 08        	jr c,2F
 441+ 93DB 47           	ld b,a
 442+ 93DC 79           	ld a,c
 443+ 93DD 90           	sub b
 444+ 93DE 32 66 87     	ld (Columnas),a
 445+ 93E1 18 1B        	jr 4F
 446+ 93E3 79           2 ld a,c
 447+ 93E4 32 66 87     	ld (Columnas),a
 448+ 93E7 18 15        	jr 4F
 449+ 93E9
 450+ 93E9              ; Nos encontramos en la parte derecha de la pantalla.
 451+ 93E9
 452+ 93E9 3A 49 87     1 ld a,(Coordenada_X)
 453+ 93EC 81           	add c
 454+ 93ED 3D           	dec a
 455+ 93EE D6 1F        	sub $1f
 456+ 93F0 38 08        	jr c,3F
 457+ 93F2 47           	ld b,a
 458+ 93F3 79           	ld a,c
 459+ 93F4 90           	sub b
 460+ 93F5 32 66 87     	ld (Columnas),a
 461+ 93F8 18 04        	jr 4F
 462+ 93FA 79           3 ld a,c
 463+ 93FB 32 66 87     	ld (Columnas),a
 464+ 93FE D9           4 exx
 465+ 93FF 4F           	ld c,a
 466+ 9400 D9           	exx
 467+ 9401 C9            ret
 468+ 9402
 469+ 9402              ; --------------------------------------------------------------------------------------------------------------------
 470+ 9402              ;
 471+ 9402              ;   19/7/23
 472+ 9402              ;
 473+ 9402              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 474+ 9402              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 475+ 9402              ;
 476+ 9402              ;	OUTPUT: IX Contienen el puntero de impresión.
 477+ 9402              ;			HL e IY Contienen (Puntero_objeto).
 478+ 9402              ;
 479+ 9402              ;	DESTRUYE: HL,B Y A.
 480+ 9402
 481+ 9402 3A 57 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 482+ 9405 FE 02        	cp 2
 483+ 9407 38 18        	jr c,1F
 484+ 9409 28 16        	jr z,1F
 485+ 940B E6 01        	and 1
 486+ 940D 28 0D        	jr z,3F
 487+ 940F
 488+ 940F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 489+ 940F
 490+ 940F CD 55 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 491+ 9412
 492+ 9412 7D           9 ld a,l
 493+ 9413 E6 1F        	and $1f
 494+ 9415 28 2A        	jr z,7F
 495+ 9417 2B           	dec hl
 496+ 9418 10 F8        	djnz 9B
 497+ 941A 18 25        	jr 7F
 498+ 941C
 499+ 941C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 500+ 941C
 501+ 941C 2A 45 87     3 ld hl,(Posicion_actual)
 502+ 941F 18 20        	jr 7F
 503+ 9421
 504+ 9421 28 14        1 jr z,2F
 505+ 9423
 506+ 9423              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 507+ 9423
 508+ 9423 CD 55 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 509+ 9426
 510+ 9426 7D           4 ld a,l
 511+ 9427 E6 1F        	and $1f
 512+ 9429 28 03        	jr z,6F
 513+ 942B 2B           	dec hl
 514+ 942C 10 F8        	djnz 4B
 515+ 942E 06 0F        6 ld b,15
 516+ 9430 CD B6 94     5 call PreviousScan
 517+ 9433 10 FB        	djnz 5B
 518+ 9435 18 0A        	jr 7F
 519+ 9437
 520+ 9437              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 521+ 9437
 522+ 9437 CD 55 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 523+ 943A 06 0F        	ld b,15
 524+ 943C CD B6 94     8 call PreviousScan
 525+ 943F 10 FB        	djnz 8B
 526+ 9441
 527+ 9441 E5           7 push hl
 528+ 9442 DD E1        	pop ix
 529+ 9444
 530+ 9444 2A 47 87     	ld hl,(Puntero_objeto)
 531+ 9447 E5           	push hl
 532+ 9448 FD E1        	pop iy
 533+ 944A
 534+ 944A              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 535+ 944A
 536+ 944A 3A 65 87     	ld a,(Ctrl_0)
 537+ 944D CB 77        	bit 6,a
 538+ 944F C8           	ret z
 539+ 9450
 540+ 9450              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 541+ 9450              ; _ entidad / Amadeus´.
 542+ 9450
 543+ 9450 DD 22 9F 85  	ld (p.imp.amadeus),ix
 544+ 9454
 545+ 9454 C9           	ret
 546+ 9455
 547+ 9455              ; --------------------------------------------------------------------------------------------------------------------
 548+ 9455              ;
 549+ 9455              ;	2/1/23
 550+ 9455              ;
 551+ 9455              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 552+ 9455              ;
 553+ 9455              ;	Tras esta rutina tenemos:
 554+ 9455              ;
 555+ 9455              ;	OUTPUT: HL contiene (Posicion_actual).
 556+ 9455              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 557+ 9455              ;
 558+ 9455              ;	DESTRUYE!!!!! HL,B y A.
 559+ 9455
 560+ 9455 2A 45 87     Operandos ld hl,(Posicion_actual)
 561+ 9458 3A 66 87     	ld a,(Columnas)
 562+ 945B 3D           	dec a
 563+ 945C 20 01        	jr nz,1F
 564+ 945E 3C           	inc a
 565+ 945F 47           1 ld b,a
 566+ 9460 C9           	ret
 567+ 9461
 568+ 9461              ; --------------------------------------------------------------------------------------------------------------------
 569+ 9461              ;
 570+ 9461              ;	3/1/23
 571+ 9461              ;
 572+ 9461              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 573+ 9461              ;
 574+ 9461              ;	Destruye: A,B,HL y DE.
 575+ 9461
 576+ 9461              Define_rutina_de_impresion
 577+ 9461
 578+ 9461 3A 44 87     	ld a,(Columns)
 579+ 9464 47           	ld b,a
 580+ 9465 3A 66 87     	ld a,(Columnas)
 581+ 9468 B8           	cp b
 582+ 9469 20 0D        	jr nz,2f
 583+ 946B
 584+ 946B              ;	La entidad se imprime entera.
 585+ 946B
 586+ 946B 21 8A 95     	ld hl, Indice_entidades_completas
 587+ 946E E6 01        	and 1
 588+ 9470 28 02        	jr z,1F
 589+ 9472
 590+ 9472 23           	inc hl
 591+ 9473 23           	inc hl
 592+ 9474
 593+ 9474 CD 4D 8B     1 call Extrae_address
 594+ 9477 C9           	ret		;	ret
 595+ 9478
 596+ 9478              ;	La entidad no se imprime entera en pantalla.
 597+ 9478
 598+ 9478 3A 57 87     2 ld a,(Cuad_objeto)
 599+ 947B E6 01        	and 1
 600+ 947D 28 17        	jr z,3F
 601+ 947F
 602+ 947F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 603+ 947F
 604+ 947F 21 8E 95     	ld hl, Indice_entidades_incompletas_izquierda
 605+ 9482 3A 44 87     4 ld a,(Columns)
 606+ 9485 E6 01        	and 1
 607+ 9487 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 608+ 9489
 609+ 9489 23           	inc hl
 610+ 948A 23           	inc hl
 611+ 948B
 612+ 948B 3A 66 87     	ld a,(Columnas)
 613+ 948E E6 01        	and 1
 614+ 9490 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 615+ 9492
 616+ 9492 23           	inc hl
 617+ 9493 23           	inc hl
 618+ 9494
 619+ 9494 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 620+ 9496
 621+ 9496 21 94 95     3 ld hl, Indice_entidades_incompletas_derecha
 622+ 9499 18 E7        	jr 4B
 623+ 949B
 624+ 949B              ; --------------------------------------------------------------------------------------------------------------------
 625+ 949B              ;
 626+ 949B              ;	Prepara_draw
 627+ 949B              ;
 628+ 949B              ;	Es una rutina de carga.
 629+ 949B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 630+ 949B              ;
 631+ 949B              ;	FUNCIONAMIENTO:
 632+ 949B              ;
 633+ 949B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 634+ 949B              ;	- LD (Posicion_actual) del objeto en [HL].
 635+ 949B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 636+ 949B              ;
 637+ 949B              ;	DESTRUYE:
 638+ 949B              ;
 639+ 949B              ;	Logicamente, BC,HL y E quedan destruidos.
 640+ 949B
 641+ 949B 21 43 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 642+ 949E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 643+ 949F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 644+ 94A0 4E           	ld c,(hl)
 645+ 94A1 2A 45 87     	ld hl,(Posicion_actual)
 646+ 94A4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 647+ 94A6 C9           	ret
 648+ 94A7
 649+ 94A7              ;----------------------------------------------------------------------------------------------------------------
 650+ 94A7              ;
 651+ 94A7              ;	5/08/22
 652+ 94A7              ;
 653+ 94A7              ;   NextScan.
 654+ 94A7              ;
 655+ 94A7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 656+ 94A7              ;
 657+ 94A7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 658+ 94A7              ;
 659+ 94A7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 660+ 94A7              ;
 661+ 94A7              ;       DESTRUIDOS: AF y HL !!!
 662+ 94A7              ;
 663+ 94A7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 664+ 94A7              ;
 665+ 94A7
 666+ 94A7 24           NextScan inc h          ; Incrementamos el scanline.
 667+ 94A8 7C               ld a,h
 668+ 94A9 E6 07            and 7
 669+ 94AB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 670+ 94AC
 671+ 94AC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 672+ 94AD C6 20            add a,$20           ; Vamos a comprobarlo...
 673+ 94AF 6F               ld l,a
 674+ 94B0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 675+ 94B1
 676+ 94B1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 677+ 94B2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 678+ 94B4 67               ld h,a
 679+ 94B5 C9               ret
 680+ 94B6
 681+ 94B6              ;----------------------------------------------------------------------------------------------------------------
 682+ 94B6              ;
 683+ 94B6              ;	5/08/22
 684+ 94B6              ;
 685+ 94B6              ;   PreviousScan.
 686+ 94B6              ;
 687+ 94B6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 688+ 94B6              ;
 689+ 94B6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 690+ 94B6              ;
 691+ 94B6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 692+ 94B6              ;
 693+ 94B6              ;       DESTRUIDOS: AF y HL !!!
 694+ 94B6              ;
 695+ 94B6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 696+ 94B6              ;
 697+ 94B6
 698+ 94B6 7C           PreviousScan ld a,h
 699+ 94B7 25               dec h               ; Dec H.
 700+ 94B8 E6 07            and 7
 701+ 94BA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 702+ 94BB
 703+ 94BB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 704+ 94BC D6 20            sub $20             ; Vamos a comprobarlo...
 705+ 94BE 6F               ld l,a
 706+ 94BF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 707+ 94C0
 708+ 94C0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 709+ 94C1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 710+ 94C3 67               ld h,a
 711+ 94C4 C9               ret
 712+ 94C5
 713+ 94C5              ; -----------------------------------------------------------------------------------
 714+ 94C5              ;
 715+ 94C5              ;	31/7/23
 716+ 94C5              ;
 717+ 94C5              ;	Rutina principal de pintado de entidades.
 718+ 94C5              ;	Extrae la foto del frame, (entidades).
 719+ 94C5
 720+ 94C5              Extrae_foto_entidades
 721+ 94C5
 722+ 94C5 21 01 70     	ld hl,Album_de_fotos+1
 723+ 94C8 7E           	ld a,(hl)
 724+ 94C9 A7           	and a
 725+ 94CA C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 726+ 94CB
 727+ 94CB              ;	No hay datos, (entidades para pintar en este frame).
 728+ 94CB
 729+ 94CB 3A 90 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 730+ 94CE A7           	and a
 731+ 94CF C8           	ret z
 732+ 94D0
 733+ 94D0              ; -----------------------------------
 734+ 94D0
 735+ 94D0 ED 73 95 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 736+ 94D4 31 00 70     	ld sp,Album_de_fotos
 737+ 94D7
 738+ 94D7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 739+ 94D9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 740+ 94DA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 741+ 94DB
 742+ 94DB ED 73 97 87  	ld (Stack_2),sp
 743+ 94DF ED 7B 95 87  	ld sp,(Stack)
 744+ 94E3
 745+ 94E3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 746+ 94E3
 747+ 94E3 3E CD        	ld a,$cd
 748+ 94E5 32 ED 94     	ld (Imprime),a
 749+ 94E8 EB           	ex de,hl
 750+ 94E9 22 EE 94     	ld (Imprime+1),hl
 751+ 94EC EB           	ex de,hl
 752+ 94ED
 753+ 94ED              ; Ejecuta la llamada:	CALL $xx,xx
 754+ 94ED
 755+ 94ED 00 00 00     Imprime db 0,0,0
 756+ 94F0
 757+ 94F0 ED 73 95 87  	ld (Stack),sp
 758+ 94F4
 759+ 94F4 3A 90 87     	ld a,(Numero_de_malotes)
 760+ 94F7 3D           	dec a
 761+ 94F8 28 09        	jr z,1F
 762+ 94FA 32 90 87      	ld (Numero_de_malotes),a
 763+ 94FD
 764+ 94FD ED 7B 97 87  	ld sp,(Stack_2)
 765+ 9501 18 D4        	jr 2B
 766+ 9503
 767+ 9503 AF           1 xor a
 768+ 9504 32 97 87     	ld (Stack_2),a
 769+ 9507
 770+ 9507 C9           	ret
 771+ 9508
 772+ 9508              ; -----------------------------------------------------------------------------------
 773+ 9508              ;
 774+ 9508              ;	28/2/23
 775+ 9508              ;
 776+ 9508              ;	Pinta los disparos generados.
 777+ 9508
 778+ 9508              Extrae_foto_disparos
 779+ 9508
 780+ 9508 21 57 70     	ld hl,Album_de_fotos_disparos+1
 781+ 950B 7E               ld a,(hl)
 782+ 950C A7               and a
 783+ 950D C8               ret z
 784+ 950E
 785+ 950E 3A A5 87     	ld a,(Numero_de_disparotes)
 786+ 9511 A7           	and a
 787+ 9512 C8           	ret z
 788+ 9513 ED 73 95 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 789+ 9517 31 56 70     	ld sp,Album_de_fotos_disparos
 790+ 951A
 791+ 951A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 792+ 951C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 793+ 951D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 794+ 951E
 795+ 951E ED 73 97 87  	ld (Stack_2),sp
 796+ 9522 ED 7B 95 87  	ld sp,(Stack)
 797+ 9526
 798+ 9526              ; Fabrica la llamada a la correspondiente rutina de impresión.
 799+ 9526
 800+ 9526 3E CD        	ld a,$cd
 801+ 9528 32 30 95     	ld (Imprime2),a
 802+ 952B EB           	ex de,hl
 803+ 952C 22 31 95     	ld (Imprime2+1),hl
 804+ 952F EB           	ex de,hl
 805+ 9530
 806+ 9530              ; Ejecuta la llamada:	CALL $xx,xx
 807+ 9530
 808+ 9530 00 00 00     Imprime2 db 0,0,0
 809+ 9533
 810+ 9533 3A A5 87     	ld a,(Numero_de_disparotes)
 811+ 9536 3D           	dec a
 812+ 9537 28 09        	jr z,1F
 813+ 9539 32 A5 87      	ld (Numero_de_disparotes),a
 814+ 953C
 815+ 953C ED 7B 97 87  	ld sp,(Stack_2)
 816+ 9540 18 D8        	jr 2B
 817+ 9542
 818+ 9542 AF           1 xor a
 819+ 9543 32 97 87     	ld (Stack_2),a
 820+ 9546 C9           	ret
 821+ 9547
 822+ 9547              ; -----------------------------------------------------------------------------------
 823+ 9547              ;
 824+ 9547              ;	4/9/23
 825+ 9547              ;
 826+ 9547              ;	Rutina principal de pintado de Amadeus.
 827+ 9547              ;	Extrae fotos de Album_de_fotos_Amadeus.
 828+ 9547
 829+ 9547 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 830+ 954A 7E           	ld a,(hl)
 831+ 954B A7           	and a
 832+ 954C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 833+ 954D
 834+ 954D 3A 90 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 835+ 9550 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 836+ 9551 C8           	ret z
 837+ 9552
 838+ 9552              ; -----------------------------------
 839+ 9552
 840+ 9552 ED 73 95 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 841+ 9556 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 842+ 9559
 843+ 9559 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 844+ 955B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 845+ 955C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 846+ 955D
 847+ 955D ED 73 97 87  	ld (Stack_2),sp
 848+ 9561 ED 7B 95 87  	ld sp,(Stack)
 849+ 9565
 850+ 9565              ; Fabrica la llamada a la correspondiente rutina de impresión.
 851+ 9565
 852+ 9565 3E CD        	ld a,$cd
 853+ 9567 32 6F 95     	ld (Imprime_Amadeus),a
 854+ 956A EB           	ex de,hl
 855+ 956B 22 70 95     	ld (Imprime_Amadeus+1),hl
 856+ 956E EB           	ex de,hl
 857+ 956F
 858+ 956F              ; Ejecuta la llamada:	CALL $xx,xx
 859+ 956F
 860+ 956F 00 00 00     Imprime_Amadeus db 0,0,0
 861+ 9572
 862+ 9572 ED 73 95 87  	ld (Stack),sp
 863+ 9576
 864+ 9576 3A 90 87     	ld a,(Numero_de_malotes)
 865+ 9579 3D           	dec a
 866+ 957A 28 09        	jr z,1F
 867+ 957C 32 90 87      	ld (Numero_de_malotes),a
 868+ 957F
 869+ 957F ED 7B 97 87  	ld sp,(Stack_2)
 870+ 9583 18 D4        	jr 2B
 871+ 9585
 872+ 9585 AF           1 xor a
 873+ 9586 32 97 87     	ld (Stack_2),a
 874+ 9589
 875+ 9589 C9           	ret
# file closed: Draw_XOR.asm
1864  958A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 958A              ;   índices de Rutinas de impresión.
   2+ 958A
   3+ 958A 9A 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 958C C7 95            defw Pinta_Amadeus_3x2
   5+ 958E
   6+ 958E 1D 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9590 BD 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9592 71 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9594
  10+ 9594 47 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9596 4B 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9598 FF 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 959A
  14+ 959A
  15+ 959A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 959A              ;
  17+ 959A              ;   12/12/22
  18+ 959A              ;
  19+ 959A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 959A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 959A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 959A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 959A              ;
  24+ 959A              ;   Modifica: DE y HL.
  25+ 959A
  26+ 959A ED 73 95 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 959E FD F9        	ld sp,iy
  28+ 95A0 06 10            ld b,16
  29+ 95A2 D1           1 pop de
  30+ 95A3 7B               ld a,e
  31+ 95A4 AE               xor (hl)
  32+ 95A5 77           	ld (hl),a
  33+ 95A6 23           	inc hl
  34+ 95A7 7A               ld a,d
  35+ 95A8 AE               xor (hl)
  36+ 95A9 77           	ld (hl),a
  37+ 95AA 2B           	dec hl
  38+ 95AB 24           	inc h
  39+ 95AC 7C               ld a,h
  40+ 95AD E6 07            and 7
  41+ 95AF 20 0A            jr nz,2F
  42+ 95B1 7D               ld a,l
  43+ 95B2 C6 20            add a,$20
  44+ 95B4 6F               ld l,a
  45+ 95B5 38 04            jr c,2F
  46+ 95B7 7C               ld a,h
  47+ 95B8 D6 08            sub 8
  48+ 95BA 67               ld h,a
  49+ 95BB 7C           2 ld a,h
  50+ 95BC FE 58            cp $58
  51+ 95BE 28 02            jr z,3F
  52+ 95C0 10 E0            djnz 1B
  53+ 95C2 ED 7B 95 87  3 ld sp,(Stack)
  54+ 95C6 C9           	ret
  55+ 95C7
  56+ 95C7 ED 73 95 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95CB FD F9        	ld sp,iy
  58+ 95CD 06 08            ld b,8
  59+ 95CF D1           1 pop de
  60+ 95D0 7B               ld a,e
  61+ 95D1 AE               xor (hl)
  62+ 95D2 77           	ld (hl),a
  63+ 95D3 23           	inc hl
  64+ 95D4 7A               ld a,d
  65+ 95D5 AE               xor (hl)
  66+ 95D6 77           	ld (hl),a
  67+ 95D7 23           	inc hl
  68+ 95D8 D1           	pop de
  69+ 95D9 7B               ld a,e
  70+ 95DA AE               xor (hl)
  71+ 95DB 77           	ld (hl),a
  72+ 95DC 2B           	dec hl
  73+ 95DD 2B           	dec hl
  74+ 95DE 24           	inc h
  75+ 95DF 7C               ld a,h
  76+ 95E0 E6 07            and 7
  77+ 95E2 20 0A            jr nz,2F
  78+ 95E4 7D               ld a,l
  79+ 95E5 C6 20            add a,$20
  80+ 95E7 6F               ld l,a
  81+ 95E8 38 04            jr c,2F
  82+ 95EA 7C               ld a,h
  83+ 95EB D6 08            sub 8
  84+ 95ED 67               ld h,a
  85+ 95EE 7C           2 ld a,h
  86+ 95EF FE 58            cp $58
  87+ 95F1 28 25            jr z,4F
  88+ 95F3 7A               ld a,d
  89+ 95F4 AE               xor (hl)
  90+ 95F5 77               ld (hl),a
  91+ 95F6 D1           	pop de
  92+ 95F7 23           	inc hl
  93+ 95F8 7B               ld a,e
  94+ 95F9 AE               xor (hl)
  95+ 95FA 77           	ld (hl),a
  96+ 95FB 23           	inc hl
  97+ 95FC 7A               ld a,d
  98+ 95FD AE               xor (hl)
  99+ 95FE 77           	ld (hl),a
 100+ 95FF 2B           	dec hl
 101+ 9600 2B           	dec hl
 102+ 9601 24           	inc h
 103+ 9602 7C               ld a,h
 104+ 9603 E6 07            and 7
 105+ 9605 20 0A            jr nz,3F
 106+ 9607 7D               ld a,l
 107+ 9608 C6 20            add a,$20
 108+ 960A 6F               ld l,a
 109+ 960B 38 04            jr c,3F
 110+ 960D 7C               ld a,h
 111+ 960E D6 08            sub 8
 112+ 9610 67               ld h,a
 113+ 9611 7C           3 ld a,h
 114+ 9612 FE 58            cp $58
 115+ 9614 28 02            jr z,4F
 116+ 9616 10 B7            djnz 1B
 117+ 9618 ED 7B 95 87  4 ld sp,(Stack)
 118+ 961C C9           	ret
 119+ 961D
 120+ 961D              ; ---------------------------------------------------
 121+ 961D
 122+ 961D ED 73 95 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9621 FD F9        	ld sp,iy
 124+ 9623
 125+ 9623              ; >>>
 126+ 9623
 127+ 9623 06 10            ld b,16
 128+ 9625 D1           1 pop de
 129+ 9626 7A           	ld a,d
 130+ 9627 AE           	xor (hl)
 131+ 9628 77           	ld (hl),a
 132+ 9629 24           	inc h
 133+ 962A 7C               ld a,h
 134+ 962B E6 07            and 7
 135+ 962D 20 0C            jr nz,2F
 136+ 962F 7D               ld a,l
 137+ 9630 C6 20            add a,$20
 138+ 9632 6F               ld l,a
 139+ 9633 38 06            jr c,2F
 140+ 9635 7C               ld a,h
 141+ 9636 D6 08            sub 8
 142+ 9638 67               ld h,a
 143+ 9639 18 00            jr 2F
 144+ 963B 7C           2 ld a,h
 145+ 963C FE 58            cp $58
 146+ 963E 28 02            jr z,3F
 147+ 9640 10 E3            djnz 1B
 148+ 9642 ED 7B 95 87  3 ld sp,(Stack)
 149+ 9646 C9           	ret
 150+ 9647
 151+ 9647 ED 73 95 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 964B FD F9        	ld sp,iy
 153+ 964D
 154+ 964D              ; >>>
 155+ 964D
 156+ 964D 06 10            ld b,16
 157+ 964F D1           1 pop de
 158+ 9650 7B           	ld a,e
 159+ 9651 AE           	xor (hl)
 160+ 9652 77           	ld (hl),a
 161+ 9653 24           	inc h
 162+ 9654 7C               ld a,h
 163+ 9655 E6 07            and 7
 164+ 9657 20 0C            jr nz,2F
 165+ 9659 7D               ld a,l
 166+ 965A C6 20            add a,$20
 167+ 965C 6F               ld l,a
 168+ 965D 38 06            jr c,2F
 169+ 965F 7C               ld a,h
 170+ 9660 D6 08            sub 8
 171+ 9662 67               ld h,a
 172+ 9663 18 00            jr 2F
 173+ 9665 7C           2 ld a,h
 174+ 9666 FE 58            cp $58
 175+ 9668 28 02            jr z,3F
 176+ 966A 10 E3            djnz 1B
 177+ 966C ED 7B 95 87  3 ld sp,(Stack)
 178+ 9670 C9           	ret
 179+ 9671
 180+ 9671              ; ---------------------------------------------------
 181+ 9671
 182+ 9671 ED 73 95 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9675 FD F9        	ld sp,iy
 184+ 9677 06 08            ld b,8
 185+ 9679 D1           1 pop de
 186+ 967A 7A           	ld a,d
 187+ 967B AE           	xor (hl)
 188+ 967C 77           	ld (hl),a
 189+ 967D 23           	inc hl
 190+ 967E D1           	pop de
 191+ 967F 7B           	ld a,e
 192+ 9680 AE           	xor (hl)
 193+ 9681 77           	ld (hl),a
 194+ 9682 2B           	dec hl
 195+ 9683 24            	inc h
 196+ 9684 7C               ld a,h
 197+ 9685 E6 07            and 7
 198+ 9687 20 0A            jr nz,2F
 199+ 9689 7D               ld a,l
 200+ 968A C6 20            add a,$20
 201+ 968C 6F               ld l,a
 202+ 968D 38 04            jr c,2F
 203+ 968F 7C               ld a,h
 204+ 9690 D6 08            sub 8
 205+ 9692 67               ld h,a
 206+ 9693 7C           2 ld a,h
 207+ 9694 FE 58            cp $58
 208+ 9696 28 20            jr z,4F
 209+ 9698 D1               pop de
 210+ 9699 7B           	ld a,e
 211+ 969A AE           	xor (hl)
 212+ 969B 77           	ld (hl),a
 213+ 969C 23           	inc hl
 214+ 969D 7A           	ld a,d
 215+ 969E AE           	xor (hl)
 216+ 969F 77           	ld (hl),a
 217+ 96A0 2B           	dec hl
 218+ 96A1 24           	inc h
 219+ 96A2 7C               ld a,h
 220+ 96A3 E6 07            and 7
 221+ 96A5 20 0A            jr nz,3F
 222+ 96A7 7D               ld a,l
 223+ 96A8 C6 20            add a,$20
 224+ 96AA 6F               ld l,a
 225+ 96AB 38 04            jr c,3F
 226+ 96AD 7C               ld a,h
 227+ 96AE D6 08            sub 8
 228+ 96B0 67               ld h,a
 229+ 96B1 7C           3 ld a,h
 230+ 96B2 FE 58            cp $58
 231+ 96B4 28 02            jr z,4F
 232+ 96B6 10 C1            djnz 1B
 233+ 96B8 ED 7B 95 87  4 ld sp,(Stack)
 234+ 96BC C9           	ret
 235+ 96BD
 236+ 96BD ED 73 95 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96C1 FD F9        	ld sp,iy
 238+ 96C3 06 08            ld b,8
 239+ 96C5 D1           1 pop de
 240+ 96C6 D1           	pop de
 241+ 96C7 7B           	ld a,e
 242+ 96C8 AE           	xor (hl)
 243+ 96C9 77           	ld (hl),a
 244+ 96CA 24            	inc h
 245+ 96CB 7C               ld a,h
 246+ 96CC E6 07            and 7
 247+ 96CE 20 0A            jr nz,2F
 248+ 96D0 7D               ld a,l
 249+ 96D1 C6 20            add a,$20
 250+ 96D3 6F               ld l,a
 251+ 96D4 38 04            jr c,2F
 252+ 96D6 7C               ld a,h
 253+ 96D7 D6 08            sub 8
 254+ 96D9 67               ld h,a
 255+ 96DA 7C           2 ld a,h
 256+ 96DB FE 58            cp $58
 257+ 96DD 28 1B            jr z,4F
 258+ 96DF D1               pop de
 259+ 96E0 7A           	ld a,d
 260+ 96E1 AE           	xor (hl)
 261+ 96E2 77           	ld (hl),a
 262+ 96E3 24           	inc h
 263+ 96E4 7C               ld a,h
 264+ 96E5 E6 07            and 7
 265+ 96E7 20 0A            jr nz,3F
 266+ 96E9 7D               ld a,l
 267+ 96EA C6 20            add a,$20
 268+ 96EC 6F               ld l,a
 269+ 96ED 38 04            jr c,3F
 270+ 96EF 7C               ld a,h
 271+ 96F0 D6 08            sub 8
 272+ 96F2 67               ld h,a
 273+ 96F3 7C           3 ld a,h
 274+ 96F4 FE 58            cp $58
 275+ 96F6 28 02            jr z,4F
 276+ 96F8 10 CB            djnz 1B
 277+ 96FA ED 7B 95 87  4 ld sp,(Stack)
 278+ 96FE C9           	ret
 279+ 96FF
 280+ 96FF ED 73 95 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9703 FD F9        	ld sp,iy
 282+ 9705 06 08            ld b,8
 283+ 9707 D1           1 pop de
 284+ 9708 7B           	ld a,e
 285+ 9709 AE           	xor (hl)
 286+ 970A 77           	ld (hl),a
 287+ 970B 23           	inc hl
 288+ 970C 7A           	ld a,d
 289+ 970D AE           	xor (hl)
 290+ 970E 77           	ld (hl),a
 291+ 970F 2B           	dec hl
 292+ 9710 24             	inc h
 293+ 9711 7C               ld a,h
 294+ 9712 E6 07            and 7
 295+ 9714 20 0A            jr nz,2F
 296+ 9716 7D               ld a,l
 297+ 9717 C6 20            add a,$20
 298+ 9719 6F               ld l,a
 299+ 971A 38 04            jr c,2F
 300+ 971C 7C               ld a,h
 301+ 971D D6 08            sub 8
 302+ 971F 67               ld h,a
 303+ 9720 7C           2 ld a,h
 304+ 9721 FE 58            cp $58
 305+ 9723 28 21            jr z,4F
 306+ 9725 D1               pop de
 307+ 9726 7A           	ld a,d
 308+ 9727 AE           	xor (hl)
 309+ 9728 77           	ld (hl),a
 310+ 9729 23           	inc hl
 311+ 972A D1               pop de
 312+ 972B 7B           	ld a,e
 313+ 972C AE           	xor (hl)
 314+ 972D 77           	ld (hl),a
 315+ 972E 2B           	dec hl
 316+ 972F 24           	inc h
 317+ 9730 7C               ld a,h
 318+ 9731 E6 07            and 7
 319+ 9733 20 0A            jr nz,3F
 320+ 9735 7D               ld a,l
 321+ 9736 C6 20            add a,$20
 322+ 9738 6F               ld l,a
 323+ 9739 38 04            jr c,3F
 324+ 973B 7C               ld a,h
 325+ 973C D6 08            sub 8
 326+ 973E 67               ld h,a
 327+ 973F 7C           3 ld a,h
 328+ 9740 FE 58            cp $58
 329+ 9742 28 02            jr z,4F
 330+ 9744 10 C1            djnz 1B
 331+ 9746 ED 7B 95 87  4 ld sp,(Stack)
 332+ 974A C9           	ret
 333+ 974B
 334+ 974B ED 73 95 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 974F FD F9        	ld sp,iy
 336+ 9751 06 08            ld b,8
 337+ 9753 D1           1 pop de
 338+ 9754 7B           	ld a,e
 339+ 9755 AE           	xor (hl)
 340+ 9756 77           	ld (hl),a
 341+ 9757 24            	inc h
 342+ 9758 7C               ld a,h
 343+ 9759 E6 07            and 7
 344+ 975B 20 0A            jr nz,2F
 345+ 975D 7D               ld a,l
 346+ 975E C6 20            add a,$20
 347+ 9760 6F               ld l,a
 348+ 9761 38 04            jr c,2F
 349+ 9763 7C               ld a,h
 350+ 9764 D6 08            sub 8
 351+ 9766 67               ld h,a
 352+ 9767 7C           2 ld a,h
 353+ 9768 FE 58            cp $58
 354+ 976A 28 1C            jr z,4F
 355+ 976C D1               pop de
 356+ 976D 7A           	ld a,d
 357+ 976E AE           	xor (hl)
 358+ 976F 77           	ld (hl),a
 359+ 9770 24           	inc h
 360+ 9771 7C               ld a,h
 361+ 9772 E6 07            and 7
 362+ 9774 20 0A            jr nz,3F
 363+ 9776 7D               ld a,l
 364+ 9777 C6 20            add a,$20
 365+ 9779 6F               ld l,a
 366+ 977A 38 04            jr c,3F
 367+ 977C 7C               ld a,h
 368+ 977D D6 08            sub 8
 369+ 977F 67               ld h,a
 370+ 9780 7C           3 ld a,h
 371+ 9781 FE 58            cp $58
 372+ 9783 28 03            jr z,4F
 373+ 9785 D1               pop de
 374+ 9786 10 CB            djnz 1B
 375+ 9788 ED 7B 95 87  4 ld sp,(Stack)
 376+ 978C C9           	ret
 377+ 978D
 378+ 978D              ; ---------------------------------------------------
 379+ 978D              ;
 380+ 978D              ;   27/02/23
 381+ 978D              ;
 382+ 978D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 978D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 978D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 978D
 386+ 978D ED 73 95 87  Pinta_Disparo ld (Stack),sp
 387+ 9791 FD F9            ld sp,iy
 388+ 9793 06 03            ld b,3
 389+ 9795 D1           1 pop de
 390+ 9796 7B               ld a,e
 391+ 9797 AE               xor (hl)
 392+ 9798 77               ld (hl),a
 393+ 9799 23               inc hl
 394+ 979A 7A               ld a,d
 395+ 979B AE               xor (hl)
 396+ 979C 77               ld (hl),a
 397+ 979D 2B               dec hl
 398+ 979E
 399+ 979E 24               inc h
 400+ 979F 7C               ld a,h
 401+ 97A0 E6 07            and 7
 402+ 97A2 20 0A            jr nz,2F
 403+ 97A4 7D               ld a,l
 404+ 97A5 C6 20            add a,$20
 405+ 97A7 6F               ld l,a
 406+ 97A8 38 04            jr c,2F
 407+ 97AA 7C               ld a,h
 408+ 97AB D6 08            sub 8
 409+ 97AD 67               ld h,a
 410+ 97AE 7C           2 ld a,h
 411+ 97AF FE 58            cp $58
 412+ 97B1 28 02            jr z,3F
 413+ 97B3
 414+ 97B3 10 E0            djnz 1B
 415+ 97B5 ED 7B 95 87  3 ld sp,(Stack)
 416+ 97B9 C9               ret
 417+ 97BA
# file closed: Rutinas_de_impresion_sprites.asm
1865  97BA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97BA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97BA              ;
   3+ 97BA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97BA              ;
   5+ 97BA              ; *****************************************************************************************************************************************************************************************
   6+ 97BA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97BA
   8+ 97BA 7C           calcula_tercio ld a,h
   9+ 97BB E6 18        	and $18
  10+ 97BD CB 2F        	sra a
  11+ 97BF CB 2F        	sra a
  12+ 97C1 CB 2F        	sra a
  13+ 97C3 C9           	ret
  14+ 97C4
# file closed: calcula_tercio.asm
1866  97C4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97C4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97C4              ;
   3+ 97C4              ;
   4+ 97C4              ;	CLS.
   5+ 97C4              ;
   6+ 97C4              ;	Limpia la pantalla y define sus atributos.
   7+ 97C4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97C4              ;
   9+ 97C4              ;	COLORES: 0 ..... NEGRO
  10+ 97C4              ;    		 1 ..... AZUL
  11+ 97C4              ; 			 2 ..... ROJO
  12+ 97C4              ;			 3 ..... MAGENTA
  13+ 97C4              ; 			 4 ..... VERDE
  14+ 97C4              ; 			 5 ..... CIAN
  15+ 97C4              ;			 6 ..... AMARILLO
  16+ 97C4              ; 			 7 ..... BLANCO
  17+ 97C4              ;
  18+ 97C4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97C4              ;
  20+ 97C4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97C4
  22+ 97C4
  23+ 97C4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97C7 11 01 40     	LD DE,$4001
  25+ 97CA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97CD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97CF ED B0        	LDIR
  28+ 97D1 01 FF 02     	LD BC,767
  29+ 97D4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 97D5 ED B0        	LDIR
  31+ 97D7 C9           	ret
  32+ 97D8
# file closed: Cls.asm
1867  97D8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 97D8
   2+ 97D8              ; ******************************************************************************************************************************************************************************************
   3+ 97D8              ;
   4+ 97D8              ;   20/05/23
   5+ 97D8              ;
   6+ 97D8              ;	Recompone_posicion_inicio
   7+ 97D8              ;
   8+ 97D8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 97D8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 97D8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 97D8              ;	_ a una u otra rutina.
  12+ 97D8
  13+ 97D8              Recompone_posicion_inicio
  14+ 97D8
  15+ 97D8 2A 55 87     	ld hl,(Posicion_inicio)
  16+ 97DB 7D           	ld a,l
  17+ 97DC E6 1F        	and $1f
  18+ 97DE 28 16        	jr z,1F
  19+ 97E0
  20+ 97E0 FE 1F        	cp $1f
  21+ 97E2 28 0D        	jr z,3F
  22+ 97E4
  23+ 97E4 21 6A 87     	ld hl,Ctrl_2
  24+ 97E7 CB C6        	set 0,(hl)
  25+ 97E9 2A 47 87     	ld hl,(Puntero_objeto)
  26+ 97EC 22 85 87     	ld (Repone_puntero_objeto),hl
  27+ 97EF 18 08        	jr 2F
  28+ 97F1
  29+ 97F1 CD 9F 99     3 call Mov_left
  30+ 97F4 18 03        	jr 2F
  31+ 97F6
  32+ 97F6 CD 7C 98     1 call Mov_right
  33+ 97F9 21 00 F0     2 ld hl,Sprite_vacio
  34+ 97FC 22 47 87     	ld (Puntero_objeto),hl
  35+ 97FF C9           	ret
  36+ 9800
  37+ 9800              ; ******************************************************************************************************************************************************************************************
  38+ 9800              ;
  39+ 9800              ;   27/05/23
  40+ 9800              ;
  41+ 9800              ;	Mov_down
  42+ 9800              ;
  43+ 9800              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9800              ;
  45+ 9800              ;
  46+ 9800              Mov_down
  47+ 9800
  48+ 9800 CD 6A 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9803              ;																	; _ repone (Puntero_objeto).
  50+ 9803 21 65 87     	ld hl,Ctrl_0
  51+ 9806 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9808              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9808              ; 																	; _ en el caso de que no lo haya.
  54+ 9808 3A 6F 87     	ld a,(Vel_down)
  55+ 980B 47           	ld b,a
  56+ 980C 2A 45 87         ld hl,(Posicion_actual)
  57+ 980F CD BA 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9812 E6 02        	and 2
  59+ 9814 28 17        	jr z,1F
  60+ 9816
  61+ 9816              ; Nos encontramos en el último tercio de pantalla.
  62+ 9816              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9816
  64+ 9816 7C           	ld a,h
  65+ 9817 FE 57        	cp $57
  66+ 9819 20 12        	jr nz,1F
  67+ 981B
  68+ 981B 7D           	ld a,l
  69+ 981C C6 20        	add $20
  70+ 981E 30 0D        	jr nc,1F
  71+ 9820
  72+ 9820              ; ------------------------------
  73+ 9820              ;
  74+ 9820              ;	12/01/24
  75+ 9820
  76+ 9820              ;	call Reaparece_arriba
  77+ 9820 CD 2C 9B     	call Reinicio
  78+ 9823
  79+ 9823              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9823
  81+ 9823 3A A3 87     	ld a,(Ctrl_3)
  82+ 9826 CB CF        	set 1,a
  83+ 9828 32 A3 87     	ld (Ctrl_3),a
  84+ 982B
  85+ 982B 18 08        	jr 3F
  86+ 982D              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 982D              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 982D              ; ------------------------------
  89+ 982D
  90+ 982D CD A7 94     1 call NextScan
  91+ 9830 22 45 87     	ld (Posicion_actual),hl
  92+ 9833 10 DA            djnz 2B
  93+ 9835 CD 52 9B     3 call Genera_coordenadas
  94+ 9838 C9           	ret
  95+ 9839
  96+ 9839              ; ******************************************************************************************************************************************************************************************
  97+ 9839              ;
  98+ 9839              ;   27/05/23
  99+ 9839              ;
 100+ 9839              ;	Mov_up
 101+ 9839              ;
 102+ 9839              ; 	Mueve el Sprite hacia arriba.
 103+ 9839              ;
 104+ 9839              ;
 105+ 9839              Mov_up
 106+ 9839
 107+ 9839 CD 6A 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 983C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 983C 21 65 87     	ld hl,Ctrl_0
 110+ 983F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9841              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9841              ; 																		; _ en el caso de que no lo haya.
 113+ 9841 3A 6E 87     	ld a,(Vel_up)
 114+ 9844 47           	ld b,a
 115+ 9845 2A 45 87     	ld hl,(Posicion_actual)
 116+ 9848 CD BA 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 984B A7           	and a
 118+ 984C 20 10        	jr nz,1F
 119+ 984E
 120+ 984E              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 984E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 984E
 123+ 984E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 984F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9851 20 0B            jr nz,1F
 126+ 9853 7D               ld a,l
 127+ 9854 D6 20            sub $20
 128+ 9856 30 06            jr nc,1F
 129+ 9858 25               dec h
 130+ 9859
 131+ 9859              ; -----------------------------
 132+ 9859 CD 0D 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 985C              ;	call Reinicio
 134+ 985C              ; -----------------------------
 135+ 985C
 136+ 985C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 985E CD B6 94     1 call PreviousScan
 138+ 9861 22 45 87     	ld (Posicion_actual),hl
 139+ 9864 10 E2            djnz 3B
 140+ 9866 CD 52 9B     2 call Genera_coordenadas
 141+ 9869 C9           	ret
 142+ 986A
 143+ 986A              ; -----------------------------
 144+ 986A              ;
 145+ 986A              ;	27/5/23
 146+ 986A              ;
 147+ 986A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 986A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 986A              ;
 150+ 986A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 986A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 986A              ;
 153+ 986A              ;	Modifica: A y (Puntero_objeto).
 154+ 986A
 155+ 986A 3A 6A 87     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 986D CB 47        	bit 0,a
 157+ 986F C8           	ret z
 158+ 9870 CB 87        	res 0,a
 159+ 9872 32 6A 87     	ld (Ctrl_2),a
 160+ 9875 2A 85 87     	ld hl,(Repone_puntero_objeto)
 161+ 9878 22 47 87     	ld (Puntero_objeto),hl
 162+ 987B C9           	ret
 163+ 987C
 164+ 987C              ; ******************************************************************************************************************************************************************************************
 165+ 987C              ;
 166+ 987C              ;	19/10/22
 167+ 987C              ;
 168+ 987C              ;	Mov_right.
 169+ 987C              ;
 170+ 987C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 987C              ;
 172+ 987C
 173+ 987C 3A 65 87     Mov_right ld a,(Ctrl_0)
 174+ 987F CB 77        	bit 6,a
 175+ 9881 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9883
 177+ 9883 CD BB 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9886 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9887
 180+ 9887 21 65 87     	ld hl,Ctrl_0
 181+ 988A CB E6        	set 4,(hl)
 182+ 988C 18 52        	jr 8F
 183+ 988E
 184+ 988E 21 65 87     10 ld hl,Ctrl_0
 185+ 9891 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9893              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9893              ; 																	; _ en el caso de que no lo haya.
 188+ 9893 3A 49 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9896 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9898 20 46        	jr nz,8F
 191+ 989A
 192+ 989A 3A 4B 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 989D A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 989E 28 40        	jr z,8F
 195+ 98A0
 196+ 98A0              ; ---------- ---------- ----------
 197+ 98A0              ;
 198+ 98A0              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98A0
 200+ 98A0 3A 6D 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 98A3 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98A5 28 11        	jr z,1F
 203+ 98A7 38 06        	jr c,6F
 204+ 98A9 FE 04        	cp 4
 205+ 98AB 28 14        	jr z,7F
 206+ 98AD 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 98AF
 208+ 98AF              ; ---------- ---------- ----------
 209+ 98AF              ;
 210+ 98AF              ; Perfiles de velocidad
 211+ 98AF              ;
 212+ 98AF
 213+ 98AF 3A 4B 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 98B2 FE FE        	cp $fe
 215+ 98B4 20 2A        	jr nz,8F
 216+ 98B6 18 10        	jr 3F
 217+ 98B8 3A 4B 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 98BB FE FD        	cp $fd
 219+ 98BD 20 21        	jr nz,8F
 220+ 98BF 18 07        	jr 3F
 221+ 98C1 3A 4B 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 98C4 FE FB        	cp $fb
 223+ 98C6 20 18        	jr nz,8F
 224+ 98C8
 225+ 98C8              ; ---------- ---------- ----------
 226+ 98C8
 227+ 98C8              3
 228+ 98C8 CD FB 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 98CB              ;	call Reinicio
 230+ 98CB
 231+ 98CB              ; ---------- ---------- ----------
 232+ 98CB              ;
 233+ 98CB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 98CB
 235+ 98CB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 98CD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 98CE CD E7 98     	call DESPLZ_DER
 238+ 98D1 C1           	pop bc
 239+ 98D2 10 F9        	djnz 5B
 240+ 98D4 2A 45 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 98D7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 98D8 22 45 87     	ld (Posicion_actual),hl
 243+ 98DB CD 52 9B     	call Genera_coordenadas
 244+ 98DE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 98E0
 246+ 98E0              ; ---------- ---------- ----------
 247+ 98E0
 248+ 98E0 2A 45 87     8 ld hl,(Posicion_actual)
 249+ 98E3 CD E7 98     	call DESPLZ_DER
 250+ 98E6 C9           2 ret
 251+ 98E7
 252+ 98E7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 98E7              ;
 254+ 98E7              ;	22/9/22
 255+ 98E7              ;
 256+ 98E7
 257+ 98E7 CD F6 98     DESPLZ_DER call Desplaza_derecha
 258+ 98EA CD 42 99         call modifica_parametros_1er_DESPLZ_2
 259+ 98ED CD 6B 99         call Ciclo_completo
 260+ 98F0 21 65 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 98F3 CB FE        	set 7,(hl)
 262+ 98F5 C9           	ret
 263+ 98F6
 264+ 98F6              ; ******************************************************************************************************************************************************************************************
 265+ 98F6              ;	15/02/23
 266+ 98F6              ;
 267+ 98F6
 268+ 98F6 3A 6D 87     Desplaza_derecha ld a,(Vel_right)
 269+ 98F9 47           	ld b,a
 270+ 98FA 2A 51 87     	ld hl,(Puntero_DESPLZ_der)
 271+ 98FD 23           1 inc hl
 272+ 98FE 23           	inc hl
 273+ 98FF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9901 22 51 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9904 CD 4D 8B     	call Extrae_address
 276+ 9907 22 47 87     	ld (Puntero_objeto),hl
 277+ 990A
 278+ 990A              ; Modifica (Puntero_DESPLZ_izq).
 279+ 990A
 280+ 990A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 990A              ; Cuántos movimientos hemos hecho ??
 282+ 990A              ; DE contiene (Puntero_DESPLZ_der).
 283+ 990A
 284+ 990A 2A 4D 87     7 ld hl,(Indice_Sprite_der)
 285+ 990D EB           	ex de,hl
 286+ 990E A7           	and a
 287+ 990F ED 52        	sbc hl,de
 288+ 9911 CB 3D        	srl l
 289+ 9913 3E 08        6 ld a,8
 290+ 9915 95           	sub l
 291+ 9916 30 1E        	jr nc,3F
 292+ 9918
 293+ 9918              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9918              ; B="0".
 295+ 9918
 296+ 9918 04           4 inc b
 297+ 9919 3C           	inc a
 298+ 991A 20 FC        	jr nz,4B
 299+ 991C 78           	ld a,b
 300+ 991D 08           	ex af,af
 301+ 991E 2A 4D 87     	ld hl,(Indice_Sprite_der)
 302+ 9921 23           5 inc hl
 303+ 9922 23           	inc hl
 304+ 9923 10 FC        	djnz 5B
 305+ 9925 22 51 87     	ld (Puntero_DESPLZ_der),hl
 306+ 9928 CD 4D 8B     	call Extrae_address
 307+ 992B 22 47 87     	ld (Puntero_objeto),hl
 308+ 992E
 309+ 992E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 992E              ; _(Posicion_actual).
 311+ 992E
 312+ 992E 21 45 87     	ld hl,Posicion_actual
 313+ 9931 34           	inc (hl)
 314+ 9932 08               ex af,af
 315+ 9933 6F           	ld l,a
 316+ 9934 18 DD        	jr 6B
 317+ 9936
 318+ 9936              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9936
 320+ 9936 47           3 ld b,a
 321+ 9937 2A 4F 87     	ld hl,(Indice_Sprite_izq)
 322+ 993A 23           2 inc hl
 323+ 993B 23           	inc hl
 324+ 993C 10 FC        	djnz 2B
 325+ 993E 22 53 87     	ld (Puntero_DESPLZ_izq),hl
 326+ 9941 C9           8 ret
 327+ 9942
 328+ 9942              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9942              ;
 330+ 9942              ;	24/7/22
 331+ 9942              ;
 332+ 9942              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9942              ;
 334+ 9942              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9942              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9942              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9942
 338+ 9942 3A 4B 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9945 A7           	and a
 340+ 9946 20 1F        	jr nz,1F
 341+ 9948 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 994A 32 4B 87         ld (CTRL_DESPLZ),a
 343+ 994D
 344+ 994D 21 44 87     	ld hl,Columns
 345+ 9950 34           	inc (hl)
 346+ 9951 3A 57 87     	ld a,(Cuad_objeto)
 347+ 9954 E6 01        	and 1
 348+ 9956 28 0F        	jr z,1F
 349+ 9958 2A 45 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 995B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 995C 22 45 87     	ld (Posicion_actual),hl
 352+ 995F CD 52 9B     	call Genera_coordenadas
 353+ 9962 CD C7 9A     	call Inc_CTRL_DESPLZ
 354+ 9965 18 03        	jr 2F
 355+ 9967 CD C7 9A     1 call Inc_CTRL_DESPLZ
 356+ 996A C9           2 ret
 357+ 996B
 358+ 996B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 996B              ;
 360+ 996B              ;	24/7/22
 361+ 996B              ;
 362+ 996B              ;	Ciclo_completo.
 363+ 996B              ;
 364+ 996B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 996B              ;
 366+ 996B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 996B              ; 	Decrementamos (Columns).
 368+ 996B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 996B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 996B
 371+ 996B
 372+ 996B 3A 4B 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 996E FE FF        	cp $ff
 374+ 9970 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9972 E6 F0        	and $f0
 376+ 9974 20 28        	jr nz,3F
 377+ 9976
 378+ 9976              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9976
 380+ 9976 3A 4B 87     	ld a,(CTRL_DESPLZ)
 381+ 9979 47           	ld b,a
 382+ 997A 3E F8        	ld a,$f8
 383+ 997C 80           	add b
 384+ 997D 32 4B 87     	ld (CTRL_DESPLZ),a
 385+ 9980 18 1C        	jr 3F
 386+ 9982 21 44 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9985 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9986 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9987 32 4B 87     	ld (CTRL_DESPLZ),a
 390+ 998A 3A 57 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 998D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 998F 20 0A        	jr nz,2F
 393+ 9991 2A 45 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9994 23           	inc hl
 395+ 9995 22 45 87     	ld (Posicion_actual),hl
 396+ 9998 CD 52 9B     	call Genera_coordenadas
 397+ 999B
 398+ 999B              ; Inicia el puntero de Sprite.
 399+ 999B
 400+ 999B CD 63 8B     2 call Inicia_puntero_objeto_der
 401+ 999E C9           3 ret
 402+ 999F
 403+ 999F              ; ******************************************************************************************************************************************************************************************
 404+ 999F              ;
 405+ 999F              ;	15/02/23
 406+ 999F              ;
 407+ 999F              ;	Mov_left.
 408+ 999F              ;
 409+ 999F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 999F              ;
 411+ 999F              Mov_left
 412+ 999F
 413+ 999F 21 65 87     	ld hl,Ctrl_0
 414+ 99A2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99A4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99A4              ; 																	; _ en el caso de que no lo haya.
 417+ 99A4 3A 65 87     	ld a,(Ctrl_0)
 418+ 99A7 CB 77        	bit 6,a
 419+ 99A9 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 99AB
 421+ 99AB CD C1 9A     	call Stop_Amadeus_left
 422+ 99AE C8           	ret z
 423+ 99AF 20 4A        	jr nz,8F
 424+ 99B1
 425+ 99B1 3A 49 87     11 ld a,(Coordenada_X)
 426+ 99B4 A7           	and a
 427+ 99B5 20 44        	jr nz,8F
 428+ 99B7
 429+ 99B7 3A 4B 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 99BA A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 99BB 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 99BD
 433+ 99BD              ; ---------- ---------- ----------
 434+ 99BD
 435+ 99BD 3A 6C 87     	ld a,(Vel_left)
 436+ 99C0 FE 02        	cp 2
 437+ 99C2 28 0F        	jr z,1F
 438+ 99C4 38 04        	jr c,6F
 439+ 99C6 FE 04        	cp 4
 440+ 99C8 28 12        	jr z,7F
 441+ 99CA
 442+ 99CA              ; ---------- ---------- ----------
 443+ 99CA
 444+ 99CA 3A 4B 87     6 ld a,(CTRL_DESPLZ)
 445+ 99CD FE F8        	cp $f8
 446+ 99CF 20 2A        	jr nz,8F
 447+ 99D1 18 10        	jr 4F
 448+ 99D3 3A 4B 87     1 ld a,(CTRL_DESPLZ)
 449+ 99D6 FE F9        	cp $f9
 450+ 99D8 20 21        	jr nz,8F
 451+ 99DA 18 07        	jr 4F
 452+ 99DC 3A 4B 87     7 ld a,(CTRL_DESPLZ)
 453+ 99DF FE FB        	cp $fb
 454+ 99E1 20 18        	jr nz,8F
 455+ 99E3
 456+ 99E3              ; ---------- ---------- ----------
 457+ 99E3
 458+ 99E3              4
 459+ 99E3 CD E9 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 99E6              ;	call Reinicio
 461+ 99E6
 462+ 99E6              ; ---------- ---------- ----------
 463+ 99E6
 464+ 99E6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 99E8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 99E9
 467+ 99E9              ;	ld hl,(Indice_Sprite_izq)
 468+ 99E9              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 99E9
 470+ 99E9 CD 02 9A     	call DESPLZ_IZQ
 471+ 99EC C1           	pop bc
 472+ 99ED 10 F9        	djnz 5B
 473+ 99EF 2A 45 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 99F2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 99F3 22 45 87     	ld (Posicion_actual),hl
 476+ 99F6 CD 52 9B     	call Genera_coordenadas
 477+ 99F9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 99FB
 479+ 99FB              ; ---------- ---------- ----------
 480+ 99FB
 481+ 99FB              ; Movemos, no hay recolocación.
 482+ 99FB
 483+ 99FB 2A 45 87     8 ld hl,(Posicion_actual)
 484+ 99FE CD 02 9A     	call DESPLZ_IZQ
 485+ 9A01 C9           2 ret
 486+ 9A02
 487+ 9A02              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A02              ;
 489+ 9A02              ;	22/9/22
 490+ 9A02
 491+ 9A02              DESPLZ_IZQ
 492+ 9A02
 493+ 9A02 CD 11 9A     	call Desplaza_izquierda
 494+ 9A05 CD 5D 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A08 CD 85 9A     	call Ciclo_completo_2
 496+ 9A0B 21 65 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A0E CB BE        	res 7,(hl)
 498+ 9A10 C9           	ret
 499+ 9A11
 500+ 9A11              Desplaza_izquierda
 501+ 9A11
 502+ 9A11 3A 6C 87     	ld a,(Vel_left)
 503+ 9A14 47           	ld b,a
 504+ 9A15 2A 53 87     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A18 23           1 inc hl
 506+ 9A19 23           	inc hl
 507+ 9A1A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A1C 22 53 87     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A1F CD 4D 8B     	call Extrae_address
 510+ 9A22 22 47 87     	ld (Puntero_objeto),hl
 511+ 9A25
 512+ 9A25              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A25
 514+ 9A25              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A25              ; Cuántos movimientos hemos hecho ??
 516+ 9A25              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A25
 518+ 9A25 2A 4F 87     7 ld hl,(Indice_Sprite_izq)
 519+ 9A28 EB           	ex de,hl
 520+ 9A29 A7           	and a
 521+ 9A2A ED 52        	sbc hl,de
 522+ 9A2C CB 3D        	srl l
 523+ 9A2E 3E 08        6 ld a,8
 524+ 9A30 95           	sub l
 525+ 9A31 30 1E        	jr nc,3F
 526+ 9A33
 527+ 9A33              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A33              ; B="0".
 529+ 9A33
 530+ 9A33 04           4 inc b
 531+ 9A34 3C           	inc a
 532+ 9A35 20 FC        	jr nz,4B
 533+ 9A37 78           	ld a,b
 534+ 9A38 08           	ex af,af
 535+ 9A39 2A 4F 87     	ld hl,(Indice_Sprite_izq)
 536+ 9A3C 23           5 inc hl
 537+ 9A3D 23           	inc hl
 538+ 9A3E 10 FC        	djnz 5B
 539+ 9A40 22 53 87     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A43 CD 4D 8B     	call Extrae_address
 541+ 9A46 22 47 87     	ld (Puntero_objeto),hl
 542+ 9A49
 543+ 9A49              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A49              ; _(Posicion_actual).
 545+ 9A49
 546+ 9A49 21 45 87     	ld hl,Posicion_actual
 547+ 9A4C 35           	dec (hl)
 548+ 9A4D 08           	ex af,af
 549+ 9A4E 6F           	ld l,a
 550+ 9A4F 18 DD        	jr 6B
 551+ 9A51
 552+ 9A51              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A51
 554+ 9A51 47           3 ld b,a
 555+ 9A52 2A 4D 87     	ld hl,(Indice_Sprite_der)
 556+ 9A55 23           2 inc hl
 557+ 9A56 23           	inc hl
 558+ 9A57 10 FC        	djnz 2B
 559+ 9A59 22 51 87     	ld (Puntero_DESPLZ_der),hl
 560+ 9A5C C9           8 ret
 561+ 9A5D
 562+ 9A5D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A5D              ;
 564+ 9A5D              ;	modifica_parametros_1er_DESPLZ
 565+ 9A5D              ;
 566+ 9A5D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A5D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A5D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A5D
 570+ 9A5D 3A 4B 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A60 A7           	and a
 572+ 9A61 20 1E        	jr nz,1F
 573+ 9A63 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9A64 32 4B 87         ld (CTRL_DESPLZ),a
 575+ 9A67 21 44 87     	ld hl,Columns
 576+ 9A6A 34           	inc (hl)
 577+ 9A6B 3A 57 87     	ld a,(Cuad_objeto)
 578+ 9A6E E6 01        	and 1
 579+ 9A70 20 0F        	jr nz,1F
 580+ 9A72 2A 45 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9A75 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9A76 22 45 87     	ld (Posicion_actual),hl
 583+ 9A79 CD 52 9B     	call Genera_coordenadas
 584+ 9A7C CD D8 9A     	call Dec_CTRL_DESPLZ
 585+ 9A7F 18 03        	jr 2F
 586+ 9A81 CD D8 9A     1 call Dec_CTRL_DESPLZ
 587+ 9A84 C9           2 ret
 588+ 9A85
 589+ 9A85              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9A85
 591+ 9A85 3A 4B 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9A88 FE F7        	cp $f7
 593+ 9A8A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9A8C 30 2C        	jr nc,3F
 595+ 9A8E
 596+ 9A8E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9A8E
 598+ 9A8E 06 00        	ld b,0
 599+ 9A90 04           4 inc b
 600+ 9A91 3C           	inc a
 601+ 9A92 FE F7        	cp $f7
 602+ 9A94 20 FA        	jr nz,4B
 603+ 9A96 3E FF        	ld a,$ff
 604+ 9A98 90           	sub b
 605+ 9A99 32 4B 87     	ld (CTRL_DESPLZ),a
 606+ 9A9C 18 1C        	jr 3F
 607+ 9A9E
 608+ 9A9E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9A9E
 610+ 9A9E 21 44 87     1 ld hl,Columns
 611+ 9AA1 35           	dec (hl)
 612+ 9AA2 AF           	xor a
 613+ 9AA3 32 4B 87     	ld (CTRL_DESPLZ),a
 614+ 9AA6 3A 57 87     	ld a,(Cuad_objeto)
 615+ 9AA9 E6 01        	and 1
 616+ 9AAB 28 0A        	jr z,2F
 617+ 9AAD 2A 45 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9AB0 2B           	dec hl
 619+ 9AB1 22 45 87     	ld (Posicion_actual),hl
 620+ 9AB4 CD 52 9B     	call Genera_coordenadas
 621+ 9AB7
 622+ 9AB7              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9AB7
 624+ 9AB7 CD 76 8B     2 call Inicia_puntero_objeto_izq
 625+ 9ABA C9           3 ret
 626+ 9ABB
 627+ 9ABB              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9ABB              ;
 629+ 9ABB              ;	19/10/22
 630+ 9ABB              ;
 631+ 9ABB              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9ABB              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9ABB
 634+ 9ABB 3A 49 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9ABE FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9AC0 C9           	ret
 637+ 9AC1
 638+ 9AC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9AC1              ;
 640+ 9AC1              ;	19/10/22
 641+ 9AC1              ;
 642+ 9AC1              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9AC1              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9AC1
 645+ 9AC1 3A 49 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9AC4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9AC6 C9           	ret
 648+ 9AC7
 649+ 9AC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9AC7              ;
 651+ 9AC7              ;	24/7/22
 652+ 9AC7              ;
 653+ 9AC7              ;	Inc_CTRL_DESPLZ
 654+ 9AC7              ;
 655+ 9AC7              ;
 656+ 9AC7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9AC7
 658+ 9AC7 21 4B 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9ACA 3A 6D 87     	ld a,(Vel_right)
 660+ 9ACD A7           	and a
 661+ 9ACE 28 06        	jr z,1F
 662+ 9AD0 47           	ld b,a
 663+ 9AD1 34           3 inc (hl)
 664+ 9AD2 10 FD        	djnz 3B
 665+ 9AD4 18 01        	jr 2F
 666+ 9AD6 34           1 inc (hl)
 667+ 9AD7 C9           2 ret
 668+ 9AD8
 669+ 9AD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9AD8              ;
 671+ 9AD8              ;	5/2/23
 672+ 9AD8              ;
 673+ 9AD8              ;	Dec_CTRL_DESPLZ
 674+ 9AD8              ;
 675+ 9AD8              ;
 676+ 9AD8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9AD8
 678+ 9AD8 21 4B 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9ADB 3A 6C 87     	ld a,(Vel_left)
 680+ 9ADE A7           	and a
 681+ 9ADF 28 06        	jr z,1F
 682+ 9AE1 47           	ld b,a
 683+ 9AE2 35           3 dec (hl)
 684+ 9AE3 10 FD        	djnz 3B
 685+ 9AE5 18 01        	jr 2F
 686+ 9AE7 35           1 dec (hl)
 687+ 9AE8 C9           2 ret
 688+ 9AE9
 689+ 9AE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9AE9
 691+ 9AE9 2A 45 87     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9AEC 01 1F 00     	ld bc,31
 693+ 9AEF A7           	and a
 694+ 9AF0 ED 4A        	adc hl,bc
 695+ 9AF2 22 45 87     	ld (Posicion_actual),hl
 696+ 9AF5 21 65 87     	ld hl,Ctrl_0														; $xxx1
 697+ 9AF8 CB C6        	set 0,(hl)
 698+ 9AFA C9           	ret
 699+ 9AFB
 700+ 9AFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9AFB
 702+ 9AFB 2A 45 87     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9AFE 01 1F 00     	ld bc,31
 704+ 9B01 A7           	and a
 705+ 9B02 ED 42        	sbc hl,bc
 706+ 9B04 22 45 87     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B07 21 65 87     	ld hl,Ctrl_0
 708+ 9B0A CB CE        	set 1,(hl)
 709+ 9B0C C9           	ret
 710+ 9B0D
 711+ 9B0D              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B0D
 713+ 9B0D 24           Reaparece_abajo inc h
 714+ 9B0E 01 E0 17     	ld bc,$17e0
 715+ 9B11 A7           	and a
 716+ 9B12 ED 4A        	adc hl,bc
 717+ 9B14 22 45 87     	ld (Posicion_actual),hl
 718+ 9B17 21 65 87     	ld hl,Ctrl_0
 719+ 9B1A CB D6        	set 2,(hl)
 720+ 9B1C C9           	ret
 721+ 9B1D
 722+ 9B1D              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B1D
 724+ 9B1D 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B20 A7           	and a
 726+ 9B21 ED 42        	sbc hl,bc
 727+ 9B23 22 45 87     	ld (Posicion_actual),hl
 728+ 9B26 21 65 87     	ld hl,Ctrl_0
 729+ 9B29 CB DE        	set 3,(hl)
 730+ 9B2B C9           	ret
 731+ 9B2C
 732+ 9B2C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B2C              ;
 734+ 9B2C              ;	15/07/23
 735+ 9B2C
 736+ 9B2C              Reinicio
 737+ 9B2C
 738+ 9B2C              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B2C
 740+ 9B2C AF           	xor a
 741+ 9B2D 21 7C 87     	ld hl,Puntero_indice_mov_bucle
 742+ 9B30 CD 4E 9B     	call Limpia_contenido_hl
 743+ 9B33
 744+ 9B33 21 45 87     	ld hl,Posicion_actual
 745+ 9B36 CD 4E 9B     	call Limpia_contenido_hl
 746+ 9B39
 747+ 9B39 CD 6E 86     	call Inicializa_Puntero_indice_mov
 748+ 9B3C CD 0E 9E     	call Inicia_Puntero_mov
 749+ 9B3F
 750+ 9B3F 21 7E 87     	ld hl,Incrementa_puntero
 751+ 9B42 06 05        	ld b,5
 752+ 9B44 77           1 ld (hl),a
 753+ 9B45 23           	inc hl
 754+ 9B46 10 FC        	djnz 1B
 755+ 9B48
 756+ 9B48 21 6A 87     	ld hl,Ctrl_2
 757+ 9B4B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B4D
 759+ 9B4D C9           	ret
 760+ 9B4E
 761+ 9B4E 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B4F 23           	inc hl
 763+ 9B50 77           	ld (hl),a
 764+ 9B51 C9           	ret
 765+ 9B52
 766+ 9B52
# file closed: Direcciones.asm
1868  9B52              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B52              ; ------------------------------------------------------------------------
   2+ 9B52              ;
   3+ 9B52              ;	02/04/23
   4+ 9B52              ;
   5+ 9B52              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B52              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B52              ;
   8+ 9B52              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B52              ;
  10+ 9B52              ;	Modifica: A,BC y DE.
  11+ 9B52
  12+ 9B52 C5           Genera_coordenadas push bc
  13+ 9B53 E5           	push hl
  14+ 9B54 D5           	push de
  15+ 9B55
  16+ 9B55 2A 45 87     	ld hl,(Posicion_actual)
  17+ 9B58
  18+ 9B58 7D           	ld a,l
  19+ 9B59 E6 1F        	and $1f
  20+ 9B5B 32 49 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9B5E
  22+ 9B5E CD BA 97     	call calcula_tercio
  23+ 9B61 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9B62
  25+ 9B62 1E 00        	ld e,0
  26+ 9B64 7D           	ld a,l
  27+ 9B65 E6 E0        	and $e0
  28+ 9B67 28 01        	jr z,1F
  29+ 9B69 04           	inc b
  30+ 9B6A
  31+ 9B6A 04           1 inc b
  32+ 9B6B 05           	dec b
  33+ 9B6C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9B6E              ;														; _ , salimos.
  35+ 9B6E 1C           3 inc e
  36+ 9B6F D6 20        	sub 32
  37+ 9B71 20 FB        	jr nz,3B
  38+ 9B73 10 F5        	djnz 1B
  39+ 9B75
  40+ 9B75 7B           2 ld a,e
  41+ 9B76 32 4A 87     	ld (Coordenada_y),a
  42+ 9B79
  43+ 9B79 D1           	pop de
  44+ 9B7A E1           	pop hl
  45+ 9B7B C1           	pop bc
  46+ 9B7C
  47+ 9B7C C9           	ret
  48+ 9B7D
  49+ 9B7D              ; ------------------------------------------------------------------------
  50+ 9B7D              ;	28/05/23
  51+ 9B7D              ;
  52+ 9B7D              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9B7D              ;	Fila superior "0", Columna izquierda "0".
  54+ 9B7D              ;
  55+ 9B7D              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9B7D              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9B7D              ;
  58+ 9B7D              ;		DE="$120d"
  59+ 9B7D              ;
  60+ 9B7D              ;		D, (Coordenada_X), Columnas, $12
  61+ 9B7D              ;		E, (Coordenada_y), Filas, $0d
  62+ 9B7D              ;
  63+ 9B7D              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9B7D
  65+ 9B7D              ;	Modifica: A,BC y DE.
  66+ 9B7D
  67+ 9B7D
  68+ 9B7D              Genera_coordenadas_disparo
  69+ 9B7D
  70+ 9B7D              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9B7D
  72+ 9B7D 7D           	ld a,l
  73+ 9B7E E6 1F        	and $1f
  74+ 9B80 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9B81 CD BA 97     	call calcula_tercio
  76+ 9B84 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9B85 1E 00        	ld e,0
  78+ 9B87 7D           	ld a,l
  79+ 9B88 E6 E0        	and $e0
  80+ 9B8A 28 01        	jr z,1F
  81+ 9B8C 04           	inc b
  82+ 9B8D 1C           1 inc e
  83+ 9B8E D6 20        	sub 32
  84+ 9B90 20 FB        	jr nz,1B
  85+ 9B92 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9B94 C9           	ret
  87+ 9B95
# file closed: Genera_coordenadas.asm
1869  9B95              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9B95              ; Relojes y temporizaciones.
   2+ 9B95
   3+ 9B95              ; ------------------------------------------------------
   4+ 9B95              ;
   5+ 9B95              ;	16/7/23
   6+ 9B95              ;
   7+ 9B95              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9B95              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9B95              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9B95              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9B95              ;
  12+ 9B95              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9B95              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9B95
  15+ 9B95              ; Disparo_entidad db 1
  16+ 9B95              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9B95              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9B95
  19+ 9B95              Habilita_disparos
  20+ 9B95
  21+ 9B95 7E           	ld a,(hl)
  22+ 9B96 A7           	and a
  23+ 9B97 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9B98
  25+ 9B98 EB           	ex de,hl
  26+ 9B99
  27+ 9B99 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9B9A C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9B9B
  30+ 9B9B              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9B9B
  32+ 9B9B 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9B9C 7E           	ld a,(hl)
  34+ 9B9D 23           	inc hl
  35+ 9B9E 77           	ld (hl),a
  36+ 9B9F
  37+ 9B9F EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BA0 3E 01        	ld a,1
  39+ 9BA2 77           	ld (hl),a
  40+ 9BA3 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1870  9BA4              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BA4
   2+ 9BA4
   3+ 9BA4              ;   07/07/23
   4+ 9BA4              ;
   5+ 9BA4              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BA4              ;
   7+ 9BA4              ;   Codificación:
   8+ 9BA4              ;
   9+ 9BA4              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BA4              ;
  11+ 9BA4              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BA4              ;
  13+ 9BA4              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BA4              ;
  15+ 9BA4              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BA4              ;
  17+ 9BA4              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BA4              ;                               ..... %01000010 Vel_up 4
  19+ 9BA4              ;                                               Vel_down 2
  20+ 9BA4              ;                               ..... $42
  21+ 9BA4              ;
  22+ 9BA4              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BA4              ;
  24+ 9BA4              ;                               ..... %01000010 Vel_left 4
  25+ 9BA4              ;                                               Vel_right 2
  26+ 9BA4              ;                               ..... $42
  27+ 9BA4              ;
  28+ 9BA4              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BA4              ;
  30+ 9BA4              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BA4              ;
  32+ 9BA4              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BA4              ;
  34+ 9BA4              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BA4              ;                                     $53
  36+ 9BA4              ;
  37+ 9BA4              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BA4              ;
  39+ 9BA4              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BA4              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BA4              ;
  42+ 9BA4              ;                       Arriba ..... $81
  43+ 9BA4              ;                       Arriba - izquierda ..... $a1
  44+ 9BA4              ;                       Arriba - derecha ..... $91
  45+ 9BA4              ;
  46+ 9BA4              ;                       Abajo ..... $41
  47+ 9BA4              ;                       Abajo - izquierda ..... $61
  48+ 9BA4              ;                       Abajo - derecha ..... $51
  49+ 9BA4              ;
  50+ 9BA4              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BA4              ;
  52+ 9BA4              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BA4              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BA4              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BA4              ;
  56+ 9BA4              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BA4              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BA4              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BA4              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BA4              ;
  61+ 9BA4              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BA4              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BA4              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BA4              ;
  65+ 9BA4              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BA4              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BA4              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BA4              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BA4
  70+ 9BA4              ; ----- ----- ----- ----- -----
  71+ 9BA4
  72+ 9BA4 D0 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BA6 D8 9B            defw F_1
  74+ 9BA8 E2 9B            defw F_2
  75+ 9BAA EC 9B            defw Codo_abajo_derecha
  76+ 9BAC 20 9C            defw Derecha_y_subiendo
  77+ 9BAE 2A 9C            defw Derecha_y_subiendo_1
  78+ 9BB0 34 9C            defw F_3
  79+ 9BB2 3E 9C            defw F_4
  80+ 9BB4 48 9C            defw Derecha_y_bajando
  81+ 9BB6 52 9C            defw Derecha_y_bajando_1
  82+ 9BB8 5C 9C            defw Derecha_y_bajando_2
  83+ 9BBA 66 9C            defw Codo_derecha_abajo
  84+ 9BBC 96 9C            defw Codo_abajo_izq.
  85+ 9BBE CA 9C            defw Izquierda_y_subiendo
  86+ 9BC0 D4 9C            defw Izquierda_y_subiendo_1
  87+ 9BC2 DE 9C            defw F_5
  88+ 9BC4 E8 9C            defw F_6
  89+ 9BC6 F2 9C            defw Izquierda_y_bajando
  90+ 9BC8 FC 9C            defw Izquierda_y_bajando_1
  91+ 9BCA 06 9D            defw Izquierda_y_bajando_2
  92+ 9BCC 10 9D            defw Codo_izquierda_abajo
  93+ 9BCE 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9BD0
  95+ 9BD0 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9BD4 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9BD8
  98+ 9BD8 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9BDC 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9BE0 08 00
 100+ 9BE2 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9BE6 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9BEA 0F FE
 102+ 9BEC
 103+ 9BEC 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9BF0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9BF4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9BF8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9BFC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C00 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C04 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C08 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C0C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C10 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C14 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C18 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C1C 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C20
 117+ 9C20 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C24 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C28 06 00
 119+ 9C2A
 120+ 9C2A 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C2E 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C32 02 00
 122+ 9C34
 123+ 9C34 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C38 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C3C 04 00
 125+ 9C3E 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C42 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C46 08 00
 127+ 9C48
 128+ 9C48 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C4C 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C50 02 00
 130+ 9C52
 131+ 9C52 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9C56 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9C5A 06 00
 133+ 9C5C
 134+ 9C5C 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9C60 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9C64 06 00
 136+ 9C66
 137+ 9C66              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9C66
 139+ 9C66 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9C6A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9C6E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9C72 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9C76 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9C7A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9C7E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9C82 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9C86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9C8A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9C8E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9C92 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9C96
 152+ 9C96 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9C9A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9C9E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9CA2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9CA6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9CAA 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9CAE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CB2 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9CB6 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9CBA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9CBE 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9CC2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9CC6 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9CCA
 166+ 9CCA 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9CCE 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9CD2 06 00
 168+ 9CD4
 169+ 9CD4 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9CD8 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9CDC 02 00
 171+ 9CDE
 172+ 9CDE 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9CE2 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9CE6 04 00
 174+ 9CE8 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9CEC 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9CF0 08 00
 176+ 9CF2
 177+ 9CF2 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9CF6 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9CFA 02 00
 179+ 9CFC
 180+ 9CFC 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D00 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D04 06 00
 182+ 9D06
 183+ 9D06 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D0A 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D0E 06 00
 185+ 9D10
 186+ 9D10 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D14 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D18 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D1C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D20 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D24 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D28 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D2C 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D30 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D34 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D38 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D3C 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D40
 199+ 9D40              ; ----- ----- ----- ----- -----
 200+ 9D40              ;
 201+ 9D40              ;   28/12/23
 202+ 9D40
 203+ 9D40              Movimiento
 204+ 9D40
 205+ 9D40              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D40
 207+ 9D40 3A 6A 87         ld a,(Ctrl_2)
 208+ 9D43 CB 57            bit 2,a
 209+ 9D45 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D47
 211+ 9D47 2A 7A 87         ld hl,(Puntero_mov)
 212+ 9D4A 7E               ld a,(hl)
 213+ 9D4B
 214+ 9D4B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D4B
 216+ 9D4B              Inicia_desplazamiento.
 217+ 9D4B
 218+ 9D4B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D4B
 220+ 9D4B CD 4B 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D4E
 222+ 9D4E              ; Iniciamos (Repetimos_mov).
 223+ 9D4E
 224+ 9D4E 7E               ld a,(hl)
 225+ 9D4F E6 0F            and $0f
 226+ 9D51 32 80 87         ld (Repetimos_desplazamiento),a
 227+ 9D54 32 81 87         ld (Repetimos_desplazamiento_backup),a
 228+ 9D57
 229+ 9D57              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9D57
 231+ 9D57 23               inc hl
 232+ 9D58 7E               ld a,(hl)
 233+ 9D59 32 83 87         ld (Cola_de_desplazamiento),a
 234+ 9D5C 2B               dec hl
 235+ 9D5D
 236+ 9D5D 21 6A 87         ld hl,Ctrl_2
 237+ 9D60 CB D6            set 2,(hl)
 238+ 9D62
 239+ 9D62              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9D62              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9D62
 242+ 9D62              Desplazamiento_iniciado
 243+ 9D62
 244+ 9D62 CD 19 9E         call Aplica_desplazamiento
 245+ 9D65
 246+ 9D65              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9D65
 248+ 9D65 3A A3 87         ld a,(Ctrl_3)
 249+ 9D68 CB 57            bit 2,a
 250+ 9D6A C0               ret nz
 251+ 9D6B
 252+ 9D6B 3A 6A 87         ld a,(Ctrl_2)
 253+ 9D6E CB 67            bit 4,a
 254+ 9D70 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9D71
 256+ 9D71 21 80 87     3 ld hl,Repetimos_desplazamiento
 257+ 9D74 35               dec (hl)
 258+ 9D75 C0               ret nz
 259+ 9D76
 260+ 9D76              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9D76              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9D76              ; Analiza (Cola_de_desplazamiento).
 263+ 9D76
 264+ 9D76 3A 83 87     Cola ld a,(Cola_de_desplazamiento)
 265+ 9D79 A7               and a
 266+ 9D7A CC 74 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9D7D 28 30            jr z,Reinicia_el_movimiento
 268+ 9D7F
 269+ 9D7F FE FF            cp $ff
 270+ 9D81 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9D83
 272+ 9D83 FE FE            cp $fe
 273+ 9D85 CC F2 9D         call z,Fijamos_bucle
 274+ 9D88 28 25            jr z,Reinicia_el_movimiento
 275+ 9D8A
 276+ 9D8A FE FD            cp $fd
 277+ 9D8C 20 11            jr nz,1F
 278+ 9D8E
 279+ 9D8E              ; ---
 280+ 9D8E              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9D8E
 282+ 9D8E 3A 6A 87         ld a,(Ctrl_2)
 283+ 9D91 CB 5F            bit 3,a
 284+ 9D93 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9D95
 286+ 9D95              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9D95
 288+ 9D95 21 6A 87         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9D98 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9D9A
 291+ 9D9A CD 03 9E         call Inicia_Repetimos_movimiento
 292+ 9D9D 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9D9F              ; ---
 294+ 9D9F
 295+ 9D9F FE 01        1 cp 1
 296+ 9DA1 CA DC 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9DA4
 298+ 9DA4 3D               dec a
 299+ 9DA5 32 83 87         ld (Cola_de_desplazamiento),a
 300+ 9DA8
 301+ 9DA8 3A 81 87         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9DAB 32 80 87         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9DAE              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9DAE C9               ret
 305+ 9DAF
 306+ 9DAF              Reinicia_el_movimiento
 307+ 9DAF
 308+ 9DAF 3A 6A 87         ld a,(Ctrl_2)
 309+ 9DB2 CB 5F            bit 3,a
 310+ 9DB4 28 1B            jr z,2F
 311+ 9DB6
 312+ 9DB6              ; (Cola_de_desplazamiento)="254".
 313+ 9DB6
 314+ 9DB6 21 82 87         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9DB9 35               dec (hl)
 316+ 9DBA 20 15            jr nz,2F
 317+ 9DBC
 318+ 9DBC              ; Fin de las repeticiones del último movimiento.
 319+ 9DBC
 320+ 9DBC 21 6A 87         ld hl,Ctrl_2
 321+ 9DBF CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9DC1
 323+ 9DC1 2A 7A 87         ld hl,(Puntero_mov)
 324+ 9DC4 23               inc hl
 325+ 9DC5 23               inc hl
 326+ 9DC6 23               inc hl
 327+ 9DC7 22 7A 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9DCA              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9DCA 7E               ld a,(hl)
 330+ 9DCB 32 83 87         ld (Cola_de_desplazamiento),a
 331+ 9DCE
 332+ 9DCE C3 76 9D         jp Cola
 333+ 9DD1
 334+ 9DD1 CD 0E 9E     2 call Inicia_Puntero_mov
 335+ 9DD4
 336+ 9DD4 21 6A 87         ld hl,Ctrl_2
 337+ 9DD7 CB 96            res 2,(hl)
 338+ 9DD9
 339+ 9DD9 C3 40 9D         jp Movimiento
 340+ 9DDC
 341+ 9DDC              Siguiente_desplazamiento
 342+ 9DDC
 343+ 9DDC              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9DDC              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9DDC
 346+ 9DDC 21 6A 87         ld hl,Ctrl_2
 347+ 9DDF CB 96            res 2,(hl)
 348+ 9DE1
 349+ 9DE1 2A 7A 87         ld hl,(Puntero_mov)
 350+ 9DE4 23               inc hl
 351+ 9DE5 23               inc hl
 352+ 9DE6 22 7A 87         ld (Puntero_mov),hl
 353+ 9DE9
 354+ 9DE9 7E               ld a,(hl)
 355+ 9DEA A7               and a
 356+ 9DEB CC 74 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9DEE CA AF 9D         jp z,Reinicia_el_movimiento
 358+ 9DF1
 359+ 9DF1 C9               ret
 360+ 9DF2
 361+ 9DF2              ; Subrutinas -----------------------------------------
 362+ 9DF2              ; ---------- --------- --------- ---------- ----------
 363+ 9DF2              ;
 364+ 9DF2              ;   24/07/23
 365+ 9DF2              ;
 366+ 9DF2              ;   Fijamos_bucle
 367+ 9DF2              ;
 368+ 9DF2              ;
 369+ 9DF2
 370+ 9DF2              Fijamos_bucle
 371+ 9DF2
 372+ 9DF2 3A 7E 87         ld a,(Incrementa_puntero)
 373+ 9DF5 3C               inc a
 374+ 9DF6 32 7F 87         ld (Incrementa_puntero_backup),a
 375+ 9DF9
 376+ 9DF9 CD 74 9E         call Incrementa_Puntero_indice_mov
 377+ 9DFC 2A 78 87         ld hl,(Puntero_indice_mov)
 378+ 9DFF 22 7C 87         ld (Puntero_indice_mov_bucle),hl
 379+ 9E02 C9               ret
 380+ 9E03
 381+ 9E03              ; ---------- --------- --------- ---------- ----------
 382+ 9E03              ;
 383+ 9E03              ;   07/7/23
 384+ 9E03              ;
 385+ 9E03              ;   Inicia_Repetimos_movimiento
 386+ 9E03              ;
 387+ 9E03              ;
 388+ 9E03
 389+ 9E03              Inicia_Repetimos_movimiento
 390+ 9E03
 391+ 9E03              ; Iniciamos (Repetimos_movimiento).
 392+ 9E03
 393+ 9E03 DD 2A 7A 87      ld ix,(Puntero_mov)
 394+ 9E07 DD 7E 02         ld a,(ix+2)
 395+ 9E0A 32 82 87         ld (Repetimos_movimiento),a
 396+ 9E0D
 397+ 9E0D C9               ret
 398+ 9E0E
 399+ 9E0E              ; ---------- --------- --------- ---------- ----------
 400+ 9E0E              ;
 401+ 9E0E              ;   26/6/23
 402+ 9E0E              ;
 403+ 9E0E              ;   Inicia_Puntero_mov
 404+ 9E0E              ;
 405+ 9E0E              ;
 406+ 9E0E
 407+ 9E0E 2A 78 87     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E11 5E               ld e,(hl)
 409+ 9E12 23               inc hl
 410+ 9E13 56               ld d,(hl)
 411+ 9E14 EB               ex de,hl
 412+ 9E15 22 7A 87         ld (Puntero_mov),hl
 413+ 9E18 C9               ret
 414+ 9E19
 415+ 9E19              ; ---------- --------- --------- ---------- ----------
 416+ 9E19              ;
 417+ 9E19              ;   27/06/23
 418+ 9E19              ;
 419+ 9E19              ;   Aplica_movimiento.
 420+ 9E19
 421+ 9E19              Aplica_desplazamiento
 422+ 9E19
 423+ 9E19              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E19
 425+ 9E19 2A 7A 87         ld hl, (Puntero_mov)
 426+ 9E1C
 427+ 9E1C 7E               ld a,(hl)
 428+ 9E1D E6 F0            and $f0
 429+ 9E1F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E20
 431+ 9E20 CB 7E            bit 7,(hl)
 432+ 9E22 28 03            jr z,1F
 433+ 9E24 CD 39 98         call Mov_up
 434+ 9E27 2A 7A 87     1 ld hl, (Puntero_mov)
 435+ 9E2A CB 76            bit 6,(hl)
 436+ 9E2C 28 09            jr z,2F
 437+ 9E2E CD 00 98         call Mov_down
 438+ 9E31
 439+ 9E31              ; Se ha aplicado reinicio ???
 440+ 9E31              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E31
 442+ 9E31 3A A3 87         ld a,(Ctrl_3)
 443+ 9E34 CB 57            bit 2,a
 444+ 9E36 C0               ret nz
 445+ 9E37
 446+ 9E37 2A 7A 87     2 ld hl, (Puntero_mov)
 447+ 9E3A CB 6E            bit 5,(hl)
 448+ 9E3C 28 03            jr z,3F
 449+ 9E3E CD 9F 99         call Mov_left
 450+ 9E41 2A 7A 87     3 ld hl, (Puntero_mov)
 451+ 9E44 CB 66            bit 4,(hl)
 452+ 9E46 C8               ret z
 453+ 9E47 CD 7C 98         call Mov_right
 454+ 9E4A C9               ret
 455+ 9E4B
 456+ 9E4B              ; ---------- --------- --------- ---------- ----------
 457+ 9E4B              ;
 458+ 9E4B              ;   26/06/23
 459+ 9E4B              ;
 460+ 9E4B              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E4B
 462+ 9E4B              Ajusta_velocidad_desplazamiento
 463+ 9E4B
 464+ 9E4B              ; 1er byte de la cadena de movimiento.
 465+ 9E4B              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E4B
 467+ 9E4B CD 69 9E         call Extrae_nibble_alto
 468+ 9E4E
 469+ 9E4E 32 6E 87         ld (Vel_up),a
 470+ 9E51 79               ld a,c
 471+ 9E52 E6 0F            and $0f
 472+ 9E54 32 6F 87         ld (Vel_down),a
 473+ 9E57
 474+ 9E57              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9E57              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9E57
 477+ 9E57 23               inc hl
 478+ 9E58 CD 69 9E         call Extrae_nibble_alto
 479+ 9E5B
 480+ 9E5B 32 6C 87         ld (Vel_left),a
 481+ 9E5E 79               ld a,c
 482+ 9E5F E6 0F            and $0f
 483+ 9E61 32 6D 87         ld (Vel_right),a
 484+ 9E64
 485+ 9E64              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9E64
 487+ 9E64 23               inc hl
 488+ 9E65 22 7A 87         ld (Puntero_mov),hl
 489+ 9E68 C9               ret
 490+ 9E69
 491+ 9E69 06 04        Extrae_nibble_alto ld b,4
 492+ 9E6B 7E               ld a,(hl)
 493+ 9E6C 4F               ld c,a
 494+ 9E6D E6 F0            and $f0
 495+ 9E6F CB 3F        1 srl a
 496+ 9E71 10 FC            djnz 1B
 497+ 9E73 C9               ret
 498+ 9E74
 499+ 9E74              ; ---------- --------- --------- ---------- ----------
 500+ 9E74              ;
 501+ 9E74              ;   5/7/23
 502+ 9E74              ;
 503+ 9E74              ;   Incrementa_Puntero_indice_mov
 504+ 9E74
 505+ 9E74              Incrementa_Puntero_indice_mov
 506+ 9E74
 507+ 9E74 21 7E 87         ld hl,Incrementa_puntero
 508+ 9E77 34               inc (hl)
 509+ 9E78
 510+ 9E78 2A 78 87         ld hl,(Puntero_indice_mov)
 511+ 9E7B 01 02 00         ld bc,2
 512+ 9E7E A7               and a
 513+ 9E7F 09               add hl,bc
 514+ 9E80 22 78 87         ld (Puntero_indice_mov),hl
 515+ 9E83
 516+ 9E83 7E               ld a,(hl)
 517+ 9E84 A7               and a
 518+ 9E85
 519+ 9E85              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9E85
 521+ 9E85              ;    jr z,$
 522+ 9E85
 523+ 9E85              ;! Reinicia el Patrón de movimiento.
 524+ 9E85
 525+ 9E85 CC 8A 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9E88
 527+ 9E88 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9E89
 529+ 9E89 C9               ret
 530+ 9E8A
 531+ 9E8A              ; ---------- --------- --------- ---------- ----------
 532+ 9E8A              ;
 533+ 9E8A              ;   15/01/24
 534+ 9E8A              ;
 535+ 9E8A              ;   Inicializa_Puntero_indice_mov
 536+ 9E8A
 537+ 9E8A              Inicializa_Puntero_indice_mov_2
 538+ 9E8A
 539+ 9E8A              ; Existe etiqueta de bucle principal???
 540+ 9E8A
 541+ 9E8A 2A 7C 87         ld hl,(Puntero_indice_mov_bucle)
 542+ 9E8D 24               inc h
 543+ 9E8E 25               dec h
 544+ 9E8F 28 05            jr z,2F
 545+ 9E91
 546+ 9E91 22 78 87         ld (Puntero_indice_mov),hl
 547+ 9E94 18 14            jr 3F
 548+ 9E96
 549+ 9E96              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9E96
 551+ 9E96 3A 7E 87     2 ld a,(Incrementa_puntero)
 552+ 9E99 47               ld b,a
 553+ 9E9A
 554+ 9E9A 2A 78 87         ld hl,(Puntero_indice_mov)
 555+ 9E9D 2B           1 dec hl
 556+ 9E9E 2B               dec hl
 557+ 9E9F 10 FC            djnz 1B
 558+ 9EA1 22 78 87         ld (Puntero_indice_mov),hl
 559+ 9EA4
 560+ 9EA4 AF               xor a
 561+ 9EA5 32 7E 87         ld (Incrementa_puntero),a
 562+ 9EA8 18 06            jr 4F
 563+ 9EAA
 564+ 9EAA 3A 7F 87     3 ld a,(Incrementa_puntero_backup)
 565+ 9EAD 32 7E 87         ld (Incrementa_puntero),a
 566+ 9EB0 C9           4 ret
 567+ 9EB1
 568+ 9EB1 3A 42 87     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 569+ 9EB4 CD D0 86         call Calcula_salto_en_BC
 570+ 9EB7 21 70 87         ld hl,Contador_general_de_mov_masticados_Entidad_1
 571+ 9EBA A7               and a
 572+ 9EBB ED 4A            adc hl,bc
 573+ 9EBD C9               ret
 574+ 9EBE
 575+ 9EBE
# file closed: Patrones_de_mov.asm
1871  9EBE              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9EBE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9EBE              ;
   3+ 9EBE              ;	12/12/23
   4+ 9EBE              ;
   5+ 9EBE              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9EBE
   7+ 9EBE              ;	ADC HL,SP	LD (addr),SP
   8+ 9EBE              ;	ADD HL,SP	LD SP,(addr)
   9+ 9EBE              ;	ADD IX,SP	LD SP,nn
  10+ 9EBE              ; 	ADD IY,SP	LD SP,HL
  11+ 9EBE              ;				LD SP,IX
  12+ 9EBE              ;	DEC SP		LD SP,IY
  13+ 9EBE
  14+ 9EBE              ;	EX (SP),HL
  15+ 9EBE              ;	EX (SP),IX
  16+ 9EBE              ;	EX (SP),IY
  17+ 9EBE
  18+ 9EBE              ;	INC SP
  19+ 9EBE
  20+ 9EBE                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 95 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 5F 87         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 61 87         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 84 87         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 9D 87         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 65 87     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A A1 87         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 9B 87     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 84 87         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 9D 87         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 65 87     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 A1 87         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 95 87      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 9B 87     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 95 87  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 9B 87         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 9B 87         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1872  718B
1873  718B              	SAVESNA "Pruebas.sna", START
1874  718B
1875  718B
1876  718B
1877  718B
# file closed: Banco_de_pruebas.asm
