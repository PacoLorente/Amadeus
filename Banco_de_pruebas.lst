# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 18 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD F5 8D     	call Pinta_entidades
  44  AA1C CD E7 8D     	call Pinta_Amadeus
  45  AA1F CD D1 8D     	call Gestiona_entidades
  46  AA22 3E 00        	ld a,0
  47  AA24 D3 FE        	out ($fe),a
  48  AA26
  49  AA26 3E 02        	ld a,2
  50  AA28 D3 FE        	out ($fe),a
  51  AA2A CD 0E 8E     	call Guarda_parametros_DRAW
  52  AA2D CD 41 8D     	call Restore_Amadeus
  53  AA30 CD DF 8A     	call Gestiona_Amadeus
  54  AA33 11 9E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  55  AA36 CD 53 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  56  AA39
  57  AA39              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  58  AA39
  59  AA39 CD 1A 8E     	call Recupera_parametros_DRAW
  60  AA3C CD 02 8E     	call Actualiza_relojes
  61  AA3F 3E 00        	ld a,0
  62  AA41 D3 FE        	out ($fe),a
  63  AA43
  64  AA43 FD E1        	pop iy
  65  AA45 DD E1        	pop ix
  66  AA47 F1           	pop af
  67  AA48 C1           	pop bc
  68  AA49 D1           	pop de
  69  AA4A E1           	pop hl
  70  AA4B D9           	exx
  71  AA4C C1           	pop bc
  72  AA4D D1           	pop de
  73  AA4E E1           	pop hl
  74  AA4F 08           	ex af,af'
  75  AA50 F1           	pop af
  76  AA51 08           	ex af,af'
  77  AA52 D9           	exx
  78  AA53
  79  AA53 ED 7B 18 89  	ld sp,(Stack_3)
  80  AA57
  81  AA57 FB           	ei
  82  AA58 C9           	ret
  83  AA59
  84  AA59              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  85  AA59
  86  AA59              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA59              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA59              ;
   3+ AA59              ;	17/02/23
   4+ AA59              ;
   5+ AA59              ;	Sprites e índices.
   6+ AA59
   7+ AA59              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 56 70        	defw Album_de_fotos_1
 259+ 84F0 AC 70        	defw Album_de_fotos_2
 260+ 84F2 02 71        	defw Album_de_fotos_3
 261+ 84F4 58 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 AE 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 04 72        	defw Album_de_fotos_disparos_2
 264+ 84FA 5A 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  87  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C              ;
  95+ 858C              ;	Índice de cajas de entidades.
  96+ 858C
  97+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 858C
  99+ 858C DD 85        	defw Caja_1
 100+ 858E 1C 86        	defw Caja_2
 101+ 8590 5B 86        	defw Caja_3
 102+ 8592 9A 86        	defw Caja_4
 103+ 8594 D9 86        	defw Caja_5
 104+ 8596 18 87        	defw Caja_6
 105+ 8598 57 87        	defw Caja_7
 106+ 859A
 107+ 859A 00 00        	defw 0
 108+ 859C 00 00        	defw 0
 109+ 859E
 110+ 859E              ; ---------- ---------- ---------- ---------- ----------
 111+ 859E
 112+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 114+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 85A7
 117+ 85A7 05           	db %00000101									; (Attr).
 118+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 85AC
 121+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 85B0
 124+ 85B0 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 85B2 04           	db 4 											; (Cuad_objeto).
 126+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 85B7
 128+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 85B8
 130+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 85BE
 132+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 133+ 85C0 00 00        	defw 0											;	" " " " " " "
 134+ 85C2 00 00        	defw 0											;	" " " " " " "
 135+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85C8
 137+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85CA
 139+ 85CA 00           	db 0											; (Autoriza_movimiento).
 140+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85CF 00 00
 141+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85D4
 143+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85D7
 146+ 85D7 00           	db 0 											; (Columnas).
 147+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85DD
 150+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85DD
 152+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85DF 00 00        	defw 0											; (Posicion_actual).
 154+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85E6
 157+ 85E6 00           	db %00000000 									; (Attr).
 158+ 85E7
 159+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85EF
 164+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85F1 00           	db 0											; (Cuad_objeto).
 166+ 85F2
 167+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85F6
 169+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85F7
 171+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85FD
 173+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00        	defw 0											;	" " " " " " "
 176+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 8607
 178+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 8609
 180+ 8609 00           	db 0											; (Autoriza_movimiento).
 181+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 860E 00 00
 182+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 8613
 184+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 186+ 8616
 187+ 8616 00           	db 0 											; (Columnas).
 188+ 8617 00 00        	defw 0											; (Limite_horizontal).
 189+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 861C
 191+ 861C              ; ---------- ---------- ---------- ---------- ----------
 192+ 861C
 193+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 861E 00 00        	defw 0											; (Posicion_actual).
 195+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8625
 198+ 8625 00           	db %00000000 									; (Attr).
 199+ 8626
 200+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 862E
 205+ 862E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8630 00           	db 0											; (Cuad_objeto).
 207+ 8631
 208+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8635
 210+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8636
 212+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 863C
 214+ 863C 00 00        	db 0,0											; Variables_de_pintado
 215+ 863E 00 00        	defw 0											;	" " " " " " "
 216+ 8640 00 00        	defw 0											;	" " " " " " "
 217+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8646
 219+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8648
 221+ 8648 00           	db 0											; (Autoriza_movimiento).
 222+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 864D 00 00
 223+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8652
 225+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8655
 228+ 8655 00           	db 0 											; (Columnas).
 229+ 8656 00 00        	defw 0											; (Limite_horizontal).
 230+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 865B
 232+ 865B              ; ---------- ---------- ---------- ---------- ----------
 233+ 865B
 234+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 865D 00 00        	defw 0											; (Posicion_actual).
 236+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8664
 239+ 8664 00           	db %00000000 									; (Attr).
 240+ 8665
 241+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 866D
 246+ 866D 00 00        	defw 0											; (Posicion_inicio).
 247+ 866F 00           	db 0											; (Cuad_objeto).
 248+ 8670
 249+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8674
 251+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8675
 253+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 867B
 255+ 867B 00 00        	db 0,0											; Variables_de_pintado
 256+ 867D 00 00        	defw 0											;	" " " " " " "
 257+ 867F 00 00        	defw 0											;	" " " " " " "
 258+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8685
 260+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8687
 262+ 8687 00           	db 0											; (Autoriza_movimiento).
 263+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 868C 00 00
 264+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8691
 266+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8694
 269+ 8694 00           	db 0 											; (Columnas).
 270+ 8695 00 00        	defw 0											; (Limite_horizontal).
 271+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 869A
 273+ 869A              ; ---------- ---------- ---------- ---------- ----------
 274+ 869A
 275+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 869C 00 00        	defw 0											; (Posicion_actual).
 277+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 86A3
 280+ 86A3 00           	db %00000000 									; (Attr).
 281+ 86A4
 282+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 86AC
 287+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 288+ 86AE 00           	db 0											; (Cuad_objeto).
 289+ 86AF
 290+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 86B3
 292+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 86B4
 294+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 86BA
 296+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 297+ 86BC 00 00        	defw 0											;	" " " " " " "
 298+ 86BE 00 00        	defw 0											;	" " " " " " "
 299+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86C4
 301+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86C6
 303+ 86C6 00           	db 0											; (Autoriza_movimiento).
 304+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86CB 00 00
 305+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86D0
 307+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86D3
 310+ 86D3 00           	db 0 											; (Columnas).
 311+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86D9
 314+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86D9
 316+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86DB 00 00        	defw 0											; (Posicion_actual).
 318+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86E2
 321+ 86E2 00           	db %00000000 									; (Attr).
 322+ 86E3
 323+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86EB
 328+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86ED 00           	db 0											; (Cuad_objeto).
 330+ 86EE
 331+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86F2
 333+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86F3
 335+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86F9
 337+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86FB 00 00        	defw 0											;	" " " " " " "
 339+ 86FD 00 00        	defw 0											;	" " " " " " "
 340+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 8703
 342+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 8705
 344+ 8705 00           	db 0											; (Autoriza_movimiento).
 345+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 870A 00 00
 346+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 870F
 348+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 350+ 8712
 351+ 8712 00           	db 0 											; (Columnas).
 352+ 8713 00 00        	defw 0											; (Limite_horizontal).
 353+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 8718
 355+ 8718              ; ---------- ---------- ---------- ---------- ----------
 356+ 8718
 357+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 871A 00 00        	defw 0											; (Posicion_actual).
 359+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 360+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8721
 362+ 8721 00           	db %00000000 									; (Attr).
 363+ 8722
 364+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 872A
 369+ 872A 00 00        	defw 0											; (Posicion_inicio).
 370+ 872C 00           	db 0											; (Cuad_objeto).
 371+ 872D
 372+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8731
 374+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8732
 376+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8738
 378+ 8738 00 00        	db 0,0											; Variables_de_pintado
 379+ 873A 00 00        	defw 0											;	" " " " " " "
 380+ 873C 00 00        	defw 0											;	" " " " " " "
 381+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8742
 383+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8744
 385+ 8744 00           	db 0											; (Autoriza_movimiento).
 386+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8749 00 00
 387+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 874E
 389+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8751
 392+ 8751 00           	db 0 											; (Columnas).
 393+ 8752 00 00        	defw 0											; (Limite_horizontal).
 394+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8757
 396+ 8757              ; ---------- ---------- ---------- ---------- ----------
 397+ 8757
 398+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8759 00 00        	defw 0											; (Posicion_actual).
 400+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8760
 403+ 8760 00           	db %00000000 									; (Attr).
 404+ 8761
 405+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8769
 410+ 8769 00 00        	defw 0											; (Posicion_inicio).
 411+ 876B 00           	db 0											; (Cuad_objeto).
 412+ 876C
 413+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8770
 415+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8771
 417+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8777
 419+ 8777 00 00        	db 0,0											; Variables_de_pintado
 420+ 8779 00 00        	defw 0											;	" " " " " " "
 421+ 877B 00 00        	defw 0											;	" " " " " " "
 422+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8781
 424+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8783
 426+ 8783 00           	db 0											; (Autoriza_movimiento).
 427+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8788 00 00
 428+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 878D
 430+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8790
 433+ 8790 00           	db 0 											; (Columnas).
 434+ 8791 00 00        	defw 0											; (Limite_horizontal).
 435+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8796
 437+ 8796              ; -------------------------------------------------------------------------------------
 438+ 8796              ;
 439+ 8796              ;	20/05/23
 440+ 8796              ;
 441+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8796              ;
 443+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8796
 448+ 8796              Indice_de_entidades
 449+ 8796
 450+ 8796 9A 87        	defw Entidad_1
 451+ 8798 AA 87        	defw Entidad_2
 452+ 879A
 453+ 879A              ;	BADSAT, (Satélite malvado).
 454+ 879A
 455+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 879C 04           	db %00000100									; (Attr).
 457+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 87A3 01           	db 1											; (Cuad_objeto).
 461+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 87A8 00 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 87AA
 464+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 87AC 02           	db %00000010									; (Attr).
 466+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 87B3 01           	db 1											; (Cuad_objeto).
 470+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 87B8 00 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 87BA
# file closed: Cajas_y_disparos.asm
  88  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CA 87        	defw Nivel_2
   7+ 87BE D7 87        	defw Nivel_3
   8+ 87C0 E7 87        	defw Nivel_4
   9+ 87C2 F9 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87C9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 01 02
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D5 01 02
  22+ 87D7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DC 01
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EC 01
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 02 03        	db 2,3
  31+ 87F9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FE 01
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1
  35+ 880D 01
  36+ 880E
  37+ 880E              ;---------------------------------------------------------------------------------------------------------------
  38+ 880E              ;
  39+ 880E              ;   3/9/23
  40+ 880E              ;
  41+ 880E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880E              ;	_en la caja DRAW correspondiente.
  45+ 880E              ;
  46+ 880E              ;	MODIFICA: HL,DE y A.
  47+ 880E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880E
  49+ 880E              Inicializa_Punteros_de_nivel
  50+ 880E
  51+ 880E 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8811 22 5D 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8814 CD 91 8C     	call Extrae_address
  54+ 8817 7E           	ld a,(hl)
  55+ 8818 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881B 23           	inc hl
  57+ 881C 22 5F 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 881F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8820
  60+ 8820              ;---------------------------------------------------------------------------------------------------------------
  61+ 8820              ;
  62+ 8820              ;   13/5/23
  63+ 8820              ;
  64+ 8820              ;	Destruye A,BC,HL,DE
  65+ 8820
  66+ 8820              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8820              ;	_del juego.
  68+ 8820
  69+ 8820              Prepara_cajas
  70+ 8820
  71+ 8820              ; Preparamos los punteros de las cajas.
  72+ 8820
  73+ 8820 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8823 CD 91 8C     	call Extrae_address
  75+ 8826 CD 63 88     	call Avanza_caja
  76+ 8829
  77+ 8829 CD A7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882C
  79+ 882C 2A 5F 89     	ld hl,(Datos_de_nivel)
  80+ 882F
  81+ 882F              ; HL está en los datos del nivel correspondiente.
  82+ 882F              ; B actuará como contador de cajas.
  83+ 882F
  84+ 882F C5           1 push bc
  85+ 8830
  86+ 8830 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8831 CD 54 88     	call PreparaBC
  88+ 8834
  89+ 8834 21 96 87     	ld hl,Indice_de_entidades
  90+ 8837 CD 5C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883A 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883D
  93+ 883D CD 6D 88     	call Datos_de_entidad_a_caja
  94+ 8840
  95+ 8840 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8843 CD 91 8C     	call Extrae_address
  97+ 8846 CD 63 88     	call Avanza_caja
  98+ 8849
  99+ 8849 2A 5F 89     	ld hl,(Datos_de_nivel)
 100+ 884C 23           	inc hl
 101+ 884D 22 5F 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8850
 103+ 8850 C1           	pop bc
 104+ 8851 10 DC        	djnz 1B
 105+ 8853 C9           	ret
 106+ 8854
 107+ 8854 CB 27        PreparaBC sla a
 108+ 8856 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8858 4F           	ld c,a
 110+ 8859 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885B C9           	ret
 112+ 885C
 113+ 885C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885D ED 4A        	adc hl,bc
 115+ 885F CD 91 8C     	call Extrae_address
 116+ 8862 C9           	ret
 117+ 8863
 118+ 8863 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8866 13           	inc de
 120+ 8867 13           	inc de
 121+ 8868 EB           	ex de,hl
 122+ 8869 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886C C9           	ret
 124+ 886D
 125+ 886D              Datos_de_entidad_a_caja
 126+ 886D
 127+ 886D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886D
 129+ 886D
 130+ 886D ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8871
 132+ 8871 01 02 00     	ld bc,2
 133+ 8874 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8876
 135+ 8876 01 07 00     	ld bc,7
 136+ 8879 CD A1 88     	call Situa_DE
 137+ 887C
 138+ 887C 01 05 00     	ld bc,5
 139+ 887F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8881
 141+ 8881 01 04 00     	ld bc,4
 142+ 8884 CD A1 88     	call Situa_DE
 143+ 8887
 144+ 8887 01 07 00     	ld bc,7
 145+ 888A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888C
 147+ 888C 01 12 00     	ld bc,18
 148+ 888F CD A1 88     	call Situa_DE
 149+ 8892
 150+ 8892 01 02 00     	ld bc,2
 151+ 8895 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8897
 153+ 8897              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8897              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8897
 156+ 8897 01 0F 00     	ld bc,15									; *****
 157+ 889A CD A1 88     	call Situa_DE
 158+ 889D
 159+ 889D 3E 03        	ld a,3
 160+ 889F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A0
 162+ 88A0 C9           	ret
 163+ 88A1
 164+ 88A1 EB           Situa_DE ex de,hl
 165+ 88A2 A7           	and a
 166+ 88A3 ED 4A        	adc hl,bc
 167+ 88A5 EB           	ex de,hl
 168+ 88A6 C9           	ret
 169+ 88A7
 170+ 88A7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A7              ;
 172+ 88A7              ;	21/5/23
 173+ 88A7              ;
 174+ 88A7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A7              ;
 177+ 88A7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A7              ;
 181+ 88A7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A7              ;	MODIFICA: A y B.
 183+ 88A7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A7
 185+ 88A7              Admin_num_entidades
 186+ 88A7
 187+ 88A7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A7
 189+ 88A7 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AA A7           	and a
 191+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AB              ;	jr z,$
 193+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AB
 195+ 88AB 20 03        	jr nz,3F
 196+ 88AD
 197+ 88AD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AD
 199+ 88AD CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B0
 201+ 88B0 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B3 FE 0A        	cp 10
 203+ 88B5 38 08        	jr c,1F
 204+ 88B7
 205+ 88B7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B7              ; Actualizamos variables.
 207+ 88B7
 208+ 88B7 3E 0A        	ld a,10
 209+ 88B9 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BC 47           	ld b,a
 211+ 88BD 18 04        	jr 2F
 212+ 88BF
 213+ 88BF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88BF              ; (Numero_de_entidades)="0".
 215+ 88BF
 216+ 88BF 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C2 47           	ld b,a
 218+ 88C3 C9           2 ret
# file closed: Niveles.asm
  89  88C4
  90  88C4              ; ******************************************************************************************************************************************************************************************
  91  88C4              ; Constantes.
  92  88C4              ; ******************************************************************************************************************************************************************************************
  93  88C4              ;
  94  88C4              ; 10/11/23
  95  88C4
  96  88C4              ;
  97  88C4              ; Constantes generales.
  98  88C4              ;
  99  88C4
 100  88C4              Sprite_vacio equ $f000
 101  88C4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 102  88C4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 103  88C4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 104  88C4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 105  88C4
 106  88C4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 107  88C4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 108  88C4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 109  88C4              Album_de_fotos_disparos equ $7158 ; (7158h - 71ad).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 110  88C4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 111  88C4              ;
 112  88C4              Album_de_fotos_1 equ $7056	; (7056h - 70ab).
 113  88C4              Album_de_fotos_disparos_1 equ $71ae	; (71aeh - 7203h).
 114  88C4              Album_de_fotos_2 equ $70ac	; (70ach - 7101h).
 115  88C4              Album_de_fotos_disparos_2 equ $7204	; (7204h - 7259h).
 116  88C4              Album_de_fotos_3 equ $7102	; (7102 - 7157h).
 117  88C4              Album_de_fotos_disparos_3 equ $725a	; (725ah - 72afh).
 118  88C4
 119  88C4              Album_de_fotos_Amadeus equ $72b0 ; (72b0h - 72bch) ; 12 bytes.
 120  88C4              Almacen_de_parametros_DRAW equ $72bd ; ($72bd - $72fa) ; 61 bytes.
 121  88C4
 122  88C4 FF BF        Movimiento_precalculado defw $bfff
 123  88C6
 124  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 125  88C6
 126  88C6              ; ******************************************************************************************************************************************************************************************
 127  88C6              ; Variables.
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ;
 130  88C6              ; 10/11//23
 131  88C6              ;
 132  88C6              ; Variables de DRAW. (Motor principal).
 133  88C6              ;
 134  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 135  88C6
 136  88C6 00           Filas db 0												; Filas. [DRAW]
 137  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 138  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 139  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 140  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 141  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 142  88CE
 143  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 144  88CE
 145  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 146  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 147  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 148  88CF 00           Attr db 0												; Atributos de la entidad:
 149  88D0
 150  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 151  88D0              ;
 152  88D0              ;	COLORES: 0 ..... NEGRO
 153  88D0              ;    		 1 ..... AZUL
 154  88D0              ; 			 2 ..... ROJO
 155  88D0              ;			 3 ..... MAGENTA
 156  88D0              ; 			 4 ..... VERDE
 157  88D0              ; 			 5 ..... CIAN
 158  88D0              ;			 6 ..... AMARILLO
 159  88D0              ; 			 7 ..... BLANCO
 160  88D0
 161  88D0 00 00        Indice_Sprite_der defw 0
 162  88D2 00 00        Indice_Sprite_izq defw 0
 163  88D4 00 00        Puntero_DESPLZ_der defw 0
 164  88D6 00 00        Puntero_DESPLZ_izq defw 0
 165  88D8
 166  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 167  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 168  88DB
 169  88DB              ; Variables de objeto. (Características).
 170  88DB
 171  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 172  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 173  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 174  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 175  88DF
 176  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 177  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 178  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 179  88E0 00 00 00...  Variables_de_borrado ds 6
 180  88E6
 181  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 182  88E8 00 00        	defw 0
 183  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 184  88EC 00 00 00 00  	db 0,0,0,0
 185  88F0
 186  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  88F0
 188  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 189  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 190  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 191  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 192  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 193  88F1              ;
 194  88F1              ; 														DESCRIPCIÖN:
 195  88F1              ;
 196  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 197  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 198  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 201  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 202  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 205  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 206  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 207  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 208  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 209  88F1              ;
 210  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 211  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 212  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 213  88F1
 214  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 215  88F1
 216  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 217  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 218  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 219  88F7              ;
 220  88F7              ;
 221  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 222  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 223  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 224  88F8 00           Incrementa_puntero_backup db 0
 225  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 226  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 227  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 228  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 229  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 230  88FD              ;
 231  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 232  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 233  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 234  88FD              ;
 235  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 236  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 237  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 238  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 239  88FD              ;
 240  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 241  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 242  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 243  88FD
 244  88FD
 245  88FD              ; Variables de funcionamiento. [DRAW].
 246  88FD
 247  88FD 00           Columnas db 0
 248  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 249  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 250  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 251  8901
 252  8901              ; variables de control general.
 253  8901
 254  8901 00           Ctrl_2 db 0
 255  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 256  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 257  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 258  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 259  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 260  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 261  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 262  8902              ;
 263  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 264  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 265  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 266  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 267  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 268  8902
 269  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 270  8903
 271  8903              ;! 61 Bytes por entidad.
 272  8903
 273  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 274  8903              ;					         		---------;      ;---------
 275  8903
 276  8903
 277  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 278  8903
 279  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 280  8904
 281  8904              ;														DESCRIPCIÓN:
 282  8904              ;
 283  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 284  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 285  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 286  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 287  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 288  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 289  8904
 290  8904              ;														BIT 3, Recarga de nueva oleada.
 291  8904              ;														BIT 4, Recarga de nueva oleada.
 292  8904              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 293  8904              ;														BIT 6, **** Frame completo.
 294  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 295  8904
 296  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 297  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 298  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 299  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 300  8906
 301  8906              ; Gestión de ENTIDADES y CAJAS.
 302  8906
 303  8906 00 00        Puntero_store_caja defw 0
 304  8908 00 00        Puntero_restore_caja defw 0
 305  890A 00 00        Indice_restore_caja defw 0
 306  890C 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 307  890D 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 308  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 309  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 310  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 311  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 312  8910              ;														; _ (Numero_de_malotes)="0".
 313  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 314  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 315  8914              ;														; _ puntero (Indice_entidades).
 316  8914
 317  8914
 318  8914              ;---------------------------------------------------------------------------------------------------------------
 319  8914              ;
 320  8914              ;	18/11/23
 321  8914              ;
 322  8914              ;	Álbumes.
 323  8914
 324  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 325  8916              ;														; _variable para almacenar lo posición del puntero_
 326  8916              ; 														; _de pila, SP.
 327  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 328  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 329  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 330  891A 00 00        Stack_snapshot defw 0
 331  891C 00 00        Stack_snapshot_disparos defw 0
 332  891E
 333  891E 00 00        End_Snapshot defw 0
 334  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 335  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 336  8922              ;														; _el snapshot de los registros del siguiente disparo.
 337  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 338  8922 B0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 339  8924 00 00        End_Snapshot_1 defw 0
 340  8926 00 00        End_Snapshot_disparos_1 defw 0
 341  8928 00 00        End_Snapshot_2 defw 0
 342  892A 00 00        End_Snapshot_disparos_2 defw 0
 343  892C 00 00        End_Snapshot_3 defw 0
 344  892E 00 00        End_Snapshot_disparos_3 defw 0
 345  8930
 346  8930 00 00        Puntero_indice_album_de_fotos defw 0
 347  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 348  8934
 349  8934 00 00        Puntero_indice_End_Snapshot defw 0
 350  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 351  8938 00 00        Puntero_de_End_Snapshot defw 0
 352  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 353  893C
 354  893C F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 355  893D              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 356  893D
 357  893D 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 358  893E              ;
 359  893E              ;														DESCRIPCIÓN:
 360  893E              ;
 361  893E              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 362  893E              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 363  893E              ;																_ álbum. También indica que "hay recolocación" antes de ejecutar la "cascada de álbumes". El tipo de recolocación lo definen_
 364  893E              ;																_ los bits 1 y 2.
 365  893E              ;														BIT 1, Indica que la recolocación de álbumes será de Album3_a_Album2, (siempre que Álbum_3 contenga un FRAME completo).
 366  893E              ;														BIT 2, Indica que la recolocación de álbumes será de Album2_a_Album1, (siempre que álbum_2 contenga un FRAME completo).
 367  893E              ;																Nota: En el caso de que al hacer la recolocación, nos encontremos con que el álbum donante sigue incompleto, saltaremos_
 368  893E              ;																	_ a ejecutar la "Casacada" de álbumes para limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 369  893E              ;														BIT 3, Existe DOBLE RECOLOCACIÓN. Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Siempre que Album_de_fotos_3 contenga un FRAME completo,_
 370  893E              ;																_ pasaremos Album3_a_Album2 y Album2_a_Album1. También modificaremos los punteros y los situaremos al comienzo de Album_de_fotos_2.
 371  893E              ;																_ En el caso de que al hacer la DOBLE RECOLOCACIÓN, Album_de_fotos_3 esté incompleto, saltaremos a ejecutar la "Casacada" de álbumes para_
 372  893E              ;											 					_ limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 373  893E              ;														BIT 4, Buffer vacío !!!. Album_de_fotos está vacío y no podemos volcar Album_de_fotos_1. Está incompleto.
 374  893E              ;																_ El siguiente FRAME no se imprime, NO HAY CUADRO.
 375  893E
 376  893E              ; Gestión de Disparos.
 377  893E
 378  893E 00           Numero_de_disparotes db 0
 379  893F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 380  8941 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 381  8943 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 382  8944              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 383  8944              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 384  8944 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 385  8946              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 386  8946              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 387  8946              ;														; _produzca colisión.
 388  8946 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 389  8948              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 390  8948 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 391  894B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 392  894B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 393  894E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 394  894E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 395  8950 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 396  8951
 397  8951              ;---------------------------------------------------------------------------------------------------------------
 398  8951
 399  8951              ; Relojes y temporizaciones.
 400  8951
 401  8951 00           Contador_de_frames db 0
 402  8952 00           Contador_de_frames_2 db 0
 403  8953
 404  8953 04           Clock_explosion db 4
 405  8954 1E           Clock_Entidades_en_curso db 30
 406  8955 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 407  8956              ;														; Repite la oleada de entidades.
 408  8956 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 409  8957 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 410  8958 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 411  8959
 412  8959 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 413  895A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 414  895B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 415  895C
 416  895C              ;---------------------------------------------------------------------------------------------------------------
 417  895C
 418  895C              ; Gestión de NIVELES.
 419  895C
 420  895C 00           Nivel db 0												; Nivel actual del juego.
 421  895D 00 00        Puntero_indice_NIVELES defw 0
 422  895F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 423  8961              ; 														; _ que definen el NIVEL.
 424  8961              ; Y todo comienza aquí .....
 425  8961              ;
 426  8961              ; Rutina principal *************************************************************************************************************************************************************************
 427  8961              ;
 428  8961              ;	16/11/22
 429  8961
 430  8961              START
 431  8961
 432  8961 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 433  8964 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 434  8966 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 435  8968 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 436  896A F3           	DI
 437  896B
 438  896B 3E 07        	ld a,%00000111
 439  896D CD 29 99     	call Cls
 440  8970
 441  8970 CD 6A 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 442  8973
 443  8973              ; INICIALIZACIÓN.
 444  8973
 445  8973 CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 446  8976 CD 20 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 447  8979 CD 8F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 448  897C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 449  897C CD A5 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 450  897F              ;													     ; _ malotes antes de guardar ninguna foto.
 451  897F              ; ----------
 452  897F
 453  897F CD 1A 8D     	call Restore_entidad
 454  8982
 455  8982 21 0D 89     	ld hl,Numero_parcial_de_entidades
 456  8985 46           	ld b,(hl)
 457  8986 04           	inc b
 458  8987 05           	dec b
 459  8988 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 460  898A
 461  898A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 462  898A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 463  898A              ;	Pintamos el resto de entidades:
 464  898A
 465  898A              ;	INICIA ENTIDADES !!!!!
 466  898A
 467  898A C5           1 push bc  												; Guardo el contador de entidades.
 468  898B CD 5F 8B     	call Inicia_entidad
 469  898E C1           	pop bc
 470  898F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 471  8991
 472  8991              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 473  8991              ; (Esto se dá cuando se inicia una nueva oleada).
 474  8991
 475  8991 3A 03 89     	ld a,(Ctrl_1)
 476  8994 CB 5F        	bit 3,a
 477  8996 20 15        	jr nz,5F											; Loop
 478  8998
 479  8998              ; 	INICIA AMADEUS !!!!!
 480  8998
 481  8998 CD 41 8D     3 call Restore_Amadeus
 482  899B CD 97 8C     	call Inicia_Puntero_objeto
 483  899E CD 1C 93     	call Draw
 484  89A1 CD A0 7F     	call Guarda_foto_registros
 485  89A4 CD 9E 8D     	call Guarda_datos_de_borrado_Amadeus
 486  89A7
 487  89A7 11 9E 85     	ld de,Amadeus_db
 488  89AA CD 53 8D     	call Store_Amadeus
 489  89AD
 490  89AD              ; 	INICIA DISPAROS !!!!!
 491  89AD
 492  89AD              ;	call Inicia_Puntero_Disparo_Entidades
 493  89AD              ;	call Inicia_Puntero_Disparo_Amadeus
 494  89AD
 495  89AD              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 496  89AD
 497  89AD CD 8F 8B     5 call Inicia_punteros_de_cajas
 498  89B0 CD 1A 8D     	call Restore_entidad
 499  89B3
 500  89B3 3A 03 89     	ld a,(Ctrl_1)
 501  89B6 CB 5F        	bit 3,a
 502  89B8 28 07        	jr z,6F
 503  89BA
 504  89BA              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 505  89BA
 506  89BA 21 03 89     	ld hl,Ctrl_1
 507  89BD CB 9E        	res 3,(hl)
 508  89BF 18 03        	jr Main
 509  89C1
 510  89C1              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 511  89C1              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 512  89C1              ; _ para situarnos en el siguiente album.
 513  89C1
 514  89C1
 515  89C1 CD D6 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 516  89C4
 517  89C4
 518  89C4              ; ------------------------------------
 519  89C4
 520  89C4              Main
 521  89C4              ;
 522  89C4              ;	12/11/23
 523  89C4
 524  89C4              ; Aparece nueva entidad ???
 525  89C4
 526  89C4              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 527  89C4              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 528  89C4              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 529  89C4              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 530  89C4              ;														; _un 2º bloque.
 531  89C4
 532  89C4 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 533  89C7 47           	ld b,a
 534  89C8 3A 51 89     	ld a,(Contador_de_frames)
 535  89CB B8           	cp b
 536  89CC 28 07        	jr z,21F
 537  89CE
 538  89CE              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 539  89CE              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 540  89CE              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 541  89CE              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 542  89CE
 543  89CE 3C           	inc a
 544  89CF B8           	cp b
 545  89D0 20 1B        	jr nz,13F
 546  89D2
 547  89D2 32 51 89     	ld (Contador_de_frames),a
 548  89D5
 549  89D5              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 550  89D5              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 551  89D5
 552  89D5 3A 0D 89     21 ld a,(Numero_parcial_de_entidades)
 553  89D8 47           	ld b,a
 554  89D9 3A 0E 89     	ld a,(Entidades_en_curso)
 555  89DC B8           	cp b
 556  89DD 28 0E        	jr z,13F
 557  89DF 30 0C        	jr nc,13F
 558  89E1
 559  89E1              ; --- --- --- --- ---
 560  89E1
 561  89E1 3C           	inc a
 562  89E2 32 0E 89     	ld (Entidades_en_curso),a
 563  89E5
 564  89E5              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 565  89E5
 566  89E5 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 567  89E8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 568  89E8              ;! _ IMPREDECIBLE !!!!
 569  89E8 C6 32        	add 50
 570  89EA 32 54 89     	ld (Clock_Entidades_en_curso),a
 571  89ED
 572  89ED              ; -------------------------------------------------------------------------------------------------------------
 573  89ED
 574  89ED              ; Habilita disparos.
 575  89ED
 576  89ED 21 56 89     13 ld hl,Disparo_Amadeus
 577  89F0 11 58 89     	ld de,CLOCK_repone_disparo_Amadeus
 578  89F3 CD F1 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 579  89F6
 580  89F6 21 59 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 581  89F9 11 5B 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 582  89FC CD F1 9C     	call Habilita_disparos
 583  89FF
 584  89FF              ; COLISIONES.
 585  89FF
 586  89FF CD FE 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 587  8A02
 588  8A02              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 589  8A02              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 590  8A02              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 591  8A02
 592  8A02 AF           	xor a
 593  8A03 32 43 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 594  8A06
 595  8A06 CD 8F 8B     	call Inicia_punteros_de_cajas
 596  8A09 CD 1A 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 597  8A0C              ; 														; _ en DRAW.
 598  8A0C 3A C6 88     	ld a,(Filas)
 599  8A0F A7           	and a
 600  8A10 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 601  8A12 CD 2C 8D     	call Incrementa_punteros_de_cajas
 602  8A15 18 F2        	jr 12B
 603  8A17
 604  8A17              ; ---------------------------------------------------------------------------------------
 605  8A17
 606  8A17 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 607  8A1A 47               ld b,a
 608  8A1B A7           	and a
 609  8A1C 20 14        	jr nz,11F
 610  8A1E
 611  8A1E 21 03 89     	ld hl,Ctrl_1
 612  8A21 CB 66        	bit 4,(hl)
 613  8A23 C2 B1 8A     	jp nz,16F
 614  8A26
 615  8A26              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 616  8A26
 617  8A26 21 03 89     	ld hl,Ctrl_1
 618  8A29 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 619  8A2B
 620  8A2B 3A 51 89     	ld a,(Contador_de_frames)
 621  8A2E 3C           	inc a
 622  8A2F 32 55 89     	ld (Activa_recarga_cajas),a
 623  8A32
 624  8A32              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 625  8A32
 626  8A32 3A 0E 89     11 ld a,(Entidades_en_curso)
 627  8A35 A7           	and a
 628  8A36 CA B1 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 629  8A39 47           	ld b,a												; No hay entidades que gestionar.
 630  8A3A
 631  8A3A              ; Código que ejecutamos con cada entidad:
 632  8A3A              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 633  8A3A
 634  8A3A C5           15 push bc 												; Nº de entidades en curso.
 635  8A3B
 636  8A3B              ; Impacto ???
 637  8A3B
 638  8A3B 3A DF 88     22 ld a,(Impacto)
 639  8A3E A7           	and a
 640  8A3F 28 33        	jr z,8F
 641  8A41
 642  8A41              ; Hay Impacto en esta entidad.
 643  8A41
 644  8A41 21 53 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 645  8A44 35           	dec (hl)
 646  8A45 C2 AB 8A     	jp nz,17F
 647  8A48
 648  8A48              ;! Velocidad de la animación de la explosión.
 649  8A48
 650  8A48 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 651  8A4A              ;														; _,(velocidad de la explosión).
 652  8A4A
 653  8A4A              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 654  8A4A
 655  8A4A 18 FE        	jr $
 656  8A4C
 657  8A4C CD BE 8D     	call Repone_datos_de_borrado
 658  8A4F CD 33 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 659  8A52
 660  8A52              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 661  8A52
 662  8A52 3A 01 89     	ld a,(Ctrl_2)
 663  8A55 CB 4F        	bit 1,a
 664  8A57 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 665  8A59
 666  8A59              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 667  8A59
 668  8A59 3A CE 88     	ld a,(CTRL_DESPLZ)
 669  8A5C A7           	and a
 670  8A5D 20 08        	jr nz,18F
 671  8A5F
 672  8A5F 21 84 84     	ld hl,Indice_Explosion_2x2-2
 673  8A62 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 674  8A65 18 06        	jr 19F
 675  8A67
 676  8A67 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 677  8A6A 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 678  8A6D
 679  8A6D 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 680  8A70 CB CE        	set 1,(hl)
 681  8A72 18 22        	jr 7F
 682  8A74
 683  8A74              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 684  8A74              ; _con las coordenadas de la entidad almacenada en DRAW.
 685  8A74
 686  8A74 3A 03 89     8 ld a,(Ctrl_1)
 687  8A77 CB 57        	bit 2,a
 688  8A79 28 1B        	jr z,7F
 689  8A7B
 690  8A7B 2A 46 89     	ld hl,(Coordenadas_disparo_certero)
 691  8A7E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 692  8A7F              ;														; E contiene la coordenada_X del disparo.
 693  8A7F 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 694  8A82              ;														; H FILA, (Coordenada_y de la entidad).
 695  8A82 A7           	and a
 696  8A83 ED 52        	sbc hl,de
 697  8A85
 698  8A85 CD 35 92     	call Determina_resultado_comparativa
 699  8A88
 700  8A88 78           	ld a,b
 701  8A89 A7           	and a
 702  8A8A 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 703  8A8C
 704  8A8C              ; ----- ----- -----
 705  8A8C
 706  8A8C 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 707  8A8E 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 708  8A91
 709  8A91 21 03 89     	ld hl,Ctrl_1
 710  8A94 CB 96        	res 2,(hl)
 711  8A96
 712  8A96 CD FB 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 713  8A99
 714  8A99 3A F0 88     	ld a,(Ctrl_0)
 715  8A9C CB 67        	bit 4,a
 716  8A9E 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 717  8AA0
 718  8AA0              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 719  8AA0              ; [[[
 720  8AA0 CD 98 8D     	call Detecta_disparo_entidad
 721  8AA3              ; ]]]
 722  8AA3 CD 70 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 723  8AA6
 724  8AA6 21 F0 88     	ld hl,Ctrl_0
 725  8AA9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 726  8AAB
 727  8AAB CD DF 8C     17 call Store_Restore_cajas
 728  8AAE
 729  8AAE C1           	pop bc
 730  8AAF 10 89        	djnz 15B
 731  8AB1
 732  8AB1              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 733  8AB1              ; Hemos gestionado todas las unidades.
 734  8AB1              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 735  8AB1
 736  8AB1              ;	ld hl,Ctrl_1
 737  8AB1              ;	res 2,(hl)
 738  8AB1
 739  8AB1 CD D6 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 740  8AB4              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 741  8AB4
 742  8AB4              ; ----------------------------------------
 743  8AB4
 744  8AB4 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 745  8AB7 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 746  8AB9 CA C4 89     	jp z,Main
 747  8ABC
 748  8ABC              ; RECARGA DE NUEVA OLEADA.
 749  8ABC
 750  8ABC 3A 51 89     	ld a,(Contador_de_frames)
 751  8ABF 47           	ld b,a
 752  8AC0 3A 55 89     	ld a,(Activa_recarga_cajas)
 753  8AC3 B8           	cp b
 754  8AC4 28 08        	jr z,20F
 755  8AC6
 756  8AC6 21 03 89     	ld hl,Ctrl_1
 757  8AC9 CB E6        	set 4,(hl)
 758  8ACB C3 C4 89     	jp Main
 759  8ACE
 760  8ACE 21 03 89     20 ld hl,Ctrl_1
 761  8AD1 CB A6        	res 4,(hl)
 762  8AD3
 763  8AD3 3A 51 89     	ld a,(Contador_de_frames)
 764  8AD6
 765  8AD6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 766  8AD6              ;! _ IMPREDECIBLE !!!!
 767  8AD6
 768  8AD6 C6 0A        	add 10
 769  8AD8 32 54 89     	ld (Clock_Entidades_en_curso),a
 770  8ADB
 771  8ADB C3 76 89     	jp 4B
 772  8ADE
 773  8ADE C9           	ret
 774  8ADF
 775  8ADF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 776  8ADF              ;
 777  8ADF              ;	16/11/23
 778  8ADF
 779  8ADF              Gestiona_Amadeus
 780  8ADF
 781  8ADF              ;! Activa/desactiva impacto con Amadeus.
 782  8ADF
 783  8ADF 3A DF 88     	ld a,(Impacto)
 784  8AE2 A7           	and a
 785  8AE3 20 FE        	jr nz,$
 786  8AE5
 787  8AE5 CD 4C 8B     	call Mov_Amadeus
 788  8AE8
 789  8AE8 3A F0 88     	ld a,(Ctrl_0)
 790  8AEB CB 67        	bit 4,a
 791  8AED 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 792  8AEF
 793  8AEF CD 70 8B     	call Guarda_foto_entidad_a_pintar
 794  8AF2 CD 9E 8D     	call Guarda_datos_de_borrado_Amadeus
 795  8AF5
 796  8AF5 21 F0 88     14 ld hl,Ctrl_0
 797  8AF8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 798  8AFA
 799  8AFA              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 800  8AFA
 801  8AFA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 802  8AFA
 803  8AFA              ;	call Calcula_numero_de_disparotes
 804  8AFA
 805  8AFA C9           	ret
 806  8AFB
 807  8AFB              ; --------------------------------------------------------------------------------------------------------------
 808  8AFB              ;
 809  8AFB              ;	27/05/23
 810  8AFB
 811  8AFB              Mov_obj
 812  8AFB
 813  8AFB 3A 01 89     	ld a,(Ctrl_2)
 814  8AFE CB 4F        	bit 1,a
 815  8B00 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 816  8B02
 817  8B02              ; Explosión:
 818  8B02
 819  8B02 3A 02 89     	ld a,(Frames_explosion)
 820  8B05 A7           	and a
 821  8B06 20 11        	jr nz,4F
 822  8B08
 823  8B08              ; Una alimaña menos!!!!!!!!!1
 824  8B08
 825  8B08 CD 5C 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 826  8B0B 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 827  8B0E 35           	dec (hl)
 828  8B0F 21 0E 89     	ld hl,Entidades_en_curso
 829  8B12 35           	dec (hl)
 830  8B13 21 0C 89     	ld hl,Numero_de_entidades
 831  8B16 35           	dec (hl)
 832  8B17 18 32        	jr 3F
 833  8B19
 834  8B19              ; -----
 835  8B19
 836  8B19              ;	`Movemos´ la explosión.
 837  8B19
 838  8B19 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 839  8B1C 23           	inc hl
 840  8B1D 23           	inc hl
 841  8B1E 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 842  8B21 CD 91 8C     	call Extrae_address
 843  8B24 22 CA 88     	ld (Puntero_objeto),hl
 844  8B27
 845  8B27 21 02 89     	ld hl,Frames_explosion
 846  8B2A 35           	dec (hl)
 847  8B2B 18 1E        	jr 3F
 848  8B2D
 849  8B2D AF           2 xor a
 850  8B2E 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 851  8B31
 852  8B31              ; Movemos Entidades malignas.
 853  8B31
 854  8B31 CD 9C 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 855  8B34
 856  8B34 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 857  8B37 CB 67        	bit 4,a
 858  8B39 C8           	ret z
 859  8B3A
 860  8B3A              ; Ha habido desplazamiento de la entidad maligna.
 861  8B3A              ; Ha llegado a zona de AMADEUS ???
 862  8B3A
 863  8B3A 3A CD 88     	ld a,(Coordenada_y)
 864  8B3D FE 14        	cp $14
 865  8B3F D4 C3 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 866  8B42              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 867  8B42              ; ---------
 868  8B42
 869  8B42 CD 77 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 870  8B45 CD BE 8D     	call Repone_datos_de_borrado
 871  8B48 CD 33 8C     	call Limpia_Variables_de_borrado
 872  8B4B
 873  8B4B C9           3 ret													; _de la misma.
 874  8B4C
 875  8B4C              ; --------------------------------------------------------------------------------------------------------------
 876  8B4C              ;
 877  8B4C              ;	29/1/23
 878  8B4C
 879  8B4C              Mov_Amadeus
 880  8B4C
 881  8B4C CD 7E 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 882  8B4F
 883  8B4F 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 884  8B52 CB 67        	bit 4,a
 885  8B54 C8           	ret z
 886  8B55
 887  8B55              ; ---------
 888  8B55
 889  8B55 CD 77 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 890  8B58 CD AE 8D     	call Repone_datos_de_borrado_Amadeus
 891  8B5B CD 33 8C     	call Limpia_Variables_de_borrado
 892  8B5E
 893  8B5E C9           	ret
 894  8B5F
 895  8B5F              ; -----------------------------------------------------------------------------------
 896  8B5F              ;
 897  8B5F              ;	16/11/23
 898  8B5F
 899  8B5F CD 97 8C     Inicia_entidad	call Inicia_Puntero_objeto
 900  8B62 CD 3D 99     	call Recompone_posicion_inicio
 901  8B65 CD 1C 93     	call Draw
 902  8B68 CD A0 7F     	call Guarda_foto_registros
 903  8B6B F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 904  8B6C              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 905  8B6C CD DF 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 906  8B6F C9           	ret
 907  8B70
 908  8B70              ; --------------------------------------------------------------------------------------------------------------
 909  8B70              ;
 910  8B70              ;	31/08/23
 911  8B70              ;
 912  8B70              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 913  8B70              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 914  8B70
 915  8B70              Guarda_foto_entidad_a_pintar
 916  8B70
 917  8B70              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 918  8B70
 919  8B70 CD 1C 93     	call Draw
 920  8B73 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 921  8B76 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 922  8B77
 923  8B77              ; --------------------------------------------------------------------------------------------------------------
 924  8B77              ;
 925  8B77              ;	19/9/23
 926  8B77
 927  8B77 21 C6 88     Prepara_var_pintado ld hl,Filas
 928  8B7A 11 E6 88     	ld de,Variables_de_pintado
 929  8B7D 01 08 00     	ld bc,8
 930  8B80 ED B0        	ldir
 931  8B82 C9           	ret
 932  8B83
 933  8B83              ; --------------------------------------------------------------------------------------------------------------
 934  8B83
 935  8B83 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 936  8B86 11 C6 88     	ld de,Filas
 937  8B89 01 08 00     	ld bc,8
 938  8B8C ED B0        	ldir
 939  8B8E C9           	ret
 940  8B8F
 941  8B8F              ; *************************************************************************************************************************************************************
 942  8B8F              ;
 943  8B8F              ; 8/1/23
 944  8B8F              ;
 945  8B8F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 946  8B8F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 947  8B8F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 948  8B8F
 949  8B8F              ; Destruye HL y DE !!!!!
 950  8B8F
 951  8B8F              Inicia_punteros_de_cajas
 952  8B8F
 953  8B8F 21 8C 85     	ld hl,Indice_de_cajas
 954  8B92 CD 91 8C         call Extrae_address
 955  8B95 22 06 89         ld (Puntero_store_caja),hl
 956  8B98 21 8E 85     	ld hl,Indice_de_cajas+2
 957  8B9B 22 0A 89     	ld (Indice_restore_caja),hl
 958  8B9E CD 91 8C     	call Extrae_address
 959  8BA1 22 08 89     	ld (Puntero_restore_caja),hl
 960  8BA4 C9               ret
 961  8BA5
 962  8BA5              ; ---------------------------------------------------------------
 963  8BA5              ;
 964  8BA5              ;	9/8/23
 965  8BA5              ;
 966  8BA5              ;	Inicialización y gestión de álbumes de fotos y cajas.
 967  8BA5
 968  8BA5              Inicia_punteros_de_albumes_y_malotes
 969  8BA5
 970  8BA5 21 EC 84     	ld hl,Indice_album_de_fotos
 971  8BA8 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 972  8BAB CD 91 8C     	call Extrae_address
 973  8BAE 22 1A 89     	ld (Stack_snapshot),hl
 974  8BB1
 975  8BB1 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 976  8BB4 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 977  8BB7 CD 91 8C     	call Extrae_address
 978  8BBA 22 1C 89     	ld (Stack_snapshot_disparos),hl
 979  8BBD
 980  8BBD 21 FC 84     	ld hl,Indice_End_Snapshot
 981  8BC0 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 982  8BC3 CD 91 8C     	call Extrae_address
 983  8BC6 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 984  8BC9
 985  8BC9 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 986  8BCC 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 987  8BCF CD 91 8C     	call Extrae_address
 988  8BD2 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 989  8BD5
 990  8BD5 C9           	ret
 991  8BD6
 992  8BD6              ;	23/10/23
 993  8BD6
 994  8BD6              Avanza_puntero_de_album_de_fotos_de_entidades
 995  8BD6
 996  8BD6              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 997  8BD6
 998  8BD6              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 999  8BD6              ; Estamos en el último álbum del índice???.
1000  8BD6              ;
1001  8BD6 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1002  8BD9 01 F2 84     	ld bc,Indice_album_de_fotos+6
1003  8BDC A7           	and a
1004  8BDD ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
1005  8BDF 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
1006  8BE1
1007  8BE1              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
1008  8BE1              ; Actualizamos (Semaforo).
1009  8BE1
1010  8BE1 21 3C 89     	ld hl,Semaforo
1011  8BE4 CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
1012  8BE6
1013  8BE6              ; Inicia con el buffer de video completo !!!
1014  8BE6
1015  8BE6 FB           	ei
1016  8BE7 76           	halt
1017  8BE8 C9           	ret
1018  8BE9
1019  8BE9 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1020  8BEC 23           	inc hl
1021  8BED 23           	inc hl
1022  8BEE 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1023  8BF1 CD 91 8C     	call Extrae_address
1024  8BF4 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1025  8BF7
1026  8BF7 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1027  8BFA 23           	inc hl
1028  8BFB 23           	inc hl
1029  8BFC 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1030  8BFF CD 91 8C     	call Extrae_address
1031  8C02 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1032  8C05
1033  8C05 21 3C 89     	ld hl,Semaforo
1034  8C08 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1035  8C0A
1036  8C0A C9           	ret
1037  8C0B
1038  8C0B              ; *************************************************************************************************************************************************************
1039  8C0B              ;
1040  8C0B              ; 8/1/23
1041  8C0B              ;
1042  8C0B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1043  8C0B
1044  8C0B 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1045  8C0E 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1046  8C11 C9           	ret
1047  8C12 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1048  8C15 22 41 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1049  8C18 C9           	ret
1050  8C19
1051  8C19              ; -------------------------------------------------------------------------------------------------------------
1052  8C19              ;
1053  8C19              ; 21/9/23
1054  8C19              ;
1055  8C19
1056  8C19              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1057  8C19
1058  8C19              Limpia_album_Amadeus
1059  8C19
1060  8C19 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1061  8C1C 7E           	ld a,(hl)
1062  8C1D A7           	and a
1063  8C1E C8           	ret z
1064  8C1F
1065  8C1F 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1066  8C22 11 B1 72     	ld de,Album_de_fotos_Amadeus+1
1067  8C25 01 0B 00     	ld bc,11
1068  8C28 AF           	xor a
1069  8C29 77           	ld (hl),a
1070  8C2A ED B0        	ldir
1071  8C2C
1072  8C2C 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1073  8C2F 22 22 89     	ld (End_Snapshot_Amadeus),hl
1074  8C32
1075  8C32 C9           	ret
1076  8C33
1077  8C33 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1078  8C36 11 E1 88     	ld de,Variables_de_borrado+1
1079  8C39 01 05 00     	ld bc,5
1080  8C3C AF           	xor a
1081  8C3D 77           	ld (hl),a
1082  8C3E ED B0        	ldir
1083  8C40 C9           	ret
1084  8C41
1085  8C41              ; -------------------------------------------------------------------------------------------------------------
1086  8C41              ;
1087  8C41              ; 8/9/23
1088  8C41              ;
1089  8C41
1090  8C41              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1091  8C41              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1092  8C41
1093  8C41              Calcula_numero_de_malotes
1094  8C41
1095  8C41 21 00 70     	ld hl,Album_de_fotos
1096  8C44 EB           	ex de,hl
1097  8C45 2A 1E 89     	ld hl,(End_Snapshot)
1098  8C48
1099  8C48 7C           	ld a,h
1100  8C49 A7           	and a
1101  8C4A 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1102  8C4C
1103  8C4C 06 00        4 ld b,0
1104  8C4E 7D           	ld a,l
1105  8C4F 93           	sub e
1106  8C50 28 07        	jr z,1F
1107  8C52
1108  8C52              ; Nº de malotes no es "0".
1109  8C52
1110  8C52 D6 06        2 sub 6
1111  8C54 04           	inc b
1112  8C55 A7           	and a
1113  8C56 20 FA        	jr nz,2B
1114  8C58 78           	ld a,b
1115  8C59
1116  8C59 32 0F 89     1 ld (Numero_de_malotes),a
1117  8C5C C9           	ret
1118  8C5D
1119  8C5D              ; -------------------------------------------------------------------------------------------------------------
1120  8C5D              ;
1121  8C5D              ; 8/9/23
1122  8C5D              ;
1123  8C5D
1124  8C5D              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1125  8C5D              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1126  8C5D
1127  8C5D              Calcula_malotes_Amadeus
1128  8C5D
1129  8C5D 21 B0 72     	ld hl,Album_de_fotos_Amadeus
1130  8C60 EB           	ex de,hl
1131  8C61 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1132  8C64
1133  8C64 7C           	ld a,h
1134  8C65 A7           	and a
1135  8C66 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1136  8C68
1137  8C68 06 00        	ld b,0
1138  8C6A 7D           	ld a,l
1139  8C6B 93           	sub e
1140  8C6C 28 07        	jr z,1F
1141  8C6E
1142  8C6E              ; Nº de malotes no es "0".
1143  8C6E
1144  8C6E D6 06        2 sub 6
1145  8C70 04           	inc b
1146  8C71 A7           	and a
1147  8C72 20 FA        	jr nz,2B
1148  8C74 78           	ld a,b
1149  8C75
1150  8C75 32 0F 89     1 ld (Numero_de_malotes),a
1151  8C78 C9           	ret
1152  8C79
1153  8C79              ; -------------------------------------------------------------------------------------------------------------
1154  8C79              ;
1155  8C79              ; 28/2/23
1156  8C79              ;
1157  8C79
1158  8C79              Calcula_numero_de_disparotes
1159  8C79
1160  8C79 21 58 71     	ld hl,Album_de_fotos_disparos
1161  8C7C EB           	ex de,hl
1162  8C7D 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1163  8C80
1164  8C80 06 00        	ld b,0
1165  8C82 7D           	ld a,l
1166  8C83 93           	sub e
1167  8C84 28 07        	jr z,1F
1168  8C86
1169  8C86              ; Nº de malotes no es "0".
1170  8C86
1171  8C86 D6 06        2 sub 6
1172  8C88 04           	inc b
1173  8C89 A7           	and a
1174  8C8A 20 FA        	jr nz,2B
1175  8C8C 78           	ld a,b
1176  8C8D
1177  8C8D 32 3E 89     1 ld (Numero_de_disparotes),a
1178  8C90 C9           	ret
1179  8C91
1180  8C91              ; *************************************************************************************************************************************************************
1181  8C91              ;
1182  8C91              ; 20/10/22
1183  8C91              ;
1184  8C91              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1185  8C91              ;
1186  8C91              ; Destruye el puntero y DE !!!!!
1187  8C91
1188  8C91 5E           Extrae_address ld e,(hl)
1189  8C92 23           	inc hl
1190  8C93 56           	ld d,(hl)
1191  8C94 2B           	dec hl
1192  8C95 EB           	ex de,hl
1193  8C96 C9           	ret
1194  8C97
1195  8C97              ; *************************************************************************************************************************************************************
1196  8C97              ;
1197  8C97              ;	7/2/23
1198  8C97              ;
1199  8C97              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1200  8C97              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1201  8C97              ;
1202  8C97              ;   Destruye HL y BC !!!!!,
1203  8C97              ;
1204  8C97              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1205  8C97              ;					"0" ..... Izquierda.
1206  8C97
1207  8C97              Inicia_Puntero_objeto
1208  8C97
1209  8C97 3A DA 88     	ld a,(Cuad_objeto)
1210  8C9A E6 01        	and 1
1211  8C9C F5           	push af
1212  8C9D CC BB 8C     	call z,Inicia_puntero_objeto_izq
1213  8CA0 F1           	pop af
1214  8CA1 28 2B        	jr z,1F
1215  8CA3 CD A8 8C     	call Inicia_puntero_objeto_der
1216  8CA6 18 26        	jr 1F
1217  8CA8
1218  8CA8              ; Arrancamos desde la parte izquierda de la pantalla.
1219  8CA8              ; Iniciamos (Indice_Sprite_der).
1220  8CA8
1221  8CA8 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1222  8CAB 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1223  8CAE CD 91 8C     	call Extrae_address
1224  8CB1 22 CA 88     	ld (Puntero_objeto),hl
1225  8CB4
1226  8CB4 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1227  8CB7 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1228  8CBA C9           	ret
1229  8CBB
1230  8CBB              ; Arrancamos desde la parte derecha de la pantalla.
1231  8CBB              ; Iniciamos (Indice_Sprite_izq).
1232  8CBB
1233  8CBB 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1234  8CBE 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1235  8CC1 CD 91 8C     	call Extrae_address
1236  8CC4 22 CA 88     	ld (Puntero_objeto),hl
1237  8CC7
1238  8CC7 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1239  8CCA 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1240  8CCD C9           	ret
1241  8CCE
1242  8CCE              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1243  8CCE
1244  8CCE 21 40 83     1 ld hl,Amadeus
1245  8CD1 ED 4B CA 88  	ld bc,(Puntero_objeto)
1246  8CD5 B7 ED 42     	sub hl,bc
1247  8CD8 C0           	ret nz
1248  8CD9 21 F0 88     	ld hl,Ctrl_0
1249  8CDC CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1250  8CDE C9           	ret 												; _de nuestra nave en los extremos.
1251  8CDF
1252  8CDF              ; *************************************************************************************************************************************************************
1253  8CDF              ;
1254  8CDF              ;	14/5/23
1255  8CDF              ;
1256  8CDF              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1257  8CDF              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1258  8CDF
1259  8CDF              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1260  8CDF              ;	_de la 2ª y 3ª entidad respectivamente.
1261  8CDF
1262  8CDF              Store_Restore_cajas
1263  8CDF
1264  8CDF E5           	push hl
1265  8CE0 D5           	push de
1266  8CE1 C5            	push bc
1267  8CE2
1268  8CE2              ;	STORE !!!!!
1269  8CE2              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1270  8CE2
1271  8CE2 21 C6 88     	ld hl,Filas
1272  8CE5 ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1273  8CE9 01 3D 00     	ld bc,61
1274  8CEC ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1275  8CEE
1276  8CEE              ; 	Entidad_sospechosa. 20/4/23
1277  8CEE
1278  8CEE 3A DF 88     	ld a,(Impacto)
1279  8CF1 A7           	and a
1280  8CF2 28 0C        	jr z,1F
1281  8CF4
1282  8CF4 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1283  8CF7 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1284  8CFA A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1285  8CFB ED 4A        	adc hl,bc 											; _ "0" más adelante.
1286  8CFD 22 44 89     	ld (Entidad_sospechosa_de_colision),hl
1287  8D00
1288  8D00              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1289  8D00
1290  8D00 2A 08 89     1 ld hl,(Puntero_restore_caja)
1291  8D03 7E           	ld a,(hl)
1292  8D04 A7           	and a
1293  8D05 F5           	push af
1294  8D06 28 08        	jr z,2F
1295  8D08
1296  8D08 11 C6 88     	ld de,Filas
1297  8D0B 01 3D 00     	ld bc,61
1298  8D0E ED B0        	ldir
1299  8D10
1300  8D10 CD 2C 8D     2 call Incrementa_punteros_de_cajas
1301  8D13
1302  8D13 F1           	pop af
1303  8D14 28 EA        	jr z,1B
1304  8D16
1305  8D16 C1           	pop bc
1306  8D17 D1           	pop de
1307  8D18 E1           	pop hl
1308  8D19
1309  8D19 C9           	ret
1310  8D1A
1311  8D1A              ; **************************************************************************************************
1312  8D1A              ;
1313  8D1A              ;	12/05/23
1314  8D1A              ;
1315  8D1A              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1316  8D1A
1317  8D1A E5           Restore_entidad push hl
1318  8D1B D5           	push de
1319  8D1C C5            	push bc
1320  8D1D
1321  8D1D 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1322  8D20 11 C6 88     	ld de,Filas
1323  8D23 01 3D 00     	ld bc,61
1324  8D26 ED B0        	ldir
1325  8D28
1326  8D28 C1           	pop bc
1327  8D29 D1           	pop de
1328  8D2A E1           	pop hl
1329  8D2B C9           	ret
1330  8D2C
1331  8D2C              ; **************************************************************************************************
1332  8D2C              ;
1333  8D2C              ;	08/05/23
1334  8D2C              ;
1335  8D2C              ;	Incrementamos los dos punteros de entidades. (+1).
1336  8D2C
1337  8D2C              Incrementa_punteros_de_cajas
1338  8D2C
1339  8D2C 2A 08 89     	ld hl,(Puntero_restore_caja)
1340  8D2F 22 06 89     	ld (Puntero_store_caja),hl
1341  8D32 2A 0A 89     	ld hl,(Indice_restore_caja)
1342  8D35 23           	inc hl
1343  8D36 23           	inc hl
1344  8D37 22 0A 89     	ld (Indice_restore_caja),hl
1345  8D3A CD 91 8C         call Extrae_address
1346  8D3D 22 08 89         ld (Puntero_restore_caja),hl
1347  8D40 C9               ret
1348  8D41
1349  8D41              ; **************************************************************************************************
1350  8D41              ;
1351  8D41              ;	25/01/23
1352  8D41              ;
1353  8D41              ;	Restore_Amadeus
1354  8D41              ;
1355  8D41              ;	Cargamos en DRAW los parámetros de Amadeus.
1356  8D41              ;
1357  8D41
1358  8D41 E5           Restore_Amadeus	push hl
1359  8D42 D5           	push de
1360  8D43 C5            	push bc
1361  8D44 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1362  8D47 11 C6 88     	ld de,Filas
1363  8D4A 01 3D 00     	ld bc,61
1364  8D4D ED B0        	ldir
1365  8D4F C1           	pop bc
1366  8D50 D1           	pop de
1367  8D51 E1           	pop hl
1368  8D52 C9           	ret
1369  8D53
1370  8D53              ; *************************************************************************************************************************************************************
1371  8D53              ;
1372  8D53              ;	29/04/23
1373  8D53              ;
1374  8D53              ;	Store_Amadeus
1375  8D53              ;
1376  8D53              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1377  8D53              ;
1378  8D53              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1379  8D53              ;
1380  8D53              ;	DESTRUYE: HL y BC y DE.
1381  8D53
1382  8D53 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1383  8D56 01 3D 00     	ld bc,61
1384  8D59 ED B0        	ldir
1385  8D5B C9           	ret
1386  8D5C
1387  8D5C              ; -----------------------------------------------------------
1388  8D5C              ;
1389  8D5C              ;	27/04/23
1390  8D5C              ;
1391  8D5C              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1392  8D5C              ;
1393  8D5C              ;	Destruye: HL,BC,DE,A
1394  8D5C
1395  8D5C 21 C6 88     Borra_datos_entidad ld hl,Filas
1396  8D5F 01 3C 00     	ld bc,60
1397  8D62 AF           	xor a
1398  8D63 77           	ld (hl),a
1399  8D64 11 C7 88     	ld de,Filas+1
1400  8D67 ED B0        	ldir
1401  8D69 C9           	ret
1402  8D6A
1403  8D6A              ; -----------------------------------------------------------
1404  8D6A
1405  8D6A              ; Teclado.
1406  8D6A
1407  8D6A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1408  8D6C DB FE        	in a,($fe)
1409  8D6E E6 01        	and $01
1410  8D70 28 02        	jr z,1f
1411  8D72 18 F6        	jr Pulsa_ENTER
1412  8D74 C9           1 ret
1413  8D75
1414  8D75              ; **************************************************************************************************
1415  8D75              ;
1416  8D75              ; Temporización.
1417  8D75
1418  8D75              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1419  8D75              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1420  8D75              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1421  8D75              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1422  8D75
1423  8D75              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1424  8D75              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1425  8D75              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1426  8D75
1427  8D75              ; A partir de $4f61 no hace falta DELAY.
1428  8D75
1429  8D75              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1430  8D75
1431  8D75 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1432  8D78 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1433  8D79 78           	LD A,B
1434  8D7A A7           	AND A
1435  8D7B 20 FB        	JR NZ,wait
1436  8D7D C9           	RET
1437  8D7E
1438  8D7E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1439  8D7E              ;
1440  8D7E              ;	5/3/23
1441  8D7E              ;
1442  8D7E              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1443  8D7E
1444  8D7E              Movimiento_Amadeus
1445  8D7E
1446  8D7E              ; Disparo.
1447  8D7E
1448  8D7E              ;	ld a,(Disparo_Amadeus)
1449  8D7E              ;	and a
1450  8D7E              ;	jr nz,1F
1451  8D7E              ;	jr 2F
1452  8D7E
1453  8D7E              ;1 ld a,$f7													; "5" para disparar.
1454  8D7E              ;	in a,($fe)
1455  8D7E              ;	and $10
1456  8D7E
1457  8D7E              ;	push af
1458  8D7E              ;	call z,Genera_disparo
1459  8D7E              ;	pop af
1460  8D7E              ;	jr nz,2F
1461  8D7E
1462  8D7E              ;	ld a,(Disparo_Amadeus)
1463  8D7E              ;	xor 1
1464  8D7E              ;	ld (Disparo_Amadeus),a
1465  8D7E
1466  8D7E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1467  8D80 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1468  8D82 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1469  8D84 CC FB 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1470  8D87
1471  8D87 3E F7        	ld a,$f7
1472  8D89 DB FE        	in a,($fe)
1473  8D8B E6 01        	and $01
1474  8D8D C8           	ret z
1475  8D8E
1476  8D8E 3E F7        	ld a,$f7
1477  8D90 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1478  8D92 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1479  8D94 CC DD 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1480  8D97 C9           	ret
1481  8D98
1482  8D98              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1483  8D98              ;
1484  8D98              ;	Rutina provisional para que los malotes cagen balas.
1485  8D98
1486  8D98              Detecta_disparo_entidad
1487  8D98
1488  8D98 3A 59 89     	ld a,(Disparo_entidad)
1489  8D9B A7           	and a
1490  8D9C C8           	ret z
1491  8D9D
1492  8D9D              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1493  8D9D
1494  8D9D              ;	ld a,$7f				; Detecta SPACE.
1495  8D9D              ;	in a,($fe)
1496  8D9D              ;	and 1
1497  8D9D              ;	ret nz
1498  8D9D
1499  8D9D              ;	call Genera_disparo
1500  8D9D C9           	ret
1501  8D9E
1502  8D9E              ; ----------------------------------------------------------------------
1503  8D9E              ;
1504  8D9E              ;	8/9/23
1505  8D9E
1506  8D9E 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1507  8DA1 2B            	dec hl
1508  8DA2 7E           	ld a,(hl)
1509  8DA3 A7           	and a
1510  8DA4 C8           	ret z										; Salimos si es álbum está vacío.
1511  8DA5
1512  8DA5 11 E5 88     	ld de,Variables_de_borrado+5
1513  8DA8 01 06 00     	ld bc,6
1514  8DAB ED B8        	lddr
1515  8DAD C9           	ret
1516  8DAE
1517  8DAE              ; ----------------------------------------------------------------------
1518  8DAE              ;
1519  8DAE              ;	9/9/23
1520  8DAE
1521  8DAE              Repone_datos_de_borrado_Amadeus
1522  8DAE
1523  8DAE 21 E0 88     	ld hl,Variables_de_borrado
1524  8DB1 11 B0 72     	ld de,Album_de_fotos_Amadeus
1525  8DB4 01 06 00     	ld bc,6
1526  8DB7 ED B0        	ldir
1527  8DB9
1528  8DB9 EB           	ex de,hl
1529  8DBA 22 22 89     	ld (End_Snapshot_Amadeus),hl
1530  8DBD
1531  8DBD C9           	ret
1532  8DBE
1533  8DBE              ; ----------------------------------------------------------------------
1534  8DBE              ;
1535  8DBE              ;	27/10/23
1536  8DBE              ;
1537  8DBE
1538  8DBE              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1539  8DBE              ;	_ Album_de_fotos correspondiente.
1540  8DBE
1541  8DBE              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1542  8DBE              ;	_ durante el proceso de escritura.
1543  8DBE
1544  8DBE              Repone_datos_de_borrado
1545  8DBE
1546  8DBE F3           	di
1547  8DBF
1548  8DBF ED 5B 1A 89  	ld de,(Stack_snapshot)
1549  8DC3 21 E0 88     	ld hl,Variables_de_borrado
1550  8DC6 01 06 00     	ld bc,6
1551  8DC9 ED B0        	ldir
1552  8DCB FB           	ei
1553  8DCC
1554  8DCC EB           	ex de,hl
1555  8DCD 22 1A 89     	ld (Stack_snapshot),hl
1556  8DD0
1557  8DD0 C9           	ret
1558  8DD1
1559  8DD1              ; ----------------------------------------------------------------------
1560  8DD1              ;
1561  8DD1              ;	11/8/23
1562  8DD1
1563  8DD1              Gestiona_entidades
1564  8DD1
1565  8DD1              ;	call Extrae_foto_disparos
1566  8DD1              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1567  8DD1
1568  8DD1 CD FB 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1569  8DD4
1570  8DD4              ;	BUFFER vacío ??????
1571  8DD4              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1572  8DD4
1573  8DD4 3A 3D 89     	ld a,(Ctrl_Semaforo)
1574  8DD7 CB 67        	bit 4,a
1575  8DD9 28 05        	jr z,1F
1576  8DDB
1577  8DDB              ;! Buffer vacío. Inicializar (Ctrl_Semaforo) y salir sin modificar punteros.
1578  8DDB
1579  8DDB AF           	xor a
1580  8DDC 32 3D 89     	ld (Ctrl_Semaforo),a
1581  8DDF C9           	ret
1582  8DE0
1583  8DE0 CB 47        1 bit 0,a
1584  8DE2 C0           	ret nz
1585  8DE3
1586  8DE3              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1587  8DE3              ; Nos situamos al comienzo del último álbum.
1588  8DE3
1589  8DE3 CD 55 73     	call Modifica_Stack_snapshot
1590  8DE6
1591  8DE6 C9           	ret
1592  8DE7
1593  8DE7              ; -----------------------------------------------------------------------------------
1594  8DE7
1595  8DE7              Pinta_Amadeus
1596  8DE7
1597  8DE7 3E 06        	ld a,6
1598  8DE9 D3 FE            out ($fe),a										; Amarillo
1599  8DEB
1600  8DEB CD 5D 8C        	call Calcula_malotes_Amadeus
1601  8DEE CD AC 96     	call Extrae_foto_Amadeus
1602  8DF1 CD 19 8C     	call Limpia_album_Amadeus
1603  8DF4
1604  8DF4 C9           	ret
1605  8DF5
1606  8DF5              Pinta_entidades
1607  8DF5
1608  8DF5 3A 3C 89     	ld a,(Semaforo)
1609  8DF8 CB 47        	bit 0,a
1610  8DFA C8           	ret z
1611  8DFB
1612  8DFB              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1613  8DFB
1614  8DFB CD 41 8C     	call Calcula_numero_de_malotes
1615  8DFE CD 2A 96     	call Extrae_foto_entidades
1616  8E01
1617  8E01 C9           	ret
1618  8E02
1619  8E02              ; -----------------------------------------------------------------------------------
1620  8E02              ;
1621  8E02              ;	12/11/23
1622  8E02              ;
1623  8E02              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1624  8E02
1625  8E02              Actualiza_relojes
1626  8E02
1627  8E02 21 51 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1628  8E05 34           	inc (hl)
1629  8E06
1630  8E06 34           	inc (hl)
1631  8E07 35           	dec (hl)
1632  8E08 C0           	ret nz
1633  8E09
1634  8E09 21 52 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1635  8E0C 34           	inc (hl)
1636  8E0D C9           	ret
1637  8E0E
1638  8E0E              ; ---------------------------------------------------------------
1639  8E0E              ;
1640  8E0E              ;	27/9/23
1641  8E0E
1642  8E0E              Guarda_parametros_DRAW
1643  8E0E
1644  8E0E 21 C6 88     	ld hl,Filas
1645  8E11 11 BD 72     	ld de,Almacen_de_parametros_DRAW
1646  8E14 01 3D 00     	ld bc,61
1647  8E17 ED B0        	ldir
1648  8E19 C9           	ret
1649  8E1A
1650  8E1A              Recupera_parametros_DRAW
1651  8E1A
1652  8E1A 21 BD 72     	ld hl,Almacen_de_parametros_DRAW
1653  8E1D 11 C6 88     	ld de,Filas
1654  8E20 01 3D 00     	ld bc,61
1655  8E23 ED B0        	ldir
1656  8E25 C9           	ret
1657  8E26
1658  8E26              ; ---------------------------------------------------------------
1659  8E26
1660  8E26              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E26              ; ******************************************************************************************************************************************************************************************
   2+ 8E26              ;
   3+ 8E26              ;   21/07/23
   4+ 8E26              ;
   5+ 8E26              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E26              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E26              ;
   8+ 8E26              ;
   9+ 8E26              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E26              ;
  11+ 8E26              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E26              ;               _ hacen las entidades hacia abajo.
  13+ 8E26              ;
  14+ 8E26              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E26              ;
  16+ 8E26              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E26              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E26              ;
  19+ 8E26              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E26              ;           _ la bala.
  21+ 8E26              ;
  22+ 8E26              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E26              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E26              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E26              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E26              ;           _ en el momento de generarse la bala)).
  27+ 8E26
  28+ 8E26              Genera_disparo
  29+ 8E26
  30+ 8E26              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E26              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E26              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E26              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E26              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E26              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E26              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E26
  38+ 8E26              ; Exclusiones:
  39+ 8E26
  40+ 8E26 3A DE 88         ld a,(Vel_down)
  41+ 8E29 47               ld b,a
  42+ 8E2A 3A 50 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E2D B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E2E D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E2F 3A FD 88         ld a,(Columnas)
  46+ 8E32 47               ld b,a
  47+ 8E33 3A C7 88         ld a,(Columns)
  48+ 8E36 B8               cp b
  49+ 8E37 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E38
  51+ 8E38              ; ----- ----- -----
  52+ 8E38
  53+ 8E38 3A F0 88         ld a,(Ctrl_0)
  54+ 8E3B CB 77            bit 6,a
  55+ 8E3D 20 06            jr nz,14F
  56+ 8E3F
  57+ 8E3F 3A CD 88         ld a,(Coordenada_y)
  58+ 8E42 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E44 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E45
  61+ 8E45 21 00 80     14 ld hl,Indice_disparo
  62+ 8E48 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8E4B 4F               ld c,a
  64+ 8E4C 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E4E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E4E              ;                                            ""        ""       "f9", B="1"
  67+ 8E4E              ;                                            ""        ""       "fb", B="2"
  68+ 8E4E              ;                                            ""        ""       "fb", B="3"
  69+ 8E4E A7               and a
  70+ 8E4F 28 10            jr z,1F
  71+ 8E51 E6 01            and 1
  72+ 8E53 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E54
  74+ 8E54 79               ld a,c
  75+ 8E55 16 F9            ld d,$f9
  76+ 8E57 23           2 inc hl
  77+ 8E58 23               inc hl
  78+ 8E59 04               inc b
  79+ 8E5A BA               cp d
  80+ 8E5B 28 04            jr z,1F
  81+ 8E5D 14               inc d
  82+ 8E5E 14               inc d
  83+ 8E5F 18 F6            jr 2B
  84+ 8E61
  85+ 8E61 CD 91 8C     1 call Extrae_address
  86+ 8E64 E5               push hl
  87+ 8E65 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E67 DD 21 F2 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E6B
  90+ 8E6B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E6B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E6B
  93+ 8E6B 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E6E CB 77            bit 6,a
  95+ 8E70 20 04            jr nz,19F
  96+ 8E72
  97+ 8E72 AF               xor a
  98+ 8E73 32 59 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E76
 100+ 8E76 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8E79 FE 02            cp 2
 102+ 8E7B 38 66            jr c,3F
 103+ 8E7D 28 64            jr z,3F
 104+ 8E7F
 105+ 8E7F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E7F
 107+ 8E7F E6 01            and 1
 108+ 8E81 28 30            jr z,4F
 109+ 8E83
 110+ 8E83              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E83              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E83              ;
 113+ 8E83              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E83              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E83              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E83
 117+ 8E83 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8E86
 119+ 8E86              ;   Amadeus o entidad ???.
 120+ 8E86
 121+ 8E86 3A F0 88         ld a,(Ctrl_0)
 122+ 8E89 CB 77            bit 6,a
 123+ 8E8B 28 0A            jr z,8F
 124+ 8E8D
 125+ 8E8D              ; 	Dispara Amadeus.
 126+ 8E8D
 127+ 8E8D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E8F CD 1B 96         call PreviousScan
 129+ 8E92 CD 1B 96         call PreviousScan
 130+ 8E95
 131+ 8E95              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E95              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E95              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E95              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E95
 136+ 8E95 18 11            jr 10F
 137+ 8E97
 138+ 8E97              ; 	Dispara Entidad.
 139+ 8E97
 140+ 8E97 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E9A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E9A
 143+ 8E9A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E9A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E9A
 146+ 8E9A C5               push bc
 147+ 8E9B 06 10            ld b,16
 148+ 8E9D CD 0C 96     9 call NextScan
 149+ 8EA0 10 FB            djnz 9B
 150+ 8EA2 C1               pop bc
 151+ 8EA3 CD 0D 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EA6 18 06            jr 17F
 153+ 8EA8
 154+ 8EA8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EA8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EA8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EA8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EA8
 159+ 8EA8 CD 0D 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EAB CD 82 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EAE              ;                                                      ; _al generar el disparo.
 162+ 8EAE
 163+ 8EAE              ; 	LLegados a este punto tendremos:
 164+ 8EAE              ;
 165+ 8EAE              ;       Puntero_objeto_disparo en IY.
 166+ 8EAE              ;       Rutinas_de_impresion en IX.
 167+ 8EAE              ;       Puntero_de_impresion en HL.
 168+ 8EAE              ;       Impacto/Dirección en BC.
 169+ 8EAE
 170+ 8EAE CD 15 8F     17 call Almacena_disparo
 171+ 8EB1 18 52            jr 6F                                             ; RET.
 172+ 8EB3
 173+ 8EB3              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EB3              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EB3              ;
 176+ 8EB3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EB3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EB3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EB3
 180+ 8EB3 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8EB6
 182+ 8EB6              ;   Amadeus o entidad ???.
 183+ 8EB6
 184+ 8EB6 3A F0 88         ld a,(Ctrl_0)
 185+ 8EB9 CB 77            bit 6,a
 186+ 8EBB 28 0A            jr z,11F
 187+ 8EBD
 188+ 8EBD              ; 	Dispara Amadeus.
 189+ 8EBD
 190+ 8EBD 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EBF CD 1B 96         call PreviousScan
 192+ 8EC2 CD 1B 96         call PreviousScan
 193+ 8EC5
 194+ 8EC5              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EC5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EC5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EC5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EC5
 199+ 8EC5 18 11            jr 13F
 200+ 8EC7
 201+ 8EC7              ; 	Dispara Entidad.
 202+ 8EC7
 203+ 8EC7 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8ECA              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8ECA
 206+ 8ECA              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8ECA              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8ECA
 209+ 8ECA C5               push bc
 210+ 8ECB 06 10            ld b,16
 211+ 8ECD CD 0C 96     12 call NextScan
 212+ 8ED0 10 FB            djnz 12B
 213+ 8ED2 C1               pop bc
 214+ 8ED3
 215+ 8ED3 CD 06 8F         call Ajusta_disparo_parte_derecha
 216+ 8ED6 18 06            jr 18F
 217+ 8ED8
 218+ 8ED8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8ED8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8ED8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8ED8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8ED8
 223+ 8ED8 CD 06 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EDB CD 82 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EDE              ;                                                       ; _al generar el disparo.
 226+ 8EDE
 227+ 8EDE              ; LLegados a este punto tendremos:
 228+ 8EDE              ;
 229+ 8EDE              ;       Puntero_objeto_disparo en IY.
 230+ 8EDE              ;       Rutinas_de_impresion en IX.
 231+ 8EDE              ;       Puntero_de_impresion en HL.
 232+ 8EDE              ;       Impacto/Dirección en BC.
 233+ 8EDE
 234+ 8EDE CD 15 8F     18 call Almacena_disparo
 235+ 8EE1 18 22            jr 6F                                               ; RET.
 236+ 8EE3
 237+ 8EE3              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EE3
 239+ 8EE3 28 11        3 jr z,5F
 240+ 8EE5
 241+ 8EE5              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EE5              ;
 243+ 8EE5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EE5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EE5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EE5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EE5
 248+ 8EE5              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EE5              ;	   ""        ""       "f9", B="1"
 250+ 8EE5              ;	   ""        ""       "fb", B="2"
 251+ 8EE5              ; 	   ""        ""       "fb", B="3"
 252+ 8EE5
 253+ 8EE5 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8EE8 CD 0C 96     	call NextScan
 255+ 8EEB
 256+ 8EEB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EEB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EEB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EEB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EEB
 261+ 8EEB CD 0D 8F         call Ajusta_disparo_parte_izquierda
 262+ 8EEE
 263+ 8EEE              ; 	No se produce impacto. B="$80"
 264+ 8EEE              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EEE
 266+ 8EEE 01 80 80         ld bc,$8080
 267+ 8EF1
 268+ 8EF1              ; 	LLegados a este punto tendremos:
 269+ 8EF1              ;
 270+ 8EF1              ;       Puntero_objeto_disparo en IY.
 271+ 8EF1              ;       Rutinas_de_impresion en IX.
 272+ 8EF1              ;       Puntero_de_impresion en HL.
 273+ 8EF1              ;       Impacto/Dirección en BC.
 274+ 8EF1
 275+ 8EF1 CD 15 8F         call Almacena_disparo
 276+ 8EF4 18 0F            jr 6F                                           ; RET.
 277+ 8EF6
 278+ 8EF6              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8EF6              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8EF6              ;
 281+ 8EF6              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8EF6              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8EF6              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8EF6              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8EF6
 286+ 8EF6 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8EF9 CD 0C 96     	call NextScan
 288+ 8EFC
 289+ 8EFC              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8EFC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8EFC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8EFC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8EFC
 294+ 8EFC CD 06 8F         call Ajusta_disparo_parte_derecha
 295+ 8EFF
 296+ 8EFF              ; 	No se produce impacto. B="$80"
 297+ 8EFF              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8EFF
 299+ 8EFF 01 80 80     15 ld bc,$8080
 300+ 8F02
 301+ 8F02              ; 	LLegados a este punto tendremos:
 302+ 8F02              ;
 303+ 8F02              ;       Puntero_objeto_disparo en IY.
 304+ 8F02              ;       Rutinas_de_impresion en IX.
 305+ 8F02              ;       Puntero_de_impresion en HL.
 306+ 8F02              ;       Impacto/Dirección en BC.
 307+ 8F02
 308+ 8F02 CD 15 8F         call Almacena_disparo
 309+ 8F05
 310+ 8F05 C9           6 ret
 311+ 8F06
 312+ 8F06              ; ----------------------------------------------------------------
 313+ 8F06              ;
 314+ 8F06              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F06              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F06              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F06
 318+ 8F06 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F07 FE 02            cp 2
 320+ 8F09 38 01            jr c,1F
 321+ 8F0B 23               inc hl
 322+ 8F0C C9           1 ret
 323+ 8F0D
 324+ 8F0D 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F0E FE 01        	cp 1
 326+ 8F10 20 01        	jr nz,1F
 327+ 8F12 2B           	dec hl
 328+ 8F13 2B           1 dec hl
 329+ 8F14 C9               ret
 330+ 8F15
 331+ 8F15              ; ----------------------------------------------------------------
 332+ 8F15              ;
 333+ 8F15              ;   25/02/23
 334+ 8F15              ;
 335+ 8F15              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F15              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F15              ;
 338+ 8F15              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F15              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F15
 341+ 8F15              Almacena_disparo
 342+ 8F15
 343+ 8F15 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F16 F1               pop af
 345+ 8F17 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F18
 347+ 8F18 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F19 E6 01            and 1
 349+ 8F1B 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F1D              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F1D              ; 	Dispara AMADEUS.
 352+ 8F1D
 353+ 8F1D              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F1D              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F1D              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F1D              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F1D
 358+ 8F1D C5               push bc
 359+ 8F1E 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F21 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F24 A7               and a
 362+ 8F25 ED 42            sbc hl,bc
 363+ 8F27 CC 12 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F2A C1               pop bc
 365+ 8F2B 28 54            jr z,4F
 366+ 8F2D
 367+ 8F2D 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F30 23               inc hl
 369+ 8F31 23               inc hl
 370+ 8F32 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F35              ;                                                   ; _ Disparo_(+1).
 372+ 8F35 18 18            jr 2F
 373+ 8F37
 374+ 8F37              ; Dispara una entidad.
 375+ 8F37
 376+ 8F37 C5           1 push bc
 377+ 8F38 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F3B 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F3E A7               and a
 380+ 8F3F ED 42            sbc hl,bc
 381+ 8F41 CC 0B 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F44 C1               pop bc
 383+ 8F45 28 3A            jr z,4F
 384+ 8F47
 385+ 8F47 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F4A 23               inc hl
 387+ 8F4B 23               inc hl
 388+ 8F4C 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F4F              ;                                                   ; _ Disparo_(+1).
 390+ 8F4F CD 91 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F52              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F52              ;
 393+ 8F52              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F52              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F52              ;                                                     Puntero_de_impresion en HL.
 396+ 8F52              ;                                                     Impacto/Dirección en BC.
 397+ 8F52
 398+ 8F52 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F53 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F54 23               inc hl                                          ; _ al siguiente.
 401+ 8F55 A7               and a
 402+ 8F56 20 C0            jr nz,3B
 403+ 8F58
 404+ 8F58 08               ex af,af
 405+ 8F59 ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F5D F9               ld sp,hl
 407+ 8F5E
 408+ 8F5E DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F60 F5               push af                                         ; Puntero de impresión.
 410+ 8F61 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F63 C5               push bc                                         ; Control.
 412+ 8F64
 413+ 8F64 ED 7B 14 89      ld sp,(Stack)
 414+ 8F68
 415+ 8F68              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F68
 417+ 8F68 21 03 89     	ld hl,Ctrl_1
 418+ 8F6B CB C6        	set 0,(hl)
 419+ 8F6D
 420+ 8F6D DD E5        	push ix
 421+ 8F6F E1               pop hl
 422+ 8F70 F5               push af
 423+ 8F71 DD E1            pop ix
 424+ 8F73
 425+ 8F73 CD A0 7F     	call Guarda_foto_registros
 426+ 8F76
 427+ 8F76 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F79 CB 86        	res 0,(hl)
 429+ 8F7B
 430+ 8F7B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F7B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F7B
 433+ 8F7B CD 12 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F7E CD 0B 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8F81
 436+ 8F81 C9           4 ret
 437+ 8F82
 438+ 8F82              ; ----------------------------------------------------------------
 439+ 8F82              ;
 440+ 8F82              ;   4/3/23
 441+ 8F82              ;
 442+ 8F82              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F82              ;   _ al generarse el disparo.
 444+ 8F82              ;
 445+ 8F82              ;       "$80" ..... No se produce colisión.
 446+ 8F82              ;       "$81" ..... Se produce colisión.
 447+ 8F82              ;
 448+ 8F82              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F82              ;         _ que forman el disparo.
 450+ 8F82
 451+ 8F82
 452+ 8F82              Comprueba_Colision
 453+ 8F82
 454+ 8F82              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F82
 456+ 8F82 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F84 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F85
 459+ 8F85 CD BB 8F         call Modifica_H_Velocidad_disparo
 460+ 8F88
 461+ 8F88 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F89 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F8B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F8D
 465+ 8F8D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F8F CD AB 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F92
 468+ 8F92 7B               ld a,e
 469+ 8F93 E6 01            and 1
 470+ 8F95 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F97              ;                                                  ; _ para activar IMPACTO.
 472+ 8F97 E1               pop hl
 473+ 8F98 E5               push hl
 474+ 8F99 CD 0C 96         call NextScan
 475+ 8F9C
 476+ 8F9C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F9D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F9F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FA1              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FA1 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FA3 CD AB 8F         call Bucle_2
 482+ 8FA6
 483+ 8FA6 43           1 ld b,e
 484+ 8FA7 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FA8 FD E1            pop iy
 486+ 8FAA C9               ret
 487+ 8FAB
 488+ 8FAB              ; ---------- ----------
 489+ 8FAB
 490+ 8FAB 06 02        Bucle_2 ld b,2
 491+ 8FAD FD 7E 00     2 ld a,(iy)
 492+ 8FB0 A6               and (hl)
 493+ 8FB1 28 02            jr z,1F
 494+ 8FB3 1E 81            ld e,$81
 495+ 8FB5 23           1 inc hl
 496+ 8FB6 FD 23            inc iy
 497+ 8FB8 10 F3            djnz 2B
 498+ 8FBA C9               ret
 499+ 8FBB
 500+ 8FBB              ; ---------- ----------
 501+ 8FBB              ;
 502+ 8FBB              ;   21/7/23
 503+ 8FBB
 504+ 8FBB              Modifica_H_Velocidad_disparo
 505+ 8FBB
 506+ 8FBB 3A 50 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FBE FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FC0 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FC1 24               inc h
 510+ 8FC2
 511+ 8FC2 C9               ret
 512+ 8FC3
 513+ 8FC3              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FC3              ;
 515+ 8FC3              ;   11/04/23
 516+ 8FC3              ;
 517+ 8FC3              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FC3              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FC3              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FC3              ;
 521+ 8FC3              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FC3
 523+ 8FC3              Compara_coordenadas_X
 524+ 8FC3
 525+ 8FC3              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FC3              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FC3
 528+ 8FC3              ; Preparamos registros:
 529+ 8FC3
 530+ 8FC3 21 CC 88         ld hl,Filas+6
 531+ 8FC6 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FC7 23               inc hl
 533+ 8FC8 23               inc hl
 534+ 8FC9 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FCA 43               ld b,e
 536+ 8FCB
 537+ 8FCB 21 DA 88         ld hl,Filas+20
 538+ 8FCE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FCF 21 4B 89         ld hl,Coordenadas_X_Entidad
 540+ 8FD2 CD EE 91         call Guarda_coordenadas_X
 541+ 8FD5
 542+ 8FD5              ; Preparamos registros:
 543+ 8FD5
 544+ 8FD5 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FD8 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FD9 23               inc hl
 547+ 8FDA 23               inc hl
 548+ 8FDB 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FDC 7B               ld a,e
 550+ 8FDD 08               ex af,af'
 551+ 8FDE 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FE1 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FE2 21 48 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FE5 CD EE 91         call Guarda_coordenadas_X
 555+ 8FE8
 556+ 8FE8              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8FE8              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8FE8
 559+ 8FE8 04               inc b
 560+ 8FE9 05               dec b
 561+ 8FEA 28 04            jr z,1F
 562+ 8FEC 06 03            ld b,3
 563+ 8FEE 18 02            jr 2F
 564+ 8FF0 06 02        1 ld b,2
 565+ 8FF2 08           2 ex af,af'
 566+ 8FF3 3C               inc a
 567+ 8FF4 3D               dec a
 568+ 8FF5 28 04            jr z,5F
 569+ 8FF7 0E 03            ld c,3
 570+ 8FF9 18 02            jr 6F
 571+ 8FFB 0E 02        5 ld c,2
 572+ 8FFD 79           6 ld a,c
 573+ 8FFE 08               ex af,af'
 574+ 8FFF 11 4B 89         ld de,Coordenadas_X_Entidad
 575+ 9002 1A           4 ld a,(de)
 576+ 9003 21 48 89         ld hl,Coordenadas_X_Amadeus
 577+ 9006 BE           3 cp (hl)
 578+ 9007 28 0E            jr z,7F
 579+ 9009 23               inc hl
 580+ 900A 0D               dec c
 581+ 900B 20 F9            jr nz,3B
 582+ 900D 13               inc de
 583+ 900E 08               ex af,af'
 584+ 900F 4F               ld c,a
 585+ 9010 08               ex af,af'
 586+ 9011 10 EF            djnz 4B
 587+ 9013
 588+ 9013              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9013
 590+ 9013 CD 2A 92     8 call Limpia_Coordenadas_X
 591+ 9016 C9               ret
 592+ 9017
 593+ 9017 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9019 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 901C 21 43 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 901F CB D6            set 2,(hl)
 597+ 9021 18 F0            jr 8B
 598+ 9023
 599+ 9023              ; -----------------------------------------------------------------------
 600+ 9023              ;
 601+ 9023              ;   17/04/23
 602+ 9023              ;
 603+ 9023
 604+ 9023              Detecta_colision_nave_entidad
 605+ 9023
 606+ 9023              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9023
 608+ 9023 2A C8 88         ld hl,(Posicion_actual)
 609+ 9026 CD 67 95         call Calcula_puntero_de_impresion
 610+ 9029
 611+ 9029              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9029              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9029
 614+ 9029 DD E5            push ix
 615+ 902B E1               pop hl
 616+ 902C E5               push hl
 617+ 902D
 618+ 902D              ; ----- ----- -----
 619+ 902D 1E 00            ld e,0                                         ; Indica impacto.
 620+ 902F 06 0A            ld b,10
 621+ 9031 CD 61 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9034 7B               ld a,e
 623+ 9035 FE 05            cp 5
 624+ 9037 38 0E            jr c,3F
 625+ 9039
 626+ 9039              ; LLegados a este punto:
 627+ 9039              ;
 628+ 9039              ;   HAY COLISIÓN !!!!!.
 629+ 9039              ;
 630+ 9039              ;   .db (Impacto) de Amadeus a "1".
 631+ 9039              ;   SET el bit3 de (Impacto2).
 632+ 9039              ;
 633+ 9039              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9039
 635+ 9039 21 B7 85         ld hl,Amadeus_db+25
 636+ 903C 36 01            ld (hl),1
 637+ 903E 21 43 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9041 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9043 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9045 18 18            jr 1F
 641+ 9047
 642+ 9047              ; -----
 643+ 9047
 644+ 9047 E1           3 pop hl
 645+ 9048 CD 0C 96         call NextScan
 646+ 904B E5               push hl
 647+ 904C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 904D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 904F 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9051 30 0C            jr nc,1F
 651+ 9053              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9053 10 DC            djnz 2B
 653+ 9055
 654+ 9055              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9055
 656+ 9055              ; LLegados a este punto:
 657+ 9055              ;
 658+ 9055              ;   NO HAY COLISIÓN !!!!!.
 659+ 9055              ;
 660+ 9055              ;   .db (Impacto) de Amadeus a "0".
 661+ 9055              ;   RES el bit2 de (Impacto2).
 662+ 9055              ;
 663+ 9055              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9055              ;   Lo colocamos a "0".
 665+ 9055
 666+ 9055 21 43 89         ld hl,Impacto2
 667+ 9058 CB 96            res 2,(hl)
 668+ 905A 2A 44 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 905D 36 00            ld (hl),0
 670+ 905F
 671+ 905F E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9060 C9               ret
 673+ 9061
 674+ 9061               ; ---------- ----------
 675+ 9061
 676+ 9061 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9062 3A C7 88         ld a,(Columns)
 678+ 9065 47               ld b,a
 679+ 9066 FD 7E 00     2 ld a,(iy)
 680+ 9069 BE               cp (hl)
 681+ 906A 28 01            jr z,1F
 682+ 906C
 683+ 906C 1C               inc e
 684+ 906D
 685+ 906D 23           1 inc hl
 686+ 906E FD 23            inc iy
 687+ 9070 10 F4            djnz 2B
 688+ 9072 C1               pop bc
 689+ 9073 C9               ret
 690+ 9074
 691+ 9074              ; -------------------------------------------------------------------------------------------------------------
 692+ 9074              ;
 693+ 9074              ;   13/03/23
 694+ 9074              ;
 695+ 9074              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9074              ;
 697+ 9074              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9074
 699+ 9074 21 58 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9077 7E               ld a,(hl)
 701+ 9078 A7               and a
 702+ 9079 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 907A
 704+ 907A 44               ld b,h
 705+ 907B 4D               ld c,l
 706+ 907C 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 907F E5               push hl
 708+ 9080 A7               and a
 709+ 9081 ED 42            sbc hl,bc
 710+ 9083 E5               push hl
 711+ 9084 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9085
 713+ 9085 E1               pop hl
 714+ 9086 54               ld d,h
 715+ 9087 5D               ld e,l
 716+ 9088 1B               dec de
 717+ 9089 ED B8            lddr                                                ; Limpiamos.
 718+ 908B
 719+ 908B 21 58 71         ld hl,Album_de_fotos_disparos
 720+ 908E 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 9091
 722+ 9091 C9               ret
 723+ 9092
 724+ 9092              ; -------------------------------------------------------------------------------------------------------------
 725+ 9092              ;
 726+ 9092              ;   18/07/23
 727+ 9092              ;
 728+ 9092
 729+ 9092              Motor_de_disparos
 730+ 9092
 731+ 9092              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9092
 733+ 9092 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9095 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9098
 736+ 9098 CD 91 8C     2 call Extrae_address
 737+ 909B 7E               ld a,(hl)
 738+ 909C A7               and a
 739+ 909D 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 909F
 741+ 909F              ; ----- ----- ----- ----- ----- -----
 742+ 909F
 743+ 909F C5               push bc
 744+ 90A0 CD 64 91         call foto_disparo_a_borrar
 745+ 90A3
 746+ 90A3              ; Existe colisión con este disparo???
 747+ 90A3
 748+ 90A3 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90A4 7E               ld a,(hl)
 750+ 90A5 2B               dec hl
 751+ 90A6 E6 01            and 1
 752+ 90A8 28 1D            jr z,9F
 753+ 90AA
 754+ 90AA              ;   En este punto:
 755+ 90AA              ;
 756+ 90AA              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90AA              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90AA              ;   _con la entidad).
 759+ 90AA              ;
 760+ 90AA              ;   Disparo_2A defw 0                                ; Control.
 761+ 90AA              ;    defw 0                                          ; Puntero objeto.
 762+ 90AA              ;    defw 0                                          ; Puntero de impresión.
 763+ 90AA              ;    defw 0                                          ; Rutina de impresión.
 764+ 90AA
 765+ 90AA E5               push hl
 766+ 90AB
 767+ 90AB 06 04            ld b,4
 768+ 90AD 23           19 inc hl
 769+ 90AE 10 FD            djnz 19B
 770+ 90B0
 771+ 90B0 CD 91 8C         call Extrae_address
 772+ 90B3 CD D9 9C         call Genera_coordenadas_disparo
 773+ 90B6
 774+ 90B6              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90B6
 776+ 90B6 21 46 89         ld hl,Coordenadas_disparo_certero
 777+ 90B9 72               ld (hl),d
 778+ 90BA 23               inc hl
 779+ 90BB 73               ld (hl),e
 780+ 90BC
 781+ 90BC              ; Elimino el disparo de la base de datos.
 782+ 90BC
 783+ 90BC E1               pop hl
 784+ 90BD CD E3 91         call Elimina_disparo_de_base_de_datos
 785+ 90C0 21 43 89         ld hl,Impacto2
 786+ 90C3 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90C5
 788+ 90C5 18 06            jr 11F
 789+ 90C7
 790+ 90C7 CD 8D 91     9 call Mueve_disparo
 791+ 90CA CD 64 91         call foto_disparo_a_borrar
 792+ 90CD
 793+ 90CD C1           11 pop bc
 794+ 90CE 18 04            jr 7F
 795+ 90D0
 796+ 90D0              ; ----- ----- ----- ----- ----- -----
 797+ 90D0
 798+ 90D0 ED 42        1 sbc hl,bc
 799+ 90D2 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90D4
 801+ 90D4 2A 41 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90D7 23               inc hl
 803+ 90D8 23               inc hl
 804+ 90D9 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90DC 18 BA            jr 2B
 806+ 90DE
 807+ 90DE CD 12 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90E1              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90E1
 810+ 90E1              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90E1
 812+ 90E1 01 8A 85         ld bc,Disparo_11
 813+ 90E4 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90E7
 815+ 90E7 CD 91 8C     5 call Extrae_address
 816+ 90EA 7E               ld a,(hl)
 817+ 90EB A7               and a
 818+ 90EC 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 90EE
 820+ 90EE              ; ----- ----- ----- ----- ----- -----
 821+ 90EE
 822+ 90EE C5               push bc
 823+ 90EF CD 64 91         call foto_disparo_a_borrar
 824+ 90F2
 825+ 90F2              ; Existe colisión con este disparo???
 826+ 90F2
 827+ 90F2 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 90F3 7E               ld a,(hl)
 829+ 90F4 2B               dec hl
 830+ 90F5 E6 01            and 1
 831+ 90F7 28 4D            jr z,10F
 832+ 90F9
 833+ 90F9              ;! La colisión se produce con Amadeus???
 834+ 90F9              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 90F9
 836+ 90F9 E5               push hl
 837+ 90FA
 838+ 90FA 06 04            ld b,4
 839+ 90FC 23           16 inc hl
 840+ 90FD 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 90FF
 842+ 90FF CD 91 8C         call Extrae_address
 843+ 9102 CD D9 9C         call Genera_coordenadas_disparo
 844+ 9105
 845+ 9105 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9106 FE 16            cp $16
 847+ 9108 38 2A            jr c,15F
 848+ 910A
 849+ 910A
 850+ 910A              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 910A
 852+ 910A D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 910B
 854+ 910B              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 910B
 856+ 910B
 857+ 910B 2A 4E 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 910E
 859+ 910E              ; Coordenada X de Amadeus en D.
 860+ 910E
 861+ 910E 7D               ld a,l
 862+ 910F E6 1F            and $1F
 863+ 9111 57               ld d,a
 864+ 9112
 865+ 9112 21 A6 85         ld hl,Amadeus_db+8
 866+ 9115 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9116
 868+ 9116 21 48 89         ld hl,Coordenadas_X_Amadeus
 869+ 9119 CD EE 91         call Guarda_coordenadas_X
 870+ 911C
 871+ 911C D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 911D
 873+ 911D              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 911D
 875+ 911D 06 02            ld b,2
 876+ 911F C5           20 push bc
 877+ 9120
 878+ 9120 06 03            ld b,3
 879+ 9122 21 48 89         ld hl,Coordenadas_X_Amadeus
 880+ 9125 7E           18 ld a,(hl)
 881+ 9126 BA               cp d
 882+ 9127 20 04            jr nz,17F
 883+ 9129
 884+ 9129              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9129
 886+ 9129 C1               pop bc
 887+ 912A E1               pop hl
 888+ 912B 18 0D            jr 14F
 889+ 912D
 890+ 912D 23           17 inc hl
 891+ 912E 10 F5            djnz 18B
 892+ 9130
 893+ 9130 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9131
 895+ 9131 C1               pop bc
 896+ 9132 10 EB            djnz 20B
 897+ 9134
 898+ 9134
 899+ 9134              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9134              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9134
 902+ 9134 E1           15 pop hl
 903+ 9135 23               inc hl
 904+ 9136 35               dec (hl)
 905+ 9137 2B               dec hl
 906+ 9138 18 0C            jr 10F
 907+ 913A
 908+ 913A              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 913A              ; _ almacén de coordenadas_X de Amadeus.
 910+ 913A
 911+ 913A E5           14 push hl
 912+ 913B CD E3 91         call Elimina_disparo_de_base_de_datos
 913+ 913E 21 43 89         ld hl,Impacto2
 914+ 9141 CB CE            set 1,(hl)
 915+ 9143 E1               pop hl
 916+ 9144 18 06            jr 12F
 917+ 9146
 918+ 9146              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9146
 920+ 9146 CD 8D 91     10 call Mueve_disparo
 921+ 9149 CD 64 91         call foto_disparo_a_borrar
 922+ 914C C1           12 pop bc
 923+ 914D
 924+ 914D 18 04            jr 8F
 925+ 914F
 926+ 914F              ; ----- ----- ----- ----- ----- -----
 927+ 914F
 928+ 914F ED 42        4 sbc hl,bc
 929+ 9151 28 0A            jr z,6F
 930+ 9153
 931+ 9153 2A 3F 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9156 23               inc hl
 933+ 9157 23               inc hl
 934+ 9158 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 915B 18 8A            jr 5B
 936+ 915D
 937+ 915D CD 0B 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9160 CD 2A 92         call Limpia_Coordenadas_X
 939+ 9163 C9               ret
 940+ 9164
 941+ 9164              ; ------------------------------------------------------------------
 942+ 9164
 943+ 9164              foto_disparo_a_borrar
 944+ 9164
 945+ 9164 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9165 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9166 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9167
 949+ 9167 E5               push hl
 950+ 9168 23               inc hl
 951+ 9169 23               inc hl
 952+ 916A ED 73 14 89      ld (Stack),sp
 953+ 916E F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 916F FD E1            pop iy
 955+ 9171 DD E1            pop ix
 956+ 9173 E1               pop hl
 957+ 9174 ED 7B 14 89      ld sp,(Stack)
 958+ 9178 3A 03 89         ld a,(Ctrl_1)
 959+ 917B CB C7            set 0,a
 960+ 917D 32 03 89         ld (Ctrl_1),a
 961+ 9180 CD A0 7F         call Guarda_foto_registros
 962+ 9183 3A 03 89         ld a,(Ctrl_1)
 963+ 9186 CB 87            res 0,a
 964+ 9188 32 03 89         ld (Ctrl_1),a
 965+ 918B E1               pop hl
 966+ 918C C9               ret
 967+ 918D
 968+ 918D              ;---------------------------------------------------
 969+ 918D              ;
 970+ 918D              ;   18/07/23
 971+ 918D              ;
 972+ 918D
 973+ 918D              Mueve_disparo
 974+ 918D
 975+ 918D              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 918D              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 918D              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 918D
 979+ 918D E5               push hl
 980+ 918E
 981+ 918E 7E               ld a,(hl)
 982+ 918F
 983+ 918F 06 04            ld b,4
 984+ 9191 23           1 inc hl
 985+ 9192 10 FD            djnz 1B
 986+ 9194
 987+ 9194              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9194
 989+ 9194 CD 91 8C         call Extrae_address
 990+ 9197
 991+ 9197 E6 01            and 1
 992+ 9199 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 919B
 994+ 919B              ; Disparo hacia arriba, (Amadeus).
 995+ 919B
 996+ 919B              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 919B              ; _ de la dificultad.
 998+ 919B
 999+ 919B CD 1B 96         call PreviousScan
1000+ 919E CD 1B 96         call PreviousScan
1001+ 91A1 CD 1B 96         call PreviousScan
1002+ 91A4 CD 1B 96         call PreviousScan
1003+ 91A7
1004+ 91A7              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91A7
1006+ 91A7 7C               ld a,h
1007+ 91A8 FE 40            cp $40
1008+ 91AA 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91AC
1010+ 91AC              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91AC
1012+ 91AC EB               ex de,hl
1013+ 91AD 06 04            ld b,4
1014+ 91AF 2B           6 dec hl
1015+ 91B0 10 FD            djnz 6B
1016+ 91B2
1017+ 91B2 CD E3 91         call Elimina_disparo_de_base_de_datos
1018+ 91B5 E1               pop hl
1019+ 91B6 18 10            jr 7F
1020+ 91B8
1021+ 91B8              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91B8              ; HL contiene el puntero de impresión del disparo.
1023+ 91B8              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91B8
1025+ 91B8 D5           3 push de
1026+ 91B9 C5               push bc
1027+ 91BA
1028+ 91BA CD 82 8F         call Comprueba_Colision
1029+ 91BD
1030+ 91BD              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91BD
1032+ 91BD 78               ld a,b
1033+ 91BE
1034+ 91BE C1               pop bc
1035+ 91BF D1               pop de
1036+ 91C0
1037+ 91C0 EB               ex de,hl
1038+ 91C1
1039+ 91C1 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91C2 23               inc hl                                      ; _ movimiento.
1041+ 91C3 72               ld (hl),d
1042+ 91C4
1043+ 91C4 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91C5
1045+ 91C5 23               inc hl                                      ; _ en curso.
1046+ 91C6 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91C7 2B               dec hl
1048+ 91C8
1049+ 91C8 C9           7 ret
1050+ 91C9
1051+ 91C9              ; Disparo hacia abajo, (Entidad).
1052+ 91C9
1053+ 91C9 3A 50 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91CC 47               ld b,a
1055+ 91CD
1056+ 91CD CD 0C 96     4 call NextScan
1057+ 91D0 10 FB            djnz 4B
1058+ 91D2
1059+ 91D2              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91D2
1061+ 91D2 7C               ld a,h
1062+ 91D3 FE 58            cp $58
1063+ 91D5 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91D7
1065+ 91D7 EB               ex de,hl
1066+ 91D8 06 04            ld b,4
1067+ 91DA 2B           5 dec hl
1068+ 91DB 10 FD            djnz 5B
1069+ 91DD
1070+ 91DD CD E3 91         call Elimina_disparo_de_base_de_datos
1071+ 91E0 E1               pop hl
1072+ 91E1 18 E5            jr 7B
1073+ 91E3
1074+ 91E3              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91E3
1076+ 91E3 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91E6 AF               xor a
1078+ 91E7 77               ld (hl),a
1079+ 91E8 54               ld d,h
1080+ 91E9 5D               ld e,l
1081+ 91EA 13               inc de
1082+ 91EB ED B0            ldir
1083+ 91ED C9               ret
1084+ 91EE
1085+ 91EE              ; -----------------------------------------------------------------
1086+ 91EE              ;
1087+ 91EE              ;   19/7/23
1088+ 91EE              ;
1089+ 91EE              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 91EE              ;
1091+ 91EE              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 91EE              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 91EE              ;
1094+ 91EE              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 91EE              ;
1096+ 91EE              ;   INPUTS:
1097+ 91EE              ;
1098+ 91EE              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 91EE              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 91EE
1101+ 91EE              ;   MODIFICA: A, HL, BC y DE.
1102+ 91EE
1103+ 91EE              Guarda_coordenadas_X
1104+ 91EE
1105+ 91EE 7B               ld a,e
1106+ 91EF A7               and a
1107+ 91F0 20 04            jr nz,1F
1108+ 91F2
1109+ 91F2 06 02            ld b,2
1110+ 91F4 18 02            jr 2F
1111+ 91F6
1112+ 91F6 06 03        1 ld b,3
1113+ 91F8 72           2 ld (hl),d
1114+ 91F9 23               inc hl
1115+ 91FA 14               inc d
1116+ 91FB 10 FB            djnz 2B
1117+ 91FD
1118+ 91FD C9               ret
1119+ 91FE
1120+ 91FE              ; -----------------------------------------------------------------
1121+ 91FE              ;
1122+ 91FE              ;   12/04/23
1123+ 91FE              ;
1124+ 91FE
1125+ 91FE 3A 43 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9201 A7               and a
1127+ 9202 C8               ret z
1128+ 9203
1129+ 9203 FE 04            cp 4
1130+ 9205 20 09            jr nz,1F
1131+ 9207
1132+ 9207
1133+ 9207              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9207
1135+ 9207 CD 23 90         call Detecta_colision_nave_entidad
1136+ 920A
1137+ 920A 21 43 89         ld hl,Impacto2
1138+ 920D CB 5E            bit 3,(hl)
1139+ 920F C0               ret nz                                               ; Existe colisión, RET.
1140+ 9210
1141+ 9210              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9210              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9210
1144+ 9210 21 43 89     1 ld hl,Impacto2
1145+ 9213 CB 4E            bit 1,(hl)
1146+ 9215 28 07            jr z,2F
1147+ 9217
1148+ 9217 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 921A 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 921C 18 0B            jr 3F
1151+ 921E
1152+ 921E 21 43 89     2 ld hl,Impacto2
1153+ 9221 CB 46            bit 0,(hl)
1154+ 9223 C8               ret z
1155+ 9224
1156+ 9224              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9224
1158+ 9224 21 03 89         ld hl,Ctrl_1
1159+ 9227 CB D6            set 2,(hl)
1160+ 9229
1161+ 9229 C9           3 ret
1162+ 922A
1163+ 922A              ; -----------------------------------------------------------------
1164+ 922A              ;
1165+ 922A              ;   19/7/23
1166+ 922A              ;
1167+ 922A              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 922A
1169+ 922A AF           Limpia_Coordenadas_X xor a
1170+ 922B 06 06            ld b,6
1171+ 922D 21 48 89         ld hl,Coordenadas_X_Amadeus
1172+ 9230 77           1 ld (hl),a
1173+ 9231 23               inc hl
1174+ 9232 10 FC            djnz 1B
1175+ 9234 C9               ret
1176+ 9235
1177+ 9235              ; -----------------------------------------------------------------
1178+ 9235              ;
1179+ 9235              ;   25/04/23
1180+ 9235              ;
1181+ 9235
1182+ 9235              Determina_resultado_comparativa
1183+ 9235
1184+ 9235              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9235              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9235              ;
1187+ 9235              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9235              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9235              ;
1190+ 9235              ;   SBC HL,DE
1191+ 9235
1192+ 9235              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9235              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9235
1195+ 9235              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9235              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9235
1198+ 9235
1199+ 9235 3A DA 88         ld a,(Cuad_objeto)
1200+ 9238 FE 02            cp 2
1201+ 923A 28 26            jr z,2F
1202+ 923C 38 24            jr c,2F
1203+ 923E
1204+ 923E              ; Cuadrantes 3º y 4º
1205+ 923E
1206+ 923E E6 01            and 1
1207+ 9240 28 10            jr z,4F
1208+ 9242
1209+ 9242              ; Cuadrante 3º
1210+ 9242
1211+ 9242 7C               ld a,h
1212+ 9243 06 00            ld b,0
1213+ 9245
1214+ 9245 CD D0 92         call Compara_cositas_H3
1215+ 9248
1216+ 9248 04               inc b
1217+ 9249 05               dec b
1218+ 924A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 924B
1220+ 924B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 924C 06 00            ld b,0
1222+ 924E
1223+ 924E CD E2 92         call Compara_cositas_L3
1224+ 9251 C9               ret
1225+ 9252
1226+ 9252              ; Cuadrante 4º
1227+ 9252
1228+ 9252 7C           4 ld a,h
1229+ 9253 06 00            ld b,0
1230+ 9255
1231+ 9255 CD F4 92         call Compara_cositas_H4
1232+ 9258
1233+ 9258 04               inc b
1234+ 9259 05               dec b
1235+ 925A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 925B
1237+ 925B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 925C 06 00            ld b,0
1239+ 925E
1240+ 925E CD 0A 93         call Compara_cositas_L4
1241+ 9261 C9               ret
1242+ 9262
1243+ 9262              ; Cuadrantes 1º y 2º.
1244+ 9262
1245+ 9262 28 10        2 jr z,3F
1246+ 9264
1247+ 9264              ; 1er Cuadrante
1248+ 9264
1249+ 9264 7C               ld a,h
1250+ 9265 06 00            ld b,0
1251+ 9267
1252+ 9267 CD A8 92         call Compara_cositas_H1
1253+ 926A
1254+ 926A 04               inc b
1255+ 926B 05               dec b
1256+ 926C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 926D
1258+ 926D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 926E 06 00            ld b,0
1260+ 9270
1261+ 9270 CD BE 92         call Compara_cositas_L1
1262+ 9273 C9               ret
1263+ 9274
1264+ 9274
1265+ 9274              ; 2º Cuadrante
1266+ 9274
1267+ 9274 7C           3 ld a,h
1268+ 9275 06 00            ld b,0
1269+ 9277
1270+ 9277 CD 84 92         call Compara_cositas_H2
1271+ 927A
1272+ 927A 04               inc b
1273+ 927B 05               dec b
1274+ 927C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 927D
1276+ 927D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 927E 06 00            ld b,0
1278+ 9280
1279+ 9280 CD 96 92         call Compara_cositas_L2
1280+ 9283 C9               ret
1281+ 9284
1282+ 9284 A7           Compara_cositas_H2 and a
1283+ 9285 28 0D            jr z,1F
1284+ 9287              ;    cp $fd
1285+ 9287              ;    jr z,1F
1286+ 9287              ;    cp $fe
1287+ 9287              ;    jr z,1F
1288+ 9287 FE FF            cp $ff
1289+ 9289 28 09            jr z,1F
1290+ 928B FE 01            cp $01
1291+ 928D 28 05            jr z,1F
1292+ 928F FE 02            cp $02
1293+ 9291 28 01            jr z,1F
1294+ 9293 C0               ret nz
1295+ 9294 04           1 inc b
1296+ 9295 C9               ret
1297+ 9296
1298+ 9296 A7           Compara_cositas_L2 and a
1299+ 9297 28 0D            jr z,1F
1300+ 9299              ;    cp $fd
1301+ 9299              ;    jr z,1F
1302+ 9299 FE FE            cp $fe
1303+ 929B 28 09            jr z,1F
1304+ 929D FE FF            cp $ff
1305+ 929F 28 05            jr z,1F
1306+ 92A1 FE 01            cp $01
1307+ 92A3 28 01            jr z,1F
1308+ 92A5              ;    cp $02
1309+ 92A5              ;    jr z,1F
1310+ 92A5 C0               ret nz
1311+ 92A6 04           1 inc b
1312+ 92A7 C9               ret
1313+ 92A8
1314+ 92A8 A7           Compara_cositas_H1 and a
1315+ 92A9 28 11            jr z,1F
1316+ 92AB              ;    cp $fd
1317+ 92AB              ;    jr z,1F
1318+ 92AB              ;    cp $fe
1319+ 92AB              ;    jr z,1F
1320+ 92AB FE FF            cp $ff
1321+ 92AD 28 0D            jr z,1F
1322+ 92AF FE 01            cp $01
1323+ 92B1 28 09            jr z,1F
1324+ 92B3 FE 02            cp $02
1325+ 92B5 28 05            jr z,1F
1326+ 92B7 FE 03            cp $03
1327+ 92B9 28 01            jr z,1F
1328+ 92BB C0               ret nz
1329+ 92BC 04           1 inc b
1330+ 92BD C9               ret
1331+ 92BE
1332+ 92BE A7           Compara_cositas_L1 and a
1333+ 92BF 28 0D            jr z,1F
1334+ 92C1              ;    cp $fd
1335+ 92C1              ;    jr z,1F
1336+ 92C1              ;    cp $fe
1337+ 92C1              ;    jr z,1F
1338+ 92C1              ;    cp $ff
1339+ 92C1              ;    jr z,1F
1340+ 92C1 FE 01            cp $01
1341+ 92C3 28 09            jr z,1F
1342+ 92C5 FE 02            cp $02
1343+ 92C7 28 05            jr z,1F
1344+ 92C9 FE 03            cp $03
1345+ 92CB 28 01            jr z,1F
1346+ 92CD C0               ret nz
1347+ 92CE 04           1 inc b
1348+ 92CF C9               ret
1349+ 92D0
1350+ 92D0 A7           Compara_cositas_H3 and a
1351+ 92D1 28 0D            jr z,1F
1352+ 92D3              ;    cp $fd
1353+ 92D3              ;    jr z,1F
1354+ 92D3 FE FE            cp $fe
1355+ 92D5 28 09            jr z,1F
1356+ 92D7 FE FF            cp $ff
1357+ 92D9 28 05            jr z,1F
1358+ 92DB FE 01            cp $01
1359+ 92DD 28 01            jr z,1F
1360+ 92DF              ;    cp $02
1361+ 92DF              ;    jr z,1F
1362+ 92DF              ;    cp $03
1363+ 92DF              ;    jr z,1F
1364+ 92DF C0               ret nz
1365+ 92E0 04           1 inc b
1366+ 92E1 C9               ret
1367+ 92E2
1368+ 92E2 A7           Compara_cositas_L3 and a
1369+ 92E3 28 0D            jr z,1F
1370+ 92E5              ;    cp $fd
1371+ 92E5              ;    jr z,1F
1372+ 92E5              ;    cp $fe
1373+ 92E5              ;    jr z,1F
1374+ 92E5              ;    cp $ff
1375+ 92E5              ;    jr z,1F
1376+ 92E5 FE 01            cp $01
1377+ 92E7 28 09            jr z,1F
1378+ 92E9 FE 02            cp $02
1379+ 92EB 28 05            jr z,1F
1380+ 92ED FE 03            cp $03
1381+ 92EF 28 01            jr z,1F
1382+ 92F1 C0               ret nz
1383+ 92F2 04           1 inc b
1384+ 92F3 C9               ret
1385+ 92F4
1386+ 92F4 A7           Compara_cositas_H4 and a
1387+ 92F5 28 11            jr z,1F
1388+ 92F7 FE FD            cp $fd
1389+ 92F9 28 0D            jr z,1F
1390+ 92FB FE FE            cp $fe
1391+ 92FD 28 09            jr z,1F
1392+ 92FF FE FF            cp $ff
1393+ 9301 28 05            jr z,1F
1394+ 9303 FE 01            cp $01
1395+ 9305 28 01            jr z,1F
1396+ 9307              ;    cp $02
1397+ 9307              ;    jr z,1F
1398+ 9307              ;    cp $03
1399+ 9307              ;    jr z,1F
1400+ 9307 C0               ret nz
1401+ 9308 04           1 inc b
1402+ 9309 C9               ret
1403+ 930A
1404+ 930A A7           Compara_cositas_L4 and a
1405+ 930B 28 0D            jr z,1F
1406+ 930D              ;    cp $fd
1407+ 930D              ;    jr z,1F
1408+ 930D FE FE            cp $fe
1409+ 930F 28 09            jr z,1F
1410+ 9311 FE FF            cp $ff
1411+ 9313 28 05            jr z,1F
1412+ 9315 FE 01            cp $01
1413+ 9317 28 01            jr z,1F
1414+ 9319              ;    cp $02
1415+ 9319              ;    jr z,1F
1416+ 9319              ;    cp $03
1417+ 9319              ;    jr z,1F
1418+ 9319 C0               ret nz
1419+ 931A 04           1 inc b
1420+ 931B C9               ret
# file closed: Disparo.asm
1661  931C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 931C              ; ******************************************************************************************************************************************************************************************
   2+ 931C              ;
   3+ 931C              ; 26/06/23
   4+ 931C              ;
   5+ 931C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 931C
   7+ 931C CD 00 96     Draw call Prepara_draw
   8+ 931F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9320 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9321 28 05        	jr z,2F
  11+ 9323
  12+ 9323 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9326 18 0C        	jr 1F
  14+ 9328
  15+ 9328 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 932B 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 932E CD BD 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9331              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9331 CD 64 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9334
  21+ 9334 3A F0 88     1 ld a,(Ctrl_0)
  22+ 9337 CB 6F        	bit 5,a
  23+ 9339 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 933B
  25+ 933B CD 53 93     	call Comprueba_limite_horizontal
  26+ 933E CD E3 93     	call Comprueba_limite_vertical
  27+ 9341
  28+ 9341              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9341              ; -----------------------
  30+ 9341              ; -----------------------
  31+ 9341              ; -----------------------
  32+ 9341
  33+ 9341 CD 30 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9344 CD 67 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9347 CD C6 95     	call Define_rutina_de_impresion
  36+ 934A
  37+ 934A 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 934D CB AF        	res 5,a											; _a ser de utilidad.
  39+ 934F 32 F0 88     	ld (Ctrl_0),a
  40+ 9352
  41+ 9352 C9           	ret
  42+ 9353
  43+ 9353              ; *******************************************************************************************************************************************************************************************
  44+ 9353              ;	21/01/23
  45+ 9353              ;
  46+ 9353              ; 	Comprueba_limite_horizontal.
  47+ 9353              ;
  48+ 9353              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9353              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9353              ;
  51+ 9353              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9353              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9353              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9353              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9353
  56+ 9353
  57+ 9353
  58+ 9353 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9356 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9358 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 935A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 935C 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 935F 18 09            jr 6F
  64+ 9361 CB 5F        1 bit 3,a
  65+ 9363 28 0A            jr z,2F
  66+ 9365 E6 F7            and $f7
  67+ 9367 32 F0 88         ld (Ctrl_0),a
  68+ 936A CD BD 94     6 call Inicializacion
  69+ 936D 18 5B            jr 5F
  70+ 936F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9370
  72+ 9370              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9370              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9370
  75+ 9370 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9371 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9374 CD 1F 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9377 67           	ld h,a
  79+ 9378 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9379 CD 1F 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 937C 67           	ld h,a
  82+ 937D A7           	and a
  83+ 937E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9380 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9381 3A DA 88     	ld a,(Cuad_objeto)
  86+ 9384 FE 02        	cp 2
  87+ 9386 38 1E        	jr c,3F
  88+ 9388 28 1C        	jr z,3F
  89+ 938A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 938B 28 23            jr z,7F
  91+ 938D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 938F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9391 E1           	pop hl
  94+ 9392
  95+ 9392              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9392              ; _para indicar con E="2" en caso necesario.
  97+ 9392
  98+ 9392 E5               push hl
  99+ 9393 C5               push bc
 100+ 9394 CD 1F 99     	call calcula_tercio
 101+ 9397 FE 01        	cp 1
 102+ 9399 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 939B CD CB 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 939E 28 26            jr z,9F
 105+ 93A0 38 24            jr c,9F
 106+ 93A2 1E 00        11 ld e,0
 107+ 93A4 18 22            jr 8F
 108+ 93A6 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93A7 28 07        	jr z, 7F
 110+ 93A9 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93AB 1E 00         	ld e,0
 112+ 93AD E1           	pop hl
 113+ 93AE 18 04        	jr 4F
 114+ 93B0 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93B2 18 15            jr 10F
 116+ 93B4
 117+ 93B4              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93B4              ; _para indicar con E="2" en caso necesario.
 119+ 93B4
 120+ 93B4 E5           4 push hl
 121+ 93B5 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93B6 CD 1F 99     	call calcula_tercio
 123+ 93B9 FE 01        	cp 1
 124+ 93BB 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93BD CD CB 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93C0 28 04            jr z,9F
 127+ 93C2 30 02            jr nc,9F
 128+ 93C4 18 02        	jr 8F
 129+ 93C6 1E 02        9 ld e,2
 130+ 93C8 C1           8 pop bc
 131+ 93C9 E1           10 pop hl
 132+ 93CA C9           5 ret
 133+ 93CB
 134+ 93CB              ; --------------------
 135+ 93CB              ;
 136+ 93CB              ; 25/08/22
 137+ 93CB
 138+ 93CB CD 1F 99     Comprueba_centro call calcula_tercio
 139+ 93CE 67               ld h,a
 140+ 93CF 08           	ex af,af
 141+ 93D0 FE 02        	cp 2
 142+ 93D2 38 07        	jr c,1F
 143+ 93D4 28 05        	jr z,1F
 144+ 93D6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93D9 18 03        	jr 2F
 146+ 93DB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93DE 08           2 ex af,af
 148+ 93DF A7               and a
 149+ 93E0 ED 42            sbc hl,bc
 150+ 93E2 C9               ret
 151+ 93E3
 152+ 93E3              ; *********************************************************************************************************************************************************************************************
 153+ 93E3              ;
 154+ 93E3              ;   16/8/22
 155+ 93E3              ;
 156+ 93E3              ;	Comprueba_limite_vertical
 157+ 93E3              ;
 158+ 93E3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93E3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93E3              ;
 161+ 93E3
 162+ 93E3 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93E6 7D           	ld a,l
 164+ 93E7 E6 1F        	and $1F
 165+ 93E9 57           	ld d,a
 166+ 93EA 3A 00 89     	ld a,(Limite_vertical)
 167+ 93ED BA           	cp d 											; Límite - Posición.
 168+ 93EE 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 93EF 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 93F2 CB 47        	bit 0,a
 171+ 93F4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 93F6
 173+ 93F6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 93F6
 175+ 93F6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 93F7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 93F9
 178+ 93F9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 93F9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 93F9
 181+ 93F9 3A CC 88         ld a,(Coordenada_X)
 182+ 93FC 16 0F            ld d,Centro_izquierda
 183+ 93FE A7               and a
 184+ 93FF 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9400 28 1E            jr z,3F
 186+ 9402 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9404              ;                                                    ; _salimos sin modificar nada.
 188+ 9404 18 0E            jr 2F
 189+ 9406 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9407 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9409
 192+ 9409              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9409              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9409
 195+ 9409 3A CC 88         ld a,(Coordenada_X)
 196+ 940C 16 10            ld d,Centro_derecha
 197+ 940E A7               and a
 198+ 940F 92               sub d
 199+ 9410 28 0E            jr z,3F
 200+ 9412 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9414              ;                                                    ; _salimos sin modificar nada.
 202+ 9414 CB 43        2 bit 0,e
 203+ 9416 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9418 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9419 CD AD 94         call Modificaccionne
 206+ 941C C1           	pop bc
 207+ 941D CD BD 94         call Inicializacion
 208+ 9420 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9421
 210+ 9421              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9421
 212+ 9421 C5           4 push bc
 213+ 9422 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9425 0A           	ld a,(bc)
 215+ 9426 3D           	dec a
 216+ 9427 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9428 7D           	ld a,l
 218+ 9429 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 942A CB 47        	bit 0,a
 220+ 942C 28 03        	jr z,5F
 221+ 942E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 942F 18 2E        	jr 7F
 223+ 9431
 224+ 9431              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9431
 226+ 9431 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9432 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9433 3A F0 88     	ld a,(Ctrl_0)
 229+ 9436 CB 4F        	bit 1,a
 230+ 9438 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 943A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 943B
 233+ 943B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 943B
 235+ 943B 1C               inc e
 236+ 943C 1D               dec e
 237+ 943D 20 07            jr nz,12F
 238+ 943F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9440 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9441 22 C8 88     	ld (Posicion_actual),hl
 241+ 9444 18 44        13 jr 9F
 242+ 9446 CB 43        12 bit 0,e
 243+ 9448 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 944A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 944A C1           	pop bc
 246+ 944B 18 D3        	jr 3B
 247+ 944D 80           14 add b
 248+ 944E 6F               ld l,a
 249+ 944F 22 C8 88     	ld (Posicion_actual),hl
 250+ 9452 CD AD 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9455 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9457 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9459 32 F0 88         ld (Ctrl_0),a
 254+ 945C F1           	pop af
 255+ 945D 18 2B        	jr 9F
 256+ 945F
 257+ 945F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 945F
 259+ 945F F5           7 push af
 260+ 9460 3A F0 88     	ld a,(Ctrl_0)
 261+ 9463 CB 47        	bit 0,a
 262+ 9465 20 1D        	jr nz,8F
 263+ 9467 F1           	pop af
 264+ 9468
 265+ 9468              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9468
 267+ 9468 1C           	inc e
 268+ 9469 1D               dec e
 269+ 946A 20 07            jr nz,10F
 270+ 946C 90           	sub b
 271+ 946D 6F               ld l,a
 272+ 946E 22 C8 88     	ld (Posicion_actual),hl
 273+ 9471 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9473              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9473 CB 43        10 bit 0,e
 276+ 9475 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9477              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9477 C1           	pop bc
 279+ 9478 18 A6        	jr 3B
 280+ 947A 90           16 sub b
 281+ 947B 6F               ld l,a
 282+ 947C 22 C8 88     	ld (Posicion_actual),hl
 283+ 947F CD AD 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9482 18 06            jr 9F
 285+ 9484 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9486 32 F0 88         ld (Ctrl_0),a
 287+ 9489 F1           	pop af
 288+ 948A C1           9 pop bc
 289+ 948B 1E 00        	ld e,0
 290+ 948D CD BD 94         call Inicializacion
 291+ 9490 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9491 08           	ex af,af
 293+ 9492 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9493 18 8B            jr 3B
 295+ 9495
 296+ 9495              ; --------------------
 297+ 9495
 298+ 9495 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9497 CD 1B 96     1 call PreviousScan
 300+ 949A 10 FB            djnz 1B
 301+ 949C 22 C8 88     	ld (Posicion_actual),hl
 302+ 949F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94A0 C9           	ret
 304+ 94A1
 305+ 94A1              ; --------------------
 306+ 94A1
 307+ 94A1 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94A3 CD 0C 96     1 call NextScan
 309+ 94A6 10 FB            djnz 1B
 310+ 94A8 22 C8 88     	ld (Posicion_actual),hl
 311+ 94AB AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94AC C9           	ret
 313+ 94AD
 314+ 94AD              ; --------------------
 315+ 94AD              ;
 316+ 94AD              ;	22/01/23
 317+ 94AD              ;
 318+ 94AD              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94AD              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94AD              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94AD
 322+ 94AD
 323+ 94AD              Modificaccionne
 324+ 94AD
 325+ 94AD 3A DA 88     	ld a,(Cuad_objeto)
 326+ 94B0 FE 02        	cp 2
 327+ 94B2 CC 95 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94B5 DC 95 94         call c,Modifica_Pos_actual
 329+ 94B8 C8           	ret z
 330+ 94B9 CD A1 94         call Modifica_Pos_actual2
 331+ 94BC C9               ret
 332+ 94BD
 333+ 94BD              ; *************************************************************************************************************************************************************************************************
 334+ 94BD              ;
 335+ 94BD              ;	13/8/22
 336+ 94BD              ;
 337+ 94BD              ;	Inicializacion
 338+ 94BD              ;
 339+ 94BD              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94BD              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94BD              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94BD              ;
 343+ 94BD              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94BD              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94BD              ;	_ desaparece/aparece.
 346+ 94BD
 347+ 94BD              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94BD              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94BD              ;
 350+ 94BD              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94BD              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94BD              ; 		   [E] ="0"
 353+ 94BD
 354+ 94BD              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94BD
 356+ 94BD CD 1F 99     Inicializacion call calcula_tercio
 357+ 94C0 28 36        	jr z,primit
 358+ 94C2 E6 02        	and 2
 359+ 94C4 20 07        	jr nz,segmit
 360+ 94C6 7D           	ld a,l
 361+ 94C7 FE 7F        	cp $7f
 362+ 94C9 38 2D        	jr c,primit
 363+ 94CB 28 2B        	jr z,primit
 364+ 94CD CD 2A 95     segmit call column
 365+ 94D0 38 13        	jr c,tercuad
 366+ 94D2 3E 04        cuarcuad ld a,4
 367+ 94D4 32 DA 88     	ld (Cuad_objeto),a
 368+ 94D7 21 20 48     	ld hl,$4820
 369+ 94DA 22 FE 88     	ld (Limite_horizontal),hl
 370+ 94DD 21 00 89     	ld hl,Limite_vertical
 371+ 94E0 36 0D        	ld (hl),$0d
 372+ 94E2 08           	ex af,af
 373+ 94E3 18 3C        	jr 1F
 374+ 94E5              tercuad
 375+ 94E5 3E 03        	ld a,3
 376+ 94E7 32 DA 88     	ld (Cuad_objeto),a
 377+ 94EA 21 20 48     	ld hl,$4820
 378+ 94ED 22 FE 88     	ld (Limite_horizontal),hl
 379+ 94F0 21 00 89     	ld hl,Limite_vertical
 380+ 94F3 36 12        	ld (hl),$12
 381+ 94F5 08           	ex af,af
 382+ 94F6 18 29        	jr 1F
 383+ 94F8 CD 2A 95     primit call column
 384+ 94FB 38 13        	jr c, primcuad
 385+ 94FD              segcuad
 386+ 94FD 3E 02        	ld a,2
 387+ 94FF 32 DA 88     	ld (Cuad_objeto),a
 388+ 9502 21 C0 4F     	ld hl,$4fc0
 389+ 9505 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9508 21 00 89     	ld hl,Limite_vertical
 391+ 950B 36 0D        	ld (hl),$0d
 392+ 950D 08           	ex af,af
 393+ 950E 18 11        	jr 1F
 394+ 9510              primcuad
 395+ 9510 3E 01        	ld a,1
 396+ 9512 32 DA 88     	ld (Cuad_objeto),a
 397+ 9515 21 C0 4F     	ld hl,$4fc0
 398+ 9518 22 FE 88     	ld (Limite_horizontal),hl
 399+ 951B 21 00 89     	ld hl,Limite_vertical
 400+ 951E 36 12        	ld (hl),$12
 401+ 9520 08           	ex af,af
 402+ 9521 CD AE 9C     1 call Genera_coordenadas
 403+ 9524 21 F0 88     	ld hl,Ctrl_0
 404+ 9527 CB EE        	set 5,(hl)
 405+ 9529 C9           	ret
 406+ 952A
 407+ 952A              ; ------------------------------------------------------------------------------------------------------------------
 408+ 952A
 409+ 952A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 952A              ;
 411+ 952A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 952A
 413+ 952A 7D           column ld a,l
 414+ 952B E6 1F        	and $1f
 415+ 952D FE 10         	cp $10
 416+ 952F C9            	ret
 417+ 9530
 418+ 9530              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9530              ;
 420+ 9530              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9530              ;
 422+ 9530              ; 14/12/22
 423+ 9530              ;
 424+ 9530              ;	Modifica: A y BC.
 425+ 9530
 426+ 9530 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9533 E6 01        	and 1
 428+ 9535 28 17        	jr z,1F
 429+ 9537
 430+ 9537              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9537
 432+ 9537 3A CC 88     	ld a,(Coordenada_X)
 433+ 953A 47           	ld b,a
 434+ 953B 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 953C 79           	ld a,c
 436+ 953D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 953E 38 08        	jr c,2F
 438+ 9540 47           	ld b,a
 439+ 9541 79           	ld a,c
 440+ 9542 90           	sub b
 441+ 9543 32 FD 88     	ld (Columnas),a
 442+ 9546 18 1B        	jr 4F
 443+ 9548 79           2 ld a,c
 444+ 9549 32 FD 88     	ld (Columnas),a
 445+ 954C 18 15        	jr 4F
 446+ 954E
 447+ 954E              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 954E
 449+ 954E 3A CC 88     1 ld a,(Coordenada_X)
 450+ 9551 81           	add c
 451+ 9552 3D           	dec a
 452+ 9553 D6 1F        	sub $1f
 453+ 9555 38 08        	jr c,3F
 454+ 9557 47           	ld b,a
 455+ 9558 79           	ld a,c
 456+ 9559 90           	sub b
 457+ 955A 32 FD 88     	ld (Columnas),a
 458+ 955D 18 04        	jr 4F
 459+ 955F 79           3 ld a,c
 460+ 9560 32 FD 88     	ld (Columnas),a
 461+ 9563 D9           4 exx
 462+ 9564 4F           	ld c,a
 463+ 9565 D9           	exx
 464+ 9566 C9            ret
 465+ 9567
 466+ 9567              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9567              ;
 468+ 9567              ;   19/7/23
 469+ 9567              ;
 470+ 9567              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9567              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9567              ;
 473+ 9567              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9567              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9567              ;
 476+ 9567              ;	DESTRUYE: HL,B Y A.
 477+ 9567
 478+ 9567 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 956A FE 02        	cp 2
 480+ 956C 38 18        	jr c,1F
 481+ 956E 28 16        	jr z,1F
 482+ 9570 E6 01        	and 1
 483+ 9572 28 0D        	jr z,3F
 484+ 9574
 485+ 9574              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9574
 487+ 9574 CD BA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9577
 489+ 9577 7D           9 ld a,l
 490+ 9578 E6 1F        	and $1f
 491+ 957A 28 2A        	jr z,7F
 492+ 957C 2B           	dec hl
 493+ 957D 10 F8        	djnz 9B
 494+ 957F 18 25        	jr 7F
 495+ 9581
 496+ 9581              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9581
 498+ 9581 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 9584 18 20        	jr 7F
 500+ 9586
 501+ 9586 28 14        1 jr z,2F
 502+ 9588
 503+ 9588              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9588
 505+ 9588 CD BA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 958B
 507+ 958B 7D           4 ld a,l
 508+ 958C E6 1F        	and $1f
 509+ 958E 28 03        	jr z,6F
 510+ 9590 2B           	dec hl
 511+ 9591 10 F8        	djnz 4B
 512+ 9593 06 0F        6 ld b,15
 513+ 9595 CD 1B 96     5 call PreviousScan
 514+ 9598 10 FB        	djnz 5B
 515+ 959A 18 0A        	jr 7F
 516+ 959C
 517+ 959C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 959C
 519+ 959C CD BA 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 959F 06 0F        	ld b,15
 521+ 95A1 CD 1B 96     8 call PreviousScan
 522+ 95A4 10 FB        	djnz 8B
 523+ 95A6
 524+ 95A6 E5           7 push hl
 525+ 95A7 DD E1        	pop ix
 526+ 95A9
 527+ 95A9 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 95AC E5           	push hl
 529+ 95AD FD E1        	pop iy
 530+ 95AF
 531+ 95AF              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95AF
 533+ 95AF 3A F0 88     	ld a,(Ctrl_0)
 534+ 95B2 CB 77        	bit 6,a
 535+ 95B4 C8           	ret z
 536+ 95B5
 537+ 95B5              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95B5              ; _ entidad / Amadeus´.
 539+ 95B5
 540+ 95B5 DD 22 4E 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95B9
 542+ 95B9 C9           	ret
 543+ 95BA
 544+ 95BA              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95BA              ;
 546+ 95BA              ;	2/1/23
 547+ 95BA              ;
 548+ 95BA              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95BA              ;
 550+ 95BA              ;	Tras esta rutina tenemos:
 551+ 95BA              ;
 552+ 95BA              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95BA              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95BA              ;
 555+ 95BA              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95BA
 557+ 95BA 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 95BD 3A FD 88     	ld a,(Columnas)
 559+ 95C0 3D           	dec a
 560+ 95C1 20 01        	jr nz,1F
 561+ 95C3 3C           	inc a
 562+ 95C4 47           1 ld b,a
 563+ 95C5 C9           	ret
 564+ 95C6
 565+ 95C6              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95C6              ;
 567+ 95C6              ;	3/1/23
 568+ 95C6              ;
 569+ 95C6              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95C6              ;
 571+ 95C6              ;	Destruye: A,B,HL y DE.
 572+ 95C6
 573+ 95C6              Define_rutina_de_impresion
 574+ 95C6
 575+ 95C6 3A C7 88     	ld a,(Columns)
 576+ 95C9 47           	ld b,a
 577+ 95CA 3A FD 88     	ld a,(Columnas)
 578+ 95CD B8           	cp b
 579+ 95CE 20 0D        	jr nz,2f
 580+ 95D0
 581+ 95D0              ;	La entidad se imprime entera.
 582+ 95D0
 583+ 95D0 21 EF 96     	ld hl, Indice_entidades_completas
 584+ 95D3 E6 01        	and 1
 585+ 95D5 28 02        	jr z,1F
 586+ 95D7
 587+ 95D7 23           	inc hl
 588+ 95D8 23           	inc hl
 589+ 95D9
 590+ 95D9 CD 91 8C     1 call Extrae_address
 591+ 95DC C9           	ret		;	ret
 592+ 95DD
 593+ 95DD              ;	La entidad no se imprime entera en pantalla.
 594+ 95DD
 595+ 95DD 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 95E0 E6 01        	and 1
 597+ 95E2 28 17        	jr z,3F
 598+ 95E4
 599+ 95E4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95E4
 601+ 95E4 21 F3 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95E7 3A C7 88     4 ld a,(Columns)
 603+ 95EA E6 01        	and 1
 604+ 95EC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 95EE
 606+ 95EE 23           	inc hl
 607+ 95EF 23           	inc hl
 608+ 95F0
 609+ 95F0 3A FD 88     	ld a,(Columnas)
 610+ 95F3 E6 01        	and 1
 611+ 95F5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 95F7
 613+ 95F7 23           	inc hl
 614+ 95F8 23           	inc hl
 615+ 95F9
 616+ 95F9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 95FB
 618+ 95FB 21 F9 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 95FE 18 E7        	jr 4B
 620+ 9600
 621+ 9600              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9600              ;
 623+ 9600              ;	Prepara_draw
 624+ 9600              ;
 625+ 9600              ;	Es una rutina de carga.
 626+ 9600              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9600              ;
 628+ 9600              ;	FUNCIONAMIENTO:
 629+ 9600              ;
 630+ 9600              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9600              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9600              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9600              ;
 634+ 9600              ;	DESTRUYE:
 635+ 9600              ;
 636+ 9600              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9600
 638+ 9600 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9603 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9604 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9605 4E           	ld c,(hl)
 642+ 9606 2A C8 88     	ld hl,(Posicion_actual)
 643+ 9609 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 960B C9           	ret
 645+ 960C
 646+ 960C              ;----------------------------------------------------------------------------------------------------------------
 647+ 960C              ;
 648+ 960C              ;	5/08/22
 649+ 960C              ;
 650+ 960C              ;   NextScan.
 651+ 960C              ;
 652+ 960C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 960C              ;
 654+ 960C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 960C              ;
 656+ 960C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 960C              ;
 658+ 960C              ;       DESTRUIDOS: AF y HL !!!
 659+ 960C              ;
 660+ 960C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 960C              ;
 662+ 960C
 663+ 960C 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 960D 7C               ld a,h
 665+ 960E E6 07            and 7
 666+ 9610 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9611
 668+ 9611 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9612 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9614 6F               ld l,a
 671+ 9615 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9616
 673+ 9616 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9617 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9619 67               ld h,a
 676+ 961A C9               ret
 677+ 961B
 678+ 961B              ;----------------------------------------------------------------------------------------------------------------
 679+ 961B              ;
 680+ 961B              ;	5/08/22
 681+ 961B              ;
 682+ 961B              ;   PreviousScan.
 683+ 961B              ;
 684+ 961B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 961B              ;
 686+ 961B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 961B              ;
 688+ 961B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 961B              ;
 690+ 961B              ;       DESTRUIDOS: AF y HL !!!
 691+ 961B              ;
 692+ 961B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 961B              ;
 694+ 961B
 695+ 961B 7C           PreviousScan ld a,h
 696+ 961C 25               dec h               ; Dec H.
 697+ 961D E6 07            and 7
 698+ 961F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9620
 700+ 9620 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9621 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9623 6F               ld l,a
 703+ 9624 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9625
 705+ 9625 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9626 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9628 67               ld h,a
 708+ 9629 C9               ret
 709+ 962A
 710+ 962A              ; -----------------------------------------------------------------------------------
 711+ 962A              ;
 712+ 962A              ;	31/7/23
 713+ 962A              ;
 714+ 962A              ;	Rutina principal de pintado de entidades.
 715+ 962A              ;	Extrae la foto del frame, (entidades).
 716+ 962A
 717+ 962A              Extrae_foto_entidades
 718+ 962A
 719+ 962A 21 01 70     	ld hl,Album_de_fotos+1
 720+ 962D 7E           	ld a,(hl)
 721+ 962E A7           	and a
 722+ 962F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9630
 724+ 9630              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9630
 726+ 9630 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9633 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9634 C8           	ret z
 729+ 9635
 730+ 9635              ; -----------------------------------
 731+ 9635
 732+ 9635 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9639 31 00 70     	ld sp,Album_de_fotos
 734+ 963C
 735+ 963C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 963E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 963F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9640
 739+ 9640 ED 73 16 89  	ld (Stack_2),sp
 740+ 9644 ED 7B 14 89  	ld sp,(Stack)
 741+ 9648
 742+ 9648              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9648
 744+ 9648 3E CD        	ld a,$cd
 745+ 964A 32 52 96     	ld (Imprime),a
 746+ 964D EB           	ex de,hl
 747+ 964E 22 53 96     	ld (Imprime+1),hl
 748+ 9651 EB           	ex de,hl
 749+ 9652
 750+ 9652              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9652
 752+ 9652 00 00 00     Imprime db 0,0,0
 753+ 9655
 754+ 9655 ED 73 14 89  	ld (Stack),sp
 755+ 9659
 756+ 9659 3A 0F 89     	ld a,(Numero_de_malotes)
 757+ 965C 3D           	dec a
 758+ 965D 28 09        	jr z,1F
 759+ 965F 32 0F 89      	ld (Numero_de_malotes),a
 760+ 9662
 761+ 9662 ED 7B 16 89  	ld sp,(Stack_2)
 762+ 9666 18 D4        	jr 2B
 763+ 9668
 764+ 9668 AF           1 xor a
 765+ 9669 32 16 89     	ld (Stack_2),a
 766+ 966C
 767+ 966C C9           	ret
 768+ 966D
 769+ 966D              ; -----------------------------------------------------------------------------------
 770+ 966D              ;
 771+ 966D              ;	28/2/23
 772+ 966D              ;
 773+ 966D              ;	Pinta los disparos generados.
 774+ 966D
 775+ 966D              Extrae_foto_disparos
 776+ 966D
 777+ 966D 21 59 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9670 7E               ld a,(hl)
 779+ 9671 A7               and a
 780+ 9672 C8               ret z
 781+ 9673
 782+ 9673 3A 3E 89     	ld a,(Numero_de_disparotes)
 783+ 9676 A7           	and a
 784+ 9677 C8           	ret z
 785+ 9678 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 967C 31 58 71     	ld sp,Album_de_fotos_disparos
 787+ 967F
 788+ 967F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9681 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9682 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9683
 792+ 9683 ED 73 16 89  	ld (Stack_2),sp
 793+ 9687 ED 7B 14 89  	ld sp,(Stack)
 794+ 968B
 795+ 968B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 968B
 797+ 968B 3E CD        	ld a,$cd
 798+ 968D 32 95 96     	ld (Imprime2),a
 799+ 9690 EB           	ex de,hl
 800+ 9691 22 96 96     	ld (Imprime2+1),hl
 801+ 9694 EB           	ex de,hl
 802+ 9695
 803+ 9695              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 9695
 805+ 9695 00 00 00     Imprime2 db 0,0,0
 806+ 9698
 807+ 9698 3A 3E 89     	ld a,(Numero_de_disparotes)
 808+ 969B 3D           	dec a
 809+ 969C 28 09        	jr z,1F
 810+ 969E 32 3E 89      	ld (Numero_de_disparotes),a
 811+ 96A1
 812+ 96A1 ED 7B 16 89  	ld sp,(Stack_2)
 813+ 96A5 18 D8        	jr 2B
 814+ 96A7
 815+ 96A7 AF           1 xor a
 816+ 96A8 32 16 89     	ld (Stack_2),a
 817+ 96AB C9           	ret
 818+ 96AC
 819+ 96AC              ; -----------------------------------------------------------------------------------
 820+ 96AC              ;
 821+ 96AC              ;	4/9/23
 822+ 96AC              ;
 823+ 96AC              ;	Rutina principal de pintado de Amadeus.
 824+ 96AC              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96AC
 826+ 96AC 21 B0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96AF 7E           	ld a,(hl)
 828+ 96B0 A7           	and a
 829+ 96B1 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96B2
 831+ 96B2 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96B5 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96B6 C8           	ret z
 834+ 96B7
 835+ 96B7              ; -----------------------------------
 836+ 96B7
 837+ 96B7 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96BB 31 B0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96BE
 840+ 96BE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96C0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96C1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96C2
 844+ 96C2 ED 73 16 89  	ld (Stack_2),sp
 845+ 96C6 ED 7B 14 89  	ld sp,(Stack)
 846+ 96CA
 847+ 96CA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96CA
 849+ 96CA 3E CD        	ld a,$cd
 850+ 96CC 32 D4 96     	ld (Imprime_Amadeus),a
 851+ 96CF EB           	ex de,hl
 852+ 96D0 22 D5 96     	ld (Imprime_Amadeus+1),hl
 853+ 96D3 EB           	ex de,hl
 854+ 96D4
 855+ 96D4              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96D4
 857+ 96D4 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96D7
 859+ 96D7 ED 73 14 89  	ld (Stack),sp
 860+ 96DB
 861+ 96DB 3A 0F 89     	ld a,(Numero_de_malotes)
 862+ 96DE 3D           	dec a
 863+ 96DF 28 09        	jr z,1F
 864+ 96E1 32 0F 89      	ld (Numero_de_malotes),a
 865+ 96E4
 866+ 96E4 ED 7B 16 89  	ld sp,(Stack_2)
 867+ 96E8 18 D4        	jr 2B
 868+ 96EA
 869+ 96EA AF           1 xor a
 870+ 96EB 32 16 89     	ld (Stack_2),a
 871+ 96EE
 872+ 96EE C9           	ret
# file closed: Draw_XOR.asm
1662  96EF              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96EF              ;   índices de Rutinas de impresión.
   2+ 96EF
   3+ 96EF FF 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96F1 2C 97            defw Pinta_Amadeus_3x2
   5+ 96F3
   6+ 96F3 82 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96F5 22 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96F7 D6 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96F9
  10+ 96F9 AC 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96FB B0 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96FD 64 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96FF
  14+ 96FF
  15+ 96FF              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96FF              ;
  17+ 96FF              ;   12/12/22
  18+ 96FF              ;
  19+ 96FF              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96FF              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96FF              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96FF              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96FF              ;
  24+ 96FF              ;   Modifica: DE y HL.
  25+ 96FF
  26+ 96FF ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9703 FD F9        	ld sp,iy
  28+ 9705 06 10            ld b,16
  29+ 9707 D1           1 pop de
  30+ 9708 7B               ld a,e
  31+ 9709 AE               xor (hl)
  32+ 970A 77           	ld (hl),a
  33+ 970B 23           	inc hl
  34+ 970C 7A               ld a,d
  35+ 970D AE               xor (hl)
  36+ 970E 77           	ld (hl),a
  37+ 970F 2B           	dec hl
  38+ 9710 24           	inc h
  39+ 9711 7C               ld a,h
  40+ 9712 E6 07            and 7
  41+ 9714 20 0A            jr nz,2F
  42+ 9716 7D               ld a,l
  43+ 9717 C6 20            add a,$20
  44+ 9719 6F               ld l,a
  45+ 971A 38 04            jr c,2F
  46+ 971C 7C               ld a,h
  47+ 971D D6 08            sub 8
  48+ 971F 67               ld h,a
  49+ 9720 7C           2 ld a,h
  50+ 9721 FE 58            cp $58
  51+ 9723 28 02            jr z,3F
  52+ 9725 10 E0            djnz 1B
  53+ 9727 ED 7B 14 89  3 ld sp,(Stack)
  54+ 972B C9           	ret
  55+ 972C
  56+ 972C ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9730 FD F9        	ld sp,iy
  58+ 9732 06 08            ld b,8
  59+ 9734 D1           1 pop de
  60+ 9735 7B               ld a,e
  61+ 9736 AE               xor (hl)
  62+ 9737 77           	ld (hl),a
  63+ 9738 23           	inc hl
  64+ 9739 7A               ld a,d
  65+ 973A AE               xor (hl)
  66+ 973B 77           	ld (hl),a
  67+ 973C 23           	inc hl
  68+ 973D D1           	pop de
  69+ 973E 7B               ld a,e
  70+ 973F AE               xor (hl)
  71+ 9740 77           	ld (hl),a
  72+ 9741 2B           	dec hl
  73+ 9742 2B           	dec hl
  74+ 9743 24           	inc h
  75+ 9744 7C               ld a,h
  76+ 9745 E6 07            and 7
  77+ 9747 20 0A            jr nz,2F
  78+ 9749 7D               ld a,l
  79+ 974A C6 20            add a,$20
  80+ 974C 6F               ld l,a
  81+ 974D 38 04            jr c,2F
  82+ 974F 7C               ld a,h
  83+ 9750 D6 08            sub 8
  84+ 9752 67               ld h,a
  85+ 9753 7C           2 ld a,h
  86+ 9754 FE 58            cp $58
  87+ 9756 28 25            jr z,4F
  88+ 9758 7A               ld a,d
  89+ 9759 AE               xor (hl)
  90+ 975A 77               ld (hl),a
  91+ 975B D1           	pop de
  92+ 975C 23           	inc hl
  93+ 975D 7B               ld a,e
  94+ 975E AE               xor (hl)
  95+ 975F 77           	ld (hl),a
  96+ 9760 23           	inc hl
  97+ 9761 7A               ld a,d
  98+ 9762 AE               xor (hl)
  99+ 9763 77           	ld (hl),a
 100+ 9764 2B           	dec hl
 101+ 9765 2B           	dec hl
 102+ 9766 24           	inc h
 103+ 9767 7C               ld a,h
 104+ 9768 E6 07            and 7
 105+ 976A 20 0A            jr nz,3F
 106+ 976C 7D               ld a,l
 107+ 976D C6 20            add a,$20
 108+ 976F 6F               ld l,a
 109+ 9770 38 04            jr c,3F
 110+ 9772 7C               ld a,h
 111+ 9773 D6 08            sub 8
 112+ 9775 67               ld h,a
 113+ 9776 7C           3 ld a,h
 114+ 9777 FE 58            cp $58
 115+ 9779 28 02            jr z,4F
 116+ 977B 10 B7            djnz 1B
 117+ 977D ED 7B 14 89  4 ld sp,(Stack)
 118+ 9781 C9           	ret
 119+ 9782
 120+ 9782              ; ---------------------------------------------------
 121+ 9782
 122+ 9782 ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9786 FD F9        	ld sp,iy
 124+ 9788
 125+ 9788              ; >>>
 126+ 9788
 127+ 9788 06 10            ld b,16
 128+ 978A D1           1 pop de
 129+ 978B 7A           	ld a,d
 130+ 978C AE           	xor (hl)
 131+ 978D 77           	ld (hl),a
 132+ 978E 24           	inc h
 133+ 978F 7C               ld a,h
 134+ 9790 E6 07            and 7
 135+ 9792 20 0C            jr nz,2F
 136+ 9794 7D               ld a,l
 137+ 9795 C6 20            add a,$20
 138+ 9797 6F               ld l,a
 139+ 9798 38 06            jr c,2F
 140+ 979A 7C               ld a,h
 141+ 979B D6 08            sub 8
 142+ 979D 67               ld h,a
 143+ 979E 18 00            jr 2F
 144+ 97A0 7C           2 ld a,h
 145+ 97A1 FE 58            cp $58
 146+ 97A3 28 02            jr z,3F
 147+ 97A5 10 E3            djnz 1B
 148+ 97A7 ED 7B 14 89  3 ld sp,(Stack)
 149+ 97AB C9           	ret
 150+ 97AC
 151+ 97AC ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97B0 FD F9        	ld sp,iy
 153+ 97B2
 154+ 97B2              ; >>>
 155+ 97B2
 156+ 97B2 06 10            ld b,16
 157+ 97B4 D1           1 pop de
 158+ 97B5 7B           	ld a,e
 159+ 97B6 AE           	xor (hl)
 160+ 97B7 77           	ld (hl),a
 161+ 97B8 24           	inc h
 162+ 97B9 7C               ld a,h
 163+ 97BA E6 07            and 7
 164+ 97BC 20 0C            jr nz,2F
 165+ 97BE 7D               ld a,l
 166+ 97BF C6 20            add a,$20
 167+ 97C1 6F               ld l,a
 168+ 97C2 38 06            jr c,2F
 169+ 97C4 7C               ld a,h
 170+ 97C5 D6 08            sub 8
 171+ 97C7 67               ld h,a
 172+ 97C8 18 00            jr 2F
 173+ 97CA 7C           2 ld a,h
 174+ 97CB FE 58            cp $58
 175+ 97CD 28 02            jr z,3F
 176+ 97CF 10 E3            djnz 1B
 177+ 97D1 ED 7B 14 89  3 ld sp,(Stack)
 178+ 97D5 C9           	ret
 179+ 97D6
 180+ 97D6              ; ---------------------------------------------------
 181+ 97D6
 182+ 97D6 ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97DA FD F9        	ld sp,iy
 184+ 97DC 06 08            ld b,8
 185+ 97DE D1           1 pop de
 186+ 97DF 7A           	ld a,d
 187+ 97E0 AE           	xor (hl)
 188+ 97E1 77           	ld (hl),a
 189+ 97E2 23           	inc hl
 190+ 97E3 D1           	pop de
 191+ 97E4 7B           	ld a,e
 192+ 97E5 AE           	xor (hl)
 193+ 97E6 77           	ld (hl),a
 194+ 97E7 2B           	dec hl
 195+ 97E8 24            	inc h
 196+ 97E9 7C               ld a,h
 197+ 97EA E6 07            and 7
 198+ 97EC 20 0A            jr nz,2F
 199+ 97EE 7D               ld a,l
 200+ 97EF C6 20            add a,$20
 201+ 97F1 6F               ld l,a
 202+ 97F2 38 04            jr c,2F
 203+ 97F4 7C               ld a,h
 204+ 97F5 D6 08            sub 8
 205+ 97F7 67               ld h,a
 206+ 97F8 7C           2 ld a,h
 207+ 97F9 FE 58            cp $58
 208+ 97FB 28 20            jr z,4F
 209+ 97FD D1               pop de
 210+ 97FE 7B           	ld a,e
 211+ 97FF AE           	xor (hl)
 212+ 9800 77           	ld (hl),a
 213+ 9801 23           	inc hl
 214+ 9802 7A           	ld a,d
 215+ 9803 AE           	xor (hl)
 216+ 9804 77           	ld (hl),a
 217+ 9805 2B           	dec hl
 218+ 9806 24           	inc h
 219+ 9807 7C               ld a,h
 220+ 9808 E6 07            and 7
 221+ 980A 20 0A            jr nz,3F
 222+ 980C 7D               ld a,l
 223+ 980D C6 20            add a,$20
 224+ 980F 6F               ld l,a
 225+ 9810 38 04            jr c,3F
 226+ 9812 7C               ld a,h
 227+ 9813 D6 08            sub 8
 228+ 9815 67               ld h,a
 229+ 9816 7C           3 ld a,h
 230+ 9817 FE 58            cp $58
 231+ 9819 28 02            jr z,4F
 232+ 981B 10 C1            djnz 1B
 233+ 981D ED 7B 14 89  4 ld sp,(Stack)
 234+ 9821 C9           	ret
 235+ 9822
 236+ 9822 ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9826 FD F9        	ld sp,iy
 238+ 9828 06 08            ld b,8
 239+ 982A D1           1 pop de
 240+ 982B D1           	pop de
 241+ 982C 7B           	ld a,e
 242+ 982D AE           	xor (hl)
 243+ 982E 77           	ld (hl),a
 244+ 982F 24            	inc h
 245+ 9830 7C               ld a,h
 246+ 9831 E6 07            and 7
 247+ 9833 20 0A            jr nz,2F
 248+ 9835 7D               ld a,l
 249+ 9836 C6 20            add a,$20
 250+ 9838 6F               ld l,a
 251+ 9839 38 04            jr c,2F
 252+ 983B 7C               ld a,h
 253+ 983C D6 08            sub 8
 254+ 983E 67               ld h,a
 255+ 983F 7C           2 ld a,h
 256+ 9840 FE 58            cp $58
 257+ 9842 28 1B            jr z,4F
 258+ 9844 D1               pop de
 259+ 9845 7A           	ld a,d
 260+ 9846 AE           	xor (hl)
 261+ 9847 77           	ld (hl),a
 262+ 9848 24           	inc h
 263+ 9849 7C               ld a,h
 264+ 984A E6 07            and 7
 265+ 984C 20 0A            jr nz,3F
 266+ 984E 7D               ld a,l
 267+ 984F C6 20            add a,$20
 268+ 9851 6F               ld l,a
 269+ 9852 38 04            jr c,3F
 270+ 9854 7C               ld a,h
 271+ 9855 D6 08            sub 8
 272+ 9857 67               ld h,a
 273+ 9858 7C           3 ld a,h
 274+ 9859 FE 58            cp $58
 275+ 985B 28 02            jr z,4F
 276+ 985D 10 CB            djnz 1B
 277+ 985F ED 7B 14 89  4 ld sp,(Stack)
 278+ 9863 C9           	ret
 279+ 9864
 280+ 9864 ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9868 FD F9        	ld sp,iy
 282+ 986A 06 08            ld b,8
 283+ 986C D1           1 pop de
 284+ 986D 7B           	ld a,e
 285+ 986E AE           	xor (hl)
 286+ 986F 77           	ld (hl),a
 287+ 9870 23           	inc hl
 288+ 9871 7A           	ld a,d
 289+ 9872 AE           	xor (hl)
 290+ 9873 77           	ld (hl),a
 291+ 9874 2B           	dec hl
 292+ 9875 24             	inc h
 293+ 9876 7C               ld a,h
 294+ 9877 E6 07            and 7
 295+ 9879 20 0A            jr nz,2F
 296+ 987B 7D               ld a,l
 297+ 987C C6 20            add a,$20
 298+ 987E 6F               ld l,a
 299+ 987F 38 04            jr c,2F
 300+ 9881 7C               ld a,h
 301+ 9882 D6 08            sub 8
 302+ 9884 67               ld h,a
 303+ 9885 7C           2 ld a,h
 304+ 9886 FE 58            cp $58
 305+ 9888 28 21            jr z,4F
 306+ 988A D1               pop de
 307+ 988B 7A           	ld a,d
 308+ 988C AE           	xor (hl)
 309+ 988D 77           	ld (hl),a
 310+ 988E 23           	inc hl
 311+ 988F D1               pop de
 312+ 9890 7B           	ld a,e
 313+ 9891 AE           	xor (hl)
 314+ 9892 77           	ld (hl),a
 315+ 9893 2B           	dec hl
 316+ 9894 24           	inc h
 317+ 9895 7C               ld a,h
 318+ 9896 E6 07            and 7
 319+ 9898 20 0A            jr nz,3F
 320+ 989A 7D               ld a,l
 321+ 989B C6 20            add a,$20
 322+ 989D 6F               ld l,a
 323+ 989E 38 04            jr c,3F
 324+ 98A0 7C               ld a,h
 325+ 98A1 D6 08            sub 8
 326+ 98A3 67               ld h,a
 327+ 98A4 7C           3 ld a,h
 328+ 98A5 FE 58            cp $58
 329+ 98A7 28 02            jr z,4F
 330+ 98A9 10 C1            djnz 1B
 331+ 98AB ED 7B 14 89  4 ld sp,(Stack)
 332+ 98AF C9           	ret
 333+ 98B0
 334+ 98B0 ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98B4 FD F9        	ld sp,iy
 336+ 98B6 06 08            ld b,8
 337+ 98B8 D1           1 pop de
 338+ 98B9 7B           	ld a,e
 339+ 98BA AE           	xor (hl)
 340+ 98BB 77           	ld (hl),a
 341+ 98BC 24            	inc h
 342+ 98BD 7C               ld a,h
 343+ 98BE E6 07            and 7
 344+ 98C0 20 0A            jr nz,2F
 345+ 98C2 7D               ld a,l
 346+ 98C3 C6 20            add a,$20
 347+ 98C5 6F               ld l,a
 348+ 98C6 38 04            jr c,2F
 349+ 98C8 7C               ld a,h
 350+ 98C9 D6 08            sub 8
 351+ 98CB 67               ld h,a
 352+ 98CC 7C           2 ld a,h
 353+ 98CD FE 58            cp $58
 354+ 98CF 28 1C            jr z,4F
 355+ 98D1 D1               pop de
 356+ 98D2 7A           	ld a,d
 357+ 98D3 AE           	xor (hl)
 358+ 98D4 77           	ld (hl),a
 359+ 98D5 24           	inc h
 360+ 98D6 7C               ld a,h
 361+ 98D7 E6 07            and 7
 362+ 98D9 20 0A            jr nz,3F
 363+ 98DB 7D               ld a,l
 364+ 98DC C6 20            add a,$20
 365+ 98DE 6F               ld l,a
 366+ 98DF 38 04            jr c,3F
 367+ 98E1 7C               ld a,h
 368+ 98E2 D6 08            sub 8
 369+ 98E4 67               ld h,a
 370+ 98E5 7C           3 ld a,h
 371+ 98E6 FE 58            cp $58
 372+ 98E8 28 03            jr z,4F
 373+ 98EA D1               pop de
 374+ 98EB 10 CB            djnz 1B
 375+ 98ED ED 7B 14 89  4 ld sp,(Stack)
 376+ 98F1 C9           	ret
 377+ 98F2
 378+ 98F2              ; ---------------------------------------------------
 379+ 98F2              ;
 380+ 98F2              ;   27/02/23
 381+ 98F2              ;
 382+ 98F2              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98F2              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98F2              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98F2
 386+ 98F2 ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 98F6 FD F9            ld sp,iy
 388+ 98F8 06 03            ld b,3
 389+ 98FA D1           1 pop de
 390+ 98FB 7B               ld a,e
 391+ 98FC AE               xor (hl)
 392+ 98FD 77               ld (hl),a
 393+ 98FE 23               inc hl
 394+ 98FF 7A               ld a,d
 395+ 9900 AE               xor (hl)
 396+ 9901 77               ld (hl),a
 397+ 9902 2B               dec hl
 398+ 9903
 399+ 9903 24               inc h
 400+ 9904 7C               ld a,h
 401+ 9905 E6 07            and 7
 402+ 9907 20 0A            jr nz,2F
 403+ 9909 7D               ld a,l
 404+ 990A C6 20            add a,$20
 405+ 990C 6F               ld l,a
 406+ 990D 38 04            jr c,2F
 407+ 990F 7C               ld a,h
 408+ 9910 D6 08            sub 8
 409+ 9912 67               ld h,a
 410+ 9913 7C           2 ld a,h
 411+ 9914 FE 58            cp $58
 412+ 9916 28 02            jr z,3F
 413+ 9918
 414+ 9918 10 E0            djnz 1B
 415+ 991A ED 7B 14 89  3 ld sp,(Stack)
 416+ 991E C9               ret
 417+ 991F
# file closed: Rutinas_de_impresion_sprites.asm
1663  991F              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 991F              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 991F              ;
   3+ 991F              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 991F              ;
   5+ 991F              ; *****************************************************************************************************************************************************************************************
   6+ 991F              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 991F
   8+ 991F 7C           calcula_tercio ld a,h
   9+ 9920 E6 18        	and $18
  10+ 9922 CB 2F        	sra a
  11+ 9924 CB 2F        	sra a
  12+ 9926 CB 2F        	sra a
  13+ 9928 C9           	ret
  14+ 9929
# file closed: calcula_tercio.asm
1664  9929              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9929              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9929              ;
   3+ 9929              ;
   4+ 9929              ;	CLS.
   5+ 9929              ;
   6+ 9929              ;	Limpia la pantalla y define sus atributos.
   7+ 9929              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9929              ;
   9+ 9929              ;	COLORES: 0 ..... NEGRO
  10+ 9929              ;    		 1 ..... AZUL
  11+ 9929              ; 			 2 ..... ROJO
  12+ 9929              ;			 3 ..... MAGENTA
  13+ 9929              ; 			 4 ..... VERDE
  14+ 9929              ; 			 5 ..... CIAN
  15+ 9929              ;			 6 ..... AMARILLO
  16+ 9929              ; 			 7 ..... BLANCO
  17+ 9929              ;
  18+ 9929              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9929              ;
  20+ 9929              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9929
  22+ 9929
  23+ 9929 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 992C 11 01 40     	LD DE,$4001
  25+ 992F 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9932 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9934 ED B0        	LDIR
  28+ 9936 01 FF 02     	LD BC,767
  29+ 9939 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 993A ED B0        	LDIR
  31+ 993C C9           	ret
  32+ 993D
# file closed: Cls.asm
1665  993D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 993D              ; ******************************************************************************************************************************************************************************************
   2+ 993D              ;
   3+ 993D              ;   20/05/23
   4+ 993D              ;
   5+ 993D              ;	Recompone_posicion_inicio
   6+ 993D              ;
   7+ 993D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 993D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 993D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 993D              ;	_ a una u otra rutina.
  11+ 993D
  12+ 993D              Recompone_posicion_inicio
  13+ 993D
  14+ 993D 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 9940 7D           	ld a,l
  16+ 9941 E6 1F        	and $1f
  17+ 9943 28 16        	jr z,1F
  18+ 9945
  19+ 9945 FE 1F        	cp $1f
  20+ 9947 28 0D        	jr z,3F
  21+ 9949
  22+ 9949 21 01 89     	ld hl,Ctrl_2
  23+ 994C CB C6        	set 0,(hl)
  24+ 994E 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 9951 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 9954 18 08        	jr 2F
  27+ 9956
  28+ 9956 CD FB 9A     3 call Mov_left
  29+ 9959 18 03        	jr 2F
  30+ 995B
  31+ 995B CD DD 99     1 call Mov_right
  32+ 995E 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9961 22 CA 88     	ld (Puntero_objeto),hl
  34+ 9964 C9           	ret
  35+ 9965
  36+ 9965              ; ******************************************************************************************************************************************************************************************
  37+ 9965              ;
  38+ 9965              ;   27/05/23
  39+ 9965              ;
  40+ 9965              ;	Mov_down
  41+ 9965              ;
  42+ 9965              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9965              ;
  44+ 9965              ;
  45+ 9965              Mov_down
  46+ 9965
  47+ 9965 CD CB 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9968              ;																	; _ repone (Puntero_objeto).
  49+ 9968 21 F0 88     	ld hl,Ctrl_0
  50+ 996B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 996D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 996D              ; 																	; _ en el caso de que no lo haya.
  53+ 996D 3A DE 88     	ld a,(Vel_down)
  54+ 9970 47           	ld b,a
  55+ 9971 2A C8 88         ld hl,(Posicion_actual)
  56+ 9974 CD 1F 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9977 E6 02        	and 2
  58+ 9979 28 13        	jr z,1F
  59+ 997B
  60+ 997B              ; Nos encontramos en el último tercio de pantalla.
  61+ 997B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 997B
  63+ 997B 7C           	ld a,h
  64+ 997C FE 57        	cp $57
  65+ 997E 20 0E        	jr nz,1F
  66+ 9980
  67+ 9980 7D           	ld a,l
  68+ 9981 C6 20        	add $20
  69+ 9983 30 09        	jr nc,1F
  70+ 9985
  71+ 9985              ; ------------------------------
  72+ 9985              ;	call Reaparece_arriba
  73+ 9985 F3           	di
  74+ 9986 18 FE        	jr $
  75+ 9988 FB           	ei
  76+ 9989
  77+ 9989 CD 88 9C     	call Reinicio
  78+ 998C              ; ------------------------------
  79+ 998C
  80+ 998C 18 08        	jr 3F
  81+ 998E CD 0C 96     1 call NextScan
  82+ 9991 22 C8 88     	ld (Posicion_actual),hl
  83+ 9994 10 DE            djnz 2B
  84+ 9996 CD AE 9C     3 call Genera_coordenadas
  85+ 9999 C9           	ret
  86+ 999A
  87+ 999A              ; ******************************************************************************************************************************************************************************************
  88+ 999A              ;
  89+ 999A              ;   27/05/23
  90+ 999A              ;
  91+ 999A              ;	Mov_up
  92+ 999A              ;
  93+ 999A              ; 	Mueve el Sprite hacia arriba.
  94+ 999A              ;
  95+ 999A              ;
  96+ 999A              Mov_up
  97+ 999A
  98+ 999A CD CB 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  99+ 999D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 100+ 999D 21 F0 88     	ld hl,Ctrl_0
 101+ 99A0 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 102+ 99A2              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 103+ 99A2              ; 																		; _ en el caso de que no lo haya.
 104+ 99A2 3A DD 88     	ld a,(Vel_up)
 105+ 99A5 47           	ld b,a
 106+ 99A6 2A C8 88     	ld hl,(Posicion_actual)
 107+ 99A9 CD 1F 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 108+ 99AC A7           	and a
 109+ 99AD 20 10        	jr nz,1F
 110+ 99AF
 111+ 99AF              ; Nos encontramos en el 1er tercio de pantalla.
 112+ 99AF              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 113+ 99AF
 114+ 99AF 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 115+ 99B0 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 116+ 99B2 20 0B            jr nz,1F
 117+ 99B4 7D               ld a,l
 118+ 99B5 D6 20            sub $20
 119+ 99B7 30 06            jr nc,1F
 120+ 99B9 25               dec h
 121+ 99BA
 122+ 99BA              ; -----------------------------
 123+ 99BA CD 69 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 124+ 99BD              ;	call Reinicio
 125+ 99BD              ; -----------------------------
 126+ 99BD
 127+ 99BD 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 128+ 99BF CD 1B 96     1 call PreviousScan
 129+ 99C2 22 C8 88     	ld (Posicion_actual),hl
 130+ 99C5 10 E2            djnz 3B
 131+ 99C7 CD AE 9C     2 call Genera_coordenadas
 132+ 99CA C9           	ret
 133+ 99CB
 134+ 99CB              ; -----------------------------
 135+ 99CB              ;
 136+ 99CB              ;	27/5/23
 137+ 99CB              ;
 138+ 99CB              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 139+ 99CB              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 140+ 99CB              ;
 141+ 99CB              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 142+ 99CB              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 143+ 99CB              ;
 144+ 99CB              ;	Modifica: A y (Puntero_objeto).
 145+ 99CB
 146+ 99CB 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 147+ 99CE CB 47        	bit 0,a
 148+ 99D0 C8           	ret z
 149+ 99D1 CB 87        	res 0,a
 150+ 99D3 32 01 89     	ld (Ctrl_2),a
 151+ 99D6 2A 04 89     	ld hl,(Repone_puntero_objeto)
 152+ 99D9 22 CA 88     	ld (Puntero_objeto),hl
 153+ 99DC C9           	ret
 154+ 99DD
 155+ 99DD              ; ******************************************************************************************************************************************************************************************
 156+ 99DD              ;
 157+ 99DD              ;	19/10/22
 158+ 99DD              ;
 159+ 99DD              ;	Mov_right.
 160+ 99DD              ;
 161+ 99DD              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 162+ 99DD              ;
 163+ 99DD
 164+ 99DD 21 F0 88     Mov_right ld hl,Ctrl_0
 165+ 99E0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 166+ 99E2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 167+ 99E2              ; 																	; _ en el caso de que no lo haya.
 168+ 99E2 3A F0 88     	ld a,(Ctrl_0)
 169+ 99E5 CB 77        	bit 6,a
 170+ 99E7 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 171+ 99E9
 172+ 99E9 CD 17 9C     	call Stop_Amadeus_right
 173+ 99EC C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 174+ 99ED 18 4D        	jr 8F
 175+ 99EF
 176+ 99EF 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 177+ 99F2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 178+ 99F4 20 46        	jr nz,8F
 179+ 99F6
 180+ 99F6 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 181+ 99F9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 182+ 99FA 28 40        	jr z,8F
 183+ 99FC
 184+ 99FC              ; ---------- ---------- ----------
 185+ 99FC              ;
 186+ 99FC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 187+ 99FC
 188+ 99FC 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 189+ 99FF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 190+ 9A01 28 11        	jr z,1F
 191+ 9A03 38 06        	jr c,6F
 192+ 9A05 FE 04        	cp 4
 193+ 9A07 28 14        	jr z,7F
 194+ 9A09 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 195+ 9A0B
 196+ 9A0B              ; ---------- ---------- ----------
 197+ 9A0B              ;
 198+ 9A0B              ; Perfiles de velocidad
 199+ 9A0B              ;
 200+ 9A0B
 201+ 9A0B 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 202+ 9A0E FE FE        	cp $fe
 203+ 9A10 20 2A        	jr nz,8F
 204+ 9A12 18 10        	jr 3F
 205+ 9A14 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 206+ 9A17 FE FD        	cp $fd
 207+ 9A19 20 21        	jr nz,8F
 208+ 9A1B 18 07        	jr 3F
 209+ 9A1D 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 210+ 9A20 FE FB        	cp $fb
 211+ 9A22 20 18        	jr nz,8F
 212+ 9A24
 213+ 9A24              ; ---------- ---------- ----------
 214+ 9A24
 215+ 9A24              3
 216+ 9A24 CD 57 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 217+ 9A27              ;	call Reinicio
 218+ 9A27
 219+ 9A27              ; ---------- ---------- ----------
 220+ 9A27              ;
 221+ 9A27              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 222+ 9A27
 223+ 9A27 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 224+ 9A29 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 225+ 9A2A CD 43 9A     	call DESPLZ_DER
 226+ 9A2D C1           	pop bc
 227+ 9A2E 10 F9        	djnz 5B
 228+ 9A30 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 229+ 9A33 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 230+ 9A34 22 C8 88     	ld (Posicion_actual),hl
 231+ 9A37 CD AE 9C     	call Genera_coordenadas
 232+ 9A3A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 233+ 9A3C
 234+ 9A3C              ; ---------- ---------- ----------
 235+ 9A3C
 236+ 9A3C 2A C8 88     8 ld hl,(Posicion_actual)
 237+ 9A3F CD 43 9A     	call DESPLZ_DER
 238+ 9A42 C9           2 ret
 239+ 9A43
 240+ 9A43              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 241+ 9A43              ;
 242+ 9A43              ;	22/9/22
 243+ 9A43              ;
 244+ 9A43
 245+ 9A43 CD 52 9A     DESPLZ_DER call Desplaza_derecha
 246+ 9A46 CD 9E 9A         call modifica_parametros_1er_DESPLZ_2
 247+ 9A49 CD C7 9A         call Ciclo_completo
 248+ 9A4C 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 249+ 9A4F CB FE        	set 7,(hl)
 250+ 9A51 C9           	ret
 251+ 9A52
 252+ 9A52              ; ******************************************************************************************************************************************************************************************
 253+ 9A52              ;	15/02/23
 254+ 9A52              ;
 255+ 9A52
 256+ 9A52 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 257+ 9A55 47           	ld b,a
 258+ 9A56 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 259+ 9A59 23           1 inc hl
 260+ 9A5A 23           	inc hl
 261+ 9A5B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 262+ 9A5D 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 263+ 9A60 CD 91 8C     	call Extrae_address
 264+ 9A63 22 CA 88     	ld (Puntero_objeto),hl
 265+ 9A66
 266+ 9A66              ; Modifica (Puntero_DESPLZ_izq).
 267+ 9A66
 268+ 9A66              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 269+ 9A66              ; Cuántos movimientos hemos hecho ??
 270+ 9A66              ; DE contiene (Puntero_DESPLZ_der).
 271+ 9A66
 272+ 9A66 2A D0 88     7 ld hl,(Indice_Sprite_der)
 273+ 9A69 EB           	ex de,hl
 274+ 9A6A A7           	and a
 275+ 9A6B ED 52        	sbc hl,de
 276+ 9A6D CB 3D        	srl l
 277+ 9A6F 3E 08        6 ld a,8
 278+ 9A71 95           	sub l
 279+ 9A72 30 1E        	jr nc,3F
 280+ 9A74
 281+ 9A74              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 282+ 9A74              ; B="0".
 283+ 9A74
 284+ 9A74 04           4 inc b
 285+ 9A75 3C           	inc a
 286+ 9A76 20 FC        	jr nz,4B
 287+ 9A78 78           	ld a,b
 288+ 9A79 08           	ex af,af
 289+ 9A7A 2A D0 88     	ld hl,(Indice_Sprite_der)
 290+ 9A7D 23           5 inc hl
 291+ 9A7E 23           	inc hl
 292+ 9A7F 10 FC        	djnz 5B
 293+ 9A81 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 294+ 9A84 CD 91 8C     	call Extrae_address
 295+ 9A87 22 CA 88     	ld (Puntero_objeto),hl
 296+ 9A8A
 297+ 9A8A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 298+ 9A8A              ; _(Posicion_actual).
 299+ 9A8A
 300+ 9A8A 21 C8 88     	ld hl,Posicion_actual
 301+ 9A8D 34           	inc (hl)
 302+ 9A8E 08               ex af,af
 303+ 9A8F 6F           	ld l,a
 304+ 9A90 18 DD        	jr 6B
 305+ 9A92
 306+ 9A92              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 307+ 9A92
 308+ 9A92 47           3 ld b,a
 309+ 9A93 2A D2 88     	ld hl,(Indice_Sprite_izq)
 310+ 9A96 23           2 inc hl
 311+ 9A97 23           	inc hl
 312+ 9A98 10 FC        	djnz 2B
 313+ 9A9A 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 314+ 9A9D C9           8 ret
 315+ 9A9E
 316+ 9A9E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 317+ 9A9E              ;
 318+ 9A9E              ;	24/7/22
 319+ 9A9E              ;
 320+ 9A9E              ;	modifica_parametros_1er_DESPLZ_2
 321+ 9A9E              ;
 322+ 9A9E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 323+ 9A9E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 324+ 9A9E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 325+ 9A9E
 326+ 9A9E 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 327+ 9AA1 A7           	and a
 328+ 9AA2 20 1F        	jr nz,1F
 329+ 9AA4 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 330+ 9AA6 32 CE 88         ld (CTRL_DESPLZ),a
 331+ 9AA9
 332+ 9AA9 21 C7 88     	ld hl,Columns
 333+ 9AAC 34           	inc (hl)
 334+ 9AAD 3A DA 88     	ld a,(Cuad_objeto)
 335+ 9AB0 E6 01        	and 1
 336+ 9AB2 28 0F        	jr z,1F
 337+ 9AB4 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 338+ 9AB7 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 339+ 9AB8 22 C8 88     	ld (Posicion_actual),hl
 340+ 9ABB CD AE 9C     	call Genera_coordenadas
 341+ 9ABE CD 23 9C     	call Inc_CTRL_DESPLZ
 342+ 9AC1 18 03        	jr 2F
 343+ 9AC3 CD 23 9C     1 call Inc_CTRL_DESPLZ
 344+ 9AC6 C9           2 ret
 345+ 9AC7
 346+ 9AC7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 347+ 9AC7              ;
 348+ 9AC7              ;	24/7/22
 349+ 9AC7              ;
 350+ 9AC7              ;	Ciclo_completo.
 351+ 9AC7              ;
 352+ 9AC7              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 353+ 9AC7              ;
 354+ 9AC7              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 355+ 9AC7              ; 	Decrementamos (Columns).
 356+ 9AC7              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 357+ 9AC7              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 358+ 9AC7
 359+ 9AC7
 360+ 9AC7 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 361+ 9ACA FE FF        	cp $ff
 362+ 9ACC 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 363+ 9ACE E6 F0        	and $f0
 364+ 9AD0 20 28        	jr nz,3F
 365+ 9AD2
 366+ 9AD2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 367+ 9AD2
 368+ 9AD2 3A CE 88     	ld a,(CTRL_DESPLZ)
 369+ 9AD5 47           	ld b,a
 370+ 9AD6 3E F8        	ld a,$f8
 371+ 9AD8 80           	add b
 372+ 9AD9 32 CE 88     	ld (CTRL_DESPLZ),a
 373+ 9ADC 18 1C        	jr 3F
 374+ 9ADE 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 375+ 9AE1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 376+ 9AE2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 377+ 9AE3 32 CE 88     	ld (CTRL_DESPLZ),a
 378+ 9AE6 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 379+ 9AE9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 380+ 9AEB 20 0A        	jr nz,2F
 381+ 9AED 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 382+ 9AF0 23           	inc hl
 383+ 9AF1 22 C8 88     	ld (Posicion_actual),hl
 384+ 9AF4 CD AE 9C     	call Genera_coordenadas
 385+ 9AF7
 386+ 9AF7              ; Inicia el puntero de Sprite.
 387+ 9AF7
 388+ 9AF7 CD A8 8C     2 call Inicia_puntero_objeto_der
 389+ 9AFA C9           3 ret
 390+ 9AFB
 391+ 9AFB              ; ******************************************************************************************************************************************************************************************
 392+ 9AFB              ;
 393+ 9AFB              ;	15/02/23
 394+ 9AFB              ;
 395+ 9AFB              ;	Mov_left.
 396+ 9AFB              ;
 397+ 9AFB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 398+ 9AFB              ;
 399+ 9AFB              Mov_left
 400+ 9AFB
 401+ 9AFB 21 F0 88     	ld hl,Ctrl_0
 402+ 9AFE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 403+ 9B00              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 404+ 9B00              ; 																	; _ en el caso de que no lo haya.
 405+ 9B00 3A F0 88     	ld a,(Ctrl_0)
 406+ 9B03 CB 77        	bit 6,a
 407+ 9B05 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 408+ 9B07
 409+ 9B07 CD 1D 9C     	call Stop_Amadeus_left
 410+ 9B0A C8           	ret z
 411+ 9B0B 20 4A        	jr nz,8F
 412+ 9B0D
 413+ 9B0D 3A CC 88     11 ld a,(Coordenada_X)
 414+ 9B10 A7           	and a
 415+ 9B11 20 44        	jr nz,8F
 416+ 9B13
 417+ 9B13 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 418+ 9B16 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 419+ 9B17 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 420+ 9B19
 421+ 9B19              ; ---------- ---------- ----------
 422+ 9B19
 423+ 9B19 3A DB 88     	ld a,(Vel_left)
 424+ 9B1C FE 02        	cp 2
 425+ 9B1E 28 0F        	jr z,1F
 426+ 9B20 38 04        	jr c,6F
 427+ 9B22 FE 04        	cp 4
 428+ 9B24 28 12        	jr z,7F
 429+ 9B26
 430+ 9B26              ; ---------- ---------- ----------
 431+ 9B26
 432+ 9B26 3A CE 88     6 ld a,(CTRL_DESPLZ)
 433+ 9B29 FE F8        	cp $f8
 434+ 9B2B 20 2A        	jr nz,8F
 435+ 9B2D 18 10        	jr 4F
 436+ 9B2F 3A CE 88     1 ld a,(CTRL_DESPLZ)
 437+ 9B32 FE F9        	cp $f9
 438+ 9B34 20 21        	jr nz,8F
 439+ 9B36 18 07        	jr 4F
 440+ 9B38 3A CE 88     7 ld a,(CTRL_DESPLZ)
 441+ 9B3B FE FB        	cp $fb
 442+ 9B3D 20 18        	jr nz,8F
 443+ 9B3F
 444+ 9B3F              ; ---------- ---------- ----------
 445+ 9B3F
 446+ 9B3F              4
 447+ 9B3F CD 45 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 448+ 9B42              ;	call Reinicio
 449+ 9B42
 450+ 9B42              ; ---------- ---------- ----------
 451+ 9B42
 452+ 9B42 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 453+ 9B44 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 454+ 9B45
 455+ 9B45              ;	ld hl,(Indice_Sprite_izq)
 456+ 9B45              ;	ld (Puntero_DESPLZ_izq),hl
 457+ 9B45
 458+ 9B45 CD 5E 9B     	call DESPLZ_IZQ
 459+ 9B48 C1           	pop bc
 460+ 9B49 10 F9        	djnz 5B
 461+ 9B4B 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 462+ 9B4E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 463+ 9B4F 22 C8 88     	ld (Posicion_actual),hl
 464+ 9B52 CD AE 9C     	call Genera_coordenadas
 465+ 9B55 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 466+ 9B57
 467+ 9B57              ; ---------- ---------- ----------
 468+ 9B57
 469+ 9B57              ; Movemos, no hay recolocación.
 470+ 9B57
 471+ 9B57 2A C8 88     8 ld hl,(Posicion_actual)
 472+ 9B5A CD 5E 9B     	call DESPLZ_IZQ
 473+ 9B5D C9           2 ret
 474+ 9B5E
 475+ 9B5E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 476+ 9B5E              ;
 477+ 9B5E              ;	22/9/22
 478+ 9B5E
 479+ 9B5E              DESPLZ_IZQ
 480+ 9B5E
 481+ 9B5E CD 6D 9B     	call Desplaza_izquierda
 482+ 9B61 CD B9 9B         call modifica_parametros_1er_DESPLZ
 483+ 9B64 CD E1 9B     	call Ciclo_completo_2
 484+ 9B67 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 485+ 9B6A CB BE        	res 7,(hl)
 486+ 9B6C C9           	ret
 487+ 9B6D
 488+ 9B6D              Desplaza_izquierda
 489+ 9B6D
 490+ 9B6D 3A DB 88     	ld a,(Vel_left)
 491+ 9B70 47           	ld b,a
 492+ 9B71 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 493+ 9B74 23           1 inc hl
 494+ 9B75 23           	inc hl
 495+ 9B76 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 496+ 9B78 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 497+ 9B7B CD 91 8C     	call Extrae_address
 498+ 9B7E 22 CA 88     	ld (Puntero_objeto),hl
 499+ 9B81
 500+ 9B81              ; Modifica (Puntero_DESPLZ_der).
 501+ 9B81
 502+ 9B81              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 503+ 9B81              ; Cuántos movimientos hemos hecho ??
 504+ 9B81              ; DE contiene (Puntero_DESPLZ_izq).
 505+ 9B81
 506+ 9B81 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 507+ 9B84 EB           	ex de,hl
 508+ 9B85 A7           	and a
 509+ 9B86 ED 52        	sbc hl,de
 510+ 9B88 CB 3D        	srl l
 511+ 9B8A 3E 08        6 ld a,8
 512+ 9B8C 95           	sub l
 513+ 9B8D 30 1E        	jr nc,3F
 514+ 9B8F
 515+ 9B8F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 516+ 9B8F              ; B="0".
 517+ 9B8F
 518+ 9B8F 04           4 inc b
 519+ 9B90 3C           	inc a
 520+ 9B91 20 FC        	jr nz,4B
 521+ 9B93 78           	ld a,b
 522+ 9B94 08           	ex af,af
 523+ 9B95 2A D2 88     	ld hl,(Indice_Sprite_izq)
 524+ 9B98 23           5 inc hl
 525+ 9B99 23           	inc hl
 526+ 9B9A 10 FC        	djnz 5B
 527+ 9B9C 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 528+ 9B9F CD 91 8C     	call Extrae_address
 529+ 9BA2 22 CA 88     	ld (Puntero_objeto),hl
 530+ 9BA5
 531+ 9BA5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 532+ 9BA5              ; _(Posicion_actual).
 533+ 9BA5
 534+ 9BA5 21 C8 88     	ld hl,Posicion_actual
 535+ 9BA8 35           	dec (hl)
 536+ 9BA9 08           	ex af,af
 537+ 9BAA 6F           	ld l,a
 538+ 9BAB 18 DD        	jr 6B
 539+ 9BAD
 540+ 9BAD              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 541+ 9BAD
 542+ 9BAD 47           3 ld b,a
 543+ 9BAE 2A D0 88     	ld hl,(Indice_Sprite_der)
 544+ 9BB1 23           2 inc hl
 545+ 9BB2 23           	inc hl
 546+ 9BB3 10 FC        	djnz 2B
 547+ 9BB5 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 548+ 9BB8 C9           8 ret
 549+ 9BB9
 550+ 9BB9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 551+ 9BB9              ;
 552+ 9BB9              ;	modifica_parametros_1er_DESPLZ
 553+ 9BB9              ;
 554+ 9BB9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 555+ 9BB9              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 556+ 9BB9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 557+ 9BB9
 558+ 9BB9 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 559+ 9BBC A7           	and a
 560+ 9BBD 20 1E        	jr nz,1F
 561+ 9BBF 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 562+ 9BC0 32 CE 88         ld (CTRL_DESPLZ),a
 563+ 9BC3 21 C7 88     	ld hl,Columns
 564+ 9BC6 34           	inc (hl)
 565+ 9BC7 3A DA 88     	ld a,(Cuad_objeto)
 566+ 9BCA E6 01        	and 1
 567+ 9BCC 20 0F        	jr nz,1F
 568+ 9BCE 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 569+ 9BD1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 570+ 9BD2 22 C8 88     	ld (Posicion_actual),hl
 571+ 9BD5 CD AE 9C     	call Genera_coordenadas
 572+ 9BD8 CD 34 9C     	call Dec_CTRL_DESPLZ
 573+ 9BDB 18 03        	jr 2F
 574+ 9BDD CD 34 9C     1 call Dec_CTRL_DESPLZ
 575+ 9BE0 C9           2 ret
 576+ 9BE1
 577+ 9BE1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 578+ 9BE1
 579+ 9BE1 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 580+ 9BE4 FE F7        	cp $f7
 581+ 9BE6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 582+ 9BE8 30 2C        	jr nc,3F
 583+ 9BEA
 584+ 9BEA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 585+ 9BEA
 586+ 9BEA 06 00        	ld b,0
 587+ 9BEC 04           4 inc b
 588+ 9BED 3C           	inc a
 589+ 9BEE FE F7        	cp $f7
 590+ 9BF0 20 FA        	jr nz,4B
 591+ 9BF2 3E FF        	ld a,$ff
 592+ 9BF4 90           	sub b
 593+ 9BF5 32 CE 88     	ld (CTRL_DESPLZ),a
 594+ 9BF8 18 1C        	jr 3F
 595+ 9BFA
 596+ 9BFA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 597+ 9BFA
 598+ 9BFA 21 C7 88     1 ld hl,Columns
 599+ 9BFD 35           	dec (hl)
 600+ 9BFE AF           	xor a
 601+ 9BFF 32 CE 88     	ld (CTRL_DESPLZ),a
 602+ 9C02 3A DA 88     	ld a,(Cuad_objeto)
 603+ 9C05 E6 01        	and 1
 604+ 9C07 28 0A        	jr z,2F
 605+ 9C09 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 606+ 9C0C 2B           	dec hl
 607+ 9C0D 22 C8 88     	ld (Posicion_actual),hl
 608+ 9C10 CD AE 9C     	call Genera_coordenadas
 609+ 9C13
 610+ 9C13              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 611+ 9C13
 612+ 9C13 CD BB 8C     2 call Inicia_puntero_objeto_izq
 613+ 9C16 C9           3 ret
 614+ 9C17
 615+ 9C17              ; ---------- ---------- ---------- ---------- ---------- ----------
 616+ 9C17              ;
 617+ 9C17              ;	19/10/22
 618+ 9C17              ;
 619+ 9C17              ;	(cp 29) para un Amadeus de 3 Columns.
 620+ 9C17              ;	(cp 30)   ""  ""    ""     2 Columns.
 621+ 9C17
 622+ 9C17 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 623+ 9C1A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 624+ 9C1C C9           	ret
 625+ 9C1D
 626+ 9C1D              ; ---------- ---------- ---------- ---------- ---------- ----------
 627+ 9C1D              ;
 628+ 9C1D              ;	19/10/22
 629+ 9C1D              ;
 630+ 9C1D              ;	(cp 2) para un Amadeus de 3 Columns.
 631+ 9C1D              ;	(cp 1)   ""  ""    ""     2 Columns.
 632+ 9C1D
 633+ 9C1D 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 634+ 9C20 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 635+ 9C22 C9           	ret
 636+ 9C23
 637+ 9C23              ; ---------- ---------- ---------- ---------- ---------- ----------
 638+ 9C23              ;
 639+ 9C23              ;	24/7/22
 640+ 9C23              ;
 641+ 9C23              ;	Inc_CTRL_DESPLZ
 642+ 9C23              ;
 643+ 9C23              ;
 644+ 9C23              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 645+ 9C23
 646+ 9C23 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 647+ 9C26 3A DC 88     	ld a,(Vel_right)
 648+ 9C29 A7           	and a
 649+ 9C2A 28 06        	jr z,1F
 650+ 9C2C 47           	ld b,a
 651+ 9C2D 34           3 inc (hl)
 652+ 9C2E 10 FD        	djnz 3B
 653+ 9C30 18 01        	jr 2F
 654+ 9C32 34           1 inc (hl)
 655+ 9C33 C9           2 ret
 656+ 9C34
 657+ 9C34              ; ---------- ---------- ---------- ---------- ---------- ----------
 658+ 9C34              ;
 659+ 9C34              ;	5/2/23
 660+ 9C34              ;
 661+ 9C34              ;	Dec_CTRL_DESPLZ
 662+ 9C34              ;
 663+ 9C34              ;
 664+ 9C34              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 665+ 9C34
 666+ 9C34 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 667+ 9C37 3A DB 88     	ld a,(Vel_left)
 668+ 9C3A A7           	and a
 669+ 9C3B 28 06        	jr z,1F
 670+ 9C3D 47           	ld b,a
 671+ 9C3E 35           3 dec (hl)
 672+ 9C3F 10 FD        	djnz 3B
 673+ 9C41 18 01        	jr 2F
 674+ 9C43 35           1 dec (hl)
 675+ 9C44 C9           2 ret
 676+ 9C45
 677+ 9C45              ; ---------- ---------- ---------- ---------- ---------- ----------
 678+ 9C45
 679+ 9C45 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 680+ 9C48 01 1F 00     	ld bc,31
 681+ 9C4B A7           	and a
 682+ 9C4C ED 4A        	adc hl,bc
 683+ 9C4E 22 C8 88     	ld (Posicion_actual),hl
 684+ 9C51 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 685+ 9C54 CB C6        	set 0,(hl)
 686+ 9C56 C9           	ret
 687+ 9C57
 688+ 9C57              ; ---------- ---------- ---------- ---------- ---------- ----------
 689+ 9C57
 690+ 9C57 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 691+ 9C5A 01 1F 00     	ld bc,31
 692+ 9C5D A7           	and a
 693+ 9C5E ED 42        	sbc hl,bc
 694+ 9C60 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 695+ 9C63 21 F0 88     	ld hl,Ctrl_0
 696+ 9C66 CB CE        	set 1,(hl)
 697+ 9C68 C9           	ret
 698+ 9C69
 699+ 9C69              ; ---------- ---------- ---------- ---------- ---------- ----------
 700+ 9C69
 701+ 9C69 24           Reaparece_abajo inc h
 702+ 9C6A 01 E0 17     	ld bc,$17e0
 703+ 9C6D A7           	and a
 704+ 9C6E ED 4A        	adc hl,bc
 705+ 9C70 22 C8 88     	ld (Posicion_actual),hl
 706+ 9C73 21 F0 88     	ld hl,Ctrl_0
 707+ 9C76 CB D6        	set 2,(hl)
 708+ 9C78 C9           	ret
 709+ 9C79
 710+ 9C79              ; ---------- ---------- ---------- ---------- ---------- ----------
 711+ 9C79
 712+ 9C79 01 E0 17     Reaparece_arriba ld bc,$17e0
 713+ 9C7C A7           	and a
 714+ 9C7D ED 42        	sbc hl,bc
 715+ 9C7F 22 C8 88     	ld (Posicion_actual),hl
 716+ 9C82 21 F0 88     	ld hl,Ctrl_0
 717+ 9C85 CB DE        	set 3,(hl)
 718+ 9C87 C9           	ret
 719+ 9C88
 720+ 9C88              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 721+ 9C88              ;
 722+ 9C88              ;	15/07/23
 723+ 9C88
 724+ 9C88              Reinicio
 725+ 9C88
 726+ 9C88              ; Vamos a reiniciar los punteros y variables de movimiento.
 727+ 9C88
 728+ 9C88 AF           	xor a
 729+ 9C89 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 730+ 9C8C CD AA 9C     	call Limpia_contenido_hl
 731+ 9C8F
 732+ 9C8F 21 C8 88     	ld hl,Posicion_actual
 733+ 9C92 CD AA 9C     	call Limpia_contenido_hl
 734+ 9C95
 735+ 9C95 CD DA 9F     	call Inicializa_Puntero_indice_mov
 736+ 9C98 CD 64 9F     	call Inicia_Puntero_mov
 737+ 9C9B
 738+ 9C9B 21 F7 88     	ld hl,Incrementa_puntero
 739+ 9C9E 06 05        	ld b,5
 740+ 9CA0 77           1 ld (hl),a
 741+ 9CA1 23           	inc hl
 742+ 9CA2 10 FC        	djnz 1B
 743+ 9CA4
 744+ 9CA4 21 01 89     	ld hl,Ctrl_2
 745+ 9CA7 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 746+ 9CA9
 747+ 9CA9 C9           	ret
 748+ 9CAA
 749+ 9CAA 77           Limpia_contenido_hl	ld (hl),a
 750+ 9CAB 23           	inc hl
 751+ 9CAC 77           	ld (hl),a
 752+ 9CAD C9           	ret
 753+ 9CAE
 754+ 9CAE
# file closed: Direcciones.asm
1666  9CAE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CAE              ; ------------------------------------------------------------------------
   2+ 9CAE              ;
   3+ 9CAE              ;	02/04/23
   4+ 9CAE              ;
   5+ 9CAE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CAE              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CAE              ;
   8+ 9CAE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CAE              ;
  10+ 9CAE              ;	Modifica: A,BC y DE.
  11+ 9CAE
  12+ 9CAE C5           Genera_coordenadas push bc
  13+ 9CAF E5           	push hl
  14+ 9CB0 D5           	push de
  15+ 9CB1
  16+ 9CB1 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9CB4
  18+ 9CB4 7D           	ld a,l
  19+ 9CB5 E6 1F        	and $1f
  20+ 9CB7 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CBA
  22+ 9CBA CD 1F 99     	call calcula_tercio
  23+ 9CBD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CBE
  25+ 9CBE 1E 00        	ld e,0
  26+ 9CC0 7D           	ld a,l
  27+ 9CC1 E6 E0        	and $e0
  28+ 9CC3 28 01        	jr z,1F
  29+ 9CC5 04           	inc b
  30+ 9CC6
  31+ 9CC6 04           1 inc b
  32+ 9CC7 05           	dec b
  33+ 9CC8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CCA              ;														; _ , salimos.
  35+ 9CCA 1C           3 inc e
  36+ 9CCB D6 20        	sub 32
  37+ 9CCD 20 FB        	jr nz,3B
  38+ 9CCF 10 F5        	djnz 1B
  39+ 9CD1
  40+ 9CD1 7B           2 ld a,e
  41+ 9CD2 32 CD 88     	ld (Coordenada_y),a
  42+ 9CD5
  43+ 9CD5 D1           	pop de
  44+ 9CD6 E1           	pop hl
  45+ 9CD7 C1           	pop bc
  46+ 9CD8
  47+ 9CD8 C9           	ret
  48+ 9CD9
  49+ 9CD9              ; ------------------------------------------------------------------------
  50+ 9CD9              ;	28/05/23
  51+ 9CD9              ;
  52+ 9CD9              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CD9              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CD9              ;
  55+ 9CD9              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CD9              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CD9              ;
  58+ 9CD9              ;		DE="$120d"
  59+ 9CD9              ;
  60+ 9CD9              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CD9              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CD9              ;
  63+ 9CD9              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CD9
  65+ 9CD9              ;	Modifica: A,BC y DE.
  66+ 9CD9
  67+ 9CD9
  68+ 9CD9              Genera_coordenadas_disparo
  69+ 9CD9
  70+ 9CD9              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CD9
  72+ 9CD9 7D           	ld a,l
  73+ 9CDA E6 1F        	and $1f
  74+ 9CDC 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CDD CD 1F 99     	call calcula_tercio
  76+ 9CE0 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CE1 1E 00        	ld e,0
  78+ 9CE3 7D           	ld a,l
  79+ 9CE4 E6 E0        	and $e0
  80+ 9CE6 28 01        	jr z,1F
  81+ 9CE8 04           	inc b
  82+ 9CE9 1C           1 inc e
  83+ 9CEA D6 20        	sub 32
  84+ 9CEC 20 FB        	jr nz,1B
  85+ 9CEE 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CF0 C9           	ret
  87+ 9CF1
# file closed: Genera_coordenadas.asm
1667  9CF1              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CF1              ; Relojes y temporizaciones.
   2+ 9CF1
   3+ 9CF1              ; ------------------------------------------------------
   4+ 9CF1              ;
   5+ 9CF1              ;	16/7/23
   6+ 9CF1              ;
   7+ 9CF1              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CF1              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CF1              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CF1              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CF1              ;
  12+ 9CF1              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CF1              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CF1
  15+ 9CF1              ; Disparo_entidad db 1
  16+ 9CF1              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CF1              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CF1
  19+ 9CF1              Habilita_disparos
  20+ 9CF1
  21+ 9CF1 7E           	ld a,(hl)
  22+ 9CF2 A7           	and a
  23+ 9CF3 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9CF4
  25+ 9CF4 EB           	ex de,hl
  26+ 9CF5
  27+ 9CF5 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9CF6 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9CF7
  30+ 9CF7              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9CF7
  32+ 9CF7 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9CF8 7E           	ld a,(hl)
  34+ 9CF9 23           	inc hl
  35+ 9CFA 77           	ld (hl),a
  36+ 9CFB
  37+ 9CFB EB           	ex de,hl						; Habilitamos disparo.
  38+ 9CFC 3E 01        	ld a,1
  39+ 9CFE 77           	ld (hl),a
  40+ 9CFF C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1668  9D00              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D00
   2+ 9D00
   3+ 9D00              ;   07/07/23
   4+ 9D00              ;
   5+ 9D00              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D00              ;
   7+ 9D00              ;   Codificación:
   8+ 9D00              ;
   9+ 9D00              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D00              ;
  11+ 9D00              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D00              ;
  13+ 9D00              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D00              ;
  15+ 9D00              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D00              ;
  17+ 9D00              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D00              ;                               ..... %01000010 Vel_up 4
  19+ 9D00              ;                                               Vel_down 2
  20+ 9D00              ;                               ..... $42
  21+ 9D00              ;
  22+ 9D00              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D00              ;
  24+ 9D00              ;                               ..... %01000010 Vel_left 4
  25+ 9D00              ;                                               Vel_right 2
  26+ 9D00              ;                               ..... $42
  27+ 9D00              ;
  28+ 9D00              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D00              ;
  30+ 9D00              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D00              ;
  32+ 9D00              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D00              ;
  34+ 9D00              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D00              ;                                     $53
  36+ 9D00              ;
  37+ 9D00              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D00              ;
  39+ 9D00              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D00              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D00              ;
  42+ 9D00              ;                       Arriba ..... $81
  43+ 9D00              ;                       Arriba - izquierda ..... $a1
  44+ 9D00              ;                       Arriba - derecha ..... $91
  45+ 9D00              ;
  46+ 9D00              ;                       Abajo ..... $41
  47+ 9D00              ;                       Abajo - izquierda ..... $61
  48+ 9D00              ;                       Abajo - derecha ..... $51
  49+ 9D00              ;
  50+ 9D00              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D00              ;
  52+ 9D00              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D00              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D00              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D00              ;
  56+ 9D00              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D00              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D00              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D00              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D00              ;
  61+ 9D00              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D00              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D00              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D00              ;
  65+ 9D00              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D00              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D00              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D00              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D00
  70+ 9D00              ; ----- ----- ----- ----- -----
  71+ 9D00
  72+ 9D00 2C 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D02 34 9D            defw F_1
  74+ 9D04 3E 9D            defw F_2
  75+ 9D06 48 9D            defw Codo_abajo_derecha
  76+ 9D08 7C 9D            defw Derecha_y_subiendo
  77+ 9D0A 86 9D            defw Derecha_y_subiendo_1
  78+ 9D0C 90 9D            defw F_3
  79+ 9D0E 9A 9D            defw F_4
  80+ 9D10 A4 9D            defw Derecha_y_bajando
  81+ 9D12 AE 9D            defw Derecha_y_bajando_1
  82+ 9D14 B8 9D            defw Derecha_y_bajando_2
  83+ 9D16 C2 9D            defw Codo_derecha_abajo
  84+ 9D18 F2 9D            defw Codo_abajo_izq.
  85+ 9D1A 26 9E            defw Izquierda_y_subiendo
  86+ 9D1C 30 9E            defw Izquierda_y_subiendo_1
  87+ 9D1E 3A 9E            defw F_5
  88+ 9D20 44 9E            defw F_6
  89+ 9D22 4E 9E            defw Izquierda_y_bajando
  90+ 9D24 58 9E            defw Izquierda_y_bajando_1
  91+ 9D26 62 9E            defw Izquierda_y_bajando_2
  92+ 9D28 6C 9E            defw Codo_izquierda_abajo
  93+ 9D2A 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D2C
  95+ 9D2C 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D30 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D34
  98+ 9D34 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D38 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D3C 08 00
 100+ 9D3E 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D42 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D46 0F FE
 102+ 9D48
 103+ 9D48 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D4C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D54 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D5C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D60 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D64 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D68 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D70 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D74 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D78 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D7C
 117+ 9D7C 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D80 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D84 06 00
 119+ 9D86
 120+ 9D86 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D8A 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D8E 02 00
 122+ 9D90
 123+ 9D90 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D94 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D98 04 00
 125+ 9D9A 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D9E 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DA2 08 00
 127+ 9DA4
 128+ 9DA4 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DA8 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DAC 02 00
 130+ 9DAE
 131+ 9DAE 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DB2 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DB6 06 00
 133+ 9DB8
 134+ 9DB8 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DBC 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DC0 06 00
 136+ 9DC2
 137+ 9DC2              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DC2
 139+ 9DC2 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DCA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DCE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DD6 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DDA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DDE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DE2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DE6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DEA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DEE 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DF2
 152+ 9DF2 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DF6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DFE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E06 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E0A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E0E 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E12 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E1A 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E1E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E22 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E26
 166+ 9E26 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E2A 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E2E 06 00
 168+ 9E30
 169+ 9E30 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E34 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E38 02 00
 171+ 9E3A
 172+ 9E3A 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E3E 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E42 04 00
 174+ 9E44 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E48 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E4C 08 00
 176+ 9E4E
 177+ 9E4E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E52 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E56 02 00
 179+ 9E58
 180+ 9E58 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E5C 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E60 06 00
 182+ 9E62
 183+ 9E62 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E66 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E6A 06 00
 185+ 9E6C
 186+ 9E6C 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E74 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E78 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E80 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E88 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E8C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E90 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E94 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E98 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E9C
 199+ 9E9C              ; ----- ----- ----- ----- -----
 200+ 9E9C              ;
 201+ 9E9C              ;   27/06/23
 202+ 9E9C
 203+ 9E9C              Movimiento
 204+ 9E9C
 205+ 9E9C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E9C
 207+ 9E9C              ;    ld hl,(Posicion_actual)
 208+ 9E9C
 209+ 9E9C 3A 01 89         ld a,(Ctrl_2)
 210+ 9E9F CB 57            bit 2,a
 211+ 9EA1 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EA3
 213+ 9EA3 2A F3 88         ld hl,(Puntero_mov)
 214+ 9EA6 7E               ld a,(hl)
 215+ 9EA7
 216+ 9EA7              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EA7
 218+ 9EA7              Inicia_desplazamiento.
 219+ 9EA7
 220+ 9EA7              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EA7
 222+ 9EA7 CD 9B 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EAA
 224+ 9EAA              ; Iniciamos (Repetimos_mov).
 225+ 9EAA
 226+ 9EAA 7E               ld a,(hl)
 227+ 9EAB E6 0F            and $0f
 228+ 9EAD 32 F9 88         ld (Repetimos_desplazamiento),a
 229+ 9EB0 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EB3
 231+ 9EB3              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EB3
 233+ 9EB3 23               inc hl
 234+ 9EB4 7E               ld a,(hl)
 235+ 9EB5 32 FC 88         ld (Cola_de_desplazamiento),a
 236+ 9EB8 2B               dec hl
 237+ 9EB9
 238+ 9EB9 21 01 89         ld hl,Ctrl_2
 239+ 9EBC CB D6            set 2,(hl)
 240+ 9EBE
 241+ 9EBE              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EBE              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EBE
 244+ 9EBE              Desplazamiento_iniciado
 245+ 9EBE
 246+ 9EBE CD 6F 9F         call Aplica_desplazamiento
 247+ 9EC1
 248+ 9EC1 3A 01 89         ld a,(Ctrl_2)
 249+ 9EC4 CB 67            bit 4,a
 250+ 9EC6 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EC7
 252+ 9EC7 21 F9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9ECA 35               dec (hl)
 254+ 9ECB C0               ret nz
 255+ 9ECC
 256+ 9ECC              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9ECC              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9ECC              ; Analiza (Cola_de_desplazamiento).
 259+ 9ECC
 260+ 9ECC 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9ECF A7               and a
 262+ 9ED0 CC C4 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9ED3 28 30            jr z,Reinicia_el_movimiento
 264+ 9ED5
 265+ 9ED5 FE FF            cp $ff
 266+ 9ED7 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9ED9
 268+ 9ED9 FE FE            cp $fe
 269+ 9EDB CC 48 9F         call z,Fijamos_bucle
 270+ 9EDE 28 25            jr z,Reinicia_el_movimiento
 271+ 9EE0
 272+ 9EE0 FE FD            cp $fd
 273+ 9EE2 20 11            jr nz,1F
 274+ 9EE4
 275+ 9EE4              ; ---
 276+ 9EE4              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EE4
 278+ 9EE4 3A 01 89         ld a,(Ctrl_2)
 279+ 9EE7 CB 5F            bit 3,a
 280+ 9EE9 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EEB
 282+ 9EEB              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EEB
 284+ 9EEB 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EEE CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EF0
 287+ 9EF0 CD 59 9F         call Inicia_Repetimos_movimiento
 288+ 9EF3 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EF5              ; ---
 290+ 9EF5
 291+ 9EF5 FE 01        1 cp 1
 292+ 9EF7 CA 32 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9EFA
 294+ 9EFA 3D               dec a
 295+ 9EFB 32 FC 88         ld (Cola_de_desplazamiento),a
 296+ 9EFE
 297+ 9EFE 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F01 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F04              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F04 C9               ret
 301+ 9F05
 302+ 9F05              Reinicia_el_movimiento
 303+ 9F05
 304+ 9F05 3A 01 89         ld a,(Ctrl_2)
 305+ 9F08 CB 5F            bit 3,a
 306+ 9F0A 28 1B            jr z,2F
 307+ 9F0C
 308+ 9F0C              ; (Cola_de_desplazamiento)="254".
 309+ 9F0C
 310+ 9F0C 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F0F 35               dec (hl)
 312+ 9F10 20 15            jr nz,2F
 313+ 9F12
 314+ 9F12              ; Fin de las repeticiones del último movimiento.
 315+ 9F12
 316+ 9F12 21 01 89         ld hl,Ctrl_2
 317+ 9F15 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F17
 319+ 9F17 2A F3 88         ld hl,(Puntero_mov)
 320+ 9F1A 23               inc hl
 321+ 9F1B 23               inc hl
 322+ 9F1C 23               inc hl
 323+ 9F1D 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F20              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F20 7E               ld a,(hl)
 326+ 9F21 32 FC 88         ld (Cola_de_desplazamiento),a
 327+ 9F24
 328+ 9F24 C3 CC 9E         jp Cola
 329+ 9F27
 330+ 9F27 CD 64 9F     2 call Inicia_Puntero_mov
 331+ 9F2A
 332+ 9F2A 21 01 89         ld hl,Ctrl_2
 333+ 9F2D CB 96            res 2,(hl)
 334+ 9F2F
 335+ 9F2F C3 9C 9E         jp Movimiento
 336+ 9F32
 337+ 9F32              Siguiente_desplazamiento
 338+ 9F32
 339+ 9F32              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F32              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F32
 342+ 9F32 21 01 89         ld hl,Ctrl_2
 343+ 9F35 CB 96            res 2,(hl)
 344+ 9F37
 345+ 9F37 2A F3 88         ld hl,(Puntero_mov)
 346+ 9F3A 23               inc hl
 347+ 9F3B 23               inc hl
 348+ 9F3C 22 F3 88         ld (Puntero_mov),hl
 349+ 9F3F
 350+ 9F3F 7E               ld a,(hl)
 351+ 9F40 A7               and a
 352+ 9F41 CC C4 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F44 CA 05 9F         jp z,Reinicia_el_movimiento
 354+ 9F47
 355+ 9F47 C9               ret
 356+ 9F48
 357+ 9F48              ; Subrutinas -----------------------------------------
 358+ 9F48              ; ---------- --------- --------- ---------- ----------
 359+ 9F48              ;
 360+ 9F48              ;   24/07/23
 361+ 9F48              ;
 362+ 9F48              ;   Fijamos_bucle
 363+ 9F48              ;
 364+ 9F48              ;
 365+ 9F48
 366+ 9F48              Fijamos_bucle
 367+ 9F48
 368+ 9F48 3A F7 88         ld a,(Incrementa_puntero)
 369+ 9F4B 3C               inc a
 370+ 9F4C 32 F8 88         ld (Incrementa_puntero_backup),a
 371+ 9F4F
 372+ 9F4F CD C4 9F         call Incrementa_Puntero_indice_mov
 373+ 9F52 2A F1 88         ld hl,(Puntero_indice_mov)
 374+ 9F55 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9F58 C9               ret
 376+ 9F59
 377+ 9F59              ; ---------- --------- --------- ---------- ----------
 378+ 9F59              ;
 379+ 9F59              ;   07/7/23
 380+ 9F59              ;
 381+ 9F59              ;   Inicia_Repetimos_movimiento
 382+ 9F59              ;
 383+ 9F59              ;
 384+ 9F59
 385+ 9F59              Inicia_Repetimos_movimiento
 386+ 9F59
 387+ 9F59              ; Iniciamos (Repetimos_movimiento).
 388+ 9F59
 389+ 9F59 DD 2A F3 88      ld ix,(Puntero_mov)
 390+ 9F5D DD 7E 02         ld a,(ix+2)
 391+ 9F60 32 FB 88         ld (Repetimos_movimiento),a
 392+ 9F63
 393+ 9F63 C9               ret
 394+ 9F64
 395+ 9F64              ; ---------- --------- --------- ---------- ----------
 396+ 9F64              ;
 397+ 9F64              ;   26/6/23
 398+ 9F64              ;
 399+ 9F64              ;   Inicia_Puntero_mov
 400+ 9F64              ;
 401+ 9F64              ;
 402+ 9F64
 403+ 9F64 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F67 5E               ld e,(hl)
 405+ 9F68 23               inc hl
 406+ 9F69 56               ld d,(hl)
 407+ 9F6A EB               ex de,hl
 408+ 9F6B 22 F3 88         ld (Puntero_mov),hl
 409+ 9F6E C9               ret
 410+ 9F6F
 411+ 9F6F              ; ---------- --------- --------- ---------- ----------
 412+ 9F6F              ;
 413+ 9F6F              ;   27/06/23
 414+ 9F6F              ;
 415+ 9F6F              ;   Aplica_movimiento.
 416+ 9F6F
 417+ 9F6F              Aplica_desplazamiento
 418+ 9F6F
 419+ 9F6F              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F6F
 421+ 9F6F 2A F3 88         ld hl, (Puntero_mov)
 422+ 9F72
 423+ 9F72 7E               ld a,(hl)
 424+ 9F73 E6 F0            and $f0
 425+ 9F75 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F76
 427+ 9F76 CB 7E            bit 7,(hl)
 428+ 9F78 28 03            jr z,1F
 429+ 9F7A CD 9A 99         call Mov_up
 430+ 9F7D 2A F3 88     1 ld hl, (Puntero_mov)
 431+ 9F80 CB 76            bit 6,(hl)
 432+ 9F82 28 03            jr z,2F
 433+ 9F84 CD 65 99         call Mov_down
 434+ 9F87 2A F3 88     2 ld hl, (Puntero_mov)
 435+ 9F8A CB 6E            bit 5,(hl)
 436+ 9F8C 28 03            jr z,3F
 437+ 9F8E CD FB 9A         call Mov_left
 438+ 9F91 2A F3 88     3 ld hl, (Puntero_mov)
 439+ 9F94 CB 66            bit 4,(hl)
 440+ 9F96 C8               ret z
 441+ 9F97 CD DD 99         call Mov_right
 442+ 9F9A C9               ret
 443+ 9F9B
 444+ 9F9B              ; ---------- --------- --------- ---------- ----------
 445+ 9F9B              ;
 446+ 9F9B              ;   26/06/23
 447+ 9F9B              ;
 448+ 9F9B              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F9B
 450+ 9F9B              Ajusta_velocidad_desplazamiento
 451+ 9F9B
 452+ 9F9B              ; 1er byte de la cadena de movimiento.
 453+ 9F9B              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F9B
 455+ 9F9B CD B9 9F         call Extrae_nibble_alto
 456+ 9F9E
 457+ 9F9E 32 DD 88         ld (Vel_up),a
 458+ 9FA1 79               ld a,c
 459+ 9FA2 E6 0F            and $0f
 460+ 9FA4 32 DE 88         ld (Vel_down),a
 461+ 9FA7
 462+ 9FA7              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9FA7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9FA7
 465+ 9FA7 23               inc hl
 466+ 9FA8 CD B9 9F         call Extrae_nibble_alto
 467+ 9FAB
 468+ 9FAB 32 DB 88         ld (Vel_left),a
 469+ 9FAE 79               ld a,c
 470+ 9FAF E6 0F            and $0f
 471+ 9FB1 32 DC 88         ld (Vel_right),a
 472+ 9FB4
 473+ 9FB4              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9FB4
 475+ 9FB4 23               inc hl
 476+ 9FB5 22 F3 88         ld (Puntero_mov),hl
 477+ 9FB8 C9               ret
 478+ 9FB9
 479+ 9FB9 06 04        Extrae_nibble_alto ld b,4
 480+ 9FBB 7E               ld a,(hl)
 481+ 9FBC 4F               ld c,a
 482+ 9FBD E6 F0            and $f0
 483+ 9FBF CB 3F        1 srl a
 484+ 9FC1 10 FC            djnz 1B
 485+ 9FC3 C9               ret
 486+ 9FC4
 487+ 9FC4              ; ---------- --------- --------- ---------- ----------
 488+ 9FC4              ;
 489+ 9FC4              ;   5/7/23
 490+ 9FC4              ;
 491+ 9FC4              ;   Incrementa_Puntero_indice_mov
 492+ 9FC4
 493+ 9FC4              Incrementa_Puntero_indice_mov
 494+ 9FC4
 495+ 9FC4 21 F7 88         ld hl,Incrementa_puntero
 496+ 9FC7 34               inc (hl)
 497+ 9FC8
 498+ 9FC8 2A F1 88         ld hl,(Puntero_indice_mov)
 499+ 9FCB 01 02 00         ld bc,2
 500+ 9FCE A7               and a
 501+ 9FCF 09               add hl,bc
 502+ 9FD0 22 F1 88         ld (Puntero_indice_mov),hl
 503+ 9FD3
 504+ 9FD3 7E               ld a,(hl)
 505+ 9FD4 A7               and a
 506+ 9FD5
 507+ 9FD5              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FD5
 509+ 9FD5              ;    jr z,$
 510+ 9FD5
 511+ 9FD5              ;! Reinicia el Patrón de movimiento.
 512+ 9FD5
 513+ 9FD5 CC DA 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FD8
 515+ 9FD8 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FD9
 517+ 9FD9 C9               ret
 518+ 9FDA
 519+ 9FDA
 520+ 9FDA              ; ---------- --------- --------- ---------- ----------
 521+ 9FDA              ;
 522+ 9FDA              ;   24/07/23
 523+ 9FDA              ;
 524+ 9FDA              ;   Inicializa_Puntero_indice_mov
 525+ 9FDA
 526+ 9FDA              Inicializa_Puntero_indice_mov
 527+ 9FDA
 528+ 9FDA              ; Existe etiqueta de bucle principal???
 529+ 9FDA
 530+ 9FDA 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FDD 24               inc h
 532+ 9FDE 25               dec h
 533+ 9FDF 28 05            jr z,2F
 534+ 9FE1
 535+ 9FE1 22 F1 88         ld (Puntero_indice_mov),hl
 536+ 9FE4 18 14            jr 3F
 537+ 9FE6
 538+ 9FE6              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FE6
 540+ 9FE6 3A F7 88     2 ld a,(Incrementa_puntero)
 541+ 9FE9 47               ld b,a
 542+ 9FEA
 543+ 9FEA 2A F1 88         ld hl,(Puntero_indice_mov)
 544+ 9FED 2B           1 dec hl
 545+ 9FEE 2B               dec hl
 546+ 9FEF 10 FC            djnz 1B
 547+ 9FF1 22 F1 88         ld (Puntero_indice_mov),hl
 548+ 9FF4
 549+ 9FF4 AF               xor a
 550+ 9FF5 32 F7 88         ld (Incrementa_puntero),a
 551+ 9FF8 18 06            jr 4F
 552+ 9FFA
 553+ 9FFA 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9FFD 32 F7 88         ld (Incrementa_puntero),a
 555+ A000 C9           4 ret
 556+ A001
 557+ A001
 558+ A001
# file closed: Patrones_de_mov.asm
1669  A001              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A001              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A001              ;
   3+ A001              ;	27/10/23
   4+ A001              ;
   5+ A001              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A001
   7+ A001              ;	ADC HL,SP	LD (addr),SP
   8+ A001              ;	ADD HL,SP	LD SP,(addr)
   9+ A001              ;	ADD IX,SP	LD SP,nn
  10+ A001              ; 	ADD IY,SP	LD SP,HL
  11+ A001              ;				LD SP,IX
  12+ A001              ;	DEC SP		LD SP,IY
  13+ A001
  14+ A001              ;	EX (SP),HL
  15+ A001              ;	EX (SP),IX
  16+ A001              ;	EX (SP),IY
  17+ A001
  18+ A001              ;	INC SP
  19+ A001
  20+ A001                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E6 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD              ;! -----
  47+ 7FAD ED 7B C4 88      ld sp,(Movimiento_precalculado)
  48+ 7FB1 E5               push hl
  49+ 7FB2 DD E5            push ix
  50+ 7FB4 FD E5            push iy
  51+ 7FB6 ED 73 C4 88      ld (Movimiento_precalculado),sp
  52+ 7FBA              ;! -----
  53+ 7FBA
  54+ 7FBA 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  55+ 7FBD
  56+ 7FBD E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  57+ 7FBE DD E5            push ix                                       ; IX contiene el puntero de impresión.
  58+ 7FC0 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  59+ 7FC2
  60+ 7FC2              ; Disparo o entidad?
  61+ 7FC2
  62+ 7FC2 3A 03 89         ld a,(Ctrl_1)
  63+ 7FC5 CB 47            bit 0,a
  64+ 7FC7 28 05            jr z,2F
  65+ 7FC9
  66+ 7FC9 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  67+ 7FCC 18 0F            jr 4F
  68+ 7FCE
  69+ 7FCE              ; No es disparo. Entidad/Amadeus ????
  70+ 7FCE
  71+ 7FCE 3A F0 88     2 ld a,(Ctrl_0)
  72+ 7FD1 CB 77            bit 6,a
  73+ 7FD3 28 05            jr z,7F
  74+ 7FD5
  75+ 7FD5              ; Guardamos foto de Amadeus.
  76+ 7FD5
  77+ 7FD5 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  78+ 7FD8 18 03            jr 4F
  79+ 7FDA
  80+ 7FDA 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  81+ 7FDD
  82+ 7FDD 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  83+ 7FDF
  84+ 7FDF D1           1 pop de
  85+ 7FE0 73               ld (hl),e
  86+ 7FE1 23               inc hl
  87+ 7FE2 72               ld (hl),d
  88+ 7FE3 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  89+ 7FE4 10 F9            djnz 1B
  90+ 7FE6
  91+ 7FE6              ; Disparo o entidad ?
  92+ 7FE6
  93+ 7FE6 3A 03 89         ld a,(Ctrl_1)
  94+ 7FE9 CB 47            bit 0,a
  95+ 7FEB 28 05            jr z,5F
  96+ 7FED
  97+ 7FED 22 1C 89         ld (Stack_snapshot_disparos),hl
  98+ 7FF0 18 13            jr 6F
  99+ 7FF2
 100+ 7FF2              ; Entidad o Amadeus ?
 101+ 7FF2
 102+ 7FF2 3A F0 88     5 ld a,(Ctrl_0)
 103+ 7FF5 CB 77            bit 6,a
 104+ 7FF7 28 09            jr z,8F
 105+ 7FF9
 106+ 7FF9 22 22 89         ld (End_Snapshot_Amadeus),hl
 107+ 7FFC ED 7B 14 89      ld sp,(Stack)
 108+ 8000 FB               ei
 109+ 8001 C9               ret
 110+ 8002
 111+ 8002 22 1A 89     8 ld (Stack_snapshot),hl
 112+ 8005 ED 7B 14 89  6 ld sp,(Stack)
 113+ 8009
 114+ 8009              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 115+ 8009
 116+ 8009 5D               ld e,l
 117+ 800A 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 118+ 800B
 119+ 800B 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 120+ 800E 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 121+ 800F 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 122+ 8010 72               ld (hl),d                                     ; _ álbum a otro.
 123+ 8011 FB               ei
 124+ 8012 C9               ret
 125+ 8013
 126+ 8013              ; ------------------------------------------------
 127+ 8013              ;
 128+ 8013              ;   8/11/23
 129+ 8013              ;
 130+ 8013              ;   La rutina estará situada justo después de:
 131+ 8013              ;   Almacen_de_parametros_DRAW equ $72bd ; ($72bd - $72fa) ; 61 bytes.
 132+ 8013
 133+ 8013              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 134+ 8013              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 135+ 8013
 136+ 8013                  org $72fb
 137+ 72FB
 138+ 72FB              Gestiona_albumes_de_fotos ; 14
 139+ 72FB
 140+ 72FB              ;! Recolocacion.
 141+ 72FB
 142+ 72FB              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 143+ 72FB              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 144+ 72FB
 145+ 72FB 3A 3D 89         ld a,(Ctrl_Semaforo)
 146+ 72FE CB 47            bit 0,a
 147+ 7300 28 62            jr z,7F
 148+ 7302
 149+ 7302              ; Doble recolocación ???. Album_de_fotos_2 y Album_de_fotos_1 vacíos ???
 150+ 7302
 151+ 7302 CB 5F            bit 3,a
 152+ 7304 28 1E            jr z,13F
 153+ 7306
 154+ 7306
 155+ 7306              ; DOBLE RECOLOCACIÓN. ----------- ------------ -----------
 156+ 7306
 157+ 7306              ; Album_de_fotos_1 y Album_de_fotos_2 están vacío pero ... Está Album_de_fotos_3 completo ???
 158+ 7306
 159+ 7306 3A 3C 89         ld a,(Semaforo)
 160+ 7309 CB 5F            bit 3,a
 161+ 730B 28 57            jr z,7F                     ;   No podemos hacer la doble recolocación!!! Album_de_fotos_3 está incompleto.
 162+ 730D
 163+ 730D              ; Volcamos Álbum_3 a Álbum_2
 164+ 730D              ;    ""    Álbum_2 a Álbum_1
 165+ 730D              ; Situamos (Stack_snapshot) al comienzo de Album_de_fotos_2.
 166+ 730D              ; Actualizamos (Semaforo)
 167+ 730D              ; Inicializamos (Ctrl_Semaforo)
 168+ 730D              ; Saltamos a 7F.
 169+ 730D
 170+ 730D CD E1 73         call Album3_a_Album2
 171+ 7310 CD 08 74         call Album2_a_Album1
 172+ 7313 CD 63 74         call Actualiza_punteros_de_albumes
 173+ 7316 CD 55 73         call Modifica_Stack_snapshot
 174+ 7319 21 3C 89     	ld hl,Semaforo
 175+ 731C CB 0E        	rrc (hl)
 176+ 731E AF               xor a
 177+ 731F 32 3D 89         ld (Ctrl_Semaforo),a
 178+ 7322 18 40            jr 7F
 179+ 7324
 180+ 7324              ; ------------ ---------------- ------------
 181+ 7324
 182+ 7324              ;   RECOLOCACIÓN SIMPLE.
 183+ 7324
 184+ 7324              ;   Album3_a_Album2 ?????
 185+ 7324
 186+ 7324 CB 4F        13 bit 1,a
 187+ 7326 20 0A            jr nz,10F
 188+ 7328
 189+ 7328              ;   Álbum_1 vacío.
 190+ 7328
 191+ 7328              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 192+ 7328
 193+ 7328 3A 3C 89         ld a,(Semaforo)
 194+ 732B CB 57            bit 2,a
 195+ 732D 28 35            jr z,7F                      ; No puede haber recolocación. Album_de_fotos_2 está incompleto.
 196+ 732F
 197+ 732F CD 08 74         call Album2_a_Album1
 198+ 7332
 199+ 7332              ; Album3_a_Album2 !!!
 200+ 7332
 201+ 7332              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 202+ 7332
 203+ 7332 3A 3C 89     10 ld a,(Semaforo)
 204+ 7335 CB 5F            bit 3,a
 205+ 7337 20 0B            jr nz,11F
 206+ 7339
 207+ 7339              ; Album_de_fotos_2 está vacío, (sus datos se han volcado a Album_de_fotos_1). Album_de_fotos_3 está incompleto por lo que no vamos a poder hacer el trasbase de datos del álbum_3 al álbum_2.
 208+ 7339              ; Activaremos el bit_3 de (Ctrl_Semaforo) para indicar este hecho.
 209+ 7339
 210+ 7339 21 3D 89         ld hl,Ctrl_Semaforo
 211+ 733C CB DE            set 3,(hl)
 212+ 733E CB 86            res 0,(hl)
 213+ 7340 CB 96            res 2,(hl)
 214+ 7342 18 20            jr 7F
 215+ 7344
 216+ 7344              ; Album_de_fotos_3 contiene un FRAME completo.
 217+ 7344              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 218+ 7344
 219+ 7344 CD E1 73     11 call Album3_a_Album2     ;   X-X-X-0
 220+ 7347 CD 55 73         call Modifica_Stack_snapshot
 221+ 734A
 222+ 734A 21 3D 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 223+ 734D CB 86            res 0,(hl)
 224+ 734F CB 8E            res 1,(hl)
 225+ 7351 CB 96            res 2,(hl)
 226+ 7353 18 0F            jr 7F
 227+ 7355
 228+ 7355 2A 30 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 229+ 7358 CD 91 8C     	call Extrae_address
 230+ 735B 22 1A 89     	ld (Stack_snapshot),hl
 231+ 735E 21 3C 89     	ld hl,Semaforo
 232+ 7361 CB 0E        	rrc (hl)
 233+ 7363 C9               ret
 234+ 7364
 235+ 7364              ; #############################################################3
 236+ 7364
 237+ 7364              ;   En 1er lugar limpiamos el FRAME pintado.
 238+ 7364              ;   Vaciamos Album_de_fotos.
 239+ 7364
 240+ 7364              ;   Album_de_fotos. Contiene datos ???
 241+ 7364
 242+ 7364              ;! Cascada.
 243+ 7364
 244+ 7364 21 01 70     7 ld hl,Album_de_fotos+1
 245+ 7367 7E               ld a,(hl)
 246+ 7368 A7               and a
 247+ 7369 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 248+ 736B
 249+ 736B              ;   Hemos impreso Album_de_fotos.
 250+ 736B              ;   Limpiamos el álbum y actualizamos (End_Snapshot). !!!!!!!!!!!!!!
 251+ 736B
 252+ 736B 2A 1E 89         ld hl,(End_Snapshot)
 253+ 736E 01 00 70         ld bc,Album_de_fotos
 254+ 7371 11 01 70         ld de,Album_de_fotos+1
 255+ 7374 AF               xor a
 256+ 7375 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 257+ 7376
 258+ 7376 CD 56 74         call Limpia_album
 259+ 7379
 260+ 7379 21 00 00         ld hl,0
 261+ 737C 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 262+ 737F
 263+ 737F              ; ----- ----- ----- -----
 264+ 737F
 265+ 737F              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 266+ 737F              ;   Album_de_fotos_1. Contiene un frame completo ???
 267+ 737F
 268+ 737F 3A 3C 89     3 ld a,(Semaforo)
 269+ 7382 CB 4F            bit 1,a
 270+ 7384 20 06            jr nz,4F
 271+ 7386
 272+ 7386              ;! Buffer vacío. El siguiente FRAME no se puede preparar. !!!!!!!!!!!!!!!!!!!!!!!!!
 273+ 7386              ;! Album_de_fotos_1 está incompleto.
 274+ 7386
 275+ 7386 21 3D 89         ld hl,Ctrl_Semaforo
 276+ 7389 CB E6            set 4,(hl)
 277+ 738B C9               ret
 278+ 738C
 279+ 738C              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 280+ 738C
 281+ 738C 21 57 70     4 ld hl,Album_de_fotos_1+1
 282+ 738F 7E               ld a,(hl)
 283+ 7390 A7               and a
 284+ 7391 28 03            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 285+ 7393
 286+ 7393              ; ----- ----- ----- -----
 287+ 7393              ; ----- ----- ----- -----
 288+ 7393
 289+ 7393 CD 2F 74         call Album1_a_Album
 290+ 7396
 291+ 7396              ;   Album_de_fotos_2.
 292+ 7396
 293+ 7396 3A 3D 89     1 ld a,(Ctrl_Semaforo)
 294+ 7399 CB 5F            bit 3,a
 295+ 739B 20 36            jr nz,8F
 296+ 739D
 297+ 739D              ;   El bit_3 de (Ctrl_Semaforo) activo, indica que después de reestructurar, Album_de_fotos_2 está vacío por que Album_de_fotos_3 no está completo.
 298+ 739D              ;   Tenemos que salir de la rutina sin modificar punteros para completar Album_de_fotos_3.
 299+ 739D              ;   Activaremos el bit_0 y el bit_1 de (Ctrl_Semaforo) para volver a reestructurar y volcar sus datos a Album_de_fotos_2.
 300+ 739D
 301+ 739D              ;   Contiene Frame completo ???
 302+ 739D
 303+ 739D 3A 3C 89     12 ld a,(Semaforo)
 304+ 73A0 CB 57            bit 2,a
 305+ 73A2 20 13            jr nz,5F
 306+ 73A4
 307+ 73A4              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 308+ 73A4
 309+ 73A4 21 AD 70         ld hl,Album_de_fotos_2+1
 310+ 73A7 7E               ld a,(hl)
 311+ 73A8 A7               and a
 312+ 73A9 20 04            jr nz,9F
 313+ 73AB
 314+ 73AB              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 315+ 73AB              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 316+ 73AB
 317+ 73AB CD 63 74         call Actualiza_punteros_de_albumes
 318+ 73AE C9               ret
 319+ 73AF
 320+ 73AF              ;   Album_de_fotos_2 no está completo pero contiene datos.
 321+ 73AF
 322+ 73AF 21 3D 89     9 ld hl,Ctrl_Semaforo
 323+ 73B2 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 324+ 73B4 CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 325+ 73B6 C9               ret
 326+ 73B7
 327+ 73B7 21 AD 70     5 ld hl,Album_de_fotos_2+1
 328+ 73BA 7E               ld a,(hl)
 329+ 73BB A7               and a
 330+ 73BC 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 331+ 73BE
 332+ 73BE              ; ----- ----- ----- -----
 333+ 73BE              ; ----- ----- ----- -----
 334+ 73BE              ; ----- ----- ----- -----
 335+ 73BE
 336+ 73BE              ;   Album_de_fotos_2 contiene un frame completo.
 337+ 73BE              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 338+ 73BE
 339+ 73BE CD 08 74         call Album2_a_Album1
 340+ 73C1
 341+ 73C1              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 342+ 73C1              ;   Album_de_fotos_3. Contiene un frame completo ???
 343+ 73C1
 344+ 73C1 3A 3C 89     2 ld a,(Semaforo)
 345+ 73C4 CB 5F            bit 3,a
 346+ 73C6 20 13            jr nz,6F
 347+ 73C8
 348+ 73C8              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 349+ 73C8
 350+ 73C8 21 03 71         ld hl,Album_de_fotos_3+1
 351+ 73CB 7E               ld a,(hl)
 352+ 73CC A7               and a
 353+ 73CD 20 04            jr nz,8F
 354+ 73CF
 355+ 73CF              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 356+ 73CF              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 357+ 73CF
 358+ 73CF CD 63 74         call Actualiza_punteros_de_albumes
 359+ 73D2 C9               ret
 360+ 73D3
 361+ 73D3              ;   Album_de_fotos_3 no está completo.
 362+ 73D3
 363+ 73D3 21 3D 89     8 ld hl,Ctrl_Semaforo
 364+ 73D6 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 365+ 73D8 CB CE            set 1,(hl)
 366+ 73DA C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 367+ 73DB
 368+ 73DB              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 369+ 73DB
 370+ 73DB 21 03 71     6 ld hl,Album_de_fotos_3+1
 371+ 73DE 7E               ld a,(hl)
 372+ 73DF A7               and a
 373+ 73E0 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 374+ 73E1
 375+ 73E1              ; ----- ----- ----- -----
 376+ 73E1              ; ----- ----- ----- -----
 377+ 73E1              ; ----- ----- ----- -----
 378+ 73E1
 379+ 73E1 2A 2C 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 380+ 73E4 01 02 71         ld bc,Album_de_fotos_3                  ; Origen.
 381+ 73E7 11 AC 70         ld de,Album_de_fotos_2                  ; Destino.
 382+ 73EA
 383+ 73EA CD 56 74         call Limpia_album
 384+ 73ED
 385+ 73ED              ;   Actualizamos (End_Snapshot_2):
 386+ 73ED
 387+ 73ED A7               and a
 388+ 73EE ED 4A            adc hl,bc
 389+ 73F0 22 28 89         ld (End_Snapshot_2),hl
 390+ 73F3
 391+ 73F3              ;   Limpiamos Album_de_fotos_3.
 392+ 73F3
 393+ 73F3 2A 2C 89         ld hl,(End_Snapshot_3)
 394+ 73F6 01 02 71         ld bc,Album_de_fotos_3
 395+ 73F9 11 03 71         ld de,Album_de_fotos_3+1
 396+ 73FC AF               xor a
 397+ 73FD 02               ld (bc),a
 398+ 73FE CD 56 74         call Limpia_album
 399+ 7401
 400+ 7401              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 401+ 7401              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 402+ 7401
 403+ 7401 21 00 00         ld hl,0
 404+ 7404 22 2C 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 405+ 7407
 406+ 7407 C9               ret
 407+ 7408
 408+ 7408 2A 28 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 409+ 740B 01 AC 70         ld bc,Album_de_fotos_2                   ; Origen.
 410+ 740E 11 56 70         ld de,Album_de_fotos_1                   ; Destino.
 411+ 7411 CD 56 74         call Limpia_album
 412+ 7414
 413+ 7414              ;   Actualizamos (End_Snapshot_1):
 414+ 7414
 415+ 7414 A7               and a
 416+ 7415 ED 4A            adc hl,bc
 417+ 7417 22 24 89         ld (End_Snapshot_1),hl
 418+ 741A
 419+ 741A              ;   Limpiamos Album_de_fotos_2.
 420+ 741A
 421+ 741A 2A 28 89         ld hl,(End_Snapshot_2)
 422+ 741D 01 AC 70         ld bc,Album_de_fotos_2
 423+ 7420 11 AD 70         ld de,Album_de_fotos_2+1
 424+ 7423 AF               xor a
 425+ 7424 02               ld (bc),a
 426+ 7425 CD 56 74         call Limpia_album
 427+ 7428 21 00 00         ld hl,0
 428+ 742B 22 28 89         ld (End_Snapshot_2),hl                    ; Limpia (End_Snapshot_2).s
 429+ 742E C9               ret
 430+ 742F
 431+ 742F
 432+ 742F 2A 24 89     Album1_a_Album ld hl,(End_Snapshot_1)         ; Final, (origen).
 433+ 7432 01 56 70         ld bc,Album_de_fotos_1      ; Origen.
 434+ 7435 11 00 70         ld de,Album_de_fotos        ; Destino.
 435+ 7438
 436+ 7438 CD 56 74         call Limpia_album
 437+ 743B
 438+ 743B              ;   Calculamos (End_Snapshot)
 439+ 743B
 440+ 743B A7               and a
 441+ 743C ED 4A            adc hl,bc
 442+ 743E 22 1E 89         ld (End_Snapshot),hl
 443+ 7441
 444+ 7441              ;   Limpiamos Album_de_fotos_1.
 445+ 7441
 446+ 7441 2A 24 89         ld hl,(End_Snapshot_1)
 447+ 7444 01 56 70         ld bc,Album_de_fotos_1
 448+ 7447 11 57 70         ld de,Album_de_fotos_1+1
 449+ 744A AF               xor a
 450+ 744B 02               ld (bc),a
 451+ 744C
 452+ 744C CD 56 74         call Limpia_album
 453+ 744F
 454+ 744F 21 00 00         ld hl,0
 455+ 7452 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 456+ 7455 C9               ret
 457+ 7456
 458+ 7456              ; ----------------------------------------------------
 459+ 7456              ;
 460+ 7456              ;   10/8/23
 461+ 7456              ;
 462+ 7456              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 463+ 7456              ;
 464+ 7456              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 465+ 7456              ;           BC ..... Dirección de inicio del álbum.
 466+ 7456              ;           DE ..... Dirección de inicio del álbum. +1
 467+ 7456
 468+ 7456              ;    ld hl,(End_Snapshot)
 469+ 7456              ;    ld bc,Album_de_fotos
 470+ 7456              ;    ld de,Album_de_fotos+1
 471+ 7456
 472+ 7456              ;   MODIFICA: A,HL,BC y DE.
 473+ 7456
 474+ 7456              Limpia_album
 475+ 7456 D5               push de                     ; Guardo DESTINO.
 476+ 7457 C5               push bc                     ; Guardo ORIGEN.
 477+ 7458 ED 42            sbc hl,bc
 478+ 745A 4D               ld c,l
 479+ 745B 44               ld b,h
 480+ 745C E1               pop hl
 481+ 745D C5               push bc
 482+ 745E ED B0            ldir
 483+ 7460 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 484+ 7461 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 485+ 7462 C9               ret                         ; _ a otro).
 486+ 7463
 487+ 7463              ; --------------------------------------------------------------------------------------------
 488+ 7463              ;
 489+ 7463              ;   20/10/23
 490+ 7463
 491+ 7463              ;
 492+ 7463
 493+ 7463              Actualiza_punteros_de_albumes
 494+ 7463
 495+ 7463 2A 30 89         ld hl,(Puntero_indice_album_de_fotos)
 496+ 7466 2B               dec hl
 497+ 7467 2B               dec hl
 498+ 7468 22 30 89         ld (Puntero_indice_album_de_fotos),hl
 499+ 746B
 500+ 746B 2A 34 89         ld hl,(Puntero_indice_End_Snapshot)
 501+ 746E 2B               dec hl
 502+ 746F 2B               dec hl
 503+ 7470 22 34 89         ld (Puntero_indice_End_Snapshot),hl
 504+ 7473 CD 91 8C         call Extrae_address
 505+ 7476 22 38 89         ld (Puntero_de_End_Snapshot),hl
 506+ 7479
 507+ 7479 C9               ret
 508+ 747A
# file closed: Guarda_foto_registros.asm
1670  747A
1671  747A              	SAVESNA "Pruebas.sna", START
1672  747A
1673  747A
1674  747A
1675  747A
# file closed: Banco_de_pruebas.asm
