# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 62 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 17 A5     	call Pinta_disparos_Amadeus
  74  82F6 CD E2 A1     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8B 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 30 92     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 89 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 89 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 8C 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 4E 92     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 24								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8918
  20+ 8918              ;	db 0, defw 0, db 0
  21+ 8918              ;	.....
  22+ 8918
  23+ 8918 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  24+ 891A 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  25+ 891C              ;	defw ...
  26+ 891C              ; 	defw ...
  27+ 891C 00 00        	defw 0
  28+ 891E
  29+ 891E 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  30+ 8920              ;	defw ...
  31+ 8920              ; 	defw ...
  32+ 8920 00 00        	defw 0
  33+ 8922
  34+ 8922              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  35+ 8922
  36+ 8922 00 00        Disparo_Amad defw 0									; Puntero objeto.
  37+ 8924 00 00        	defw 0											; Puntero de impresión.
  38+ 8926
  39+ 8926 5D 89        Indice_de_disparos_entidades defw Disparo_1
  40+ 8928 57 89        	defw Disparo_2
  41+ 892A 51 89        	defw Disparo_3
  42+ 892C 4B 89        	defw Disparo_4
  43+ 892E 45 89        	defw Disparo_5
  44+ 8930 3F 89        	defw Disparo_6
  45+ 8932 39 89        	defw Disparo_7
  46+ 8934
  47+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  48+ 8937 00 00        	defw 0									; Puntero de impresión.
  49+ 8939 00           Disparo_7 db 0	     						; Control.
  50+ 893A
  51+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  52+ 893D 00 00        	defw 0									; Puntero de impresión.
  53+ 893F 00           Disparo_6 db 0		    					; Control.
  54+ 8940
  55+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  56+ 8943 00 00        	defw 0									; Puntero de impresión.
  57+ 8945 00           Disparo_5 db 0			    				; Control.
  58+ 8946
  59+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  60+ 8949 00 00        	defw 0									; Puntero de impresión.
  61+ 894B 00           Disparo_4 db 0				     			; Control.
  62+ 894C
  63+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  64+ 894F 00 00        	defw 0									; Puntero de impresión.
  65+ 8951 00           Disparo_3 db 0					    		; Control.
  66+ 8952
  67+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  68+ 8955 00 00        	defw 0									; Puntero de impresión.
  69+ 8957 00           Disparo_2 db 0						    	; Control.
  70+ 8958
  71+ 8958 00 00 00     	db 0,0,0								; Puntero objeto.
  72+ 895B 00 00        	defw 0									; Puntero de impresión.
  73+ 895D 00           Disparo_1 db 0							    ; Control.
  74+ 895E
  75+ 895E              ; -------------------------------------------------------------------------------------
  76+ 895E              ;
  77+ 895E              ;	Índice de cajas_Masters.
  78+ 895E              ;
  79+ 895E              ;	11/11/24
  80+ 895E              ;
  81+ 895E              ;	12 bytes.
  82+ 895E
  83+ 895E              Indice_de_cajas_master
  84+ 895E
  85+ 895E 68 89        	defw Caja_master_1
  86+ 8960 74 89        	defw Caja_master_2
  87+ 8962 80 89        	defw Caja_master_3
  88+ 8964 8C 89        	defw Caja_master_4
  89+ 8966 98 89        	defw Caja_master_5
  90+ 8968
  91+ 8968 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  92+ 896B 00           	db 0												; (Contador_de_vueltas).
  93+ 896C 00           	db 0												; (Impacto).
  94+ 896D 00 00        	defw 0												; (Puntero_de_impresion).
  95+ 896F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
  96+ 8971 00 00        	defw 0 												; (Contador_de_mov_masticados).
  97+ 8973 00           	db 0												; (Velocidad).
  98+ 8974
  99+ 8974              ; ---------- ---------- ---------- ---------- ----------
 100+ 8974
 101+ 8974 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 102+ 8977 00           	db 0 												; (Contador_de_vueltas).
 103+ 8978 00           	db 0												; (Impacto).
 104+ 8979 00 00        	defw 0												; (Puntero_de_impresion).
 105+ 897B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 106+ 897D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 107+ 897F 00           	db 0												; (Velocidad).
 108+ 8980
 109+ 8980              ; ---------- ---------- ---------- ---------- ----------
 110+ 8980
 111+ 8980 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 112+ 8983 00           	db 0 												; (Contador_de_vueltas).
 113+ 8984 00           	db 0												; (Impacto).
 114+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 115+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 116+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 117+ 898B 00           	db 0												; (Velocidad).
 118+ 898C
 119+ 898C              ; ---------- ---------- ---------- ---------- ----------
 120+ 898C
 121+ 898C 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 122+ 898F 00           	db 0 												; (Contador_de_vueltas).
 123+ 8990 00           	db 0												; (Impacto).
 124+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 125+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 126+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 127+ 8997 00           	db 0												; (Velocidad).
 128+ 8998
 129+ 8998              ; ---------- ---------- ---------- ---------- ----------
 130+ 8998
 131+ 8998 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 132+ 899B 00           	db 0 												; (Contador_de_vueltas).
 133+ 899C 00           	db 0												; (Impacto).
 134+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 135+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 136+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 137+ 89A3 00           	db 0												; (Velocidad).
 138+ 89A4
 139+ 89A4              ; -------------------------------------------------------------------------------------
 140+ 89A4              ;
 141+ 89A4              ;	Índice de cajas de entidades.
 142+ 89A4              ;
 143+ 89A4              ;	18/1/24
 144+ 89A4              ;
 145+ 89A4
 146+ 89A4              Indice_de_cajas_de_entidades
 147+ 89A4
 148+ 89A4 C0 89        	defw Caja_1
 149+ 89A6 CC 89        	defw Caja_2
 150+ 89A8 D8 89        	defw Caja_3
 151+ 89AA E4 89        	defw Caja_4
 152+ 89AC F0 89        	defw Caja_5
 153+ 89AE 00 8A        	defw Caja_6
 154+ 89B0              ;	defw Caja_7
 155+ 89B0
 156+ 89B0 00 00        	defw 0
 157+ 89B2 00 00        	defw 0
 158+ 89B4
 159+ 89B4              ; -------------------------
 160+ 89B4
 161+ 89B4              ; Relleno para que no se corrompa el movimiento. ?????
 162+ 89B4
 163+ 89B4              ;	db 0
 164+ 89B4
 165+ 89B4              ; ---------- ---------- ---------- ---------- ----------
 166+ 89B4              ;
 167+ 89B4              ;	28/05/24
 168+ 89B4              ;
 169+ 89B4              ; 	Cada caja tiene 14 bytes !!!
 170+ 89B4              ;
 171+ 89B4              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 172+ 89B4
 173+ 89B4 00           Amadeus_BOX db 0										; (Tipo).
 174+ 89B5 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 175+ 89B7 00           	db 0												; (Contador_de_vueltas).
 176+ 89B8 00           Impacto_Amadeus	db 0									; (Impacto).
 177+ 89B9 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 178+ 89BB 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 179+ 89BD 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 180+ 89BF 00           	db 0												; (Velocidad).
 181+ 89C0
 182+ 89C0              ; ---------- ---------- ---------- ---------- ----------
 183+ 89C0              ;
 184+ 89C0              ;	22/01/24
 185+ 89C0              ;
 186+ 89C0              ; 	Cada caja tiene 12 bytes !!!
 187+ 89C0              ;
 188+ 89C0              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 189+ 89C0
 190+ 89C0
 191+ 89C0 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 192+ 89C3 00           	db 0												; (Contador_de_vueltas).
 193+ 89C4 00           	db 0												; (Impacto).
 194+ 89C5 00 00        	defw 0												; (Puntero_de_impresion).
 195+ 89C7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 196+ 89C9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 197+ 89CB 00           	db 0												; (Velocidad).
 198+ 89CC
 199+ 89CC              ; ---------- ---------- ---------- ---------- ----------
 200+ 89CC
 201+ 89CC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 202+ 89CF 00           	db 0 												; (Contador_de_vueltas).
 203+ 89D0 00           	db 0												; (Impacto).
 204+ 89D1 00 00        	defw 0												; (Puntero_de_impresion).
 205+ 89D3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 206+ 89D5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 207+ 89D7 00           	db 0												; (Velocidad).
 208+ 89D8
 209+ 89D8              ; ---------- ---------- ---------- ---------- ----------
 210+ 89D8
 211+ 89D8 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 212+ 89DB 00           	db 0 												; (Contador_de_vueltas).
 213+ 89DC 00           	db 0												; (Impacto).
 214+ 89DD 00 00        	defw 0												; (Puntero_de_impresion).
 215+ 89DF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 216+ 89E1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 217+ 89E3 00           	db 0												; (Velocidad).
 218+ 89E4
 219+ 89E4              ; ---------- ---------- ---------- ---------- ----------
 220+ 89E4
 221+ 89E4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 222+ 89E7 00           	db 0 												; (Contador_de_vueltas).
 223+ 89E8 00           	db 0												; (Impacto).
 224+ 89E9 00 00        	defw 0												; (Puntero_de_impresion).
 225+ 89EB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 226+ 89ED 00 00        	defw 0 												; (Contador_de_mov_masticados).
 227+ 89EF 00           	db 0												; (Velocidad).
 228+ 89F0
 229+ 89F0              ; ---------- ---------- ---------- ---------- ----------
 230+ 89F0
 231+ 89F0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 232+ 89F3 00           	db 0 												; (Contador_de_vueltas).
 233+ 89F4 00           	db 0												; (Impacto).
 234+ 89F5 00 00        	defw 0												; (Puntero_de_impresion).
 235+ 89F7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 236+ 89F9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 237+ 89FB 00           	db 0												; (Velocidad).
 238+ 89FC
 239+ 89FC              	org $8a00
 240+ 8A00
 241+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 242+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 243+ 8A04 00           	db 0												; (Impacto).
 244+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 245+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 246+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 247+ 8A0B 00           	db 0												; (Velocidad).
 248+ 8A0C
 249+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 250+ 8A0C
 251+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 252+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 253+ 8A0C              ;	db 0												; (Impacto).
 254+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 255+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 256+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 257+ 8A0C              ;	db 0												; (Velocidad).
 258+ 8A0C
 259+ 8A0C              ; -------------------------------------------------------------------------------------
 260+ 8A0C              ;
 261+ 8A0C              ;	06/12/24
 262+ 8A0C              ;
 263+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 264+ 8A0C              ;
 265+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 266+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 267+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 268+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 269+ 8A0C
 270+ 8A0C              Indice_de_definiciones_de_entidades
 271+ 8A0C
 272+ 8A0C 10 8A        	defw Entidad_1
 273+ 8A0E 1D 8A        	defw Entidad_2
 274+ 8A10
 275+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 276+ 8A10
 277+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 278+ 8A10
 279+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 280+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 281+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 282+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 283+ 8A18
 284+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 285+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 286+ 8A18
 287+ 8A18 14 40        Pos_inicio_entidad1	defw $4014	                        ; (Posicion_inicio).  $4014
 288+ 8A1A 00           	db 0												; (Cuad_objeto).
 289+ 8A1B
 290+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 291+ 8A1D
 292+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 293+ 8A1D
 294+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 295+ 8A20 01           	db 1												; (Contador_de_vueltas).
 296+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 297+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 298+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 299+ 8A27 01           	db 1												; (Cuad_objeto).
 300+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 301+ 8A2A
 302+ 8A2A              ; -------------------------------------------------------------------------------------
 303+ 8A2A              ;
 304+ 8A2A              ;	28/05/24
 305+ 8A2A              ;
 306+ 8A2A              ;	Definición de Amadeus.
 307+ 8A2A              ;
 308+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 309+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 310+ 8A2A
 311+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 312+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 313+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 314+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 315+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 316+ 8A34 03           	db 3												; (Cuad_objeto).
 317+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  96+ 8A63
  97+ 8A63              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  98+ 8A63
  99+ 8A63              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
 100+ 8A63              ;                               Izquierda_y_subiendo+8 (11)
 101+ 8A63              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
 102+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 103+ 8A63              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
 104+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 105+ 8A63              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
 106+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 107+ 8A63              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
 108+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 109+ 8A63              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
 110+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 111+ 8A63              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
 112+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 113+ 8A63              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
 114+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 115+ 8A63
 116+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 117+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 118+ 8A6B
 119+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 120+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 120+ 8A73 08 00
 121+ 8A75
 122+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 123+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 123+ 8A7D 0F FE
 124+ 8A7F
 125+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 126+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 127+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 128+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 129+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 130+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 131+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 132+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 133+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 134+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 135+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 136+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 137+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 138+ 8AB3
 139+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 140+ 8AB7 11 11 91 FD      db $11,$11,$91,253,13,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.                 debug 13!!!!!!!
 140+ 8ABB 0D 00
 141+ 8ABD
 142+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 143+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 143+ 8AC5 02 00
 144+ 8AC7
 145+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 146+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 146+ 8ACF 04 00
 147+ 8AD1
 148+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 149+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 149+ 8AD9 08 00
 150+ 8ADB
 151+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 152+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 152+ 8AE3 02 00
 153+ 8AE5
 154+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 155+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 155+ 8AED 06 00
 156+ 8AEF
 157+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 158+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 158+ 8AF7 06 00
 159+ 8AF9
 160+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 161+ 8AF9
 162+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 163+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 164+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 165+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 166+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 167+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 168+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 169+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 170+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 171+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 172+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 173+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 174+ 8B29
 175+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 176+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 177+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 178+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 179+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 180+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 181+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 182+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 183+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 184+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 185+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 186+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 187+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 188+ 8B5D
 189+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 190+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,15,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.                       Debug 15 !!!!!!!!
 190+ 8B65 0F 00
 191+ 8B67
 192+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 193+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 193+ 8B6F 02 00
 194+ 8B71
 195+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 196+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 196+ 8B79 04 00
 197+ 8B7B
 198+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 199+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 199+ 8B83 08 00
 200+ 8B85
 201+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 202+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 202+ 8B8D 02 00
 203+ 8B8F
 204+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 205+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 205+ 8B97 06 00
 206+ 8B99
 207+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 208+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 208+ 8BA1 06 00
 209+ 8BA3
 210+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 211+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 212+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 213+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 214+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 215+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 216+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 217+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 218+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 219+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 220+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 221+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 222+ 8BD3
 223+ 8BD3
 224+ 8BD3
 225+ 8BD3
 226+ 8BD3
 227+ 8BD3
 228+ 8BD3
 229+ 8BD3
 230+ 8BD3
 231+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 DD 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BDC 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BDD
  18+ 8BDD 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BDE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE2 01 02
  20+ 8BE4 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BE8 01 02
  21+ 8BEA
# file closed: Niveles.asm
 150  8BEA
 151  8BEA              ; --------------------------------------------------------------------------------
 152  8BEA              ;
 153  8BEA              ; 12/05/24
 154  8BEA              ;
 155  8BEA              ; Parámetros DRAW.
 156  8BEA              ;
 157  8BEA
 158  8BEA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEA
 160  8BEA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEB              ;															- Patrón de movimiento.
 162  8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BEC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BED
 165  8BED 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BEE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BEE
 168  8BEE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BEE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BEE              ; Ejemplos.
 171  8BEE
 172  8BEE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BEE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BEE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BEE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BEE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BEE
 178  8BEE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BEF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BEF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BEF
 182  8BEF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF1
 185  8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF3
 187  8BF3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF3
 189  8BF3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF5              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF5
 192  8BF5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF5
 194  8BF5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF6
 200  8BF6 00           Ctrl_2 db 0
 201  8BF7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF7              ;
 209  8BF7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF7              ;														BIT 4, ???
 215  8BF7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF7
 217  8BF7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF8              ;
 223  8BF8              ; 														DESCRIPCIÖN:
 224  8BF8              ;
 225  8BF8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BF8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BF8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BF8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BF8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BF8              ;
 239  8BF8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BF8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BF8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BF8
 243  8BF8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BF8
 245  8BF8 00           Filas db 0												; Filas. [DRAW]
 246  8BF9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BFC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BFE
 250  8BFE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BFE
 252  8BFE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BFF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BFF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BFF
 256  8BFF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BFF
 258  8BFF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BFF              ;
 260  8BFF              ;	COLORES: 0 ..... NEGRO
 261  8BFF              ;    		 1 ..... AZUL
 262  8BFF              ; 			 2 ..... ROJO
 263  8BFF              ;			 3 ..... MAGENTA
 264  8BFF              ; 			 4 ..... VERDE
 265  8BFF              ; 			 5 ..... CIAN
 266  8BFF              ;			 6 ..... AMARILLO
 267  8BFF              ; 			 7 ..... BLANCO
 268  8BFF
 269  8BFF 00 00        Indice_Sprite_der defw 0
 270  8C01 00 00        Indice_Sprite_izq defw 0
 271  8C03 00 00        Puntero_DESPLZ_der defw 0
 272  8C05 00 00        Puntero_DESPLZ_izq defw 0
 273  8C07
 274  8C07 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C09 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0A 00           Columnas db 0
 277  8C0B
 278  8C0B 00           Columnitas db 0
 279  8C0C
 280  8C0C 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 281  8C0E              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 282  8C0E 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 283  8C0F
 284  8C0F              ; variables de control general.
 285  8C0F
 286  8C0F 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 287  8C10
 288  8C10              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 289  8C10
 290  8C10              Perfiles_de_velocidad
 291  8C10
 292  8C10 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 293  8C11 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 294  8C12 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 295  8C13 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 296  8C14
 297  8C14              ; Contadores de 16 bits.
 298  8C14
 299  8C14 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 300  8C16 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 301  8C18 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 302  8C1A 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 303  8C1C
 304  8C1C              ; Movimiento. ------------------------------------------------------------------------------------------------------
 305  8C1C
 306  8C1C 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 307  8C1E 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 308  8C20 00 00        Puntero_indice_mov_bucle defw 0							;
 309  8C22              ;
 310  8C22              ;
 311  8C22 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 312  8C23              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 313  8C23              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 314  8C23 00           Incrementa_puntero_backup db 0
 315  8C24 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 316  8C25              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 317  8C25 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 318  8C26 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 319  8C27 00           Cola_de_desplazamiento db 0								; Este byte indica:
 320  8C28              ;
 321  8C28              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 322  8C28              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 323  8C28              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 324  8C28              ;
 325  8C28              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 326  8C28              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 327  8C28              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 328  8C28              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 329  8C28              ;
 330  8C28              ;														;	"$ff" ..... Bucle infinito de repetición.
 331  8C28              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 332  8C28              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 333  8C28
 334  8C28 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 335  8C29
 336  8C29              ;														DESCRIPCIÓN:
 337  8C29              ;
 338  8C29              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 339  8C29              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 340  8C29              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 341  8C29              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 342  8C29              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 343  8C29              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 344  8C29
 345  8C29              ;														BIT 3, Recarga de nueva oleada.
 346  8C29              ;														BIT 4, Recarga de nueva oleada.
 347  8C29              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 348  8C29              ;														BIT 6, **** Frame completo.
 349  8C29              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 350  8C29
 351  8C29 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 352  8C2B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 353  8C2B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 354  8C2B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 355  8C2B
 356  8C2B              ; Gestión de ENTIDADES y CAJAS.
 357  8C2B
 358  8C2B 00 00        Puntero_store_caja defw 0
 359  8C2D 00 00        Puntero_restore_caja defw 0
 360  8C2F 00 00        Indice_restore_caja defw 0
 361  8C31 00 00        Puntero_indice_master defw 0
 362  8C33
 363  8C33 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 364  8C34 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 365  8C35 00           Entidades_en_curso db 0									; Entidades en pantalla.
 366  8C36
 367  8C36 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 368  8C38 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 369  8C3A              ;														; _ puntero (Indice_entidades).
 370  8C3A
 371  8C3A              ;---------------------------------------------------------------------------------------------------------------
 372  8C3A              ;
 373  8C3A              ;	13/10/24
 374  8C3A              ;
 375  8C3A              ;	Álbumes.
 376  8C3A
 377  8C3A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 378  8C3C              ;														; _variable para almacenar lo posición del puntero_
 379  8C3C              ; 														; _de pila, SP.
 380  8C3C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 381  8C3E              ;														; La utiliza la rutina [Extrae_foto_registros].
 382  8C3E
 383  8C3E              ; Impresión. ----------------------------------------------------------------------------------------------------
 384  8C3E
 385  8C3E 00 00        Album_de_pintado defw 0
 386  8C40 00 00        Album_de_borrado defw 0
 387  8C42 00 00        Album_de_pintado_Amadeus defw 0
 388  8C44 00 00        Album_de_borrado_Amadeus defw 0
 389  8C46
 390  8C46 00 00        Album_de_pintado_disparos_Amadeus defw 0
 391  8C48 00 00        Album_de_borrado_disparos_Amadeus defw 0
 392  8C4A
 393  8C4A 00 00        Album_de_pintado_disparos_Entidades defw 0
 394  8C4C 00 00        Album_de_borrado_disparos_Entidades defw 0
 395  8C4E
 396  8C4E
 397  8C4E 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 398  8C50
 399  8C50 00           Num_de_bytes_album_de_disparos db 0
 400  8C51 00           Num_de_bytes_album_de_disparos_borrado db 0
 401  8C52
 402  8C52 07           Numero_de_disparos_de_entidades db 7
 403  8C53
 404  8C53 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 405  8C54 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 406  8C55
 407  8C55 00 00        Techo_Scanlines_album defw 0
 408  8C57 00 00        Techo_Scanlines_album_2 defw 0
 409  8C59 00           Switch db 0
 410  8C5A 00 00        Techo defw 0
 411  8C5C 00 00        Scanlines_album_SP defw 0
 412  8C5E 00 89        India_SP defw Tabla_de_pintado
 413  8C60 03 89        India_2_SP defw Tabla_de_pintado+3
 414  8C62
 415  8C62 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 416  8C63              ;
 417  8C63              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 418  8C63              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 419  8C63              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 420  8C63              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 421  8C63              ;																Habilita el borrado/pintado de sprites.
 422  8C63              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 423  8C63              ;																_ a la baja.
 424  8C63              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 425  8C63              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 426  8C63              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 427  8C63              ; 																_ el último frame de la explosión de nuestra nave.
 428  8C63              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 429  8C63              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 430  8C63
 431  8C63 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 432  8C64              ;
 433  8C64              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 434  8C64              ;															BIT 1, "1" Indica que hemos aparecido por la parte IZQUIERDA de la pantalla.
 435  8C64
 436  8C64
 437  8C64
 438  8C64
 439  8C64
 440  8C64
 441  8C64 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 442  8C65              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 443  8C65              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 444  8C65
 445  8C65              ; Gestión de Disparos.
 446  8C65
 447  8C65 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 448  8C67 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 449  8C69 00           Impacto2 db 0											; Byte de control de impactos.
 450  8C6A
 451  8C6A              ;
 452  8C6A              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 453  8C6A              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 454  8C6A              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 455  8C6A              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 456  8C6A
 457  8C6A
 458  8C6A
 459  8C6A
 460  8C6A
 461  8C6A
 462  8C6A
 463  8C6A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 464  8C6C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 465  8C6C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 466  8C6C
 467  8C6C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 468  8C6E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 469  8C6E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 470  8C71              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 471  8C71 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 472  8C74              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 473  8C74
 474  8C74              ;---------------------------------------------------------------------------------------------------------------
 475  8C74
 476  8C74              ; Relojes y temporizaciones.
 477  8C74
 478  8C74 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 479  8C75 05           Clock_explosion_Amadeus db 5
 480  8C76 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 481  8C77
 482  8C77 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 483  8C79 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 484  8C7B 00           Numero_rnd_disparos db 0
 485  8C7C
 486  8C7C 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 487  8C7E A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 488  8C7F A0           CLOCK_disparos_de_entidades db $a0
 489  8C80
 490  8C80              ;---------------------------------------------------------------------------------------------------------------
 491  8C80
 492  8C80              ; Gestión de NIVELES.
 493  8C80
 494  8C80 00           Nivel db 0												; Nivel actual del juego.
 495  8C81 00 00        Puntero_indice_NIVELES defw 0
 496  8C83 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 497  8C85              ; 														; _ que definen el NIVEL.
 498  8C85
 499  8C85              ; ---------------------------------------------------------------------------------------------------------------
 500  8C85
 501  8C85              ; Temporizaciones Shield.
 502  8C85
 503  8C85 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 504  8C89 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 505  8C8B 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 506  8C8C 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 507  8C8D 00           Shield_3 db 0
 508  8C8E
 509  8C8E 07           Lives db 7
 510  8C8F
 511  8C8F              ; 	INICIO  *************************************************************************************************************************************************************************
 512  8C8F              ;
 513  8C8F              ;	13/11/24
 514  8C8F
 515  8C8F              START
 516  8C8F
 517  8C8F 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 518  8C92 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 519  8C94 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 520  8C96 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 521  8C98 F3           	DI
 522  8C99
 523  8C99              ; Limpiamos pantalla.
 524  8C99
 525  8C99              ;	ld a,%00000111
 526  8C99              ;	call Cls
 527  8C99 CD 25 92     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 528  8C9C
 529  8C9C              INICIALIZACION
 530  8C9C
 531  8C9C 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 532  8C9E CD F1 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 533  8CA1 CD 23 8F     	call Extrae_numero_aleatorio_y_avanza
 534  8CA4 6F           	ld l,a
 535  8CA5 26 00        	ld h,0
 536  8CA7 22 7C 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 537  8CAA
 538  8CAA              ;	Inicia los álbumes de líneas.
 539  8CAA
 540  8CAA CD 77 91     	call Inicia_albumes_de_lineas
 541  8CAD CD 87 91     	call Inicia_albumes_de_lineas_Amadeus
 542  8CB0 CD 94 91     	call Inicia_albumes_de_disparos
 543  8CB3
 544  8CB3              ;	Inicia 1er Nivel.
 545  8CB3
 546  8CB3 CD 53 94     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 547  8CB6 CD 21 94     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 548  8CB9              ;														   _reponiendo entidades eliminadas.
 549  8CB9 CD 87 94     	call Prepara_Cajas_de_Entidades
 550  8CBC
 551  8CBC CD D7 94     	call Inicia_Amadeus
 552  8CBF
 553  8CBF              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 554  8CBF              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 555  8CBF              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 556  8CBF 11 B4 89     	ld de,Amadeus_BOX
 557  8CC2 CD C6 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 558  8CC5 CD 1A 95     	call Limpiamos_bandeja_DRAW
 559  8CC8
 560  8CC8              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 561  8CC8
 562  8CC8 06 3C        	ld b,60
 563  8CCA CD 34 A0     2 call Amadeus_a_izquierda
 564  8CCD 10 FB        	djnz 2B
 565  8CCF
 566  8CCF CD 55 91     	call Genera_datos_de_impresion_Amadeus
 567  8CD2
 568  8CD2              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 569  8CD2
 570  8CD2 CD B0 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 571  8CD5
 572  8CD5 CD 30 92     	call Inicia_Shield
 573  8CD8
 574  8CD8 2A 5C 8C     6 ld hl,(Scanlines_album_SP)
 575  8CDB 22 55 8C     	ld (Techo_Scanlines_album),hl
 576  8CDE
 577  8CDE 2A 40 8C     	ld hl,(Album_de_borrado)
 578  8CE1 22 5C 8C     	ld (Scanlines_album_SP),hl
 579  8CE4
 580  8CE4 21 00 89     	ld hl,Tabla_de_pintado
 581  8CE7 22 5E 8C     	ld (India_SP),hl
 582  8CEA
 583  8CEA 21 62 8C     	ld hl,Ctrl_3
 584  8CED CB C6        	set 0,(hl) 											; Indica Frame completo.
 585  8CEF CB D6        	set 2,(hl)
 586  8CF1 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 587  8CF3
 588  8CF3 FB           	ei 													; Ha de apuntar a $5c3a.
 589  8CF4
 590  8CF4 76           	halt
 591  8CF5
 592  8CF5              ; ------------------------------------
 593  8CF5
 594  8CF5              Main
 595  8CF5
 596  8CF5              ;
 597  8CF5              ; 07/11/24.
 598  8CF5
 599  8CF5              ; Gestión de disparos.
 600  8CF5
 601  8CF5 CD F8 8E     25 call Change_Disparos								; Intercambiamos los álbumes de disparos.
 602  8CF8 CD 28 A2     	call Motor_de_disparos_entidades
 603  8CFB CD C3 A4     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 604  8CFE
 605  8CFE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 606  8CFE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 607  8CFE              ; Este hecho lo indica el bit2 de (Impacto2).
 608  8CFE
 609  8CFE CD 64 A6     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 610  8D01
 611  8D01              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 612  8D01
 613  8D01 21 7F 8C     	ld hl,CLOCK_disparos_de_entidades
 614  8D04 35           	dec (hl)
 615  8D05 CC 39 8E     	call z,Autoriza_disparo_de_entidades
 616  8D08
 617  8D08 2A 7C 8C     	ld hl,(Clock_next_entity)
 618  8D0B ED 4B 78 5C  	ld bc,(FRAMES)
 619  8D0F A7           	and a
 620  8D10 ED 42        	sbc hl,bc
 621  8D12 20 21        	jr nz,1F
 622  8D14
 623  8D14              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 624  8D14
 625  8D14 CD 23 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 626  8D17 CD 3A 8F     	call Define_Clock_next_entity
 627  8D1A
 628  8D1A              ; GESTIÓN DE ENTIDADES.
 629  8D1A
 630  8D1A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 631  8D1A              ; _ (Clock_next_entity) para la siguiente entidad.
 632  8D1A
 633  8D1A              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 634  8D1A              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 635  8D1A              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 636  8D1A
 637  8D1A 21 34 8C     	ld hl,Numero_parcial_de_entidades
 638  8D1D 46           	ld b,(hl)
 639  8D1E
 640  8D1E 04           	inc b
 641  8D1F 05           	dec b
 642  8D20
 643  8D20 F3           	di
 644  8D21 28 FE        	jr z,$													;! Nivel superado !!!!!
 645  8D23 FB           	ei
 646  8D24
 647  8D24 3A 35 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 648  8D27 B8           	cp b
 649  8D28 28 0B        	jr z,1F
 650  8D2A 30 09        	jr nc,1F
 651  8D2C
 652  8D2C              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 653  8D2C
 654  8D2C 3C           	inc a
 655  8D2D 32 35 8C     	ld (Entidades_en_curso),a
 656  8D30
 657  8D30 21 63 8C     	ld hl,Ctrl_4
 658  8D33 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 659  8D35
 660  8D35              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 661  8D35
 662  8D35              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 663  8D35              ;	call Define_Clock_next_entity
 664  8D35
 665  8D35 3A 35 8C     1 ld a,(Entidades_en_curso)
 666  8D38 A7           	and a
 667  8D39 CA DF 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 668  8D3C 47           	ld b,a													; No hay entidades que gestionar.
 669  8D3D
 670  8D3D              ; ( Código que ejecutamos con cada entidad: ).
 671  8D3D
 672  8D3D              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 673  8D3D              ;
 674  8D3D              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 675  8D3D
 676  8D3D 21 00 89     	ld hl,Tabla_de_pintado
 677  8D40 22 5E 8C     	ld (India_SP),hl
 678  8D43
 679  8D43 21 62 8C     	ld hl,Ctrl_3
 680  8D46 CB D6        	set 2,(hl)
 681  8D48 CD CD 8E     	call Change
 682  8D4B
 683  8D4B C5           2 push bc 												; Nº de entidades en curso.
 684  8D4C
 685  8D4C DD 2A 2B 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 686  8D50 CD 01 92     	call Salta_caja_de_entidades_vacia
 687  8D53
 688  8D53              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 689  8D53
 690  8D53 DD 7E 00     	ld a,(ix+0)
 691  8D56 CB 7F        	bit 7,a
 692  8D58 28 11        	jr z,5F
 693  8D5A
 694  8D5A              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 695  8D5A
 696  8D5A 21 63 8C     	ld hl,Ctrl_4
 697  8D5D CB 46        	bit 0,(hl)
 698  8D5F CC 10 92     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 699  8D62 28 E8        	jr z,6B
 700  8D64
 701  8D64 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 702  8D66 CB BF        	res 7,a
 703  8D68 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 704  8D6B
 705  8D6B              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 706  8D6B              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 707  8D6B
 708  8D6B 3A 69 8C     5 ld a,(Impacto2)
 709  8D6E CB 5F        	bit 3,a
 710  8D70 C4 5A A4     	call nz,Compara_con_coordenadas_de_disparo
 711  8D73
 712  8D73              ; Existe colisión entre esta entidad y Amadeus ???
 713  8D73
 714  8D73 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 715  8D76 CB 4F        	bit 1,a
 716  8D78 C4 4C 93     	call nz,Genera_explosion
 717  8D7B 20 45        	jr nz,Gestiona_siguiente_entidad
 718  8D7D
 719  8D7D DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 720  8D80 A7           	and a
 721  8D81 28 0C        	jr z,3F
 722  8D83
 723  8D83              ; IMPACTO en entidad por colisión con Amadeus.
 724  8D83
 725  8D83              ; 5/7/24
 726  8D83              ; Nota importante:
 727  8D83              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 728  8D83              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 729  8D83              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 730  8D83
 731  8D83 3A B8 89     	ld a,(Impacto_Amadeus)
 732  8D86 A7           	and a
 733  8D87 C4 4C 93     	call nz,Genera_explosion
 734  8D8A 20 36        	jr nz,Gestiona_siguiente_entidad
 735  8D8C
 736  8D8C              ; Falsa colisión !!!
 737  8D8C
 738  8D8C 32 EE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 739  8D8F
 740  8D8F              ; -------------------------------------------
 741  8D8F
 742  8D8F CD CF 90     3 call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 743  8D92
 744  8D92 D5           	push de
 745  8D93 CD 7E 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 746  8D96 CD A5 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 747  8D99 D1           	pop de
 748  8D9A
 749  8D9A DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 750  8D9C DD 2A EF 8B  	ld ix,(Puntero_de_impresion)
 751  8DA0 CD 37 96     	call Genera_datos_de_impresion
 752  8DA3 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 753  8DA5
 754  8DA5 CD 3D 95     	call Decrementa_Contador_de_mov_masticados
 755  8DA8
 756  8DA8              ; -------------------------------------------
 757  8DA8
 758  8DA8              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 759  8DA8
 760  8DA8 2A EF 8B     	ld hl,(Puntero_de_impresion)
 761  8DAB CD 0B 96     	call Genera_coordenadas
 762  8DAE
 763  8DAE ED 4B EB 8B  	ld bc,(Coordenada_X)
 764  8DB2
 765  8DB2 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 766  8DB5 DD 70 02     	ld (ix+2),b
 767  8DB8
 768  8DB8              ; TODO: Generamos disparo ???
 769  8DB8
 770  8DB8 3A 54 8C     	ld a,(Permiso_de_disparo_Entidades)
 771  8DBB A7           	and a
 772  8DBC C4 4E 8E     	call nz,Entidad_genera_disparo_si_procede
 773  8DBF
 774  8DBF CD DE A5     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 775  8DC2
 776  8DC2              Gestiona_siguiente_entidad
 777  8DC2
 778  8DC2 CD 10 92     	call Incrementa_punteros_de_cajas
 779  8DC5
 780  8DC5 C1           	pop bc
 781  8DC6 10 83        	djnz 2B
 782  8DC8
 783  8DC8              ; Hemos gestionado todas las entidades.
 784  8DC8              ; ----- ----- -----
 785  8DC8
 786  8DC8 CD 97 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 787  8DCB CD AE 8F     	call Ordena_tabla_de_impresion
 788  8DCE CD B0 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 789  8DD1
 790  8DD1 CD 4F 8F     	call Borra_diferencia
 791  8DD4
 792  8DD4 3A 62 8C     	ld a,(Ctrl_3)
 793  8DD7 CB 5F        	bit 3,a
 794  8DD9 20 04        	jr nz,Gestion_de_Amadeus
 795  8DDB
 796  8DDB EB           	ex de,hl
 797  8DDC 71           	ld (hl),c
 798  8DDD 2C           	inc l
 799  8DDE 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 800  8DDF
 801  8DDF              ;! GESTIONA AMADEUS !!!!!!!!!!
 802  8DDF
 803  8DDF              Gestion_de_Amadeus
 804  8DDF
 805  8DDF 21 62 8C     	ld hl,Ctrl_3
 806  8DE2 CB 76        	bit 6,(hl)
 807  8DE4 28 13        	jr z,Amadeus_vivo
 808  8DE6
 809  8DE6              ; Amadeus ha sido destruido.
 810  8DE6              ; Decrementa (Temp_new_live).
 811  8DE6
 812  8DE6 21 76 8C     	ld hl,Temp_new_live
 813  8DE9 35           	dec (hl)
 814  8DEA 20 26        	jr nz,End_frame
 815  8DEC
 816  8DEC              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 817  8DEC
 818  8DEC 21 8E 8C     	ld hl,Lives
 819  8DEF 35           	dec (hl)
 820  8DF0
 821  8DF0              ;! Fin del juego
 822  8DF0
 823  8DF0 F3           	di
 824  8DF1 28 FE        	jr z,$														;! GAME OVER !!!!!
 825  8DF3 FB           	ei
 826  8DF4
 827  8DF4              ; Nueva nave.
 828  8DF4
 829  8DF4 CD 6B 8E     	call Reinicia_Amadeus
 830  8DF7 18 19        	jr End_frame
 831  8DF9
 832  8DF9              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 833  8DF9
 834  8DF9              Amadeus_vivo
 835  8DF9
 836  8DF9 3A B8 89     	ld a,(Impacto_Amadeus)
 837  8DFC A7           	and a
 838  8DFD C4 BC 93     	call nz, Genera_explosion_Amadeus
 839  8E00 20 10        	jr nz, End_frame
 840  8E02
 841  8E02 CD 29 93     	call Teclado
 842  8E05 21 62 8C     	ld hl,Ctrl_3
 843  8E08
 844  8E08 CB 6E        	bit 5,(hl)
 845  8E0A 28 06        	jr z,End_frame
 846  8E0C
 847  8E0C              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 848  8E0C
 849  8E0C CD E8 8E     	call Change_Amadeus
 850  8E0F CD 55 91     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 851  8E12
 852  8E12              End_frame
 853  8E12
 854  8E12              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 855  8E12              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 856  8E12
 857  8E12 CD 85 A3     	call Genera_datos_de_impresion_disparos_Entidades
 858  8E15 CD 49 A5     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 859  8E18 CD 9F A4     	call Calcula_bytes_pintado_disparos
 860  8E1B CD AC A4     	call Limpia_album_de_pintado_disparos_entidades
 861  8E1E
 862  8E1E              ; ------------ ------------- --------------
 863  8E1E
 864  8E1E 2A 40 8C     	ld hl,(Album_de_borrado)
 865  8E21 22 5C 8C     	ld (Scanlines_album_SP),hl
 866  8E24
 867  8E24 21 62 8C     	ld hl,Ctrl_3
 868  8E27 CB C6        	set 0,(hl) 											; Indica Frame completo.
 869  8E29 CB 9E        	res 3,(hl)
 870  8E2B CB A6        	res 4,(hl)
 871  8E2D
 872  8E2D 21 63 8C     	ld hl,Ctrl_4
 873  8E30 CB 86        	res 0,(hl)
 874  8E32
 875  8E32 AF           	xor a
 876  8E33 D3 FE        	out ($fe),a
 877  8E35
 878  8E35 76           	halt
 879  8E36
 880  8E36 C3 F5 8C     	jp Main
 881  8E39
 882  8E39              ;------------------------------------------
 883  8E39              ;
 884  8E39              ;	07/11/24
 885  8E39
 886  8E39              Autoriza_disparo_de_entidades
 887  8E39
 888  8E39 3E 01        	ld a,1
 889  8E3B 32 54 8C     	ld (Permiso_de_disparo_Entidades),a
 890  8E3E
 891  8E3E 3A 7E 8C     	ld a,(Repone_CLOCK_disparos)
 892  8E41 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 893  8E43 38 02        	jr c,1F
 894  8E45
 895  8E45              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 896  8E45              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 897  8E45              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 898  8E45
 899  8E45 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 900  8E47
 901  8E47 32 7E 8C     1 ld (Repone_CLOCK_disparos),a
 902  8E4A 32 7F 8C     	ld (CLOCK_disparos_de_entidades),a
 903  8E4D
 904  8E4D C9           	ret
 905  8E4E
 906  8E4E              ;------------------------------------------
 907  8E4E              ;
 908  8E4E              ;	14/09/24
 909  8E4E              ;
 910  8E4E              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 911  8E4E
 912  8E4E              Entidad_genera_disparo_si_procede
 913  8E4E
 914  8E4E 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 915  8E51 CB 06        	rlc (hl)
 916  8E53
 917  8E53 DC D5 A3     	call c,Genera_disparo_de_entidad_maldosa
 918  8E56
 919  8E56 C9           	ret
 920  8E57
 921  8E57              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 922  8E57              ;
 923  8E57              ;	30/09/24
 924  8E57
 925  8E57              Actuaiza_sp_de_disparos_de_entidades
 926  8E57
 927  8E57 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 928  8E5A 23           	inc hl
 929  8E5B 22 79 8C     	ld (Puntero_num_aleatorios_disparos),hl
 930  8E5E
 931  8E5E 11 FD 88     	ld de,Numeros_aleatorios+7
 932  8E61 7B           	ld a,e
 933  8E62 95           	sub l
 934  8E63 C0           	ret nz
 935  8E64
 936  8E64 21 F6 88     1 ld hl,Numeros_aleatorios
 937  8E67 22 79 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 938  8E6A C9           	ret
 939  8E6B
 940  8E6B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 941  8E6B              ;
 942  8E6B              ;	24/07/24
 943  8E6B
 944  8E6B              Reinicia_Amadeus
 945  8E6B
 946  8E6B              ;	Reinicia posición y estado.
 947  8E6B
 948  8E6B 21 CF 50     	ld hl,$50cf
 949  8E6E 22 B9 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 950  8E71 21 CC DC     	ld hl,$dccc
 951  8E74 22 BB 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 952  8E77 21 3D 00     	ld hl,$003d
 953  8E7A 22 BD 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 954  8E7D
 955  8E7D              ;	limpiamos el álbum de borrado.
 956  8E7D
 957  8E7D 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
 958  8E80
 959  8E80 AF           	xor a
 960  8E81 77           	ld (hl),a
 961  8E82
 962  8E82 E5           	push hl
 963  8E83 D1           	pop de
 964  8E84 13           	inc de
 965  8E85
 966  8E85 01 23 00     	ld bc,35
 967  8E88 ED B0        	ldir
 968  8E8A
 969  8E8A CD 55 91     	call Genera_datos_de_impresion_Amadeus
 970  8E8D
 971  8E8D              ;	Reinicia temporizaciones.
 972  8E8D
 973  8E8D CD 30 92     	call Inicia_Shield
 974  8E90
 975  8E90 3E 5A        	ld a,90
 976  8E92 32 8B 8C     	ld (Shield),a
 977  8E95
 978  8E95 3E 64        	ld a,100
 979  8E97 32 76 8C     	ld (Temp_new_live),a
 980  8E9A
 981  8E9A              ; 	Restauramos el FLAG: Amadeus vivo.
 982  8E9A
 983  8E9A 21 62 8C     	ld hl,Ctrl_3
 984  8E9D CB B6        	res 6,(hl)
 985  8E9F
 986  8E9F              ;	Fuerza la impresión de la nave en el siguiente frame.
 987  8E9F
 988  8E9F 21 62 8C      	ld hl,Ctrl_3
 989  8EA2 CB EE        	set 5,(hl)
 990  8EA4
 991  8EA4 C9           	ret
 992  8EA5
 993  8EA5              ; --------------------------------------------------------------------------------------------------------------
 994  8EA5              ;
 995  8EA5              ;	23/11/24
 996  8EA5
 997  8EA5              Ajusta_velocidad_entidad
 998  8EA5
 999  8EA5 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
1000  8EA8 A7           	and a
1001  8EA9 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
1002  8EAA              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
1003  8EAA              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
1004  8EAA
1005  8EAA
1006  8EAA              ; Incrementa (Contador_de_vueltas)x2.
1007  8EAA              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
1008  8EAA
1009  8EAA              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
1010  8EAA              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
1011  8EAA              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
1012  8EAA              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1013  8EAA              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1014  8EAA
1015  8EAA
1016  8EAA CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1017  8EAC DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1018  8EAF E6 10        	and $10
1019  8EB1 C8           	ret z
1020  8EB2
1021  8EB2              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1022  8EB2
1023  8EB2 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1024  8EB5 CB 2F        	sra a
1025  8EB7 CB 2F        	sra a
1026  8EB9 DD 77 0B     	ld (ix+11),a
1027  8EBC
1028  8EBC DD 6E 07     	ld l,(ix+7)
1029  8EBF DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1030  8EC2
1031  8EC2              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1032  8EC2 23           	inc hl
1033  8EC3 23           	inc hl
1034  8EC4 23           	inc hl
1035  8EC5 23           	inc hl
1036  8EC6              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1037  8EC6
1038  8EC6 DD 75 07     	ld (ix+7),l
1039  8EC9 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1040  8ECC
1041  8ECC C9           	ret
1042  8ECD
1043  8ECD              ; --------------------------------------------------------------------------------------------------------------
1044  8ECD              ;
1045  8ECD              ;	25/08/24
1046  8ECD
1047  8ECD              Change
1048  8ECD
1049  8ECD 3A 59 8C     	ld a,(Switch)
1050  8ED0 EE 01        	xor 1
1051  8ED2 32 59 8C     	ld (Switch),a
1052  8ED5 2A 3E 8C     	ld hl,(Album_de_pintado)
1053  8ED8 ED 5B 40 8C  	ld de,(Album_de_borrado)
1054  8EDC EB           	ex de,hl
1055  8EDD 22 3E 8C     	ld (Album_de_pintado),hl
1056  8EE0 22 5C 8C     	ld (Scanlines_album_SP),hl
1057  8EE3 ED 53 40 8C  	ld (Album_de_borrado),de
1058  8EE7 C9           	ret
1059  8EE8
1060  8EE8              Change_Amadeus
1061  8EE8
1062  8EE8 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1063  8EEB ED 5B 44 8C  	ld de,(Album_de_borrado_Amadeus)
1064  8EEF EB           	ex de,hl
1065  8EF0 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1066  8EF3 ED 53 44 8C  	ld (Album_de_borrado_Amadeus),de
1067  8EF7 C9           	ret
1068  8EF8
1069  8EF8              Change_Disparos
1070  8EF8
1071  8EF8              ; Álbumes de Amadeus.
1072  8EF8
1073  8EF8 2A 46 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1074  8EFB ED 5B 48 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1075  8EFF EB           	ex de,hl
1076  8F00 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1077  8F03 ED 53 48 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1078  8F07 CD 94 A4     	call Limpia_album_de_pintado_disparos_Amadeus
1079  8F0A
1080  8F0A              ; Álbumes de entidades.
1081  8F0A
1082  8F0A 2A 4A 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1083  8F0D ED 5B 4C 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1084  8F11 EB           	ex de,hl
1085  8F12 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1086  8F15 ED 53 4C 8C  	ld (Album_de_borrado_disparos_Entidades),de
1087  8F19 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1088  8F1C
1089  8F1C 3A 50 8C     	ld a,(Num_de_bytes_album_de_disparos)
1090  8F1F 32 51 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1091  8F22
1092  8F22 C9           	ret
1093  8F23
1094  8F23              ; ------------------------------------
1095  8F23              ;
1096  8F23              ; 1/05/24
1097  8F23
1098  8F23              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1099  8F23              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1100  8F23
1101  8F23              ;	DESTRUYE: HL,DE,A
1102  8F23              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1103  8F23
1104  8F23              ;	Variables implicadas: (RND_SP).
1105  8F23
1106  8F23              Extrae_numero_aleatorio_y_avanza
1107  8F23
1108  8F23 21 FD 88     	ld hl,Numeros_aleatorios+7
1109  8F26 EB           	ex de,hl
1110  8F27 2A 77 8C     	ld hl,(RND_SP)
1111  8F2A
1112  8F2A 7B           	ld a,e
1113  8F2B 95           	sub l
1114  8F2C 20 06        	jr nz,1F
1115  8F2E
1116  8F2E              ; Sitúa HL al principio de la tabla de nº aleatorios.
1117  8F2E
1118  8F2E 21 F6 88     	ld hl,Numeros_aleatorios
1119  8F31 22 77 8C     	ld (RND_SP),HL
1120  8F34
1121  8F34              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1122  8F34
1123  8F34 7E           1 ld a,(hl)
1124  8F35 23           	inc hl
1125  8F36 22 77 8C     	ld (RND_SP),hl
1126  8F39 C9           	ret
1127  8F3A
1128  8F3A              ; ------------------------------------
1129  8F3A              ;
1130  8F3A              ; 1/05/24
1131  8F3A
1132  8F3A              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1133  8F3A              ; (1 a 4 segundos).
1134  8F3A              ; Actualizamos (Clock_next_entity) con A.
1135  8F3A
1136  8F3A              ;	DESTRUYE: A y B.
1137  8F3A              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1138  8F3A              ;			 Actualiza (Clock_next_entity) con A.
1139  8F3A
1140  8F3A              ;	Variables implicadas: (Clock_next_entity).
1141  8F3A
1142  8F3A              ; Notas:
1143  8F3A
1144  8F3A              ; 	$32 1 seg.
1145  8F3A              ; 	$64 2 seg.
1146  8F3A              ; 	$96 3 seg.
1147  8F3A              ; 	$c8 4 seg.
1148  8F3A              ; 	$fa 5 seg.
1149  8F3A
1150  8F3A              ; $ffff 1310,7 seg, 22 minutos.
1151  8F3A
1152  8F3A              ;	$0100  5 seg. aproximadamente.
1153  8F3A              ;	$0200 10 seg. aproximadamente.
1154  8F3A              ;	$0300 15 seg. aproximadamente.
1155  8F3A              ;	$0400 20 seg. aproximadamente.
1156  8F3A              ;	$0500 25 seg. aproximadamente.
1157  8F3A              ;	$0600 30 seg. aproximadamente.
1158  8F3A
1159  8F3A              Define_Clock_next_entity
1160  8F3A
1161  8F3A FE 34        	cp $34
1162  8F3C 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1163  8F3E
1164  8F3E              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1165  8F3E
1166  8F3E 4F           3 ld c,a
1167  8F3F 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1168  8F41 2A 78 5C     	ld hl,(FRAMES)
1169  8F44 A7           	and a
1170  8F45 ED 4A        	adc hl,bc
1171  8F47 22 7C 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1172  8F4A C9           	ret
1173  8F4B
1174  8F4B 3E 34        1 ld a,$34
1175  8F4D 18 EF        	jr 3B
1176  8F4F
1177  8F4F              ; ------------------------------------
1178  8F4F              ;
1179  8F4F              ; 18/03/24
1180  8F4F
1181  8F4F              Borra_diferencia
1182  8F4F
1183  8F4F ED 4B 5C 8C  	ld bc,(Scanlines_album_SP)
1184  8F53
1185  8F53 3A 59 8C     	ld a,(Switch)
1186  8F56 A7           	and a
1187  8F57 28 08        	jr z,2F
1188  8F59
1189  8F59 2A 57 8C     	ld hl,(Techo_Scanlines_album_2)
1190  8F5C 11 57 8C     	ld de,Techo_Scanlines_album_2
1191  8F5F 18 06        	jr 3F
1192  8F61
1193  8F61 2A 55 8C     2 ld hl,(Techo_Scanlines_album)
1194  8F64 11 55 8C     	ld de,Techo_Scanlines_album
1195  8F67
1196  8F67              ; Diferencia.
1197  8F67
1198  8F67 ED 42        3 sbc hl,bc
1199  8F69
1200  8F69 C8           	ret z
1201  8F6A D8           	ret c
1202  8F6B
1203  8F6B              ; Nuevo techo, (más bajo que el anterior).
1204  8F6B              ; Fijamos nuevo techo y borramos bytes sobrantes.
1205  8F6B
1206  8F6B EB           	ex de,hl
1207  8F6C
1208  8F6C 71           	ld (hl),c
1209  8F6D 2C           	inc l
1210  8F6E 70           	ld (hl),b
1211  8F6F
1212  8F6F AF           	xor a
1213  8F70 43           	ld b,e
1214  8F71
1215  8F71 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1216  8F74
1217  8F74 77           1 ld (hl),a
1218  8F75 23           	inc hl
1219  8F76 10 FC        	djnz 1B
1220  8F78
1221  8F78              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1222  8F78
1223  8F78 21 62 8C     	ld hl,Ctrl_3
1224  8F7B CB DE        	set 3,(hl)
1225  8F7D
1226  8F7D C9           	ret
1227  8F7E
1228  8F7E              ; --------------------------------------------------------------------------------------------------------------
1229  8F7E              ;
1230  8F7E              ;	23/11/24
1231  8F7E              ;
1232  8F7E              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1233  8F7E
1234  8F7E              Entidad_a_Tabla_de_pintado
1235  8F7E
1236  8F7E              ; Almacena la Coordenada Y de la entidad en curso.
1237  8F7E
1238  8F7E              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1239  8F7E
1240  8F7E DD 7E 02     	ld a,(ix+2)
1241  8F81 2A 5E 8C     	ld hl,(India_SP)
1242  8F84 77           	ld (hl),a
1243  8F85 2C           	inc l
1244  8F86
1245  8F86              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1246  8F86
1247  8F86 ED 5B 5C 8C  	ld de,(Scanlines_album_SP)
1248  8F8A
1249  8F8A 73           	ld (hl),e
1250  8F8B 2C           	inc l
1251  8F8C 72           	ld (hl),d
1252  8F8D 2C           	inc l
1253  8F8E
1254  8F8E              ; El 4º .db de la tabla será (Columnas).
1255  8F8E
1256  8F8E 3A 0A 8C     	ld a,(Columnas)
1257  8F91 77           	ld (hl),a
1258  8F92 2C           	inc l
1259  8F93 22 5E 8C     	ld (India_SP),hl
1260  8F96
1261  8F96 C9           	ret
1262  8F97
1263  8F97              ; --------------------------------------------------------------------------------------------------------------
1264  8F97              ;
1265  8F97              ;	27/03/24
1266  8F97              ;
1267  8F97
1268  8F97              Inicializa_India_y_limpia_Tabla_de_impresion
1269  8F97
1270  8F97 2A 5E 8C     	ld hl,(India_SP)
1271  8F9A 01 17 89     	ld bc,Indice_de_almacenes_de_mov_masticados-1							; Bytes de (Tabla_de_pintado)-1.
1272  8F9D
1273  8F9D 79           	ld a,c
1274  8F9E 95           	sub l
1275  8F9F 28 06        	jr z,2F
1276  8FA1 47           	ld b,a																	; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1277  8FA2              ;																			; _ y pasamos a inicializar (India_SP).
1278  8FA2 AF           	xor a
1279  8FA3
1280  8FA3 77           1 ld (hl),a
1281  8FA4 2C           	inc l
1282  8FA5 10 FC        	djnz 1B																	; Limpia Tabla.
1283  8FA7
1284  8FA7 21 00 89     2 ld hl,Tabla_de_pintado													; Inicializa (India_SP).
1285  8FAA 22 5E 8C     	ld (India_SP),hl
1286  8FAD
1287  8FAD C9           	ret
1288  8FAE
1289  8FAE              ; --------------------------------------------------------------------------------------------------------------
1290  8FAE              ;
1291  8FAE              ;	31/3/24
1292  8FAE
1293  8FAE              Ordena_tabla_de_impresion
1294  8FAE
1295  8FAE              ; 5794 T/states.
1296  8FAE              ; 6278 T/states.
1297  8FAE              ; 5310 T/states.
1298  8FAE
1299  8FAE              ; Inicializamos punteros (India_SP) e (India_2_SP).
1300  8FAE              ; Inicializamos contador de comparaciones, [C].
1301  8FAE              ; Cargamos los registros A y B para efectuar comparación.
1302  8FAE
1303  8FAE FD 2E 00     	ld iyl,0
1304  8FB1
1305  8FB1 3A 35 8C     	ld a,(Entidades_en_curso)
1306  8FB4 FE 04        	cp 4 	;	4
1307  8FB6 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1308  8FB7
1309  8FB7 3D           	dec a
1310  8FB8 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1311  8FB9 51           	ld d,c 										; Copia de respaldo.
1312  8FBA
1313  8FBA 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1314  8FBB
1315  8FBB 21 04 89     	ld hl,Tabla_de_pintado+4
1316  8FBE 46           	ld b,(hl)
1317  8FBF 22 60 8C     	ld (India_2_SP),hl
1318  8FC2
1319  8FC2 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1320  8FC3 DC EB 8F     	call c, Avanza_India_2_SP
1321  8FC6 CC EB 8F     	call z, Avanza_India_2_SP
1322  8FC9
1323  8FC9 FD 2D        	dec iyl
1324  8FCB 28 18        	jr z,2F
1325  8FCD
1326  8FCD
1327  8FCD              ; --------------------------------------------------------------------------------------------------------------
1328  8FCD              ;
1329  8FCD              ;	7/4/24
1330  8FCD
1331  8FCD              Trueque
1332  8FCD
1333  8FCD              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1334  8FCD              ;  			A contiene en nº de fila de (India_SP).
1335  8FCD              ;			HL contiene (India_2_SP).
1336  8FCD
1337  8FCD D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1338  8FCE E5           	push hl										; Preservo (India_2_SP).
1339  8FCF
1340  8FCF ED 5B 5E 8C  	ld de,(India_SP)
1341  8FD3 EB           	ex de,hl
1342  8FD4 70           	ld (hl),b
1343  8FD5 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1344  8FD6
1345  8FD6 CD 1A 90     	call Intercambia_1_byte
1346  8FD9 CD 1A 90     	call Intercambia_1_byte
1347  8FDC
1348  8FDC
1349  8FDC              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1350  8FDC              ; Recuperamos (India_2_SP) en HL.
1351  8FDC
1352  8FDC 2A 5E 8C     	ld hl,(India_SP)
1353  8FDF 7E           	ld a,(hl)
1354  8FE0
1355  8FE0 E1           	pop hl
1356  8FE1 D1           	pop de
1357  8FE2
1358  8FE2              ; --------------------------------------------------------------------------------------------------------------
1359  8FE2
1360  8FE2 CD EB 8F     	call Avanza_India_2_SP
1361  8FE5
1362  8FE5 14           2 inc d
1363  8FE6 15           	dec d
1364  8FE7 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1365  8FE8 18 D8        	jr 1B
1366  8FEA
1367  8FEA C9           	ret
1368  8FEB
1369  8FEB              ; ----- ----- ----- ----- -----
1370  8FEB
1371  8FEB              Avanza_India_2_SP
1372  8FEB
1373  8FEB 0D           	dec c
1374  8FEC 28 0B        	jr z,Avanza_punteros_indios
1375  8FEE
1376  8FEE FD 2C        	inc iyl
1377  8FF0
1378  8FF0 2C           	inc l
1379  8FF1 2C           	inc l
1380  8FF2 2C           	inc l
1381  8FF3 2C           	inc l
1382  8FF4
1383  8FF4 46           	ld b,(hl)
1384  8FF5 22 60 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1385  8FF8
1386  8FF8 C9           	ret
1387  8FF9
1388  8FF9              ; ----- ----- ----- ----- -----
1389  8FF9
1390  8FF9              Avanza_punteros_indios
1391  8FF9
1392  8FF9 15           	dec d
1393  8FFA 28 17        	jr z,Prepara_salida
1394  8FFC
1395  8FFC 4A           	ld c,d
1396  8FFD
1397  8FFD 2A 5E 8C     	ld hl,(India_SP)
1398  9000
1399  9000 2C           	inc l
1400  9001 2C           	inc l
1401  9002 2C           	inc l
1402  9003 2C           	inc l
1403  9004
1404  9004 7E           	ld a,(hl)
1405  9005 22 5E 8C     	ld (India_SP),hl
1406  9008
1407  9008 2C           	inc l
1408  9009 2C           	inc l
1409  900A 2C           	inc l
1410  900B 2C           	inc l
1411  900C
1412  900C 46           	ld b,(hl)
1413  900D 22 60 8C     	ld (India_2_SP),hl
1414  9010
1415  9010 FD 2C        	inc iyl
1416  9012
1417  9012 C9           	ret
1418  9013
1419  9013              Prepara_salida
1420  9013
1421  9013 21 00 89     	ld hl,Tabla_de_pintado
1422  9016 22 5E 8C     	ld (India_SP),hl
1423  9019 C9           	ret
1424  901A
1425  901A
1426  901A 2C           Intercambia_1_byte inc l
1427  901B 1C           	inc e
1428  901C 46           	ld b,(hl)
1429  901D 1A           	ld a,(de)
1430  901E EB           	ex de,hl
1431  901F 70           	ld (hl),b
1432  9020 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1433  9021 C9           	ret
1434  9022
1435  9022              ; -----------------------------------------------------------------------------------
1436  9022              ;
1437  9022              ;	20/01/24
1438  9022              ;
1439  9022              ;
1440  9022
1441  9022              Construye_movimientos_masticados_entidad
1442  9022
1443  9022 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1444  9025 E5           	push hl
1445  9026 CD C2 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1446  9029              ;															; _ el (Contador_de_mov_masticados).
1447  9029 CD CC 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1448  902C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1449  902C CD D7 9C     	call Recompone_posicion_inicio
1450  902F
1451  902F CD BD 99     1 call Draw
1452  9032
1453  9032              ;	IX contiene (Puntero_de_impresion)
1454  9032              ;	IY contiene (Puntero_objeto)
1455  9032
1456  9032 CD 76 90     	call Codifica_Puntero_de_impresion
1457  9035
1458  9035              ; debug !!!!!!!!!!!!!!!!!!!
1459  9035
1460  9035 2A FA 8B     	ld hl,(Posicion_actual)
1461  9038 7D           	ld a,l
1462  9039 E6 1F        	and $1f
1463  903B FE 01        	cp 1
1464  903D 28 FE        	jr z,$
1465  903F
1466  903F               ;                                   Columna  ..... 0        Columna ..... 1
1467  903F
1468  903F              ;	Puntero_de_impresion $8bef ..... $4780 ..... $4780 ---   $4680 ..... $4680
1469  903F              ;	Columns $8bf9 	  		   ..... 3     ..... 3	   --- 	 2	   ..... 3
1470  903F              ;	Posicion_actual $8bfa	   ..... $46c0 ..... $46c0 --- 	 $45c1 ..... $45c1
1471  903F              ;	CTRL_DESPLZ $8bfe		   ..... $fa   ..... $fc   --- 	 $00   ..... $f9
1472  903F              ;	Puntero_objeto $8bfc	   ..... $85d2 ..... $8632 --- 	 $8541 ..... $85a1
1473  903F              ;	Puntero_DESPLZ_der $8c03   ..... $8536 ..... $853a ---   $8530 ..... $8534
1474  903F              ;	Puntero_DESPLZ_izq $8c05   ..... $8398 ..... $8394 ---   $838e ..... $839a
1475  903F              ;	Cuad_objeto $8c09		   ..... 1	   ..... 1	   --- 	 1	   ..... 1
1476  903F              ;	Columnas $8c0a			   ..... 1     ..... 1     ---   2	   ..... 2
1477  903F              ;	Columnitas $8c0b		   ..... 1     ..... 1     ---   2 	   ..... 2
1478  903F              ;	Puntero_de_almacen_d $8bf1 ..... $df74 ..... $df78 ..... $df7c ..... $df80
1479  903F
1480  903F CD 5B 90     2 call Guarda_movimiento_masticado
1481  9042
1482  9042 CD 67 A0     	call Movimiento
1483  9045
1484  9045 3A 62 8C     	ld a,(Ctrl_3)																					; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1485  9048 CB 4F        	bit 1,a 																						; _ que corresponde a esta entidad.
1486  904A 28 E3        	jr z,1B
1487  904C
1488  904C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1489  904C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1490  904C
1491  904C E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1492  904D 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1493  9050
1494  9050              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1495  9050
1496  9050 CD CB A1     	call Situa_en_contador_general_de_mov_masticados
1497  9053
1498  9053              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1499  9053              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1500  9053
1501  9053 ED 4B F3 8B  	ld bc,(Contador_de_mov_masticados)
1502  9057
1503  9057 71           	ld (hl),c
1504  9058 23           	inc hl
1505  9059 70           	ld (hl),b
1506  905A
1507  905A C9           	ret
1508  905B
1509  905B              ; -----------------------------------------------------------------------------------
1510  905B              ;
1511  905B              ;	28/12/23
1512  905B              ;
1513  905B              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1514  905B              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1515  905B
1516  905B              Guarda_movimiento_masticado
1517  905B
1518  905B ED 73 3A 8C  	ld (Stack),sp
1519  905F ED 7B F1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1520  9063
1521  9063 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1522  9065 FD E5            push iy 												; Pushea Puntero_objeto.
1523  9067
1524  9067 ED 7B 3A 8C      ld sp,(Stack)
1525  906B
1526  906B 2A F3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1527  906E 23           	inc hl
1528  906F 22 F3 8B     	ld (Contador_de_mov_masticados),hl
1529  9072
1530  9072 CD C2 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1531  9075              ;															; _ el (Contador_de_mov_masticados).
1532  9075 C9               ret
1533  9076
1534  9076              ; --------------------------------------------------------------------------------------------------------------
1535  9076              ;
1536  9076              ;	26/01/25
1537  9076              ;
1538  9076              ;	INPUTS: IX contiene (Puntero_de_impresion)
1539  9076              ;			IY contiene (Puntero_objeto)
1540  9076
1541  9076              Codifica_Puntero_de_impresion
1542  9076
1543  9076              ; 	En 1er lugar verificamos si estamos en zona de video, RET si no es así.
1544  9076
1545  9076 DD 7C        	ld a,ixh
1546  9078 CB 77        	bit 6,a
1547  907A C8           	ret z
1548  907B
1549  907B              ;	Correcciones:
1550  907B
1551  907B              ; 	Posicion_actual $8bfa
1552  907B              ;	CTRL_DESPLZ $8bfe
1553  907B              ;	Puntero_DESPLZ_der $8c03
1554  907B              ; 	Puntero_DESPLZ_izq $8c05
1555  907B              ;	Puntero_de_almacen_de_mov_masticados $8bf1
1556  907B              ;	Cuad_objeto $8c09
1557  907B              ;	Columnitas $8c0b
1558  907B              ;	Columns $8bf9
1559  907B
1560  907B              ;	Codificamos (Puntero_de_impresion) en función del nº de (Columnitas) a imprimir.
1561  907B
1562  907B 3A 0B 8C     	ld a,(Columnitas)
1563  907E 3D           	dec a
1564  907F 28 14        	jr z,Codificamos_una_Columnita
1565  9081
1566  9081 3D           	dec a
1567  9082 28 01        	jr z,Codificamos_dos_Columnitas
1568  9084
1569  9084 C9           	ret
1570  9085
1571  9085              Codificamos_dos_Columnitas
1572  9085
1573  9085 DD 7C        	ld a,ixh
1574  9087 CB FF        	set 7,a
1575  9089 DD 67        	ld ixh,a
1576  908B
1577  908B              ;	Si nos encontramos en el lado derecho de la pantalla no modificamos (Puntero_objeto).
1578  908B
1579  908B 3A 09 8C     1 ld a,(Cuad_objeto)
1580  908E E6 01        	and 1
1581  9090 C8           	ret z
1582  9091
1583  9091 CD 9D 90      	call Ajusta_Puntero_objeto
1584  9094
1585  9094 C9           	ret
1586  9095
1587  9095              Codificamos_una_Columnita
1588  9095
1589  9095 DD 7C        	ld a,ixh
1590  9097 CB EF        	set 5,a
1591  9099 DD 67        	ld ixh,a
1592  909B
1593  909B 18 EE        	jr 1B
1594  909D
1595  909D              ; ----- ----- ----- ----- -----
1596  909D
1597  909D              Ajusta_Puntero_objeto
1598  909D
1599  909D              ;	Vamos a imprimir "1" o "2" Columnas en la parte izquierda de la pantalla.
1600  909D
1601  909D 3A 0B 8C     	ld a,(Columnitas)
1602  90A0 47           	ld b,a
1603  90A1 3A F9 8B     	ld a,(Columns)
1604  90A4 90           	sub b
1605  90A5 20 11        	jr nz,2F
1606  90A7
1607  90A7              ;	Cuando estamos apareciendo por el lado izquierdo:
1608  90A7              ;
1609  90A7              ;	(Columns)-(Columnitas)="0"
1610  90A7              ;	2-2=0, No deberíamos modificar (Puntero_objeto) pero al estar "APARECIENDO" necesitamos imprimir las 2 últimas columnas del Sprite en lugar de las 2 primeras.
1611  90A7
1612  90A7              ; B contiene (Columnitas)
1613  90A7              ;	Desplazamos a derecha ... NZ,2F
1614  90A7              ;	dec b
1615  90A7              ;	dec b
1616  90A7              ;	jr nz,2F
1617  90A7
1618  90A7 3A 0B 8C     	ld a,(Columnitas)
1619  90AA FE 02        	cp 2
1620  90AC 20 0A        	jr nz,2F
1621  90AE
1622  90AE 3A 63 8C     	ld a,(Ctrl_4)
1623  90B1 CB 4F        	bit 1,a
1624  90B3 C8           	ret z
1625  90B4
1626  90B4 06 01        	ld b,1
1627  90B6 18 01        	jr 1F
1628  90B8
1629  90B8 47           2 ld b,a
1630  90B9
1631  90B9 FD 2C        1 inc iyl
1632  90BB 10 FC        	djnz 1B
1633  90BD
1634  90BD FD 22 FC 8B  	ld (Puntero_objeto),iy
1635  90C1
1636  90C1 C9           	ret
1637  90C2
1638  90C2              ; --------------------------------------------------------------------------------------------------------------
1639  90C2              ;
1640  90C2              ;	12/1/24
1641  90C2              ;
1642  90C2              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1643  90C2
1644  90C2              Actualiza_Puntero_de_almacen_de_mov_masticados
1645  90C2
1646  90C2 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1647  90C5 01 04 00     	ld bc,4
1648  90C8 A7           	and a
1649  90C9 ED 4A        	adc hl,bc
1650  90CB 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1651  90CE C9           	ret
1652  90CF
1653  90CF              ; ------------------------------------------
1654  90CF              ;
1655  90CF              ;	23/11/24
1656  90CF              ;
1657  90CF              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1658  90CF
1659  90CF
1660  90CF              Obtenemos_puntero_de_impresion
1661  90CF
1662  90CF DD 6E 07     	ld l,(ix+7)
1663  90D2 DD 66 08     	ld h,(ix+8)
1664  90D5
1665  90D5              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1666  90D5
1667  90D5 ED 73 3A 8C  	ld (Stack),sp
1668  90D9 F9           	ld sp,hl
1669  90DA
1670  90DA AF           	xor a
1671  90DB 67           	ld h,a
1672  90DC 6C           	ld l,h															; ld hl,"0"
1673  90DD
1674  90DD D1           	pop de															; (Puntero_objeto) en DE.
1675  90DE C1           	pop bc															; (Puntero_de_impresion) codificado en BC.
1676  90DF
1677  90DF              ; Decodificamos (Puntero_de_impresion) para almacenarlo correctamente.
1678  90DF
1679  90DF              ; ----- ----- ----- ----- -----
1680  90DF
1681  90DF              Decodifica_Puntero_de_impresion
1682  90DF
1683  90DF 3E 02        	ld a,2
1684  90E1 32 0A 8C     	ld (Columnas),a
1685  90E4
1686  90E4 CB 70        	bit 6,b
1687  90E6 28 1C        	jr z,1F 															; Entidad en ROM.
1688  90E8
1689  90E8 3C           	inc a
1690  90E9 32 0A 8C     	ld (Columnas),a
1691  90EC
1692  90EC              ;	(Puntero_de_impresión) codificado.
1693  90EC
1694  90EC CB 78        	bit 7,b
1695  90EE 28 09        	jr z,2F
1696  90F0
1697  90F0              ;	Decodifica 2 Columnas.
1698  90F0
1699  90F0 CB B8        	res 7,b
1700  90F2 3E 02        	ld a,2
1701  90F4 32 0A 8C     	ld (Columnas),a
1702  90F7 18 0B        	jr 1F
1703  90F9
1704  90F9              ;	Decodifica 1 Columna.
1705  90F9
1706  90F9 CB 68        2 bit 5,b
1707  90FB 28 07        	jr z,1F
1708  90FD
1709  90FD CB A8        	res 5,b
1710  90FF 3E 01        	ld a,1
1711  9101 32 0A 8C     	ld (Columnas),a
1712  9104
1713  9104              ; 	Almacena (Puntero_de_impresion) en caja.
1714  9104
1715  9104 DD 71 05     1 ld (ix+5),c
1716  9107 DD 70 06     	ld (ix+6),b
1717  910A
1718  910A ED 43 EF 8B  	ld (Puntero_de_impresion),bc
1719  910E
1720  910E              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1721  910E
1722  910E 39           	add hl,sp
1723  910F DD 75 07     	ld (ix+7),l
1724  9112 DD 74 08     	ld (ix+8),h
1725  9115
1726  9115 C1           	pop bc
1727  9116
1728  9116 79           	ld a,c
1729  9117 80           	add b															; Comprueba si ya no hay datos en el almacén.
1730  9118
1731  9118 ED 7B 3A 8C  	ld sp,(Stack)
1732  911C
1733  911C CC 4B 95     	call z,Reinicia_entidad_maliciosa
1734  911F
1735  911F C9           	ret
1736  9120
1737  9120              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1738  9120              ;
1739  9120              ;	25/11/24
1740  9120
1741  9120              Cargamos_registros_con_explosion
1742  9120
1743  9120 DD 6E 07     	ld l,(ix+7)
1744  9123 DD 66 08     	ld h,(ix+8)
1745  9126 CD C6 91     	call Extrae_address
1746  9129 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1747  912A
1748  912A DD 6E 05     	ld l,(ix+5)
1749  912D DD 66 06     	ld h,(ix+6)
1750  9130
1751  9130 E5           	push hl
1752  9131 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1753  9133
1754  9133 C9           	ret
1755  9134
1756  9134
1757  9134              Cargamos_registros_con_explosion_Amadeus
1758  9134
1759  9134 2A BB 89     	ld hl,(Pamm_Amadeus)
1760  9137 CD C6 91     	call Extrae_address
1761  913A
1762  913A 5D           	ld e,l
1763  913B 54           	ld d,h
1764  913C
1765  913C DD 2A B9 89  	ld ix,(p.imp.amadeus)
1766  9140
1767  9140 C9           	ret
1768  9141
1769  9141              ; --------------------------------------------------------------------------------------------------------------
1770  9141              ;
1771  9141              ;	17/06/24
1772  9141              ;
1773  9141              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1774  9141              ;
1775  9141              ;	IX contiene el puntero de impresión.
1776  9141              ;	DE contiene (Puntero_objeto).
1777  9141
1778  9141
1779  9141              Cargamos_registros_con_mov_masticado_Amadeus
1780  9141
1781  9141 ED 73 3A 8C  	ld (Stack),sp
1782  9145 ED 7B BB 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1783  9149 D1           	pop de 															; DE contiene Puntero_objeto
1784  914A DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1785  914C DD 22 B9 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1786  9150 ED 7B 3A 8C  	ld sp,(Stack)
1787  9154 C9           	ret
1788  9155
1789  9155              ; ---------------------------------------------------------------------------------------------------------------------
1790  9155              ;
1791  9155              ;	18/6/24
1792  9155              ;
1793  9155              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1794  9155
1795  9155              Genera_datos_de_impresion_Amadeus
1796  9155
1797  9155 3A B8 89     	ld a,(Impacto_Amadeus)
1798  9158 A7           	and a
1799  9159 20 03        	jr nz,1F
1800  915B
1801  915B              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1802  915B              ; _apuntando a la correspondiente explosión.
1803  915B
1804  915B CD 41 91     	call Cargamos_registros_con_mov_masticado_Amadeus
1805  915E
1806  915E DD 7D        1 ld a,ixl
1807  9160 E6 1F        	and $1f
1808  9162 32 B5 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1809  9165
1810  9165 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1811  9168 E5           	push hl
1812  9169
1813  9169 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1814  916C 22 5C 8C     	ld (Scanlines_album_SP),hl
1815  916F
1816  916F CD 37 96     	call Genera_datos_de_impresion
1817  9172
1818  9172 E1           	pop hl
1819  9173 22 5C 8C     	ld (Scanlines_album_SP),hl
1820  9176
1821  9176 C9           	ret
1822  9177
1823  9177              ; ---------------------------------------------------------------------------------------------------------------------
1824  9177              ;
1825  9177              ;	13/03/24
1826  9177              ;
1827  9177              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1828  9177
1829  9177              Inicia_albumes_de_lineas
1830  9177
1831  9177 21 00 80     	ld hl,Scanlines_album
1832  917A 22 3E 8C     	ld (Album_de_pintado),hl
1833  917D 22 5C 8C     	ld (Scanlines_album_SP),hl
1834  9180
1835  9180 21 1A 81     	ld hl,Scanlines_album_2
1836  9183 22 40 8C     	ld (Album_de_borrado),hl
1837  9186
1838  9186 C9           	ret
1839  9187
1840  9187              Inicia_albumes_de_lineas_Amadeus
1841  9187
1842  9187 21 34 82     	ld hl,Amadeus_scanlines_album
1843  918A 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1844  918D 21 58 82     	ld hl,Amadeus_scanlines_album_2
1845  9190 22 44 8C     	ld (Album_de_borrado_Amadeus),hl
1846  9193
1847  9193 C9           	ret
1848  9194
1849  9194              Inicia_albumes_de_disparos
1850  9194
1851  9194 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1852  9197 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1853  919A 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1854  919D 22 48 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1855  91A0
1856  91A0 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1857  91A3 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1858  91A6 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1859  91A9
1860  91A9 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1861  91AC 22 4C 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1862  91AF
1863  91AF C9           	ret
1864  91B0
1865  91B0              ; ---------------------------------------------------------------------------------------------------------------------
1866  91B0              ;
1867  91B0              ; 8/1/23
1868  91B0              ;
1869  91B0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1870  91B0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1871  91B0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1872  91B0
1873  91B0              ; Destruye HL y DE !!!!!
1874  91B0
1875  91B0              Inicia_punteros_de_cajas
1876  91B0
1877  91B0 21 A4 89     	ld hl,Indice_de_cajas_de_entidades
1878  91B3 CD C6 91         call Extrae_address
1879  91B6 22 2B 8C         ld (Puntero_store_caja),hl
1880  91B9 21 A6 89     	ld hl,Indice_de_cajas_de_entidades+2
1881  91BC 22 2F 8C     	ld (Indice_restore_caja),hl
1882  91BF CD C6 91     	call Extrae_address
1883  91C2 22 2D 8C     	ld (Puntero_restore_caja),hl
1884  91C5 C9               ret
1885  91C6
1886  91C6              ; *************************************************************************************************************************************************************
1887  91C6
1888  91C6              ;
1889  91C6              ; 20/10/22
1890  91C6              ;
1891  91C6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1892  91C6              ;
1893  91C6              ; Destruye el puntero y DE !!!!!
1894  91C6
1895  91C6 5E           Extrae_address ld e,(hl)
1896  91C7 23           	inc hl
1897  91C8 56           	ld d,(hl)
1898  91C9 2B           	dec hl
1899  91CA EB           	ex de,hl
1900  91CB C9           	ret
1901  91CC
1902  91CC              ; *************************************************************************************************************************************************************
1903  91CC              ;
1904  91CC              ;	20/1/24
1905  91CC              ;
1906  91CC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1907  91CC              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1908  91CC              ;
1909  91CC              ;   Destruye HL y BC !!!!!,
1910  91CC              ;
1911  91CC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1912  91CC              ;					"0" ..... Izquierda.
1913  91CC
1914  91CC              Inicia_Puntero_objeto
1915  91CC
1916  91CC 3A 09 8C     	ld a,(Cuad_objeto)
1917  91CF E6 01        	and 1
1918  91D1 F5           	push af
1919  91D2 CC EE 91     	call z,Inicia_puntero_objeto_izq
1920  91D5 F1           	pop af
1921  91D6 C8           	ret z
1922  91D7 CD DB 91     	call Inicia_puntero_objeto_der
1923  91DA C9           	ret
1924  91DB
1925  91DB              ; Arrancamos desde la parte izquierda de la pantalla.
1926  91DB              ; Iniciamos (Indice_Sprite_der).
1927  91DB
1928  91DB 2A FF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1929  91DE 22 03 8C     	ld (Puntero_DESPLZ_der),hl
1930  91E1 CD C6 91     	call Extrae_address
1931  91E4 22 FC 8B     	ld (Puntero_objeto),hl
1932  91E7
1933  91E7 2A 01 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1934  91EA 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1935  91ED C9           	ret
1936  91EE
1937  91EE              ; Arrancamos desde la parte derecha de la pantalla.
1938  91EE              ; Iniciamos (Indice_Sprite_izq).
1939  91EE
1940  91EE 2A 01 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1941  91F1 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1942  91F4 CD C6 91     	call Extrae_address
1943  91F7 22 FC 8B     	ld (Puntero_objeto),hl
1944  91FA
1945  91FA 2A FF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1946  91FD 22 03 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1947  9200 C9           	ret
1948  9201
1949  9201              ; **************************************************************************************************
1950  9201              ;
1951  9201              ;	27/11/24
1952  9201              ;
1953  9201              ;	INPUT: IX contiene (Puntero_store_caja).
1954  9201              ;
1955  9201              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1956  9201
1957  9201              Salta_caja_de_entidades_vacia
1958  9201
1959  9201 DD 7E 00     	ld a,(ix+0)
1960  9204 A7           	and a
1961  9205 C0           	ret nz
1962  9206
1963  9206 CD 10 92     	call Incrementa_punteros_de_cajas
1964  9209 DD 2A 2B 8C  	ld ix,(Puntero_store_caja)
1965  920D 18 F2        	jr Salta_caja_de_entidades_vacia
1966  920F
1967  920F C9           	ret
1968  9210
1969  9210              ; **************************************************************************************************
1970  9210              ;
1971  9210              ;	08/05/23
1972  9210              ;
1973  9210              ;	Incrementamos los dos punteros de entidades. (+1).
1974  9210
1975  9210              Incrementa_punteros_de_cajas
1976  9210
1977  9210 2A 2D 8C     	ld hl,(Puntero_restore_caja)
1978  9213 22 2B 8C     	ld (Puntero_store_caja),hl
1979  9216 2A 2F 8C     	ld hl,(Indice_restore_caja)
1980  9219 23           	inc hl
1981  921A 23           	inc hl
1982  921B 22 2F 8C     	ld (Indice_restore_caja),hl
1983  921E CD C6 91         call Extrae_address
1984  9221 22 2D 8C         ld (Puntero_restore_caja),hl
1985  9224 C9               ret
1986  9225
1987  9225              ; -----------------------------------------------------------
1988  9225
1989  9225              ; Teclado.
1990  9225
1991  9225 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1992  9227 DB FE        	in a,($fe)
1993  9229 E6 01        	and $01
1994  922B 28 02        	jr z,1f
1995  922D 18 F6        	jr Pulsa_ENTER
1996  922F C9           1 ret
1997  9230
1998  9230              ; **************************************************************************************************
1999  9230              ;
2000  9230              ; Temporización.
2001  9230
2002  9230              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
2003  9230              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
2004  9230              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
2005  9230              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
2006  9230
2007  9230              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
2008  9230              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
2009  9230              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
2010  9230
2011  9230              ; A partir de $4f61 no hace falta DELAY.
2012  9230
2013  9230              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2014  9230
2015  9230              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2016  9230              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2017  9230              ;	LD A,B
2018  9230              ;	AND A
2019  9230              ;	JR NZ,wait
2020  9230              ;	RET
2021  9230
2022  9230              ; ---------------------------------------------------------------------------------------------------------------
2023  9230              ;
2024  9230              ;	13/07/24
2025  9230              ;
2026  9230
2027  9230              Inicia_Shield
2028  9230
2029  9230 21 85 8C     	ld hl,Datos_Shield
2030  9233 22 89 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2031  9236
2032  9236 7E           	ld a,(hl)
2033  9237 32 8C 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2034  923A
2035  923A 3E 01        	ld a,1
2036  923C 32 8D 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2037  923F
2038  923F C9           	ret
2039  9240
2040  9240              ; ---------- ---------- ---------- ---------- ----------
2041  9240              ;
2042  9240              ;	30/11/24
2043  9240              ;
2044  9240              ;	Limpia la caja de entidades de una entidad eliminada.
2045  9240              ;
2046  9240              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
2047  9240              ;	MODIFY: A,BC,DE y HL.
2048  9240
2049  9240              Limpia_caja_de_entidades
2050  9240
2051  9240 DD E5        	push ix
2052  9242 E1           	pop hl
2053  9243 AF           	xor a
2054  9244 77           	ld (hl),a
2055  9245 5D           	ld e,l
2056  9246 54           	ld d,h
2057  9247 1C           	inc e
2058  9248 01 0B 00     	ld bc,11
2059  924B ED B0        	ldir
2060  924D C9           	ret
2061  924E
2062  924E              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2063  924E              ;
2064  924E              ;	26/01/25
2065  924E              ;
2066  924E              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2067  924E              ;
2068  924E              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2069  924E              ;
2070  924E
2071  924E              Actualiza_pantalla
2072  924E
2073  924E 3E 02        	ld a,2
2074  9250 D3 FE        	out ($fe),a
2075  9252
2076  9252 3A 62 8C     	ld a,(Ctrl_3)
2077  9255 CB 57        	bit 2,a
2078  9257 28 54        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2079  9259
2080  9259              ;	Inicializamos el (Puntero_de_columnas) para el borrado, (Puntero_indice_mov).
2081  9259
2082  9259 01 00 8C     	ld bc,Indice_Sprite_der+1
2083  925C ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2084  9260
2085  9260              Borrando_entidades
2086  9260
2087  9260 2A 5C 8C     	ld hl,(Scanlines_album_SP)
2088  9263 CD C6 91     	call Extrae_address
2089  9266 24           	inc h
2090  9267 25           	dec h
2091  9268 28 14        	jr z,Pintando_entidades
2092  926A
2093  926A              ;	Borramos entidades, pero antes... indicamos (Columnas).
2094  926A
2095  926A ED 4B 1C 8C  	ld bc,(Puntero_indice_mov)
2096  926E 0A           	ld a,(bc)
2097  926F 32 0B 8C     	ld (Columnitas),a
2098  9272
2099  9272 AF           	xor a
2100  9273 02           	ld (bc),a
2101  9274 0C           	inc c
2102  9275 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2103  9279
2104  9279 CD 2B 97     	call Pinta_Sprites
2105  927C 18 E2        	jr Borrando_entidades
2106  927E
2107  927E              Pintando_entidades
2108  927E
2109  927E              ;	Inicializamos el (Puntero_de_columnas) para el borrado, (Puntero_indice_mov).
2110  927E
2111  927E 01 00 8C     	ld bc,Indice_Sprite_der+1
2112  9281 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2113  9285
2114  9285 2A 5E 8C     	ld hl,(India_SP)
2115  9288 2C           	inc l
2116  9289 CD C6 91     	call Extrae_address
2117  928C 24           	inc h
2118  928D 25           	dec h
2119  928E 28 1D        	jr z,Ejecuta_escudo
2120  9290
2121  9290              ;	Adquiere (Columnas).
2122  9290
2123  9290 1C           	inc e
2124  9291 1C           	inc e
2125  9292
2126  9292 1A           	ld a,(de)
2127  9293 32 0B 8C     	ld (Columnitas),a
2128  9296
2129  9296 ED 4B 1C 8C  	ld bc,(Puntero_indice_mov)
2130  929A 02           	ld (bc),a
2131  929B 0C           	inc c
2132  929C ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2133  92A0
2134  92A0 1C           	inc e
2135  92A1 ED 53 5E 8C  	ld (India_SP),de
2136  92A5
2137  92A5 CD C6 91     	call Extrae_address
2138  92A8 CD 2B 97     	call Pinta_Sprites
2139  92AB
2140  92AB 18 D1        	jr Pintando_entidades
2141  92AD
2142  92AD              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2143  92AD
2144  92AD              Ejecuta_escudo
2145  92AD
2146  92AD 3A 8B 8C     	ld a,(Shield)
2147  92B0 A7           	and a
2148  92B1 20 34        	jr nz,Aplica_Shield
2149  92B3
2150  92B3              Borrando_Amadeus
2151  92B3
2152  92B3 21 62 8C     	ld hl,Ctrl_3
2153  92B6 CB 6E        	bit 5,(hl)
2154  92B8 28 1F        	jr z,1F												; No borramos. No ha habido movimiento.
2155  92BA
2156  92BA 3E 03        	ld a,3
2157  92BC 32 0B 8C     	ld (Columnitas),a
2158  92BF
2159  92BF 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
2160  92C2 CD C6 91     	call Extrae_address
2161  92C5 24           	inc h
2162  92C6 25           	dec h
2163  92C7 28 03        	jr z,Pintando_Amadeus
2164  92C9 CD 2B 97     	call Pinta_Sprites
2165  92CC
2166  92CC              Pintando_Amadeus
2167  92CC
2168  92CC 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
2169  92CF CD C6 91     	call Extrae_address
2170  92D2 24           	inc h
2171  92D3 25           	dec h
2172  92D4 28 03        	jr z,1F
2173  92D6 CD 2B 97     	call Pinta_Sprites
2174  92D9
2175  92D9              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2176  92D9
2177  92D9 21 62 8C     1 ld hl,Ctrl_3
2178  92DC CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2179  92DE CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2180  92E0 CB AE        	res 5,(hl)
2181  92E2
2182  92E2 3E 01        	ld a,1												; Borde azul.
2183  92E4 D3 FE        	out ($fe),a
2184  92E6
2185  92E6 C9           	ret
2186  92E7
2187  92E7              Aplica_Shield
2188  92E7
2189  92E7              ;	Bit 1 "1" (Shield_3) Sólo borra.
2190  92E7              ;		  "0"     ""     Borra/Pinta.
2191  92E7              ;	Bit 2    ""  RET.	 No borra, no pinta.
2192  92E7
2193  92E7 21 8D 8C     	ld hl,Shield_3
2194  92EA
2195  92EA CB 5E        	bit 3,(hl)
2196  92EC 20 DE        	jr nz,Pintando_Amadeus
2197  92EE
2198  92EE CB 56        	bit 2,(hl)
2199  92F0 20 E7        	jr nz,1B
2200  92F2
2201  92F2 CB 4E        	bit 1,(hl)
2202  92F4 C4 FB 92     	call nz,Borra_Amadeus_shield
2203  92F7
2204  92F7 28 BA        	jr z,Borrando_Amadeus
2205  92F9 18 DE        	jr 1B
2206  92FB
2207  92FB              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2208  92FB
2209  92FB              Borra_Amadeus_shield
2210  92FB
2211  92FB 3A 62 8C     	ld a,(Ctrl_3)
2212  92FE CB 6F        	bit 5,a
2213  9300 28 08        	jr z,1F
2214  9302
2215  9302 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
2216  9305 CD C6 91     	call Extrae_address
2217  9308 18 06        	jr 2F
2218  930A
2219  930A 2A 42 8C     1 ld hl,(Album_de_pintado_Amadeus)
2220  930D CD C6 91     	call Extrae_address
2221  9310
2222  9310 CD 2B 97     2 call Pinta_Sprites
2223  9313
2224  9313 AF           	xor a
2225  9314 3C           	inc a											; Asegura NZ en la salida de la rutina.
2226  9315
2227  9315 C9           	ret
2228  9316
2229  9316              Pinta_Amadeus_shield
2230  9316
2231  9316 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
2232  9319 CD C6 91     	call Extrae_address
2233  931C CD 2B 97     	call Pinta_Sprites
2234  931F
2235  931F AF           	xor a
2236  9320 3C           	inc a											; Asegura NZ en la salida de la rutina.
2237  9321
2238  9321 C9           	ret
2239  9322
2240  9322              Borra_Pinta_Amadeus_shield
2241  9322
2242  9322 CD FB 92     	call Borra_Amadeus_shield
2243  9325 CD 16 93     	call Pinta_Amadeus_shield
2244  9328 C9           	ret
2245  9329
2246  9329              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2247  9329              ;
2248  9329              ;	19/6/24
2249  9329              ;
2250  9329
2251  9329              Teclado
2252  9329
2253  9329              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2254  9329
2255  9329 3E F7        	ld a,$f7												; "5" para disparar.
2256  932B DB FE        	in a,($fe)
2257  932D E6 10        	and $10
2258  932F
2259  932F CC 68 A5     	call z,Genera_disparo_Amadeus
2260  9332
2261  9332 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2262  9334 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2263  9336 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2264  9338 CC 34 A0         call z,Amadeus_a_izquierda
2265  933B
2266  933B 3E F7        	ld a,$f7
2267  933D DB FE        	in a,($fe)
2268  933F E6 01        	and $01
2269  9341 C8           	ret z
2270  9342
2271  9342 3E F7        	ld a,$f7
2272  9344 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2273  9346 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2274  9348 CC 4C A0     	call z,Amadeus_a_derecha
2275  934B
2276  934B C9           	ret
2277  934C
2278  934C              ; ------------------------------------------------------------------------------------------------------------------------
2279  934C              ;
2280  934C              ;	06/07/24
2281  934C              ;
2282  934C
2283  934C              Genera_explosion
2284  934C
2285  934C 21 74 8C     	ld hl,Clock_explosion
2286  934F 35           	dec (hl)
2287  9350 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2288  9352
2289  9352              Borra_entidad_colisionada
2290  9352
2291  9352 CD 7E 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2292  9355
2293  9355 DD E5        	push ix
2294  9357 CD 20 91     	call Cargamos_registros_con_explosion
2295  935A CD 37 96     	call Genera_datos_de_impresion
2296  935D DD E1        	pop ix
2297  935F
2298  935F AF           	xor a
2299  9360 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2300  9361
2301  9361 C9           	ret
2302  9362
2303  9362              Siguiente_frame_explosion
2304  9362
2305  9362 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2306  9364
2307  9364              ; Avanza Frame de explosión.
2308  9364
2309  9364 DD 6E 07     	ld l,(ix+7)
2310  9367 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2311  936A
2312  936A 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2313  936D
2314  936D 79           	ld a,c
2315  936E 95           	sub l
2316  936F 20 41        	jr nz,1F
2317  9371
2318  9371
2319  9371              ; Fín de la entidad !!!!!!!!!!!!!
2320  9371              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2321  9371
2322  9371              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2323  9371              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2324  9371              ; Entidades_en_curso db 0								; Entidades en pantalla.
2325  9371
2326  9371              ; La entidad eliminada, es la última del nivel ?
2327  9371
2328  9371 3A 33 8C     	ld a,(Numero_de_entidades)
2329  9374 A7           	and a
2330  9375 28 30        	jr z,2F
2331  9377
2332  9377              ; Decrementa (Numero_de_entidades)
2333  9377
2334  9377 3D           	dec a
2335  9378 32 33 8C     	ld (Numero_de_entidades),a
2336  937B 21 35 8C     	ld hl,Entidades_en_curso
2337  937E 35           	dec (hl)
2338  937F
2339  937F              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2340  937F              ; IX apunta al 1er .db de la entidad eliminada.
2341  937F
2342  937F 2A 31 8C     	ld hl,(Puntero_indice_master)
2343  9382 CD C6 91     	call Extrae_address
2344  9385
2345  9385 DD E5        	push ix
2346  9387 D1           	pop de
2347  9388
2348  9388 01 0C 00     	ld bc,12
2349  938B ED B0        	ldir
2350  938D
2351  938D              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2352  938D
2353  938D CD CF 90     	call Obtenemos_puntero_de_impresion
2354  9390
2355  9390 DD 6E 05     	ld l,(ix+5)
2356  9393 2C           	inc l
2357  9394 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2358  9397
2359  9397 CD 0B 96     	call Genera_coordenadas
2360  939A
2361  939A ED 4B EB 8B  	ld bc,(Coordenada_X)
2362  939E
2363  939E DD 71 01     	ld (ix+1),c
2364  93A1 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2365  93A4
2366  93A4 AF           	xor a
2367  93A5 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2368  93A6
2369  93A6 C9           	ret
2370  93A7
2371  93A7              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2372  93A7
2373  93A7 21 34 8C     2 ld hl,Numero_parcial_de_entidades
2374  93AA 35           	dec (hl)
2375  93AB 23           	inc hl
2376  93AC 35           	dec (hl)
2377  93AD
2378  93AD CD 40 92     	call Limpia_caja_de_entidades
2379  93B0 18 A0        	jr Borra_entidad_colisionada
2380  93B2
2381  93B2 23           1 inc hl
2382  93B3 23           	inc hl
2383  93B4
2384  93B4 DD 75 07     	ld (ix+7),l
2385  93B7 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2386  93BA
2387  93BA 18 96        	jr Borra_entidad_colisionada
2388  93BC
2389  93BC              ; ----- ----- ----- ----- -----
2390  93BC
2391  93BC              Genera_explosion_Amadeus
2392  93BC
2393  93BC 21 75 8C     	ld hl,Clock_explosion_Amadeus
2394  93BF 35           	dec (hl)
2395  93C0 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2396  93C2
2397  93C2              Borra_Amadeus_impactado
2398  93C2
2399  93C2 CD E8 8E     	call Change_Amadeus
2400  93C5 CD 34 91     	call Cargamos_registros_con_explosion_Amadeus
2401  93C8 CD 55 91     	call Genera_datos_de_impresion_Amadeus
2402  93CB
2403  93CB 21 62 8C     	ld hl,Ctrl_3
2404  93CE CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2405  93D0
2406  93D0 AF           	xor a
2407  93D1 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2408  93D2
2409  93D2 C9           	ret
2410  93D3
2411  93D3              Siguiente_frame_explosion_Amadeus
2412  93D3
2413  93D3 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2414  93D5
2415  93D5              ; Avanza Frame de explosión.
2416  93D5
2417  93D5 2A BB 89     	ld hl,(Pamm_Amadeus)
2418  93D8 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2419  93DB
2420  93DB 79           	ld a,c
2421  93DC 95           	sub l
2422  93DD 20 0B        	jr nz,1F
2423  93DF
2424  93DF              ; Fín de Amadeus !!!!!!!!!!!!!
2425  93DF              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2426  93DF
2427  93DF AF           	xor a
2428  93E0 32 B8 89     	ld (Impacto_Amadeus),a
2429  93E3 21 62 8C     	ld hl,Ctrl_3
2430  93E6 CB F6        	set 6,(hl)
2431  93E8
2432  93E8 18 D8        	jr Borra_Amadeus_impactado
2433  93EA
2434  93EA 23           1 inc hl
2435  93EB 23           	inc hl
2436  93EC 22 BB 89     	ld (Pamm_Amadeus),hl
2437  93EF 18 D1        	jr Borra_Amadeus_impactado
2438  93F1
2439  93F1              ; ---------------------------------------------------------------
2440  93F1
2441  93F1              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 93F1              ; ******************************************************************************************************************************************************************************************
   2+ 93F1              ;
   3+ 93F1              ;   21/04/24
   4+ 93F1              ;
   5+ 93F1              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 93F1              ;   (XOR) bit a bit.
   7+ 93F1              ;
   8+ 93F1              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 93F1
  10+ 93F1              Derivando_RND
  11+ 93F1
  12+ 93F1 21 F6 88         ld hl,Numeros_aleatorios
  13+ 93F4
  14+ 93F4 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 93F6 C5               push bc
  16+ 93F7              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 93F7 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 93FA              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 93FA
  20+ 93FA A7           6 and a                                 ; Carry a "0".
  21+ 93FB CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 93FD 30 02            jr nc,1F
  23+ 93FF
  24+ 93FF CB C1            set 0,c
  25+ 9401
  26+ 9401 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9402 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9404 5F               ld e,a
  29+ 9405
  30+ 9405 7A               ld a,d
  31+ 9406 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9408 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 940A
  34+ 940A CB 3F            srl a
  35+ 940C
  36+ 940C AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 940D
  38+ 940D 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 940E 28 04            jr z,4F
  40+ 9410
  41+ 9410 CB FF            set 7,a
  42+ 9412 18 02            jr 5F
  43+ 9414
  44+ 9414 CB BF        4 res 7,a
  45+ 9416
  46+ 9416 CB 21        5 sla c
  47+ 9418 10 E0            djnz 6B
  48+ 941A
  49+ 941A 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 941B
  51+ 941B 77               ld (hl),a
  52+ 941C 23               inc hl
  53+ 941D C1               pop bc
  54+ 941E 10 D4            djnz 3B
  55+ 9420
  56+ 9420 C9               ret
  57+ 9421
  58+ 9421
  59+ 9421
# file closed: RND_Derivando.asm
2442  9421              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9421              ;---------------------------------------------------------------------------------------------------------------
   2+ 9421              ;
   3+ 9421              ;   13/11/24
   4+ 9421
   5+ 9421              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9421
   7+ 9421              Genera_movimientos_masticados_del_nivel
   8+ 9421
   9+ 9421              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9421
  11+ 9421              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9421              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9421              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9421
  15+ 9421 2D           	dec l
  16+ 9422 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9423 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9424 4E           	ld c,(hl)
  19+ 9425
  20+ 9425 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9426 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9427
  23+ 9427              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9427
  25+ 9427 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9428
  27+ 9428 CD 66 94     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 942B
  29+ 942B              ;	Caja Master inicializada ???
  30+ 942B
  31+ 942B 7E           	ld a,(hl)
  32+ 942C A7           	and a
  33+ 942D 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 942F
  35+ 942F              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 942F
  37+ 942F C1           	pop bc
  38+ 9430 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9431 C5           	push bc
  40+ 9432
  41+ 9432 CD 05 95     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9435 CD 99 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9438
  44+ 9438 3A EA 8B     	ld a,(Tipo)
  45+ 943B CD 76 94     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 943E
  47+ 943E              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 943E
  49+ 943E              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 943E              ;	ld a,(hl)
  51+ 943E              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 943E
  53+ 943E              ;	ld hl,Posicion_inicio
  54+ 943E              ;	ld (hl),a
  55+ 943E
  56+ 943E              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 943E              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 943E
  59+ 943E CD 22 90     	call Construye_movimientos_masticados_entidad
  60+ 9441
  61+ 9441 2A 31 8C     	ld hl,(Puntero_indice_master)
  62+ 9444 CD C6 91     	call Extrae_address
  63+ 9447
  64+ 9447 5D           	ld e,l
  65+ 9448 54           	ld d,h
  66+ 9449
  67+ 9449 CD C6 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 944C
  69+ 944C              Movimientos_masticados_construidos
  70+ 944C
  71+ 944C C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 944D
  73+ 944D E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 944E 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 944F
  76+ 944F 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9450 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9452
  79+ 9452 C9           	ret
  80+ 9453
  81+ 9453              ;---------------------------------------------------------------------------------------------------------------
  82+ 9453              ;
  83+ 9453              ;   9/11/24
  84+ 9453              ;
  85+ 9453              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9453              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9453              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9453              ;	_ de la 1ª entidad del Nivel.
  89+ 9453              ;
  90+ 9453              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9453
  92+ 9453              ;	MODIFICA: HL,DE y A.
  93+ 9453              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9453
  95+ 9453              Inicializa_1er_Nivel
  96+ 9453
  97+ 9453              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9453
  99+ 9453 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 9456 CD C6 91     	call Extrae_address
 101+ 9459 ED 53 81 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 945D
 103+ 945D 7E           	ld a,(hl)
 104+ 945E 32 33 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9461
 106+ 9461 2C           	inc l
 107+ 9462 22 83 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9465
 109+ 9465 C9           	ret
 110+ 9466
 111+ 9466              ; ----------------------
 112+ 9466              ;
 113+ 9466              ;	13/11/24
 114+ 9466              ;
 115+ 9466
 116+ 9466              Situa_en_Caja_Master
 117+ 9466
 118+ 9466 CD 84 95         call Calcula_salto_en_BC
 119+ 9469 21 5E 89         ld hl,Indice_de_cajas_master
 120+ 946C A7               and a
 121+ 946D ED 4A            adc hl,bc
 122+ 946F 22 31 8C       	ld (Puntero_indice_master),hl
 123+ 9472 CD C6 91     	call Extrae_address
 124+ 9475 C9           	ret
 125+ 9476
 126+ 9476              ; ----------------------
 127+ 9476
 128+ 9476              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9476              ; 	ld bc,4
 130+ 9476              ; 	ldir
 131+ 9476              ; 	ret
 132+ 9476
 133+ 9476 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9477 CD 84 95         call Calcula_salto_en_BC
 135+ 947A 21 1E 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 947D A7               and a
 137+ 947E ED 4A            adc hl,bc
 138+ 9480 CD C6 91         call Extrae_address
 139+ 9483 22 1C 8C         ld (Puntero_indice_mov),hl
 140+ 9486 C9               ret
 141+ 9487
 142+ 9487              ;---------------------------------------------------------------------------------------------------------------
 143+ 9487              ;
 144+ 9487              ;   13/11/24
 145+ 9487              ;
 146+ 9487              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9487
 148+ 9487
 149+ 9487              Prepara_Cajas_de_Entidades
 150+ 9487
 151+ 9487              ; Preparamos los punteros de las cajas de entidades:
 152+ 9487
 153+ 9487 CD B0 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 948A              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 948A CD CF 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 948D
 157+ 948D 2A 83 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 9490
 159+ 9490              ; En este punto:
 160+ 9490              ;
 161+ 9490              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 9490              ; B contiene (Numero_parcial_de_entidades).
 163+ 9490
 164+ 9490 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 9491
 166+ 9491 7E           	ld a,(hl)
 167+ 9492
 168+ 9492 CD 66 94     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9495
 170+ 9495 ED 5B 2B 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9499
 172+ 9499 D5           	push de
 173+ 949A DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 949C
 175+ 949C 01 0C 00     	ld bc,12
 176+ 949F ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 94A1              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 94A1
 179+ 94A1              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 94A1              ;
 181+ 94A1              ;
 182+ 94A1              ; ------------------------------------------------------ IX
 183+ 94A1              ; ------------------------------------------------------ IX
 184+ 94A1              ; ------------------------------------------------------ IX
 185+ 94A1              ; ------------------------------------------------------ IX
 186+ 94A1
 187+ 94A1 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 94A3
 189+ 94A3 CD CF 90     	call Obtenemos_puntero_de_impresion
 190+ 94A6
 191+ 94A6 DD 6E 05     	ld l,(ix+5)
 192+ 94A9 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 193+ 94AC
 194+ 94AC D5           	push de														; Push (Puntero_objeto).
 195+ 94AD E5           	push hl														; Push (Puntero_de_impresion).
 196+ 94AE
 197+ 94AE CD 0B 96     	call Genera_coordenadas
 198+ 94B1
 199+ 94B1 ED 4B EB 8B  	ld bc,(Coordenada_X)
 200+ 94B5
 201+ 94B5 DD 71 01     	ld (ix+1),c
 202+ 94B8 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 203+ 94BB
 204+ 94BB CD 7E 8F      	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 205+ 94BE
 206+ 94BE DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 207+ 94C0 D1           	pop de														; Pop (Puntero_objeto) en DE.
 208+ 94C1
 209+ 94C1 CD 37 96     	call Genera_datos_de_impresion
 210+ 94C4
 211+ 94C4 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 212+ 94C6
 213+ 94C6              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 214+ 94C6
 215+ 94C6 CD 3D 95     	call Decrementa_Contador_de_mov_masticados
 216+ 94C9 CD 1A 95     	call Limpiamos_bandeja_DRAW
 217+ 94CC CD 10 92     	call Incrementa_punteros_de_cajas
 218+ 94CF
 219+ 94CF              ; Siguiente entidad del Nivel.
 220+ 94CF
 221+ 94CF 2A 83 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 222+ 94D2 23           	inc hl 														; _ entidad del Nivel.
 223+ 94D3
 224+ 94D3 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 225+ 94D4
 226+ 94D4 10 BA        	djnz 1B
 227+ 94D6
 228+ 94D6 C9           	ret
 229+ 94D7
 230+ 94D7              ; -------------------------------------------------------------------------------------------------------------------
 231+ 94D7              ;
 232+ 94D7              ;	27/5/24
 233+ 94D7              ;
 234+ 94D7              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 235+ 94D7              ;
 236+ 94D7
 237+ 94D7              ; 	Cargamos la definición de Amadeus en DRAW.
 238+ 94D7              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 239+ 94D7
 240+ 94D7 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 241+ 94DA CD 99 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 242+ 94DD
 243+ 94DD
 244+ 94DD              Construye_movimientos_masticados_Amadeus
 245+ 94DD
 246+ 94DD 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 247+ 94E0 CD C2 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 248+ 94E3              ;															; _ el (Contador_de_mov_masticados).
 249+ 94E3 CD CC 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 250+ 94E6              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 251+ 94E6
 252+ 94E6              ; Generamos movimientos masticados de Amadeus.
 253+ 94E6
 254+ 94E6 06 79        	ld b,121												; $0079, 121d.
 255+ 94E8
 256+ 94E8 C5           1 push bc
 257+ 94E9 CD BD 99     	call Draw
 258+ 94EC CD 5B 90     	call Guarda_movimiento_masticado
 259+ 94EF
 260+ 94EF CD 5B 9D     	call Mov_right
 261+ 94F2 CD 5B 9D     	call Mov_right											; Amadeus se mueve x2 pixel.
 262+ 94F5
 263+ 94F5 C1           	pop bc
 264+ 94F6 10 F0        	djnz 1B
 265+ 94F8
 266+ 94F8              ; Todos los movimientos masticados de Amadeus se han creado.
 267+ 94F8
 268+ 94F8              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 269+ 94F8              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 270+ 94F8
 271+ 94F8 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 272+ 94FB 01 08 00     	ld bc,8
 273+ 94FE A7           	and a
 274+ 94FF ED 42        	sbc hl,bc
 275+ 9501 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 276+ 9504
 277+ 9504 C9           	ret
 278+ 9505
 279+ 9505              ; ---------------------------------------------------------------------
 280+ 9505              ;
 281+ 9505              ;	10/02/24
 282+ 9505              ;
 283+ 9505              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 284+ 9505              ;
 285+ 9505              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 286+ 9505
 287+ 9505              Definicion_segun_tipo
 288+ 9505
 289+ 9505 CD 84 95     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 290+ 9508 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 291+ 950B CD 8F 95     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 292+ 950E C9           	ret
 293+ 950F
 294+ 950F              ; ---------------------------------------------------------------------
 295+ 950F              ;
 296+ 950F              ;	6/7/24
 297+ 950F
 298+ 950F
 299+ 950F              Store_Restore_cajas
 300+ 950F
 301+ 950F ED 5B 2B 8C  	ld de,(Puntero_store_caja)
 302+ 9513 CD C6 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 303+ 9516 CD 10 92     	call Incrementa_punteros_de_cajas
 304+ 9519 C9           	ret
 305+ 951A
 306+ 951A              ; ---------------------------------------------------------------------
 307+ 951A              ;
 308+ 951A              ;	23/6/24
 309+ 951A              ;
 310+ 951A              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 311+ 951A              ;
 312+ 951A              ;	MODIFY: HL
 313+ 951A
 314+ 951A              Limpiamos_bandeja_DRAW
 315+ 951A
 316+ 951A ED 73 3A 8C  	ld (Stack),sp
 317+ 951E 31 10 8C     	ld sp,Vel_left
 318+ 9521
 319+ 9521 AF           	xor a
 320+ 9522 67           	ld h,a
 321+ 9523 6F           	ld l,a
 322+ 9524
 323+ 9524 E5           	push hl
 324+ 9525 E5           	push hl
 325+ 9526 E5           	push hl
 326+ 9527 E5           	push hl
 327+ 9528 E5           	push hl
 328+ 9529 E5           	push hl
 329+ 952A E5           	push hl
 330+ 952B E5           	push hl
 331+ 952C E5           	push hl
 332+ 952D E5           	push hl
 333+ 952E E5           	push hl
 334+ 952F E5           	push hl
 335+ 9530 E5           	push hl
 336+ 9531 E5           	push hl
 337+ 9532 E5           	push hl
 338+ 9533 E5           	push hl
 339+ 9534 E5           	push hl
 340+ 9535 E5           	push hl
 341+ 9536
 342+ 9536 33           	inc sp
 343+ 9537
 344+ 9537 E5           	push hl
 345+ 9538 ED 7B 3A 8C  	ld sp,(Stack)
 346+ 953C
 347+ 953C C9           	ret
 348+ 953D
 349+ 953D              ; ---------------------------------------------------------------------
 350+ 953D              ;
 351+ 953D              ;	23/11/24
 352+ 953D              ;
 353+ 953D              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 354+ 953D
 355+ 953D              Decrementa_Contador_de_mov_masticados
 356+ 953D
 357+ 953D DD 6E 09     	ld l,(ix+9)
 358+ 9540 DD 66 0A     	ld h,(ix+10)
 359+ 9543
 360+ 9543 2B           	dec hl
 361+ 9544
 362+ 9544 DD 75 09     	ld (ix+9),l
 363+ 9547 DD 74 0A     	ld (ix+10),h
 364+ 954A
 365+ 954A C9           	ret
 366+ 954B
 367+ 954B              ; ---------------------------------------------------------------------
 368+ 954B              ;
 369+ 954B              ;	24/11/24
 370+ 954B
 371+ 954B              Reinicia_entidad_maliciosa
 372+ 954B
 373+ 954B              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 374+ 954B
 375+ 954B CD CB A1     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 376+ 954E CD D8 A1     	call Transfiere_datos_de_contadores
 377+ 9551
 378+ 9551              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 379+ 9551
 380+ 9551 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 381+ 9554 CD 05 95     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 382+ 9557
 383+ 9557 7D           	ld a,l
 384+ 9558 C6 0B        	add 11
 385+ 955A 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 386+ 955B
 387+ 955B CD C6 91     	call Extrae_address
 388+ 955E
 389+ 955E DD 75 07     	ld (ix+7),l
 390+ 9561 DD 74 08     	ld (ix+8),h
 391+ 9564
 392+ 9564 CD CF 90     	call Obtenemos_puntero_de_impresion
 393+ 9567
 394+ 9567              ; Incrementa (Contador_de_vueltas)x2.
 395+ 9567              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 396+ 9567
 397+ 9567              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 398+ 9567              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 399+ 9567              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 400+ 9567              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 401+ 9567              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 402+ 9567
 403+ 9567 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 404+ 956B
 405+ 956B DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 406+ 956E CB 2F        	sra a
 407+ 9570 CB 2F        	sra a
 408+ 9572
 409+ 9572 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 410+ 9575
 411+ 9575 3E 40        	ld a,$40
 412+ 9577 DD BE 03     	cp (ix+3)
 413+ 957A C0           	ret nz
 414+ 957B
 415+ 957B              ; Límitador.
 416+ 957B
 417+ 957B              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 418+ 957B
 419+ 957B DD CB 03 2E  	sra (ix+3)
 420+ 957F DD CB 0B 2E  	sra (ix+11)
 421+ 9583
 422+ 9583 C9           	ret
 423+ 9584
 424+ 9584              ;	------------------------------------------------------------------------------------
 425+ 9584              ;
 426+ 9584              ;	09/11/24
 427+ 9584              ;
 428+ 9584              ;	INPUTS:	A contiene el (Tipo) de entidad.
 429+ 9584              ;
 430+ 9584              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 431+ 9584              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 432+ 9584
 433+ 9584 A7           Calcula_salto_en_BC and a
 434+ 9585 28 04        	jr z,1F
 435+ 9587 CB 27        	sla a
 436+ 9589 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 958B 4F           1 ld c,a
 438+ 958C 06 00        	ld b,0
 439+ 958E C9           	ret
 440+ 958F
 441+ 958F              ; ------------------------------------------------------------------
 442+ 958F              ;
 443+ 958F              ;	19/1/24
 444+ 958F              ;
 445+ 958F              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 958F              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 958F
 448+ 958F A7           Situa_en_datos_de_definicion and a
 449+ 9590 ED 4A        	adc hl,bc
 450+ 9592 CD C6 91     	call Extrae_address
 451+ 9595 22 38 8C         ld (Datos_de_entidad),hl
 452+ 9598 C9           	ret
 453+ 9599
 454+ 9599              ; ----------------------------------------------------------------------------------------------------------
 455+ 9599              ;
 456+ 9599              ;	24/6/24
 457+ 9599              ;
 458+ 9599              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 459+ 9599              ;	_ de entidad.
 460+ 9599              ;
 461+ 9599              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 462+ 9599              ;
 463+ 9599              ;
 464+ 9599              ;	MODIFICA: HL,DE y BC
 465+ 9599
 466+ 9599
 467+ 9599              Definicion_de_entidad_a_bandeja_DRAW
 468+ 9599
 469+ 9599 11 EA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 470+ 959C 7E           	ld a,(hl) 									; Volcamos Tipo.
 471+ 959D 12           	ld (de),a
 472+ 959E 23           	inc hl
 473+ 959F              ;
 474+ 959F 11 F8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 475+ 95A2 01 02 00     	ld bc,2
 476+ 95A5 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 477+ 95A7              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 478+ 95A7 11 ED 8B     	ld de,Contador_de_vueltas
 479+ 95AA 7E           	ld a,(hl)
 480+ 95AB 12           	ld (de),a
 481+ 95AC 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 482+ 95AD
 483+ 95AD 11 FF 8B     	ld de,Indice_Sprite_der
 484+ 95B0 01 04 00     	ld bc,4
 485+ 95B3 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 486+ 95B5
 487+ 95B5 11 07 8C     	ld de,Posicion_inicio
 488+ 95B8 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 489+ 95BB ED B0        	ldir 									; Vuelco (Frames_explosion).
 490+ 95BD
 491+ 95BD 11 F1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 492+ 95C0 01 02 00     	ld bc,2
 493+ 95C3 ED B0        	ldir
 494+ 95C5
 495+ 95C5 C9           	ret
 496+ 95C6
 497+ 95C6              ; ----------------------------------------------------------------------------------------------------------
 498+ 95C6              ;
 499+ 95C6              ;	1/8/24
 500+ 95C6              ;
 501+ 95C6
 502+ 95C6              Parametros_de_bandeja_DRAW_a_caja
 503+ 95C6
 504+ 95C6 21 EA 8B     	ld hl,Bandeja_DRAW
 505+ 95C9 01 0C 00     	ld bc,12
 506+ 95CC ED B0        	ldir
 507+ 95CE C9           	ret
 508+ 95CF
 509+ 95CF              ;---------------------------------------------------------------------------------------------------------------
 510+ 95CF              ;
 511+ 95CF              ;	13/11/24
 512+ 95CF              ;
 513+ 95CF              ;	INICIALIZA (Numero_parcial_de_entidades).
 514+ 95CF              ;
 515+ 95CF              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 516+ 95CF              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 517+ 95CF
 518+ 95CF              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 519+ 95CF              ;			- Actualiza (Numero_de_entidades).
 520+ 95CF
 521+ 95CF              ;	MODIFICA: A y B.
 522+ 95CF
 523+ 95CF
 524+ 95CF              Inicializa_Numero_parcial_de_entidades
 525+ 95CF
 526+ 95CF 3A 33 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 527+ 95D2 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 528+ 95D4 38 0E        	jr c,1F
 529+ 95D6 28 0C        	jr z,1F
 530+ 95D8
 531+ 95D8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 532+ 95D8              ; Actualizamos variables.
 533+ 95D8
 534+ 95D8 D6 06        	sub 6
 535+ 95DA 32 33 8C     	ld (Numero_de_entidades),a
 536+ 95DD 3E 06        	ld a,6
 537+ 95DF 32 34 8C     	ld (Numero_parcial_de_entidades),a
 538+ 95E2 47           	ld b,a
 539+ 95E3 C9           	ret
 540+ 95E4
 541+ 95E4              ; El nº total de entidades no supera el nº de cajas de entidades.
 542+ 95E4              ; (Numero_de_entidades)="0".
 543+ 95E4
 544+ 95E4 32 34 8C     1 ld (Numero_parcial_de_entidades),a
 545+ 95E7 47           	ld b,a
 546+ 95E8 AF           	xor a
 547+ 95E9 32 33 8C     	ld (Numero_de_entidades),a
 548+ 95EC C9           	ret
 549+ 95ED
# file closed: Rutinas_de_inicio_y_niveles.asm
2443  95ED              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 95ED              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 95ED              ;
   3+ 95ED              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 95ED              ;
   5+ 95ED              ; *****************************************************************************************************************************************************************************************
   6+ 95ED              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 95ED
   8+ 95ED 7C           calcula_tercio ld a,h
   9+ 95EE E6 18        	and $18
  10+ 95F0 CB 2F        	sra a
  11+ 95F2 CB 2F        	sra a
  12+ 95F4 CB 2F        	sra a
  13+ 95F6 C9           	ret
  14+ 95F7
# file closed: calcula_tercio.asm
2444  95F7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 95F7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 95F7              ;
   3+ 95F7              ;
   4+ 95F7              ;	CLS.
   5+ 95F7              ;
   6+ 95F7              ;	Limpia la pantalla y define sus atributos.
   7+ 95F7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 95F7              ;
   9+ 95F7              ;	COLORES: 0 ..... NEGRO
  10+ 95F7              ;    		 1 ..... AZUL
  11+ 95F7              ; 			 2 ..... ROJO
  12+ 95F7              ;			 3 ..... MAGENTA
  13+ 95F7              ; 			 4 ..... VERDE
  14+ 95F7              ; 			 5 ..... CIAN
  15+ 95F7              ;			 6 ..... AMARILLO
  16+ 95F7              ; 			 7 ..... BLANCO
  17+ 95F7              ;
  18+ 95F7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 95F7              ;
  20+ 95F7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 95F7
  22+ 95F7
  23+ 95F7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 95FA 11 01 40     	LD DE,$4001
  25+ 95FD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9600 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9602 ED B0        	LDIR
  28+ 9604 01 FF 02     	LD BC,767
  29+ 9607 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9608 ED B0        	LDIR
  31+ 960A C9           	ret
  32+ 960B
# file closed: Cls.asm
2445  960B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 960B              ; ------------------------------------------------------------------------
   2+ 960B              ;
   3+ 960B              ;	30/1/24
   4+ 960B              ;
   5+ 960B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 960B              ;	Fila superior "0", Columna izquierda "0".
   7+ 960B              ;
   8+ 960B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 960B              ;
  10+ 960B              ;	Modifica: A,BC y DE.
  11+ 960B
  12+ 960B              Genera_coordenadas
  13+ 960B
  14+ 960B 7D           	ld a,l
  15+ 960C E6 1F        	and $1f
  16+ 960E
  17+ 960E 32 EB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9611
  19+ 9611 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9612 FE 40        	cp $40
  21+ 9614 38 1C        	jr c,4F
  22+ 9616
  23+ 9616 CD ED 95     	call calcula_tercio
  24+ 9619 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 961A
  26+ 961A 1E 00        	ld e,0
  27+ 961C 7D           	ld a,l
  28+ 961D E6 E0        	and $e0
  29+ 961F 28 01        	jr z,1F
  30+ 9621 04           	inc b
  31+ 9622
  32+ 9622 04           1 inc b
  33+ 9623 05           	dec b
  34+ 9624 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9626              ;														; _ , salimos.
  36+ 9626 1C           3 inc e
  37+ 9627 D6 20        	sub 32
  38+ 9629 20 FB        	jr nz,3B
  39+ 962B 10 F5        	djnz 1B
  40+ 962D
  41+ 962D 7B           2 ld a,e
  42+ 962E 32 EC 8B     	ld (Coordenada_y),a
  43+ 9631 C9           	ret
  44+ 9632
  45+ 9632 AF           4 xor a
  46+ 9633 32 EC 8B     	ld (Coordenada_y),a
  47+ 9636 C9           	ret
  48+ 9637
# file closed: Genera_coordenadas.asm
2446  9637              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9637              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9637              ;
   3+ 9637              ;	20/09/24
   4+ 9637              ;
   5+ 9637              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9637              ;   DE contiene Puntero_objeto.
   7+ 9637              ;   IX contiene el Puntero de impresión.
   8+ 9637
   9+ 9637              Genera_datos_de_impresion
  10+ 9637
  11+ 9637 ED 73 3A 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 963B
  13+ 963B 2A 5C 8C         ld hl,(Scanlines_album_SP)
  14+ 963E
  15+ 963E 3E 05            ld a,5
  16+ 9640 85               add l
  17+ 9641 6F               ld l,a
  18+ 9642
  19+ 9642 F9               ld sp,hl
  20+ 9643 22 5C 8C         ld (Scanlines_album_SP),hl
  21+ 9646
  22+ 9646 21 00 00         ld hl,0
  23+ 9649
  24+ 9649 DD E5            push ix
  25+ 964B 3B               dec sp
  26+ 964C ED 7A            adc hl,sp
  27+ 964E D5               push de
  28+ 964F
  29+ 964F              ; Recuperamos SP.
  30+ 964F
  31+ 964F ED 7B 3A 8C      ld sp,(Stack)
  32+ 9653
  33+ 9653 E5               push hl
  34+ 9654 F1               pop af
  35+ 9655 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9656
  37+ 9656              ; Tenemos el encabezado listo.
  38+ 9656              ; Preparamos registros para generar los scanlines.
  39+ 9656
  40+ 9656 DD E5            push ix
  41+ 9658 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9659
  43+ 9659 ED 5B 5C 8C      ld de,(Scanlines_album_SP)
  44+ 965D
  45+ 965D              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 965D              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 965D
  48+ 965D 7C               ld a,h
  49+ 965E FE 50            cp $50
  50+ 9660 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9662
  52+ 9662 20 05            jr nz,2F
  53+ 9664
  54+ 9664 7D               ld a,l
  55+ 9665 FE E0            cp $e0
  56+ 9667 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9669
  58+ 9669 7D           2 ld a,l
  59+ 966A FE C0            cp $c0
  60+ 966C D2 02 97         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 966F
  62+ 966F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 966F
  64+ 966F CD B9 9C         call NextScan
  65+ 9672 EB               ex de,hl
  66+ 9673
  67+ 9673 73               ld (hl),e
  68+ 9674 23               inc hl
  69+ 9675 72               ld (hl),d
  70+ 9676 23               inc hl
  71+ 9677
  72+ 9677 EB               ex de,hl
  73+ 9678
  74+ 9678 CD B9 9C         call NextScan
  75+ 967B EB               ex de,hl
  76+ 967C
  77+ 967C 73               ld (hl),e
  78+ 967D 23               inc hl
  79+ 967E 72               ld (hl),d
  80+ 967F 23               inc hl
  81+ 9680
  82+ 9680 EB               ex de,hl
  83+ 9681
  84+ 9681 CD B9 9C         call NextScan
  85+ 9684 EB               ex de,hl
  86+ 9685
  87+ 9685 73               ld (hl),e
  88+ 9686 23               inc hl
  89+ 9687 72               ld (hl),d
  90+ 9688 23               inc hl
  91+ 9689
  92+ 9689 EB               ex de,hl
  93+ 968A
  94+ 968A CD B9 9C         call NextScan
  95+ 968D EB               ex de,hl
  96+ 968E
  97+ 968E 73               ld (hl),e
  98+ 968F 23               inc hl
  99+ 9690 72               ld (hl),d
 100+ 9691 23               inc hl
 101+ 9692
 102+ 9692 EB               ex de,hl
 103+ 9693
 104+ 9693 CD B9 9C         call NextScan
 105+ 9696 EB               ex de,hl
 106+ 9697
 107+ 9697 73               ld (hl),e
 108+ 9698 23               inc hl
 109+ 9699 72               ld (hl),d
 110+ 969A 23               inc hl
 111+ 969B
 112+ 969B EB               ex de,hl
 113+ 969C
 114+ 969C CD B9 9C         call NextScan
 115+ 969F EB               ex de,hl
 116+ 96A0
 117+ 96A0 73               ld (hl),e
 118+ 96A1 23               inc hl
 119+ 96A2 72               ld (hl),d
 120+ 96A3 23               inc hl
 121+ 96A4
 122+ 96A4 EB               ex de,hl
 123+ 96A5
 124+ 96A5 CD B9 9C         call NextScan
 125+ 96A8 EB               ex de,hl
 126+ 96A9
 127+ 96A9 73               ld (hl),e
 128+ 96AA 23               inc hl
 129+ 96AB 72               ld (hl),d
 130+ 96AC 23               inc hl
 131+ 96AD
 132+ 96AD EB               ex de,hl
 133+ 96AE
 134+ 96AE CD B9 9C         call NextScan
 135+ 96B1 EB               ex de,hl
 136+ 96B2
 137+ 96B2 73               ld (hl),e
 138+ 96B3 23               inc hl
 139+ 96B4 72               ld (hl),d
 140+ 96B5 23               inc hl
 141+ 96B6
 142+ 96B6 EB               ex de,hl
 143+ 96B7
 144+ 96B7 CD B9 9C         call NextScan
 145+ 96BA EB               ex de,hl
 146+ 96BB
 147+ 96BB 73               ld (hl),e
 148+ 96BC 23               inc hl
 149+ 96BD 72               ld (hl),d
 150+ 96BE 23               inc hl
 151+ 96BF
 152+ 96BF EB               ex de,hl
 153+ 96C0
 154+ 96C0 CD B9 9C         call NextScan
 155+ 96C3 EB               ex de,hl
 156+ 96C4
 157+ 96C4 73               ld (hl),e
 158+ 96C5 23               inc hl
 159+ 96C6 72               ld (hl),d
 160+ 96C7 23               inc hl
 161+ 96C8
 162+ 96C8 EB               ex de,hl
 163+ 96C9
 164+ 96C9 CD B9 9C         call NextScan
 165+ 96CC EB               ex de,hl
 166+ 96CD
 167+ 96CD 73               ld (hl),e
 168+ 96CE 23               inc hl
 169+ 96CF 72               ld (hl),d
 170+ 96D0 23               inc hl
 171+ 96D1
 172+ 96D1 EB               ex de,hl
 173+ 96D2
 174+ 96D2 CD B9 9C         call NextScan
 175+ 96D5 EB               ex de,hl
 176+ 96D6
 177+ 96D6 73               ld (hl),e
 178+ 96D7 23               inc hl
 179+ 96D8 72               ld (hl),d
 180+ 96D9 23               inc hl
 181+ 96DA
 182+ 96DA EB               ex de,hl
 183+ 96DB
 184+ 96DB CD B9 9C         call NextScan
 185+ 96DE EB               ex de,hl
 186+ 96DF
 187+ 96DF 73               ld (hl),e
 188+ 96E0 23               inc hl
 189+ 96E1 72               ld (hl),d
 190+ 96E2 23               inc hl
 191+ 96E3
 192+ 96E3 EB               ex de,hl
 193+ 96E4
 194+ 96E4 CD B9 9C         call NextScan
 195+ 96E7 EB               ex de,hl
 196+ 96E8
 197+ 96E8 73               ld (hl),e
 198+ 96E9 23               inc hl
 199+ 96EA 72               ld (hl),d
 200+ 96EB 23               inc hl
 201+ 96EC
 202+ 96EC EB               ex de,hl
 203+ 96ED
 204+ 96ED CD B9 9C         call NextScan
 205+ 96F0 EB               ex de,hl
 206+ 96F1
 207+ 96F1              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 96F1              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 96F1              ;   _ generar sus scanlines.
 210+ 96F1
 211+ 96F1              ;    ld (Puntero_de_impresion_disparo),de
 212+ 96F1
 213+ 96F1 73               ld (hl),e
 214+ 96F2 23               inc hl
 215+ 96F3 72               ld (hl),d
 216+ 96F4 23               inc hl
 217+ 96F5
 218+ 96F5              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 96F5
 220+ 96F5 22 5C 8C         ld (Scanlines_album_SP),hl
 221+ 96F8
 222+ 96F8 EB               ex de,hl
 223+ 96F9
 224+ 96F9              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 96F9
 226+ 96F9              ;    call NextScan
 227+ 96F9              ;    call NextScan
 228+ 96F9
 229+ 96F9 22 67 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 96FC
 231+ 96FC              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 96FC
 233+ 96FC 08               ex af,af
 234+ 96FD
 235+ 96FD F5               push af
 236+ 96FE E1               pop hl
 237+ 96FF
 238+ 96FF 36 10            ld (hl),16
 239+ 9701
 240+ 9701 C9               ret
 241+ 9702
 242+ 9702              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9702
 244+ 9702              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9702
 246+ 9702 3E 57            ld a,$57
 247+ 9704 94               sub h
 248+ 9705 47               ld b,a
 249+ 9706
 250+ 9706 3E DF            ld a,$df
 251+ 9708 BD               cp l
 252+ 9709 38 04            jr c,1F
 253+ 970B
 254+ 970B 3E 08            ld a,8
 255+ 970D 80               add b
 256+ 970E 47               ld b,a
 257+ 970F
 258+ 970F              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 970F              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 970F
 261+ 970F 48           1 ld c,b
 262+ 9710 0C               inc c
 263+ 9711
 264+ 9711 04               inc b
 265+ 9712 05               dec b
 266+ 9713 20 02            jr nz,3F
 267+ 9715
 268+ 9715 18 0B            jr 6F
 269+ 9717
 270+ 9717 CD B9 9C     3 call NextScan
 271+ 971A EB               ex de,hl
 272+ 971B
 273+ 971B 73               ld (hl),e
 274+ 971C 23               inc hl
 275+ 971D 72               ld (hl),d
 276+ 971E 23               inc hl
 277+ 971F
 278+ 971F EB               ex de,hl
 279+ 9720 10 F5            djnz 3B
 280+ 9722
 281+ 9722 ED 53 5C 8C  6 ld (Scanlines_album_SP),de
 282+ 9726
 283+ 9726 08           5 ex af,af
 284+ 9727 F5               push af
 285+ 9728 E1               pop hl
 286+ 9729
 287+ 9729 71               ld (hl),c
 288+ 972A
 289+ 972A C9               ret
 290+ 972B
# file closed: Genera_datos_de_impresion.asm
2447  972B              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 972B              ; -----------------------------------------------------------------------------
   2+ 972B              ;
   3+ 972B              ;   15/1/25
   4+ 972B              ;
   5+ 972B
   6+ 972B              Pinta_Sprites
   7+ 972B
   8+ 972B ED 73 3A 8C      ld (Stack),sp
   9+ 972F
  10+ 972F EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  11+ 9730              ;                                       ; DE se encuentra en los datos del sprite.
  12+ 9730 2C               inc l
  13+ 9731 2C               inc l
  14+ 9732
  15+ 9732 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  16+ 9733
  17+ 9733 2C               inc l
  18+ 9734 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  19+ 9735
  20+ 9735              ;   Seleccionamos rutina de impresión:
  21+ 9735
  22+ 9735 08               ex af,af                            ; (Columnas) en AF´.
  23+ 9736
  24+ 9736 3E 10            ld a,16
  25+ 9738 B8               cp b
  26+ 9739 C2 72 99         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  27+ 973C
  28+ 973C              ;   Rutinas:
  29+ 973C
  30+ 973C              Pinta_rapido                            ;   1520 t/states.
  31+ 973C
  32+ 973C 3A 0B 8C         ld a,(Columnitas)
  33+ 973F 3D               dec a
  34+ 9740 CA F9 98         jp z,Pinta_rapido_1_Columna
  35+ 9743 3D               dec a
  36+ 9744 CA 40 98         jp z,Pinta_rapido_2_Columnas
  37+ 9747
  38+ 9747              Pinta_rapido_3_Columnas
  39+ 9747
  40+ 9747 E1               pop hl
  41+ 9748
  42+ 9748 1A               ld a,(de)
  43+ 9749 AE               xor (hl)
  44+ 974A 77               ld (hl),a
  45+ 974B 2C               inc l
  46+ 974C 1C               inc e
  47+ 974D 1A               ld a,(de)
  48+ 974E AE               xor (hl)
  49+ 974F 77               ld (hl),a
  50+ 9750 2C               inc l
  51+ 9751 1C               inc e
  52+ 9752 1A               ld a,(de)
  53+ 9753 AE               xor (hl)
  54+ 9754 77               ld (hl),a
  55+ 9755 1C               inc e
  56+ 9756
  57+ 9756 E1               pop hl
  58+ 9757
  59+ 9757 1A               ld a,(de)
  60+ 9758 AE               xor (hl)
  61+ 9759 77               ld (hl),a
  62+ 975A 2C               inc l
  63+ 975B 1C               inc e
  64+ 975C 1A               ld a,(de)
  65+ 975D AE               xor (hl)
  66+ 975E 77               ld (hl),a
  67+ 975F 2C               inc l
  68+ 9760 1C               inc e
  69+ 9761 1A               ld a,(de)
  70+ 9762 AE               xor (hl)
  71+ 9763 77               ld (hl),a
  72+ 9764 1C               inc e
  73+ 9765
  74+ 9765 E1               pop hl
  75+ 9766
  76+ 9766 1A               ld a,(de)
  77+ 9767 AE               xor (hl)
  78+ 9768 77               ld (hl),a
  79+ 9769 2C               inc l
  80+ 976A 1C               inc e
  81+ 976B 1A               ld a,(de)
  82+ 976C AE               xor (hl)
  83+ 976D 77               ld (hl),a
  84+ 976E 2C               inc l
  85+ 976F 1C               inc e
  86+ 9770 1A               ld a,(de)
  87+ 9771 AE               xor (hl)
  88+ 9772 77               ld (hl),a
  89+ 9773 1C               inc e
  90+ 9774
  91+ 9774 E1               pop hl
  92+ 9775
  93+ 9775 1A               ld a,(de)
  94+ 9776 AE               xor (hl)
  95+ 9777 77               ld (hl),a
  96+ 9778 2C               inc l
  97+ 9779 1C               inc e
  98+ 977A 1A               ld a,(de)
  99+ 977B AE               xor (hl)
 100+ 977C 77               ld (hl),a
 101+ 977D 2C               inc l
 102+ 977E 1C               inc e
 103+ 977F 1A               ld a,(de)
 104+ 9780 AE               xor (hl)
 105+ 9781 77               ld (hl),a
 106+ 9782 1C               inc e
 107+ 9783
 108+ 9783 E1               pop hl
 109+ 9784
 110+ 9784 1A               ld a,(de)
 111+ 9785 AE               xor (hl)
 112+ 9786 77               ld (hl),a
 113+ 9787 2C               inc l
 114+ 9788 1C               inc e
 115+ 9789 1A               ld a,(de)
 116+ 978A AE               xor (hl)
 117+ 978B 77               ld (hl),a
 118+ 978C 2C               inc l
 119+ 978D 1C               inc e
 120+ 978E 1A               ld a,(de)
 121+ 978F AE               xor (hl)
 122+ 9790 77               ld (hl),a
 123+ 9791 1C               inc e
 124+ 9792
 125+ 9792 E1               pop hl
 126+ 9793
 127+ 9793 1A               ld a,(de)
 128+ 9794 AE               xor (hl)
 129+ 9795 77               ld (hl),a
 130+ 9796 2C               inc l
 131+ 9797 1C               inc e
 132+ 9798 1A               ld a,(de)
 133+ 9799 AE               xor (hl)
 134+ 979A 77               ld (hl),a
 135+ 979B 2C               inc l
 136+ 979C 1C               inc e
 137+ 979D 1A               ld a,(de)
 138+ 979E AE               xor (hl)
 139+ 979F 77               ld (hl),a
 140+ 97A0 1C               inc e
 141+ 97A1
 142+ 97A1 E1               pop hl
 143+ 97A2
 144+ 97A2 1A               ld a,(de)
 145+ 97A3 AE               xor (hl)
 146+ 97A4 77               ld (hl),a
 147+ 97A5 2C               inc l
 148+ 97A6 1C               inc e
 149+ 97A7 1A               ld a,(de)
 150+ 97A8 AE               xor (hl)
 151+ 97A9 77               ld (hl),a
 152+ 97AA 2C               inc l
 153+ 97AB 1C               inc e
 154+ 97AC 1A               ld a,(de)
 155+ 97AD AE               xor (hl)
 156+ 97AE 77               ld (hl),a
 157+ 97AF 1C               inc e
 158+ 97B0
 159+ 97B0 E1               pop hl
 160+ 97B1
 161+ 97B1 1A               ld a,(de)
 162+ 97B2 AE               xor (hl)
 163+ 97B3 77               ld (hl),a
 164+ 97B4 2C               inc l
 165+ 97B5 1C               inc e
 166+ 97B6 1A               ld a,(de)
 167+ 97B7 AE               xor (hl)
 168+ 97B8 77               ld (hl),a
 169+ 97B9 2C               inc l
 170+ 97BA 1C               inc e
 171+ 97BB 1A               ld a,(de)
 172+ 97BC AE               xor (hl)
 173+ 97BD 77               ld (hl),a
 174+ 97BE 1C               inc e
 175+ 97BF
 176+ 97BF E1               pop hl
 177+ 97C0
 178+ 97C0 1A               ld a,(de)
 179+ 97C1 AE               xor (hl)
 180+ 97C2 77               ld (hl),a
 181+ 97C3 2C               inc l
 182+ 97C4 1C               inc e
 183+ 97C5 1A               ld a,(de)
 184+ 97C6 AE               xor (hl)
 185+ 97C7 77               ld (hl),a
 186+ 97C8 2C               inc l
 187+ 97C9 1C               inc e
 188+ 97CA 1A               ld a,(de)
 189+ 97CB AE               xor (hl)
 190+ 97CC 77               ld (hl),a
 191+ 97CD 1C               inc e
 192+ 97CE
 193+ 97CE E1               pop hl
 194+ 97CF
 195+ 97CF 1A               ld a,(de)
 196+ 97D0 AE               xor (hl)
 197+ 97D1 77               ld (hl),a
 198+ 97D2 2C               inc l
 199+ 97D3 1C               inc e
 200+ 97D4 1A               ld a,(de)
 201+ 97D5 AE               xor (hl)
 202+ 97D6 77               ld (hl),a
 203+ 97D7 2C               inc l
 204+ 97D8 1C               inc e
 205+ 97D9 1A               ld a,(de)
 206+ 97DA AE               xor (hl)
 207+ 97DB 77               ld (hl),a
 208+ 97DC 1C               inc e
 209+ 97DD
 210+ 97DD E1               pop hl
 211+ 97DE
 212+ 97DE 1A               ld a,(de)
 213+ 97DF AE               xor (hl)
 214+ 97E0 77               ld (hl),a
 215+ 97E1 2C               inc l
 216+ 97E2 1C               inc e
 217+ 97E3 1A               ld a,(de)
 218+ 97E4 AE               xor (hl)
 219+ 97E5 77               ld (hl),a
 220+ 97E6 2C               inc l
 221+ 97E7 1C               inc e
 222+ 97E8 1A               ld a,(de)
 223+ 97E9 AE               xor (hl)
 224+ 97EA 77               ld (hl),a
 225+ 97EB 1C               inc e
 226+ 97EC
 227+ 97EC E1               pop hl
 228+ 97ED
 229+ 97ED 1A               ld a,(de)
 230+ 97EE AE               xor (hl)
 231+ 97EF 77               ld (hl),a
 232+ 97F0 2C               inc l
 233+ 97F1 1C               inc e
 234+ 97F2 1A               ld a,(de)
 235+ 97F3 AE               xor (hl)
 236+ 97F4 77               ld (hl),a
 237+ 97F5 2C               inc l
 238+ 97F6 1C               inc e
 239+ 97F7 1A               ld a,(de)
 240+ 97F8 AE               xor (hl)
 241+ 97F9 77               ld (hl),a
 242+ 97FA 1C               inc e
 243+ 97FB
 244+ 97FB E1               pop hl
 245+ 97FC
 246+ 97FC 1A               ld a,(de)
 247+ 97FD AE               xor (hl)
 248+ 97FE 77               ld (hl),a
 249+ 97FF 2C               inc l
 250+ 9800 1C               inc e
 251+ 9801 1A               ld a,(de)
 252+ 9802 AE               xor (hl)
 253+ 9803 77               ld (hl),a
 254+ 9804 2C               inc l
 255+ 9805 1C               inc e
 256+ 9806 1A               ld a,(de)
 257+ 9807 AE               xor (hl)
 258+ 9808 77               ld (hl),a
 259+ 9809 1C               inc e
 260+ 980A
 261+ 980A E1               pop hl
 262+ 980B
 263+ 980B 1A               ld a,(de)
 264+ 980C AE               xor (hl)
 265+ 980D 77               ld (hl),a
 266+ 980E 2C               inc l
 267+ 980F 1C               inc e
 268+ 9810 1A               ld a,(de)
 269+ 9811 AE               xor (hl)
 270+ 9812 77               ld (hl),a
 271+ 9813 2C               inc l
 272+ 9814 1C               inc e
 273+ 9815 1A               ld a,(de)
 274+ 9816 AE               xor (hl)
 275+ 9817 77               ld (hl),a
 276+ 9818 1C               inc e
 277+ 9819
 278+ 9819 E1               pop hl
 279+ 981A
 280+ 981A 1A               ld a,(de)
 281+ 981B AE               xor (hl)
 282+ 981C 77               ld (hl),a
 283+ 981D 2C               inc l
 284+ 981E 1C               inc e
 285+ 981F 1A               ld a,(de)
 286+ 9820 AE               xor (hl)
 287+ 9821 77               ld (hl),a
 288+ 9822 2C               inc l
 289+ 9823 1C               inc e
 290+ 9824 1A               ld a,(de)
 291+ 9825 AE               xor (hl)
 292+ 9826 77               ld (hl),a
 293+ 9827 1C               inc e
 294+ 9828
 295+ 9828 E1               pop hl
 296+ 9829
 297+ 9829 1A               ld a,(de)
 298+ 982A AE               xor (hl)
 299+ 982B 77               ld (hl),a
 300+ 982C 2C               inc l
 301+ 982D 1C               inc e
 302+ 982E 1A               ld a,(de)
 303+ 982F AE               xor (hl)
 304+ 9830 77               ld (hl),a
 305+ 9831 2C               inc l
 306+ 9832 1C               inc e
 307+ 9833 1A               ld a,(de)
 308+ 9834 AE               xor (hl)
 309+ 9835 77               ld (hl),a
 310+ 9836 1C               inc e
 311+ 9837
 312+ 9837 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 313+ 983B ED 7B 3A 8C      ld sp,(Stack)
 314+ 983F
 315+ 983F C9               ret
 316+ 9840
 317+ 9840              Pinta_rapido_2_Columnas
 318+ 9840
 319+ 9840 E1               pop hl
 320+ 9841
 321+ 9841 1A               ld a,(de)
 322+ 9842 AE               xor (hl)
 323+ 9843 77               ld (hl),a
 324+ 9844 2C               inc l
 325+ 9845 1C               inc e
 326+ 9846 1A               ld a,(de)
 327+ 9847 AE               xor (hl)
 328+ 9848 77               ld (hl),a
 329+ 9849 1C               inc e
 330+ 984A 1C               inc e
 331+ 984B
 332+ 984B E1               pop hl
 333+ 984C
 334+ 984C 1A               ld a,(de)
 335+ 984D AE               xor (hl)
 336+ 984E 77               ld (hl),a
 337+ 984F 2C               inc l
 338+ 9850 1C               inc e
 339+ 9851 1A               ld a,(de)
 340+ 9852 AE               xor (hl)
 341+ 9853 77               ld (hl),a
 342+ 9854 1C               inc e
 343+ 9855 1C               inc e
 344+ 9856
 345+ 9856 E1               pop hl
 346+ 9857
 347+ 9857 1A               ld a,(de)
 348+ 9858 AE               xor (hl)
 349+ 9859 77               ld (hl),a
 350+ 985A 2C               inc l
 351+ 985B 1C               inc e
 352+ 985C 1A               ld a,(de)
 353+ 985D AE               xor (hl)
 354+ 985E 77               ld (hl),a
 355+ 985F 1C               inc e
 356+ 9860 1C               inc e
 357+ 9861
 358+ 9861 E1               pop hl
 359+ 9862
 360+ 9862 1A               ld a,(de)
 361+ 9863 AE               xor (hl)
 362+ 9864 77               ld (hl),a
 363+ 9865 2C               inc l
 364+ 9866 1C               inc e
 365+ 9867 1A               ld a,(de)
 366+ 9868 AE               xor (hl)
 367+ 9869 77               ld (hl),a
 368+ 986A 1C               inc e
 369+ 986B 1C               inc e
 370+ 986C
 371+ 986C E1               pop hl
 372+ 986D
 373+ 986D 1A               ld a,(de)
 374+ 986E AE               xor (hl)
 375+ 986F 77               ld (hl),a
 376+ 9870 2C               inc l
 377+ 9871 1C               inc e
 378+ 9872 1A               ld a,(de)
 379+ 9873 AE               xor (hl)
 380+ 9874 77               ld (hl),a
 381+ 9875 1C               inc e
 382+ 9876 1C               inc e
 383+ 9877
 384+ 9877 E1               pop hl
 385+ 9878
 386+ 9878 1A               ld a,(de)
 387+ 9879 AE               xor (hl)
 388+ 987A 77               ld (hl),a
 389+ 987B 2C               inc l
 390+ 987C 1C               inc e
 391+ 987D 1A               ld a,(de)
 392+ 987E AE               xor (hl)
 393+ 987F 77               ld (hl),a
 394+ 9880 1C               inc e
 395+ 9881 1C               inc e
 396+ 9882
 397+ 9882 E1               pop hl
 398+ 9883
 399+ 9883 1A               ld a,(de)
 400+ 9884 AE               xor (hl)
 401+ 9885 77               ld (hl),a
 402+ 9886 2C               inc l
 403+ 9887 1C               inc e
 404+ 9888 1A               ld a,(de)
 405+ 9889 AE               xor (hl)
 406+ 988A 77               ld (hl),a
 407+ 988B 1C               inc e
 408+ 988C 1C               inc e
 409+ 988D
 410+ 988D E1               pop hl
 411+ 988E
 412+ 988E 1A               ld a,(de)
 413+ 988F AE               xor (hl)
 414+ 9890 77               ld (hl),a
 415+ 9891 2C               inc l
 416+ 9892 1C               inc e
 417+ 9893 1A               ld a,(de)
 418+ 9894 AE               xor (hl)
 419+ 9895 77               ld (hl),a
 420+ 9896 1C               inc e
 421+ 9897 1C               inc e
 422+ 9898
 423+ 9898 E1               pop hl
 424+ 9899
 425+ 9899 1A               ld a,(de)
 426+ 989A AE               xor (hl)
 427+ 989B 77               ld (hl),a
 428+ 989C 2C               inc l
 429+ 989D 1C               inc e
 430+ 989E 1A               ld a,(de)
 431+ 989F AE               xor (hl)
 432+ 98A0 77               ld (hl),a
 433+ 98A1 1C               inc e
 434+ 98A2 1C               inc e
 435+ 98A3
 436+ 98A3 E1               pop hl
 437+ 98A4
 438+ 98A4 1A               ld a,(de)
 439+ 98A5 AE               xor (hl)
 440+ 98A6 77               ld (hl),a
 441+ 98A7 2C               inc l
 442+ 98A8 1C               inc e
 443+ 98A9 1A               ld a,(de)
 444+ 98AA AE               xor (hl)
 445+ 98AB 77               ld (hl),a
 446+ 98AC 1C               inc e
 447+ 98AD 1C               inc e
 448+ 98AE
 449+ 98AE E1               pop hl
 450+ 98AF
 451+ 98AF 1A               ld a,(de)
 452+ 98B0 AE               xor (hl)
 453+ 98B1 77               ld (hl),a
 454+ 98B2 2C               inc l
 455+ 98B3 1C               inc e
 456+ 98B4 1A               ld a,(de)
 457+ 98B5 AE               xor (hl)
 458+ 98B6 77               ld (hl),a
 459+ 98B7 1C               inc e
 460+ 98B8 1C               inc e
 461+ 98B9
 462+ 98B9 E1               pop hl
 463+ 98BA
 464+ 98BA 1A               ld a,(de)
 465+ 98BB AE               xor (hl)
 466+ 98BC 77               ld (hl),a
 467+ 98BD 2C               inc l
 468+ 98BE 1C               inc e
 469+ 98BF 1A               ld a,(de)
 470+ 98C0 AE               xor (hl)
 471+ 98C1 77               ld (hl),a
 472+ 98C2 1C               inc e
 473+ 98C3 1C               inc e
 474+ 98C4
 475+ 98C4 E1               pop hl
 476+ 98C5
 477+ 98C5 1A               ld a,(de)
 478+ 98C6 AE               xor (hl)
 479+ 98C7 77               ld (hl),a
 480+ 98C8 2C               inc l
 481+ 98C9 1C               inc e
 482+ 98CA 1A               ld a,(de)
 483+ 98CB AE               xor (hl)
 484+ 98CC 77               ld (hl),a
 485+ 98CD 1C               inc e
 486+ 98CE 1C               inc e
 487+ 98CF
 488+ 98CF E1               pop hl
 489+ 98D0
 490+ 98D0 1A               ld a,(de)
 491+ 98D1 AE               xor (hl)
 492+ 98D2 77               ld (hl),a
 493+ 98D3 2C               inc l
 494+ 98D4 1C               inc e
 495+ 98D5 1A               ld a,(de)
 496+ 98D6 AE               xor (hl)
 497+ 98D7 77               ld (hl),a
 498+ 98D8 1C               inc e
 499+ 98D9 1C               inc e
 500+ 98DA
 501+ 98DA E1               pop hl
 502+ 98DB
 503+ 98DB 1A               ld a,(de)
 504+ 98DC AE               xor (hl)
 505+ 98DD 77               ld (hl),a
 506+ 98DE 2C               inc l
 507+ 98DF 1C               inc e
 508+ 98E0 1A               ld a,(de)
 509+ 98E1 AE               xor (hl)
 510+ 98E2 77               ld (hl),a
 511+ 98E3 1C               inc e
 512+ 98E4 1C               inc e
 513+ 98E5
 514+ 98E5 E1               pop hl
 515+ 98E6
 516+ 98E6 1A               ld a,(de)
 517+ 98E7 AE               xor (hl)
 518+ 98E8 77               ld (hl),a
 519+ 98E9 2C               inc l
 520+ 98EA 1C               inc e
 521+ 98EB 1A               ld a,(de)
 522+ 98EC AE               xor (hl)
 523+ 98ED 77               ld (hl),a
 524+ 98EE 1C               inc e
 525+ 98EF 1C               inc e
 526+ 98F0
 527+ 98F0 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 528+ 98F4 ED 7B 3A 8C      ld sp,(Stack)
 529+ 98F8
 530+ 98F8 C9               ret
 531+ 98F9
 532+ 98F9              Pinta_rapido_1_Columna
 533+ 98F9
 534+ 98F9 E1               pop hl
 535+ 98FA
 536+ 98FA 1A               ld a,(de)
 537+ 98FB AE               xor (hl)
 538+ 98FC 77               ld (hl),a
 539+ 98FD 1C               inc e
 540+ 98FE 1C               inc e
 541+ 98FF 1C               inc e
 542+ 9900
 543+ 9900 E1               pop hl
 544+ 9901
 545+ 9901 1A               ld a,(de)
 546+ 9902 AE               xor (hl)
 547+ 9903 77               ld (hl),a
 548+ 9904 1C               inc e
 549+ 9905 1C               inc e
 550+ 9906 1C               inc e
 551+ 9907
 552+ 9907 E1               pop hl
 553+ 9908
 554+ 9908 1A               ld a,(de)
 555+ 9909 AE               xor (hl)
 556+ 990A 77               ld (hl),a
 557+ 990B 1C               inc e
 558+ 990C 1C               inc e
 559+ 990D 1C               inc e
 560+ 990E
 561+ 990E E1               pop hl
 562+ 990F
 563+ 990F 1A               ld a,(de)
 564+ 9910 AE               xor (hl)
 565+ 9911 77               ld (hl),a
 566+ 9912 1C               inc e
 567+ 9913 1C               inc e
 568+ 9914 1C               inc e
 569+ 9915
 570+ 9915 E1               pop hl
 571+ 9916
 572+ 9916 1A               ld a,(de)
 573+ 9917 AE               xor (hl)
 574+ 9918 77               ld (hl),a
 575+ 9919 1C               inc e
 576+ 991A 1C               inc e
 577+ 991B 1C               inc e
 578+ 991C
 579+ 991C E1               pop hl
 580+ 991D
 581+ 991D 1A               ld a,(de)
 582+ 991E AE               xor (hl)
 583+ 991F 77               ld (hl),a
 584+ 9920 1C               inc e
 585+ 9921 1C               inc e
 586+ 9922 1C               inc e
 587+ 9923
 588+ 9923 E1               pop hl
 589+ 9924
 590+ 9924 1A               ld a,(de)
 591+ 9925 AE               xor (hl)
 592+ 9926 77               ld (hl),a
 593+ 9927 1C               inc e
 594+ 9928 1C               inc e
 595+ 9929 1C               inc e
 596+ 992A
 597+ 992A E1               pop hl
 598+ 992B
 599+ 992B 1A               ld a,(de)
 600+ 992C AE               xor (hl)
 601+ 992D 77               ld (hl),a
 602+ 992E 1C               inc e
 603+ 992F 1C               inc e
 604+ 9930 1C               inc e
 605+ 9931
 606+ 9931 E1               pop hl
 607+ 9932
 608+ 9932 1A               ld a,(de)
 609+ 9933 AE               xor (hl)
 610+ 9934 77               ld (hl),a
 611+ 9935 1C               inc e
 612+ 9936 1C               inc e
 613+ 9937 1C               inc e
 614+ 9938
 615+ 9938 E1               pop hl
 616+ 9939
 617+ 9939 1A               ld a,(de)
 618+ 993A AE               xor (hl)
 619+ 993B 77               ld (hl),a
 620+ 993C 1C               inc e
 621+ 993D 1C               inc e
 622+ 993E 1C               inc e
 623+ 993F
 624+ 993F E1               pop hl
 625+ 9940
 626+ 9940 1A               ld a,(de)
 627+ 9941 AE               xor (hl)
 628+ 9942 77               ld (hl),a
 629+ 9943 1C               inc e
 630+ 9944 1C               inc e
 631+ 9945 1C               inc e
 632+ 9946
 633+ 9946 E1               pop hl
 634+ 9947
 635+ 9947 1A               ld a,(de)
 636+ 9948 AE               xor (hl)
 637+ 9949 77               ld (hl),a
 638+ 994A 1C               inc e
 639+ 994B 1C               inc e
 640+ 994C 1C               inc e
 641+ 994D
 642+ 994D E1               pop hl
 643+ 994E
 644+ 994E 1A               ld a,(de)
 645+ 994F AE               xor (hl)
 646+ 9950 77               ld (hl),a
 647+ 9951 1C               inc e
 648+ 9952 1C               inc e
 649+ 9953 1C               inc e
 650+ 9954 E1               pop hl
 651+ 9955
 652+ 9955 1A               ld a,(de)
 653+ 9956 AE               xor (hl)
 654+ 9957 77               ld (hl),a
 655+ 9958 1C               inc e
 656+ 9959 1C               inc e
 657+ 995A 1C               inc e
 658+ 995B
 659+ 995B E1               pop hl
 660+ 995C
 661+ 995C 1A               ld a,(de)
 662+ 995D AE               xor (hl)
 663+ 995E 77               ld (hl),a
 664+ 995F 1C               inc e
 665+ 9960 1C               inc e
 666+ 9961 1C               inc e
 667+ 9962
 668+ 9962 E1               pop hl
 669+ 9963
 670+ 9963 1A               ld a,(de)
 671+ 9964 AE               xor (hl)
 672+ 9965 77               ld (hl),a
 673+ 9966 1C               inc e
 674+ 9967 1C               inc e
 675+ 9968 1C               inc e
 676+ 9969
 677+ 9969 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 678+ 996D ED 7B 3A 8C      ld sp,(Stack)
 679+ 9971
 680+ 9971 C9               ret
 681+ 9972
 682+ 9972              Pinta_lento
 683+ 9972
 684+ 9972 3A 0B 8C         ld a,(Columnitas)
 685+ 9975 3D               dec a
 686+ 9976 28 33            jr z,Pinta_lento_1_Columna
 687+ 9978 3D               dec a
 688+ 9979 28 1A            jr z,Pinta_lento_2_Columnas
 689+ 997B
 690+ 997B              Pinta_lento_3_Columnas
 691+ 997B
 692+ 997B E1           1 pop hl
 693+ 997C
 694+ 997C 1A               ld a,(de)
 695+ 997D AE               xor (hl)
 696+ 997E 77               ld (hl),a
 697+ 997F 2C               inc l
 698+ 9980 1C               inc e
 699+ 9981 1A               ld a,(de)
 700+ 9982 AE               xor (hl)
 701+ 9983 77               ld (hl),a
 702+ 9984 2C               inc l
 703+ 9985 1C               inc e
 704+ 9986 1A               ld a,(de)
 705+ 9987 AE               xor (hl)
 706+ 9988 77               ld (hl),a
 707+ 9989 13               inc de
 708+ 998A
 709+ 998A 10 EF            djnz 1B
 710+ 998C
 711+ 998C ED 73 5C 8C      ld (Scanlines_album_SP),sp
 712+ 9990 ED 7B 3A 8C      ld sp,(Stack)
 713+ 9994 C9               ret
 714+ 9995
 715+ 9995              Pinta_lento_2_Columnas
 716+ 9995
 717+ 9995 E1           2 pop hl
 718+ 9996
 719+ 9996 1A               ld a,(de)
 720+ 9997 AE               xor (hl)
 721+ 9998 77               ld (hl),a
 722+ 9999 2C               inc l
 723+ 999A 1C               inc e
 724+ 999B 1A               ld a,(de)
 725+ 999C AE               xor (hl)
 726+ 999D 77               ld (hl),a
 727+ 999E 1C               inc e
 728+ 999F 1C               inc e
 729+ 99A0
 730+ 99A0 10 F3            djnz 2B
 731+ 99A2
 732+ 99A2 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 733+ 99A6 ED 7B 3A 8C      ld sp,(Stack)
 734+ 99AA C9               ret
 735+ 99AB
 736+ 99AB              Pinta_lento_1_Columna
 737+ 99AB
 738+ 99AB E1           3 pop hl
 739+ 99AC
 740+ 99AC 1A               ld a,(de)
 741+ 99AD AE               xor (hl)
 742+ 99AE 77               ld (hl),a
 743+ 99AF 1C               inc e
 744+ 99B0 1C               inc e
 745+ 99B1 1C               inc e
 746+ 99B2
 747+ 99B2 10 F7            djnz 3B
 748+ 99B4
 749+ 99B4 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 750+ 99B8 ED 7B 3A 8C      ld sp,(Stack)
 751+ 99BC C9               ret
# file closed: Pinta_Sprites.asm
2448  99BD              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 99BD              ; ******************************************************************************************************************************************************************************************
   2+ 99BD              ;
   3+ 99BD              ; 26/06/23
   4+ 99BD              ;
   5+ 99BD              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 99BD
   7+ 99BD              Draw
   8+ 99BD
   9+ 99BD CD AD 9C     	call Prepara_draw
  10+ 99C0 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 99C1 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 99C2 28 05        	jr z,2F
  13+ 99C4
  14+ 99C4 3A 09 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 99C7 18 0C        	jr 1F
  16+ 99C9
  17+ 99C9 2A 07 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 99CC 22 FA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 99CF CD 5E 9B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 99D2              ;													; _la esquina superior izquierda de la pantalla.
  21+ 99D2
  22+ 99D2 CD 2F A1     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 99D5
  24+ 99D5 3A F7 8B     1 ld a,(Ctrl_0)
  25+ 99D8 CB 6F        	bit 5,a
  26+ 99DA 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 99DC
  28+ 99DC CD F4 99     	call Comprueba_limite_horizontal
  29+ 99DF CD 84 9A     	call Comprueba_limite_vertical
  30+ 99E2
  31+ 99E2              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 99E2              ; -----------------------
  33+ 99E2              ; -----------------------
  34+ 99E2              ; -----------------------
  35+ 99E2
  36+ 99E2 CD DA 9B     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 99E5 CD 11 9C     	call Calcula_Columnitas
  38+ 99E8 CD 32 9C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  39+ 99EB
  40+ 99EB 3A F7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 99EE CB AF        	res 5,a											; _a ser de utilidad.
  42+ 99F0 32 F7 8B     	ld (Ctrl_0),a
  43+ 99F3
  44+ 99F3 C9           	ret
  45+ 99F4
  46+ 99F4              ; *******************************************************************************************************************************************************************************************
  47+ 99F4              ;	21/01/23
  48+ 99F4              ;
  49+ 99F4              ; 	Comprueba_limite_horizontal.
  50+ 99F4              ;
  51+ 99F4              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 99F4              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 99F4              ;
  54+ 99F4              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 99F4              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 99F4              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 99F4              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 99F4
  59+ 99F4
  60+ 99F4
  61+ 99F4 3A F7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 99F7 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 99F9 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 99FB E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 99FD 32 F7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 9A00 18 09            jr 6F
  67+ 9A02 CB 5F        1 bit 3,a
  68+ 9A04 28 0A            jr z,2F
  69+ 9A06 E6 F7            and $f7
  70+ 9A08 32 F7 8B         ld (Ctrl_0),a
  71+ 9A0B CD 5E 9B     6 call Inicializacion
  72+ 9A0E 18 5B            jr 5F
  73+ 9A10 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9A11
  75+ 9A11              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9A11              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9A11
  78+ 9A11 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9A12 2A 0C 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9A15 CD ED 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9A18 67           	ld h,a
  82+ 9A19 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9A1A CD ED 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9A1D 67           	ld h,a
  85+ 9A1E A7           	and a
  86+ 9A1F ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9A21 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9A22 3A 09 8C     	ld a,(Cuad_objeto)
  89+ 9A25 FE 02        	cp 2
  90+ 9A27 38 1E        	jr c,3F
  91+ 9A29 28 1C        	jr z,3F
  92+ 9A2B 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9A2C 28 23            jr z,7F
  94+ 9A2E 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9A30 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9A32 E1           	pop hl
  97+ 9A33
  98+ 9A33              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9A33              ; _para indicar con E="2" en caso necesario.
 100+ 9A33
 101+ 9A33 E5               push hl
 102+ 9A34 C5               push bc
 103+ 9A35 CD ED 95     	call calcula_tercio
 104+ 9A38 FE 01        	cp 1
 105+ 9A3A 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9A3C CD 6C 9A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9A3F 28 26            jr z,9F
 108+ 9A41 38 24            jr c,9F
 109+ 9A43 1E 00        11 ld e,0
 110+ 9A45 18 22            jr 8F
 111+ 9A47 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9A48 28 07        	jr z, 7F
 113+ 9A4A 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9A4C 1E 00         	ld e,0
 115+ 9A4E E1           	pop hl
 116+ 9A4F 18 04        	jr 4F
 117+ 9A51 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9A53 18 15            jr 10F
 119+ 9A55
 120+ 9A55              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9A55              ; _para indicar con E="2" en caso necesario.
 122+ 9A55
 123+ 9A55 E5           4 push hl
 124+ 9A56 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9A57 CD ED 95     	call calcula_tercio
 126+ 9A5A FE 01        	cp 1
 127+ 9A5C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9A5E CD 6C 9A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9A61 28 04            jr z,9F
 130+ 9A63 30 02            jr nc,9F
 131+ 9A65 18 02        	jr 8F
 132+ 9A67 1E 02        9 ld e,2
 133+ 9A69 C1           8 pop bc
 134+ 9A6A E1           10 pop hl
 135+ 9A6B C9           5 ret
 136+ 9A6C
 137+ 9A6C              ; --------------------
 138+ 9A6C              ;
 139+ 9A6C              ; 25/08/22
 140+ 9A6C
 141+ 9A6C CD ED 95     Comprueba_centro call calcula_tercio
 142+ 9A6F 67               ld h,a
 143+ 9A70 08           	ex af,af
 144+ 9A71 FE 02        	cp 2
 145+ 9A73 38 07        	jr c,1F
 146+ 9A75 28 05        	jr z,1F
 147+ 9A77 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9A7A 18 03        	jr 2F
 149+ 9A7C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9A7F 08           2 ex af,af
 151+ 9A80 A7               and a
 152+ 9A81 ED 42            sbc hl,bc
 153+ 9A83 C9               ret
 154+ 9A84
 155+ 9A84              ; *********************************************************************************************************************************************************************************************
 156+ 9A84              ;
 157+ 9A84              ;   16/8/22
 158+ 9A84              ;
 159+ 9A84              ;	Comprueba_limite_vertical
 160+ 9A84              ;
 161+ 9A84              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 9A84              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 9A84              ;
 164+ 9A84
 165+ 9A84 2A FA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 9A87 7D           	ld a,l
 167+ 9A88 E6 1F        	and $1F
 168+ 9A8A 57           	ld d,a
 169+ 9A8B 3A 0E 8C     	ld a,(Limite_vertical)
 170+ 9A8E BA           	cp d 											; Límite - Posición.
 171+ 9A8F 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9A90 3A 09 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9A93 CB 47        	bit 0,a
 174+ 9A95 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 9A97
 176+ 9A97              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 9A97
 178+ 9A97 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 9A98 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9A9A
 181+ 9A9A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9A9A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9A9A
 184+ 9A9A 3A EB 8B         ld a,(Coordenada_X)
 185+ 9A9D 16 0F            ld d,Centro_izquierda
 186+ 9A9F A7               and a
 187+ 9AA0 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 9AA1 28 1E            jr z,3F
 189+ 9AA3 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 9AA5              ;                                                    ; _salimos sin modificar nada.
 191+ 9AA5 18 0E            jr 2F
 192+ 9AA7 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 9AA8 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9AAA
 195+ 9AAA              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9AAA              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9AAA
 198+ 9AAA 3A EB 8B         ld a,(Coordenada_X)
 199+ 9AAD 16 10            ld d,Centro_derecha
 200+ 9AAF A7               and a
 201+ 9AB0 92               sub d
 202+ 9AB1 28 0E            jr z,3F
 203+ 9AB3 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 9AB5              ;                                                    ; _salimos sin modificar nada.
 205+ 9AB5 CB 43        2 bit 0,e
 206+ 9AB7 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9AB9 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9ABA CD 4E 9B         call Modificaccionne
 209+ 9ABD C1           	pop bc
 210+ 9ABE CD 5E 9B         call Inicializacion
 211+ 9AC1 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9AC2
 213+ 9AC2              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9AC2
 215+ 9AC2 C5           4 push bc
 216+ 9AC3 01 F9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 9AC6 0A           	ld a,(bc)
 218+ 9AC7 3D           	dec a
 219+ 9AC8 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9AC9 7D           	ld a,l
 221+ 9ACA 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9ACB CB 47        	bit 0,a
 223+ 9ACD 28 03        	jr z,5F
 224+ 9ACF 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9AD0 18 2E        	jr 7F
 226+ 9AD2
 227+ 9AD2              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9AD2
 229+ 9AD2 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9AD3 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9AD4 3A F7 8B     	ld a,(Ctrl_0)
 232+ 9AD7 CB 4F        	bit 1,a
 233+ 9AD9 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9ADB F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9ADC
 236+ 9ADC              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9ADC
 238+ 9ADC 1C               inc e
 239+ 9ADD 1D               dec e
 240+ 9ADE 20 07            jr nz,12F
 241+ 9AE0 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9AE1 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9AE2 22 FA 8B     	ld (Posicion_actual),hl
 244+ 9AE5 18 44        13 jr 9F
 245+ 9AE7 CB 43        12 bit 0,e
 246+ 9AE9 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9AEB              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9AEB C1           	pop bc
 249+ 9AEC 18 D3        	jr 3B
 250+ 9AEE 80           14 add b
 251+ 9AEF 6F               ld l,a
 252+ 9AF0 22 FA 8B     	ld (Posicion_actual),hl
 253+ 9AF3 CD 4E 9B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9AF6 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9AF8 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9AFA 32 F7 8B         ld (Ctrl_0),a
 257+ 9AFD F1           	pop af
 258+ 9AFE 18 2B        	jr 9F
 259+ 9B00
 260+ 9B00              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9B00
 262+ 9B00 F5           7 push af
 263+ 9B01 3A F7 8B     	ld a,(Ctrl_0)
 264+ 9B04 CB 47        	bit 0,a
 265+ 9B06 20 1D        	jr nz,8F
 266+ 9B08 F1           	pop af
 267+ 9B09
 268+ 9B09              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9B09
 270+ 9B09 1C           	inc e
 271+ 9B0A 1D               dec e
 272+ 9B0B 20 07            jr nz,10F
 273+ 9B0D 90           	sub b
 274+ 9B0E 6F               ld l,a
 275+ 9B0F 22 FA 8B     	ld (Posicion_actual),hl
 276+ 9B12 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9B14              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9B14 CB 43        10 bit 0,e
 279+ 9B16 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9B18              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9B18 C1           	pop bc
 282+ 9B19 18 A6        	jr 3B
 283+ 9B1B 90           16 sub b
 284+ 9B1C 6F               ld l,a
 285+ 9B1D 22 FA 8B     	ld (Posicion_actual),hl
 286+ 9B20 CD 4E 9B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9B23 18 06            jr 9F
 288+ 9B25 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9B27 32 F7 8B         ld (Ctrl_0),a
 290+ 9B2A F1           	pop af
 291+ 9B2B C1           9 pop bc
 292+ 9B2C 1E 00        	ld e,0
 293+ 9B2E CD 5E 9B         call Inicializacion
 294+ 9B31 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9B32 08           	ex af,af
 296+ 9B33 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9B34 18 8B            jr 3B
 298+ 9B36
 299+ 9B36              ; --------------------
 300+ 9B36
 301+ 9B36 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9B38 CD C8 9C     1 call PreviousScan
 303+ 9B3B 10 FB            djnz 1B
 304+ 9B3D 22 FA 8B     	ld (Posicion_actual),hl
 305+ 9B40 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9B41 C9           	ret
 307+ 9B42
 308+ 9B42              ; --------------------
 309+ 9B42
 310+ 9B42 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9B44 CD B9 9C     1 call NextScan
 312+ 9B47 10 FB            djnz 1B
 313+ 9B49 22 FA 8B     	ld (Posicion_actual),hl
 314+ 9B4C AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9B4D C9           	ret
 316+ 9B4E
 317+ 9B4E              ; --------------------
 318+ 9B4E              ;
 319+ 9B4E              ;	22/01/23
 320+ 9B4E              ;
 321+ 9B4E              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9B4E              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9B4E              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9B4E
 325+ 9B4E
 326+ 9B4E              Modificaccionne
 327+ 9B4E
 328+ 9B4E 3A 09 8C     	ld a,(Cuad_objeto)
 329+ 9B51 FE 02        	cp 2
 330+ 9B53 CC 36 9B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9B56 DC 36 9B         call c,Modifica_Pos_actual
 332+ 9B59 C8           	ret z
 333+ 9B5A CD 42 9B         call Modifica_Pos_actual2
 334+ 9B5D C9               ret
 335+ 9B5E
 336+ 9B5E              ; *************************************************************************************************************************************************************************************************
 337+ 9B5E              ;
 338+ 9B5E              ;	13/8/22
 339+ 9B5E              ;
 340+ 9B5E              ;	Inicializacion
 341+ 9B5E              ;
 342+ 9B5E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9B5E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9B5E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9B5E              ;
 346+ 9B5E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9B5E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9B5E              ;	_ desaparece/aparece.
 349+ 9B5E
 350+ 9B5E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9B5E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9B5E              ;
 353+ 9B5E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9B5E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9B5E              ; 		   [E] ="0"
 356+ 9B5E
 357+ 9B5E              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9B5E
 359+ 9B5E CD ED 95     Inicializacion call calcula_tercio
 360+ 9B61 28 36        	jr z,primit
 361+ 9B63 E6 02        	and 2
 362+ 9B65 20 07        	jr nz,segmit
 363+ 9B67 7D           	ld a,l
 364+ 9B68 FE 7F        	cp $7f
 365+ 9B6A 38 2D        	jr c,primit
 366+ 9B6C 28 2B        	jr z,primit
 367+ 9B6E CD D4 9B     segmit call column
 368+ 9B71 38 13        	jr c,tercuad
 369+ 9B73 3E 04        cuarcuad ld a,4
 370+ 9B75 32 09 8C     	ld (Cuad_objeto),a
 371+ 9B78 21 20 48     	ld hl,$4820
 372+ 9B7B 22 0C 8C     	ld (Limite_horizontal),hl
 373+ 9B7E 21 0E 8C     	ld hl,Limite_vertical
 374+ 9B81 36 0D        	ld (hl),$0d
 375+ 9B83 08           	ex af,af
 376+ 9B84 18 3C        	jr 1F
 377+ 9B86              tercuad
 378+ 9B86 3E 03        	ld a,3
 379+ 9B88 32 09 8C     	ld (Cuad_objeto),a
 380+ 9B8B 21 20 48     	ld hl,$4820
 381+ 9B8E 22 0C 8C     	ld (Limite_horizontal),hl
 382+ 9B91 21 0E 8C     	ld hl,Limite_vertical
 383+ 9B94 36 12        	ld (hl),$12
 384+ 9B96 08           	ex af,af
 385+ 9B97 18 29        	jr 1F
 386+ 9B99 CD D4 9B     primit call column
 387+ 9B9C 38 13        	jr c, primcuad
 388+ 9B9E              segcuad
 389+ 9B9E 3E 02        	ld a,2
 390+ 9BA0 32 09 8C     	ld (Cuad_objeto),a
 391+ 9BA3 21 C0 4F     	ld hl,$4fc0
 392+ 9BA6 22 0C 8C     	ld (Limite_horizontal),hl
 393+ 9BA9 21 0E 8C     	ld hl,Limite_vertical
 394+ 9BAC 36 0D        	ld (hl),$0d
 395+ 9BAE 08           	ex af,af
 396+ 9BAF 18 11        	jr 1F
 397+ 9BB1              primcuad
 398+ 9BB1 3E 01        	ld a,1
 399+ 9BB3 32 09 8C     	ld (Cuad_objeto),a
 400+ 9BB6 21 C0 4F     	ld hl,$4fc0
 401+ 9BB9 22 0C 8C     	ld (Limite_horizontal),hl
 402+ 9BBC 21 0E 8C     	ld hl,Limite_vertical
 403+ 9BBF 36 12        	ld (hl),$12
 404+ 9BC1 08           	ex af,af
 405+ 9BC2
 406+ 9BC2 C5           1 push bc
 407+ 9BC3 E5           	push hl
 408+ 9BC4 D5           	push de
 409+ 9BC5
 410+ 9BC5 2A FA 8B     	ld hl,(Posicion_actual)
 411+ 9BC8 CD 0B 96     	call Genera_coordenadas
 412+ 9BCB
 413+ 9BCB D1           	pop de
 414+ 9BCC E1           	pop hl
 415+ 9BCD C1           	pop bc
 416+ 9BCE
 417+ 9BCE 21 F7 8B     	ld hl,Ctrl_0
 418+ 9BD1 CB EE        	set 5,(hl)
 419+ 9BD3 C9           	ret
 420+ 9BD4
 421+ 9BD4              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9BD4
 423+ 9BD4              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9BD4              ;
 425+ 9BD4              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9BD4
 427+ 9BD4 7D           column ld a,l
 428+ 9BD5 E6 1F        	and $1f
 429+ 9BD7 FE 10         	cp $10
 430+ 9BD9 C9            	ret
 431+ 9BDA
 432+ 9BDA              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9BDA              ;
 434+ 9BDA              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9BDA              ;
 436+ 9BDA              ; 14/12/22
 437+ 9BDA              ;
 438+ 9BDA              ;	Modifica: A y BC.
 439+ 9BDA
 440+ 9BDA 3A 09 8C     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9BDD E6 01        	and 1
 442+ 9BDF 28 17        	jr z,1F
 443+ 9BE1
 444+ 9BE1              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9BE1
 446+ 9BE1 3A EB 8B     	ld a,(Coordenada_X)
 447+ 9BE4 47           	ld b,a
 448+ 9BE5 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9BE6 79           	ld a,c
 450+ 9BE7 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9BE8 38 08        	jr c,2F
 452+ 9BEA 47           	ld b,a
 453+ 9BEB 79           	ld a,c
 454+ 9BEC 90           	sub b
 455+ 9BED 32 0A 8C     	ld (Columnas),a
 456+ 9BF0 18 1B        	jr 4F
 457+ 9BF2 79           2 ld a,c
 458+ 9BF3 32 0A 8C     	ld (Columnas),a
 459+ 9BF6 18 15        	jr 4F
 460+ 9BF8
 461+ 9BF8              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9BF8
 463+ 9BF8 3A EB 8B     1 ld a,(Coordenada_X)
 464+ 9BFB 81           	add c
 465+ 9BFC 3D           	dec a
 466+ 9BFD D6 1F        	sub $1f
 467+ 9BFF 38 08        	jr c,3F
 468+ 9C01 47           	ld b,a
 469+ 9C02 79           	ld a,c
 470+ 9C03 90           	sub b
 471+ 9C04 32 0A 8C     	ld (Columnas),a
 472+ 9C07 18 04        	jr 4F
 473+ 9C09 79           3 ld a,c
 474+ 9C0A 32 0A 8C     	ld (Columnas),a
 475+ 9C0D D9           4 exx
 476+ 9C0E 4F           	ld c,a
 477+ 9C0F D9           	exx
 478+ 9C10 C9            ret
 479+ 9C11
 480+ 9C11              ; --------------------------------------------------------------------------------------------------------------
 481+ 9C11              ;
 482+ 9C11              ;	31/01/2025
 483+ 9C11              ;
 484+ 9C11
 485+ 9C11              Calcula_Columnitas
 486+ 9C11
 487+ 9C11 3A 0A 8C     	ld a,(Columnas)
 488+ 9C14 32 0B 8C     	ld (Columnitas),a
 489+ 9C17
 490+ 9C17 2A FA 8B     	ld hl,(Posicion_actual)
 491+ 9C1A 7D           	ld a,l
 492+ 9C1B E6 1F        	and $1f
 493+ 9C1D 28 09        	jr z,Una_columnita
 494+ 9C1F
 495+ 9C1F 3D           	dec a
 496+ 9C20 28 0C        	jr z,Dos_columnitas
 497+ 9C22
 498+ 9C22 3C           	inc a
 499+ 9C23
 500+ 9C23 FE 1E        	cp $1e
 501+ 9C25 D8           	ret c
 502+ 9C26
 503+ 9C26 28 06        	jr z,Dos_columnitas
 504+ 9C28
 505+ 9C28 3E 01        Una_columnita ld a,1
 506+ 9C2A 32 0B 8C     1 ld (Columnitas),a
 507+ 9C2D C9           	ret
 508+ 9C2E
 509+ 9C2E 3E 02        Dos_columnitas ld a,2
 510+ 9C30 18 F8        	jr 1B
 511+ 9C32
 512+ 9C32              ; --------------------------------------------------------------------------------------------------------------------
 513+ 9C32              ;
 514+ 9C32              ;   30/01/25
 515+ 9C32              ;
 516+ 9C32              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 517+ 9C32              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 518+ 9C32              ;
 519+ 9C32              ;	OUTPUT: IX Contienen el puntero de impresión.
 520+ 9C32              ;			HL e IY Contienen (Puntero_objeto).
 521+ 9C32              ;
 522+ 9C32              ;	DESTRUYE: HL,B Y A.
 523+ 9C32
 524+ 9C32              Calcula_puntero_de_impresion
 525+ 9C32
 526+ 9C32 21 32 9C     	ld hl,$
 527+ 9C35
 528+ 9C35
 529+ 9C35 3A 09 8C     	ld a,(Cuad_objeto)
 530+ 9C38 FE 02        	cp 2
 531+ 9C3A 38 28        	jr c,1F
 532+ 9C3C 28 26        	jr z,1F
 533+ 9C3E E6 01        	and 1
 534+ 9C40 28 1D        	jr z,3F
 535+ 9C42
 536+ 9C42              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 537+ 9C42
 538+ 9C42 CD A1 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 539+ 9C45
 540+ 9C45 7D           9 ld a,l
 541+ 9C46 E6 1F        	and $1f
 542+ 9C48 28 4A        	jr z,7F
 543+ 9C4A
 544+ 9C4A FE 02        	cp 2
 545+ 9C4C 20 0C        	jr nz,10F
 546+ 9C4E
 547+ 9C4E              ; Nos encontramos en la Columna 2 de pantalla, hemos reaparecido por la parte izquierda ???
 548+ 9C4E              ; Corrige el fallo de la reentrada de la entidad por la parte izquierda de la pantalla.
 549+ 9C4E
 550+ 9C4E 3A 63 8C     	ld a,(Ctrl_4)
 551+ 9C51 CB 4F        	bit 1,a
 552+ 9C53 28 05        	jr z,10F
 553+ 9C55
 554+ 9C55              ; Bit 1 de (Ctrl_4) a "1" indica que hemos reaparecido por la parte izquierda de la pantalla.
 555+ 9C55
 556+ 9C55 2A EF 8B     	ld hl,(Puntero_de_impresion)
 557+ 9C58 18 3D        	jr 12F
 558+ 9C5A
 559+ 9C5A 2B           10 dec hl
 560+ 9C5B 10 E8        	djnz 9B
 561+ 9C5D 18 35        	jr 7F
 562+ 9C5F
 563+ 9C5F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 564+ 9C5F
 565+ 9C5F 2A FA 8B     3 ld hl,(Posicion_actual)
 566+ 9C62 18 30        	jr 7F
 567+ 9C64
 568+ 9C64 28 24        1 jr z,2F
 569+ 9C66
 570+ 9C66              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 571+ 9C66
 572+ 9C66 CD A1 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 573+ 9C69
 574+ 9C69 7D           4 ld a,l
 575+ 9C6A E6 1F        	and $1f
 576+ 9C6C 28 13        	jr z,6F
 577+ 9C6E
 578+ 9C6E FE 02        	cp 2
 579+ 9C70 20 0C        	jr nz,11F
 580+ 9C72
 581+ 9C72              ; Nos encontramos en la Columna 2 de pantalla, hemos reaparecido por la parte izquierda ???
 582+ 9C72              ; Corrige el fallo de la reentrada de la entidad por la parte izquierda de la pantalla.
 583+ 9C72
 584+ 9C72 3A 63 8C     	ld a,(Ctrl_4)
 585+ 9C75 CB 4F        	bit 1,a
 586+ 9C77 28 05        	jr z,11F
 587+ 9C79
 588+ 9C79              ; Bit 1 de (Ctrl_4) a "1" indica que hemos reaparecido por la parte izquierda de la pantalla.
 589+ 9C79
 590+ 9C79 2A EF 8B     	ld hl,(Puntero_de_impresion)
 591+ 9C7C 18 19        	jr 12F
 592+ 9C7E
 593+ 9C7E 2B           11 dec hl
 594+ 9C7F 10 E8        	djnz 4B
 595+ 9C81 06 0F        6 ld b,15
 596+ 9C83 CD C8 9C     5 call PreviousScan
 597+ 9C86 10 FB        	djnz 5B
 598+ 9C88 18 0A        	jr 7F
 599+ 9C8A
 600+ 9C8A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 601+ 9C8A
 602+ 9C8A CD A1 9C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 603+ 9C8D 06 0F        	ld b,15
 604+ 9C8F CD C8 9C     8 call PreviousScan
 605+ 9C92 10 FB        	djnz 8B
 606+ 9C94
 607+ 9C94 22 EF 8B     7 ld (Puntero_de_impresion),hl
 608+ 9C97
 609+ 9C97 E5           12 push hl
 610+ 9C98 DD E1        	pop ix
 611+ 9C9A
 612+ 9C9A 2A FC 8B     	ld hl,(Puntero_objeto)
 613+ 9C9D E5           	push hl
 614+ 9C9E FD E1        	pop iy
 615+ 9CA0
 616+ 9CA0 C9           	ret
 617+ 9CA1
 618+ 9CA1              ; --------------------------------------------------------------------------------------------------------------------
 619+ 9CA1              ;
 620+ 9CA1              ;	2/1/23
 621+ 9CA1              ;
 622+ 9CA1              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 623+ 9CA1              ;
 624+ 9CA1              ;	Tras esta rutina tenemos:
 625+ 9CA1              ;
 626+ 9CA1              ;	OUTPUT: HL contiene (Posicion_actual).
 627+ 9CA1              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 628+ 9CA1              ;
 629+ 9CA1              ;	DESTRUYE!!!!! HL,B y A.
 630+ 9CA1
 631+ 9CA1 2A FA 8B     Operandos ld hl,(Posicion_actual)
 632+ 9CA4 3A 0A 8C     	ld a,(Columnas)
 633+ 9CA7 3D           	dec a
 634+ 9CA8 20 01        	jr nz,1F
 635+ 9CAA 3C           	inc a
 636+ 9CAB 47           1 ld b,a
 637+ 9CAC C9           	ret
 638+ 9CAD
 639+ 9CAD              ; --------------------------------------------------------------------------------------------------------------------
 640+ 9CAD              ;
 641+ 9CAD              ;	Prepara_draw
 642+ 9CAD              ;
 643+ 9CAD              ;	Es una rutina de carga.
 644+ 9CAD              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 645+ 9CAD              ;
 646+ 9CAD              ;	FUNCIONAMIENTO:
 647+ 9CAD              ;
 648+ 9CAD              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 649+ 9CAD              ;	- LD (Posicion_actual) del objeto en [HL].
 650+ 9CAD              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 651+ 9CAD              ;
 652+ 9CAD              ;	DESTRUYE:
 653+ 9CAD              ;
 654+ 9CAD              ;	Logicamente, BC,HL y E quedan destruidos.
 655+ 9CAD
 656+ 9CAD 21 F8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 657+ 9CB0 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 658+ 9CB1 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 659+ 9CB2 4E           	ld c,(hl)
 660+ 9CB3 2A FA 8B     	ld hl,(Posicion_actual)
 661+ 9CB6 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 662+ 9CB8 C9           	ret
 663+ 9CB9
 664+ 9CB9              ;----------------------------------------------------------------------------------------------------------------
 665+ 9CB9              ;
 666+ 9CB9              ;	5/08/22
 667+ 9CB9              ;
 668+ 9CB9              ;   NextScan.
 669+ 9CB9              ;
 670+ 9CB9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 671+ 9CB9              ;
 672+ 9CB9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 673+ 9CB9              ;
 674+ 9CB9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 675+ 9CB9              ;
 676+ 9CB9              ;       DESTRUIDOS: AF y HL !!!
 677+ 9CB9              ;
 678+ 9CB9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 679+ 9CB9              ;
 680+ 9CB9
 681+ 9CB9 24           NextScan inc h          ; Incrementamos el scanline.
 682+ 9CBA 7C               ld a,h
 683+ 9CBB E6 07            and 7
 684+ 9CBD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 685+ 9CBE
 686+ 9CBE 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 687+ 9CBF C6 20            add a,$20           ; Vamos a comprobarlo...
 688+ 9CC1 6F               ld l,a
 689+ 9CC2 D8               ret c               ; Salimos si se produce el cambio de tercio.
 690+ 9CC3
 691+ 9CC3 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 692+ 9CC4 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 693+ 9CC6 67               ld h,a
 694+ 9CC7 C9               ret
 695+ 9CC8
 696+ 9CC8              ;----------------------------------------------------------------------------------------------------------------
 697+ 9CC8              ;
 698+ 9CC8              ;	5/08/22
 699+ 9CC8              ;
 700+ 9CC8              ;   PreviousScan.
 701+ 9CC8              ;
 702+ 9CC8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 703+ 9CC8              ;
 704+ 9CC8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 705+ 9CC8              ;
 706+ 9CC8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 707+ 9CC8              ;
 708+ 9CC8              ;       DESTRUIDOS: AF y HL !!!
 709+ 9CC8              ;
 710+ 9CC8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 711+ 9CC8              ;
 712+ 9CC8
 713+ 9CC8 7C           PreviousScan ld a,h
 714+ 9CC9 25               dec h               ; Dec H.
 715+ 9CCA E6 07            and 7
 716+ 9CCC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 717+ 9CCD
 718+ 9CCD 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 719+ 9CCE D6 20            sub $20             ; Vamos a comprobarlo...
 720+ 9CD0 6F               ld l,a
 721+ 9CD1 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 722+ 9CD2
 723+ 9CD2 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 724+ 9CD3 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 725+ 9CD5 67               ld h,a
 726+ 9CD6 C9               ret
 727+ 9CD7
 728+ 9CD7
 729+ 9CD7
 730+ 9CD7
 731+ 9CD7
 732+ 9CD7
 733+ 9CD7
 734+ 9CD7
 735+ 9CD7
 736+ 9CD7
 737+ 9CD7
 738+ 9CD7
# file closed: Draw_XOR.asm
2449  9CD7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9CD7
   2+ 9CD7              ; ******************************************************************************************************************************************************************************************
   3+ 9CD7              ;
   4+ 9CD7              ;   20/05/23
   5+ 9CD7              ;
   6+ 9CD7              ;	Recompone_posicion_inicio
   7+ 9CD7              ;
   8+ 9CD7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9CD7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9CD7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9CD7              ;	_ a una u otra rutina.
  12+ 9CD7
  13+ 9CD7              Recompone_posicion_inicio
  14+ 9CD7
  15+ 9CD7              ;;	ld hl,(Posicion_inicio)
  16+ 9CD7              ;	ld a,l
  17+ 9CD7              ;	and $1f
  18+ 9CD7              ;	jr z,1F
  19+ 9CD7
  20+ 9CD7              ;	cp $1f
  21+ 9CD7              ;	jr z,3F
  22+ 9CD7
  23+ 9CD7 21 F6 8B     	ld hl,Ctrl_2
  24+ 9CDA CB C6        	set 0,(hl)
  25+ 9CDC
  26+ 9CDC 2A FC 8B     	ld hl,(Puntero_objeto)
  27+ 9CDF 22 29 8C     	ld (Repone_puntero_objeto),hl
  28+ 9CE2              ;	jr 2F
  29+ 9CE2
  30+ 9CE2              ;3 call Mov_left
  31+ 9CE2              ;	jr 2F
  32+ 9CE2
  33+ 9CE2              ;1 call Mov_right
  34+ 9CE2 21 80 F8     2 ld hl,Sprite_vacio
  35+ 9CE5 22 FC 8B     	ld (Puntero_objeto),hl
  36+ 9CE8
  37+ 9CE8 C9           	ret
  38+ 9CE9
  39+ 9CE9              ; ******************************************************************************************************************************************************************************************
  40+ 9CE9              ;
  41+ 9CE9              ;   27/05/23
  42+ 9CE9              ;
  43+ 9CE9              ;	Mov_down
  44+ 9CE9              ;
  45+ 9CE9              ; 	Mueve el Sprite X px hacia abajo.
  46+ 9CE9              ;
  47+ 9CE9              ;
  48+ 9CE9              Mov_down
  49+ 9CE9
  50+ 9CE9 CD 49 9D     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  51+ 9CEC              ;																	; _ repone (Puntero_objeto).
  52+ 9CEC              ;	ld hl,Ctrl_0
  53+ 9CEC              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9CEC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9CEC              ; 																	; _ en el caso de que no lo haya.
  56+ 9CEC 3A 13 8C     	ld a,(Vel_down)
  57+ 9CEF 47           	ld b,a
  58+ 9CF0 2A FA 8B         ld hl,(Posicion_actual)
  59+ 9CF3 CD ED 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  60+ 9CF6 E6 02        	and 2
  61+ 9CF8 28 17        	jr z,1F
  62+ 9CFA
  63+ 9CFA              ; Nos encontramos en el último tercio de pantalla.
  64+ 9CFA              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  65+ 9CFA
  66+ 9CFA 7C           	ld a,h
  67+ 9CFB FE 57        	cp $57
  68+ 9CFD 20 12        	jr nz,1F
  69+ 9CFF
  70+ 9CFF 7D           	ld a,l
  71+ 9D00 C6 20        	add $20
  72+ 9D02 30 0D        	jr nc,1F
  73+ 9D04
  74+ 9D04              ; ------------------------------
  75+ 9D04              ;
  76+ 9D04              ;	12/01/24
  77+ 9D04
  78+ 9D04              ;	call Reaparece_arriba
  79+ 9D04 CD 0E A0     	call Reinicio
  80+ 9D07
  81+ 9D07              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  82+ 9D07
  83+ 9D07 3A 62 8C     	ld a,(Ctrl_3)
  84+ 9D0A CB CF        	set 1,a
  85+ 9D0C 32 62 8C     	ld (Ctrl_3),a
  86+ 9D0F
  87+ 9D0F 18 08        	jr 3F
  88+ 9D11              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  89+ 9D11              ;															; _a la siguiente entidad como "Entidad_guía".
  90+ 9D11              ; ------------------------------
  91+ 9D11
  92+ 9D11 CD B9 9C     1 call NextScan
  93+ 9D14 22 FA 8B     	ld (Posicion_actual),hl
  94+ 9D17 10 DA            djnz 2B
  95+ 9D19 CD 0B 96     3 call Genera_coordenadas
  96+ 9D1C C9           	ret
  97+ 9D1D
  98+ 9D1D              ; ******************************************************************************************************************************************************************************************
  99+ 9D1D              ;
 100+ 9D1D              ;   27/05/23
 101+ 9D1D              ;
 102+ 9D1D              ;	Mov_up
 103+ 9D1D              ;
 104+ 9D1D              ; 	Mueve el Sprite hacia arriba.
 105+ 9D1D              ;
 106+ 9D1D              ;
 107+ 9D1D              Mov_up
 108+ 9D1D
 109+ 9D1D CD 49 9D     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 110+ 9D20              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 111+ 9D20              ;	ld hl,Ctrl_0
 112+ 9D20              ;	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 113+ 9D20              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 114+ 9D20              ; 																		; _ en el caso de que no lo haya.
 115+ 9D20 3A 12 8C     	ld a,(Vel_up)
 116+ 9D23 47           	ld b,a
 117+ 9D24 2A FA 8B     	ld hl,(Posicion_actual)
 118+ 9D27 CD ED 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 119+ 9D2A A7           	and a
 120+ 9D2B 20 10        	jr nz,1F
 121+ 9D2D
 122+ 9D2D              ; Nos encontramos en el 1er tercio de pantalla.
 123+ 9D2D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 124+ 9D2D
 125+ 9D2D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 126+ 9D2E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 127+ 9D30 20 0B            jr nz,1F
 128+ 9D32 7D               ld a,l
 129+ 9D33 D6 20            sub $20
 130+ 9D35 30 06            jr nc,1F
 131+ 9D37 25               dec h
 132+ 9D38
 133+ 9D38              ; -----------------------------
 134+ 9D38 CD EF 9F         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 135+ 9D3B              ;	call Reinicio
 136+ 9D3B              ; -----------------------------
 137+ 9D3B
 138+ 9D3B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 139+ 9D3D CD C8 9C     1 call PreviousScan
 140+ 9D40 22 FA 8B     	ld (Posicion_actual),hl
 141+ 9D43 10 E2            djnz 3B
 142+ 9D45 CD 0B 96     2 call Genera_coordenadas
 143+ 9D48 C9           	ret
 144+ 9D49
 145+ 9D49              ; -----------------------------
 146+ 9D49              ;
 147+ 9D49              ;	27/5/23
 148+ 9D49              ;
 149+ 9D49              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 150+ 9D49              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 151+ 9D49              ;
 152+ 9D49              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 153+ 9D49              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 154+ 9D49              ;
 155+ 9D49              ;	Modifica: A y (Puntero_objeto).
 156+ 9D49
 157+ 9D49 3A F6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 158+ 9D4C CB 47        	bit 0,a
 159+ 9D4E C8           	ret z
 160+ 9D4F CB 87        	res 0,a
 161+ 9D51 32 F6 8B     	ld (Ctrl_2),a
 162+ 9D54 2A 29 8C     	ld hl,(Repone_puntero_objeto)
 163+ 9D57 22 FC 8B     	ld (Puntero_objeto),hl
 164+ 9D5A C9           	ret
 165+ 9D5B
 166+ 9D5B              ; ******************************************************************************************************************************************************************************************
 167+ 9D5B              ;
 168+ 9D5B              ;	19/10/22
 169+ 9D5B              ;
 170+ 9D5B              ;	Mov_right.
 171+ 9D5B              ;
 172+ 9D5B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 173+ 9D5B              ;
 174+ 9D5B
 175+ 9D5B 3A F7 8B     Mov_right ld a,(Ctrl_0)
 176+ 9D5E CB 77        	bit 6,a
 177+ 9D60 28 06        	jr z,10F 														; Amadeus o Entidad ???
 178+ 9D62
 179+ 9D62 CD 9A 9F     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 180+ 9D65 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 181+ 9D66 18 4F        	jr 8F
 182+ 9D68
 183+ 9D68 3A EB 8B     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 184+ 9D6B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 185+ 9D6D 20 48        	jr nz,8F
 186+ 9D6F
 187+ 9D6F 3A FE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 188+ 9D72 A7           	and a 															; _[3] para continuar con el DESPLZ.
 189+ 9D73 28 42        	jr z,8F
 190+ 9D75
 191+ 9D75              ; ---------- ---------- ----------
 192+ 9D75              ;
 193+ 9D75              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 194+ 9D75
 195+ 9D75 3A 11 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 196+ 9D78 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 197+ 9D7A 28 11        	jr z,1F
 198+ 9D7C 38 06        	jr c,6F
 199+ 9D7E FE 04        	cp 4
 200+ 9D80 28 14        	jr z,7F
 201+ 9D82 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 202+ 9D84
 203+ 9D84              ; ---------- ---------- ----------
 204+ 9D84              ;
 205+ 9D84              ; Perfiles de velocidad
 206+ 9D84              ;
 207+ 9D84
 208+ 9D84 3A FE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 209+ 9D87 FE FE        	cp $fe
 210+ 9D89 38 2C        	jr c,8F
 211+ 9D8B 18 10        	jr 3F
 212+ 9D8D
 213+ 9D8D 3A FE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 214+ 9D90 FE FD        	cp $fd
 215+ 9D92 38 23        	jr c,8F
 216+ 9D94 18 07        	jr 3F
 217+ 9D96
 218+ 9D96 3A FE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 219+ 9D99 FE FB        	cp $fb
 220+ 9D9B 38 1A        	jr c,8F
 221+ 9D9D
 222+ 9D9D              ; ---------- ---------- ----------
 223+ 9D9D
 224+ 9D9D              3
 225+ 9D9D CD D8 9F     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 226+ 9DA0 CD BD 99     	call Draw
 227+ 9DA3
 228+ 9DA3              ; 	debug !!!!!!!!!!!!!!!!!!!
 229+ 9DA3
 230+ 9DA3              ;	Puntero_de_impresion $8bef ..... $0000 ..... $4780
 231+ 9DA3              ;	Columns $8bf9 	  		   ..... 3	   ..... 3
 232+ 9DA3              ;	Posicion_actual $8bfa	   ..... $46c0 ..... $46c0
 233+ 9DA3              ;	CTRL_DESPLZ $8bfe		   ..... $fe   ..... $fe
 234+ 9DA3              ;	Puntero_objeto $8bfc	   ..... $8690 ..... $8690
 235+ 9DA3              ;	Puntero_DESPLZ_der $8c03   ..... $853e ..... $853e
 236+ 9DA3              ;	Puntero_DESPLZ_izq $8c05   ..... $8390 ..... $8390
 237+ 9DA3              ;	Cuad_objeto $8c09		   ..... 2	   ..... 1								; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 238+ 9DA3              ;	Columnas $8c0a			   ..... 1     ..... 1
 239+ 9DA3              ;	Columnitas $8c0b		   ..... 1	   ..... 1
 240+ 9DA3              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df74
 241+ 9DA3
 242+ 9DA3              ;	jr $
 243+ 9DA3
 244+ 9DA3              ;	call Reinicio
 245+ 9DA3
 246+ 9DA3              ; ---------- ---------- ----------
 247+ 9DA3              ;
 248+ 9DA3              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 249+ 9DA3
 250+ 9DA3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 251+ 9DA5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 252+ 9DA6 CD BE 9D     	call DESPLZ_DER
 253+ 9DA9 C1           	pop bc
 254+ 9DAA 10 F9        	djnz 5B
 255+ 9DAC 2A FA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 256+ 9DAF 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 257+ 9DB0 22 FA 8B     	ld (Posicion_actual),hl
 258+ 9DB3 CD 0B 96     	call Genera_coordenadas
 259+ 9DB6 C9           	ret
 260+ 9DB7
 261+ 9DB7              ; ---------- ---------- ---------
 262+ 9DB7
 263+ 9DB7 2A FA 8B     8 ld hl,(Posicion_actual)
 264+ 9DBA CD BE 9D     	call DESPLZ_DER
 265+ 9DBD C9           2 ret
 266+ 9DBE
 267+ 9DBE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 268+ 9DBE              ;
 269+ 9DBE              ;	22/9/22
 270+ 9DBE              ;
 271+ 9DBE
 272+ 9DBE CD CD 9D     DESPLZ_DER call Desplaza_derecha
 273+ 9DC1 CD 1D 9E         call modifica_parametros_1er_DESPLZ_2
 274+ 9DC4 CD 4E 9E         call Ciclo_completo
 275+ 9DC7 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 276+ 9DCA CB FE        	set 7,(hl)
 277+ 9DCC C9           	ret
 278+ 9DCD
 279+ 9DCD              ; ******************************************************************************************************************************************************************************************
 280+ 9DCD              ;
 281+ 9DCD              ;	30/01/25
 282+ 9DCD              ;
 283+ 9DCD              ;	Sitúa (Puntero_objeto) y los punteros de desplazamiento correspondientes: (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq) en función de la velocidad del desplazamiento, (Vel_right).
 284+ 9DCD              ;
 285+ 9DCD              ;	OUTPUT: (Puntero_objeto).
 286+ 9DCD              ;			(Puntero_DESPLZ_der).
 287+ 9DCD              ;			(Puntero_DESPLZ_izq).
 288+ 9DCD
 289+ 9DCD 3A 11 8C     Desplaza_derecha ld a,(Vel_right)
 290+ 9DD0 47           	ld b,a
 291+ 9DD1 2A 03 8C     	ld hl,(Puntero_DESPLZ_der)
 292+ 9DD4 23           1 inc hl
 293+ 9DD5 23           	inc hl
 294+ 9DD6 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 295+ 9DD8 22 03 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 296+ 9DDB CD C6 91     	call Extrae_address
 297+ 9DDE 22 FC 8B     	ld (Puntero_objeto),hl
 298+ 9DE1
 299+ 9DE1              ; Modifica (Puntero_DESPLZ_izq).
 300+ 9DE1
 301+ 9DE1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 302+ 9DE1              ; Cuántos movimientos hemos hecho ??
 303+ 9DE1              ; DE contiene (Puntero_DESPLZ_der).
 304+ 9DE1
 305+ 9DE1 2A FF 8B     7 ld hl,(Indice_Sprite_der)
 306+ 9DE4 EB           	ex de,hl
 307+ 9DE5 A7           	and a
 308+ 9DE6 ED 52        	sbc hl,de
 309+ 9DE8 CB 3D        	srl l
 310+ 9DEA 3E 08        6 ld a,8
 311+ 9DEC 95           	sub l
 312+ 9DED
 313+ 9DED              ;! PROVISIONAL !!!!!!!!!!!!!!!!!
 314+ 9DED
 315+ 9DED CC DB 91     	call z,Inicia_puntero_objeto_der ; Creo que hay que reinicializar punteros.
 316+ 9DF0 C8           	ret z
 317+ 9DF1
 318+ 9DF1              ;! PROVISIONAL !!!!!!!!!!!!!!!!!
 319+ 9DF1
 320+ 9DF1 30 1E        	jr nc,3F
 321+ 9DF3
 322+ 9DF3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 323+ 9DF3              ; B="0".
 324+ 9DF3
 325+ 9DF3 04           4 inc b
 326+ 9DF4 3C           	inc a
 327+ 9DF5 20 FC        	jr nz,4B
 328+ 9DF7
 329+ 9DF7 78           	ld a,b
 330+ 9DF8 08           	ex af,af
 331+ 9DF9 2A FF 8B     	ld hl,(Indice_Sprite_der)
 332+ 9DFC
 333+ 9DFC 23           5 inc hl
 334+ 9DFD 23           	inc hl
 335+ 9DFE 10 FC        	djnz 5B
 336+ 9E00
 337+ 9E00 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 338+ 9E03 CD C6 91     	call Extrae_address
 339+ 9E06 22 FC 8B     	ld (Puntero_objeto),hl
 340+ 9E09
 341+ 9E09              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 342+ 9E09              ; _(Posicion_actual).
 343+ 9E09
 344+ 9E09 21 FA 8B     	ld hl,Posicion_actual
 345+ 9E0C 34           	inc (hl)
 346+ 9E0D 08               ex af,af
 347+ 9E0E 6F           	ld l,a
 348+ 9E0F 18 D9        	jr 6B
 349+ 9E11
 350+ 9E11              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 351+ 9E11
 352+ 9E11 47           3 ld b,a
 353+ 9E12 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 354+ 9E15 23           2 inc hl
 355+ 9E16 23           	inc hl
 356+ 9E17 10 FC        	djnz 2B
 357+ 9E19 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 358+ 9E1C C9           8 ret
 359+ 9E1D
 360+ 9E1D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 361+ 9E1D              ;
 362+ 9E1D              ;	24/7/22
 363+ 9E1D              ;
 364+ 9E1D              ;	modifica_parametros_1er_DESPLZ_2
 365+ 9E1D              ;
 366+ 9E1D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 367+ 9E1D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 368+ 9E1D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 369+ 9E1D
 370+ 9E1D 3A FE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 371+ 9E20 A7           	and a
 372+ 9E21 20 27        	jr nz,1F
 373+ 9E23
 374+ 9E23 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 375+ 9E25 32 FE 8B         ld (CTRL_DESPLZ),a
 376+ 9E28
 377+ 9E28 21 F9 8B     	ld hl,Columns
 378+ 9E2B 34           	inc (hl)
 379+ 9E2C
 380+ 9E2C 3A 09 8C     	ld a,(Cuad_objeto)
 381+ 9E2F E6 01        	and 1
 382+ 9E31 28 17        	jr z,1F
 383+ 9E33
 384+ 9E33              ; Pasamos de "2" a "3" (Columns). Pero si estoy apareciendo por el lado izquierdo de la pantalla, NO PODEMOS incrementar (Posicion_actual).
 385+ 9E33
 386+ 9E33 3A 63 8C     	ld a,(Ctrl_4)
 387+ 9E36 CB 4F        	bit 1,a
 388+ 9E38 20 FE        	jr nz,$
 389+ 9E3A
 390+ 9E3A 20 0E        	jr nz,1F
 391+ 9E3C
 392+ 9E3C
 393+ 9E3C
 394+ 9E3C
 395+ 9E3C 2A FA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 396+ 9E3F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 397+ 9E40 22 FA 8B     	ld (Posicion_actual),hl
 398+ 9E43
 399+ 9E43 CD 0B 96     	call Genera_coordenadas
 400+ 9E46 CD A6 9F     	call Inc_CTRL_DESPLZ
 401+ 9E49 C9           	ret
 402+ 9E4A
 403+ 9E4A CD A6 9F     1 call Inc_CTRL_DESPLZ
 404+ 9E4D C9           2 ret
 405+ 9E4E
 406+ 9E4E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9E4E              ;
 408+ 9E4E              ;	30/01/25
 409+ 9E4E              ;
 410+ 9E4E              ;	Ciclo_completo.
 411+ 9E4E              ;
 412+ 9E4E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 413+ 9E4E              ;
 414+ 9E4E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 415+ 9E4E              ; 	Decrementamos (Columns).
 416+ 9E4E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 417+ 9E4E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 418+ 9E4E
 419+ 9E4E
 420+ 9E4E 3A FE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 421+ 9E51 FE FF        	cp $ff
 422+ 9E53 28 0E        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 423+ 9E55
 424+ 9E55 E6 F0        	and $f0
 425+ 9E57 C0           	ret nz
 426+ 9E58
 427+ 9E58              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 428+ 9E58
 429+ 9E58 3A FE 8B     	ld a,(CTRL_DESPLZ)
 430+ 9E5B 47           	ld b,a
 431+ 9E5C 3E F8        	ld a,$f8
 432+ 9E5E 80           	add b
 433+ 9E5F 32 FE 8B     	ld (CTRL_DESPLZ),a
 434+ 9E62 C9           	ret
 435+ 9E63
 436+ 9E63 21 F9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 437+ 9E66 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 438+ 9E67 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 439+ 9E68 32 FE 8B     	ld (CTRL_DESPLZ),a
 440+ 9E6B
 441+ 9E6B 3A 09 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 442+ 9E6E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 443+ 9E70 28 06        	jr z,2F
 444+ 9E72
 445+ 9E72              ;! Estamos reapareciendo por el lado izquierdo ????????
 446+ 9E72
 447+ 9E72 3A 63 8C     	ld a,(Ctrl_4)
 448+ 9E75 CB 4F        	bit 1,a
 449+ 9E77 C8           	ret z
 450+ 9E78
 451+ 9E78              ;	Si estamos reapareciendo por la izquierda hemos de incrementar (Posicion_actual).
 452+ 9E78
 453+ 9E78              ;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 454+ 9E78
 455+ 9E78 2A FA 8B     2 ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 456+ 9E7B 2C           	inc l
 457+ 9E7C 22 FA 8B     	ld (Posicion_actual),hl
 458+ 9E7F
 459+ 9E7F CD 0B 96     	call Genera_coordenadas
 460+ 9E82
 461+ 9E82 C9           	ret
 462+ 9E83
 463+ 9E83              ; ******************************************************************************************************************************************************************************************
 464+ 9E83              ;
 465+ 9E83              ;	15/02/23
 466+ 9E83              ;
 467+ 9E83              ;	Mov_left.
 468+ 9E83              ;
 469+ 9E83              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 470+ 9E83              ;
 471+ 9E83              Mov_left
 472+ 9E83
 473+ 9E83              ;	ld hl,Ctrl_0
 474+ 9E83              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 475+ 9E83              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 476+ 9E83              ; 																	; _ en el caso de que no lo haya.
 477+ 9E83 3A F7 8B     	ld a,(Ctrl_0)
 478+ 9E86 CB 77        	bit 6,a
 479+ 9E88 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 480+ 9E8A
 481+ 9E8A CD A0 9F     	call Stop_Amadeus_left
 482+ 9E8D C8           	ret z
 483+ 9E8E 20 4A        	jr nz,8F
 484+ 9E90
 485+ 9E90 3A EB 8B     11 ld a,(Coordenada_X)
 486+ 9E93 A7           	and a
 487+ 9E94 20 44        	jr nz,8F
 488+ 9E96
 489+ 9E96 3A FE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 490+ 9E99 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 491+ 9E9A 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 492+ 9E9C
 493+ 9E9C              ; ---------- ---------- ----------
 494+ 9E9C
 495+ 9E9C 3A 10 8C     	ld a,(Vel_left)
 496+ 9E9F FE 02        	cp 2
 497+ 9EA1 28 0F        	jr z,1F
 498+ 9EA3 38 04        	jr c,6F
 499+ 9EA5 FE 04        	cp 4
 500+ 9EA7 28 12        	jr z,7F
 501+ 9EA9
 502+ 9EA9              ; ---------- ---------- ----------
 503+ 9EA9
 504+ 9EA9 3A FE 8B     6 ld a,(CTRL_DESPLZ)
 505+ 9EAC FE F8        	cp $f8
 506+ 9EAE 20 2A        	jr nz,8F
 507+ 9EB0 18 10        	jr 4F
 508+ 9EB2 3A FE 8B     1 ld a,(CTRL_DESPLZ)
 509+ 9EB5 FE F9        	cp $f9
 510+ 9EB7 20 21        	jr nz,8F
 511+ 9EB9 18 07        	jr 4F
 512+ 9EBB 3A FE 8B     7 ld a,(CTRL_DESPLZ)
 513+ 9EBE FE FB        	cp $fb
 514+ 9EC0 20 18        	jr nz,8F
 515+ 9EC2
 516+ 9EC2              ; ---------- ---------- ----------
 517+ 9EC2
 518+ 9EC2              4
 519+ 9EC2 CD C6 9F     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 520+ 9EC5              ;	call Reinicio
 521+ 9EC5
 522+ 9EC5              ; ---------- ---------- ----------
 523+ 9EC5
 524+ 9EC5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 525+ 9EC7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 526+ 9EC8
 527+ 9EC8              ;	ld hl,(Indice_Sprite_izq)
 528+ 9EC8              ;	ld (Puntero_DESPLZ_izq),hl
 529+ 9EC8
 530+ 9EC8 CD E1 9E     	call DESPLZ_IZQ
 531+ 9ECB C1           	pop bc
 532+ 9ECC 10 F9        	djnz 5B
 533+ 9ECE 2A FA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 534+ 9ED1 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 535+ 9ED2 22 FA 8B     	ld (Posicion_actual),hl
 536+ 9ED5 CD 0B 96     	call Genera_coordenadas
 537+ 9ED8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 538+ 9EDA
 539+ 9EDA              ; ---------- ---------- ----------
 540+ 9EDA
 541+ 9EDA              ; Movemos, no hay recolocación.
 542+ 9EDA
 543+ 9EDA 2A FA 8B     8 ld hl,(Posicion_actual)
 544+ 9EDD CD E1 9E     	call DESPLZ_IZQ
 545+ 9EE0 C9           2 ret
 546+ 9EE1
 547+ 9EE1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 548+ 9EE1              ;
 549+ 9EE1              ;	22/9/22
 550+ 9EE1
 551+ 9EE1              DESPLZ_IZQ
 552+ 9EE1
 553+ 9EE1 CD F0 9E     	call Desplaza_izquierda
 554+ 9EE4 CD 3C 9F         call modifica_parametros_1er_DESPLZ
 555+ 9EE7 CD 64 9F     	call Ciclo_completo_2
 556+ 9EEA 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 557+ 9EED CB BE        	res 7,(hl)
 558+ 9EEF C9           	ret
 559+ 9EF0
 560+ 9EF0              Desplaza_izquierda
 561+ 9EF0
 562+ 9EF0 3A 10 8C     	ld a,(Vel_left)
 563+ 9EF3 47           	ld b,a
 564+ 9EF4 2A 05 8C     	ld hl,(Puntero_DESPLZ_izq)
 565+ 9EF7 23           1 inc hl
 566+ 9EF8 23           	inc hl
 567+ 9EF9 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 568+ 9EFB 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 569+ 9EFE CD C6 91     	call Extrae_address
 570+ 9F01 22 FC 8B     	ld (Puntero_objeto),hl
 571+ 9F04
 572+ 9F04              ; Modifica (Puntero_DESPLZ_der).
 573+ 9F04
 574+ 9F04              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 575+ 9F04              ; Cuántos movimientos hemos hecho ??
 576+ 9F04              ; DE contiene (Puntero_DESPLZ_izq).
 577+ 9F04
 578+ 9F04 2A 01 8C     7 ld hl,(Indice_Sprite_izq)
 579+ 9F07 EB           	ex de,hl
 580+ 9F08 A7           	and a
 581+ 9F09 ED 52        	sbc hl,de
 582+ 9F0B CB 3D        	srl l
 583+ 9F0D 3E 08        6 ld a,8
 584+ 9F0F 95           	sub l
 585+ 9F10 30 1E        	jr nc,3F
 586+ 9F12
 587+ 9F12              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 588+ 9F12              ; B="0".
 589+ 9F12
 590+ 9F12 04           4 inc b
 591+ 9F13 3C           	inc a
 592+ 9F14 20 FC        	jr nz,4B
 593+ 9F16 78           	ld a,b
 594+ 9F17 08           	ex af,af
 595+ 9F18 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 596+ 9F1B 23           5 inc hl
 597+ 9F1C 23           	inc hl
 598+ 9F1D 10 FC        	djnz 5B
 599+ 9F1F 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 600+ 9F22 CD C6 91     	call Extrae_address
 601+ 9F25 22 FC 8B     	ld (Puntero_objeto),hl
 602+ 9F28
 603+ 9F28              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 604+ 9F28              ; _(Posicion_actual).
 605+ 9F28
 606+ 9F28 21 FA 8B     	ld hl,Posicion_actual
 607+ 9F2B 35           	dec (hl)
 608+ 9F2C 08           	ex af,af
 609+ 9F2D 6F           	ld l,a
 610+ 9F2E 18 DD        	jr 6B
 611+ 9F30
 612+ 9F30              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 613+ 9F30
 614+ 9F30 47           3 ld b,a
 615+ 9F31 2A FF 8B     	ld hl,(Indice_Sprite_der)
 616+ 9F34 23           2 inc hl
 617+ 9F35 23           	inc hl
 618+ 9F36 10 FC        	djnz 2B
 619+ 9F38 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 620+ 9F3B C9           8 ret
 621+ 9F3C
 622+ 9F3C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 623+ 9F3C              ;
 624+ 9F3C              ;	modifica_parametros_1er_DESPLZ
 625+ 9F3C              ;
 626+ 9F3C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 627+ 9F3C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 628+ 9F3C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 629+ 9F3C
 630+ 9F3C 3A FE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 631+ 9F3F A7           	and a
 632+ 9F40 20 1E        	jr nz,1F
 633+ 9F42 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 634+ 9F43 32 FE 8B         ld (CTRL_DESPLZ),a
 635+ 9F46 21 F9 8B     	ld hl,Columns
 636+ 9F49 34           	inc (hl)
 637+ 9F4A 3A 09 8C     	ld a,(Cuad_objeto)
 638+ 9F4D E6 01        	and 1
 639+ 9F4F 20 0F        	jr nz,1F
 640+ 9F51 2A FA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 641+ 9F54 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 642+ 9F55 22 FA 8B     	ld (Posicion_actual),hl
 643+ 9F58 CD 0B 96     	call Genera_coordenadas
 644+ 9F5B CD B6 9F     	call Dec_CTRL_DESPLZ
 645+ 9F5E 18 03        	jr 2F
 646+ 9F60 CD B6 9F     1 call Dec_CTRL_DESPLZ
 647+ 9F63 C9           2 ret
 648+ 9F64
 649+ 9F64              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 650+ 9F64
 651+ 9F64 3A FE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 652+ 9F67 FE F7        	cp $f7
 653+ 9F69 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 654+ 9F6B 30 2C        	jr nc,3F
 655+ 9F6D
 656+ 9F6D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 657+ 9F6D
 658+ 9F6D 06 00        	ld b,0
 659+ 9F6F 04           4 inc b
 660+ 9F70 3C           	inc a
 661+ 9F71 FE F7        	cp $f7
 662+ 9F73 20 FA        	jr nz,4B
 663+ 9F75 3E FF        	ld a,$ff
 664+ 9F77 90           	sub b
 665+ 9F78 32 FE 8B     	ld (CTRL_DESPLZ),a
 666+ 9F7B 18 1C        	jr 3F
 667+ 9F7D
 668+ 9F7D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 669+ 9F7D
 670+ 9F7D 21 F9 8B     1 ld hl,Columns
 671+ 9F80 35           	dec (hl)
 672+ 9F81 AF           	xor a
 673+ 9F82 32 FE 8B     	ld (CTRL_DESPLZ),a
 674+ 9F85 3A 09 8C     	ld a,(Cuad_objeto)
 675+ 9F88 E6 01        	and 1
 676+ 9F8A 28 0A        	jr z,2F
 677+ 9F8C 2A FA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 678+ 9F8F 2B           	dec hl
 679+ 9F90 22 FA 8B     	ld (Posicion_actual),hl
 680+ 9F93 CD 0B 96     	call Genera_coordenadas
 681+ 9F96
 682+ 9F96              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 683+ 9F96
 684+ 9F96 CD EE 91     2 call Inicia_puntero_objeto_izq
 685+ 9F99 C9           3 ret
 686+ 9F9A
 687+ 9F9A              ; ---------- ---------- ---------- ---------- ---------- ----------
 688+ 9F9A              ;
 689+ 9F9A              ;	19/10/22
 690+ 9F9A              ;
 691+ 9F9A              ;	(cp 29) para un Amadeus de 3 Columns.
 692+ 9F9A              ;	(cp 30)   ""  ""    ""     2 Columns.
 693+ 9F9A
 694+ 9F9A 3A EB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 695+ 9F9D FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 696+ 9F9F C9           	ret
 697+ 9FA0
 698+ 9FA0              ; ---------- ---------- ---------- ---------- ---------- ----------
 699+ 9FA0              ;
 700+ 9FA0              ;	19/10/22
 701+ 9FA0              ;
 702+ 9FA0              ;	(cp 2) para un Amadeus de 3 Columns.
 703+ 9FA0              ;	(cp 1)   ""  ""    ""     2 Columns.
 704+ 9FA0
 705+ 9FA0 3A EB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 706+ 9FA3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 707+ 9FA5 C9           	ret
 708+ 9FA6
 709+ 9FA6              ; ---------- ---------- ---------- ---------- ---------- ----------
 710+ 9FA6              ;
 711+ 9FA6              ;	30/1/25
 712+ 9FA6              ;
 713+ 9FA6              ;	Inc_CTRL_DESPLZ
 714+ 9FA6              ;
 715+ 9FA6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 716+ 9FA6
 717+ 9FA6 21 FE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 718+ 9FA9 3A 11 8C     	ld a,(Vel_right)
 719+ 9FAC A7           	and a
 720+ 9FAD 28 05        	jr z,1F
 721+ 9FAF 47           	ld b,a
 722+ 9FB0
 723+ 9FB0 34           3 inc (hl)
 724+ 9FB1 10 FD        	djnz 3B
 725+ 9FB3 C9           	ret
 726+ 9FB4
 727+ 9FB4 34           1 inc (hl)
 728+ 9FB5 C9           	ret
 729+ 9FB6
 730+ 9FB6              ; ---------- ---------- ---------- ---------- ---------- ----------
 731+ 9FB6              ;
 732+ 9FB6              ;	30/1/25
 733+ 9FB6              ;
 734+ 9FB6              ;	Dec_CTRL_DESPLZ
 735+ 9FB6              ;
 736+ 9FB6              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 737+ 9FB6
 738+ 9FB6 21 FE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 739+ 9FB9 3A 10 8C     	ld a,(Vel_left)
 740+ 9FBC A7           	and a
 741+ 9FBD 28 05        	jr z,1F
 742+ 9FBF 47           	ld b,a
 743+ 9FC0
 744+ 9FC0 35           3 dec (hl)
 745+ 9FC1 10 FD        	djnz 3B
 746+ 9FC3 C9           	ret
 747+ 9FC4
 748+ 9FC4 35           1 dec (hl)
 749+ 9FC5 C9           	ret
 750+ 9FC6
 751+ 9FC6              ; ---------- ---------- ---------- ---------- ---------- ----------
 752+ 9FC6
 753+ 9FC6 2A FA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 754+ 9FC9 01 1F 00     	ld bc,31
 755+ 9FCC A7           	and a
 756+ 9FCD ED 4A        	adc hl,bc
 757+ 9FCF 22 FA 8B     	ld (Posicion_actual),hl
 758+ 9FD2 21 F7 8B     	ld hl,Ctrl_0														; $xxx1
 759+ 9FD5 CB C6        	set 0,(hl)
 760+ 9FD7 C9           	ret
 761+ 9FD8
 762+ 9FD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 763+ 9FD8
 764+ 9FD8              Reaparece_izquierda
 765+ 9FD8
 766+ 9FD8 2A FA 8B     	ld hl,(Posicion_actual)
 767+ 9FDB 01 1F 00     	ld bc,31
 768+ 9FDE A7           	and a
 769+ 9FDF ED 42        	sbc hl,bc
 770+ 9FE1 22 FA 8B     	ld (Posicion_actual),hl 											; $xx1x
 771+ 9FE4
 772+ 9FE4 21 F7 8B     	ld hl,Ctrl_0
 773+ 9FE7 CB CE        	set 1,(hl)
 774+ 9FE9
 775+ 9FE9 21 63 8C     	ld hl,Ctrl_4
 776+ 9FEC CB CE        	set 1,(hl)
 777+ 9FEE
 778+ 9FEE C9           	ret
 779+ 9FEF
 780+ 9FEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 781+ 9FEF
 782+ 9FEF 24           Reaparece_abajo inc h
 783+ 9FF0 01 E0 17     	ld bc,$17e0
 784+ 9FF3 A7           	and a
 785+ 9FF4 ED 4A        	adc hl,bc
 786+ 9FF6 22 FA 8B     	ld (Posicion_actual),hl
 787+ 9FF9
 788+ 9FF9 21 F7 8B     	ld hl,Ctrl_0
 789+ 9FFC CB D6        	set 2,(hl)
 790+ 9FFE
 791+ 9FFE C9           	ret
 792+ 9FFF
 793+ 9FFF              ; ---------- ---------- ---------- ---------- ---------- ----------
 794+ 9FFF
 795+ 9FFF 01 E0 17     Reaparece_arriba ld bc,$17e0
 796+ A002 A7           	and a
 797+ A003 ED 42        	sbc hl,bc
 798+ A005 22 FA 8B     	ld (Posicion_actual),hl
 799+ A008 21 F7 8B     	ld hl,Ctrl_0
 800+ A00B CB DE        	set 3,(hl)
 801+ A00D C9           	ret
 802+ A00E
 803+ A00E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 804+ A00E              ;
 805+ A00E              ;	15/07/23
 806+ A00E
 807+ A00E              Reinicio
 808+ A00E
 809+ A00E              ; Vamos a reiniciar los punteros y variables de movimiento.
 810+ A00E
 811+ A00E AF           	xor a
 812+ A00F 21 20 8C     	ld hl,Puntero_indice_mov_bucle
 813+ A012 CD 30 A0     	call Limpia_contenido_hl
 814+ A015
 815+ A015 21 FA 8B     	ld hl,Posicion_actual
 816+ A018 CD 30 A0     	call Limpia_contenido_hl
 817+ A01B
 818+ A01B CD 76 94     	call Situa_Puntero_indice_mov
 819+ A01E CD 2F A1     	call Inicia_Puntero_mov
 820+ A021
 821+ A021 21 22 8C     	ld hl,Incrementa_puntero
 822+ A024 06 05        	ld b,5
 823+ A026 77           1 ld (hl),a
 824+ A027 23           	inc hl
 825+ A028 10 FC        	djnz 1B
 826+ A02A
 827+ A02A 21 F6 8B     	ld hl,Ctrl_2
 828+ A02D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 829+ A02F
 830+ A02F C9           	ret
 831+ A030
 832+ A030 77           Limpia_contenido_hl	ld (hl),a
 833+ A031 23           	inc hl
 834+ A032 77           	ld (hl),a
 835+ A033 C9           	ret
 836+ A034
 837+ A034              ; ----------------------------------------------------------------------------------------------------------------
 838+ A034              ;
 839+ A034              ;	18/6/24
 840+ A034              ;
 841+ A034
 842+ A034              Amadeus_a_izquierda
 843+ A034
 844+ A034              ;	Actualiza contador de movimientos.
 845+ A034
 846+ A034 21 BD 89     	ld hl,Comm_Amadeus
 847+ A037 35           	dec (hl)
 848+ A038 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 849+ A03A
 850+ A03A 2A BB 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 851+ A03D 2B           	dec hl
 852+ A03E 2B           	dec hl
 853+ A03F 2B           	dec hl
 854+ A040 2B           	dec hl
 855+ A041 22 BB 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 856+ A044
 857+ A044 21 62 8C     	ld hl,Ctrl_3
 858+ A047 CB EE        	set 5,(hl)
 859+ A049
 860+ A049 C9           	ret
 861+ A04A
 862+ A04A 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 863+ A04B C9           	ret
 864+ A04C
 865+ A04C
 866+ A04C              Amadeus_a_derecha
 867+ A04C
 868+ A04C              ;	Actualiza contador de movimientos.
 869+ A04C
 870+ A04C 21 BD 89     	ld hl,Comm_Amadeus
 871+ A04F 34           	inc (hl)
 872+ A050 3E 7A        	ld a,$7a
 873+ A052 BE           	cp (hl)
 874+ A053 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 875+ A055
 876+ A055 2A BB 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 877+ A058 23           	inc hl
 878+ A059 23           	inc hl
 879+ A05A 23           	inc hl
 880+ A05B 23           	inc hl
 881+ A05C 22 BB 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 882+ A05F
 883+ A05F 21 62 8C     	ld hl,Ctrl_3
 884+ A062 CB EE        	set 5,(hl)
 885+ A064 C9           	ret
 886+ A065
 887+ A065 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 888+ A066 C9           	ret
# file closed: Direcciones.asm
2450  A067              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ A067              ; ----- ----- ----- ----- -----
   2+ A067              ;
   3+ A067              ;   28/12/23
   4+ A067
   5+ A067              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
   6+ A067
   7+ A067              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
   8+ A067
   9+ A067              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  10+ A067              ;                               Izquierda_y_subiendo+8 (11)
  11+ A067              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  12+ A067              ;                               Izquierda_y_subiendo+8 (8)
  13+ A067              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  14+ A067              ;                               Izquierda_y_subiendo+8 (8)
  15+ A067              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  16+ A067              ;                               Izquierda_y_subiendo+8 (8)
  17+ A067              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  18+ A067              ;                               Izquierda_y_subiendo+8 (8)
  19+ A067              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  20+ A067              ;                               Izquierda_y_subiendo+8 (7)
  21+ A067              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  22+ A067              ;                               Izquierda_y_subiendo+8 (7)
  23+ A067              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  24+ A067              ;                               Izquierda_y_subiendo+8 (7)
  25+ A067              Movimiento
  26+ A067
  27+ A067              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
  28+ A067
  29+ A067 3A F6 8B         ld a,(Ctrl_2)
  30+ A06A CB 57            bit 2,a
  31+ A06C 20 1B            jr nz, Desplazamiento_iniciado
  32+ A06E
  33+ A06E 2A 1E 8C         ld hl,(Puntero_mov)
  34+ A071 7E               ld a,(hl)
  35+ A072
  36+ A072              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  37+ A072
  38+ A072              Inicia_desplazamiento.
  39+ A072
  40+ A072              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  41+ A072
  42+ A072 CD 65 A1         call Ajusta_velocidad_desplazamiento
  43+ A075
  44+ A075              ; Iniciamos (Repetimos_mov).
  45+ A075
  46+ A075 7E               ld a,(hl)
  47+ A076 E6 0F            and $0f
  48+ A078 32 24 8C         ld (Repetimos_desplazamiento),a
  49+ A07B 32 25 8C         ld (Repetimos_desplazamiento_backup),a
  50+ A07E
  51+ A07E              ; Iniciamos (Cola_de_desplazamiento).
  52+ A07E
  53+ A07E 23               inc hl
  54+ A07F 7E               ld a,(hl)
  55+ A080 32 27 8C         ld (Cola_de_desplazamiento),a
  56+ A083 2B               dec hl
  57+ A084
  58+ A084 21 F6 8B         ld hl,Ctrl_2
  59+ A087 CB D6            set 2,(hl)
  60+ A089
  61+ A089              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  62+ A089              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  63+ A089
  64+ A089              Desplazamiento_iniciado
  65+ A089
  66+ A089 CD 39 A1         call Aplica_desplazamiento
  67+ A08C
  68+ A08C              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  69+ A08C
  70+ A08C 3A 62 8C         ld a,(Ctrl_3)
  71+ A08F CB 4F            bit 1,a
  72+ A091 C0               ret nz
  73+ A092
  74+ A092 21 24 8C     3 ld hl,Repetimos_desplazamiento
  75+ A095 35               dec (hl)
  76+ A096 C0               ret nz
  77+ A097
  78+ A097              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  79+ A097              ; Hay que volver a ejecutar este desplazamiento ???.
  80+ A097              ; Analiza (Cola_de_desplazamiento).
  81+ A097
  82+ A097 3A 27 8C     Cola ld a,(Cola_de_desplazamiento)
  83+ A09A A7               and a
  84+ A09B CC 8E A1         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  85+ A09E 28 30            jr z,Reinicia_el_movimiento
  86+ A0A0
  87+ A0A0 FE FF            cp $ff
  88+ A0A2 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  89+ A0A4
  90+ A0A4 FE FE            cp $fe
  91+ A0A6 CC 13 A1         call z,Fijamos_bucle
  92+ A0A9 28 25            jr z,Reinicia_el_movimiento
  93+ A0AB
  94+ A0AB FE FD            cp $fd
  95+ A0AD 20 11            jr nz,1F
  96+ A0AF
  97+ A0AF              ; ---
  98+ A0AF              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  99+ A0AF
 100+ A0AF 3A F6 8B         ld a,(Ctrl_2)
 101+ A0B2 CB 5F            bit 3,a
 102+ A0B4 20 1A            jr nz,Reinicia_el_movimiento
 103+ A0B6
 104+ A0B6              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 105+ A0B6
 106+ A0B6 21 F6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 107+ A0B9 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 108+ A0BB
 109+ A0BB CD 24 A1         call Inicia_Repetimos_movimiento
 110+ A0BE 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 111+ A0C0              ; ---
 112+ A0C0
 113+ A0C0 FE 01        1 cp 1
 114+ A0C2 CA FD A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 115+ A0C5
 116+ A0C5 3D               dec a
 117+ A0C6 32 27 8C         ld (Cola_de_desplazamiento),a
 118+ A0C9
 119+ A0C9 3A 25 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 120+ A0CC 32 24 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 121+ A0CF              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 122+ A0CF C9               ret
 123+ A0D0
 124+ A0D0              Reinicia_el_movimiento
 125+ A0D0
 126+ A0D0 3A F6 8B         ld a,(Ctrl_2)
 127+ A0D3 CB 5F            bit 3,a
 128+ A0D5 28 1B            jr z,2F
 129+ A0D7
 130+ A0D7              ; (Cola_de_desplazamiento)="254".
 131+ A0D7
 132+ A0D7 21 26 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 133+ A0DA 35               dec (hl)
 134+ A0DB 20 15            jr nz,2F
 135+ A0DD
 136+ A0DD              ; Fin de las repeticiones del último movimiento.
 137+ A0DD
 138+ A0DD 21 F6 8B         ld hl,Ctrl_2
 139+ A0E0 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 140+ A0E2
 141+ A0E2 2A 1E 8C         ld hl,(Puntero_mov)
 142+ A0E5 23               inc hl
 143+ A0E6 23               inc hl
 144+ A0E7 23               inc hl
 145+ A0E8 22 1E 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 146+ A0EB              ;                                                               ; _ para ejecutar su mandato. :)
 147+ A0EB 7E               ld a,(hl)
 148+ A0EC 32 27 8C         ld (Cola_de_desplazamiento),a
 149+ A0EF
 150+ A0EF C3 97 A0         jp Cola
 151+ A0F2
 152+ A0F2 CD 2F A1     2 call Inicia_Puntero_mov
 153+ A0F5
 154+ A0F5 21 F6 8B         ld hl,Ctrl_2
 155+ A0F8 CB 96            res 2,(hl)
 156+ A0FA
 157+ A0FA C3 67 A0         jp Movimiento
 158+ A0FD
 159+ A0FD              Siguiente_desplazamiento
 160+ A0FD
 161+ A0FD              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 162+ A0FD              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 163+ A0FD
 164+ A0FD 21 F6 8B         ld hl,Ctrl_2
 165+ A100 CB 96            res 2,(hl)
 166+ A102
 167+ A102 2A 1E 8C         ld hl,(Puntero_mov)
 168+ A105 23               inc hl
 169+ A106 23               inc hl
 170+ A107 22 1E 8C         ld (Puntero_mov),hl
 171+ A10A
 172+ A10A 7E               ld a,(hl)
 173+ A10B A7               and a
 174+ A10C CC 8E A1         call z,Incrementa_Puntero_indice_mov
 175+ A10F CA D0 A0         jp z,Reinicia_el_movimiento
 176+ A112
 177+ A112 C9               ret
 178+ A113
 179+ A113              ; Subrutinas -----------------------------------------
 180+ A113              ; ---------- --------- --------- ---------- ----------
 181+ A113              ;
 182+ A113              ;   24/07/23
 183+ A113              ;
 184+ A113              ;   Fijamos_bucle
 185+ A113              ;
 186+ A113              ;
 187+ A113
 188+ A113              Fijamos_bucle
 189+ A113
 190+ A113 3A 22 8C         ld a,(Incrementa_puntero)
 191+ A116 3C               inc a
 192+ A117 32 23 8C         ld (Incrementa_puntero_backup),a
 193+ A11A
 194+ A11A CD 8E A1         call Incrementa_Puntero_indice_mov
 195+ A11D 2A 1C 8C         ld hl,(Puntero_indice_mov)
 196+ A120 22 20 8C         ld (Puntero_indice_mov_bucle),hl
 197+ A123 C9               ret
 198+ A124
 199+ A124              ; ---------- --------- --------- ---------- ----------
 200+ A124              ;
 201+ A124              ;   07/7/23
 202+ A124              ;
 203+ A124              ;   Inicia_Repetimos_movimiento
 204+ A124              ;
 205+ A124              ;
 206+ A124
 207+ A124              Inicia_Repetimos_movimiento
 208+ A124
 209+ A124              ; Iniciamos (Repetimos_movimiento).
 210+ A124
 211+ A124 DD 2A 1E 8C      ld ix,(Puntero_mov)
 212+ A128 DD 7E 02         ld a,(ix+2)
 213+ A12B 32 26 8C         ld (Repetimos_movimiento),a
 214+ A12E
 215+ A12E C9               ret
 216+ A12F
 217+ A12F              ; ---------- --------- --------- ---------- ----------
 218+ A12F              ;
 219+ A12F              ;   26/6/23
 220+ A12F              ;
 221+ A12F              ;   Inicia_Puntero_mov
 222+ A12F              ;
 223+ A12F              ;
 224+ A12F
 225+ A12F 2A 1C 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 226+ A132 CD C6 91         call Extrae_address
 227+ A135 22 1E 8C         ld (Puntero_mov),hl
 228+ A138 C9               ret
 229+ A139
 230+ A139              ; ---------- --------- --------- ---------- ----------
 231+ A139              ;
 232+ A139              ;   27/06/23
 233+ A139              ;
 234+ A139              ;   Aplica_movimiento.
 235+ A139
 236+ A139              Aplica_desplazamiento
 237+ A139
 238+ A139              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 239+ A139
 240+ A139 2A 1E 8C         ld hl, (Puntero_mov)
 241+ A13C
 242+ A13C 7E               ld a,(hl)
 243+ A13D E6 F0            and $f0
 244+ A13F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 245+ A140
 246+ A140 CB 7E            bit 7,(hl)
 247+ A142 28 03            jr z,1F
 248+ A144 CD 1D 9D         call Mov_up
 249+ A147 2A 1E 8C     1 ld hl, (Puntero_mov)
 250+ A14A CB 76            bit 6,(hl)
 251+ A14C 28 03            jr z,2F
 252+ A14E CD E9 9C         call Mov_down
 253+ A151
 254+ A151              ; Se ha aplicado reinicio ???
 255+ A151              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 256+ A151
 257+ A151              ;    ld a,(Ctrl_3)
 258+ A151              ;    bit 1,a
 259+ A151              ;    ret nz
 260+ A151
 261+ A151 2A 1E 8C     2 ld hl, (Puntero_mov)
 262+ A154 CB 6E            bit 5,(hl)
 263+ A156 28 03            jr z,3F
 264+ A158 CD 83 9E         call Mov_left
 265+ A15B 2A 1E 8C     3 ld hl, (Puntero_mov)
 266+ A15E CB 66            bit 4,(hl)
 267+ A160 C8               ret z
 268+ A161 CD 5B 9D         call Mov_right
 269+ A164 C9               ret
 270+ A165
 271+ A165              ; ---------- --------- --------- ---------- ----------
 272+ A165              ;
 273+ A165              ;   26/06/23
 274+ A165              ;
 275+ A165              ;   Ajusta_velocidad_desplazamiento.
 276+ A165
 277+ A165              Ajusta_velocidad_desplazamiento
 278+ A165
 279+ A165              ; 1er byte de la cadena de movimiento.
 280+ A165              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 281+ A165
 282+ A165 CD 83 A1         call Extrae_nibble_alto
 283+ A168
 284+ A168 32 12 8C         ld (Vel_up),a
 285+ A16B 79               ld a,c
 286+ A16C E6 0F            and $0f
 287+ A16E 32 13 8C         ld (Vel_down),a
 288+ A171
 289+ A171              ; Saltamos al 2º byte de la cadena de movimiento.
 290+ A171              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 291+ A171
 292+ A171 23               inc hl
 293+ A172 CD 83 A1         call Extrae_nibble_alto
 294+ A175
 295+ A175 32 10 8C         ld (Vel_left),a
 296+ A178 79               ld a,c
 297+ A179 E6 0F            and $0f
 298+ A17B 32 11 8C         ld (Vel_right),a
 299+ A17E
 300+ A17E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 301+ A17E
 302+ A17E 23               inc hl
 303+ A17F 22 1E 8C         ld (Puntero_mov),hl
 304+ A182 C9               ret
 305+ A183
 306+ A183 06 04        Extrae_nibble_alto ld b,4
 307+ A185 7E               ld a,(hl)
 308+ A186 4F               ld c,a
 309+ A187 E6 F0            and $f0
 310+ A189 CB 3F        1 srl a
 311+ A18B 10 FC            djnz 1B
 312+ A18D C9               ret
 313+ A18E
 314+ A18E              ; ---------- --------- --------- ---------- ----------
 315+ A18E              ;
 316+ A18E              ;   5/7/23
 317+ A18E              ;
 318+ A18E              ;   Incrementa_Puntero_indice_mov
 319+ A18E
 320+ A18E              Incrementa_Puntero_indice_mov
 321+ A18E
 322+ A18E 21 22 8C         ld hl,Incrementa_puntero
 323+ A191 34               inc (hl)
 324+ A192
 325+ A192 2A 1C 8C         ld hl,(Puntero_indice_mov)
 326+ A195 01 02 00         ld bc,2
 327+ A198 A7               and a
 328+ A199 09               add hl,bc
 329+ A19A 22 1C 8C         ld (Puntero_indice_mov),hl
 330+ A19D
 331+ A19D 7E               ld a,(hl)
 332+ A19E A7               and a
 333+ A19F
 334+ A19F              ;! STOP. Fin del patrón de movimiento de la entidad.
 335+ A19F
 336+ A19F              ;    jr z,$
 337+ A19F
 338+ A19F              ;! Reinicia el Patrón de movimiento.
 339+ A19F
 340+ A19F CC A4 A1         call z,Inicializa_Puntero_indice_mov_2
 341+ A1A2
 342+ A1A2 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 343+ A1A3
 344+ A1A3 C9               ret
 345+ A1A4
 346+ A1A4              ; ---------- --------- --------- ---------- ----------
 347+ A1A4              ;
 348+ A1A4              ;   15/01/24
 349+ A1A4              ;
 350+ A1A4              ;   Inicializa_Puntero_indice_mov
 351+ A1A4
 352+ A1A4              Inicializa_Puntero_indice_mov_2
 353+ A1A4
 354+ A1A4              ; Existe etiqueta de bucle principal???
 355+ A1A4
 356+ A1A4 2A 20 8C         ld hl,(Puntero_indice_mov_bucle)
 357+ A1A7 24               inc h
 358+ A1A8 25               dec h
 359+ A1A9 28 05            jr z,2F
 360+ A1AB
 361+ A1AB 22 1C 8C         ld (Puntero_indice_mov),hl
 362+ A1AE 18 14            jr 3F
 363+ A1B0
 364+ A1B0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 365+ A1B0
 366+ A1B0 3A 22 8C     2 ld a,(Incrementa_puntero)
 367+ A1B3 47               ld b,a
 368+ A1B4
 369+ A1B4 2A 1C 8C         ld hl,(Puntero_indice_mov)
 370+ A1B7 2B           1 dec hl
 371+ A1B8 2B               dec hl
 372+ A1B9 10 FC            djnz 1B
 373+ A1BB 22 1C 8C         ld (Puntero_indice_mov),hl
 374+ A1BE
 375+ A1BE AF               xor a
 376+ A1BF 32 22 8C         ld (Incrementa_puntero),a
 377+ A1C2 18 06            jr 4F
 378+ A1C4
 379+ A1C4 3A 23 8C     3 ld a,(Incrementa_puntero_backup)
 380+ A1C7 32 22 8C         ld (Incrementa_puntero),a
 381+ A1CA C9           4 ret
 382+ A1CB
 383+ A1CB              ; ----------------------------------------------------------------------
 384+ A1CB              ;
 385+ A1CB              ;   24/11/24
 386+ A1CB              ;
 387+ A1CB              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 388+ A1CB
 389+ A1CB DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 390+ A1CE CD 84 95         call Calcula_salto_en_BC
 391+ A1D1 21 14 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 392+ A1D4 A7               and a
 393+ A1D5 ED 4A            adc hl,bc
 394+ A1D7 C9               ret
 395+ A1D8
 396+ A1D8              ; ----------------------------------------------------------------------
 397+ A1D8              ;
 398+ A1D8              ;   24/11/24
 399+ A1D8              ;
 400+ A1D8              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 401+ A1D8              ;
 402+ A1D8              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 403+ A1D8
 404+ A1D8 4E           Transfiere_datos_de_contadores ld c,(hl)
 405+ A1D9 23               inc hl
 406+ A1DA 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 407+ A1DB DD 71 09         ld (ix+9),c
 408+ A1DE DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 409+ A1E1 C9               ret
 410+ A1E2
# file closed: Movimiento.asm
2451  A1E2              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A1E2              ; --------------------------------------------------------------------------------------
   2+ A1E2              ;
   3+ A1E2              ;   25/10/24
   4+ A1E2              ;
   5+ A1E2
   6+ A1E2              Pinta_disparos_Entidades
   7+ A1E2
   8+ A1E2 ED 73 3A 8C      ld (Stack),sp
   9+ A1E6 ED 7B 4C 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A1EA
  11+ A1EA 3E 02            ld a,2
  12+ A1EC 08               ex af,af
  13+ A1ED
  14+ A1ED 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A1EF              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A1EF              ;                                     _ No encontraría "0".
  17+ A1EF FD E1        4 pop iy
  18+ A1F1 D1               pop de                          ; 1er .db IYL
  19+ A1F2              ;                                   ; 2º  .db IYH
  20+ A1F2              ;                                   ; 3er .db E.
  21+ A1F2              ;   Album vacío ???
  22+ A1F2
  23+ A1F2 FD 7D            ld a,iyl
  24+ A1F4 FD 84            add iyh
  25+ A1F6 83               add e
  26+ A1F7 28 1F            jr z,1F
  27+ A1F9
  28+ A1F9              ;   Imprime album, (contiene datos).
  29+ A1F9
  30+ A1F9 3B               dec sp
  31+ A1FA
  32+ A1FA E1               pop hl                          ; Puntero de impresión en HL.
  33+ A1FB
  34+ A1FB              ; Imprime el 1er scanline del disparo.
  35+ A1FB
  36+ A1FB FD 7D            ld a,iyl
  37+ A1FD AE               xor (hl)
  38+ A1FE 77               ld (hl),a
  39+ A1FF
  40+ A1FF 2C               inc l
  41+ A200
  42+ A200 FD 7C            ld a,iyh
  43+ A202 AE               xor (hl)
  44+ A203 77               ld (hl),a
  45+ A204
  46+ A204 2C               inc l
  47+ A205
  48+ A205 7B               ld a,e
  49+ A206 AE               xor (hl)
  50+ A207 77               ld (hl),a
  51+ A208
  52+ A208              ; Imprime el 2º scanline del disparo.
  53+ A208
  54+ A208 E1               pop hl
  55+ A209
  56+ A209 FD 7D            ld a,iyl
  57+ A20B AE               xor (hl)
  58+ A20C 77               ld (hl),a
  59+ A20D
  60+ A20D 2C               inc l
  61+ A20E
  62+ A20E FD 7C            ld a,iyh
  63+ A210 AE               xor (hl)
  64+ A211 77               ld (hl),a
  65+ A212
  66+ A212 2C               inc l
  67+ A213
  68+ A213 7B               ld a,e
  69+ A214 AE               xor (hl)
  70+ A215 77               ld (hl),a
  71+ A216
  72+ A216 10 D7            djnz 4B
  73+ A218
  74+ A218 08           1 ex af,af
  75+ A219 3D               dec a
  76+ A21A 20 05            jr nz,2F
  77+ A21C
  78+ A21C ED 7B 3A 8C      ld sp,(Stack)
  79+ A220 C9               ret
  80+ A221
  81+ A221 ED 7B 4A 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A225 08               ex af,af
  83+ A226 18 C5            jr 3B
  84+ A228
  85+ A228              ; --------------------------------------------------------------------------------------
  86+ A228              ;
  87+ A228              ;   2/12/24
  88+ A228              ;
  89+ A228
  90+ A228              Motor_de_disparos_entidades
  91+ A228
  92+ A228 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A22B FE 07            cp 7
  94+ A22D C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A22E
  96+ A22E 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A230 21 26 89         ld hl,Indice_de_disparos_entidades
  98+ A233
  99+ A233 CD C6 91     1 call Extrae_address
 100+ A236 1C               inc e
 101+ A237 1C               inc e
 102+ A238 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A23C
 104+ A23C               ; Caja vacía ???
 105+ A23C
 106+ A23C 2D               dec l
 107+ A23D 7E               ld a,(hl)
 108+ A23E A7               and a
 109+ A23F 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A241
 111+ A241              ; --- Trabajamos con caja:
 112+ A241
 113+ A241 2C               inc l
 114+ A242
 115+ A242              ; --- Existe posibilidad de impacto ???
 116+ A242
 117+ A242 3A 8B 8C         ld a,(Shield)
 118+ A245 A7               and a
 119+ A246 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A248
 121+ A248 CB 46            bit 0,(hl)
 122+ A24A C4 8A A2         call nz, Comprueba_impacto_con_Amadeus
 123+ A24D 20 37            jr nz,3F
 124+ A24F
 125+ A24F CD 11 A3     6 call Rota_disparo_si_procede
 126+ A252
 127+ A252              ; ------------------------------------------------------------
 128+ A252
 129+ A252 2D               dec l
 130+ A253 2D               dec l
 131+ A254
 132+ A254 CD C6 91         call Extrae_address
 133+ A257
 134+ A257              ;   (Puntero_de_impresion) del disparo en HL
 135+ A257              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A257
 137+ A257 3A 64 8C         ld a,(Ctrl_5)
 138+ A25A CB 57            bit 2,a
 139+ A25C 28 09            jr z,4F
 140+ A25E
 141+ A25E CB 97            res 2,a
 142+ A260 32 64 8C         ld (Ctrl_5),a
 143+ A263 2C               inc l
 144+ A264 2C               inc l
 145+ A265 18 0C            jr 5F
 146+ A267
 147+ A267 CB 5F        4 bit 3,a
 148+ A269 28 08            jr z,5F
 149+ A26B
 150+ A26B CB 9F            res 3,a
 151+ A26D 32 64 8C         ld (Ctrl_5),a
 152+ A270 2D               dec l
 153+ A271 2D               dec l
 154+ A272 2D               dec l
 155+ A273
 156+ A273              ; ---------------------------------------------------------------------
 157+ A273
 158+ A273              ;! Velocidad del disparo de entidades.
 159+ A273
 160+ A273 CD B9 9C     5 call NextScan
 161+ A276 CD B9 9C         call NextScan
 162+ A279
 163+ A279              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A279
 165+ A279 CD EE A2         call Fin_de_disparo_de_entidad
 166+ A27C
 167+ A27C EB               ex de,hl
 168+ A27D
 169+ A27D 73               ld (hl),e
 170+ A27E 23               inc hl
 171+ A27F 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A280
 173+ A280 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A283 18 02            jr 2F
 175+ A285
 176+ A285 C9               ret
 177+ A286
 178+ A286 EB           3 ex de,hl
 179+ A287 10 AA        2 djnz 1B
 180+ A289
 181+ A289 C9               ret
 182+ A28A
 183+ A28A              ; ------------- ------------- ------------
 184+ A28A              ;
 185+ A28A              ;   1/11/24
 186+ A28A
 187+ A28A              Comprueba_impacto_con_Amadeus
 188+ A28A
 189+ A28A              ;   El disparo se encuentra en zona de Amadeus.
 190+ A28A              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A28A
 192+ A28A              ;   Modificamos registros, así que guardamos ...
 193+ A28A
 194+ A28A C5               push bc
 195+ A28B E5               push hl
 196+ A28C D5               push de
 197+ A28D
 198+ A28D 2D               dec l
 199+ A28E 2D               dec l
 200+ A28F
 201+ A28F CD C6 91         call Extrae_address
 202+ A292
 203+ A292 3A B5 89         ld a,(CX_Amadeus)
 204+ A295 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A296
 206+ A296 7D               ld a,l
 207+ A297 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A299
 209+ A299 06 03            ld b,3
 210+ A29B
 211+ A29B B9           1 cp c
 212+ A29C 28 15            jr z,Coincidencia
 213+ A29E 0C               inc c
 214+ A29F 10 FA            djnz 1B
 215+ A2A1
 216+ A2A1 0D               dec c
 217+ A2A2 0D               dec c
 218+ A2A3 0D               dec c
 219+ A2A4
 220+ A2A4 3C               inc a
 221+ A2A5 B9               cp c
 222+ A2A6 28 0B            jr z,Coincidencia
 223+ A2A8
 224+ A2A8 3C               inc a
 225+ A2A9 B9               cp c
 226+ A2AA 28 07            jr z,Coincidencia
 227+ A2AC
 228+ A2AC D1           2 pop de
 229+ A2AD E1               pop hl
 230+ A2AE C1               pop bc
 231+ A2AF
 232+ A2AF              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A2AF
 234+ A2AF CB 86            res 0,(hl)
 235+ A2B1 AF               xor a                       ; Z before RET.
 236+ A2B2 C9               ret
 237+ A2B3
 238+ A2B3              Coincidencia
 239+ A2B3
 240+ A2B3              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A2B3              ;   Existe posibilidad de impacto.
 242+ A2B3              ;   Vamos a averiguarlo ...
 243+ A2B3
 244+ A2B3 1D               dec e
 245+ A2B4 1D               dec e
 246+ A2B5 1D               dec e
 247+ A2B6
 248+ A2B6              ; DE en Puntero_objeto del disparo.
 249+ A2B6              ; HL en Puntero_de_impresión del disparo.
 250+ A2B6
 251+ A2B6              ; Comparador:
 252+ A2B6
 253+ A2B6 06 03            ld b,3
 254+ A2B8
 255+ A2B8 1A           3 ld a,(de)
 256+ A2B9 4F               ld c,a
 257+ A2BA A6               and (hl)
 258+ A2BB B9               cp c
 259+ A2BC 20 06            jr nz,Amadeus_impactado
 260+ A2BE
 261+ A2BE 2C               inc l
 262+ A2BF 1C               inc e
 263+ A2C0
 264+ A2C0 10 F6            djnz 3B
 265+ A2C2
 266+ A2C2 18 E8            jr 2B
 267+ A2C4
 268+ A2C4              Amadeus_impactado
 269+ A2C4
 270+ A2C4              ; Borramos disparo.
 271+ A2C4
 272+ A2C4              ;   Exclusion.
 273+ A2C4
 274+ A2C4 D1               pop de
 275+ A2C5 E1               pop hl
 276+ A2C6
 277+ A2C6 E5               push hl
 278+ A2C7 D5               push de
 279+ A2C8
 280+ A2C8 CD 7C A3         call Borra_6_bytes
 281+ A2CB
 282+ A2CB 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A2CE 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A2CF
 285+ A2CF              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A2CF
 287+ A2CF 21 B8 89         ld hl,Impacto_Amadeus
 288+ A2D2 36 01            ld (hl),1
 289+ A2D4
 290+ A2D4              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A2D4              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A2D4
 293+ A2D4 3A B9 89         ld a,(p.imp.amadeus)
 294+ A2D7 FE DE            cp $de
 295+ A2D9 20 04            jr nz,1F
 296+ A2DB
 297+ A2DB 3D               dec a
 298+ A2DC 32 B9 89         ld (p.imp.amadeus),a
 299+ A2DF
 300+ A2DF              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A2DF
 302+ A2DF 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A2E2 21 BB 89         ld hl,Pamm_Amadeus
 304+ A2E5
 305+ A2E5 73               ld (hl),e
 306+ A2E6 23               inc hl
 307+ A2E7 72               ld (hl),d
 308+ A2E8
 309+ A2E8 D1               pop de
 310+ A2E9 E1               pop hl
 311+ A2EA C1               pop bc
 312+ A2EB
 313+ A2EB AF               xor a
 314+ A2EC 3C               inc a               ; NZ before RET.
 315+ A2ED C9               ret
 316+ A2EE
 317+ A2EE              ; ------------- ------------- ------------
 318+ A2EE              ;
 319+ A2EE              ;   31/10/24
 320+ A2EE
 321+ A2EE              Fin_de_disparo_de_entidad
 322+ A2EE
 323+ A2EE              ; Estamos en zona de Amadeus ??
 324+ A2EE
 325+ A2EE 7C               ld a,h
 326+ A2EF FE 54            cp $54
 327+ A2F1 38 0D            jr c,1F
 328+ A2F3
 329+ A2F3 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A2F4
 331+ A2F4 5D               ld e,l
 332+ A2F5 54               ld d,h
 333+ A2F6
 334+ A2F6 21 E0 57         ld hl,$57e0
 335+ A2F9 ED 52            sbc hl,de
 336+ A2FB
 337+ A2FB 38 6F            jr c,Elimina_disparo_entidad
 338+ A2FD
 339+ A2FD 6B               ld l,e
 340+ A2FE 62               ld h,d
 341+ A2FF
 342+ A2FF D1               pop de
 343+ A300
 344+ A300 7C           1 ld a,h
 345+ A301 FE 50            cp $50
 346+ A303 D8               ret c
 347+ A304
 348+ A304 7D               ld a,l
 349+ A305 FE C0            cp $c0
 350+ A307 D8               ret c
 351+ A308
 352+ A308              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A308              ; Así podremos comprobar si hay colisión más adelante.
 354+ A308
 355+ A308 1C               inc e
 356+ A309 1C               inc e
 357+ A30A
 358+ A30A EB               ex de,hl
 359+ A30B CB C6            set 0,(hl)
 360+ A30D EB               ex de,hl
 361+ A30E
 362+ A30E 1D               dec e
 363+ A30F 1D               dec e
 364+ A310
 365+ A310 C9               ret
 366+ A311
 367+ A311              ; ----------------------------------------------------------
 368+ A311              ;
 369+ A311              ;   08/10/24
 370+ A311
 371+ A311              ;   Estructura de un disparo de entidades.
 372+ A311
 373+ A311              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A311              ; 	defw 0											; Puntero de impresión.
 375+ A311              ;	defw 0											; Control.
 376+ A311
 377+ A311              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A311              ;   _de la entidad en el momento de disparar.
 379+ A311
 380+ A311              ;   El byte alto muestra la siguiente información:
 381+ A311              ;
 382+ A311              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A311              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A311              ;
 385+ A311              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A311              ;
 387+ A311              ;                        10xx ..... Izquierda.
 388+ A311              ;                        01xx ..... Derecha.
 389+ A311              ;                        00xx ..... Recto.
 390+ A311
 391+ A311              Rota_disparo_si_procede
 392+ A311
 393+ A311              ;   Nos situamos en el byte alto de (Control).
 394+ A311
 395+ A311 CB 76            bit 6,(hl)
 396+ A313 20 2D            jr nz,Rota_a_derecha
 397+ A315 CB 7E            bit 7,(hl)
 398+ A317 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A318
 400+ A318              Rota_a_izq
 401+ A318
 402+ A318 E5               push hl
 403+ A319
 404+ A319 7D               ld a,l
 405+ A31A D6 05            sub 5
 406+ A31C 6F               ld l,a
 407+ A31D
 408+ A31D E5               push hl
 409+ A31E FD E1            pop iy
 410+ A320
 411+ A320 A7               and a
 412+ A321
 413+ A321 FD CB 02 16      rl (iy+02)
 414+ A325 FD CB 01 16      rl (iy+01)
 415+ A329 FD CB 00 16      rl (iy+00)
 416+ A32D
 417+ A32D 30 3B            jr nc,Exit
 418+ A32F
 419+ A32F              ; Desplazamiento completo hasta Carry.
 420+ A32F              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A32F
 422+ A32F FD 36 02 03      ld (iy+02),$03
 423+ A333 FD 36 01 00      ld (iy+01),$00
 424+ A337 FD 36 00 00      ld (iy+00),$00
 425+ A33B
 426+ A33B 21 64 8C         ld hl,Ctrl_5
 427+ A33E CB DE            set 3,(hl)
 428+ A340
 429+ A340 18 28            jr Exit
 430+ A342
 431+ A342              Rota_a_derecha
 432+ A342
 433+ A342 E5               push hl
 434+ A343
 435+ A343 7D               ld a,l
 436+ A344 D6 05            sub 5
 437+ A346 6F               ld l,a
 438+ A347
 439+ A347 E5               push hl
 440+ A348 FD E1            pop iy
 441+ A34A
 442+ A34A A7               and a
 443+ A34B
 444+ A34B FD CB 00 1E      rr (iy+00)
 445+ A34F FD CB 01 1E      rr (iy+01)
 446+ A353 FD CB 02 1E      rr (iy+02)
 447+ A357
 448+ A357 30 11            jr nc,Exit
 449+ A359
 450+ A359              ; Desplazamiento completo hasta Carry.
 451+ A359              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A359
 453+ A359 FD 36 00 01      ld (iy+00),$01
 454+ A35D FD 36 01 80      ld (iy+01),$80
 455+ A361 FD 36 02 00      ld (iy+02),$00
 456+ A365
 457+ A365 21 64 8C         ld hl,Ctrl_5
 458+ A368 CB D6            set 2,(hl)
 459+ A36A
 460+ A36A E1           Exit pop hl
 461+ A36B C9               ret
 462+ A36C
 463+ A36C              ; ------------ ----------- ------------
 464+ A36C              ;
 465+ A36C              ;   25/9/24
 466+ A36C
 467+ A36C              Elimina_disparo_entidad
 468+ A36C
 469+ A36C 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A36F 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A370
 472+ A370 E1               pop hl
 473+ A371 E5               push hl
 474+ A372
 475+ A372 2C               inc l
 476+ A373 2C               inc l
 477+ A374
 478+ A374 CD 7C A3         call Borra_6_bytes
 479+ A377
 480+ A377 D1               pop de
 481+ A378
 482+ A378 21 00 00         ld hl,0
 483+ A37B
 484+ A37B C9               ret
 485+ A37C
 486+ A37C              ; ----- ----- ----- ----- -----
 487+ A37C
 488+ A37C              Borra_6_bytes
 489+ A37C
 490+ A37C 16 06            ld d,6                                                    ; Contador
 491+ A37E AF               xor a                                                     ; Borrador
 492+ A37F 77           1 ld (hl),a
 493+ A380 2D               dec l
 494+ A381 15               dec d
 495+ A382 20 FB            jr nz,1B
 496+ A384
 497+ A384 C9               ret
 498+ A385
 499+ A385              ; --------------------------------------------------------------------------------------
 500+ A385              ;
 501+ A385              ;   12/10/24
 502+ A385              ;
 503+ A385
 504+ A385              Genera_datos_de_impresion_disparos_Entidades
 505+ A385
 506+ A385 3E 07            ld a,7
 507+ A387 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A388
 509+ A388              ; ---------------
 510+ A388
 511+ A388              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A388
 513+ A388 21 26 89          ld hl,Indice_de_disparos_entidades
 514+ A38B
 515+ A38B CD C6 91     1 call Extrae_address
 516+ A38E
 517+ A38E 13               inc de
 518+ A38F 13               inc de
 519+ A390
 520+ A390 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A394
 522+ A394 2D               dec l
 523+ A395 7E               ld a,(hl)
 524+ A396 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A397 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A399
 527+ A399              ; ----- ----- ----- -----
 528+ A399
 529+ A399 2D               dec l
 530+ A39A CD C6 91         call Extrae_address
 531+ A39D E5               push hl
 532+ A39E
 533+ A39E 1D               dec e
 534+ A39F
 535+ A39F EB               ex de,hl
 536+ A3A0
 537+ A3A0 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A3A1 2D               dec l
 539+ A3A2 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A3A3 2D               dec l
 541+ A3A4 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A3A5
 543+ A3A5 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A3A6
 545+ A3A6              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A3A6
 547+ A3A6 FD 2A 4E 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A3AA FD 73 00         ld (iy+0),e
 549+ A3AD FD 70 01         ld (iy+1),b
 550+ A3B0 FD 71 02         ld (iy+2),c
 551+ A3B3
 552+ A3B3 FD 75 03         ld (iy+3),l
 553+ A3B6 FD 74 04         ld (iy+4),h
 554+ A3B9
 555+ A3B9 CD B9 9C         call NextScan
 556+ A3BC
 557+ A3BC FD 75 05         ld (iy+5),l
 558+ A3BF FD 74 06         ld (iy+6),h
 559+ A3C2
 560+ A3C2 FD E5            push iy
 561+ A3C4 E1               pop hl
 562+ A3C5
 563+ A3C5 3E 07            ld a,7
 564+ A3C7 85               add l
 565+ A3C8 6F               ld l,a
 566+ A3C9
 567+ A3C9 22 4E 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A3CC
 569+ A3CC              ; ----- ----- ----- -----
 570+ A3CC
 571+ A3CC              Situa_en_siguiente_caja
 572+ A3CC
 573+ A3CC 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A3CD 3D               dec a
 575+ A3CE C8               ret z
 576+ A3CF
 577+ A3CF 08               ex af,af
 578+ A3D0 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A3D3 18 B6            jr 1B
 580+ A3D5
 581+ A3D5              ; --------------------------------------------------------------------------------------
 582+ A3D5              ;
 583+ A3D5              ;   12/10/24
 584+ A3D5              ;
 585+ A3D5
 586+ A3D5              Genera_disparo_de_entidad_maldosa
 587+ A3D5
 588+ A3D5              ;   Estructura de un disparo de entidades.
 589+ A3D5
 590+ A3D5              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A3D5              ; 	defw 0											; Puntero de impresión.
 592+ A3D5              ;	defw 0											; Control.
 593+ A3D5
 594+ A3D5              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A3D5              ;   _de la entidad en el momento de disparar.
 596+ A3D5
 597+ A3D5              ;   El byte de control muestra la siguiente información:
 598+ A3D5
 599+ A3D5              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A3D5              ;
 601+ A3D5              ;                        10xx ..... Izquierda.
 602+ A3D5              ;                        01xx ..... Derecha.
 603+ A3D5              ;                        00xx ..... Recto.
 604+ A3D5
 605+ A3D5              ;*  Exclusiones.
 606+ A3D5
 607+ A3D5              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A3D5              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A3D5
 610+ A3D5 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A3D8 A7               and a
 612+ A3D9 C8               ret z
 613+ A3DA
 614+ A3DA 3A EC 8B         ld a,(Coordenada_y)
 615+ A3DD A7               and a
 616+ A3DE C8               ret z
 617+ A3DF
 618+ A3DF 3D               dec a
 619+ A3E0 C8               ret z
 620+ A3E1
 621+ A3E1 FE 10            cp 16
 622+ A3E3 D0               ret nc
 623+ A3E4
 624+ A3E4              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A3E4              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A3E4              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A3E4
 628+ A3E4 21 54 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A3E7 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A3E8
 631+ A3E8              ;   Decrementa el numero de disparos de entidades.
 632+ A3E8
 633+ A3E8 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A3EB 35               dec (hl)
 635+ A3EC
 636+ A3EC 21 26 89         ld hl,Indice_de_disparos_entidades
 637+ A3EF
 638+ A3EF CD C6 91     1 call Extrae_address
 639+ A3F2
 640+ A3F2 13               inc de
 641+ A3F3 13               inc de
 642+ A3F4
 643+ A3F4 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A3F8
 645+ A3F8              ;   Comprobamos si la caja está vacía.
 646+ A3F8
 647+ A3F8 2D               dec l
 648+ A3F9 7E               ld a,(hl)
 649+ A3FA A7               and a
 650+ A3FB 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A3FD 2C               inc l
 652+ A3FE
 653+ A3FE              ;   Caja vacía, vamos a generar un disparo.
 654+ A3FE              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A3FE
 656+ A3FE CD 1F A4         call Genera_byte_inclinacion
 657+ A401
 658+ A401 7E               ld a,(hl)
 659+ A402 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A403
 661+ A403 2D               dec l
 662+ A404
 663+ A404 CD 3B A4         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A407
 665+ A407 70               ld (hl),b
 666+ A408 2D               dec l
 667+ A409 71               ld (hl),c
 668+ A40A
 669+ A40A 2D               dec l
 670+ A40B
 671+ A40B              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A40B
 673+ A40B FD 7E 02         ld a,(iy+02)
 674+ A40E 77               ld (hl),a
 675+ A40F 2D               dec l
 676+ A410
 677+ A410 FD 7E 01         ld a,(iy+01)
 678+ A413 77               ld (hl),a
 679+ A414 2D               dec l
 680+ A415
 681+ A415 FD 7E 00         ld a,(iy+00)
 682+ A418 77               ld (hl),a
 683+ A419
 684+ A419 C9               ret
 685+ A41A
 686+ A41A              ;   --- --- ---
 687+ A41A
 688+ A41A              Situa_en_siguiente_disparo
 689+ A41A
 690+ A41A 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A41D 18 D0            jr 1B
 692+ A41F
 693+ A41F              ; --------------------------------------------------------------------------------------
 694+ A41F              ;
 695+ A41F              ;   09/10/24
 696+ A41F              ;
 697+ A41F
 698+ A41F              Genera_byte_inclinacion
 699+ A41F
 700+ A41F              ; Determina tendencia del disparo.
 701+ A41F
 702+ A41F 3A B5 89         ld a,(CX_Amadeus)
 703+ A422 47               ld b,a
 704+ A423 3A EB 8B         ld a,(Coordenada_X)
 705+ A426 90               sub b
 706+ A427 38 07            jr c,Disparo_a_derecha
 707+ A429
 708+ A429 FE 06        Disparo_a_izquierda cp 6
 709+ A42B
 710+ A42B D8               ret c
 711+ A42C C8               ret z
 712+ A42D
 713+ A42D CB FE            set 7,(hl)
 714+ A42F C9               ret
 715+ A430
 716+ A430 47           Disparo_a_derecha ld b,a
 717+ A431 3E FF            ld a,$ff
 718+ A433 90               sub b
 719+ A434
 720+ A434 FE 05            cp 5
 721+ A436
 722+ A436 D8               ret c
 723+ A437 C8               ret z
 724+ A438
 725+ A438 CB F6            set 6,(hl)
 726+ A43A C9               ret
 727+ A43B
 728+ A43B              ; --------------------------------------------------------------------------------------
 729+ A43B              ;
 730+ A43B              ;   09/10/24
 731+ A43B              ;
 732+ A43B
 733+ A43B              Modifica_puntero_de_impresion
 734+ A43B
 735+ A43B              ;   Puntero de impresión del disparo en BC.
 736+ A43B
 737+ A43B E5               push hl
 738+ A43C
 739+ A43C 2A 67 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A43F CD B9 9C         call NextScan
 741+ A442
 742+ A442 4D               ld c,l
 743+ A443 44               ld b,h
 744+ A444
 745+ A444 E1               pop hl
 746+ A445
 747+ A445 08               ex af,af
 748+ A446 CB 77            bit 6,a
 749+ A448 28 06            jr z,1F
 750+ A44A
 751+ A44A FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A44E 0C               inc c
 753+ A44F C9               ret
 754+ A450
 755+ A450 CB 7F        1 bit 7,a
 756+ A452 28 F6            jr z,2B
 757+ A454
 758+ A454 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A458 0D               dec c
 760+ A459
 761+ A459 C9               ret
 762+ A45A
 763+ A45A              ; --------------------------------------------------------------------------------------
 764+ A45A              ;
 765+ A45A              ;   28/11/24
 766+ A45A              ;
 767+ A45A
 768+ A45A              Compara_con_coordenadas_de_disparo
 769+ A45A
 770+ A45A DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A45D 47               ld b,a
 772+ A45E 3A 6C 8C         ld a,(Coordenadas_disparo_certero)
 773+ A461 90               sub b
 774+ A462
 775+ A462              ; A = "0" ok
 776+ A462              ; A = "1" ok
 777+ A462
 778+ A462 28 08            jr z,Comprueba_coordenada_X
 779+ A464 3D               dec a
 780+ A465 28 05            jr z,Comprueba_coordenada_X
 781+ A467
 782+ A467              ; A = "$ff" ok
 783+ A467
 784+ A467 FE FE            cp $fe
 785+ A469 28 01            jr z,Comprueba_coordenada_X
 786+ A46B
 787+ A46B C9               ret
 788+ A46C
 789+ A46C              Comprueba_coordenada_X
 790+ A46C
 791+ A46C DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A46F 47               ld b,a
 793+ A470 21 6D 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A473 7E               ld a,(hl)
 795+ A474 90               sub b
 796+ A475
 797+ A475              ; A = "0" ok
 798+ A475              ; A = "1" ok
 799+ A475
 800+ A475 28 09            jr z,Activa_Impacto_en_entidad
 801+ A477 3D               dec a
 802+ A478 28 06            jr z,Activa_Impacto_en_entidad
 803+ A47A
 804+ A47A              ; A = "2" ok
 805+ A47A
 806+ A47A 3D               dec a
 807+ A47B 28 03            jr z,Activa_Impacto_en_entidad
 808+ A47D
 809+ A47D              ; A = "$ff"
 810+ A47D
 811+ A47D FE FD            cp $fd
 812+ A47F C0               ret nz
 813+ A480
 814+ A480              Activa_Impacto_en_entidad
 815+ A480
 816+ A480              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A480
 818+ A480 3E 02            ld a,2
 819+ A482 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A485
 821+ A485              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A485
 823+ A485 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A488
 825+ A488 DD 73 07         ld (ix+7),e
 826+ A48B DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A48E
 828+ A48E              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A48E
 830+ A48E 21 69 8C         ld hl,Impacto2
 831+ A491 CB 9E            res 3,(hl)
 832+ A493
 833+ A493 C9               ret
 834+ A494
 835+ A494              ; --------------------------------------------------------------------------------------
 836+ A494              ;
 837+ A494              ;   13/10/24
 838+ A494              ;
 839+ A494
 840+ A494              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A494
 842+ A494              Limpia_album_de_pintado_disparos_Amadeus
 843+ A494
 844+ A494 2A 46 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A497 06 06            ld b,6
 846+ A499 AF               xor a
 847+ A49A 77           1 ld (hl),a
 848+ A49B 2C               inc l
 849+ A49C 10 FC            djnz 1B
 850+ A49E
 851+ A49E C9               ret
 852+ A49F
 853+ A49F              ; --------------------------------------------------------------------------------------
 854+ A49F              ;
 855+ A49F              ;   29/09/24
 856+ A49F              ;
 857+ A49F
 858+ A49F              Calcula_bytes_pintado_disparos
 859+ A49F
 860+ A49F 2A 4A 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A4A2 45               ld b,l
 862+ A4A3 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A4A6 7D               ld a,l
 864+ A4A7
 865+ A4A7 90               sub b
 866+ A4A8 32 50 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A4AB
 868+ A4AB C9               ret
 869+ A4AC
 870+ A4AC              ; --------------------------------------------------------------------------------------
 871+ A4AC              ;
 872+ A4AC              ;   26/10/24
 873+ A4AC              ;
 874+ A4AC              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A4AC              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A4AC              ;   _disparos que el álbum del FRAME actual).
 877+ A4AC
 878+ A4AC              Limpia_album_de_pintado_disparos_entidades
 879+ A4AC
 880+ A4AC 21 51 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A4AF 7E               ld a,(hl)
 882+ A4B0 2D               dec l
 883+ A4B1 46               ld b,(hl)
 884+ A4B2 90               sub b
 885+ A4B3
 886+ A4B3 D8               ret c
 887+ A4B4 C8               ret z
 888+ A4B5
 889+ A4B5 F5               push af
 890+ A4B6 80               add b
 891+ A4B7 77               ld (hl),a
 892+ A4B8 F1               pop af
 893+ A4B9
 894+ A4B9              ; Clean.
 895+ A4B9
 896+ A4B9 47           2 ld b,a
 897+ A4BA AF               xor a
 898+ A4BB 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A4BE 77           1 ld (hl),a
 900+ A4BF 23               inc hl
 901+ A4C0 10 FC            djnz 1B
 902+ A4C2
 903+ A4C2 C9               ret
 904+ A4C3
 905+ A4C3              ; --------------------------------------------------------------------------------------
 906+ A4C3              ;
 907+ A4C3              ;   29/09/24
 908+ A4C3              ;
 909+ A4C3
 910+ A4C3              Motor_Disparos_Amadeus
 911+ A4C3
 912+ A4C3 21 23 89         ld hl,Disparo_Amad+1
 913+ A4C6
 914+ A4C6 34               inc (hl)
 915+ A4C7 35               dec (hl)
 916+ A4C8
 917+ A4C8 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A4C9
 919+ A4C9              ;   Esta caja contiene un disparo.
 920+ A4C9
 921+ A4C9 CD D0 A4         call Consulta_Impacto
 922+ A4CC CC E9 A4         call z,Mueve_disparo_Amadeus
 923+ A4CF
 924+ A4CF C9               ret
 925+ A4D0
 926+ A4D0              ; ----------------------
 927+ A4D0              ;
 928+ A4D0              ;
 929+ A4D0              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A4D0              ;
 931+ A4D0              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A4D0
 933+ A4D0
 934+ A4D0              Consulta_Impacto
 935+ A4D0
 936+ A4D0              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A4D0              ;   _sea lo más coherente posible.
 938+ A4D0
 939+ A4D0 E5               push hl
 940+ A4D1 2B               dec hl
 941+ A4D2 CD C5 A5         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A4D5 E1               pop hl
 943+ A4D6 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A4D7
 945+ A4D7 C8               ret z
 946+ A4D8
 947+ A4D8 3A 69 8C         ld a,(Impacto2)
 948+ A4DB CB DF            set 3,a
 949+ A4DD 32 69 8C         ld (Impacto2),a
 950+ A4E0
 951+ A4E0 E5               push hl
 952+ A4E1 CD B2 A5         call Genera_coordenadas_de_disparo_Amadeus
 953+ A4E4 E1               pop hl
 954+ A4E5 CD 02 A5         call Elimina_disparo_Amadeus
 955+ A4E8
 956+ A4E8 C9               ret
 957+ A4E9
 958+ A4E9              ; ----------------------
 959+ A4E9              ;
 960+ A4E9              ;
 961+ A4E9              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A4E9
 963+ A4E9              Mueve_disparo_Amadeus
 964+ A4E9
 965+ A4E9 CD C6 91         call Extrae_address
 966+ A4EC
 967+ A4EC CD C8 9C         call PreviousScan
 968+ A4EF CD C8 9C         call PreviousScan
 969+ A4F2 CD C8 9C         call PreviousScan
 970+ A4F5 CD C8 9C         call PreviousScan
 971+ A4F8
 972+ A4F8              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A4F8
 974+ A4F8 7C               ld a,h
 975+ A4F9 D6 40            sub $40
 976+ A4FB EB               ex de,hl
 977+ A4FC 38 04            jr c,Elimina_disparo_Amadeus
 978+ A4FE
 979+ A4FE               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A4FE
 981+ A4FE 73               ld (hl),e
 982+ A4FF 23               inc hl
 983+ A500 72               ld (hl),d
 984+ A501
 985+ A501 C9               ret
 986+ A502
 987+ A502              ; ----------------------
 988+ A502              ;
 989+ A502              ;   29/9/24
 990+ A502
 991+ A502              Elimina_disparo_Amadeus
 992+ A502
 993+ A502              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A502              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A502
 996+ A502              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A502              ;   	defw 0											; Puntero de impresión.
 998+ A502
 999+ A502 2B               dec hl
1000+ A503 2B               dec hl
1001+ A504
1002+ A504 AF               xor a
1003+ A505 77               ld (hl),a
1004+ A506 23               inc hl
1005+ A507 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A508
1007+ A508 23               inc hl
1008+ A509 77               ld (hl),a
1009+ A50A 23               inc hl
1010+ A50B 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A50C
1012+ A50C 3E 01            ld a,1
1013+ A50E 32 53 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A511
1015+ A511 CD 94 A4         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A514
1017+ A514 AF               xor a
1018+ A515 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A516
1020+ A516 C9               ret
1021+ A517
1022+ A517              ; --------------------------------------------------------------------------------------
1023+ A517              ;
1024+ A517              ;   13/10/24
1025+ A517              ;
1026+ A517
1027+ A517              Pinta_disparos_Amadeus
1028+ A517
1029+ A517 06 02            ld b,2
1030+ A519 ED 73 3A 8C      ld (Stack),sp
1031+ A51D ED 7B 48 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A521 D1           3 pop de
1033+ A522 14               inc d
1034+ A523 15               dec d
1035+ A524 28 1C            jr z,1F
1036+ A526 E1               pop hl
1037+ A527
1038+ A527              Imprime_scanlines_en_pantalla
1039+ A527
1040+ A527              ; 1er scanline
1041+ A527
1042+ A527 1A               ld a,(de)
1043+ A528 AE               xor (hl)
1044+ A529 77               ld (hl),a
1045+ A52A
1046+ A52A 1C               inc e
1047+ A52B 2C               inc l
1048+ A52C
1049+ A52C 1A               ld a,(de)
1050+ A52D AE               xor (hl)
1051+ A52E 77               ld (hl),a
1052+ A52F
1053+ A52F 1D               dec e
1054+ A530 E1               pop hl
1055+ A531
1056+ A531              ; 2º scanline
1057+ A531
1058+ A531 1A               ld a,(de)
1059+ A532 AE               xor (hl)
1060+ A533 77               ld (hl),a
1061+ A534
1062+ A534 1C               inc e
1063+ A535 2C               inc l
1064+ A536
1065+ A536 1A               ld a,(de)
1066+ A537 AE               xor (hl)
1067+ A538 77               ld (hl),a
1068+ A539
1069+ A539 1D               dec e
1070+ A53A
1071+ A53A 18 06            jr 1F
1072+ A53C
1073+ A53C ED 7B 46 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A540 18 DF            jr 3B
1075+ A542 10 F8        1 djnz 2B
1076+ A544 ED 7B 3A 8C      ld sp,(Stack)
1077+ A548 C9               ret
1078+ A549
1079+ A549              ; --------------------------------------------------------------------------------------
1080+ A549              ;
1081+ A549              ;   13/10/24
1082+ A549              ;
1083+ A549              ;   Modifica: HL,BC y DE.
1084+ A549
1085+ A549
1086+ A549              Genera_datos_de_impresion_disparos_Amadeus
1087+ A549
1088+ A549 ED 73 3A 8C      ld (Stack),sp
1089+ A54D 31 22 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A550 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A551
1092+ A551 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A552 15               dec d
1094+ A553
1095+ A553 28 0E            jr z,Salida
1096+ A555
1097+ A555              Genera_scanlines_de_disparo_Amadeus
1098+ A555
1099+ A555 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A556              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A556 ED 7B 46 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A55A
1103+ A55A C1               pop bc
1104+ A55B C1               pop bc
1105+ A55C C1               pop bc
1106+ A55D
1107+ A55D E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A55E CD C8 9C         call PreviousScan
1109+ A561 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A562 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A563
1112+ A563              Salida
1113+ A563
1114+ A563 ED 7B 3A 8C      ld sp,(Stack)
1115+ A567
1116+ A567 C9               ret
1117+ A568
1118+ A568              ; --------------------------------------------------------------------------------------
1119+ A568              ;
1120+ A568              ;   12/09/24
1121+ A568              ;
1122+ A568
1123+ A568              Genera_disparo_Amadeus
1124+ A568
1125+ A568              ;*  Exclusiones.
1126+ A568
1127+ A568 3A 53 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A56B A7               and a
1129+ A56C C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A56D
1131+ A56D 3D               dec a
1132+ A56E 32 53 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A571
1134+ A571              Define_puntero_objeto_disparo
1135+ A571
1136+ A571              ;   Inicializamos contador.
1137+ A571
1138+ A571 06 00            ld b,0
1139+ A573
1140+ A573 2A B9 89         ld hl,(p.imp.amadeus)
1141+ A576 2C               inc l
1142+ A577
1143+ A577 3E 80            ld a,$80
1144+ A579 BE               cp (hl)
1145+ A57A 28 0D            jr z,1F
1146+ A57C
1147+ A57C 04               inc b
1148+ A57D
1149+ A57D 3E 60            ld a,$60
1150+ A57F BE               cp (hl)
1151+ A580 28 07            jr z,1F
1152+ A582
1153+ A582
1154+ A582 04               inc b
1155+ A583
1156+ A583 3E 18            ld a,$18
1157+ A585 BE               cp (hl)
1158+ A586 28 01            jr z,1F
1159+ A588
1160+ A588 04               inc b
1161+ A589
1162+ A589              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A589
1164+ A589              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A589
1166+ A589 CD C8 9C     1 call PreviousScan
1167+ A58C
1168+ A58C 78               ld a,b
1169+ A58D CB 3F            srl a
1170+ A58F 28 03            jr z,4F
1171+ A591
1172+ A591              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A591 E5               push hl
1174+ A592 18 02            jr 5F
1175+ A594 2D           4 dec l
1176+ A595 E5               push hl
1177+ A596              ; ---
1178+ A596
1179+ A596              ;   Calcula el Puntero_objeto del disparo.
1180+ A596
1181+ A596 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A599 04               inc b
1183+ A59A 05               dec b
1184+ A59B 28 04            jr z,2F
1185+ A59D
1186+ A59D              ;   Nos desplazamos por el índice de disparos.
1187+ A59D
1188+ A59D 2C           3 inc l
1189+ A59E 2C               inc l
1190+ A59F 10 FC            djnz 3B
1191+ A5A1
1192+ A5A1              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A5A1 CD C6 91     2 call Extrae_address
1194+ A5A4 E5               push hl
1195+ A5A5              ; ---
1196+ A5A5
1197+ A5A5              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A5A5              ; HL en el 1er .db de la caja.
1199+ A5A5
1200+ A5A5 21 22 89         ld hl,Disparo_Amad
1201+ A5A8
1202+ A5A8 06 02            ld b,2
1203+ A5AA
1204+ A5AA D1           6 pop de
1205+ A5AB 73               ld (hl),e
1206+ A5AC 23               inc hl
1207+ A5AD 72               ld (hl),d
1208+ A5AE 23               inc hl
1209+ A5AF
1210+ A5AF 10 F9            djnz 6B
1211+ A5B1
1212+ A5B1 C9               ret
1213+ A5B2
1214+ A5B2              Genera_coordenadas_de_disparo_Amadeus
1215+ A5B2
1216+ A5B2              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A5B2              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A5B2              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A5B2
1220+ A5B2 CD C6 91         call Extrae_address
1221+ A5B5 CD 0B 96         call Genera_coordenadas
1222+ A5B8
1223+ A5B8 3D               dec a
1224+ A5B9
1225+ A5B9 21 6C 8C         ld hl,Coordenadas_disparo_certero
1226+ A5BC 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A5BD 23               inc hl
1228+ A5BE 3A EB 8B         ld a,(Coordenada_X)
1229+ A5C1 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A5C2
1231+ A5C2 AF               xor a
1232+ A5C3 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A5C4
1234+ A5C4 C9               ret
1235+ A5C5
1236+ A5C5              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A5C5              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A5C5              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A5C5
1240+ A5C5              ; ----------------------------------------------
1241+ A5C5              ;
1242+ A5C5              ;   27/08/24
1243+ A5C5              ;
1244+ A5C5              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A5C5              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A5C5
1247+ A5C5              Detecta_impacto_en_disparo_de_Amadeus
1248+ A5C5
1249+ A5C5              Extraccion_de_datos
1250+ A5C5
1251+ A5C5 13               inc de
1252+ A5C6 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A5C7
1254+ A5C7 5E               ld e,(hl)
1255+ A5C8 23               inc hl
1256+ A5C9 56               ld d,(hl)
1257+ A5CA
1258+ A5CA 23               inc hl
1259+ A5CB
1260+ A5CB 4E               ld c,(hl)
1261+ A5CC 23               inc hl
1262+ A5CD 46               ld b,(hl)
1263+ A5CE
1264+ A5CE C5               push bc
1265+ A5CF E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A5D0
1267+ A5D0              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A5D0
1269+ A5D0 CD C8 9C         call PreviousScan
1270+ A5D3 CD C8 9C         call PreviousScan
1271+ A5D6
1272+ A5D6              Detecta_impacto_
1273+ A5D6
1274+ A5D6 1A               ld a,(de)
1275+ A5D7 A6               and (hl)
1276+ A5D8 C0               ret nz
1277+ A5D9
1278+ A5D9 13               inc de
1279+ A5DA 23               inc hl
1280+ A5DB
1281+ A5DB 1A               ld a,(de)
1282+ A5DC A6               and (hl)
1283+ A5DD C9               ret
1284+ A5DE
1285+ A5DE              ; -------------------------------------------------------------------------------------------------------------
1286+ A5DE              ;
1287+ A5DE              ;   25/11//24
1288+ A5DE              ;
1289+ A5DE              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A5DE              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A5DE              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A5DE              ;
1293+ A5DE              ;   MODIFICA: HL,DE,BC y A.
1294+ A5DE              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A5DE              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A5DE
1297+ A5DE              Colision_Entidad_Amadeus
1298+ A5DE
1299+ A5DE              ; Posible contacto de entidad con Amadeus. ?????
1300+ A5DE
1301+ A5DE              ; Exclusiones:
1302+ A5DE
1303+ A5DE 3A 8B 8C         ld a,(Shield)
1304+ A5E1 A7               and a
1305+ A5E2 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A5E3
1307+ A5E3 21 62 8C         ld hl,Ctrl_3
1308+ A5E6 CB 76            bit 6,(hl)
1309+ A5E8 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A5E9
1311+ A5E9 21 69 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A5EC CB 56            bit 2,(hl)
1313+ A5EE C0               ret nz
1314+ A5EF
1315+ A5EF DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A5F2 FE 14        	cp $14
1317+ A5F4 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A5F5
1319+ A5F5 3A B8 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A5F8 A7               and a
1321+ A5F9 C0               ret nz
1322+ A5FA
1323+ A5FA              Genera_coordenadas_X
1324+ A5FA
1325+ A5FA              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A5FA              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A5FA
1328+ A5FA              ;   Limpiamos almacenes.
1329+ A5FA
1330+ A5FA              ;    call Limpia_Coordenadas_X
1331+ A5FA
1332+ A5FA              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A5FA
1334+ A5FA 21 6E 8C         ld hl,Coordenadas_X_Entidad
1335+ A5FD DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A600 CD 26 A6         call Guarda_coordenadas_X
1337+ A603
1338+ A603              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A603
1340+ A603 3A B5 89         ld a,(CX_Amadeus)
1341+ A606 CD 26 A6         call Guarda_coordenadas_X
1342+ A609
1343+ A609 DD E5            push ix
1344+ A60B CD 3A A6         call Compara_coordenadas_X
1345+ A60E DD E1            pop ix
1346+ A610
1347+ A610 C0               ret nz
1348+ A611
1349+ A611 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A613 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A616
1352+ A616 DD 7D            ld a,ixl
1353+ A618 C6 04            add 4
1354+ A61A DD 6F            ld ixl,a
1355+ A61C
1356+ A61C DD 22 6A 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A620
1358+ A620 21 69 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A623 CB D6            set 2,(hl)
1360+ A625
1361+ A625 C9               ret
1362+ A626
1363+ A626               ; ----- ----- ----- ----- -----
1364+ A626
1365+ A626 77           Guarda_coordenadas_X ld (hl),a
1366+ A627 3C               inc a
1367+ A628 2C               inc l
1368+ A629 77               ld (hl),a
1369+ A62A 3C               inc a
1370+ A62B 2C               inc l
1371+ A62C 77               ld (hl),a
1372+ A62D 2C               inc l
1373+ A62E C9               ret
1374+ A62F
1375+ A62F AF           Limpia_Coordenadas_X xor a
1376+ A630 06 06            ld b,6
1377+ A632 21 71 8C         ld hl,Coordenadas_X_Amadeus
1378+ A635 77           1 ld (hl),a
1379+ A636 23               inc hl
1380+ A637 10 FC            djnz 1B
1381+ A639 C9               ret
1382+ A63A
1383+ A63A              ; ----- ----- ----- ----- -----
1384+ A63A
1385+ A63A              Compara_coordenadas_X
1386+ A63A
1387+ A63A DD 21 6E 8C      ld ix,Coordenadas_X_Entidad
1388+ A63E DD 7E 00         ld a,(ix+0)
1389+ A641 CD 4F A6         call Comparando
1390+ A644 C8               ret z
1391+ A645
1392+ A645 3C               inc a
1393+ A646 CD 5E A6         call Comparando_1
1394+ A649 C8               ret z
1395+ A64A
1396+ A64A 3C               inc a
1397+ A64B CD 5E A6         call Comparando_1
1398+ A64E C9               ret
1399+ A64F
1400+ A64F              ; ----- ----- ----- ----- -----
1401+ A64F              ;
1402+ A64F              ;   4/12/23
1403+ A64F              ;
1404+ A64F              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A64F
1406+ A64F              Comparando
1407+ A64F
1408+ A64F DD 2C            inc ixl
1409+ A651 DD 2C            inc ixl
1410+ A653 DD 2C            inc ixl
1411+ A655
1412+ A655 DD 46 00         ld b,(ix+0)
1413+ A658 DD 4E 01         ld c,(ix+1)
1414+ A65B DD 56 02         ld d,(ix+2)
1415+ A65E
1416+ A65E B8           Comparando_1 cp b
1417+ A65F C8               ret z
1418+ A660 B9               cp c
1419+ A661 C8               ret z
1420+ A662 BA               cp d
1421+ A663 C9               ret
1422+ A664
1423+ A664              ; -----------------------------------------------------------------------
1424+ A664              ;
1425+ A664              ;   04/7/24
1426+ A664              ;
1427+ A664
1428+ A664              Detecta_colision_nave_entidad
1429+ A664
1430+ A664              ; Exclusiones:
1431+ A664
1432+ A664              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A664
1434+ A664 21 69 8C     	ld hl,Impacto2
1435+ A667 CB 56        	bit 2,(hl)
1436+ A669 C8           	ret z
1437+ A66A
1438+ A66A              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A66A
1440+ A66A 2A BB 89         ld hl,(Pamm_Amadeus)
1441+ A66D CD C6 91         call Extrae_address
1442+ A670 54               ld d,h
1443+ A671 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A672
1445+ A672 2A B9 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A675 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A677 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A67A
1449+ A67A C5           1 push bc
1450+ A67B 06 03            ld b,3
1451+ A67D E5               push hl
1452+ A67E
1453+ A67E              ; .db
1454+ A67E
1455+ A67E 1A           3 ld a,(de)
1456+ A67F A7               and a
1457+ A680 20 03            jr nz,4F
1458+ A682
1459+ A682 2C               inc l
1460+ A683 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A685
1462+ A685 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A687 28 04            jr z,2F
1464+ A689
1465+ A689              ; Impacto.
1466+ A689 FD 2D            dec iyl
1467+ A68B 28 22            jr z,5F
1468+ A68D
1469+ A68D 1C           2 inc e
1470+ A68E 10 EE            djnz 3B
1471+ A690
1472+ A690 E1               pop hl
1473+ A691
1474+ A691              ; Hay salto de línea en el puntero de impresión ???
1475+ A691
1476+ A691 7C               ld a,h
1477+ A692 D6 57            sub $57
1478+ A694 20 0A            jr nz,6F
1479+ A696
1480+ A696              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A696
1482+ A696 2A B9 89         ld hl,(p.imp.amadeus)
1483+ A699 3E 20            ld a,$20
1484+ A69B A7               and a
1485+ A69C 85               add l
1486+ A69D 6F               ld l,a
1487+ A69E 18 01            jr 7F
1488+ A6A0
1489+ A6A0 24           6 inc h
1490+ A6A1
1491+ A6A1 C1           7 pop bc
1492+ A6A2 10 D6            djnz 1B
1493+ A6A4
1494+ A6A4              ;   Fin de la comparativa.
1495+ A6A4
1496+ A6A4              ;   NO HAY COLISIÓN !!!!!.
1497+ A6A4              ;
1498+ A6A4              ;   .db (Impacto) de Amadeus a "0".
1499+ A6A4              ;   RES el bit2 de (Impacto2).
1500+ A6A4              ;
1501+ A6A4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A6A4              ;   Lo colocamos a "0".
1503+ A6A4
1504+ A6A4 21 69 8C         ld hl,Impacto2
1505+ A6A7 CB 96            res 2,(hl)
1506+ A6A9 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A6AC 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A6AE C9               ret
1509+ A6AF
1510+ A6AF              ;   COLISIÓN !!!!!.
1511+ A6AF              ;
1512+ A6AF              ;   .db (Impacto) de Amadeus a "1".
1513+ A6AF              ;   SET el bit3 de (Impacto2).
1514+ A6AF              ;
1515+ A6AF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A6AF
1517+ A6AF E1           5 pop hl
1518+ A6B0 C1               pop bc
1519+ A6B1
1520+ A6B1 21 B8 89         ld hl,Impacto_Amadeus
1521+ A6B4 36 01            ld (hl),1
1522+ A6B6 21 69 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A6B9 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A6BB
1525+ A6BB 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A6BE 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A6C1
1528+ A6C1 23               inc hl
1529+ A6C2 23               inc hl
1530+ A6C3 23               inc hl
1531+ A6C4
1532+ A6C4 73               ld (hl),e
1533+ A6C5 23               inc hl
1534+ A6C6 72               ld (hl),d
1535+ A6C7
1536+ A6C7              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A6C7
1538+ A6C7 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A6CA 21 BB 89         ld hl,Pamm_Amadeus
1540+ A6CD
1541+ A6CD 73               ld (hl),e
1542+ A6CE 23               inc hl
1543+ A6CF 72               ld (hl),d
1544+ A6D0
1545+ A6D0 C9               ret
1546+ A6D1
1547+ A6D1
1548+ A6D1
# file closed: Disparo.asm
2452  A6D1
2453  A6D1              	SAVESNA "Pruebas.sna", START
2454  A6D1
2455  A6D1
2456  A6D1
2457  A6D1
# file closed: Banco_de_pruebas.asm
