# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B2 8E     	call Frame
  15  A104 FB           	ei
  16  A105 ED 4D        	reti
  17  A107
  18  A107              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  A107
  20  A107              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A107              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A107              ;
   3+ A107              ;	17/02/23
   4+ A107              ;
   5+ A107              ;	Sprites e índices.
   6+ A107
   7+ A107              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 12 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 16 8A        	defw End_Snapshot_1
 267+ 8500 1A 8A        	defw End_Snapshot_2
 268+ 8502 1E 8A        	defw End_Snapshot_3
 269+ 8504 14 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 18 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1C 8A        	defw End_Snapshot_disparos_2
 272+ 850A 20 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 A4 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 A4 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  22  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BC 88        	defw Nivel_2
   7+ 88AD C9 88        	defw Nivel_3
   8+ 88AF D9 88        	defw Nivel_4
   9+ 88B1 EB 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 04           Nivel_1 db 4	                                ; Nº de entidades.
  19+ 88B8 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C1 01 02
  22+ 88C3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C7 01 02
  23+ 88C9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CE 01
  25+ 88CF 03 01 01 01  	db 3,1,1,1,1
  25+ 88D3 01
  26+ 88D4 03 01 01 01  	db 3,1,1,1,1
  26+ 88D8 01
  27+ 88D9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DE 01
  29+ 88DF 04 01 01 01  	db 4,1,1,1,1
  29+ 88E3 01
  30+ 88E4 04 01 01 01  	db 4,1,1,1,1
  30+ 88E8 01
  31+ 88E9 02 03        	db 2,3
  32+ 88EB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88F0 01
  34+ 88F1 05 01 01 01  	db 5,1,1,1,1
  34+ 88F5 01
  35+ 88F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88FA 01
  36+ 88FB 05 01 01 01  	db 5,1,1,1,1
  36+ 88FF 01
  37+ 8900
  38+ 8900              ;---------------------------------------------------------------------------------------------------------------
  39+ 8900              ;
  40+ 8900              ;   21/5/23
  41+ 8900              ;
  42+ 8900              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8900              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8900              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8900              ;	_en la caja DRAW correspondiente.
  46+ 8900              ;
  47+ 8900              ;	MODIFICA: HL,DE y A.
  48+ 8900              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8900
  50+ 8900              Inicializa_Punteros_de_nivel
  51+ 8900
  52+ 8900 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8903 22 4D 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8906 CD 88 8D     	call Extrae_address
  55+ 8909 7E           	ld a,(hl)
  56+ 890A 32 02 8A     	ld (Numero_de_entidades),a
  57+ 890D 23           	inc hl
  58+ 890E 22 4F 8A     	ld (Datos_de_nivel),hl
  59+ 8911 C9           	ret
  60+ 8912
  61+ 8912              ;---------------------------------------------------------------------------------------------------------------
  62+ 8912              ;
  63+ 8912              ;   13/5/23
  64+ 8912              ;
  65+ 8912              ;	Destruye A,BC,HL,DE
  66+ 8912
  67+ 8912              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8912              ;	_del juego.
  69+ 8912
  70+ 8912              Prepara_cajas
  71+ 8912
  72+ 8912              ; Preparamos los punteros de las cajas.
  73+ 8912
  74+ 8912 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8915 CD 88 8D     	call Extrae_address
  76+ 8918 CD 55 89     	call Avanza_caja
  77+ 891B
  78+ 891B CD 99 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891E
  80+ 891E 2A 4F 8A     	ld hl,(Datos_de_nivel)
  81+ 8921
  82+ 8921              ; HL está en los datos del nivel correspondiente.
  83+ 8921              ; B actuará como contador de cajas.
  84+ 8921
  85+ 8921 C5           1 push bc
  86+ 8922
  87+ 8922 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8923 CD 46 89     	call PreparaBC
  89+ 8926
  90+ 8926 21 85 88     	ld hl,Indice_de_entidades
  91+ 8929 CD 4E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892C 22 08 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892F
  94+ 892F CD 5F 89     	call Datos_de_entidad_a_caja
  95+ 8932
  96+ 8932 2A 00 8A     	ld hl,(Indice_restore_caja)
  97+ 8935 CD 88 8D     	call Extrae_address
  98+ 8938 CD 55 89     	call Avanza_caja
  99+ 893B
 100+ 893B 2A 4F 8A     	ld hl,(Datos_de_nivel)
 101+ 893E 23           	inc hl
 102+ 893F 22 4F 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8942
 104+ 8942 C1           	pop bc
 105+ 8943 10 DC        	djnz 1B
 106+ 8945 C9           	ret
 107+ 8946
 108+ 8946 CB 27        PreparaBC sla a
 109+ 8948 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 894A 4F           	ld c,a
 111+ 894B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894D C9           	ret
 113+ 894E
 114+ 894E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894F ED 4A        	adc hl,bc
 116+ 8951 CD 88 8D     	call Extrae_address
 117+ 8954 C9           	ret
 118+ 8955
 119+ 8955 22 FC 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8958 13           	inc de
 121+ 8959 13           	inc de
 122+ 895A EB           	ex de,hl
 123+ 895B 22 00 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895E C9           	ret
 125+ 895F
 126+ 895F              Datos_de_entidad_a_caja
 127+ 895F
 128+ 895F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895F
 130+ 895F
 131+ 895F ED 5B FC 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8963
 133+ 8963 01 02 00     	ld bc,2
 134+ 8966 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8968
 136+ 8968 01 07 00     	ld bc,7
 137+ 896B CD 93 89     	call Situa_DE
 138+ 896E
 139+ 896E 01 05 00     	ld bc,5
 140+ 8971 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8973
 142+ 8973 01 04 00     	ld bc,4
 143+ 8976 CD 93 89     	call Situa_DE
 144+ 8979
 145+ 8979 01 07 00     	ld bc,7
 146+ 897C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897E
 148+ 897E 01 18 00     	ld bc,24
 149+ 8981 CD 93 89     	call Situa_DE
 150+ 8984
 151+ 8984 01 02 00     	ld bc,2
 152+ 8987 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8989
 154+ 8989              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8989              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8989
 157+ 8989 01 0F 00     	ld bc,15									; *****
 158+ 898C CD 93 89     	call Situa_DE
 159+ 898F
 160+ 898F 3E 03        	ld a,3
 161+ 8991 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8992
 163+ 8992 C9           	ret
 164+ 8993
 165+ 8993 EB           Situa_DE ex de,hl
 166+ 8994 A7           	and a
 167+ 8995 ED 4A        	adc hl,bc
 168+ 8997 EB           	ex de,hl
 169+ 8998 C9           	ret
 170+ 8999
 171+ 8999              ;---------------------------------------------------------------------------------------------------------------
 172+ 8999              ;
 173+ 8999              ;	21/5/23
 174+ 8999              ;
 175+ 8999              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8999              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8999              ;
 178+ 8999              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8999              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8999              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8999              ;
 182+ 8999              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8999              ;	MODIFICA: A y B.
 184+ 8999              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8999
 186+ 8999              Admin_num_entidades
 187+ 8999
 188+ 8999              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8999
 190+ 8999 3A 02 8A     	ld a,(Numero_de_entidades)
 191+ 899C A7           	and a
 192+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899D              ;	jr z,$
 194+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899D
 196+ 899D 20 03        	jr nz,3F
 197+ 899F
 198+ 899F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899F
 200+ 899F CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A2
 202+ 89A2 3A 02 8A     3 ld a,(Numero_de_entidades)
 203+ 89A5 FE 0A        	cp 10
 204+ 89A7 38 08        	jr c,1F
 205+ 89A9
 206+ 89A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 89A9              ; Actualizamos variables.
 208+ 89A9
 209+ 89A9 3E 0A        	ld a,10
 210+ 89AB 32 03 8A     	ld (Numero_parcial_de_entidades),a
 211+ 89AE 47           	ld b,a
 212+ 89AF 18 04        	jr 2F
 213+ 89B1
 214+ 89B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 89B1              ; (Numero_de_entidades)="0".
 216+ 89B1
 217+ 89B1 32 03 8A     1 ld (Numero_parcial_de_entidades),a
 218+ 89B4 47           	ld b,a
 219+ 89B5 C9           2 ret
# file closed: Niveles.asm
  23  89B6
  24  89B6              ; ******************************************************************************************************************************************************************************************
  25  89B6              ; Constantes.
  26  89B6              ; ******************************************************************************************************************************************************************************************
  27  89B6              ;
  28  89B6              ; 25/05/23
  29  89B6              ;
  30  89B6              ; Constantes generales.
  31  89B6              ;
  32  89B6
  33  89B6              Sprite_vacio equ $f000
  34  89B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  89B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  89B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  89B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  89B6
  39  89B6              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  89B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  89B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  89B6              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  89B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  89B6              ;                               				        ; De momento situamos este almacén en $7060.
  45  89B6              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  89B6              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  89B6              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  89B6              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  89B6              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  89B6              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  51  89B6
  52  89B6              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  89B6
  54  89B6              ; ******************************************************************************************************************************************************************************************
  55  89B6              ; Variables.
  56  89B6              ; ******************************************************************************************************************************************************************************************
  57  89B6              ;
  58  89B6              ; 28/07/23
  59  89B6              ;
  60  89B6              ; Variables de DRAW. (Motor principal).
  61  89B6              ;
  62  89B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  89B6
  64  89B6 00           Filas db 0												; Filas. [DRAW]
  65  89B7 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  89B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  89BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  89BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  89BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  89BE
  71  89BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  89BE
  73  89BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  89BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  89BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  89BF 00           Attr db 0												; Atributos de la entidad:
  77  89C0
  78  89C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  89C0              ;
  80  89C0              ;	COLORES: 0 ..... NEGRO
  81  89C0              ;    		 1 ..... AZUL
  82  89C0              ; 			 2 ..... ROJO
  83  89C0              ;			 3 ..... MAGENTA
  84  89C0              ; 			 4 ..... VERDE
  85  89C0              ; 			 5 ..... CIAN
  86  89C0              ;			 6 ..... AMARILLO
  87  89C0              ; 			 7 ..... BLANCO
  88  89C0
  89  89C0 00 00        Indice_Sprite_der defw 0
  90  89C2 00 00        Indice_Sprite_izq defw 0
  91  89C4 00 00        Puntero_DESPLZ_der defw 0
  92  89C6 00 00        Puntero_DESPLZ_izq defw 0
  93  89C8
  94  89C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  89CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  89CB
  97  89CB              ; Variables de objeto. (Características).
  98  89CB
  99  89CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  89CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  89CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  89CF
 104  89CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  89D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  89D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  89D0
 108  89D0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 109  89D2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89D4 00 00        	defw 0
 111  89D6 00 00 00 00  	db 0,0,0,0
 112  89DA
 113  89DA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 114  89DC 00 00        	defw 0
 115  89DE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 116  89E0 00 00 00 00  	db 0,0,0,0
 117  89E4
 118  89E4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 119  89E4
 120  89E4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 121  89E5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 122  89E5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 123  89E5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 124  89E5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 125  89E5              ;
 126  89E5              ; 														DESCRIPCIÖN:
 127  89E5              ;
 128  89E5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 129  89E5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 130  89E5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 131  89E5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 132  89E5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 133  89E5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 134  89E5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 135  89E5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 136  89E5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 137  89E5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 138  89E5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 139  89E5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 140  89E5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 141  89E5              ;
 142  89E5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 143  89E5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 144  89E5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 145  89E5
 146  89E5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 147  89E6
 148  89E6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 149  89E6
 150  89E6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 151  89E7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 152  89E9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 153  89EB 00 00        Puntero_indice_mov_bucle defw 0							;
 154  89ED              ;
 155  89ED              ;
 156  89ED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 157  89EE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 158  89EE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 159  89EE 00           Incrementa_puntero_backup db 0
 160  89EF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 161  89F0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 162  89F0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 163  89F1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 164  89F2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 165  89F3              ;
 166  89F3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 167  89F3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 168  89F3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 169  89F3              ;
 170  89F3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 171  89F3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 172  89F3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 173  89F3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 174  89F3              ;
 175  89F3              ;														;	"$ff" ..... Bucle infinito de repetición.
 176  89F3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 177  89F3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 178  89F3
 179  89F3
 180  89F3              ; Variables de funcionamiento. [DRAW].
 181  89F3
 182  89F3 00           Columnas db 0
 183  89F4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 184  89F6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  89F7
 187  89F7              ; variables de control general.
 188  89F7
 189  89F7 00           Ctrl_2 db 0
 190  89F8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 191  89F8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 192  89F8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 193  89F8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 194  89F8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 195  89F8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 196  89F8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 197  89F8              ;
 198  89F8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 199  89F8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 200  89F8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 201  89F8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 202  89F8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 203  89F8
 204  89F8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 205  89F9
 206  89F9              ;! 67 Bytes por entidad.
 207  89F9
 208  89F9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 209  89F9              ;					         		---------;      ;---------
 210  89F9
 211  89F9
 212  89F9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 213  89F9
 214  89F9 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 215  89FA
 216  89FA              ;														DESCRIPCIÓN:
 217  89FA              ;
 218  89FA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 219  89FA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 220  89FA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 221  89FA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 222  89FA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 223  89FA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 224  89FA
 225  89FA              ;														BIT 3, Recarga de nueva oleada.
 226  89FA              ;														BIT 4, Recarga de nueva oleada.
 227  89FA              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 228  89FA
 229  89FA
 230  89FA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 231  89FC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 232  89FC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 233  89FC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 234  89FC
 235  89FC
 236  89FC
 237  89FC              ; Gestión de ENTIDADES y CAJAS.
 238  89FC
 239  89FC 00 00        Puntero_store_caja defw 0
 240  89FE 00 00        Puntero_restore_caja defw 0
 241  8A00 00 00        Indice_restore_caja defw 0
 242  8A02 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 243  8A03 00           Numero_parcial_de_entidades db 0
 244  8A04 00           Entidades_en_curso db 0									; ..... ..... .....
 245  8A05 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 246  8A06              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 247  8A06              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 248  8A06              ;														; _ (Numero_de_malotes)="0".
 249  8A06 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 250  8A08 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 251  8A0A              ;														; _ puntero (Indice_entidades).
 252  8A0A
 253  8A0A
 254  8A0A              ;---------------------------------------------------------------------------------------------------------------
 255  8A0A              ;
 256  8A0A              ;	9/8/23
 257  8A0A              ;
 258  8A0A              ;	Álbumes.
 259  8A0A
 260  8A0A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 261  8A0C              ;														; _variable para almacenar lo posición del puntero_
 262  8A0C              ; 														; _de pila, SP.
 263  8A0C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 264  8A0E              ;														; La utiliza la rutina [Extrae_foto_registros].
 265  8A0E 00 00        Stack_snapshot defw 0
 266  8A10 00 00        Stack_snapshot_disparos defw 0
 267  8A12
 268  8A12 00 00        End_Snapshot defw 0
 269  8A14              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 270  8A14 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 271  8A16              ;														; _el snapshot de los registros del siguiente disparo.
 272  8A16              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 273  8A16 00 00        End_Snapshot_1 defw 0
 274  8A18 00 00        End_Snapshot_disparos_1 defw 0
 275  8A1A 00 00        End_Snapshot_2 defw 0
 276  8A1C 00 00        End_Snapshot_disparos_2 defw 0
 277  8A1E 00 00        End_Snapshot_3 defw 0
 278  8A20 00 00        End_Snapshot_disparos_3 defw 0
 279  8A22
 280  8A22 00 00        Puntero_indice_album_de_fotos defw 0
 281  8A24 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 282  8A26
 283  8A26 00 00        Puntero_indice_End_Snapshot defw 0
 284  8A28 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 285  8A2A 00 00        Puntero_de_End_Snapshot defw 0
 286  8A2C 00 00        Puntero_de_End_Snapshot_disparos defw 0
 287  8A2E
 288  8A2E              ;---------------------------------------------------------------------------------------------------------------
 289  8A2E
 290  8A2E              ; Gestión de Disparos.
 291  8A2E
 292  8A2E 00           Numero_de_disparotes db 0
 293  8A2F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 294  8A31 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 295  8A33 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 296  8A34              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 297  8A34              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 298  8A34 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 299  8A36              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 300  8A36              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 301  8A36              ;														; _produzca colisión.
 302  8A36 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 303  8A38              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 304  8A38 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8A3B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 306  8A3B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 307  8A3E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 308  8A3E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 309  8A40 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 310  8A41
 311  8A41              ;---------------------------------------------------------------------------------------------------------------
 312  8A41
 313  8A41              ; Relojes y temporizaciones.
 314  8A41
 315  8A41 00           Contador_de_frames db 0
 316  8A42 00           Contador_de_frames_2 db 0
 317  8A43
 318  8A43 04           Clock_explosion db 4
 319  8A44 1E           Clock_Entidades_en_curso db 30
 320  8A45 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 321  8A46              ;														; Repite la oleada de entidades.
 322  8A46 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 323  8A47 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 324  8A48 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 325  8A49
 326  8A49 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 327  8A4A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 328  8A4B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 329  8A4C
 330  8A4C              ;---------------------------------------------------------------------------------------------------------------
 331  8A4C
 332  8A4C              ; Gestión de NIVELES.
 333  8A4C
 334  8A4C 00           Nivel db 0												; Nivel actual del juego.
 335  8A4D 00 00        Puntero_indice_NIVELES defw 0
 336  8A4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 337  8A51              ; 														; _ que definen el NIVEL.
 338  8A51              ; Y todo comienza aquí .....
 339  8A51              ;
 340  8A51              ; Rutina principal *************************************************************************************************************************************************************************
 341  8A51              ;
 342  8A51              ;	14/11/22
 343  8A51
 344  8A51              START
 345  8A51
 346  8A51 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 347  8A54 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 348  8A56 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 349  8A58 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 350  8A5A F3           	DI
 351  8A5B
 352  8A5B 3E 07        	ld a,%00000111
 353  8A5D CD E0 99     	call Cls
 354  8A60
 355  8A60 CD 61 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 356  8A63
 357  8A63              ; INICIALIZACIÓN.
 358  8A63
 359  8A63 CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 360  8A66
 361  8A66 CD 12 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 362  8A69
 363  8A69 CD D4 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 364  8A6C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 365  8A6C CD EA 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 366  8A6F              ;													     ; _ malotes antes de guardar ninguna foto.
 367  8A6F              ; ----------
 368  8A6F
 369  8A6F CD 11 8E     	call Restore_entidad
 370  8A72
 371  8A72 21 03 8A     	ld hl,Numero_parcial_de_entidades
 372  8A75 46           	ld b,(hl)
 373  8A76 04           	inc b
 374  8A77 05           	dec b
 375  8A78 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 376  8A7A
 377  8A7A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 378  8A7A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 379  8A7A              ;	Pintamos el resto de entidades:
 380  8A7A
 381  8A7A              ;	INICIA ENTIDADES !!!!!
 382  8A7A
 383  8A7A C5           1 push bc  												; Guardo el contador de entidades.
 384  8A7B
 385  8A7B CD 7B 8C     	call Inicia_entidad
 386  8A7E
 387  8A7E C1           	pop bc
 388  8A7F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 389  8A81
 390  8A81              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 391  8A81              ; (Esto se dá cuando se inicia una nueva oleada).
 392  8A81
 393  8A81 3A F9 89     	ld a,(Ctrl_1)
 394  8A84 CB 5F        	bit 3,a
 395  8A86 20 18        	jr nz,5F											; Loop
 396  8A88
 397  8A88              ; 	INICIA AMADEUS !!!!!
 398  8A88
 399  8A88 CD 38 8E     3 call Restore_Amadeus
 400  8A8B CD 8E 8D     	call Inicia_Puntero_objeto
 401  8A8E CD 16 94     	call Draw
 402  8A91 CD A0 7F     	call Guarda_foto_registros
 403  8A94 11 A4 85     	ld de,Amadeus_db
 404  8A97 CD 4A 8E     	call Store_Amadeus
 405  8A9A
 406  8A9A              ; 	INICIA DISPAROS !!!!!
 407  8A9A
 408  8A9A CD 4A 8D     	call Inicia_Puntero_Disparo_Entidades
 409  8A9D CD 51 8D     	call Inicia_Puntero_Disparo_Amadeus
 410  8AA0
 411  8AA0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 412  8AA0
 413  8AA0 CD D4 8C     5 call Inicia_punteros_de_cajas
 414  8AA3 CD 11 8E     	call Restore_entidad
 415  8AA6
 416  8AA6 3A F9 89     	ld a,(Ctrl_1)
 417  8AA9 CB 5F        	bit 3,a
 418  8AAB 28 0A        	jr z,6F
 419  8AAD
 420  8AAD              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 421  8AAD
 422  8AAD 21 F9 89     	ld hl,Ctrl_1
 423  8AB0 CB 9E        	res 3,(hl)
 424  8AB2 CD 58 8D     	call Calcula_numero_de_malotes
 425  8AB5 18 0A        	jr Main
 426  8AB7
 427  8AB7              ; ----------
 428  8AB7
 429  8AB7 3A 03 8A     6 ld a,(Numero_parcial_de_entidades)
 430  8ABA 3C           	inc a
 431  8ABB 32 05 8A     	ld (Numero_de_malotes),a
 432  8ABE
 433  8ABE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 434  8ABE              ; _ tenemos calculado (Numero_de_malotes).
 435  8ABE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 436  8ABE              ; _ para situarnos en el siguiente album.
 437  8ABE
 438  8ABE CD 1B 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 439  8AC1
 440  8AC1              ; ------------------------------------
 441  8AC1
 442  8AC1              Main
 443  8AC1
 444  8AC1              ;	ei ; Interrupciones habilitadas.
 445  8AC1
 446  8AC1              ; -----------------------------------------------------------------------
 447  8AC1              ;
 448  8AC1              ;	3/8/23
 449  8AC1
 450  8AC1 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 451  8AC4 47           	ld b,a
 452  8AC5 3A 41 8A     	ld a,(Contador_de_frames)
 453  8AC8 B8           	cp b
 454  8AC9 20 18        	jr nz,13F
 455  8ACB
 456  8ACB 3A 03 8A     	ld a,(Numero_parcial_de_entidades)
 457  8ACE 47           	ld b,a
 458  8ACF 3A 04 8A     	ld a,(Entidades_en_curso)
 459  8AD2 B8           	cp b
 460  8AD3 28 0E        	jr z,13F
 461  8AD5 30 0C        	jr nc,13F
 462  8AD7
 463  8AD7 3C           	inc a
 464  8AD8 32 04 8A     	ld (Entidades_en_curso),a
 465  8ADB
 466  8ADB 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 467  8ADE
 468  8ADE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 469  8ADE              ;! _ IMPREDECIBLE !!!!
 470  8ADE
 471  8ADE C6 64        	add 100
 472  8AE0 32 44 8A     	ld (Clock_Entidades_en_curso),a
 473  8AE3
 474  8AE3              ; Habilita disparos.
 475  8AE3
 476  8AE3 21 46 8A     13 ld hl,Disparo_Amadeus
 477  8AE6 11 48 8A     	ld de,CLOCK_repone_disparo_Amadeus
 478  8AE9 CD A5 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 479  8AEC
 480  8AEC 21 49 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 481  8AEF 11 4B 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 482  8AF2 CD A5 A0     	call Habilita_disparos
 483  8AF5
 484  8AF5              ; COLISIONES.
 485  8AF5
 486  8AF5 CD F8 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 487  8AF8
 488  8AF8              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 489  8AF8              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 490  8AF8              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 491  8AF8
 492  8AF8 AF           	xor a
 493  8AF9 32 33 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 494  8AFC
 495  8AFC CD D4 8C     	call Inicia_punteros_de_cajas
 496  8AFF CD 11 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 497  8B02              ; 														; _ en DRAW.
 498  8B02 3A B6 89     	ld a,(Filas)
 499  8B05 A7           	and a
 500  8B06 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 501  8B08 CD 23 8E     	call Incrementa_punteros_de_cajas
 502  8B0B 18 F2        	jr 12B
 503  8B0D
 504  8B0D              ; ---------------------------------------------------------------------------------------
 505  8B0D
 506  8B0D 3A 03 8A     10 ld a,(Numero_parcial_de_entidades)
 507  8B10 47               ld b,a
 508  8B11 A7           	and a
 509  8B12 20 14        	jr nz,11F
 510  8B14
 511  8B14 21 F9 89     	ld hl,Ctrl_1
 512  8B17 CB 66        	bit 4,(hl)
 513  8B19 C2 A5 8B     	jp nz,16F
 514  8B1C
 515  8B1C 21 F9 89     	ld hl,Ctrl_1
 516  8B1F CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 517  8B21
 518  8B21 3A 41 8A     	ld a,(Contador_de_frames)
 519  8B24 3C           	inc a
 520  8B25 32 45 8A     	ld (Activa_recarga_cajas),a
 521  8B28
 522  8B28              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 523  8B28
 524  8B28 3A 04 8A     11 ld a,(Entidades_en_curso)
 525  8B2B A7           	and a
 526  8B2C CA A5 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 527  8B2F 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 528  8B30
 529  8B30              ; Código que ejecutamos con cada entidad:
 530  8B30              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 531  8B30
 532  8B30 C5           15 push bc 												; Nº de entidades en curso.
 533  8B31
 534  8B31              ; Impacto ???
 535  8B31
 536  8B31 3A CF 89     	ld a,(Impacto)
 537  8B34 A7           	and a
 538  8B35 28 2D        	jr z,8F
 539  8B37
 540  8B37              ; Hay Impacto en esta entidad.
 541  8B37
 542  8B37 21 43 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 543  8B3A 35           	dec (hl)
 544  8B3B 20 62        	jr nz,17F
 545  8B3D
 546  8B3D              ;! Velocidad de la animación de la explosión.
 547  8B3D
 548  8B3D 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 549  8B3F              ;														; _,(velocidad de la explosión).
 550  8B3F CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 551  8B42
 552  8B42              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 553  8B42
 554  8B42 3A F7 89     	ld a,(Ctrl_2)
 555  8B45 CB 4F        	bit 1,a
 556  8B47 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 557  8B49
 558  8B49              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 559  8B49
 560  8B49 3A BE 89     	ld a,(CTRL_DESPLZ)
 561  8B4C A7           	and a
 562  8B4D 20 08        	jr nz,18F
 563  8B4F
 564  8B4F 21 84 84     	ld hl,Indice_Explosion_2x2-2
 565  8B52 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 566  8B55 18 06        	jr 19F
 567  8B57
 568  8B57 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 569  8B5A 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 570  8B5D
 571  8B5D 21 F7 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 572  8B60 CB CE        	set 1,(hl)
 573  8B62 18 22        	jr 7F
 574  8B64
 575  8B64              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 576  8B64              ; _con las coordenadas de la entidad almacenada en DRAW.
 577  8B64
 578  8B64 3A F9 89     8 ld a,(Ctrl_1)
 579  8B67 CB 57        	bit 2,a
 580  8B69 28 1B        	jr z,7F
 581  8B6B
 582  8B6B 2A 36 8A     	ld hl,(Coordenadas_disparo_certero)
 583  8B6E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 584  8B6F              ;														; E contiene la coordenada_X del disparo.
 585  8B6F 2A BC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 586  8B72              ;														; H FILA, (Coordenada_y de la entidad).
 587  8B72 A7           	and a
 588  8B73 ED 52        	sbc hl,de
 589  8B75
 590  8B75 CD 2F 93     	call Determina_resultado_comparativa
 591  8B78
 592  8B78 78           	ld a,b
 593  8B79 A7           	and a
 594  8B7A 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 595  8B7C
 596  8B7C              ; ----- ----- -----
 597  8B7C
 598  8B7C 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 599  8B7E 32 CF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 600  8B81
 601  8B81 21 F9 89     	ld hl,Ctrl_1
 602  8B84 CB 96        	res 2,(hl)
 603  8B86
 604  8B86 CD FD 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 605  8B89
 606  8B89 3A E4 89     	ld a,(Ctrl_0)
 607  8B8C CB 67        	bit 4,a
 608  8B8E 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 609  8B90
 610  8B90              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 611  8B90              ; [[[
 612  8B90 CD AC 8E     	call Detecta_disparo_entidad
 613  8B93              ; ]]]
 614  8B93 CD 9B 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 615  8B96
 616  8B96 21 E4 89     	ld hl,Ctrl_0
 617  8B99 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 618  8B9B AF           	xor a
 619  8B9C 32 E5 89     	ld (Obj_dibujado),a
 620  8B9F
 621  8B9F CD D6 8D     17 call Store_Restore_cajas
 622  8BA2
 623  8BA2 C1           	pop bc
 624  8BA3 10 8B        	djnz 15B
 625  8BA5
 626  8BA5              ; ------------------------------------
 627  8BA5
 628  8BA5              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 629  8BA5              ; Hemos gestionado todas las unidades.
 630  8BA5              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 631  8BA5
 632  8BA5              ;	ld hl,Ctrl_1
 633  8BA5              ;	res 2,(hl)
 634  8BA5
 635  8BA5              ; ------------------------------------
 636  8BA5
 637  8BA5              ; Tras la gestión de las entidades, ... AMADEUS.
 638  8BA5
 639  8BA5 CD 38 8E     16 call Restore_Amadeus
 640  8BA8
 641  8BA8 3A CF 89     	ld a,(Impacto)
 642  8BAB A7           	and a
 643  8BAC 20 FE        	jr nz,$
 644  8BAE
 645  8BAE CD 5C 8C     	call Mov_Amadeus
 646  8BB1
 647  8BB1 3A E4 89     	ld a,(Ctrl_0)
 648  8BB4 CB 67        	bit 4,a
 649  8BB6 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 650  8BB8
 651  8BB8 CD 9B 8C     	call Guarda_foto_entidad_a_pintar
 652  8BBB
 653  8BBB 21 E4 89     14 ld hl,Ctrl_0
 654  8BBE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 655  8BC0
 656  8BC0 AF           	xor a
 657  8BC1 32 E5 89     	ld (Obj_dibujado),a
 658  8BC4
 659  8BC4 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 660  8BC7 CD 4A 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 661  8BCA
 662  8BCA              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 663  8BCA
 664  8BCA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 665  8BCA
 666  8BCA              ;	call Calcula_numero_de_disparotes
 667  8BCA
 668  8BCA CD 1B 8D      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 669  8BCD              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 670  8BCD              ;														; _ interrupción.
 671  8BCD 3E 04        	ld a,4
 672  8BCF D3 FE        	out ($fe),a
 673  8BD1
 674  8BD1              ; ----------------------------------------
 675  8BD1
 676  8BD1 3A F9 89     	ld a,(Ctrl_1) 										; Existe Loop?
 677  8BD4 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 678  8BD6 CA C1 8A     	jp z,Main
 679  8BD9
 680  8BD9              ; -----
 681  8BD9              ;	(((
 682  8BD9
 683  8BD9 3A 41 8A     	ld a,(Contador_de_frames)
 684  8BDC 47           	ld b,a
 685  8BDD 3A 45 8A     	ld a,(Activa_recarga_cajas)
 686  8BE0 B8           	cp b
 687  8BE1 28 08        	jr z,20F
 688  8BE3
 689  8BE3 21 F9 89     	ld hl,Ctrl_1
 690  8BE6 CB E6        	set 4,(hl)
 691  8BE8 C3 C1 8A     	jp Main
 692  8BEB
 693  8BEB 21 F9 89     20 ld hl,Ctrl_1
 694  8BEE CB A6        	res 4,(hl)
 695  8BF0 F3           	di
 696  8BF1
 697  8BF1 3A 41 8A     	ld a,(Contador_de_frames)
 698  8BF4
 699  8BF4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 700  8BF4              ;! _ IMPREDECIBLE !!!!
 701  8BF4
 702  8BF4 C6 0A        	add 10
 703  8BF6 32 44 8A     	ld (Clock_Entidades_en_curso),a
 704  8BF9
 705  8BF9 C3 66 8A     	jp 4B
 706  8BFC
 707  8BFC C9           	ret
 708  8BFD
 709  8BFD              ; --------------------------------------------------------------------------------------------------------------
 710  8BFD              ;
 711  8BFD              ;	27/05/23
 712  8BFD
 713  8BFD              Mov_obj
 714  8BFD
 715  8BFD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 716  8BFD
 717  8BFD 3A F7 89     	ld a,(Ctrl_2)
 718  8C00 CB 4F        	bit 1,a
 719  8C02 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 720  8C04
 721  8C04              ; Explosión:
 722  8C04
 723  8C04 3A F8 89     	ld a,(Frames_explosion)
 724  8C07 A7           	and a
 725  8C08 20 11        	jr nz,4F
 726  8C0A
 727  8C0A              ; Una alimaña menos!!!!!!!!!1
 728  8C0A
 729  8C0A CD 53 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 730  8C0D 21 03 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 731  8C10 35           	dec (hl)
 732  8C11 21 04 8A     	ld hl,Entidades_en_curso
 733  8C14 35           	dec (hl)
 734  8C15 21 02 8A     	ld hl,Numero_de_entidades
 735  8C18 35           	dec (hl)
 736  8C19 18 40        	jr 3F
 737  8C1B
 738  8C1B              ; -----
 739  8C1B
 740  8C1B              ;	`Movemos´ la explosión.
 741  8C1B
 742  8C1B 2A C4 89     4 ld hl,(Puntero_DESPLZ_der)
 743  8C1E 23           	inc hl
 744  8C1F 23           	inc hl
 745  8C20 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 746  8C23 CD 88 8D     	call Extrae_address
 747  8C26 22 BA 89     	ld (Puntero_objeto),hl
 748  8C29
 749  8C29 21 F8 89     	ld hl,Frames_explosion
 750  8C2C 35           	dec (hl)
 751  8C2D
 752  8C2D CD 8B 8C     	call Guarda_foto_entidad_a_borrar
 753  8C30 18 29        	jr 3F
 754  8C32
 755  8C32 AF           2 xor a
 756  8C33 32 E5 89     	ld (Obj_dibujado),a
 757  8C36 32 E4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 758  8C39              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 759  8C39              ; 														; _de la entidad.
 760  8C39 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 761  8C3C              ;														; Obj_dibujado="0".
 762  8C3C              ; Movemos Entidades malignas.
 763  8C3C
 764  8C3C              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 765  8C3C              ;	and a 												; _a movernos. (Limitador_de_entidades).
 766  8C3C              ;	ret z
 767  8C3C
 768  8C3C CD 40 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 769  8C3F
 770  8C3F 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 771  8C42 CB 67        	bit 4,a
 772  8C44 C8           	ret z
 773  8C45
 774  8C45              ; Ha habido desplazamiento de la entidad maligna.
 775  8C45              ; Ha llegado a zona de AMADEUS ???
 776  8C45
 777  8C45 3A BD 89     	ld a,(Coordenada_y)
 778  8C48 FE 14        	cp $14
 779  8C4A D4 BD 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 780  8C4D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 781  8C4D              ; ---------
 782  8C4D
 783  8C4D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 784  8C4F 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 785  8C52 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 786  8C55 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 787  8C58 CD 8B 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 788  8C5B C9           3 ret													; _de la misma.
 789  8C5C
 790  8C5C              ; --------------------------------------------------------------------------------------------------------------
 791  8C5C              ;
 792  8C5C              ;	29/1/23
 793  8C5C
 794  8C5C              Mov_Amadeus
 795  8C5C
 796  8C5C AF           	xor a
 797  8C5D 32 E5 89     	ld (Obj_dibujado),a
 798  8C60 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 799  8C63              ;														; Obj_dibujado="0".
 800  8C63              ; Movemos Amadeus.
 801  8C63
 802  8C63 CD 75 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 803  8C66 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 804  8C69 CB 67        	bit 4,a
 805  8C6B C8           	ret z
 806  8C6C
 807  8C6C              ; ---------
 808  8C6C
 809  8C6C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 810  8C6E 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 811  8C71 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 812  8C74 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 813  8C77 CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 814  8C7A C9           	ret													; _de la nave.
 815  8C7B
 816  8C7B              ; -----------------------------------------------------------------------------------
 817  8C7B
 818  8C7B CD 8E 8D     Inicia_entidad	call Inicia_Puntero_objeto
 819  8C7E CD F4 99     	call Recompone_posicion_inicio
 820  8C81 CD 16 94     	call Draw
 821  8C84 CD A0 7F     	call Guarda_foto_registros
 822  8C87 CD D6 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 823  8C8A C9           	ret
 824  8C8B
 825  8C8B              ; --------------------------------------------------------------------------------------------------------------
 826  8C8B              ;
 827  8C8B              ;	31/01/23
 828  8C8B              ;
 829  8C8B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 830  8C8B
 831  8C8B              Guarda_foto_entidad_a_borrar
 832  8C8B
 833  8C8B CD FA 96     	call Prepara_draw
 834  8C8E CD 2A 96     	call calcula_CColumnass
 835  8C91 CD 61 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 836  8C94 CD C0 96     	call Define_rutina_de_impresion
 837  8C97 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 838  8C9A C9           	ret
 839  8C9B
 840  8C9B              ; --------------------------------------------------------------------------------------------------------------
 841  8C9B              ;
 842  8C9B              ;	31/01/23
 843  8C9B              ;
 844  8C9B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 845  8C9B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 846  8C9B
 847  8C9B              Guarda_foto_entidad_a_pintar
 848  8C9B
 849  8C9B CD C8 8C     	call Repone_pintar
 850  8C9E CD 16 94     	call Draw
 851  8CA1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 852  8CA4 C9           	ret
 853  8CA5
 854  8CA5              ; --------------------------------------------------------------------------------------------------------------
 855  8CA5              ;
 856  8CA5              ;
 857  8CA5
 858  8CA5 21 B6 89     Prepara_var_pintado_borrado	ld hl,Filas
 859  8CA8 3A E5 89     	ld a,(Obj_dibujado)
 860  8CAB A7           	and a
 861  8CAC 28 05        	jr z,1F
 862  8CAE 11 DA 89     	ld de,Variables_de_pintado
 863  8CB1 18 03        	jr 2F
 864  8CB3 11 D0 89     1 ld de,Variables_de_borrado
 865  8CB6 01 08 00     2 ld bc,8
 866  8CB9 ED B0        	ldir
 867  8CBB C9           	ret
 868  8CBC
 869  8CBC              ; --------------------------------------------------------------------------------------------------------------
 870  8CBC
 871  8CBC 21 D0 89     Repone_borrar ld hl,Variables_de_borrado
 872  8CBF 11 B6 89     	ld de,Filas
 873  8CC2 01 08 00     	ld bc,8
 874  8CC5 ED B0        	ldir
 875  8CC7 C9           	ret
 876  8CC8
 877  8CC8 21 DA 89     Repone_pintar ld hl,Variables_de_pintado
 878  8CCB 11 B6 89     	ld de,Filas
 879  8CCE 01 08 00     	ld bc,8
 880  8CD1 ED B0        	ldir
 881  8CD3 C9           	ret
 882  8CD4
 883  8CD4              ; *************************************************************************************************************************************************************
 884  8CD4              ;
 885  8CD4              ; 8/1/23
 886  8CD4              ;
 887  8CD4              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 888  8CD4              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 889  8CD4              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 890  8CD4
 891  8CD4              ; Destruye HL y DE !!!!!
 892  8CD4
 893  8CD4              Inicia_punteros_de_cajas
 894  8CD4
 895  8CD4 21 8C 85     	ld hl,Indice_de_cajas
 896  8CD7 CD 88 8D         call Extrae_address
 897  8CDA 22 FC 89         ld (Puntero_store_caja),hl
 898  8CDD 21 8E 85     	ld hl,Indice_de_cajas+2
 899  8CE0 22 00 8A     	ld (Indice_restore_caja),hl
 900  8CE3 CD 88 8D     	call Extrae_address
 901  8CE6 22 FE 89     	ld (Puntero_restore_caja),hl
 902  8CE9 C9               ret
 903  8CEA
 904  8CEA              ; ---------------------------------------------------------------
 905  8CEA              ;
 906  8CEA              ;	9/8/23
 907  8CEA              ;
 908  8CEA              ;	Inicialización y gestión de álbumes de fotos y cajas.
 909  8CEA
 910  8CEA              Inicia_punteros_de_albumes_y_malotes
 911  8CEA
 912  8CEA 21 EC 84     	ld hl,Indice_album_de_fotos
 913  8CED 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 914  8CF0 CD 88 8D     	call Extrae_address
 915  8CF3 22 0E 8A     	ld (Stack_snapshot),hl
 916  8CF6
 917  8CF6 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 918  8CF9 22 24 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 919  8CFC CD 88 8D     	call Extrae_address
 920  8CFF 22 10 8A     	ld (Stack_snapshot_disparos),hl
 921  8D02
 922  8D02 21 FC 84     	ld hl,Indice_End_Snapshot
 923  8D05 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 924  8D08 CD 88 8D     	call Extrae_address
 925  8D0B 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 926  8D0E
 927  8D0E 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 928  8D11 22 28 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 929  8D14 CD 88 8D     	call Extrae_address
 930  8D17 22 2C 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 931  8D1A
 932  8D1A C9           	ret
 933  8D1B
 934  8D1B              ;	12/8/23
 935  8D1B
 936  8D1B              Avanza_puntero_de_album_de_fotos_y_malotes
 937  8D1B
 938  8D1B              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 939  8D1B
 940  8D1B              ; Estamos en el último álbum del índice???.
 941  8D1B
 942  8D1B 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
 943  8D1E 01 F2 84     	ld bc,Indice_album_de_fotos+6
 944  8D21 A7           	and a
 945  8D22 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 946  8D24 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 947  8D26
 948  8D26 21 F9 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 949  8D29 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 950  8D2B 76           	halt
 951  8D2C C9           	ret
 952  8D2D
 953  8D2D 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 954  8D30 23           	inc hl
 955  8D31 23           	inc hl
 956  8D32 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 957  8D35 CD 88 8D     	call Extrae_address
 958  8D38 22 0E 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 959  8D3B
 960  8D3B 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
 961  8D3E 23           	inc hl
 962  8D3F 23           	inc hl
 963  8D40 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 964  8D43 CD 88 8D     	call Extrae_address
 965  8D46 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 966  8D49
 967  8D49 C9           	ret
 968  8D4A
 969  8D4A              ; *************************************************************************************************************************************************************
 970  8D4A              ;
 971  8D4A              ; 8/1/23
 972  8D4A              ;
 973  8D4A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 974  8D4A
 975  8D4A 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 976  8D4D 22 2F 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 977  8D50 C9           	ret
 978  8D51 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 979  8D54 22 31 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 980  8D57 C9           	ret
 981  8D58
 982  8D58              ; -------------------------------------------------------------------------------------------------------------
 983  8D58              ;
 984  8D58              ; 3/8/23
 985  8D58              ;
 986  8D58
 987  8D58              Calcula_numero_de_malotes
 988  8D58
 989  8D58 21 00 70     	ld hl,Album_de_fotos
 990  8D5B EB           	ex de,hl
 991  8D5C 2A 12 8A     	ld hl,(End_Snapshot)
 992  8D5F
 993  8D5F 06 00        	ld b,0
 994  8D61 7D           	ld a,l
 995  8D62 93           	sub e
 996  8D63 28 07        	jr z,1F
 997  8D65
 998  8D65              ; Nº de malotes no es "0".
 999  8D65
1000  8D65 D6 06        2 sub 6
1001  8D67 04           	inc b
1002  8D68 A7           	and a
1003  8D69 20 FA        	jr nz,2B
1004  8D6B 78           	ld a,b
1005  8D6C
1006  8D6C 32 05 8A     1 ld (Numero_de_malotes),a
1007  8D6F C9           	ret
1008  8D70
1009  8D70              ; -------------------------------------------------------------------------------------------------------------
1010  8D70              ;
1011  8D70              ; 28/2/23
1012  8D70              ;
1013  8D70
1014  8D70              Calcula_numero_de_disparotes
1015  8D70
1016  8D70 21 0D 72     	ld hl,Album_de_fotos_disparos
1017  8D73 EB           	ex de,hl
1018  8D74 2A 2C 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1019  8D77
1020  8D77 06 00        	ld b,0
1021  8D79 7D           	ld a,l
1022  8D7A 93           	sub e
1023  8D7B 28 07        	jr z,1F
1024  8D7D
1025  8D7D              ; Nº de malotes no es "0".
1026  8D7D
1027  8D7D D6 06        2 sub 6
1028  8D7F 04           	inc b
1029  8D80 A7           	and a
1030  8D81 20 FA        	jr nz,2B
1031  8D83 78           	ld a,b
1032  8D84
1033  8D84 32 2E 8A     1 ld (Numero_de_disparotes),a
1034  8D87 C9           	ret
1035  8D88
1036  8D88              ; *************************************************************************************************************************************************************
1037  8D88              ;
1038  8D88              ; 20/10/22
1039  8D88              ;
1040  8D88              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1041  8D88              ;
1042  8D88              ; Destruye el puntero y DE !!!!!
1043  8D88
1044  8D88 5E           Extrae_address ld e,(hl)
1045  8D89 23           	inc hl
1046  8D8A 56           	ld d,(hl)
1047  8D8B 2B           	dec hl
1048  8D8C EB           	ex de,hl
1049  8D8D C9           	ret
1050  8D8E
1051  8D8E              ; *************************************************************************************************************************************************************
1052  8D8E              ;
1053  8D8E              ;	7/2/23
1054  8D8E              ;
1055  8D8E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1056  8D8E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1057  8D8E              ;
1058  8D8E              ;   Destruye HL y BC !!!!!,
1059  8D8E              ;
1060  8D8E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1061  8D8E              ;					"0" ..... Izquierda.
1062  8D8E
1063  8D8E              Inicia_Puntero_objeto
1064  8D8E
1065  8D8E 3A CA 89     	ld a,(Cuad_objeto)
1066  8D91 E6 01        	and 1
1067  8D93 F5           	push af
1068  8D94 CC B2 8D     	call z,Inicia_puntero_objeto_izq
1069  8D97 F1           	pop af
1070  8D98 28 2B        	jr z,1F
1071  8D9A CD 9F 8D     	call Inicia_puntero_objeto_der
1072  8D9D 18 26        	jr 1F
1073  8D9F
1074  8D9F              ; Arrancamos desde la parte izquierda de la pantalla.
1075  8D9F              ; Iniciamos (Indice_Sprite_der).
1076  8D9F
1077  8D9F 2A C0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1078  8DA2 22 C4 89     	ld (Puntero_DESPLZ_der),hl
1079  8DA5 CD 88 8D     	call Extrae_address
1080  8DA8 22 BA 89     	ld (Puntero_objeto),hl
1081  8DAB
1082  8DAB 2A C2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1083  8DAE 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1084  8DB1 C9           	ret
1085  8DB2
1086  8DB2              ; Arrancamos desde la parte derecha de la pantalla.
1087  8DB2              ; Iniciamos (Indice_Sprite_izq).
1088  8DB2
1089  8DB2 2A C2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1090  8DB5 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1091  8DB8 CD 88 8D     	call Extrae_address
1092  8DBB 22 BA 89     	ld (Puntero_objeto),hl
1093  8DBE
1094  8DBE 2A C0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1095  8DC1 22 C4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1096  8DC4 C9           	ret
1097  8DC5
1098  8DC5              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1099  8DC5
1100  8DC5 21 40 83     1 ld hl,Amadeus
1101  8DC8 ED 4B BA 89  	ld bc,(Puntero_objeto)
1102  8DCC B7 ED 42     	sub hl,bc
1103  8DCF C0           	ret nz
1104  8DD0 21 E4 89     	ld hl,Ctrl_0
1105  8DD3 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1106  8DD5 C9           	ret 												; _de nuestra nave en los extremos.
1107  8DD6
1108  8DD6              ; *************************************************************************************************************************************************************
1109  8DD6              ;
1110  8DD6              ;	14/5/23
1111  8DD6              ;
1112  8DD6              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1113  8DD6              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1114  8DD6
1115  8DD6              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1116  8DD6              ;	_de la 2ª y 3ª entidad respectivamente.
1117  8DD6
1118  8DD6              Store_Restore_cajas
1119  8DD6
1120  8DD6 E5           	push hl
1121  8DD7 D5           	push de
1122  8DD8 C5            	push bc
1123  8DD9
1124  8DD9              ;	STORE !!!!!
1125  8DD9              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1126  8DD9
1127  8DD9 21 B6 89     	ld hl,Filas
1128  8DDC ED 5B FC 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1129  8DE0 01 43 00     	ld bc,67
1130  8DE3 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1131  8DE5
1132  8DE5              ; 	Entidad_sospechosa. 20/4/23
1133  8DE5
1134  8DE5 3A CF 89     	ld a,(Impacto)
1135  8DE8 A7           	and a
1136  8DE9 28 0C        	jr z,1F
1137  8DEB
1138  8DEB 2A FC 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1139  8DEE 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1140  8DF1 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1141  8DF2 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1142  8DF4 22 34 8A     	ld (Entidad_sospechosa_de_colision),hl
1143  8DF7
1144  8DF7              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1145  8DF7
1146  8DF7 2A FE 89     1 ld hl,(Puntero_restore_caja)
1147  8DFA 7E           	ld a,(hl)
1148  8DFB A7           	and a
1149  8DFC F5           	push af
1150  8DFD 28 08        	jr z,2F
1151  8DFF
1152  8DFF 11 B6 89     	ld de,Filas
1153  8E02 01 43 00     	ld bc,67
1154  8E05 ED B0        	ldir
1155  8E07
1156  8E07 CD 23 8E     2 call Incrementa_punteros_de_cajas
1157  8E0A F1           	pop af
1158  8E0B 28 EA        	jr z,1B
1159  8E0D
1160  8E0D C1           	pop bc
1161  8E0E D1           	pop de
1162  8E0F E1           	pop hl
1163  8E10
1164  8E10 C9           	ret
1165  8E11
1166  8E11              ; **************************************************************************************************
1167  8E11              ;
1168  8E11              ;	12/05/23
1169  8E11              ;
1170  8E11              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1171  8E11
1172  8E11 E5           Restore_entidad push hl
1173  8E12 D5           	push de
1174  8E13 C5            	push bc
1175  8E14
1176  8E14 2A FC 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1177  8E17 11 B6 89     	ld de,Filas
1178  8E1A 01 43 00     	ld bc,67
1179  8E1D ED B0        	ldir
1180  8E1F
1181  8E1F C1           	pop bc
1182  8E20 D1           	pop de
1183  8E21 E1           	pop hl
1184  8E22 C9           	ret
1185  8E23
1186  8E23
1187  8E23              ; **************************************************************************************************
1188  8E23              ;
1189  8E23              ;	08/05/23
1190  8E23              ;
1191  8E23              ;	Incrementamos los dos punteros de entidades. (+1).
1192  8E23
1193  8E23 2A FE 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1194  8E26 22 FC 89     	ld (Puntero_store_caja),hl
1195  8E29 2A 00 8A     	ld hl,(Indice_restore_caja)
1196  8E2C 23           	inc hl
1197  8E2D 23           	inc hl
1198  8E2E 22 00 8A     	ld (Indice_restore_caja),hl
1199  8E31 CD 88 8D         call Extrae_address
1200  8E34 22 FE 89         ld (Puntero_restore_caja),hl
1201  8E37 C9               ret
1202  8E38
1203  8E38              ; **************************************************************************************************
1204  8E38              ;
1205  8E38              ;	25/01/23
1206  8E38              ;
1207  8E38              ;	Restore_Amadeus
1208  8E38              ;
1209  8E38              ;	Cargamos en DRAW los parámetros de Amadeus.
1210  8E38              ;
1211  8E38
1212  8E38 E5           Restore_Amadeus	push hl
1213  8E39 D5           	push de
1214  8E3A C5            	push bc
1215  8E3B 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1216  8E3E 11 B6 89     	ld de,Filas
1217  8E41 01 43 00     	ld bc,67
1218  8E44 ED B0        	ldir
1219  8E46 C1           	pop bc
1220  8E47 D1           	pop de
1221  8E48 E1           	pop hl
1222  8E49 C9           	ret
1223  8E4A
1224  8E4A              ; *************************************************************************************************************************************************************
1225  8E4A              ;
1226  8E4A              ;	29/04/23
1227  8E4A              ;
1228  8E4A              ;	Store_Amadeus
1229  8E4A              ;
1230  8E4A              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1231  8E4A              ;
1232  8E4A              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1233  8E4A              ;
1234  8E4A              ;	DESTRUYE: HL y BC y DE.
1235  8E4A
1236  8E4A 21 B6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1237  8E4D 01 43 00     	ld bc,67
1238  8E50 ED B0        	ldir
1239  8E52 C9           	ret
1240  8E53
1241  8E53              ; -----------------------------------------------------------
1242  8E53              ;
1243  8E53              ;	27/04/23
1244  8E53              ;
1245  8E53              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1246  8E53              ;
1247  8E53              ;	Destruye: HL,BC,DE,A
1248  8E53
1249  8E53 21 B6 89     Borra_datos_entidad ld hl,Filas
1250  8E56 01 42 00     	ld bc,66
1251  8E59 AF           	xor a
1252  8E5A 77           	ld (hl),a
1253  8E5B 11 B7 89     	ld de,Filas+1
1254  8E5E ED B0        	ldir
1255  8E60 C9           	ret
1256  8E61
1257  8E61              ; -----------------------------------------------------------
1258  8E61
1259  8E61              ; Teclado.
1260  8E61
1261  8E61 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1262  8E63 DB FE        	in a,($fe)
1263  8E65 E6 01        	and $01
1264  8E67 28 02        	jr z,1f
1265  8E69 18 F6        	jr Pulsa_ENTER
1266  8E6B C9           1 ret
1267  8E6C
1268  8E6C              ; **************************************************************************************************
1269  8E6C              ;
1270  8E6C              ; Temporización.
1271  8E6C
1272  8E6C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1273  8E6C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1274  8E6C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1275  8E6C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1276  8E6C
1277  8E6C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1278  8E6C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1279  8E6C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1280  8E6C
1281  8E6C              ; A partir de $4f61 no hace falta DELAY.
1282  8E6C
1283  8E6C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1284  8E6C
1285  8E6C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1286  8E6F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1287  8E70 78           	LD A,B
1288  8E71 A7           	AND A
1289  8E72 20 FB        	JR NZ,wait
1290  8E74 C9           	RET
1291  8E75
1292  8E75              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1293  8E75              ;
1294  8E75              ;	5/3/23
1295  8E75              ;
1296  8E75              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1297  8E75
1298  8E75              Movimiento_Amadeus
1299  8E75
1300  8E75              ; Disparo.
1301  8E75
1302  8E75 3A 46 8A     	ld a,(Disparo_Amadeus)
1303  8E78 A7           	and a
1304  8E79 20 02        	jr nz,1F
1305  8E7B 18 15        	jr 2F
1306  8E7D
1307  8E7D 3E F7        1 ld a,$f7													; "5" para disparar.
1308  8E7F DB FE        	in a,($fe)
1309  8E81 E6 10        	and $10
1310  8E83
1311  8E83 F5           	push af
1312  8E84 CC 20 8F     	call z,Genera_disparo
1313  8E87 F1           	pop af
1314  8E88 20 08        	jr nz,2F
1315  8E8A
1316  8E8A 3A 46 8A     	ld a,(Disparo_Amadeus)
1317  8E8D EE 01        	xor 1
1318  8E8F 32 46 8A     	ld (Disparo_Amadeus),a
1319  8E92
1320  8E92 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1321  8E94 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1322  8E96 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1323  8E98 CC AE 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1324  8E9B 3E F7        	ld a,$f7
1325  8E9D DB FE        	in a,($fe)
1326  8E9F E6 01        	and $01
1327  8EA1 C8           	ret z
1328  8EA2
1329  8EA2 3E F7        	ld a,$f7
1330  8EA4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1331  8EA6 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1332  8EA8 CC 90 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1333  8EAB C9           	ret
1334  8EAC
1335  8EAC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1336  8EAC              ;
1337  8EAC              ;	Rutina provisional para que los malotes cagen balas.
1338  8EAC
1339  8EAC              Detecta_disparo_entidad
1340  8EAC
1341  8EAC 3A 49 8A     	ld a,(Disparo_entidad)
1342  8EAF A7           	and a
1343  8EB0 C8           	ret z
1344  8EB1
1345  8EB1              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1346  8EB1
1347  8EB1              ;	ld a,$7f				; Detecta SPACE.
1348  8EB1              ;	in a,($fe)
1349  8EB1              ;	and 1
1350  8EB1              ;	ret nz
1351  8EB1
1352  8EB1              ;	call Genera_disparo
1353  8EB1 C9           	ret
1354  8EB2
1355  8EB2              ; ----------------------------------------------------------------------
1356  8EB2              ;
1357  8EB2              ;	11/8/23
1358  8EB2
1359  8EB2              Frame
1360  8EB2
1361  8EB2              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1362  8EB2              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1363  8EB2
1364  8EB2              ; PINTAMOS.
1365  8EB2
1366  8EB2 F5           	push af
1367  8EB3 C5           	push bc
1368  8EB4 D5           	push de
1369  8EB5 E5           	push hl
1370  8EB6
1371  8EB6 3E 02            ld a,2
1372  8EB8 D3 FE            out ($fe),a											; Rojo.
1373  8EBA
1374  8EBA              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1375  8EBA              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1376  8EBA
1377  8EBA              ;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1378  8EBA
1379  8EBA 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1380  8EBD 01 EC 84     	ld bc,Indice_album_de_fotos
1381  8EC0 A7           	and a
1382  8EC1 ED 42        	sbc hl,bc
1383  8EC3 28 FE        	jr z,$
1384  8EC5
1385  8EC5 CD 58 8D     	call Calcula_numero_de_malotes
1386  8EC8
1387  8EC8              ;;! debuggg !!!
1388  8EC8              ;	ld a,(Contador_de_frames_2)
1389  8EC8              ;	cp 1
1390  8EC8              ;	jr nz,4F
1391  8EC8              ;	ld a,(Contador_de_frames)
1392  8EC8              ;	cp $5b 		; Último FRAME estable, a partir de aquí hay que hacer seguimiento.	$5d.
1393  8EC8              ;	jr z,$
1394  8EC8              ;	jr nc,$
1395  8EC8              ;	ld hl,(Stack_snapshot)
1396  8EC8              ;;! debuggg !!!;
1397  8EC8
1398  8EC8 CD 24 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1399  8ECB              ;	call Extrae_foto_disparos
1400  8ECB 3E 01            ld a,1
1401  8ECD D3 FE            out ($fe),a											; Azul.
1402  8ECF
1403  8ECF              ; 	Gestiona los álbumes de fotos.
1404  8ECF
1405  8ECF CD 6E 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1406  8ED2 CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1407  8ED5
1408  8ED5              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1409  8ED5
1410  8ED5 3A F9 89     	ld a,(Ctrl_1)
1411  8ED8 CB 6F        	bit 5,a
1412  8EDA 20 24        	jr nz,1F
1413  8EDC
1414  8EDC              ; No hemos terminado de guardar el último FRAME.
1415  8EDC
1416  8EDC 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1417  8EDF              ;	ld bc,Indice_album_de_fotos
1418  8EDF 2B           	dec hl
1419  8EE0 2B           	dec hl
1420  8EE1
1421  8EE1              ;	ld a,l
1422  8EE1              ;	sub c
1423  8EE1
1424  8EE1              ;	jr z,$
1425  8EE1
1426  8EE1 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
1427  8EE4
1428  8EE4
1429  8EE4 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
1430  8EE7 2B           	dec hl
1431  8EE8 2B           	dec hl
1432  8EE9 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
1433  8EEC CD 88 8D     	call Extrae_address
1434  8EEF 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
1435  8EF2
1436  8EF2 CD 88 8D     	call Extrae_address
1437  8EF5
1438  8EF5              ; Esta vacío este album???
1439  8EF5
1440  8EF5 24           	inc h
1441  8EF6 25           	dec h
1442  8EF7 20 02        	jr nz,5F
1443  8EF9
1444  8EF9              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1445  8EF9
1446  8EF9 18 05        	jr 1F
1447  8EFB
1448  8EFB 22 0E 8A     5 ld (Stack_snapshot),hl
1449  8EFE 18 09        	jr 2F
1450  8F00
1451  8F00              ; FRAME completo.
1452  8F00
1453  8F00 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1454  8F03 CD 88 8D     	call Extrae_address
1455  8F06 22 0E 8A     	ld (Stack_snapshot),hl
1456  8F09
1457  8F09              ;	En este punto:
1458  8F09
1459  8F09              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1460  8F09              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1461  8F09
1462  8F09              ; RELOJES.
1463  8F09
1464  8F09 21 41 8A     2 ld hl,Contador_de_frames
1465  8F0C 7E           	ld a,(hl)
1466  8F0D FE FF        	cp $ff
1467  8F0F 20 04        	jr nz,3F
1468  8F11 34           	inc (hl)
1469  8F12
1470  8F12 21 42 8A     	ld hl,Contador_de_frames_2
1471  8F15 34           3 inc (hl)											; 0 - 255
1472  8F16
1473  8F16 21 F9 89     6 ld hl,Ctrl_1									; Restauramos balizas de buffer.
1474  8F19 CB AE        	res 5,(hl)
1475  8F1B
1476  8F1B              ;	call Calcula_numero_de_malotes
1477  8F1B
1478  8F1B E1           	pop hl
1479  8F1C D1           	pop de
1480  8F1D C1           	pop bc
1481  8F1E F1           	pop af
1482  8F1F
1483  8F1F C9           	ret
1484  8F20
1485  8F20              ; ---------------------------------------------------------------
1486  8F20
1487  8F20              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F20              ; ******************************************************************************************************************************************************************************************
   2+ 8F20              ;
   3+ 8F20              ;   21/07/23
   4+ 8F20              ;
   5+ 8F20              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F20              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F20              ;
   8+ 8F20              ;
   9+ 8F20              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F20              ;
  11+ 8F20              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F20              ;               _ hacen las entidades hacia abajo.
  13+ 8F20              ;
  14+ 8F20              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F20              ;
  16+ 8F20              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F20              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F20              ;
  19+ 8F20              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F20              ;           _ la bala.
  21+ 8F20              ;
  22+ 8F20              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F20              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F20              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F20              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F20              ;           _ en el momento de generarse la bala)).
  27+ 8F20
  28+ 8F20              Genera_disparo
  29+ 8F20
  30+ 8F20              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F20              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F20              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F20              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F20              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F20              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F20              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F20
  38+ 8F20              ; Exclusiones:
  39+ 8F20
  40+ 8F20 3A CE 89         ld a,(Vel_down)
  41+ 8F23 47               ld b,a
  42+ 8F24 3A 40 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F27 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F28 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F29 3A F3 89         ld a,(Columnas)
  46+ 8F2C 47               ld b,a
  47+ 8F2D 3A B7 89         ld a,(Columns)
  48+ 8F30 B8               cp b
  49+ 8F31 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F32
  51+ 8F32              ; ----- ----- -----
  52+ 8F32
  53+ 8F32 3A E4 89         ld a,(Ctrl_0)
  54+ 8F35 CB 77            bit 6,a
  55+ 8F37 20 06            jr nz,14F
  56+ 8F39
  57+ 8F39 3A BD 89         ld a,(Coordenada_y)
  58+ 8F3C FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F3E D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F3F
  61+ 8F3F 21 00 80     14 ld hl,Indice_disparo
  62+ 8F42 3A BE 89         ld a,(CTRL_DESPLZ)
  63+ 8F45 4F               ld c,a
  64+ 8F46 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F48              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F48              ;                                            ""        ""       "f9", B="1"
  67+ 8F48              ;                                            ""        ""       "fb", B="2"
  68+ 8F48              ;                                            ""        ""       "fb", B="3"
  69+ 8F48 A7               and a
  70+ 8F49 28 10            jr z,1F
  71+ 8F4B E6 01            and 1
  72+ 8F4D C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F4E
  74+ 8F4E 79               ld a,c
  75+ 8F4F 16 F9            ld d,$f9
  76+ 8F51 23           2 inc hl
  77+ 8F52 23               inc hl
  78+ 8F53 04               inc b
  79+ 8F54 BA               cp d
  80+ 8F55 28 04            jr z,1F
  81+ 8F57 14               inc d
  82+ 8F58 14               inc d
  83+ 8F59 18 F6            jr 2B
  84+ 8F5B
  85+ 8F5B CD 88 8D     1 call Extrae_address
  86+ 8F5E E5               push hl
  87+ 8F5F FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F61 DD 21 A9 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F65
  90+ 8F65              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F65              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F65
  93+ 8F65 3A E4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F68 CB 77            bit 6,a
  95+ 8F6A 20 04            jr nz,19F
  96+ 8F6C
  97+ 8F6C AF               xor a
  98+ 8F6D 32 49 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F70
 100+ 8F70 3A CA 89     19 ld a,(Cuad_objeto)
 101+ 8F73 FE 02            cp 2
 102+ 8F75 38 66            jr c,3F
 103+ 8F77 28 64            jr z,3F
 104+ 8F79
 105+ 8F79              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F79
 107+ 8F79 E6 01            and 1
 108+ 8F7B 28 30            jr z,4F
 109+ 8F7D
 110+ 8F7D              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F7D              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F7D              ;
 113+ 8F7D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F7D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F7D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F7D
 117+ 8F7D 2A B8 89     	ld hl,(Posicion_actual)
 118+ 8F80
 119+ 8F80              ;   Amadeus o entidad ???.
 120+ 8F80
 121+ 8F80 3A E4 89         ld a,(Ctrl_0)
 122+ 8F83 CB 77            bit 6,a
 123+ 8F85 28 0A            jr z,8F
 124+ 8F87
 125+ 8F87              ; 	Dispara Amadeus.
 126+ 8F87
 127+ 8F87 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F89 CD 15 97         call PreviousScan
 129+ 8F8C CD 15 97         call PreviousScan
 130+ 8F8F
 131+ 8F8F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F8F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F8F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F8F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F8F
 136+ 8F8F 18 11            jr 10F
 137+ 8F91
 138+ 8F91              ; 	Dispara Entidad.
 139+ 8F91
 140+ 8F91 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F94              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F94
 143+ 8F94              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F94              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F94
 146+ 8F94 C5               push bc
 147+ 8F95 06 10            ld b,16
 148+ 8F97 CD 06 97     9 call NextScan
 149+ 8F9A 10 FB            djnz 9B
 150+ 8F9C C1               pop bc
 151+ 8F9D CD 07 90         call Ajusta_disparo_parte_izquierda
 152+ 8FA0 18 06            jr 17F
 153+ 8FA2
 154+ 8FA2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FA2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FA2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FA2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FA2
 159+ 8FA2 CD 07 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FA5 CD 7C 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FA8              ;                                                      ; _al generar el disparo.
 162+ 8FA8
 163+ 8FA8              ; 	LLegados a este punto tendremos:
 164+ 8FA8              ;
 165+ 8FA8              ;       Puntero_objeto_disparo en IY.
 166+ 8FA8              ;       Rutinas_de_impresion en IX.
 167+ 8FA8              ;       Puntero_de_impresion en HL.
 168+ 8FA8              ;       Impacto/Dirección en BC.
 169+ 8FA8
 170+ 8FA8 CD 0F 90     17 call Almacena_disparo
 171+ 8FAB 18 52            jr 6F                                             ; RET.
 172+ 8FAD
 173+ 8FAD              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FAD              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FAD              ;
 176+ 8FAD              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FAD              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FAD              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FAD
 180+ 8FAD 2A B8 89     4 ld hl,(Posicion_actual)
 181+ 8FB0
 182+ 8FB0              ;   Amadeus o entidad ???.
 183+ 8FB0
 184+ 8FB0 3A E4 89         ld a,(Ctrl_0)
 185+ 8FB3 CB 77            bit 6,a
 186+ 8FB5 28 0A            jr z,11F
 187+ 8FB7
 188+ 8FB7              ; 	Dispara Amadeus.
 189+ 8FB7
 190+ 8FB7 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FB9 CD 15 97         call PreviousScan
 192+ 8FBC CD 15 97         call PreviousScan
 193+ 8FBF
 194+ 8FBF              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FBF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FBF              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FBF              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FBF
 199+ 8FBF 18 11            jr 13F
 200+ 8FC1
 201+ 8FC1              ; 	Dispara Entidad.
 202+ 8FC1
 203+ 8FC1 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FC4              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FC4
 206+ 8FC4              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FC4              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FC4
 209+ 8FC4 C5               push bc
 210+ 8FC5 06 10            ld b,16
 211+ 8FC7 CD 06 97     12 call NextScan
 212+ 8FCA 10 FB            djnz 12B
 213+ 8FCC C1               pop bc
 214+ 8FCD
 215+ 8FCD CD 00 90         call Ajusta_disparo_parte_derecha
 216+ 8FD0 18 06            jr 18F
 217+ 8FD2
 218+ 8FD2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FD2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FD2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FD2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FD2
 223+ 8FD2 CD 00 90     13 call Ajusta_disparo_parte_derecha
 224+ 8FD5 CD 7C 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FD8              ;                                                       ; _al generar el disparo.
 226+ 8FD8
 227+ 8FD8              ; LLegados a este punto tendremos:
 228+ 8FD8              ;
 229+ 8FD8              ;       Puntero_objeto_disparo en IY.
 230+ 8FD8              ;       Rutinas_de_impresion en IX.
 231+ 8FD8              ;       Puntero_de_impresion en HL.
 232+ 8FD8              ;       Impacto/Dirección en BC.
 233+ 8FD8
 234+ 8FD8 CD 0F 90     18 call Almacena_disparo
 235+ 8FDB 18 22            jr 6F                                               ; RET.
 236+ 8FDD
 237+ 8FDD              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FDD
 239+ 8FDD 28 11        3 jr z,5F
 240+ 8FDF
 241+ 8FDF              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FDF              ;
 243+ 8FDF              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FDF              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FDF              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FDF              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FDF
 248+ 8FDF              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FDF              ;	   ""        ""       "f9", B="1"
 250+ 8FDF              ;	   ""        ""       "fb", B="2"
 251+ 8FDF              ; 	   ""        ""       "fb", B="3"
 252+ 8FDF
 253+ 8FDF 2A B8 89     	ld hl,(Posicion_actual)
 254+ 8FE2 CD 06 97     	call NextScan
 255+ 8FE5
 256+ 8FE5              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FE5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FE5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FE5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FE5
 261+ 8FE5 CD 07 90         call Ajusta_disparo_parte_izquierda
 262+ 8FE8
 263+ 8FE8              ; 	No se produce impacto. B="$80"
 264+ 8FE8              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FE8
 266+ 8FE8 01 80 80         ld bc,$8080
 267+ 8FEB
 268+ 8FEB              ; 	LLegados a este punto tendremos:
 269+ 8FEB              ;
 270+ 8FEB              ;       Puntero_objeto_disparo en IY.
 271+ 8FEB              ;       Rutinas_de_impresion en IX.
 272+ 8FEB              ;       Puntero_de_impresion en HL.
 273+ 8FEB              ;       Impacto/Dirección en BC.
 274+ 8FEB
 275+ 8FEB CD 0F 90         call Almacena_disparo
 276+ 8FEE 18 0F            jr 6F                                           ; RET.
 277+ 8FF0
 278+ 8FF0              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FF0              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FF0              ;
 281+ 8FF0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FF0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FF0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FF0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FF0
 286+ 8FF0 2A B8 89     5 ld hl,(Posicion_actual)
 287+ 8FF3 CD 06 97     	call NextScan
 288+ 8FF6
 289+ 8FF6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FF6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FF6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FF6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FF6
 294+ 8FF6 CD 00 90         call Ajusta_disparo_parte_derecha
 295+ 8FF9
 296+ 8FF9              ; 	No se produce impacto. B="$80"
 297+ 8FF9              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FF9
 299+ 8FF9 01 80 80     15 ld bc,$8080
 300+ 8FFC
 301+ 8FFC              ; 	LLegados a este punto tendremos:
 302+ 8FFC              ;
 303+ 8FFC              ;       Puntero_objeto_disparo en IY.
 304+ 8FFC              ;       Rutinas_de_impresion en IX.
 305+ 8FFC              ;       Puntero_de_impresion en HL.
 306+ 8FFC              ;       Impacto/Dirección en BC.
 307+ 8FFC
 308+ 8FFC CD 0F 90         call Almacena_disparo
 309+ 8FFF
 310+ 8FFF C9           6 ret
 311+ 9000
 312+ 9000              ; ----------------------------------------------------------------
 313+ 9000              ;
 314+ 9000              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9000              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9000              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9000
 318+ 9000 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9001 FE 02            cp 2
 320+ 9003 38 01            jr c,1F
 321+ 9005 23               inc hl
 322+ 9006 C9           1 ret
 323+ 9007
 324+ 9007 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9008 FE 01        	cp 1
 326+ 900A 20 01        	jr nz,1F
 327+ 900C 2B           	dec hl
 328+ 900D 2B           1 dec hl
 329+ 900E C9               ret
 330+ 900F
 331+ 900F              ; ----------------------------------------------------------------
 332+ 900F              ;
 333+ 900F              ;   25/02/23
 334+ 900F              ;
 335+ 900F              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 900F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 900F              ;
 338+ 900F              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 900F              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 900F
 341+ 900F              Almacena_disparo
 342+ 900F
 343+ 900F E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9010 F1               pop af
 345+ 9011 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9012
 347+ 9012 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9013 E6 01            and 1
 349+ 9015 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9017              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9017              ; 	Dispara AMADEUS.
 352+ 9017
 353+ 9017              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9017              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9017              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9017              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9017
 358+ 9017 C5               push bc
 359+ 9018 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 901B 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 901E A7               and a
 362+ 901F ED 42            sbc hl,bc
 363+ 9021 CC 51 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9024 C1               pop bc
 365+ 9025 28 54            jr z,4F
 366+ 9027
 367+ 9027 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 902A 23               inc hl
 369+ 902B 23               inc hl
 370+ 902C 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 902F              ;                                                   ; _ Disparo_(+1).
 372+ 902F 18 18            jr 2F
 373+ 9031
 374+ 9031              ; Dispara una entidad.
 375+ 9031
 376+ 9031 C5           1 push bc
 377+ 9032 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9035 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9038 A7               and a
 380+ 9039 ED 42            sbc hl,bc
 381+ 903B CC 4A 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 903E C1               pop bc
 383+ 903F 28 3A            jr z,4F
 384+ 9041
 385+ 9041 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9044 23               inc hl
 387+ 9045 23               inc hl
 388+ 9046 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9049              ;                                                   ; _ Disparo_(+1).
 390+ 9049 CD 88 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 904C              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 904C              ;
 393+ 904C              ;                                                     Puntero_objeto_disparo en IY.
 394+ 904C              ;                                                     Rutinas_de_impresion en IX.
 395+ 904C              ;                                                     Puntero_de_impresion en HL.
 396+ 904C              ;                                                     Impacto/Dirección en BC.
 397+ 904C
 398+ 904C 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 904D 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 904E 23               inc hl                                          ; _ al siguiente.
 401+ 904F A7               and a
 402+ 9050 20 C0            jr nz,3B
 403+ 9052
 404+ 9052 08               ex af,af
 405+ 9053 ED 73 0A 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9057 F9               ld sp,hl
 407+ 9058
 408+ 9058 DD E5            push ix                                         ; Rutina de impresión.
 409+ 905A F5               push af                                         ; Puntero de impresión.
 410+ 905B FD E5            push iy                                         ; Puntero objeto.
 411+ 905D C5               push bc                                         ; Control.
 412+ 905E
 413+ 905E ED 7B 0A 8A      ld sp,(Stack)
 414+ 9062
 415+ 9062              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9062
 417+ 9062 21 F9 89     	ld hl,Ctrl_1
 418+ 9065 CB C6        	set 0,(hl)
 419+ 9067
 420+ 9067 DD E5        	push ix
 421+ 9069 E1               pop hl
 422+ 906A F5               push af
 423+ 906B DD E1            pop ix
 424+ 906D
 425+ 906D CD A0 7F     	call Guarda_foto_registros
 426+ 9070
 427+ 9070 21 F9 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9073 CB 86        	res 0,(hl)
 429+ 9075
 430+ 9075              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9075              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9075
 433+ 9075 CD 51 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9078 CD 4A 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 907B
 436+ 907B C9           4 ret
 437+ 907C
 438+ 907C              ; ----------------------------------------------------------------
 439+ 907C              ;
 440+ 907C              ;   4/3/23
 441+ 907C              ;
 442+ 907C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 907C              ;   _ al generarse el disparo.
 444+ 907C              ;
 445+ 907C              ;       "$80" ..... No se produce colisión.
 446+ 907C              ;       "$81" ..... Se produce colisión.
 447+ 907C              ;
 448+ 907C              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 907C              ;         _ que forman el disparo.
 450+ 907C
 451+ 907C
 452+ 907C              Comprueba_Colision
 453+ 907C
 454+ 907C              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 907C
 456+ 907C FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 907E E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 907F
 459+ 907F CD B5 90         call Modifica_H_Velocidad_disparo
 460+ 9082
 461+ 9082 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9083 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9085 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9087
 465+ 9087 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9089 CD A5 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 908C
 468+ 908C 7B               ld a,e
 469+ 908D E6 01            and 1
 470+ 908F 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9091              ;                                                  ; _ para activar IMPACTO.
 472+ 9091 E1               pop hl
 473+ 9092 E5               push hl
 474+ 9093 CD 06 97         call NextScan
 475+ 9096
 476+ 9096 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9097 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9099 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 909B              ;                                                  ; _ 2º scanline si esto es así.
 480+ 909B 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 909D CD A5 90         call Bucle_2
 482+ 90A0
 483+ 90A0 43           1 ld b,e
 484+ 90A1 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90A2 FD E1            pop iy
 486+ 90A4 C9               ret
 487+ 90A5
 488+ 90A5              ; ---------- ----------
 489+ 90A5
 490+ 90A5 06 02        Bucle_2 ld b,2
 491+ 90A7 FD 7E 00     2 ld a,(iy)
 492+ 90AA A6               and (hl)
 493+ 90AB 28 02            jr z,1F
 494+ 90AD 1E 81            ld e,$81
 495+ 90AF 23           1 inc hl
 496+ 90B0 FD 23            inc iy
 497+ 90B2 10 F3            djnz 2B
 498+ 90B4 C9               ret
 499+ 90B5
 500+ 90B5              ; ---------- ----------
 501+ 90B5              ;
 502+ 90B5              ;   21/7/23
 503+ 90B5
 504+ 90B5              Modifica_H_Velocidad_disparo
 505+ 90B5
 506+ 90B5 3A 40 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90B8 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90BA D0               ret nc                                         ; _ incrementamos H.
 509+ 90BB 24               inc h
 510+ 90BC
 511+ 90BC C9               ret
 512+ 90BD
 513+ 90BD              ; -------------------------------------------------------------------------------------------------------------
 514+ 90BD              ;
 515+ 90BD              ;   11/04/23
 516+ 90BD              ;
 517+ 90BD              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90BD              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90BD              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90BD              ;
 521+ 90BD              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90BD
 523+ 90BD              Compara_coordenadas_X
 524+ 90BD
 525+ 90BD              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90BD              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90BD
 528+ 90BD              ; Preparamos registros:
 529+ 90BD
 530+ 90BD 21 BC 89         ld hl,Filas+6
 531+ 90C0 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90C1 23               inc hl
 533+ 90C2 23               inc hl
 534+ 90C3 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90C4 43               ld b,e
 536+ 90C5
 537+ 90C5 21 CA 89         ld hl,Filas+20
 538+ 90C8 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90C9 21 3B 8A         ld hl,Coordenadas_X_Entidad
 540+ 90CC CD E8 92         call Guarda_coordenadas_X
 541+ 90CF
 542+ 90CF              ; Preparamos registros:
 543+ 90CF
 544+ 90CF 21 AA 85         ld hl,Amadeus_db+6
 545+ 90D2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90D3 23               inc hl
 547+ 90D4 23               inc hl
 548+ 90D5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90D6 7B               ld a,e
 550+ 90D7 08               ex af,af'
 551+ 90D8 21 B8 85         ld hl,Amadeus_db+20
 552+ 90DB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90DC 21 38 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90DF CD E8 92         call Guarda_coordenadas_X
 555+ 90E2
 556+ 90E2              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90E2              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90E2
 559+ 90E2 04               inc b
 560+ 90E3 05               dec b
 561+ 90E4 28 04            jr z,1F
 562+ 90E6 06 03            ld b,3
 563+ 90E8 18 02            jr 2F
 564+ 90EA 06 02        1 ld b,2
 565+ 90EC 08           2 ex af,af'
 566+ 90ED 3C               inc a
 567+ 90EE 3D               dec a
 568+ 90EF 28 04            jr z,5F
 569+ 90F1 0E 03            ld c,3
 570+ 90F3 18 02            jr 6F
 571+ 90F5 0E 02        5 ld c,2
 572+ 90F7 79           6 ld a,c
 573+ 90F8 08               ex af,af'
 574+ 90F9 11 3B 8A         ld de,Coordenadas_X_Entidad
 575+ 90FC 1A           4 ld a,(de)
 576+ 90FD 21 38 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9100 BE           3 cp (hl)
 578+ 9101 28 0E            jr z,7F
 579+ 9103 23               inc hl
 580+ 9104 0D               dec c
 581+ 9105 20 F9            jr nz,3B
 582+ 9107 13               inc de
 583+ 9108 08               ex af,af'
 584+ 9109 4F               ld c,a
 585+ 910A 08               ex af,af'
 586+ 910B 10 EF            djnz 4B
 587+ 910D
 588+ 910D              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 910D
 590+ 910D CD 24 93     8 call Limpia_Coordenadas_X
 591+ 9110 C9               ret
 592+ 9111
 593+ 9111 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9113 32 CF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9116 21 33 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9119 CB D6            set 2,(hl)
 597+ 911B 18 F0            jr 8B
 598+ 911D
 599+ 911D              ; -----------------------------------------------------------------------
 600+ 911D              ;
 601+ 911D              ;   17/04/23
 602+ 911D              ;
 603+ 911D
 604+ 911D              Detecta_colision_nave_entidad
 605+ 911D
 606+ 911D              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 911D
 608+ 911D 2A B8 89         ld hl,(Posicion_actual)
 609+ 9120 CD 61 96         call Calcula_puntero_de_impresion
 610+ 9123
 611+ 9123              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9123              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9123
 614+ 9123 DD E5            push ix
 615+ 9125 E1               pop hl
 616+ 9126 E5               push hl
 617+ 9127
 618+ 9127              ; ----- ----- -----
 619+ 9127 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9129 06 0A            ld b,10
 621+ 912B CD 5B 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 912E 7B               ld a,e
 623+ 912F FE 05            cp 5
 624+ 9131 38 0E            jr c,3F
 625+ 9133
 626+ 9133              ; LLegados a este punto:
 627+ 9133              ;
 628+ 9133              ;   HAY COLISIÓN !!!!!.
 629+ 9133              ;
 630+ 9133              ;   .db (Impacto) de Amadeus a "1".
 631+ 9133              ;   SET el bit3 de (Impacto2).
 632+ 9133              ;
 633+ 9133              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9133
 635+ 9133 21 BD 85         ld hl,Amadeus_db+25
 636+ 9136 36 01            ld (hl),1
 637+ 9138 21 33 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 913B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 913D CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 913F 18 18            jr 1F
 641+ 9141
 642+ 9141              ; -----
 643+ 9141
 644+ 9141 E1           3 pop hl
 645+ 9142 CD 06 97         call NextScan
 646+ 9145 E5               push hl
 647+ 9146 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9147 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9149 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 914B 30 0C            jr nc,1F
 651+ 914D              ;                                                  ; _ 2º scanline si esto es así.
 652+ 914D 10 DC            djnz 2B
 653+ 914F
 654+ 914F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 914F
 656+ 914F              ; LLegados a este punto:
 657+ 914F              ;
 658+ 914F              ;   NO HAY COLISIÓN !!!!!.
 659+ 914F              ;
 660+ 914F              ;   .db (Impacto) de Amadeus a "0".
 661+ 914F              ;   RES el bit2 de (Impacto2).
 662+ 914F              ;
 663+ 914F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 914F              ;   Lo colocamos a "0".
 665+ 914F
 666+ 914F 21 33 8A         ld hl,Impacto2
 667+ 9152 CB 96            res 2,(hl)
 668+ 9154 2A 34 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9157 36 00            ld (hl),0
 670+ 9159
 671+ 9159 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 915A C9               ret
 673+ 915B
 674+ 915B               ; ---------- ----------
 675+ 915B
 676+ 915B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 915C 3A B7 89         ld a,(Columns)
 678+ 915F 47               ld b,a
 679+ 9160 FD 7E 00     2 ld a,(iy)
 680+ 9163 BE               cp (hl)
 681+ 9164 28 01            jr z,1F
 682+ 9166
 683+ 9166 1C               inc e
 684+ 9167
 685+ 9167 23           1 inc hl
 686+ 9168 FD 23            inc iy
 687+ 916A 10 F4            djnz 2B
 688+ 916C C1               pop bc
 689+ 916D C9               ret
 690+ 916E
 691+ 916E              ; -------------------------------------------------------------------------------------------------------------
 692+ 916E              ;
 693+ 916E              ;   13/03/23
 694+ 916E              ;
 695+ 916E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 916E              ;
 697+ 916E              ;   DESTRUYE: HL,BC,DE y A.
 698+ 916E
 699+ 916E 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9171 7E               ld a,(hl)
 701+ 9172 A7               and a
 702+ 9173 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9174
 704+ 9174 44               ld b,h
 705+ 9175 4D               ld c,l
 706+ 9176 2A 10 8A         ld hl,(Stack_snapshot_disparos)
 707+ 9179 E5               push hl
 708+ 917A A7               and a
 709+ 917B ED 42            sbc hl,bc
 710+ 917D E5               push hl
 711+ 917E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 917F
 713+ 917F E1               pop hl
 714+ 9180 54               ld d,h
 715+ 9181 5D               ld e,l
 716+ 9182 1B               dec de
 717+ 9183 ED B8            lddr                                                ; Limpiamos.
 718+ 9185
 719+ 9185 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 9188 22 10 8A         ld (Stack_snapshot_disparos),hl
 721+ 918B
 722+ 918B C9               ret
 723+ 918C
 724+ 918C              ; -------------------------------------------------------------------------------------------------------------
 725+ 918C              ;
 726+ 918C              ;   18/07/23
 727+ 918C              ;
 728+ 918C
 729+ 918C              Motor_de_disparos
 730+ 918C
 731+ 918C              ; Gestiona DISPAROS DE AMADEUS.
 732+ 918C
 733+ 918C 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 918F 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9192
 736+ 9192 CD 88 8D     2 call Extrae_address
 737+ 9195 7E               ld a,(hl)
 738+ 9196 A7               and a
 739+ 9197 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9199
 741+ 9199              ; ----- ----- ----- ----- ----- -----
 742+ 9199
 743+ 9199 C5               push bc
 744+ 919A CD 5E 92         call foto_disparo_a_borrar
 745+ 919D
 746+ 919D              ; Existe colisión con este disparo???
 747+ 919D
 748+ 919D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 919E 7E               ld a,(hl)
 750+ 919F 2B               dec hl
 751+ 91A0 E6 01            and 1
 752+ 91A2 28 1D            jr z,9F
 753+ 91A4
 754+ 91A4              ;   En este punto:
 755+ 91A4              ;
 756+ 91A4              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91A4              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91A4              ;   _con la entidad).
 759+ 91A4              ;
 760+ 91A4              ;   Disparo_2A defw 0                                ; Control.
 761+ 91A4              ;    defw 0                                          ; Puntero objeto.
 762+ 91A4              ;    defw 0                                          ; Puntero de impresión.
 763+ 91A4              ;    defw 0                                          ; Rutina de impresión.
 764+ 91A4
 765+ 91A4 E5               push hl
 766+ 91A5
 767+ 91A5 06 04            ld b,4
 768+ 91A7 23           19 inc hl
 769+ 91A8 10 FD            djnz 19B
 770+ 91AA
 771+ 91AA CD 88 8D         call Extrae_address
 772+ 91AD CD 8C 9D         call Genera_coordenadas_disparo
 773+ 91B0
 774+ 91B0              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91B0
 776+ 91B0 21 36 8A         ld hl,Coordenadas_disparo_certero
 777+ 91B3 72               ld (hl),d
 778+ 91B4 23               inc hl
 779+ 91B5 73               ld (hl),e
 780+ 91B6
 781+ 91B6              ; Elimino el disparo de la base de datos.
 782+ 91B6
 783+ 91B6 E1               pop hl
 784+ 91B7 CD DD 92         call Elimina_disparo_de_base_de_datos
 785+ 91BA 21 33 8A         ld hl,Impacto2
 786+ 91BD CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91BF
 788+ 91BF 18 06            jr 11F
 789+ 91C1
 790+ 91C1 CD 87 92     9 call Mueve_disparo
 791+ 91C4 CD 5E 92         call foto_disparo_a_borrar
 792+ 91C7
 793+ 91C7 C1           11 pop bc
 794+ 91C8 18 04            jr 7F
 795+ 91CA
 796+ 91CA              ; ----- ----- ----- ----- ----- -----
 797+ 91CA
 798+ 91CA ED 42        1 sbc hl,bc
 799+ 91CC 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91CE
 801+ 91CE 2A 31 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91D1 23               inc hl
 803+ 91D2 23               inc hl
 804+ 91D3 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91D6 18 BA            jr 2B
 806+ 91D8
 807+ 91D8 CD 51 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91DB              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91DB
 810+ 91DB              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91DB
 812+ 91DB 01 8A 85         ld bc,Disparo_11
 813+ 91DE 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91E1
 815+ 91E1 CD 88 8D     5 call Extrae_address
 816+ 91E4 7E               ld a,(hl)
 817+ 91E5 A7               and a
 818+ 91E6 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91E8
 820+ 91E8              ; ----- ----- ----- ----- ----- -----
 821+ 91E8
 822+ 91E8 C5               push bc
 823+ 91E9 CD 5E 92         call foto_disparo_a_borrar
 824+ 91EC
 825+ 91EC              ; Existe colisión con este disparo???
 826+ 91EC
 827+ 91EC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91ED 7E               ld a,(hl)
 829+ 91EE 2B               dec hl
 830+ 91EF E6 01            and 1
 831+ 91F1 28 4D            jr z,10F
 832+ 91F3
 833+ 91F3              ;! La colisión se produce con Amadeus???
 834+ 91F3              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91F3
 836+ 91F3 E5               push hl
 837+ 91F4
 838+ 91F4 06 04            ld b,4
 839+ 91F6 23           16 inc hl
 840+ 91F7 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91F9
 842+ 91F9 CD 88 8D         call Extrae_address
 843+ 91FC CD 8C 9D         call Genera_coordenadas_disparo
 844+ 91FF
 845+ 91FF 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9200 FE 16            cp $16
 847+ 9202 38 2A            jr c,15F
 848+ 9204
 849+ 9204
 850+ 9204              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9204
 852+ 9204 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9205
 854+ 9205              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9205
 856+ 9205
 857+ 9205 2A 3E 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9208
 859+ 9208              ; Coordenada X de Amadeus en D.
 860+ 9208
 861+ 9208 7D               ld a,l
 862+ 9209 E6 1F            and $1F
 863+ 920B 57               ld d,a
 864+ 920C
 865+ 920C 21 AC 85         ld hl,Amadeus_db+8
 866+ 920F 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9210
 868+ 9210 21 38 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9213 CD E8 92         call Guarda_coordenadas_X
 870+ 9216
 871+ 9216 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9217
 873+ 9217              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9217
 875+ 9217 06 02            ld b,2
 876+ 9219 C5           20 push bc
 877+ 921A
 878+ 921A 06 03            ld b,3
 879+ 921C 21 38 8A         ld hl,Coordenadas_X_Amadeus
 880+ 921F 7E           18 ld a,(hl)
 881+ 9220 BA               cp d
 882+ 9221 20 04            jr nz,17F
 883+ 9223
 884+ 9223              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9223
 886+ 9223 C1               pop bc
 887+ 9224 E1               pop hl
 888+ 9225 18 0D            jr 14F
 889+ 9227
 890+ 9227 23           17 inc hl
 891+ 9228 10 F5            djnz 18B
 892+ 922A
 893+ 922A 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 922B
 895+ 922B C1               pop bc
 896+ 922C 10 EB            djnz 20B
 897+ 922E
 898+ 922E
 899+ 922E              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 922E              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 922E
 902+ 922E E1           15 pop hl
 903+ 922F 23               inc hl
 904+ 9230 35               dec (hl)
 905+ 9231 2B               dec hl
 906+ 9232 18 0C            jr 10F
 907+ 9234
 908+ 9234              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9234              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9234
 911+ 9234 E5           14 push hl
 912+ 9235 CD DD 92         call Elimina_disparo_de_base_de_datos
 913+ 9238 21 33 8A         ld hl,Impacto2
 914+ 923B CB CE            set 1,(hl)
 915+ 923D E1               pop hl
 916+ 923E 18 06            jr 12F
 917+ 9240
 918+ 9240              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9240
 920+ 9240 CD 87 92     10 call Mueve_disparo
 921+ 9243 CD 5E 92         call foto_disparo_a_borrar
 922+ 9246 C1           12 pop bc
 923+ 9247
 924+ 9247 18 04            jr 8F
 925+ 9249
 926+ 9249              ; ----- ----- ----- ----- ----- -----
 927+ 9249
 928+ 9249 ED 42        4 sbc hl,bc
 929+ 924B 28 0A            jr z,6F
 930+ 924D
 931+ 924D 2A 2F 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9250 23               inc hl
 933+ 9251 23               inc hl
 934+ 9252 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9255 18 8A            jr 5B
 936+ 9257
 937+ 9257 CD 4A 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 925A CD 24 93         call Limpia_Coordenadas_X
 939+ 925D C9               ret
 940+ 925E
 941+ 925E              ; ------------------------------------------------------------------
 942+ 925E
 943+ 925E              foto_disparo_a_borrar
 944+ 925E
 945+ 925E 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 925F A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9260 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9261
 949+ 9261 E5               push hl
 950+ 9262 23               inc hl
 951+ 9263 23               inc hl
 952+ 9264 ED 73 0A 8A      ld (Stack),sp
 953+ 9268 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9269 FD E1            pop iy
 955+ 926B DD E1            pop ix
 956+ 926D E1               pop hl
 957+ 926E ED 7B 0A 8A      ld sp,(Stack)
 958+ 9272 3A F9 89         ld a,(Ctrl_1)
 959+ 9275 CB C7            set 0,a
 960+ 9277 32 F9 89         ld (Ctrl_1),a
 961+ 927A CD A0 7F         call Guarda_foto_registros
 962+ 927D 3A F9 89         ld a,(Ctrl_1)
 963+ 9280 CB 87            res 0,a
 964+ 9282 32 F9 89         ld (Ctrl_1),a
 965+ 9285 E1               pop hl
 966+ 9286 C9               ret
 967+ 9287
 968+ 9287              ;---------------------------------------------------
 969+ 9287              ;
 970+ 9287              ;   18/07/23
 971+ 9287              ;
 972+ 9287
 973+ 9287              Mueve_disparo
 974+ 9287
 975+ 9287              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9287              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9287              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9287
 979+ 9287 E5               push hl
 980+ 9288
 981+ 9288 7E               ld a,(hl)
 982+ 9289
 983+ 9289 06 04            ld b,4
 984+ 928B 23           1 inc hl
 985+ 928C 10 FD            djnz 1B
 986+ 928E
 987+ 928E              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 928E
 989+ 928E CD 88 8D         call Extrae_address
 990+ 9291
 991+ 9291 E6 01            and 1
 992+ 9293 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9295
 994+ 9295              ; Disparo hacia arriba, (Amadeus).
 995+ 9295
 996+ 9295              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9295              ; _ de la dificultad.
 998+ 9295
 999+ 9295 CD 15 97         call PreviousScan
1000+ 9298 CD 15 97         call PreviousScan
1001+ 929B CD 15 97         call PreviousScan
1002+ 929E CD 15 97         call PreviousScan
1003+ 92A1
1004+ 92A1              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92A1
1006+ 92A1 7C               ld a,h
1007+ 92A2 FE 40            cp $40
1008+ 92A4 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92A6
1010+ 92A6              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92A6
1012+ 92A6 EB               ex de,hl
1013+ 92A7 06 04            ld b,4
1014+ 92A9 2B           6 dec hl
1015+ 92AA 10 FD            djnz 6B
1016+ 92AC
1017+ 92AC CD DD 92         call Elimina_disparo_de_base_de_datos
1018+ 92AF E1               pop hl
1019+ 92B0 18 10            jr 7F
1020+ 92B2
1021+ 92B2              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92B2              ; HL contiene el puntero de impresión del disparo.
1023+ 92B2              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92B2
1025+ 92B2 D5           3 push de
1026+ 92B3 C5               push bc
1027+ 92B4
1028+ 92B4 CD 7C 90         call Comprueba_Colision
1029+ 92B7
1030+ 92B7              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92B7
1032+ 92B7 78               ld a,b
1033+ 92B8
1034+ 92B8 C1               pop bc
1035+ 92B9 D1               pop de
1036+ 92BA
1037+ 92BA EB               ex de,hl
1038+ 92BB
1039+ 92BB 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92BC 23               inc hl                                      ; _ movimiento.
1041+ 92BD 72               ld (hl),d
1042+ 92BE
1043+ 92BE E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92BF
1045+ 92BF 23               inc hl                                      ; _ en curso.
1046+ 92C0 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92C1 2B               dec hl
1048+ 92C2
1049+ 92C2 C9           7 ret
1050+ 92C3
1051+ 92C3              ; Disparo hacia abajo, (Entidad).
1052+ 92C3
1053+ 92C3 3A 40 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92C6 47               ld b,a
1055+ 92C7
1056+ 92C7 CD 06 97     4 call NextScan
1057+ 92CA 10 FB            djnz 4B
1058+ 92CC
1059+ 92CC              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92CC
1061+ 92CC 7C               ld a,h
1062+ 92CD FE 58            cp $58
1063+ 92CF 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92D1
1065+ 92D1 EB               ex de,hl
1066+ 92D2 06 04            ld b,4
1067+ 92D4 2B           5 dec hl
1068+ 92D5 10 FD            djnz 5B
1069+ 92D7
1070+ 92D7 CD DD 92         call Elimina_disparo_de_base_de_datos
1071+ 92DA E1               pop hl
1072+ 92DB 18 E5            jr 7B
1073+ 92DD
1074+ 92DD              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92DD
1076+ 92DD 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92E0 AF               xor a
1078+ 92E1 77               ld (hl),a
1079+ 92E2 54               ld d,h
1080+ 92E3 5D               ld e,l
1081+ 92E4 13               inc de
1082+ 92E5 ED B0            ldir
1083+ 92E7 C9               ret
1084+ 92E8
1085+ 92E8              ; -----------------------------------------------------------------
1086+ 92E8              ;
1087+ 92E8              ;   19/7/23
1088+ 92E8              ;
1089+ 92E8              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92E8              ;
1091+ 92E8              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92E8              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92E8              ;
1094+ 92E8              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92E8              ;
1096+ 92E8              ;   INPUTS:
1097+ 92E8              ;
1098+ 92E8              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92E8              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92E8
1101+ 92E8              ;   MODIFICA: A, HL, BC y DE.
1102+ 92E8
1103+ 92E8              Guarda_coordenadas_X
1104+ 92E8
1105+ 92E8 7B               ld a,e
1106+ 92E9 A7               and a
1107+ 92EA 20 04            jr nz,1F
1108+ 92EC
1109+ 92EC 06 02            ld b,2
1110+ 92EE 18 02            jr 2F
1111+ 92F0
1112+ 92F0 06 03        1 ld b,3
1113+ 92F2 72           2 ld (hl),d
1114+ 92F3 23               inc hl
1115+ 92F4 14               inc d
1116+ 92F5 10 FB            djnz 2B
1117+ 92F7
1118+ 92F7 C9               ret
1119+ 92F8
1120+ 92F8              ; -----------------------------------------------------------------
1121+ 92F8              ;
1122+ 92F8              ;   12/04/23
1123+ 92F8              ;
1124+ 92F8
1125+ 92F8 3A 33 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92FB A7               and a
1127+ 92FC C8               ret z
1128+ 92FD
1129+ 92FD FE 04            cp 4
1130+ 92FF 20 09            jr nz,1F
1131+ 9301
1132+ 9301
1133+ 9301              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9301
1135+ 9301 CD 1D 91         call Detecta_colision_nave_entidad
1136+ 9304
1137+ 9304 21 33 8A         ld hl,Impacto2
1138+ 9307 CB 5E            bit 3,(hl)
1139+ 9309 C0               ret nz                                               ; Existe colisión, RET.
1140+ 930A
1141+ 930A              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 930A              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 930A
1144+ 930A 21 33 8A     1 ld hl,Impacto2
1145+ 930D CB 4E            bit 1,(hl)
1146+ 930F 28 07            jr z,2F
1147+ 9311
1148+ 9311 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9314 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9316 18 0B            jr 3F
1151+ 9318
1152+ 9318 21 33 8A     2 ld hl,Impacto2
1153+ 931B CB 46            bit 0,(hl)
1154+ 931D C8               ret z
1155+ 931E
1156+ 931E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 931E
1158+ 931E 21 F9 89         ld hl,Ctrl_1
1159+ 9321 CB D6            set 2,(hl)
1160+ 9323
1161+ 9323 C9           3 ret
1162+ 9324
1163+ 9324              ; -----------------------------------------------------------------
1164+ 9324              ;
1165+ 9324              ;   19/7/23
1166+ 9324              ;
1167+ 9324              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9324
1169+ 9324 AF           Limpia_Coordenadas_X xor a
1170+ 9325 06 06            ld b,6
1171+ 9327 21 38 8A         ld hl,Coordenadas_X_Amadeus
1172+ 932A 77           1 ld (hl),a
1173+ 932B 23               inc hl
1174+ 932C 10 FC            djnz 1B
1175+ 932E C9               ret
1176+ 932F
1177+ 932F              ; -----------------------------------------------------------------
1178+ 932F              ;
1179+ 932F              ;   25/04/23
1180+ 932F              ;
1181+ 932F
1182+ 932F              Determina_resultado_comparativa
1183+ 932F
1184+ 932F              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 932F              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 932F              ;
1187+ 932F              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 932F              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 932F              ;
1190+ 932F              ;   SBC HL,DE
1191+ 932F
1192+ 932F              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 932F              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 932F
1195+ 932F              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 932F              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 932F
1198+ 932F
1199+ 932F 3A CA 89         ld a,(Cuad_objeto)
1200+ 9332 FE 02            cp 2
1201+ 9334 28 26            jr z,2F
1202+ 9336 38 24            jr c,2F
1203+ 9338
1204+ 9338              ; Cuadrantes 3º y 4º
1205+ 9338
1206+ 9338 E6 01            and 1
1207+ 933A 28 10            jr z,4F
1208+ 933C
1209+ 933C              ; Cuadrante 3º
1210+ 933C
1211+ 933C 7C               ld a,h
1212+ 933D 06 00            ld b,0
1213+ 933F
1214+ 933F CD CA 93         call Compara_cositas_H3
1215+ 9342
1216+ 9342 04               inc b
1217+ 9343 05               dec b
1218+ 9344 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9345
1220+ 9345 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9346 06 00            ld b,0
1222+ 9348
1223+ 9348 CD DC 93         call Compara_cositas_L3
1224+ 934B C9               ret
1225+ 934C
1226+ 934C              ; Cuadrante 4º
1227+ 934C
1228+ 934C 7C           4 ld a,h
1229+ 934D 06 00            ld b,0
1230+ 934F
1231+ 934F CD EE 93         call Compara_cositas_H4
1232+ 9352
1233+ 9352 04               inc b
1234+ 9353 05               dec b
1235+ 9354 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9355
1237+ 9355 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9356 06 00            ld b,0
1239+ 9358
1240+ 9358 CD 04 94         call Compara_cositas_L4
1241+ 935B C9               ret
1242+ 935C
1243+ 935C              ; Cuadrantes 1º y 2º.
1244+ 935C
1245+ 935C 28 10        2 jr z,3F
1246+ 935E
1247+ 935E              ; 1er Cuadrante
1248+ 935E
1249+ 935E 7C               ld a,h
1250+ 935F 06 00            ld b,0
1251+ 9361
1252+ 9361 CD A2 93         call Compara_cositas_H1
1253+ 9364
1254+ 9364 04               inc b
1255+ 9365 05               dec b
1256+ 9366 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9367
1258+ 9367 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9368 06 00            ld b,0
1260+ 936A
1261+ 936A CD B8 93         call Compara_cositas_L1
1262+ 936D C9               ret
1263+ 936E
1264+ 936E
1265+ 936E              ; 2º Cuadrante
1266+ 936E
1267+ 936E 7C           3 ld a,h
1268+ 936F 06 00            ld b,0
1269+ 9371
1270+ 9371 CD 7E 93         call Compara_cositas_H2
1271+ 9374
1272+ 9374 04               inc b
1273+ 9375 05               dec b
1274+ 9376 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9377
1276+ 9377 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9378 06 00            ld b,0
1278+ 937A
1279+ 937A CD 90 93         call Compara_cositas_L2
1280+ 937D C9               ret
1281+ 937E
1282+ 937E A7           Compara_cositas_H2 and a
1283+ 937F 28 0D            jr z,1F
1284+ 9381              ;    cp $fd
1285+ 9381              ;    jr z,1F
1286+ 9381              ;    cp $fe
1287+ 9381              ;    jr z,1F
1288+ 9381 FE FF            cp $ff
1289+ 9383 28 09            jr z,1F
1290+ 9385 FE 01            cp $01
1291+ 9387 28 05            jr z,1F
1292+ 9389 FE 02            cp $02
1293+ 938B 28 01            jr z,1F
1294+ 938D C0               ret nz
1295+ 938E 04           1 inc b
1296+ 938F C9               ret
1297+ 9390
1298+ 9390 A7           Compara_cositas_L2 and a
1299+ 9391 28 0D            jr z,1F
1300+ 9393              ;    cp $fd
1301+ 9393              ;    jr z,1F
1302+ 9393 FE FE            cp $fe
1303+ 9395 28 09            jr z,1F
1304+ 9397 FE FF            cp $ff
1305+ 9399 28 05            jr z,1F
1306+ 939B FE 01            cp $01
1307+ 939D 28 01            jr z,1F
1308+ 939F              ;    cp $02
1309+ 939F              ;    jr z,1F
1310+ 939F C0               ret nz
1311+ 93A0 04           1 inc b
1312+ 93A1 C9               ret
1313+ 93A2
1314+ 93A2 A7           Compara_cositas_H1 and a
1315+ 93A3 28 11            jr z,1F
1316+ 93A5              ;    cp $fd
1317+ 93A5              ;    jr z,1F
1318+ 93A5              ;    cp $fe
1319+ 93A5              ;    jr z,1F
1320+ 93A5 FE FF            cp $ff
1321+ 93A7 28 0D            jr z,1F
1322+ 93A9 FE 01            cp $01
1323+ 93AB 28 09            jr z,1F
1324+ 93AD FE 02            cp $02
1325+ 93AF 28 05            jr z,1F
1326+ 93B1 FE 03            cp $03
1327+ 93B3 28 01            jr z,1F
1328+ 93B5 C0               ret nz
1329+ 93B6 04           1 inc b
1330+ 93B7 C9               ret
1331+ 93B8
1332+ 93B8 A7           Compara_cositas_L1 and a
1333+ 93B9 28 0D            jr z,1F
1334+ 93BB              ;    cp $fd
1335+ 93BB              ;    jr z,1F
1336+ 93BB              ;    cp $fe
1337+ 93BB              ;    jr z,1F
1338+ 93BB              ;    cp $ff
1339+ 93BB              ;    jr z,1F
1340+ 93BB FE 01            cp $01
1341+ 93BD 28 09            jr z,1F
1342+ 93BF FE 02            cp $02
1343+ 93C1 28 05            jr z,1F
1344+ 93C3 FE 03            cp $03
1345+ 93C5 28 01            jr z,1F
1346+ 93C7 C0               ret nz
1347+ 93C8 04           1 inc b
1348+ 93C9 C9               ret
1349+ 93CA
1350+ 93CA A7           Compara_cositas_H3 and a
1351+ 93CB 28 0D            jr z,1F
1352+ 93CD              ;    cp $fd
1353+ 93CD              ;    jr z,1F
1354+ 93CD FE FE            cp $fe
1355+ 93CF 28 09            jr z,1F
1356+ 93D1 FE FF            cp $ff
1357+ 93D3 28 05            jr z,1F
1358+ 93D5 FE 01            cp $01
1359+ 93D7 28 01            jr z,1F
1360+ 93D9              ;    cp $02
1361+ 93D9              ;    jr z,1F
1362+ 93D9              ;    cp $03
1363+ 93D9              ;    jr z,1F
1364+ 93D9 C0               ret nz
1365+ 93DA 04           1 inc b
1366+ 93DB C9               ret
1367+ 93DC
1368+ 93DC A7           Compara_cositas_L3 and a
1369+ 93DD 28 0D            jr z,1F
1370+ 93DF              ;    cp $fd
1371+ 93DF              ;    jr z,1F
1372+ 93DF              ;    cp $fe
1373+ 93DF              ;    jr z,1F
1374+ 93DF              ;    cp $ff
1375+ 93DF              ;    jr z,1F
1376+ 93DF FE 01            cp $01
1377+ 93E1 28 09            jr z,1F
1378+ 93E3 FE 02            cp $02
1379+ 93E5 28 05            jr z,1F
1380+ 93E7 FE 03            cp $03
1381+ 93E9 28 01            jr z,1F
1382+ 93EB C0               ret nz
1383+ 93EC 04           1 inc b
1384+ 93ED C9               ret
1385+ 93EE
1386+ 93EE A7           Compara_cositas_H4 and a
1387+ 93EF 28 11            jr z,1F
1388+ 93F1 FE FD            cp $fd
1389+ 93F3 28 0D            jr z,1F
1390+ 93F5 FE FE            cp $fe
1391+ 93F7 28 09            jr z,1F
1392+ 93F9 FE FF            cp $ff
1393+ 93FB 28 05            jr z,1F
1394+ 93FD FE 01            cp $01
1395+ 93FF 28 01            jr z,1F
1396+ 9401              ;    cp $02
1397+ 9401              ;    jr z,1F
1398+ 9401              ;    cp $03
1399+ 9401              ;    jr z,1F
1400+ 9401 C0               ret nz
1401+ 9402 04           1 inc b
1402+ 9403 C9               ret
1403+ 9404
1404+ 9404 A7           Compara_cositas_L4 and a
1405+ 9405 28 0D            jr z,1F
1406+ 9407              ;    cp $fd
1407+ 9407              ;    jr z,1F
1408+ 9407 FE FE            cp $fe
1409+ 9409 28 09            jr z,1F
1410+ 940B FE FF            cp $ff
1411+ 940D 28 05            jr z,1F
1412+ 940F FE 01            cp $01
1413+ 9411 28 01            jr z,1F
1414+ 9413              ;    cp $02
1415+ 9413              ;    jr z,1F
1416+ 9413              ;    cp $03
1417+ 9413              ;    jr z,1F
1418+ 9413 C0               ret nz
1419+ 9414 04           1 inc b
1420+ 9415 C9               ret
# file closed: Disparo.asm
1488  9416              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9416              ; ******************************************************************************************************************************************************************************************
   2+ 9416              ;
   3+ 9416              ; 26/06/23
   4+ 9416              ;
   5+ 9416              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9416
   7+ 9416 CD FA 96     Draw call Prepara_draw
   8+ 9419 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 941A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 941B 28 05        	jr z,2F
  11+ 941D
  12+ 941D 3A CA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9420 18 0C        	jr 1F
  14+ 9422
  15+ 9422 2A C8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9425 22 B8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9428 CD B7 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 942B              ;													; _la esquina superior izquierda de la pantalla.
  19+ 942B CD 08 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 942E
  21+ 942E 3A E4 89     1 ld a,(Ctrl_0)
  22+ 9431 CB 6F        	bit 5,a
  23+ 9433 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9435
  25+ 9435 CD 4D 94     	call Comprueba_limite_horizontal
  26+ 9438 CD DD 94     	call Comprueba_limite_vertical
  27+ 943B
  28+ 943B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 943B              ; -----------------------
  30+ 943B              ; -----------------------
  31+ 943B              ; -----------------------
  32+ 943B
  33+ 943B CD 2A 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 943E CD 61 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9441 CD C0 96     	call Define_rutina_de_impresion
  36+ 9444
  37+ 9444 3A E4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9447 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9449 32 E4 89     	ld (Ctrl_0),a
  40+ 944C
  41+ 944C C9           	ret
  42+ 944D
  43+ 944D              ; *******************************************************************************************************************************************************************************************
  44+ 944D              ;	21/01/23
  45+ 944D              ;
  46+ 944D              ; 	Comprueba_limite_horizontal.
  47+ 944D              ;
  48+ 944D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 944D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 944D              ;
  51+ 944D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 944D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 944D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 944D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 944D
  56+ 944D
  57+ 944D
  58+ 944D 3A E4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9450 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9452 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9454 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9456 32 E4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9459 18 09            jr 6F
  64+ 945B CB 5F        1 bit 3,a
  65+ 945D 28 0A            jr z,2F
  66+ 945F E6 F7            and $f7
  67+ 9461 32 E4 89         ld (Ctrl_0),a
  68+ 9464 CD B7 95     6 call Inicializacion
  69+ 9467 18 5B            jr 5F
  70+ 9469 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 946A
  72+ 946A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 946A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 946A
  75+ 946A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 946B 2A F4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 946E CD D6 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9471 67           	ld h,a
  79+ 9472 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9473 CD D6 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9476 67           	ld h,a
  82+ 9477 A7           	and a
  83+ 9478 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 947A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 947B 3A CA 89     	ld a,(Cuad_objeto)
  86+ 947E FE 02        	cp 2
  87+ 9480 38 1E        	jr c,3F
  88+ 9482 28 1C        	jr z,3F
  89+ 9484 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9485 28 23            jr z,7F
  91+ 9487 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9489 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 948B E1           	pop hl
  94+ 948C
  95+ 948C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 948C              ; _para indicar con E="2" en caso necesario.
  97+ 948C
  98+ 948C E5               push hl
  99+ 948D C5               push bc
 100+ 948E CD D6 99     	call calcula_tercio
 101+ 9491 FE 01        	cp 1
 102+ 9493 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9495 CD C5 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9498 28 26            jr z,9F
 105+ 949A 38 24            jr c,9F
 106+ 949C 1E 00        11 ld e,0
 107+ 949E 18 22            jr 8F
 108+ 94A0 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94A1 28 07        	jr z, 7F
 110+ 94A3 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94A5 1E 00         	ld e,0
 112+ 94A7 E1           	pop hl
 113+ 94A8 18 04        	jr 4F
 114+ 94AA 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94AC 18 15            jr 10F
 116+ 94AE
 117+ 94AE              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94AE              ; _para indicar con E="2" en caso necesario.
 119+ 94AE
 120+ 94AE E5           4 push hl
 121+ 94AF C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94B0 CD D6 99     	call calcula_tercio
 123+ 94B3 FE 01        	cp 1
 124+ 94B5 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94B7 CD C5 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94BA 28 04            jr z,9F
 127+ 94BC 30 02            jr nc,9F
 128+ 94BE 18 02        	jr 8F
 129+ 94C0 1E 02        9 ld e,2
 130+ 94C2 C1           8 pop bc
 131+ 94C3 E1           10 pop hl
 132+ 94C4 C9           5 ret
 133+ 94C5
 134+ 94C5              ; --------------------
 135+ 94C5              ;
 136+ 94C5              ; 25/08/22
 137+ 94C5
 138+ 94C5 CD D6 99     Comprueba_centro call calcula_tercio
 139+ 94C8 67               ld h,a
 140+ 94C9 08           	ex af,af
 141+ 94CA FE 02        	cp 2
 142+ 94CC 38 07        	jr c,1F
 143+ 94CE 28 05        	jr z,1F
 144+ 94D0 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94D3 18 03        	jr 2F
 146+ 94D5 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94D8 08           2 ex af,af
 148+ 94D9 A7               and a
 149+ 94DA ED 42            sbc hl,bc
 150+ 94DC C9               ret
 151+ 94DD
 152+ 94DD              ; *********************************************************************************************************************************************************************************************
 153+ 94DD              ;
 154+ 94DD              ;   16/8/22
 155+ 94DD              ;
 156+ 94DD              ;	Comprueba_limite_vertical
 157+ 94DD              ;
 158+ 94DD              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94DD              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94DD              ;
 161+ 94DD
 162+ 94DD 2A B8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94E0 7D           	ld a,l
 164+ 94E1 E6 1F        	and $1F
 165+ 94E3 57           	ld d,a
 166+ 94E4 3A F6 89     	ld a,(Limite_vertical)
 167+ 94E7 BA           	cp d 											; Límite - Posición.
 168+ 94E8 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94E9 3A CA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94EC CB 47        	bit 0,a
 171+ 94EE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94F0
 173+ 94F0              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94F0
 175+ 94F0 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94F1 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94F3
 178+ 94F3              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94F3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94F3
 181+ 94F3 3A BC 89         ld a,(Coordenada_X)
 182+ 94F6 16 0F            ld d,Centro_izquierda
 183+ 94F8 A7               and a
 184+ 94F9 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94FA 28 1E            jr z,3F
 186+ 94FC 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94FE              ;                                                    ; _salimos sin modificar nada.
 188+ 94FE 18 0E            jr 2F
 189+ 9500 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9501 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9503
 192+ 9503              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9503              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9503
 195+ 9503 3A BC 89         ld a,(Coordenada_X)
 196+ 9506 16 10            ld d,Centro_derecha
 197+ 9508 A7               and a
 198+ 9509 92               sub d
 199+ 950A 28 0E            jr z,3F
 200+ 950C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 950E              ;                                                    ; _salimos sin modificar nada.
 202+ 950E CB 43        2 bit 0,e
 203+ 9510 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9512 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9513 CD A7 95         call Modificaccionne
 206+ 9516 C1           	pop bc
 207+ 9517 CD B7 95         call Inicializacion
 208+ 951A C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 951B
 210+ 951B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 951B
 212+ 951B C5           4 push bc
 213+ 951C 01 B7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 951F 0A           	ld a,(bc)
 215+ 9520 3D           	dec a
 216+ 9521 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9522 7D           	ld a,l
 218+ 9523 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9524 CB 47        	bit 0,a
 220+ 9526 28 03        	jr z,5F
 221+ 9528 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9529 18 2E        	jr 7F
 223+ 952B
 224+ 952B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 952B
 226+ 952B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 952C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 952D 3A E4 89     	ld a,(Ctrl_0)
 229+ 9530 CB 4F        	bit 1,a
 230+ 9532 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9534 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9535
 233+ 9535              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9535
 235+ 9535 1C               inc e
 236+ 9536 1D               dec e
 237+ 9537 20 07            jr nz,12F
 238+ 9539 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 953A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 953B 22 B8 89     	ld (Posicion_actual),hl
 241+ 953E 18 44        13 jr 9F
 242+ 9540 CB 43        12 bit 0,e
 243+ 9542 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9544              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9544 C1           	pop bc
 246+ 9545 18 D3        	jr 3B
 247+ 9547 80           14 add b
 248+ 9548 6F               ld l,a
 249+ 9549 22 B8 89     	ld (Posicion_actual),hl
 250+ 954C CD A7 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 954F 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9551 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9553 32 E4 89         ld (Ctrl_0),a
 254+ 9556 F1           	pop af
 255+ 9557 18 2B        	jr 9F
 256+ 9559
 257+ 9559              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9559
 259+ 9559 F5           7 push af
 260+ 955A 3A E4 89     	ld a,(Ctrl_0)
 261+ 955D CB 47        	bit 0,a
 262+ 955F 20 1D        	jr nz,8F
 263+ 9561 F1           	pop af
 264+ 9562
 265+ 9562              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9562
 267+ 9562 1C           	inc e
 268+ 9563 1D               dec e
 269+ 9564 20 07            jr nz,10F
 270+ 9566 90           	sub b
 271+ 9567 6F               ld l,a
 272+ 9568 22 B8 89     	ld (Posicion_actual),hl
 273+ 956B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 956D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 956D CB 43        10 bit 0,e
 276+ 956F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9571              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9571 C1           	pop bc
 279+ 9572 18 A6        	jr 3B
 280+ 9574 90           16 sub b
 281+ 9575 6F               ld l,a
 282+ 9576 22 B8 89     	ld (Posicion_actual),hl
 283+ 9579 CD A7 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 957C 18 06            jr 9F
 285+ 957E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9580 32 E4 89         ld (Ctrl_0),a
 287+ 9583 F1           	pop af
 288+ 9584 C1           9 pop bc
 289+ 9585 1E 00        	ld e,0
 290+ 9587 CD B7 95         call Inicializacion
 291+ 958A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 958B 08           	ex af,af
 293+ 958C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 958D 18 8B            jr 3B
 295+ 958F
 296+ 958F              ; --------------------
 297+ 958F
 298+ 958F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9591 CD 15 97     1 call PreviousScan
 300+ 9594 10 FB            djnz 1B
 301+ 9596 22 B8 89     	ld (Posicion_actual),hl
 302+ 9599 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 959A C9           	ret
 304+ 959B
 305+ 959B              ; --------------------
 306+ 959B
 307+ 959B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 959D CD 06 97     1 call NextScan
 309+ 95A0 10 FB            djnz 1B
 310+ 95A2 22 B8 89     	ld (Posicion_actual),hl
 311+ 95A5 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95A6 C9           	ret
 313+ 95A7
 314+ 95A7              ; --------------------
 315+ 95A7              ;
 316+ 95A7              ;	22/01/23
 317+ 95A7              ;
 318+ 95A7              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95A7              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95A7              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95A7
 322+ 95A7
 323+ 95A7              Modificaccionne
 324+ 95A7
 325+ 95A7 3A CA 89     	ld a,(Cuad_objeto)
 326+ 95AA FE 02        	cp 2
 327+ 95AC CC 8F 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95AF DC 8F 95         call c,Modifica_Pos_actual
 329+ 95B2 C8           	ret z
 330+ 95B3 CD 9B 95         call Modifica_Pos_actual2
 331+ 95B6 C9               ret
 332+ 95B7
 333+ 95B7              ; *************************************************************************************************************************************************************************************************
 334+ 95B7              ;
 335+ 95B7              ;	13/8/22
 336+ 95B7              ;
 337+ 95B7              ;	Inicializacion
 338+ 95B7              ;
 339+ 95B7              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95B7              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95B7              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95B7              ;
 343+ 95B7              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95B7              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95B7              ;	_ desaparece/aparece.
 346+ 95B7
 347+ 95B7              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95B7              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95B7              ;
 350+ 95B7              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95B7              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95B7              ; 		   [E] ="0"
 353+ 95B7
 354+ 95B7              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95B7
 356+ 95B7 CD D6 99     Inicializacion call calcula_tercio
 357+ 95BA 28 36        	jr z,primit
 358+ 95BC E6 02        	and 2
 359+ 95BE 20 07        	jr nz,segmit
 360+ 95C0 7D           	ld a,l
 361+ 95C1 FE 7F        	cp $7f
 362+ 95C3 38 2D        	jr c,primit
 363+ 95C5 28 2B        	jr z,primit
 364+ 95C7 CD 24 96     segmit call column
 365+ 95CA 38 13        	jr c,tercuad
 366+ 95CC 3E 04        cuarcuad ld a,4
 367+ 95CE 32 CA 89     	ld (Cuad_objeto),a
 368+ 95D1 21 20 48     	ld hl,$4820
 369+ 95D4 22 F4 89     	ld (Limite_horizontal),hl
 370+ 95D7 21 F6 89     	ld hl,Limite_vertical
 371+ 95DA 36 0D        	ld (hl),$0d
 372+ 95DC 08           	ex af,af
 373+ 95DD 18 3C        	jr 1F
 374+ 95DF              tercuad
 375+ 95DF 3E 03        	ld a,3
 376+ 95E1 32 CA 89     	ld (Cuad_objeto),a
 377+ 95E4 21 20 48     	ld hl,$4820
 378+ 95E7 22 F4 89     	ld (Limite_horizontal),hl
 379+ 95EA 21 F6 89     	ld hl,Limite_vertical
 380+ 95ED 36 12        	ld (hl),$12
 381+ 95EF 08           	ex af,af
 382+ 95F0 18 29        	jr 1F
 383+ 95F2 CD 24 96     primit call column
 384+ 95F5 38 13        	jr c, primcuad
 385+ 95F7              segcuad
 386+ 95F7 3E 02        	ld a,2
 387+ 95F9 32 CA 89     	ld (Cuad_objeto),a
 388+ 95FC 21 C0 4F     	ld hl,$4fc0
 389+ 95FF 22 F4 89     	ld (Limite_horizontal),hl
 390+ 9602 21 F6 89     	ld hl,Limite_vertical
 391+ 9605 36 0D        	ld (hl),$0d
 392+ 9607 08           	ex af,af
 393+ 9608 18 11        	jr 1F
 394+ 960A              primcuad
 395+ 960A 3E 01        	ld a,1
 396+ 960C 32 CA 89     	ld (Cuad_objeto),a
 397+ 960F 21 C0 4F     	ld hl,$4fc0
 398+ 9612 22 F4 89     	ld (Limite_horizontal),hl
 399+ 9615 21 F6 89     	ld hl,Limite_vertical
 400+ 9618 36 12        	ld (hl),$12
 401+ 961A 08           	ex af,af
 402+ 961B CD 61 9D     1 call Genera_coordenadas
 403+ 961E 21 E4 89     	ld hl,Ctrl_0
 404+ 9621 CB EE        	set 5,(hl)
 405+ 9623 C9           	ret
 406+ 9624
 407+ 9624              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9624
 409+ 9624              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9624              ;
 411+ 9624              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9624
 413+ 9624 7D           column ld a,l
 414+ 9625 E6 1F        	and $1f
 415+ 9627 FE 10         	cp $10
 416+ 9629 C9            	ret
 417+ 962A
 418+ 962A              ; --------------------------------------------------------------------------------------------------------------------
 419+ 962A              ;
 420+ 962A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 962A              ;
 422+ 962A              ; 14/12/22
 423+ 962A              ;
 424+ 962A              ;	Modifica: A y BC.
 425+ 962A
 426+ 962A 3A CA 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 962D E6 01        	and 1
 428+ 962F 28 17        	jr z,1F
 429+ 9631
 430+ 9631              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9631
 432+ 9631 3A BC 89     	ld a,(Coordenada_X)
 433+ 9634 47           	ld b,a
 434+ 9635 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9636 79           	ld a,c
 436+ 9637 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9638 38 08        	jr c,2F
 438+ 963A 47           	ld b,a
 439+ 963B 79           	ld a,c
 440+ 963C 90           	sub b
 441+ 963D 32 F3 89     	ld (Columnas),a
 442+ 9640 18 1B        	jr 4F
 443+ 9642 79           2 ld a,c
 444+ 9643 32 F3 89     	ld (Columnas),a
 445+ 9646 18 15        	jr 4F
 446+ 9648
 447+ 9648              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9648
 449+ 9648 3A BC 89     1 ld a,(Coordenada_X)
 450+ 964B 81           	add c
 451+ 964C 3D           	dec a
 452+ 964D D6 1F        	sub $1f
 453+ 964F 38 08        	jr c,3F
 454+ 9651 47           	ld b,a
 455+ 9652 79           	ld a,c
 456+ 9653 90           	sub b
 457+ 9654 32 F3 89     	ld (Columnas),a
 458+ 9657 18 04        	jr 4F
 459+ 9659 79           3 ld a,c
 460+ 965A 32 F3 89     	ld (Columnas),a
 461+ 965D D9           4 exx
 462+ 965E 4F           	ld c,a
 463+ 965F D9           	exx
 464+ 9660 C9            ret
 465+ 9661
 466+ 9661              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9661              ;
 468+ 9661              ;   19/7/23
 469+ 9661              ;
 470+ 9661              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9661              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9661              ;
 473+ 9661              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9661              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9661              ;
 476+ 9661              ;	DESTRUYE: HL,B Y A.
 477+ 9661
 478+ 9661 3A CA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9664 FE 02        	cp 2
 480+ 9666 38 18        	jr c,1F
 481+ 9668 28 16        	jr z,1F
 482+ 966A E6 01        	and 1
 483+ 966C 28 0D        	jr z,3F
 484+ 966E
 485+ 966E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 966E
 487+ 966E CD B4 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9671
 489+ 9671 7D           9 ld a,l
 490+ 9672 E6 1F        	and $1f
 491+ 9674 28 2A        	jr z,7F
 492+ 9676 2B           	dec hl
 493+ 9677 10 F8        	djnz 9B
 494+ 9679 18 25        	jr 7F
 495+ 967B
 496+ 967B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 967B
 498+ 967B 2A B8 89     3 ld hl,(Posicion_actual)
 499+ 967E 18 20        	jr 7F
 500+ 9680
 501+ 9680 28 14        1 jr z,2F
 502+ 9682
 503+ 9682              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9682
 505+ 9682 CD B4 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9685
 507+ 9685 7D           4 ld a,l
 508+ 9686 E6 1F        	and $1f
 509+ 9688 28 03        	jr z,6F
 510+ 968A 2B           	dec hl
 511+ 968B 10 F8        	djnz 4B
 512+ 968D 06 0F        6 ld b,15
 513+ 968F CD 15 97     5 call PreviousScan
 514+ 9692 10 FB        	djnz 5B
 515+ 9694 18 0A        	jr 7F
 516+ 9696
 517+ 9696              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9696
 519+ 9696 CD B4 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9699 06 0F        	ld b,15
 521+ 969B CD 15 97     8 call PreviousScan
 522+ 969E 10 FB        	djnz 8B
 523+ 96A0
 524+ 96A0 E5           7 push hl
 525+ 96A1 DD E1        	pop ix
 526+ 96A3
 527+ 96A3 2A BA 89     	ld hl,(Puntero_objeto)
 528+ 96A6 E5           	push hl
 529+ 96A7 FD E1        	pop iy
 530+ 96A9
 531+ 96A9              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96A9
 533+ 96A9 3A E4 89     	ld a,(Ctrl_0)
 534+ 96AC CB 77        	bit 6,a
 535+ 96AE C8           	ret z
 536+ 96AF
 537+ 96AF              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96AF              ; _ entidad / Amadeus´.
 539+ 96AF
 540+ 96AF DD 22 3E 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96B3
 542+ 96B3 C9           	ret
 543+ 96B4
 544+ 96B4              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96B4              ;
 546+ 96B4              ;	2/1/23
 547+ 96B4              ;
 548+ 96B4              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96B4              ;
 550+ 96B4              ;	Tras esta rutina tenemos:
 551+ 96B4              ;
 552+ 96B4              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96B4              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96B4              ;
 555+ 96B4              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96B4
 557+ 96B4 2A B8 89     Operandos ld hl,(Posicion_actual)
 558+ 96B7 3A F3 89     	ld a,(Columnas)
 559+ 96BA 3D           	dec a
 560+ 96BB 20 01        	jr nz,1F
 561+ 96BD 3C           	inc a
 562+ 96BE 47           1 ld b,a
 563+ 96BF C9           	ret
 564+ 96C0
 565+ 96C0              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96C0              ;
 567+ 96C0              ;	3/1/23
 568+ 96C0              ;
 569+ 96C0              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96C0              ;
 571+ 96C0              ;	Destruye: A,B,HL y DE.
 572+ 96C0
 573+ 96C0              Define_rutina_de_impresion
 574+ 96C0
 575+ 96C0 3A B7 89     	ld a,(Columns)
 576+ 96C3 47           	ld b,a
 577+ 96C4 3A F3 89     	ld a,(Columnas)
 578+ 96C7 B8           	cp b
 579+ 96C8 20 0D        	jr nz,2f
 580+ 96CA
 581+ 96CA              ;	La entidad se imprime entera.
 582+ 96CA
 583+ 96CA 21 A6 97     	ld hl, Indice_entidades_completas
 584+ 96CD E6 01        	and 1
 585+ 96CF 28 02        	jr z,1F
 586+ 96D1
 587+ 96D1 23           	inc hl
 588+ 96D2 23           	inc hl
 589+ 96D3
 590+ 96D3 CD 88 8D     1 call Extrae_address
 591+ 96D6 C9           	ret		;	ret
 592+ 96D7
 593+ 96D7              ;	La entidad no se imprime entera en pantalla.
 594+ 96D7
 595+ 96D7 3A CA 89     2 ld a,(Cuad_objeto)
 596+ 96DA E6 01        	and 1
 597+ 96DC 28 17        	jr z,3F
 598+ 96DE
 599+ 96DE              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96DE
 601+ 96DE 21 AA 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96E1 3A B7 89     4 ld a,(Columns)
 603+ 96E4 E6 01        	and 1
 604+ 96E6 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96E8
 606+ 96E8 23           	inc hl
 607+ 96E9 23           	inc hl
 608+ 96EA
 609+ 96EA 3A F3 89     	ld a,(Columnas)
 610+ 96ED E6 01        	and 1
 611+ 96EF 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96F1
 613+ 96F1 23           	inc hl
 614+ 96F2 23           	inc hl
 615+ 96F3
 616+ 96F3 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96F5
 618+ 96F5 21 B0 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96F8 18 E7        	jr 4B
 620+ 96FA
 621+ 96FA              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96FA              ;
 623+ 96FA              ;	Prepara_draw
 624+ 96FA              ;
 625+ 96FA              ;	Es una rutina de carga.
 626+ 96FA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96FA              ;
 628+ 96FA              ;	FUNCIONAMIENTO:
 629+ 96FA              ;
 630+ 96FA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96FA              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96FA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96FA              ;
 634+ 96FA              ;	DESTRUYE:
 635+ 96FA              ;
 636+ 96FA              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96FA
 638+ 96FA 21 B6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96FD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96FE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96FF 4E           	ld c,(hl)
 642+ 9700 2A B8 89     	ld hl,(Posicion_actual)
 643+ 9703 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9705 C9           	ret
 645+ 9706
 646+ 9706              ;----------------------------------------------------------------------------------------------------------------
 647+ 9706              ;
 648+ 9706              ;	5/08/22
 649+ 9706              ;
 650+ 9706              ;   NextScan.
 651+ 9706              ;
 652+ 9706              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9706              ;
 654+ 9706              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9706              ;
 656+ 9706              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9706              ;
 658+ 9706              ;       DESTRUIDOS: AF y HL !!!
 659+ 9706              ;
 660+ 9706              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9706              ;
 662+ 9706
 663+ 9706 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9707 7C               ld a,h
 665+ 9708 E6 07            and 7
 666+ 970A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 970B
 668+ 970B 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 970C C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 970E 6F               ld l,a
 671+ 970F D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9710
 673+ 9710 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9711 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9713 67               ld h,a
 676+ 9714 C9               ret
 677+ 9715
 678+ 9715              ;----------------------------------------------------------------------------------------------------------------
 679+ 9715              ;
 680+ 9715              ;	5/08/22
 681+ 9715              ;
 682+ 9715              ;   PreviousScan.
 683+ 9715              ;
 684+ 9715              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9715              ;
 686+ 9715              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9715              ;
 688+ 9715              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9715              ;
 690+ 9715              ;       DESTRUIDOS: AF y HL !!!
 691+ 9715              ;
 692+ 9715              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9715              ;
 694+ 9715
 695+ 9715 7C           PreviousScan ld a,h
 696+ 9716 25               dec h               ; Dec H.
 697+ 9717 E6 07            and 7
 698+ 9719 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 971A
 700+ 971A 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 971B D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 971D 6F               ld l,a
 703+ 971E D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 971F
 705+ 971F 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9720 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9722 67               ld h,a
 708+ 9723 C9               ret
 709+ 9724
 710+ 9724              ; -----------------------------------------------------------------------------------
 711+ 9724              ;
 712+ 9724              ;	31/7/23
 713+ 9724              ;
 714+ 9724              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9724              ;	Extrae fotos de Album_de_fotos.
 716+ 9724
 717+ 9724              Extrae_foto_entidades
 718+ 9724
 719+ 9724              ;	ld a,(Contador_de_frames)
 720+ 9724              ;	cp $1e
 721+ 9724              ;	jr z,$
 722+ 9724
 723+ 9724 21 01 70     	ld hl,Album_de_fotos+1
 724+ 9727 7E           	ld a,(hl)
 725+ 9728 A7           	and a
 726+ 9729 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 972A
 728+ 972A 3A 05 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 972D A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 730+ 972E C8           	ret z
 731+ 972F
 732+ 972F              ; -----------------------------------
 733+ 972F
 734+ 972F ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9733 31 00 70     	ld sp,Album_de_fotos
 736+ 9736
 737+ 9736 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 9738 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 9739 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 973A
 741+ 973A ED 73 0C 8A  	ld (Stack_2),sp
 742+ 973E ED 7B 0A 8A  	ld sp,(Stack)
 743+ 9742
 744+ 9742              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9742
 746+ 9742 3E CD        	ld a,$cd
 747+ 9744 32 4C 97     	ld (Imprime),a
 748+ 9747 EB           	ex de,hl
 749+ 9748 22 4D 97     	ld (Imprime+1),hl
 750+ 974B EB           	ex de,hl
 751+ 974C
 752+ 974C              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 974C
 754+ 974C 00 00 00     Imprime db 0,0,0
 755+ 974F
 756+ 974F ED 73 0A 8A  	ld (Stack),sp
 757+ 9753
 758+ 9753 3A 05 8A     	ld a,(Numero_de_malotes)
 759+ 9756 3D           	dec a
 760+ 9757 28 09        	jr z,1F
 761+ 9759 32 05 8A      	ld (Numero_de_malotes),a
 762+ 975C
 763+ 975C ED 7B 0C 8A  	ld sp,(Stack_2)
 764+ 9760 18 D4        	jr 2B
 765+ 9762
 766+ 9762 AF           1 xor a
 767+ 9763 32 0C 8A     	ld (Stack_2),a
 768+ 9766
 769+ 9766 C9           	ret
 770+ 9767
 771+ 9767              ; -----------------------------------------------------------------------------------
 772+ 9767              ;
 773+ 9767              ;	28/2/23
 774+ 9767              ;
 775+ 9767              ;	Pinta los disparos generados.
 776+ 9767
 777+ 9767              Extrae_foto_disparos
 778+ 9767
 779+ 9767 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 780+ 976A 7E               ld a,(hl)
 781+ 976B A7               and a
 782+ 976C C8               ret z
 783+ 976D
 784+ 976D 3A 2E 8A     	ld a,(Numero_de_disparotes)
 785+ 9770 A7           	and a
 786+ 9771 C8           	ret z
 787+ 9772 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9776 31 0D 72     	ld sp,Album_de_fotos_disparos
 789+ 9779
 790+ 9779 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 977B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 977C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 977D
 794+ 977D ED 73 0C 8A  	ld (Stack_2),sp
 795+ 9781 ED 7B 0A 8A  	ld sp,(Stack)
 796+ 9785
 797+ 9785              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9785
 799+ 9785 3E CD        	ld a,$cd
 800+ 9787 32 8F 97     	ld (Imprime2),a
 801+ 978A EB           	ex de,hl
 802+ 978B 22 90 97     	ld (Imprime2+1),hl
 803+ 978E EB           	ex de,hl
 804+ 978F
 805+ 978F              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 978F
 807+ 978F 00 00 00     Imprime2 db 0,0,0
 808+ 9792
 809+ 9792 3A 2E 8A     	ld a,(Numero_de_disparotes)
 810+ 9795 3D           	dec a
 811+ 9796 28 09        	jr z,1F
 812+ 9798 32 2E 8A      	ld (Numero_de_disparotes),a
 813+ 979B
 814+ 979B ED 7B 0C 8A  	ld sp,(Stack_2)
 815+ 979F 18 D8        	jr 2B
 816+ 97A1
 817+ 97A1 AF           1 xor a
 818+ 97A2 32 0C 8A     	ld (Stack_2),a
 819+ 97A5 C9           	ret
 820+ 97A6
# file closed: Draw_XOR.asm
1489  97A6              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97A6              ;   índices de Rutinas de impresión.
   2+ 97A6
   3+ 97A6 B6 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97A8 E3 97            defw Pinta_Amadeus_3x2
   5+ 97AA
   6+ 97AA 39 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97AC D9 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97AE 8D 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97B0
  10+ 97B0 63 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97B2 67 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97B4 1B 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97B6
  14+ 97B6
  15+ 97B6              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97B6              ;
  17+ 97B6              ;   12/12/22
  18+ 97B6              ;
  19+ 97B6              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97B6              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97B6              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97B6              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97B6              ;
  24+ 97B6              ;   Modifica: DE y HL.
  25+ 97B6
  26+ 97B6 ED 73 0A 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97BA FD F9        	ld sp,iy
  28+ 97BC 06 10            ld b,16
  29+ 97BE D1           1 pop de
  30+ 97BF 7B               ld a,e
  31+ 97C0 AE               xor (hl)
  32+ 97C1 77           	ld (hl),a
  33+ 97C2 23           	inc hl
  34+ 97C3 7A               ld a,d
  35+ 97C4 AE               xor (hl)
  36+ 97C5 77           	ld (hl),a
  37+ 97C6 2B           	dec hl
  38+ 97C7 24           	inc h
  39+ 97C8 7C               ld a,h
  40+ 97C9 E6 07            and 7
  41+ 97CB 20 0A            jr nz,2F
  42+ 97CD 7D               ld a,l
  43+ 97CE C6 20            add a,$20
  44+ 97D0 6F               ld l,a
  45+ 97D1 38 04            jr c,2F
  46+ 97D3 7C               ld a,h
  47+ 97D4 D6 08            sub 8
  48+ 97D6 67               ld h,a
  49+ 97D7 7C           2 ld a,h
  50+ 97D8 FE 58            cp $58
  51+ 97DA 28 02            jr z,3F
  52+ 97DC 10 E0            djnz 1B
  53+ 97DE ED 7B 0A 8A  3 ld sp,(Stack)
  54+ 97E2 C9           	ret
  55+ 97E3
  56+ 97E3 ED 73 0A 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97E7 FD F9        	ld sp,iy
  58+ 97E9 06 08            ld b,8
  59+ 97EB D1           1 pop de
  60+ 97EC 7B               ld a,e
  61+ 97ED AE               xor (hl)
  62+ 97EE 77           	ld (hl),a
  63+ 97EF 23           	inc hl
  64+ 97F0 7A               ld a,d
  65+ 97F1 AE               xor (hl)
  66+ 97F2 77           	ld (hl),a
  67+ 97F3 23           	inc hl
  68+ 97F4 D1           	pop de
  69+ 97F5 7B               ld a,e
  70+ 97F6 AE               xor (hl)
  71+ 97F7 77           	ld (hl),a
  72+ 97F8 2B           	dec hl
  73+ 97F9 2B           	dec hl
  74+ 97FA 24           	inc h
  75+ 97FB 7C               ld a,h
  76+ 97FC E6 07            and 7
  77+ 97FE 20 0A            jr nz,2F
  78+ 9800 7D               ld a,l
  79+ 9801 C6 20            add a,$20
  80+ 9803 6F               ld l,a
  81+ 9804 38 04            jr c,2F
  82+ 9806 7C               ld a,h
  83+ 9807 D6 08            sub 8
  84+ 9809 67               ld h,a
  85+ 980A 7C           2 ld a,h
  86+ 980B FE 58            cp $58
  87+ 980D 28 25            jr z,4F
  88+ 980F 7A               ld a,d
  89+ 9810 AE               xor (hl)
  90+ 9811 77               ld (hl),a
  91+ 9812 D1           	pop de
  92+ 9813 23           	inc hl
  93+ 9814 7B               ld a,e
  94+ 9815 AE               xor (hl)
  95+ 9816 77           	ld (hl),a
  96+ 9817 23           	inc hl
  97+ 9818 7A               ld a,d
  98+ 9819 AE               xor (hl)
  99+ 981A 77           	ld (hl),a
 100+ 981B 2B           	dec hl
 101+ 981C 2B           	dec hl
 102+ 981D 24           	inc h
 103+ 981E 7C               ld a,h
 104+ 981F E6 07            and 7
 105+ 9821 20 0A            jr nz,3F
 106+ 9823 7D               ld a,l
 107+ 9824 C6 20            add a,$20
 108+ 9826 6F               ld l,a
 109+ 9827 38 04            jr c,3F
 110+ 9829 7C               ld a,h
 111+ 982A D6 08            sub 8
 112+ 982C 67               ld h,a
 113+ 982D 7C           3 ld a,h
 114+ 982E FE 58            cp $58
 115+ 9830 28 02            jr z,4F
 116+ 9832 10 B7            djnz 1B
 117+ 9834 ED 7B 0A 8A  4 ld sp,(Stack)
 118+ 9838 C9           	ret
 119+ 9839
 120+ 9839              ; ---------------------------------------------------
 121+ 9839
 122+ 9839 ED 73 0A 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 983D FD F9        	ld sp,iy
 124+ 983F
 125+ 983F              ; >>>
 126+ 983F
 127+ 983F 06 10            ld b,16
 128+ 9841 D1           1 pop de
 129+ 9842 7A           	ld a,d
 130+ 9843 AE           	xor (hl)
 131+ 9844 77           	ld (hl),a
 132+ 9845 24           	inc h
 133+ 9846 7C               ld a,h
 134+ 9847 E6 07            and 7
 135+ 9849 20 0C            jr nz,2F
 136+ 984B 7D               ld a,l
 137+ 984C C6 20            add a,$20
 138+ 984E 6F               ld l,a
 139+ 984F 38 06            jr c,2F
 140+ 9851 7C               ld a,h
 141+ 9852 D6 08            sub 8
 142+ 9854 67               ld h,a
 143+ 9855 18 00            jr 2F
 144+ 9857 7C           2 ld a,h
 145+ 9858 FE 58            cp $58
 146+ 985A 28 02            jr z,3F
 147+ 985C 10 E3            djnz 1B
 148+ 985E ED 7B 0A 8A  3 ld sp,(Stack)
 149+ 9862 C9           	ret
 150+ 9863
 151+ 9863 ED 73 0A 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9867 FD F9        	ld sp,iy
 153+ 9869
 154+ 9869              ; >>>
 155+ 9869
 156+ 9869 06 10            ld b,16
 157+ 986B D1           1 pop de
 158+ 986C 7B           	ld a,e
 159+ 986D AE           	xor (hl)
 160+ 986E 77           	ld (hl),a
 161+ 986F 24           	inc h
 162+ 9870 7C               ld a,h
 163+ 9871 E6 07            and 7
 164+ 9873 20 0C            jr nz,2F
 165+ 9875 7D               ld a,l
 166+ 9876 C6 20            add a,$20
 167+ 9878 6F               ld l,a
 168+ 9879 38 06            jr c,2F
 169+ 987B 7C               ld a,h
 170+ 987C D6 08            sub 8
 171+ 987E 67               ld h,a
 172+ 987F 18 00            jr 2F
 173+ 9881 7C           2 ld a,h
 174+ 9882 FE 58            cp $58
 175+ 9884 28 02            jr z,3F
 176+ 9886 10 E3            djnz 1B
 177+ 9888 ED 7B 0A 8A  3 ld sp,(Stack)
 178+ 988C C9           	ret
 179+ 988D
 180+ 988D              ; ---------------------------------------------------
 181+ 988D
 182+ 988D ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9891 FD F9        	ld sp,iy
 184+ 9893 06 08            ld b,8
 185+ 9895 D1           1 pop de
 186+ 9896 7A           	ld a,d
 187+ 9897 AE           	xor (hl)
 188+ 9898 77           	ld (hl),a
 189+ 9899 23           	inc hl
 190+ 989A D1           	pop de
 191+ 989B 7B           	ld a,e
 192+ 989C AE           	xor (hl)
 193+ 989D 77           	ld (hl),a
 194+ 989E 2B           	dec hl
 195+ 989F 24            	inc h
 196+ 98A0 7C               ld a,h
 197+ 98A1 E6 07            and 7
 198+ 98A3 20 0A            jr nz,2F
 199+ 98A5 7D               ld a,l
 200+ 98A6 C6 20            add a,$20
 201+ 98A8 6F               ld l,a
 202+ 98A9 38 04            jr c,2F
 203+ 98AB 7C               ld a,h
 204+ 98AC D6 08            sub 8
 205+ 98AE 67               ld h,a
 206+ 98AF 7C           2 ld a,h
 207+ 98B0 FE 58            cp $58
 208+ 98B2 28 20            jr z,4F
 209+ 98B4 D1               pop de
 210+ 98B5 7B           	ld a,e
 211+ 98B6 AE           	xor (hl)
 212+ 98B7 77           	ld (hl),a
 213+ 98B8 23           	inc hl
 214+ 98B9 7A           	ld a,d
 215+ 98BA AE           	xor (hl)
 216+ 98BB 77           	ld (hl),a
 217+ 98BC 2B           	dec hl
 218+ 98BD 24           	inc h
 219+ 98BE 7C               ld a,h
 220+ 98BF E6 07            and 7
 221+ 98C1 20 0A            jr nz,3F
 222+ 98C3 7D               ld a,l
 223+ 98C4 C6 20            add a,$20
 224+ 98C6 6F               ld l,a
 225+ 98C7 38 04            jr c,3F
 226+ 98C9 7C               ld a,h
 227+ 98CA D6 08            sub 8
 228+ 98CC 67               ld h,a
 229+ 98CD 7C           3 ld a,h
 230+ 98CE FE 58            cp $58
 231+ 98D0 28 02            jr z,4F
 232+ 98D2 10 C1            djnz 1B
 233+ 98D4 ED 7B 0A 8A  4 ld sp,(Stack)
 234+ 98D8 C9           	ret
 235+ 98D9
 236+ 98D9 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98DD FD F9        	ld sp,iy
 238+ 98DF 06 08            ld b,8
 239+ 98E1 D1           1 pop de
 240+ 98E2 D1           	pop de
 241+ 98E3 7B           	ld a,e
 242+ 98E4 AE           	xor (hl)
 243+ 98E5 77           	ld (hl),a
 244+ 98E6 24            	inc h
 245+ 98E7 7C               ld a,h
 246+ 98E8 E6 07            and 7
 247+ 98EA 20 0A            jr nz,2F
 248+ 98EC 7D               ld a,l
 249+ 98ED C6 20            add a,$20
 250+ 98EF 6F               ld l,a
 251+ 98F0 38 04            jr c,2F
 252+ 98F2 7C               ld a,h
 253+ 98F3 D6 08            sub 8
 254+ 98F5 67               ld h,a
 255+ 98F6 7C           2 ld a,h
 256+ 98F7 FE 58            cp $58
 257+ 98F9 28 1B            jr z,4F
 258+ 98FB D1               pop de
 259+ 98FC 7A           	ld a,d
 260+ 98FD AE           	xor (hl)
 261+ 98FE 77           	ld (hl),a
 262+ 98FF 24           	inc h
 263+ 9900 7C               ld a,h
 264+ 9901 E6 07            and 7
 265+ 9903 20 0A            jr nz,3F
 266+ 9905 7D               ld a,l
 267+ 9906 C6 20            add a,$20
 268+ 9908 6F               ld l,a
 269+ 9909 38 04            jr c,3F
 270+ 990B 7C               ld a,h
 271+ 990C D6 08            sub 8
 272+ 990E 67               ld h,a
 273+ 990F 7C           3 ld a,h
 274+ 9910 FE 58            cp $58
 275+ 9912 28 02            jr z,4F
 276+ 9914 10 CB            djnz 1B
 277+ 9916 ED 7B 0A 8A  4 ld sp,(Stack)
 278+ 991A C9           	ret
 279+ 991B
 280+ 991B ED 73 0A 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 991F FD F9        	ld sp,iy
 282+ 9921 06 08            ld b,8
 283+ 9923 D1           1 pop de
 284+ 9924 7B           	ld a,e
 285+ 9925 AE           	xor (hl)
 286+ 9926 77           	ld (hl),a
 287+ 9927 23           	inc hl
 288+ 9928 7A           	ld a,d
 289+ 9929 AE           	xor (hl)
 290+ 992A 77           	ld (hl),a
 291+ 992B 2B           	dec hl
 292+ 992C 24             	inc h
 293+ 992D 7C               ld a,h
 294+ 992E E6 07            and 7
 295+ 9930 20 0A            jr nz,2F
 296+ 9932 7D               ld a,l
 297+ 9933 C6 20            add a,$20
 298+ 9935 6F               ld l,a
 299+ 9936 38 04            jr c,2F
 300+ 9938 7C               ld a,h
 301+ 9939 D6 08            sub 8
 302+ 993B 67               ld h,a
 303+ 993C 7C           2 ld a,h
 304+ 993D FE 58            cp $58
 305+ 993F 28 21            jr z,4F
 306+ 9941 D1               pop de
 307+ 9942 7A           	ld a,d
 308+ 9943 AE           	xor (hl)
 309+ 9944 77           	ld (hl),a
 310+ 9945 23           	inc hl
 311+ 9946 D1               pop de
 312+ 9947 7B           	ld a,e
 313+ 9948 AE           	xor (hl)
 314+ 9949 77           	ld (hl),a
 315+ 994A 2B           	dec hl
 316+ 994B 24           	inc h
 317+ 994C 7C               ld a,h
 318+ 994D E6 07            and 7
 319+ 994F 20 0A            jr nz,3F
 320+ 9951 7D               ld a,l
 321+ 9952 C6 20            add a,$20
 322+ 9954 6F               ld l,a
 323+ 9955 38 04            jr c,3F
 324+ 9957 7C               ld a,h
 325+ 9958 D6 08            sub 8
 326+ 995A 67               ld h,a
 327+ 995B 7C           3 ld a,h
 328+ 995C FE 58            cp $58
 329+ 995E 28 02            jr z,4F
 330+ 9960 10 C1            djnz 1B
 331+ 9962 ED 7B 0A 8A  4 ld sp,(Stack)
 332+ 9966 C9           	ret
 333+ 9967
 334+ 9967 ED 73 0A 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 996B FD F9        	ld sp,iy
 336+ 996D 06 08            ld b,8
 337+ 996F D1           1 pop de
 338+ 9970 7B           	ld a,e
 339+ 9971 AE           	xor (hl)
 340+ 9972 77           	ld (hl),a
 341+ 9973 24            	inc h
 342+ 9974 7C               ld a,h
 343+ 9975 E6 07            and 7
 344+ 9977 20 0A            jr nz,2F
 345+ 9979 7D               ld a,l
 346+ 997A C6 20            add a,$20
 347+ 997C 6F               ld l,a
 348+ 997D 38 04            jr c,2F
 349+ 997F 7C               ld a,h
 350+ 9980 D6 08            sub 8
 351+ 9982 67               ld h,a
 352+ 9983 7C           2 ld a,h
 353+ 9984 FE 58            cp $58
 354+ 9986 28 1C            jr z,4F
 355+ 9988 D1               pop de
 356+ 9989 7A           	ld a,d
 357+ 998A AE           	xor (hl)
 358+ 998B 77           	ld (hl),a
 359+ 998C 24           	inc h
 360+ 998D 7C               ld a,h
 361+ 998E E6 07            and 7
 362+ 9990 20 0A            jr nz,3F
 363+ 9992 7D               ld a,l
 364+ 9993 C6 20            add a,$20
 365+ 9995 6F               ld l,a
 366+ 9996 38 04            jr c,3F
 367+ 9998 7C               ld a,h
 368+ 9999 D6 08            sub 8
 369+ 999B 67               ld h,a
 370+ 999C 7C           3 ld a,h
 371+ 999D FE 58            cp $58
 372+ 999F 28 03            jr z,4F
 373+ 99A1 D1               pop de
 374+ 99A2 10 CB            djnz 1B
 375+ 99A4 ED 7B 0A 8A  4 ld sp,(Stack)
 376+ 99A8 C9           	ret
 377+ 99A9
 378+ 99A9              ; ---------------------------------------------------
 379+ 99A9              ;
 380+ 99A9              ;   27/02/23
 381+ 99A9              ;
 382+ 99A9              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99A9              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99A9              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99A9
 386+ 99A9 ED 73 0A 8A  Pinta_Disparo ld (Stack),sp
 387+ 99AD FD F9            ld sp,iy
 388+ 99AF 06 03            ld b,3
 389+ 99B1 D1           1 pop de
 390+ 99B2 7B               ld a,e
 391+ 99B3 AE               xor (hl)
 392+ 99B4 77               ld (hl),a
 393+ 99B5 23               inc hl
 394+ 99B6 7A               ld a,d
 395+ 99B7 AE               xor (hl)
 396+ 99B8 77               ld (hl),a
 397+ 99B9 2B               dec hl
 398+ 99BA
 399+ 99BA 24               inc h
 400+ 99BB 7C               ld a,h
 401+ 99BC E6 07            and 7
 402+ 99BE 20 0A            jr nz,2F
 403+ 99C0 7D               ld a,l
 404+ 99C1 C6 20            add a,$20
 405+ 99C3 6F               ld l,a
 406+ 99C4 38 04            jr c,2F
 407+ 99C6 7C               ld a,h
 408+ 99C7 D6 08            sub 8
 409+ 99C9 67               ld h,a
 410+ 99CA 7C           2 ld a,h
 411+ 99CB FE 58            cp $58
 412+ 99CD 28 02            jr z,3F
 413+ 99CF
 414+ 99CF 10 E0            djnz 1B
 415+ 99D1 ED 7B 0A 8A  3 ld sp,(Stack)
 416+ 99D5 C9               ret
 417+ 99D6
# file closed: Rutinas_de_impresion_sprites.asm
1490  99D6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99D6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99D6              ;
   3+ 99D6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99D6              ;
   5+ 99D6              ; *****************************************************************************************************************************************************************************************
   6+ 99D6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99D6
   8+ 99D6 7C           calcula_tercio ld a,h
   9+ 99D7 E6 18        	and $18
  10+ 99D9 CB 2F        	sra a
  11+ 99DB CB 2F        	sra a
  12+ 99DD CB 2F        	sra a
  13+ 99DF C9           	ret
  14+ 99E0
# file closed: calcula_tercio.asm
1491  99E0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99E0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99E0              ;
   3+ 99E0              ;
   4+ 99E0              ;	CLS.
   5+ 99E0              ;
   6+ 99E0              ;	Limpia la pantalla y define sus atributos.
   7+ 99E0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99E0              ;
   9+ 99E0              ;	COLORES: 0 ..... NEGRO
  10+ 99E0              ;    		 1 ..... AZUL
  11+ 99E0              ; 			 2 ..... ROJO
  12+ 99E0              ;			 3 ..... MAGENTA
  13+ 99E0              ; 			 4 ..... VERDE
  14+ 99E0              ; 			 5 ..... CIAN
  15+ 99E0              ;			 6 ..... AMARILLO
  16+ 99E0              ; 			 7 ..... BLANCO
  17+ 99E0              ;
  18+ 99E0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99E0              ;
  20+ 99E0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99E0
  22+ 99E0
  23+ 99E0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99E3 11 01 40     	LD DE,$4001
  25+ 99E6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99E9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99EB ED B0        	LDIR
  28+ 99ED 01 FF 02     	LD BC,767
  29+ 99F0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99F1 ED B0        	LDIR
  31+ 99F3 C9           	ret
  32+ 99F4
# file closed: Cls.asm
1492  99F4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F4              ; ******************************************************************************************************************************************************************************************
   2+ 99F4              ;
   3+ 99F4              ;   20/05/23
   4+ 99F4              ;
   5+ 99F4              ;	Recompone_posicion_inicio
   6+ 99F4              ;
   7+ 99F4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99F4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99F4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99F4              ;	_ a una u otra rutina.
  11+ 99F4
  12+ 99F4              Recompone_posicion_inicio
  13+ 99F4
  14+ 99F4 2A C8 89     	ld hl,(Posicion_inicio)
  15+ 99F7 7D           	ld a,l
  16+ 99F8 E6 1F        	and $1f
  17+ 99FA 28 16        	jr z,1F
  18+ 99FC
  19+ 99FC FE 1F        	cp $1f
  20+ 99FE 28 0D        	jr z,3F
  21+ 9A00
  22+ 9A00 21 F7 89     	ld hl,Ctrl_2
  23+ 9A03 CB C6        	set 0,(hl)
  24+ 9A05 2A BA 89     	ld hl,(Puntero_objeto)
  25+ 9A08 22 FA 89     	ld (Repone_puntero_objeto),hl
  26+ 9A0B 18 08        	jr 2F
  27+ 9A0D
  28+ 9A0D CD AE 9B     3 call Mov_left
  29+ 9A10 18 03        	jr 2F
  30+ 9A12
  31+ 9A12 CD 90 9A     1 call Mov_right
  32+ 9A15 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A18 22 BA 89     	ld (Puntero_objeto),hl
  34+ 9A1B C9           	ret
  35+ 9A1C
  36+ 9A1C              ; ******************************************************************************************************************************************************************************************
  37+ 9A1C              ;
  38+ 9A1C              ;   27/05/23
  39+ 9A1C              ;
  40+ 9A1C              ;	Mov_down
  41+ 9A1C              ;
  42+ 9A1C              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A1C              ;
  44+ 9A1C              ;
  45+ 9A1C              Mov_down
  46+ 9A1C
  47+ 9A1C CD 7E 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A1F              ;																	; _ repone (Puntero_objeto).
  49+ 9A1F 21 E4 89     	ld hl,Ctrl_0
  50+ 9A22 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A24              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A24              ; 																	; _ en el caso de que no lo haya.
  53+ 9A24 3A CE 89     	ld a,(Vel_down)
  54+ 9A27 47           	ld b,a
  55+ 9A28 2A B8 89         ld hl,(Posicion_actual)
  56+ 9A2B CD D6 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A2E E6 02        	and 2
  58+ 9A30 28 0F        	jr z,1F
  59+ 9A32
  60+ 9A32              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A32              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A32
  63+ 9A32 7C           	ld a,h
  64+ 9A33 FE 57        	cp $57
  65+ 9A35 20 0A        	jr nz,1F
  66+ 9A37
  67+ 9A37 7D           	ld a,l
  68+ 9A38 C6 20        	add $20
  69+ 9A3A 30 05        	jr nc,1F
  70+ 9A3C
  71+ 9A3C              ; ------------------------------
  72+ 9A3C              ;	call Reaparece_arriba
  73+ 9A3C CD 3B 9D     	call Reinicio
  74+ 9A3F              ; ------------------------------
  75+ 9A3F
  76+ 9A3F 18 08        	jr 3F
  77+ 9A41 CD 06 97     1 call NextScan
  78+ 9A44 22 B8 89     	ld (Posicion_actual),hl
  79+ 9A47 10 E2            djnz 2B
  80+ 9A49 CD 61 9D     3 call Genera_coordenadas
  81+ 9A4C C9           	ret
  82+ 9A4D
  83+ 9A4D              ; ******************************************************************************************************************************************************************************************
  84+ 9A4D              ;
  85+ 9A4D              ;   27/05/23
  86+ 9A4D              ;
  87+ 9A4D              ;	Mov_up
  88+ 9A4D              ;
  89+ 9A4D              ; 	Mueve el Sprite hacia arriba.
  90+ 9A4D              ;
  91+ 9A4D              ;
  92+ 9A4D              Mov_up
  93+ 9A4D
  94+ 9A4D CD 7E 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A50              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A50 21 E4 89     	ld hl,Ctrl_0
  97+ 9A53 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A55              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A55              ; 																		; _ en el caso de que no lo haya.
 100+ 9A55 3A CD 89     	ld a,(Vel_up)
 101+ 9A58 47           	ld b,a
 102+ 9A59 2A B8 89     	ld hl,(Posicion_actual)
 103+ 9A5C CD D6 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A5F A7           	and a
 105+ 9A60 20 10        	jr nz,1F
 106+ 9A62
 107+ 9A62              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A62              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A62
 110+ 9A62 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A63 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A65 20 0B            jr nz,1F
 113+ 9A67 7D               ld a,l
 114+ 9A68 D6 20            sub $20
 115+ 9A6A 30 06            jr nc,1F
 116+ 9A6C 25               dec h
 117+ 9A6D
 118+ 9A6D              ; -----------------------------
 119+ 9A6D CD 1C 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A70              ;	call Reinicio
 121+ 9A70              ; -----------------------------
 122+ 9A70
 123+ 9A70 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A72 CD 15 97     1 call PreviousScan
 125+ 9A75 22 B8 89     	ld (Posicion_actual),hl
 126+ 9A78 10 E2            djnz 3B
 127+ 9A7A CD 61 9D     2 call Genera_coordenadas
 128+ 9A7D C9           	ret
 129+ 9A7E
 130+ 9A7E              ; -----------------------------
 131+ 9A7E              ;
 132+ 9A7E              ;	27/5/23
 133+ 9A7E              ;
 134+ 9A7E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A7E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A7E              ;
 137+ 9A7E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A7E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A7E              ;
 140+ 9A7E              ;	Modifica: A y (Puntero_objeto).
 141+ 9A7E
 142+ 9A7E 3A F7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A81 CB 47        	bit 0,a
 144+ 9A83 C8           	ret z
 145+ 9A84 CB 87        	res 0,a
 146+ 9A86 32 F7 89     	ld (Ctrl_2),a
 147+ 9A89 2A FA 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A8C 22 BA 89     	ld (Puntero_objeto),hl
 149+ 9A8F C9           	ret
 150+ 9A90
 151+ 9A90              ; ******************************************************************************************************************************************************************************************
 152+ 9A90              ;
 153+ 9A90              ;	19/10/22
 154+ 9A90              ;
 155+ 9A90              ;	Mov_right.
 156+ 9A90              ;
 157+ 9A90              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A90              ;
 159+ 9A90
 160+ 9A90 21 E4 89     Mov_right ld hl,Ctrl_0
 161+ 9A93 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A95              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A95              ; 																	; _ en el caso de que no lo haya.
 164+ 9A95 3A E4 89     	ld a,(Ctrl_0)
 165+ 9A98 CB 77        	bit 6,a
 166+ 9A9A 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A9C
 168+ 9A9C CD CA 9C     	call Stop_Amadeus_right
 169+ 9A9F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9AA0 18 4D        	jr 8F
 171+ 9AA2
 172+ 9AA2 3A BC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AA5 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9AA7 20 46        	jr nz,8F
 175+ 9AA9
 176+ 9AA9 3A BE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9AAC A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AAD 28 40        	jr z,8F
 179+ 9AAF
 180+ 9AAF              ; ---------- ---------- ----------
 181+ 9AAF              ;
 182+ 9AAF              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9AAF
 184+ 9AAF 3A CC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AB2 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AB4 28 11        	jr z,1F
 187+ 9AB6 38 06        	jr c,6F
 188+ 9AB8 FE 04        	cp 4
 189+ 9ABA 28 14        	jr z,7F
 190+ 9ABC 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9ABE
 192+ 9ABE              ; ---------- ---------- ----------
 193+ 9ABE              ;
 194+ 9ABE              ; Perfiles de velocidad
 195+ 9ABE              ;
 196+ 9ABE
 197+ 9ABE 3A BE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AC1 FE FE        	cp $fe
 199+ 9AC3 20 2A        	jr nz,8F
 200+ 9AC5 18 10        	jr 3F
 201+ 9AC7 3A BE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9ACA FE FD        	cp $fd
 203+ 9ACC 20 21        	jr nz,8F
 204+ 9ACE 18 07        	jr 3F
 205+ 9AD0 3A BE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AD3 FE FB        	cp $fb
 207+ 9AD5 20 18        	jr nz,8F
 208+ 9AD7
 209+ 9AD7              ; ---------- ---------- ----------
 210+ 9AD7
 211+ 9AD7              3
 212+ 9AD7 CD 0A 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9ADA              ;	call Reinicio
 214+ 9ADA
 215+ 9ADA              ; ---------- ---------- ----------
 216+ 9ADA              ;
 217+ 9ADA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9ADA
 219+ 9ADA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9ADC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9ADD CD F6 9A     	call DESPLZ_DER
 222+ 9AE0 C1           	pop bc
 223+ 9AE1 10 F9        	djnz 5B
 224+ 9AE3 2A B8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AE6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AE7 22 B8 89     	ld (Posicion_actual),hl
 227+ 9AEA CD 61 9D     	call Genera_coordenadas
 228+ 9AED 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AEF
 230+ 9AEF              ; ---------- ---------- ----------
 231+ 9AEF
 232+ 9AEF 2A B8 89     8 ld hl,(Posicion_actual)
 233+ 9AF2 CD F6 9A     	call DESPLZ_DER
 234+ 9AF5 C9           2 ret
 235+ 9AF6
 236+ 9AF6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AF6              ;
 238+ 9AF6              ;	22/9/22
 239+ 9AF6              ;
 240+ 9AF6
 241+ 9AF6 CD 05 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9AF9 CD 51 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AFC CD 7A 9B         call Ciclo_completo
 244+ 9AFF 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B02 CB FE        	set 7,(hl)
 246+ 9B04 C9           	ret
 247+ 9B05
 248+ 9B05              ; ******************************************************************************************************************************************************************************************
 249+ 9B05              ;	15/02/23
 250+ 9B05              ;
 251+ 9B05
 252+ 9B05 3A CC 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B08 47           	ld b,a
 254+ 9B09 2A C4 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B0C 23           1 inc hl
 256+ 9B0D 23           	inc hl
 257+ 9B0E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B10 22 C4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B13 CD 88 8D     	call Extrae_address
 260+ 9B16 22 BA 89     	ld (Puntero_objeto),hl
 261+ 9B19
 262+ 9B19              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B19
 264+ 9B19              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B19              ; Cuántos movimientos hemos hecho ??
 266+ 9B19              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B19
 268+ 9B19 2A C0 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B1C EB           	ex de,hl
 270+ 9B1D A7           	and a
 271+ 9B1E ED 52        	sbc hl,de
 272+ 9B20 CB 3D        	srl l
 273+ 9B22 3E 08        6 ld a,8
 274+ 9B24 95           	sub l
 275+ 9B25 30 1E        	jr nc,3F
 276+ 9B27
 277+ 9B27              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B27              ; B="0".
 279+ 9B27
 280+ 9B27 04           4 inc b
 281+ 9B28 3C           	inc a
 282+ 9B29 20 FC        	jr nz,4B
 283+ 9B2B 78           	ld a,b
 284+ 9B2C 08           	ex af,af
 285+ 9B2D 2A C0 89     	ld hl,(Indice_Sprite_der)
 286+ 9B30 23           5 inc hl
 287+ 9B31 23           	inc hl
 288+ 9B32 10 FC        	djnz 5B
 289+ 9B34 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B37 CD 88 8D     	call Extrae_address
 291+ 9B3A 22 BA 89     	ld (Puntero_objeto),hl
 292+ 9B3D
 293+ 9B3D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B3D              ; _(Posicion_actual).
 295+ 9B3D
 296+ 9B3D 21 B8 89     	ld hl,Posicion_actual
 297+ 9B40 34           	inc (hl)
 298+ 9B41 08               ex af,af
 299+ 9B42 6F           	ld l,a
 300+ 9B43 18 DD        	jr 6B
 301+ 9B45
 302+ 9B45              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B45
 304+ 9B45 47           3 ld b,a
 305+ 9B46 2A C2 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B49 23           2 inc hl
 307+ 9B4A 23           	inc hl
 308+ 9B4B 10 FC        	djnz 2B
 309+ 9B4D 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B50 C9           8 ret
 311+ 9B51
 312+ 9B51              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B51              ;
 314+ 9B51              ;	24/7/22
 315+ 9B51              ;
 316+ 9B51              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B51              ;
 318+ 9B51              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B51              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B51              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B51
 322+ 9B51 3A BE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B54 A7           	and a
 324+ 9B55 20 1F        	jr nz,1F
 325+ 9B57 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B59 32 BE 89         ld (CTRL_DESPLZ),a
 327+ 9B5C
 328+ 9B5C 21 B7 89     	ld hl,Columns
 329+ 9B5F 34           	inc (hl)
 330+ 9B60 3A CA 89     	ld a,(Cuad_objeto)
 331+ 9B63 E6 01        	and 1
 332+ 9B65 28 0F        	jr z,1F
 333+ 9B67 2A B8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B6A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B6B 22 B8 89     	ld (Posicion_actual),hl
 336+ 9B6E CD 61 9D     	call Genera_coordenadas
 337+ 9B71 CD D6 9C     	call Inc_CTRL_DESPLZ
 338+ 9B74 18 03        	jr 2F
 339+ 9B76 CD D6 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B79 C9           2 ret
 341+ 9B7A
 342+ 9B7A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B7A              ;
 344+ 9B7A              ;	24/7/22
 345+ 9B7A              ;
 346+ 9B7A              ;	Ciclo_completo.
 347+ 9B7A              ;
 348+ 9B7A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B7A              ;
 350+ 9B7A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B7A              ; 	Decrementamos (Columns).
 352+ 9B7A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B7A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B7A
 355+ 9B7A
 356+ 9B7A 3A BE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B7D FE FF        	cp $ff
 358+ 9B7F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B81 E6 F0        	and $f0
 360+ 9B83 20 28        	jr nz,3F
 361+ 9B85
 362+ 9B85              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B85
 364+ 9B85 3A BE 89     	ld a,(CTRL_DESPLZ)
 365+ 9B88 47           	ld b,a
 366+ 9B89 3E F8        	ld a,$f8
 367+ 9B8B 80           	add b
 368+ 9B8C 32 BE 89     	ld (CTRL_DESPLZ),a
 369+ 9B8F 18 1C        	jr 3F
 370+ 9B91 21 B7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B94 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B95 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B96 32 BE 89     	ld (CTRL_DESPLZ),a
 374+ 9B99 3A CA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B9C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B9E 20 0A        	jr nz,2F
 377+ 9BA0 2A B8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BA3 23           	inc hl
 379+ 9BA4 22 B8 89     	ld (Posicion_actual),hl
 380+ 9BA7 CD 61 9D     	call Genera_coordenadas
 381+ 9BAA
 382+ 9BAA              ; Inicia el puntero de Sprite.
 383+ 9BAA
 384+ 9BAA CD 9F 8D     2 call Inicia_puntero_objeto_der
 385+ 9BAD C9           3 ret
 386+ 9BAE
 387+ 9BAE              ; ******************************************************************************************************************************************************************************************
 388+ 9BAE              ;
 389+ 9BAE              ;	15/02/23
 390+ 9BAE              ;
 391+ 9BAE              ;	Mov_left.
 392+ 9BAE              ;
 393+ 9BAE              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BAE              ;
 395+ 9BAE 21 E4 89     Mov_left ld hl,Ctrl_0
 396+ 9BB1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BB3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BB3              ; 																	; _ en el caso de que no lo haya.
 399+ 9BB3 3A E4 89     	ld a,(Ctrl_0)
 400+ 9BB6 CB 77        	bit 6,a
 401+ 9BB8 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BBA
 403+ 9BBA CD D0 9C     	call Stop_Amadeus_left
 404+ 9BBD C8           	ret z
 405+ 9BBE 20 4A        	jr nz,8F
 406+ 9BC0
 407+ 9BC0 3A BC 89     11 ld a,(Coordenada_X)
 408+ 9BC3 A7           	and a
 409+ 9BC4 20 44        	jr nz,8F
 410+ 9BC6
 411+ 9BC6 3A BE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BC9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BCA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BCC
 415+ 9BCC              ; ---------- ---------- ----------
 416+ 9BCC
 417+ 9BCC 3A CB 89     	ld a,(Vel_left)
 418+ 9BCF FE 02        	cp 2
 419+ 9BD1 28 0F        	jr z,1F
 420+ 9BD3 38 04        	jr c,6F
 421+ 9BD5 FE 04        	cp 4
 422+ 9BD7 28 12        	jr z,7F
 423+ 9BD9
 424+ 9BD9              ; ---------- ---------- ----------
 425+ 9BD9
 426+ 9BD9 3A BE 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BDC FE F8        	cp $f8
 428+ 9BDE 20 2A        	jr nz,8F
 429+ 9BE0 18 10        	jr 4F
 430+ 9BE2 3A BE 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BE5 FE F9        	cp $f9
 432+ 9BE7 20 21        	jr nz,8F
 433+ 9BE9 18 07        	jr 4F
 434+ 9BEB 3A BE 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BEE FE FB        	cp $fb
 436+ 9BF0 20 18        	jr nz,8F
 437+ 9BF2
 438+ 9BF2              ; ---------- ---------- ----------
 439+ 9BF2
 440+ 9BF2              4
 441+ 9BF2 CD F8 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BF5              ;	call Reinicio
 443+ 9BF5
 444+ 9BF5              ; ---------- ---------- ----------
 445+ 9BF5
 446+ 9BF5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BF7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BF8
 449+ 9BF8              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BF8              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BF8
 452+ 9BF8 CD 11 9C     	call DESPLZ_IZQ
 453+ 9BFB C1           	pop bc
 454+ 9BFC 10 F9        	djnz 5B
 455+ 9BFE 2A B8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C01 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C02 22 B8 89     	ld (Posicion_actual),hl
 458+ 9C05 CD 61 9D     	call Genera_coordenadas
 459+ 9C08 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C0A
 461+ 9C0A              ; ---------- ---------- ----------
 462+ 9C0A
 463+ 9C0A              ; Movemos, no hay recolocación.
 464+ 9C0A
 465+ 9C0A 2A B8 89     8 ld hl,(Posicion_actual)
 466+ 9C0D CD 11 9C     	call DESPLZ_IZQ
 467+ 9C10 C9           2 ret
 468+ 9C11
 469+ 9C11              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C11              ;
 471+ 9C11              ;	22/9/22
 472+ 9C11
 473+ 9C11              DESPLZ_IZQ
 474+ 9C11
 475+ 9C11 CD 20 9C     	call Desplaza_izquierda
 476+ 9C14 CD 6C 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C17 CD 94 9C     	call Ciclo_completo_2
 478+ 9C1A 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C1D CB BE        	res 7,(hl)
 480+ 9C1F C9           	ret
 481+ 9C20
 482+ 9C20              Desplaza_izquierda
 483+ 9C20
 484+ 9C20 3A CB 89     	ld a,(Vel_left)
 485+ 9C23 47           	ld b,a
 486+ 9C24 2A C6 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C27 23           1 inc hl
 488+ 9C28 23           	inc hl
 489+ 9C29 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C2B 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C2E CD 88 8D     	call Extrae_address
 492+ 9C31 22 BA 89     	ld (Puntero_objeto),hl
 493+ 9C34
 494+ 9C34              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C34
 496+ 9C34              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C34              ; Cuántos movimientos hemos hecho ??
 498+ 9C34              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C34
 500+ 9C34 2A C2 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C37 EB           	ex de,hl
 502+ 9C38 A7           	and a
 503+ 9C39 ED 52        	sbc hl,de
 504+ 9C3B CB 3D        	srl l
 505+ 9C3D 3E 08        6 ld a,8
 506+ 9C3F 95           	sub l
 507+ 9C40 30 1E        	jr nc,3F
 508+ 9C42
 509+ 9C42              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C42              ; B="0".
 511+ 9C42
 512+ 9C42 04           4 inc b
 513+ 9C43 3C           	inc a
 514+ 9C44 20 FC        	jr nz,4B
 515+ 9C46 78           	ld a,b
 516+ 9C47 08           	ex af,af
 517+ 9C48 2A C2 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C4B 23           5 inc hl
 519+ 9C4C 23           	inc hl
 520+ 9C4D 10 FC        	djnz 5B
 521+ 9C4F 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C52 CD 88 8D     	call Extrae_address
 523+ 9C55 22 BA 89     	ld (Puntero_objeto),hl
 524+ 9C58
 525+ 9C58              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C58              ; _(Posicion_actual).
 527+ 9C58
 528+ 9C58 21 B8 89     	ld hl,Posicion_actual
 529+ 9C5B 35           	dec (hl)
 530+ 9C5C 08           	ex af,af
 531+ 9C5D 6F           	ld l,a
 532+ 9C5E 18 DD        	jr 6B
 533+ 9C60
 534+ 9C60              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C60
 536+ 9C60 47           3 ld b,a
 537+ 9C61 2A C0 89     	ld hl,(Indice_Sprite_der)
 538+ 9C64 23           2 inc hl
 539+ 9C65 23           	inc hl
 540+ 9C66 10 FC        	djnz 2B
 541+ 9C68 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C6B C9           8 ret
 543+ 9C6C
 544+ 9C6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C6C              ;
 546+ 9C6C              ;	modifica_parametros_1er_DESPLZ
 547+ 9C6C              ;
 548+ 9C6C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C6C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C6C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C6C
 552+ 9C6C 3A BE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C6F A7           	and a
 554+ 9C70 20 1E        	jr nz,1F
 555+ 9C72 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C73 32 BE 89         ld (CTRL_DESPLZ),a
 557+ 9C76 21 B7 89     	ld hl,Columns
 558+ 9C79 34           	inc (hl)
 559+ 9C7A 3A CA 89     	ld a,(Cuad_objeto)
 560+ 9C7D E6 01        	and 1
 561+ 9C7F 20 0F        	jr nz,1F
 562+ 9C81 2A B8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C84 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C85 22 B8 89     	ld (Posicion_actual),hl
 565+ 9C88 CD 61 9D     	call Genera_coordenadas
 566+ 9C8B CD E7 9C     	call Dec_CTRL_DESPLZ
 567+ 9C8E 18 03        	jr 2F
 568+ 9C90 CD E7 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C93 C9           2 ret
 570+ 9C94
 571+ 9C94              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C94
 573+ 9C94 3A BE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C97 FE F7        	cp $f7
 575+ 9C99 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C9B 30 2C        	jr nc,3F
 577+ 9C9D
 578+ 9C9D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C9D
 580+ 9C9D 06 00        	ld b,0
 581+ 9C9F 04           4 inc b
 582+ 9CA0 3C           	inc a
 583+ 9CA1 FE F7        	cp $f7
 584+ 9CA3 20 FA        	jr nz,4B
 585+ 9CA5 3E FF        	ld a,$ff
 586+ 9CA7 90           	sub b
 587+ 9CA8 32 BE 89     	ld (CTRL_DESPLZ),a
 588+ 9CAB 18 1C        	jr 3F
 589+ 9CAD
 590+ 9CAD              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CAD
 592+ 9CAD 21 B7 89     1 ld hl,Columns
 593+ 9CB0 35           	dec (hl)
 594+ 9CB1 AF           	xor a
 595+ 9CB2 32 BE 89     	ld (CTRL_DESPLZ),a
 596+ 9CB5 3A CA 89     	ld a,(Cuad_objeto)
 597+ 9CB8 E6 01        	and 1
 598+ 9CBA 28 0A        	jr z,2F
 599+ 9CBC 2A B8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CBF 2B           	dec hl
 601+ 9CC0 22 B8 89     	ld (Posicion_actual),hl
 602+ 9CC3 CD 61 9D     	call Genera_coordenadas
 603+ 9CC6
 604+ 9CC6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CC6
 606+ 9CC6 CD B2 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CC9 C9           3 ret
 608+ 9CCA
 609+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CCA              ;
 611+ 9CCA              ;	19/10/22
 612+ 9CCA              ;
 613+ 9CCA              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CCA              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CCA
 616+ 9CCA 3A BC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CCD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CCF C9           	ret
 619+ 9CD0
 620+ 9CD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CD0              ;
 622+ 9CD0              ;	19/10/22
 623+ 9CD0              ;
 624+ 9CD0              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CD0              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CD0
 627+ 9CD0 3A BC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CD3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CD5 C9           	ret
 630+ 9CD6
 631+ 9CD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CD6              ;
 633+ 9CD6              ;	24/7/22
 634+ 9CD6              ;
 635+ 9CD6              ;	Inc_CTRL_DESPLZ
 636+ 9CD6              ;
 637+ 9CD6              ;
 638+ 9CD6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CD6
 640+ 9CD6 21 BE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CD9 3A CC 89     	ld a,(Vel_right)
 642+ 9CDC A7           	and a
 643+ 9CDD 28 06        	jr z,1F
 644+ 9CDF 47           	ld b,a
 645+ 9CE0 34           3 inc (hl)
 646+ 9CE1 10 FD        	djnz 3B
 647+ 9CE3 18 01        	jr 2F
 648+ 9CE5 34           1 inc (hl)
 649+ 9CE6 C9           2 ret
 650+ 9CE7
 651+ 9CE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CE7              ;
 653+ 9CE7              ;	5/2/23
 654+ 9CE7              ;
 655+ 9CE7              ;	Dec_CTRL_DESPLZ
 656+ 9CE7              ;
 657+ 9CE7              ;
 658+ 9CE7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CE7
 660+ 9CE7 21 BE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CEA 3A CB 89     	ld a,(Vel_left)
 662+ 9CED A7           	and a
 663+ 9CEE 28 06        	jr z,1F
 664+ 9CF0 47           	ld b,a
 665+ 9CF1 35           3 dec (hl)
 666+ 9CF2 10 FD        	djnz 3B
 667+ 9CF4 18 01        	jr 2F
 668+ 9CF6 35           1 dec (hl)
 669+ 9CF7 C9           2 ret
 670+ 9CF8
 671+ 9CF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CF8
 673+ 9CF8 2A B8 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CFB 01 1F 00     	ld bc,31
 675+ 9CFE A7           	and a
 676+ 9CFF ED 4A        	adc hl,bc
 677+ 9D01 22 B8 89     	ld (Posicion_actual),hl
 678+ 9D04 21 E4 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D07 CB C6        	set 0,(hl)
 680+ 9D09 C9           	ret
 681+ 9D0A
 682+ 9D0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D0A
 684+ 9D0A 2A B8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D0D 01 1F 00     	ld bc,31
 686+ 9D10 A7           	and a
 687+ 9D11 ED 42        	sbc hl,bc
 688+ 9D13 22 B8 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D16 21 E4 89     	ld hl,Ctrl_0
 690+ 9D19 CB CE        	set 1,(hl)
 691+ 9D1B C9           	ret
 692+ 9D1C
 693+ 9D1C              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D1C
 695+ 9D1C 24           Reaparece_abajo inc h
 696+ 9D1D 01 E0 17     	ld bc,$17e0
 697+ 9D20 A7           	and a
 698+ 9D21 ED 4A        	adc hl,bc
 699+ 9D23 22 B8 89     	ld (Posicion_actual),hl
 700+ 9D26 21 E4 89     	ld hl,Ctrl_0
 701+ 9D29 CB D6        	set 2,(hl)
 702+ 9D2B C9           	ret
 703+ 9D2C
 704+ 9D2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D2C
 706+ 9D2C 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D2F A7           	and a
 708+ 9D30 ED 42        	sbc hl,bc
 709+ 9D32 22 B8 89     	ld (Posicion_actual),hl
 710+ 9D35 21 E4 89     	ld hl,Ctrl_0
 711+ 9D38 CB DE        	set 3,(hl)
 712+ 9D3A C9           	ret
 713+ 9D3B
 714+ 9D3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D3B              ;
 716+ 9D3B              ;	15/07/23
 717+ 9D3B
 718+ 9D3B              Reinicio
 719+ 9D3B
 720+ 9D3B              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D3B
 722+ 9D3B AF           	xor a
 723+ 9D3C 21 EB 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D3F CD 5D 9D     	call Limpia_contenido_hl
 725+ 9D42
 726+ 9D42 21 B8 89     	ld hl,Posicion_actual
 727+ 9D45 CD 5D 9D     	call Limpia_contenido_hl
 728+ 9D48
 729+ 9D48 CD 7E A0     	call Inicializa_Puntero_indice_mov
 730+ 9D4B CD 08 A0     	call Inicia_Puntero_mov
 731+ 9D4E
 732+ 9D4E 21 ED 89     	ld hl,Incrementa_puntero
 733+ 9D51 06 05        	ld b,5
 734+ 9D53 77           1 ld (hl),a
 735+ 9D54 23           	inc hl
 736+ 9D55 10 FC        	djnz 1B
 737+ 9D57
 738+ 9D57 21 F7 89     	ld hl,Ctrl_2
 739+ 9D5A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D5C
 741+ 9D5C C9           	ret
 742+ 9D5D
 743+ 9D5D 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D5E 23           	inc hl
 745+ 9D5F 77           	ld (hl),a
 746+ 9D60 C9           	ret
 747+ 9D61
 748+ 9D61
# file closed: Direcciones.asm
1493  9D61              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D61              ; ------------------------------------------------------------------------
   2+ 9D61              ;
   3+ 9D61              ;	02/04/23
   4+ 9D61              ;
   5+ 9D61              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D61              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D61              ;
   8+ 9D61              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D61              ;
  10+ 9D61              ;	Modifica: A,BC y DE.
  11+ 9D61
  12+ 9D61 C5           Genera_coordenadas push bc
  13+ 9D62 E5           	push hl
  14+ 9D63 D5           	push de
  15+ 9D64
  16+ 9D64 2A B8 89     	ld hl,(Posicion_actual)
  17+ 9D67
  18+ 9D67 7D           	ld a,l
  19+ 9D68 E6 1F        	and $1f
  20+ 9D6A 32 BC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D6D
  22+ 9D6D CD D6 99     	call calcula_tercio
  23+ 9D70 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D71
  25+ 9D71 1E 00        	ld e,0
  26+ 9D73 7D           	ld a,l
  27+ 9D74 E6 E0        	and $e0
  28+ 9D76 28 01        	jr z,1F
  29+ 9D78 04           	inc b
  30+ 9D79
  31+ 9D79 04           1 inc b
  32+ 9D7A 05           	dec b
  33+ 9D7B 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D7D              ;														; _ , salimos.
  35+ 9D7D 1C           3 inc e
  36+ 9D7E D6 20        	sub 32
  37+ 9D80 20 FB        	jr nz,3B
  38+ 9D82 10 F5        	djnz 1B
  39+ 9D84
  40+ 9D84 7B           2 ld a,e
  41+ 9D85 32 BD 89     	ld (Coordenada_y),a
  42+ 9D88
  43+ 9D88 D1           	pop de
  44+ 9D89 E1           	pop hl
  45+ 9D8A C1           	pop bc
  46+ 9D8B
  47+ 9D8B C9           	ret
  48+ 9D8C
  49+ 9D8C              ; ------------------------------------------------------------------------
  50+ 9D8C              ;	28/05/23
  51+ 9D8C              ;
  52+ 9D8C              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D8C              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D8C              ;
  55+ 9D8C              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D8C              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D8C              ;
  58+ 9D8C              ;		DE="$120d"
  59+ 9D8C              ;
  60+ 9D8C              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D8C              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D8C              ;
  63+ 9D8C              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D8C
  65+ 9D8C              ;	Modifica: A,BC y DE.
  66+ 9D8C
  67+ 9D8C
  68+ 9D8C              Genera_coordenadas_disparo
  69+ 9D8C
  70+ 9D8C              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D8C
  72+ 9D8C 7D           	ld a,l
  73+ 9D8D E6 1F        	and $1f
  74+ 9D8F 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D90 CD D6 99     	call calcula_tercio
  76+ 9D93 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D94 1E 00        	ld e,0
  78+ 9D96 7D           	ld a,l
  79+ 9D97 E6 E0        	and $e0
  80+ 9D99 28 01        	jr z,1F
  81+ 9D9B 04           	inc b
  82+ 9D9C 1C           1 inc e
  83+ 9D9D D6 20        	sub 32
  84+ 9D9F 20 FB        	jr nz,1B
  85+ 9DA1 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DA3 C9           	ret
  87+ 9DA4
# file closed: Genera_coordenadas.asm
1494  9DA4              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DA4
   2+ 9DA4
   3+ 9DA4              ;   07/07/23
   4+ 9DA4              ;
   5+ 9DA4              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DA4              ;
   7+ 9DA4              ;   Codificación:
   8+ 9DA4              ;
   9+ 9DA4              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DA4              ;
  11+ 9DA4              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DA4              ;
  13+ 9DA4              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DA4              ;
  15+ 9DA4              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DA4              ;
  17+ 9DA4              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DA4              ;                               ..... %01000010 Vel_up 4
  19+ 9DA4              ;                                               Vel_down 2
  20+ 9DA4              ;                               ..... $42
  21+ 9DA4              ;
  22+ 9DA4              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DA4              ;
  24+ 9DA4              ;                               ..... %01000010 Vel_left 4
  25+ 9DA4              ;                                               Vel_right 2
  26+ 9DA4              ;                               ..... $42
  27+ 9DA4              ;
  28+ 9DA4              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DA4              ;
  30+ 9DA4              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DA4              ;
  32+ 9DA4              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DA4              ;
  34+ 9DA4              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DA4              ;                                     $53
  36+ 9DA4              ;
  37+ 9DA4              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DA4              ;
  39+ 9DA4              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DA4              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DA4              ;
  42+ 9DA4              ;                       Arriba ..... $81
  43+ 9DA4              ;                       Arriba - izquierda ..... $a1
  44+ 9DA4              ;                       Arriba - derecha ..... $91
  45+ 9DA4              ;
  46+ 9DA4              ;                       Abajo ..... $41
  47+ 9DA4              ;                       Abajo - izquierda ..... $61
  48+ 9DA4              ;                       Abajo - derecha ..... $51
  49+ 9DA4              ;
  50+ 9DA4              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DA4              ;
  52+ 9DA4              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DA4              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DA4              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DA4              ;
  56+ 9DA4              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DA4              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DA4              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DA4              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DA4              ;
  61+ 9DA4              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DA4              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DA4              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DA4              ;
  65+ 9DA4              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DA4              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DA4              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DA4              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DA4
  70+ 9DA4              ; ----- ----- ----- ----- -----
  71+ 9DA4
  72+ 9DA4 D0 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DA6 D8 9D            defw F_1
  74+ 9DA8 E2 9D            defw F_2
  75+ 9DAA EC 9D            defw Codo_abajo_derecha
  76+ 9DAC 20 9E            defw Derecha_y_subiendo
  77+ 9DAE 2A 9E            defw Derecha_y_subiendo_1
  78+ 9DB0 34 9E            defw F_3
  79+ 9DB2 3E 9E            defw F_4
  80+ 9DB4 48 9E            defw Derecha_y_bajando
  81+ 9DB6 52 9E            defw Derecha_y_bajando_1
  82+ 9DB8 5C 9E            defw Derecha_y_bajando_2
  83+ 9DBA 66 9E            defw Codo_derecha_abajo
  84+ 9DBC 96 9E            defw Codo_abajo_izq.
  85+ 9DBE CA 9E            defw Izquierda_y_subiendo
  86+ 9DC0 D4 9E            defw Izquierda_y_subiendo_1
  87+ 9DC2 DE 9E            defw F_5
  88+ 9DC4 E8 9E            defw F_6
  89+ 9DC6 F2 9E            defw Izquierda_y_bajando
  90+ 9DC8 FC 9E            defw Izquierda_y_bajando_1
  91+ 9DCA 06 9F            defw Izquierda_y_bajando_2
  92+ 9DCC 10 9F            defw Codo_izquierda_abajo
  93+ 9DCE 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DD0
  95+ 9DD0 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DD4 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DD8
  98+ 9DD8 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DDC 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DE0 08 00
 100+ 9DE2 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DE6 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DEA 0F FE
 102+ 9DEC
 103+ 9DEC 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DF0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DF4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DF8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DFC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E00 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E04 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E08 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E0C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E10 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E14 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E18 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E1C 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E20
 117+ 9E20 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E24 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E28 06 00
 119+ 9E2A
 120+ 9E2A 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E2E 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E32 02 00
 122+ 9E34
 123+ 9E34 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E38 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E3C 04 00
 125+ 9E3E 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E42 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E46 08 00
 127+ 9E48
 128+ 9E48 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E4C 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E50 02 00
 130+ 9E52
 131+ 9E52 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E56 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E5A 06 00
 133+ 9E5C
 134+ 9E5C 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E60 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E64 06 00
 136+ 9E66
 137+ 9E66              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E66
 139+ 9E66 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E6A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E6E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E72 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E76 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E7A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E7E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E82 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E8A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E8E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E92 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E96
 152+ 9E96 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E9A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E9E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EA2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EA6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EAA 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EAE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EB2 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EB6 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EBA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EBE 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EC2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EC6 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9ECA
 166+ 9ECA 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9ECE 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9ED2 06 00
 168+ 9ED4
 169+ 9ED4 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9ED8 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EDC 02 00
 171+ 9EDE
 172+ 9EDE 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EE2 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EE6 04 00
 174+ 9EE8 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EEC 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EF0 08 00
 176+ 9EF2
 177+ 9EF2 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EF6 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EFA 02 00
 179+ 9EFC
 180+ 9EFC 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F00 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F04 06 00
 182+ 9F06
 183+ 9F06 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F0A 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F0E 06 00
 185+ 9F10
 186+ 9F10 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F14 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F18 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F1C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F20 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F24 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F28 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F2C 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F30 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F34 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F38 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F3C 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F40
 199+ 9F40              ; ----- ----- ----- ----- -----
 200+ 9F40              ;
 201+ 9F40              ;   27/06/23
 202+ 9F40
 203+ 9F40              Movimiento
 204+ 9F40
 205+ 9F40              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F40
 207+ 9F40              ;    ld hl,(Posicion_actual)
 208+ 9F40
 209+ 9F40 3A F7 89         ld a,(Ctrl_2)
 210+ 9F43 CB 57            bit 2,a
 211+ 9F45 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F47
 213+ 9F47 2A E9 89         ld hl,(Puntero_mov)
 214+ 9F4A 7E               ld a,(hl)
 215+ 9F4B
 216+ 9F4B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F4B
 218+ 9F4B              Inicia_desplazamiento.
 219+ 9F4B
 220+ 9F4B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F4B
 222+ 9F4B CD 3F A0         call Ajusta_velocidad_desplazamiento
 223+ 9F4E
 224+ 9F4E              ; Iniciamos (Repetimos_mov).
 225+ 9F4E
 226+ 9F4E 7E               ld a,(hl)
 227+ 9F4F E6 0F            and $0f
 228+ 9F51 32 EF 89         ld (Repetimos_desplazamiento),a
 229+ 9F54 32 F0 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F57
 231+ 9F57              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F57
 233+ 9F57 23               inc hl
 234+ 9F58 7E               ld a,(hl)
 235+ 9F59 32 F2 89         ld (Cola_de_desplazamiento),a
 236+ 9F5C 2B               dec hl
 237+ 9F5D
 238+ 9F5D 21 F7 89         ld hl,Ctrl_2
 239+ 9F60 CB D6            set 2,(hl)
 240+ 9F62
 241+ 9F62              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F62              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F62
 244+ 9F62              Desplazamiento_iniciado
 245+ 9F62
 246+ 9F62 CD 13 A0         call Aplica_desplazamiento
 247+ 9F65
 248+ 9F65 3A F7 89         ld a,(Ctrl_2)
 249+ 9F68 CB 67            bit 4,a
 250+ 9F6A C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F6B
 252+ 9F6B 21 EF 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F6E 35               dec (hl)
 254+ 9F6F C0               ret nz
 255+ 9F70
 256+ 9F70              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F70              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F70              ; Analiza (Cola_de_desplazamiento).
 259+ 9F70
 260+ 9F70 3A F2 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F73 A7               and a
 262+ 9F74 CC 68 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F77 28 30            jr z,Reinicia_el_movimiento
 264+ 9F79
 265+ 9F79 FE FF            cp $ff
 266+ 9F7B 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F7D
 268+ 9F7D FE FE            cp $fe
 269+ 9F7F CC EC 9F         call z,Fijamos_bucle
 270+ 9F82 28 25            jr z,Reinicia_el_movimiento
 271+ 9F84
 272+ 9F84 FE FD            cp $fd
 273+ 9F86 20 11            jr nz,1F
 274+ 9F88
 275+ 9F88              ; ---
 276+ 9F88              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F88
 278+ 9F88 3A F7 89         ld a,(Ctrl_2)
 279+ 9F8B CB 5F            bit 3,a
 280+ 9F8D 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F8F
 282+ 9F8F              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F8F
 284+ 9F8F 21 F7 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F92 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F94
 287+ 9F94 CD FD 9F         call Inicia_Repetimos_movimiento
 288+ 9F97 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F99              ; ---
 290+ 9F99
 291+ 9F99 FE 01        1 cp 1
 292+ 9F9B CA D6 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F9E
 294+ 9F9E 3D               dec a
 295+ 9F9F 32 F2 89         ld (Cola_de_desplazamiento),a
 296+ 9FA2
 297+ 9FA2 3A F0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FA5 32 EF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FA8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FA8 C9               ret
 301+ 9FA9
 302+ 9FA9              Reinicia_el_movimiento
 303+ 9FA9
 304+ 9FA9 3A F7 89         ld a,(Ctrl_2)
 305+ 9FAC CB 5F            bit 3,a
 306+ 9FAE 28 1B            jr z,2F
 307+ 9FB0
 308+ 9FB0              ; (Cola_de_desplazamiento)="254".
 309+ 9FB0
 310+ 9FB0 21 F1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FB3 35               dec (hl)
 312+ 9FB4 20 15            jr nz,2F
 313+ 9FB6
 314+ 9FB6              ; Fin de las repeticiones del último movimiento.
 315+ 9FB6
 316+ 9FB6 21 F7 89         ld hl,Ctrl_2
 317+ 9FB9 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FBB
 319+ 9FBB 2A E9 89         ld hl,(Puntero_mov)
 320+ 9FBE 23               inc hl
 321+ 9FBF 23               inc hl
 322+ 9FC0 23               inc hl
 323+ 9FC1 22 E9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FC4              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FC4 7E               ld a,(hl)
 326+ 9FC5 32 F2 89         ld (Cola_de_desplazamiento),a
 327+ 9FC8
 328+ 9FC8 C3 70 9F         jp Cola
 329+ 9FCB
 330+ 9FCB
 331+ 9FCB CD 08 A0     2 call Inicia_Puntero_mov
 332+ 9FCE
 333+ 9FCE 21 F7 89         ld hl,Ctrl_2
 334+ 9FD1 CB 96            res 2,(hl)
 335+ 9FD3
 336+ 9FD3 C3 40 9F         jp Movimiento
 337+ 9FD6
 338+ 9FD6              Siguiente_desplazamiento
 339+ 9FD6
 340+ 9FD6              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FD6              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FD6
 343+ 9FD6 21 F7 89         ld hl,Ctrl_2
 344+ 9FD9 CB 96            res 2,(hl)
 345+ 9FDB
 346+ 9FDB 2A E9 89         ld hl,(Puntero_mov)
 347+ 9FDE 23               inc hl
 348+ 9FDF 23               inc hl
 349+ 9FE0 22 E9 89         ld (Puntero_mov),hl
 350+ 9FE3
 351+ 9FE3 7E               ld a,(hl)
 352+ 9FE4 A7               and a
 353+ 9FE5 CC 68 A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FE8 CA A9 9F         jp z,Reinicia_el_movimiento
 355+ 9FEB
 356+ 9FEB C9               ret
 357+ 9FEC              ; Subrutinas -----------------------------------------
 358+ 9FEC              ; ---------- --------- --------- ---------- ----------
 359+ 9FEC              ;
 360+ 9FEC              ;   24/07/23
 361+ 9FEC              ;
 362+ 9FEC              ;   Fijamos_bucle
 363+ 9FEC              ;
 364+ 9FEC              ;
 365+ 9FEC
 366+ 9FEC              Fijamos_bucle
 367+ 9FEC
 368+ 9FEC 3A ED 89         ld a,(Incrementa_puntero)
 369+ 9FEF 3C               inc a
 370+ 9FF0 32 EE 89         ld (Incrementa_puntero_backup),a
 371+ 9FF3
 372+ 9FF3 CD 68 A0         call Incrementa_Puntero_indice_mov
 373+ 9FF6 2A E7 89         ld hl,(Puntero_indice_mov)
 374+ 9FF9 22 EB 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FFC C9               ret
 376+ 9FFD
 377+ 9FFD              ; ---------- --------- --------- ---------- ----------
 378+ 9FFD              ;
 379+ 9FFD              ;   07/7/23
 380+ 9FFD              ;
 381+ 9FFD              ;   Inicia_Repetimos_movimiento
 382+ 9FFD              ;
 383+ 9FFD              ;
 384+ 9FFD
 385+ 9FFD              Inicia_Repetimos_movimiento
 386+ 9FFD
 387+ 9FFD              ; Iniciamos (Repetimos_movimiento).
 388+ 9FFD
 389+ 9FFD DD 2A E9 89      ld ix,(Puntero_mov)
 390+ A001 DD 7E 02         ld a,(ix+2)
 391+ A004 32 F1 89         ld (Repetimos_movimiento),a
 392+ A007
 393+ A007 C9               ret
 394+ A008
 395+ A008              ; ---------- --------- --------- ---------- ----------
 396+ A008              ;
 397+ A008              ;   26/6/23
 398+ A008              ;
 399+ A008              ;   Inicia_Puntero_mov
 400+ A008              ;
 401+ A008              ;
 402+ A008
 403+ A008 2A E7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A00B 5E               ld e,(hl)
 405+ A00C 23               inc hl
 406+ A00D 56               ld d,(hl)
 407+ A00E EB               ex de,hl
 408+ A00F 22 E9 89         ld (Puntero_mov),hl
 409+ A012 C9               ret
 410+ A013
 411+ A013              ; ---------- --------- --------- ---------- ----------
 412+ A013              ;
 413+ A013              ;   27/06/23
 414+ A013              ;
 415+ A013              ;   Aplica_movimiento.
 416+ A013
 417+ A013              Aplica_desplazamiento
 418+ A013
 419+ A013              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A013
 421+ A013 2A E9 89         ld hl, (Puntero_mov)
 422+ A016
 423+ A016 7E               ld a,(hl)
 424+ A017 E6 F0            and $f0
 425+ A019 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A01A
 427+ A01A CB 7E            bit 7,(hl)
 428+ A01C 28 03            jr z,1F
 429+ A01E CD 4D 9A         call Mov_up
 430+ A021 2A E9 89     1 ld hl, (Puntero_mov)
 431+ A024 CB 76            bit 6,(hl)
 432+ A026 28 03            jr z,2F
 433+ A028 CD 1C 9A         call Mov_down
 434+ A02B 2A E9 89     2 ld hl, (Puntero_mov)
 435+ A02E CB 6E            bit 5,(hl)
 436+ A030 28 03            jr z,3F
 437+ A032 CD AE 9B         call Mov_left
 438+ A035 2A E9 89     3 ld hl, (Puntero_mov)
 439+ A038 CB 66            bit 4,(hl)
 440+ A03A C8               ret z
 441+ A03B CD 90 9A         call Mov_right
 442+ A03E C9               ret
 443+ A03F
 444+ A03F              ; ---------- --------- --------- ---------- ----------
 445+ A03F              ;
 446+ A03F              ;   26/06/23
 447+ A03F              ;
 448+ A03F              ;   Ajusta_velocidad_desplazamiento.
 449+ A03F
 450+ A03F              Ajusta_velocidad_desplazamiento
 451+ A03F
 452+ A03F              ; 1er byte de la cadena de movimiento.
 453+ A03F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A03F
 455+ A03F CD 5D A0         call Extrae_nibble_alto
 456+ A042
 457+ A042 32 CD 89         ld (Vel_up),a
 458+ A045 79               ld a,c
 459+ A046 E6 0F            and $0f
 460+ A048 32 CE 89         ld (Vel_down),a
 461+ A04B
 462+ A04B              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A04B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A04B
 465+ A04B 23               inc hl
 466+ A04C CD 5D A0         call Extrae_nibble_alto
 467+ A04F
 468+ A04F 32 CB 89         ld (Vel_left),a
 469+ A052 79               ld a,c
 470+ A053 E6 0F            and $0f
 471+ A055 32 CC 89         ld (Vel_right),a
 472+ A058
 473+ A058              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A058
 475+ A058 23               inc hl
 476+ A059 22 E9 89         ld (Puntero_mov),hl
 477+ A05C C9               ret
 478+ A05D
 479+ A05D 06 04        Extrae_nibble_alto ld b,4
 480+ A05F 7E               ld a,(hl)
 481+ A060 4F               ld c,a
 482+ A061 E6 F0            and $f0
 483+ A063 CB 3F        1 srl a
 484+ A065 10 FC            djnz 1B
 485+ A067 C9               ret
 486+ A068
 487+ A068              ; ---------- --------- --------- ---------- ----------
 488+ A068              ;
 489+ A068              ;   5/7/23
 490+ A068              ;
 491+ A068              ;   Incrementa_Puntero_indice_mov
 492+ A068
 493+ A068              Incrementa_Puntero_indice_mov
 494+ A068
 495+ A068 21 ED 89         ld hl,Incrementa_puntero
 496+ A06B 34               inc (hl)
 497+ A06C
 498+ A06C 2A E7 89         ld hl,(Puntero_indice_mov)
 499+ A06F 01 02 00         ld bc,2
 500+ A072 A7               and a
 501+ A073 09               add hl,bc
 502+ A074 22 E7 89         ld (Puntero_indice_mov),hl
 503+ A077
 504+ A077 7E               ld a,(hl)
 505+ A078 A7               and a
 506+ A079
 507+ A079              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A079
 509+ A079              ;    jr z,$
 510+ A079
 511+ A079              ;! Reinicia el Patrón de movimiento.
 512+ A079
 513+ A079 CC 7E A0         call z,Inicializa_Puntero_indice_mov
 514+ A07C
 515+ A07C AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A07D
 517+ A07D C9               ret
 518+ A07E
 519+ A07E
 520+ A07E              ; ---------- --------- --------- ---------- ----------
 521+ A07E              ;
 522+ A07E              ;   24/07/23
 523+ A07E              ;
 524+ A07E              ;   Inicializa_Puntero_indice_mov
 525+ A07E
 526+ A07E              Inicializa_Puntero_indice_mov
 527+ A07E
 528+ A07E              ; Existe etiqueta de bucle principal???
 529+ A07E
 530+ A07E 2A EB 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A081 24               inc h
 532+ A082 25               dec h
 533+ A083 28 05            jr z,2F
 534+ A085
 535+ A085 22 E7 89         ld (Puntero_indice_mov),hl
 536+ A088 18 14            jr 3F
 537+ A08A
 538+ A08A              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A08A
 540+ A08A 3A ED 89     2 ld a,(Incrementa_puntero)
 541+ A08D 47               ld b,a
 542+ A08E
 543+ A08E 2A E7 89         ld hl,(Puntero_indice_mov)
 544+ A091 2B           1 dec hl
 545+ A092 2B               dec hl
 546+ A093 10 FC            djnz 1B
 547+ A095 22 E7 89         ld (Puntero_indice_mov),hl
 548+ A098
 549+ A098 AF               xor a
 550+ A099 32 ED 89         ld (Incrementa_puntero),a
 551+ A09C 18 06            jr 4F
 552+ A09E
 553+ A09E 3A EE 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0A1 32 ED 89         ld (Incrementa_puntero),a
 555+ A0A4 C9           4 ret
 556+ A0A5
 557+ A0A5
 558+ A0A5
# file closed: Patrones_de_mov.asm
1495  A0A5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A0A5              ; Relojes y temporizaciones.
   2+ A0A5
   3+ A0A5              ; ------------------------------------------------------
   4+ A0A5              ;
   5+ A0A5              ;	16/7/23
   6+ A0A5              ;
   7+ A0A5              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A0A5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A0A5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A0A5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A0A5              ;
  12+ A0A5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A0A5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A0A5
  15+ A0A5              ; Disparo_entidad db 1
  16+ A0A5              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A0A5              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A0A5
  19+ A0A5              Habilita_disparos
  20+ A0A5
  21+ A0A5 7E           	ld a,(hl)
  22+ A0A6 A7           	and a
  23+ A0A7 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A0A8
  25+ A0A8 EB           	ex de,hl
  26+ A0A9
  27+ A0A9 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A0AA C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A0AB
  30+ A0AB              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A0AB
  32+ A0AB 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0AC 7E           	ld a,(hl)
  34+ A0AD 23           	inc hl
  35+ A0AE 77           	ld (hl),a
  36+ A0AF
  37+ A0AF EB           	ex de,hl						; Habilitamos disparo.
  38+ A0B0 3E 01        	ld a,1
  39+ A0B2 77           	ld (hl),a
  40+ A0B3 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1496  A0B4              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0B4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0B4              ;
   3+ A0B4              ;	9/8/23
   4+ A0B4              ;
   5+ A0B4              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0B4
   7+ A0B4              ;	ADC HL,SP	LD (addr),SP
   8+ A0B4              ;	ADD HL,SP	LD SP,(addr)
   9+ A0B4              ;	ADD IX,SP	LD SP,nn
  10+ A0B4              ; 	ADD IY,SP	LD SP,HL
  11+ A0B4              ;				LD SP,IX
  12+ A0B4              ;	DEC SP		LD SP,IY
  13+ A0B4
  14+ A0B4              ;	EX (SP),HL
  15+ A0B4              ;	EX (SP),IX
  16+ A0B4              ;	EX (SP),IY
  17+ A0B4
  18+ A0B4              ;	INC SP
  19+ A0B4
  20+ A0B4                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 0A 8A  7 ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A F9 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 10 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 0E 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 10 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 0E 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 0A 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 2A 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 12 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 12 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 16 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 12 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 16 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 16 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 1A 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 16 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 1A 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 1A 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 1E 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 1A 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 1E 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 1E 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1497  74C8
1498  74C8              	SAVESNA "Pruebas.sna", START
1499  74C8
1500  74C8
1501  74C8
1502  74C8
# file closed: Banco_de_pruebas.asm
