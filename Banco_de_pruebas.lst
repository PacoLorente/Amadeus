# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 19 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 01 8E     2 call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD DE 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 0E 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 19 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 C9           	ret
  86  AA34
  87  AA34              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA34
  89  AA34              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA34              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA34              ;
   3+ AA34              ;	17/02/23
   4+ AA34              ;
   5+ AA34              ;	Sprites e índices.
   6+ AA34
   7+ AA34              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 0A 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 0A 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CD 87        	defw Nivel_2
   7+ 87BE DA 87        	defw Nivel_3
   8+ 87C0 EA 87        	defw Nivel_4
   9+ 87C2 FC 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 04           Nivel_1 db 4	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CD 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D2 01 02
  21+ 87D4 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D8 01 02
  22+ 87DA 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DB 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DF 01
  24+ 87E0 03 01 01 01  	db 3,1,1,1,1
  24+ 87E4 01
  25+ 87E5 03 01 01 01  	db 3,1,1,1,1
  25+ 87E9 01
  26+ 87EA 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EB 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EF 01
  28+ 87F0 04 01 01 01  	db 4,1,1,1,1
  28+ 87F4 01
  29+ 87F5 04 01 01 01  	db 4,1,1,1,1
  29+ 87F9 01
  30+ 87FA 02 03        	db 2,3
  31+ 87FC 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FD 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8801 01
  33+ 8802 05 01 01 01  	db 5,1,1,1,1
  33+ 8806 01
  34+ 8807 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880B 01
  35+ 880C 05 01 01 01  	db 5,1,1,1,1
  35+ 8810 01
  36+ 8811
  37+ 8811              ;---------------------------------------------------------------------------------------------------------------
  38+ 8811              ;
  39+ 8811              ;   3/9/23
  40+ 8811              ;
  41+ 8811              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8811              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8811              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8811              ;	_en la caja DRAW correspondiente.
  45+ 8811              ;
  46+ 8811              ;	MODIFICA: HL,DE y A.
  47+ 8811              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8811
  49+ 8811              Inicializa_Punteros_de_nivel
  50+ 8811
  51+ 8811 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8814 22 5E 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8817 CD 81 8C     	call Extrae_address
  54+ 881A 7E           	ld a,(hl)
  55+ 881B 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881E 23           	inc hl
  57+ 881F 22 60 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8822 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8823
  60+ 8823              ;---------------------------------------------------------------------------------------------------------------
  61+ 8823              ;
  62+ 8823              ;   13/5/23
  63+ 8823              ;
  64+ 8823              ;	Destruye A,BC,HL,DE
  65+ 8823
  66+ 8823              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8823              ;	_del juego.
  68+ 8823
  69+ 8823              Prepara_cajas
  70+ 8823
  71+ 8823              ; Preparamos los punteros de las cajas.
  72+ 8823
  73+ 8823 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8826 CD 81 8C     	call Extrae_address
  75+ 8829 CD 66 88     	call Avanza_caja
  76+ 882C
  77+ 882C CD AA 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882F
  79+ 882F 2A 60 89     	ld hl,(Datos_de_nivel)
  80+ 8832
  81+ 8832              ; HL está en los datos del nivel correspondiente.
  82+ 8832              ; B actuará como contador de cajas.
  83+ 8832
  84+ 8832 C5           1 push bc
  85+ 8833
  86+ 8833 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8834 CD 57 88     	call PreparaBC
  88+ 8837
  89+ 8837 21 96 87     	ld hl,Indice_de_entidades
  90+ 883A CD 5F 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883D 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8840
  93+ 8840 CD 70 88     	call Datos_de_entidad_a_caja
  94+ 8843
  95+ 8843 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8846 CD 81 8C     	call Extrae_address
  97+ 8849 CD 66 88     	call Avanza_caja
  98+ 884C
  99+ 884C 2A 60 89     	ld hl,(Datos_de_nivel)
 100+ 884F 23           	inc hl
 101+ 8850 22 60 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8853
 103+ 8853 C1           	pop bc
 104+ 8854 10 DC        	djnz 1B
 105+ 8856 C9           	ret
 106+ 8857
 107+ 8857 CB 27        PreparaBC sla a
 108+ 8859 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885B 4F           	ld c,a
 110+ 885C 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885E C9           	ret
 112+ 885F
 113+ 885F A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8860 ED 4A        	adc hl,bc
 115+ 8862 CD 81 8C     	call Extrae_address
 116+ 8865 C9           	ret
 117+ 8866
 118+ 8866 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8869 13           	inc de
 120+ 886A 13           	inc de
 121+ 886B EB           	ex de,hl
 122+ 886C 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886F C9           	ret
 124+ 8870
 125+ 8870              Datos_de_entidad_a_caja
 126+ 8870
 127+ 8870              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8870
 129+ 8870
 130+ 8870 ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8874
 132+ 8874 01 02 00     	ld bc,2
 133+ 8877 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8879
 135+ 8879 01 07 00     	ld bc,7
 136+ 887C CD A4 88     	call Situa_DE
 137+ 887F
 138+ 887F 01 05 00     	ld bc,5
 139+ 8882 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8884
 141+ 8884 01 04 00     	ld bc,4
 142+ 8887 CD A4 88     	call Situa_DE
 143+ 888A
 144+ 888A 01 07 00     	ld bc,7
 145+ 888D ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888F
 147+ 888F 01 12 00     	ld bc,18
 148+ 8892 CD A4 88     	call Situa_DE
 149+ 8895
 150+ 8895 01 02 00     	ld bc,2
 151+ 8898 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 889A
 153+ 889A              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 889A              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 889A
 156+ 889A 01 0F 00     	ld bc,15									; *****
 157+ 889D CD A4 88     	call Situa_DE
 158+ 88A0
 159+ 88A0 3E 03        	ld a,3
 160+ 88A2 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A3
 162+ 88A3 C9           	ret
 163+ 88A4
 164+ 88A4 EB           Situa_DE ex de,hl
 165+ 88A5 A7           	and a
 166+ 88A6 ED 4A        	adc hl,bc
 167+ 88A8 EB           	ex de,hl
 168+ 88A9 C9           	ret
 169+ 88AA
 170+ 88AA              ;---------------------------------------------------------------------------------------------------------------
 171+ 88AA              ;
 172+ 88AA              ;	21/5/23
 173+ 88AA              ;
 174+ 88AA              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88AA              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88AA              ;
 177+ 88AA              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88AA              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88AA              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88AA              ;
 181+ 88AA              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88AA              ;	MODIFICA: A y B.
 183+ 88AA              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88AA
 185+ 88AA              Admin_num_entidades
 186+ 88AA
 187+ 88AA              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88AA
 189+ 88AA 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AD A7           	and a
 191+ 88AE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AE              ;	jr z,$
 193+ 88AE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AE
 195+ 88AE 20 03        	jr nz,3F
 196+ 88B0
 197+ 88B0              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88B0
 199+ 88B0 CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B3
 201+ 88B3 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B6 FE 0A        	cp 10
 203+ 88B8 38 08        	jr c,1F
 204+ 88BA
 205+ 88BA              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88BA              ; Actualizamos variables.
 207+ 88BA
 208+ 88BA 3E 0A        	ld a,10
 209+ 88BC 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BF 47           	ld b,a
 211+ 88C0 18 04        	jr 2F
 212+ 88C2
 213+ 88C2              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C2              ; (Numero_de_entidades)="0".
 215+ 88C2
 216+ 88C2 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C5 47           	ld b,a
 218+ 88C6 C9           2 ret
# file closed: Niveles.asm
  92  88C7
  93  88C7              ; ******************************************************************************************************************************************************************************************
  94  88C7              ; Constantes.
  95  88C7              ; ******************************************************************************************************************************************************************************************
  96  88C7              ;
  97  88C7              ; 4/9/23
  98  88C7              ;
  99  88C7              ; Constantes generales.
 100  88C7              ;
 101  88C7
 102  88C7              Sprite_vacio equ $f000
 103  88C7              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C7              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C7              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C7              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C7
 108  88C7              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C7              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C7              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C7              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C7              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C7              ;
 114  88C7              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C7              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C7              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C7              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C7              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C7              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C7
 121  88C7              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C7              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C7
 124  88C7
 125  88C7
 126  88C7              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C7
 128  88C7              ; ******************************************************************************************************************************************************************************************
 129  88C7              ; Variables.
 130  88C7              ; ******************************************************************************************************************************************************************************************
 131  88C7              ;
 132  88C7              ; 28/07/23
 133  88C7              ;
 134  88C7              ; Variables de DRAW. (Motor principal).
 135  88C7              ;
 136  88C7              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C7
 138  88C7 00           Filas db 0												; Filas. [DRAW]
 139  88C8 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CF
 145  88CF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CF
 147  88CF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88D0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88D0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88D0 00           Attr db 0												; Atributos de la entidad:
 151  88D1
 152  88D1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D1              ;
 154  88D1              ;	COLORES: 0 ..... NEGRO
 155  88D1              ;    		 1 ..... AZUL
 156  88D1              ; 			 2 ..... ROJO
 157  88D1              ;			 3 ..... MAGENTA
 158  88D1              ; 			 4 ..... VERDE
 159  88D1              ; 			 5 ..... CIAN
 160  88D1              ;			 6 ..... AMARILLO
 161  88D1              ; 			 7 ..... BLANCO
 162  88D1
 163  88D1 00 00        Indice_Sprite_der defw 0
 164  88D3 00 00        Indice_Sprite_izq defw 0
 165  88D5 00 00        Puntero_DESPLZ_der defw 0
 166  88D7 00 00        Puntero_DESPLZ_izq defw 0
 167  88D9
 168  88D9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DC
 171  88DC              ; Variables de objeto. (Características).
 172  88DC
 173  88DC 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DD 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DE 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DF 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88E0
 178  88E0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E1 00 00 00...  Variables_de_borrado ds 6
 182  88E7
 183  88E7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E9 00 00        	defw 0
 185  88EB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88ED 00 00 00 00  	db 0,0,0,0
 187  88F1
 188  88F1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F1
 190  88F1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F2              ;
 196  88F2              ; 														DESCRIPCIÖN:
 197  88F2              ;
 198  88F2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F2              ;
 212  88F2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F2
 216  88F2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F2
 218  88F2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F6 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F8              ;
 222  88F8              ;
 223  88F8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F9 00           Incrementa_puntero_backup db 0
 227  88FA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FE              ;
 233  88FE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FE              ;
 237  88FE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FE              ;
 242  88FE              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FE
 246  88FE
 247  88FE              ; Variables de funcionamiento. [DRAW].
 248  88FE
 249  88FE 00           Columnas db 0
 250  88FF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8901              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8901 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8902
 254  8902              ; variables de control general.
 255  8902
 256  8902 00           Ctrl_2 db 0
 257  8903              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8903              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8903              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8903              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8903              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8903              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8903              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8903              ;
 265  8903              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8903              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8903              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8903              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8903              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8903
 271  8903 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8904
 273  8904              ;! 61 Bytes por entidad.
 274  8904
 275  8904              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8904              ;					         		---------;      ;---------
 277  8904
 278  8904
 279  8904              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8904
 281  8904 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8905
 283  8905              ;														DESCRIPCIÓN:
 284  8905              ;
 285  8905              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8905              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8905              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8905              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8905              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8905              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8905
 292  8905              ;														BIT 3, Recarga de nueva oleada.
 293  8905              ;														BIT 4, Recarga de nueva oleada.
 294  8905              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  8905              ;														BIT 6, **** Frame completo.
 296  8905              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8905
 298  8905 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8907              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8907              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8907              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8907
 303  8907              ; Ctrl_3 db 0											; Byte de control de propósito general.
 304  8907
 305  8907              ;														DESCRIPCIÓN:
 306  8907              ;
 307  8907              ;														BIT 0,
 308  8907
 309  8907              ; Gestión de ENTIDADES y CAJAS.
 310  8907
 311  8907 00 00        Puntero_store_caja defw 0
 312  8909 00 00        Puntero_restore_caja defw 0
 313  890B 00 00        Indice_restore_caja defw 0
 314  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890E 00           Numero_parcial_de_entidades db 0
 316  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 317  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8911              ;														; _ (Numero_de_malotes)="0".
 321  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8915              ;														; _ puntero (Indice_entidades).
 324  8915
 325  8915
 326  8915              ;---------------------------------------------------------------------------------------------------------------
 327  8915              ;
 328  8915              ;	2/9/23
 329  8915              ;
 330  8915              ;	Álbumes.
 331  8915
 332  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8917              ;														; _variable para almacenar lo posición del puntero_
 334  8917              ; 														; _de pila, SP.
 335  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891B 00 00        Stack_snapshot defw 0
 339  891D 00 00        Stack_snapshot_disparos defw 0
 340  891F
 341  891F 00 00        End_Snapshot defw 0
 342  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8923              ;														; _el snapshot de los registros del siguiente disparo.
 345  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8925 00 00        End_Snapshot_1 defw 0
 348  8927 00 00        End_Snapshot_disparos_1 defw 0
 349  8929 00 00        End_Snapshot_2 defw 0
 350  892B 00 00        End_Snapshot_disparos_2 defw 0
 351  892D 00 00        End_Snapshot_3 defw 0
 352  892F 00 00        End_Snapshot_disparos_3 defw 0
 353  8931
 354  8931 00 00        Puntero_indice_album_de_fotos defw 0
 355  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8935
 357  8935 00 00        Puntero_indice_End_Snapshot defw 0
 358  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8939 00 00        Puntero_de_End_Snapshot defw 0
 360  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893D
 362  893D F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 363  893E              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 364  893E 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 365  893F              ;
 366  893F              ;														DESCRIPCIÓN:
 367  893F              ;
 368  893F              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 369  893F              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 370  893F              ;																_ álbum.
 371  893F              ;
 372  893F
 373  893F              ;---------------------------------------------------------------------------------------------------------------
 374  893F
 375  893F              ; Gestión de Disparos.
 376  893F
 377  893F 00           Numero_de_disparotes db 0
 378  8940 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 379  8942 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 380  8944 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 381  8945              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 382  8945              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 383  8945 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 384  8947              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 385  8947              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 386  8947              ;														; _produzca colisión.
 387  8947 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 388  8949              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 389  8949 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 390  894C              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 391  894C 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 392  894F              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 393  894F 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 394  8951 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 395  8952
 396  8952              ;---------------------------------------------------------------------------------------------------------------
 397  8952
 398  8952              ; Relojes y temporizaciones.
 399  8952
 400  8952 00           Contador_de_frames db 0
 401  8953 00           Contador_de_frames_2 db 0
 402  8954
 403  8954 04           Clock_explosion db 4
 404  8955 1E           Clock_Entidades_en_curso db 30
 405  8956 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 406  8957              ;														; Repite la oleada de entidades.
 407  8957 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 408  8958 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 409  8959 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 410  895A
 411  895A 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 412  895B 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 413  895C 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 414  895D
 415  895D              ;---------------------------------------------------------------------------------------------------------------
 416  895D
 417  895D              ; Gestión de NIVELES.
 418  895D
 419  895D 00           Nivel db 0												; Nivel actual del juego.
 420  895E 00 00        Puntero_indice_NIVELES defw 0
 421  8960 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 422  8962              ; 														; _ que definen el NIVEL.
 423  8962              ; Y todo comienza aquí .....
 424  8962              ;
 425  8962              ; Rutina principal *************************************************************************************************************************************************************************
 426  8962              ;
 427  8962              ;	14/11/22
 428  8962
 429  8962              START
 430  8962
 431  8962 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 432  8965 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 433  8967 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 434  8969 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 435  896B F3           	DI
 436  896C
 437  896C 3E 07        	ld a,%00000111
 438  896E CD 37 99     	call Cls
 439  8971
 440  8971 CD 5A 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 441  8974
 442  8974              ; INICIALIZACIÓN.
 443  8974
 444  8974 CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 445  8977
 446  8977 CD 23 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 447  897A
 448  897A CD 7F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 449  897D              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 450  897D CD 95 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 451  8980              ;													     ; _ malotes antes de guardar ninguna foto.
 452  8980              ; ----------
 453  8980
 454  8980 CD 0A 8D     	call Restore_entidad
 455  8983
 456  8983 21 0E 89     	ld hl,Numero_parcial_de_entidades
 457  8986 46           	ld b,(hl)
 458  8987 04           	inc b
 459  8988 05           	dec b
 460  8989 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 461  898B
 462  898B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 463  898B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 464  898B              ;	Pintamos el resto de entidades:
 465  898B
 466  898B              ;	INICIA ENTIDADES !!!!!
 467  898B
 468  898B C5           1 push bc  												; Guardo el contador de entidades.
 469  898C CD 50 8B     	call Inicia_entidad
 470  898F C1           	pop bc
 471  8990 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 472  8992
 473  8992              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 474  8992              ; (Esto se dá cuando se inicia una nueva oleada).
 475  8992
 476  8992 3A 04 89     	ld a,(Ctrl_1)
 477  8995 CB 5F        	bit 3,a
 478  8997 20 00        	jr nz,5F											; Loop
 479  8999
 480  8999              ; 	INICIA AMADEUS !!!!!
 481  8999
 482  8999              3
 483  8999
 484  8999              ;	call Restore_Amadeus
 485  8999              ;	call Inicia_Puntero_objeto
 486  8999              ;	call Draw
 487  8999              ;	call Guarda_foto_registros
 488  8999              ;	call Guarda_datos_de_borrado_Amadeus
 489  8999
 490  8999              ;	ld de,Amadeus_db
 491  8999              ;	call Store_Amadeus
 492  8999
 493  8999              ; 	INICIA DISPAROS !!!!!
 494  8999
 495  8999              ;	call Inicia_Puntero_Disparo_Entidades
 496  8999              ;	call Inicia_Puntero_Disparo_Amadeus
 497  8999
 498  8999              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 499  8999
 500  8999 CD 7F 8B     5 call Inicia_punteros_de_cajas
 501  899C CD 0A 8D     	call Restore_entidad
 502  899F
 503  899F 3A 04 89     	ld a,(Ctrl_1)
 504  89A2 CB 5F        	bit 3,a
 505  89A4 28 07        	jr z,6F
 506  89A6
 507  89A6              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 508  89A6
 509  89A6 21 04 89     	ld hl,Ctrl_1
 510  89A9 CB 9E        	res 3,(hl)
 511  89AB 18 03        	jr Main
 512  89AD
 513  89AD
 514  89AD              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 515  89AD              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 516  89AD              ; _ para situarnos en el siguiente album.
 517  89AD
 518  89AD CD C6 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 519  89B0
 520  89B0
 521  89B0              ; ------------------------------------
 522  89B0
 523  89B0              Main
 524  89B0              ;
 525  89B0              ;	3/8/23
 526  89B0
 527  89B0              ; 	ei
 528  89B0
 529  89B0 3A 55 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 530  89B3 47           	ld b,a
 531  89B4 3A 52 89     	ld a,(Contador_de_frames)
 532  89B7 B8           	cp b
 533  89B8 20 18        	jr nz,13F
 534  89BA
 535  89BA 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 536  89BD 47           	ld b,a
 537  89BE 3A 0F 89     	ld a,(Entidades_en_curso)
 538  89C1 B8           	cp b
 539  89C2 28 0E        	jr z,13F
 540  89C4 30 0C        	jr nc,13F
 541  89C6
 542  89C6 3C           	inc a
 543  89C7 32 0F 89     	ld (Entidades_en_curso),a
 544  89CA
 545  89CA 3A 55 89     	ld a,(Clock_Entidades_en_curso)
 546  89CD
 547  89CD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 548  89CD              ;! _ IMPREDECIBLE !!!!
 549  89CD
 550  89CD C6 64        	add 100
 551  89CF 32 55 89     	ld (Clock_Entidades_en_curso),a
 552  89D2
 553  89D2              ; Habilita disparos.
 554  89D2
 555  89D2 21 57 89     13 ld hl,Disparo_Amadeus
 556  89D5 11 59 89     	ld de,CLOCK_repone_disparo_Amadeus
 557  89D8 CD FB 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 558  89DB
 559  89DB 21 5A 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 560  89DE 11 5C 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 561  89E1 CD FB 9C     	call Habilita_disparos
 562  89E4
 563  89E4              ; COLISIONES.
 564  89E4
 565  89E4 CD 0C 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 566  89E7
 567  89E7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 568  89E7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 569  89E7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 570  89E7
 571  89E7 AF           	xor a
 572  89E8 32 44 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 573  89EB
 574  89EB CD 7F 8B     	call Inicia_punteros_de_cajas
 575  89EE CD 0A 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 576  89F1              ; 														; _ en DRAW.
 577  89F1 3A C7 88     	ld a,(Filas)
 578  89F4 A7           	and a
 579  89F5 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 580  89F7 CD 1C 8D     	call Incrementa_punteros_de_cajas
 581  89FA 18 F2        	jr 12B
 582  89FC
 583  89FC              ; ---------------------------------------------------------------------------------------
 584  89FC
 585  89FC 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 586  89FF 47               ld b,a
 587  8A00 A7           	and a
 588  8A01 20 14        	jr nz,11F
 589  8A03
 590  8A03 21 04 89     	ld hl,Ctrl_1
 591  8A06 CB 66        	bit 4,(hl)
 592  8A08 C2 95 8A     	jp nz,16F
 593  8A0B
 594  8A0B 21 04 89     	ld hl,Ctrl_1
 595  8A0E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 596  8A10
 597  8A10 3A 52 89     	ld a,(Contador_de_frames)
 598  8A13 3C           	inc a
 599  8A14 32 56 89     	ld (Activa_recarga_cajas),a
 600  8A17
 601  8A17              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 602  8A17
 603  8A17 3A 0F 89     11 ld a,(Entidades_en_curso)
 604  8A1A A7           	and a
 605  8A1B CA 95 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 606  8A1E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 607  8A1F
 608  8A1F              ; Código que ejecutamos con cada entidad:
 609  8A1F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 610  8A1F
 611  8A1F C5           15 push bc 												; Nº de entidades en curso.
 612  8A20
 613  8A20              ; Impacto ???
 614  8A20
 615  8A20 3A E0 88     	ld a,(Impacto)
 616  8A23 A7           	and a
 617  8A24 28 32        	jr z,8F
 618  8A26
 619  8A26              ; Hay Impacto en esta entidad.
 620  8A26
 621  8A26 21 54 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 622  8A29 35           	dec (hl)
 623  8A2A 20 63        	jr nz,17F
 624  8A2C
 625  8A2C              ;! Velocidad de la animación de la explosión.
 626  8A2C
 627  8A2C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 628  8A2E              ;														; _,(velocidad de la explosión).
 629  8A2E
 630  8A2E              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 631  8A2E 18 FE        	jr $
 632  8A30
 633  8A30 CD CB 8D     	call Repone_datos_de_borrado
 634  8A33 CD 23 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 635  8A36
 636  8A36
 637  8A36              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 638  8A36
 639  8A36 3A 02 89     	ld a,(Ctrl_2)
 640  8A39 CB 4F        	bit 1,a
 641  8A3B 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 642  8A3D
 643  8A3D              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 644  8A3D
 645  8A3D 3A CF 88     	ld a,(CTRL_DESPLZ)
 646  8A40 A7           	and a
 647  8A41 20 08        	jr nz,18F
 648  8A43
 649  8A43 21 84 84     	ld hl,Indice_Explosion_2x2-2
 650  8A46 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 651  8A49 18 06        	jr 19F
 652  8A4B
 653  8A4B 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 654  8A4E 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 655  8A51
 656  8A51 21 02 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 657  8A54 CB CE        	set 1,(hl)
 658  8A56 18 22        	jr 7F
 659  8A58
 660  8A58              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 661  8A58              ; _con las coordenadas de la entidad almacenada en DRAW.
 662  8A58
 663  8A58 3A 04 89     8 ld a,(Ctrl_1)
 664  8A5B CB 57        	bit 2,a
 665  8A5D 28 1B        	jr z,7F
 666  8A5F
 667  8A5F 2A 47 89     	ld hl,(Coordenadas_disparo_certero)
 668  8A62 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 669  8A63              ;														; E contiene la coordenada_X del disparo.
 670  8A63 2A CD 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 671  8A66              ;														; H FILA, (Coordenada_y de la entidad).
 672  8A66 A7           	and a
 673  8A67 ED 52        	sbc hl,de
 674  8A69
 675  8A69 CD 43 92     	call Determina_resultado_comparativa
 676  8A6C
 677  8A6C 78           	ld a,b
 678  8A6D A7           	and a
 679  8A6E 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 680  8A70
 681  8A70              ; ----- ----- -----
 682  8A70
 683  8A70 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 684  8A72 32 E0 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 685  8A75
 686  8A75 21 04 89     	ld hl,Ctrl_1
 687  8A78 CB 96        	res 2,(hl)
 688  8A7A
 689  8A7A CD EC 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 690  8A7D
 691  8A7D 3A F1 88     	ld a,(Ctrl_0)
 692  8A80 CB 67        	bit 4,a
 693  8A82 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 694  8A84
 695  8A84              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 696  8A84              ; [[[
 697  8A84 CD A5 8D     	call Detecta_disparo_entidad
 698  8A87              ; ]]]
 699  8A87
 700  8A87 CD 60 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 701  8A8A              ;	call Guarda_datos_de_borrado
 702  8A8A
 703  8A8A 21 F1 88     	ld hl,Ctrl_0
 704  8A8D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 705  8A8F
 706  8A8F CD CF 8C     17 call Store_Restore_cajas
 707  8A92
 708  8A92 C1           	pop bc
 709  8A93 10 8A        	djnz 15B
 710  8A95
 711  8A95              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 712  8A95              ; Hemos gestionado todas las unidades.
 713  8A95              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 714  8A95
 715  8A95              ;	ld hl,Ctrl_1
 716  8A95              ;	res 2,(hl)
 717  8A95
 718  8A95 CD C6 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 719  8A98              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 720  8A98
 721  8A98              ; ----------------------------------------
 722  8A98
 723  8A98 3A 04 89     	ld a,(Ctrl_1) 										; Existe Loop?
 724  8A9B CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 725  8A9D CA B0 89     	jp z,Main
 726  8AA0
 727  8AA0 3A 52 89     	ld a,(Contador_de_frames)
 728  8AA3 47           	ld b,a
 729  8AA4 3A 56 89     	ld a,(Activa_recarga_cajas)
 730  8AA7 B8           	cp b
 731  8AA8 28 08        	jr z,20F
 732  8AAA
 733  8AAA 21 04 89     	ld hl,Ctrl_1
 734  8AAD CB E6        	set 4,(hl)
 735  8AAF C3 B0 89     	jp Main
 736  8AB2
 737  8AB2 21 04 89     20 ld hl,Ctrl_1
 738  8AB5 CB A6        	res 4,(hl)
 739  8AB7
 740  8AB7 3A 52 89     	ld a,(Contador_de_frames)
 741  8ABA
 742  8ABA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 743  8ABA              ;! _ IMPREDECIBLE !!!!
 744  8ABA
 745  8ABA C6 0A        	add 10
 746  8ABC 32 55 89     	ld (Clock_Entidades_en_curso),a
 747  8ABF
 748  8ABF C3 77 89     	jp 4B
 749  8AC2
 750  8AC2 C9           	ret
 751  8AC3
 752  8AC3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 753  8AC3
 754  8AC3              Gestiona_Amadeus
 755  8AC3
 756  8AC3 3E 04            ld a,4
 757  8AC5 D3 FE        	out ($fe),a											; Azul.
 758  8AC7
 759  8AC7 CD 31 8D     	call Restore_Amadeus
 760  8ACA
 761  8ACA              ;! Activa/desactiva impacto con Amadeus.
 762  8ACA
 763  8ACA 3A E0 88     	ld a,(Impacto)
 764  8ACD A7           	and a
 765  8ACE 20 FE        	jr nz,$
 766  8AD0
 767  8AD0 CD 3D 8B     	call Mov_Amadeus
 768  8AD3
 769  8AD3 3A F1 88     	ld a,(Ctrl_0)
 770  8AD6 CB 67        	bit 4,a
 771  8AD8 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 772  8ADA
 773  8ADA CD 60 8B     	call Guarda_foto_entidad_a_pintar
 774  8ADD CD AB 8D     	call Guarda_datos_de_borrado_Amadeus
 775  8AE0
 776  8AE0 21 F1 88     14 ld hl,Ctrl_0
 777  8AE3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 778  8AE5
 779  8AE5 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 780  8AE8 CD 43 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 781  8AEB
 782  8AEB              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 783  8AEB
 784  8AEB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 785  8AEB
 786  8AEB              ;	call Calcula_numero_de_disparotes
 787  8AEB
 788  8AEB C9           	ret
 789  8AEC
 790  8AEC              ; --------------------------------------------------------------------------------------------------------------
 791  8AEC              ;
 792  8AEC              ;	27/05/23
 793  8AEC
 794  8AEC              Mov_obj
 795  8AEC
 796  8AEC 3A 02 89     	ld a,(Ctrl_2)
 797  8AEF CB 4F        	bit 1,a
 798  8AF1 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 799  8AF3
 800  8AF3              ; Explosión:
 801  8AF3
 802  8AF3 3A 03 89     	ld a,(Frames_explosion)
 803  8AF6 A7           	and a
 804  8AF7 20 11        	jr nz,4F
 805  8AF9
 806  8AF9              ; Una alimaña menos!!!!!!!!!1
 807  8AF9
 808  8AF9 CD 4C 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 809  8AFC 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 810  8AFF 35           	dec (hl)
 811  8B00 21 0F 89     	ld hl,Entidades_en_curso
 812  8B03 35           	dec (hl)
 813  8B04 21 0D 89     	ld hl,Numero_de_entidades
 814  8B07 35           	dec (hl)
 815  8B08 18 32        	jr 3F
 816  8B0A
 817  8B0A              ; -----
 818  8B0A
 819  8B0A              ;	`Movemos´ la explosión.
 820  8B0A
 821  8B0A 2A D5 88     4 ld hl,(Puntero_DESPLZ_der)
 822  8B0D 23           	inc hl
 823  8B0E 23           	inc hl
 824  8B0F 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 825  8B12 CD 81 8C     	call Extrae_address
 826  8B15 22 CB 88     	ld (Puntero_objeto),hl
 827  8B18
 828  8B18 21 03 89     	ld hl,Frames_explosion
 829  8B1B 35           	dec (hl)
 830  8B1C
 831  8B1C              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 832  8B1C 18 1E        	jr 3F
 833  8B1E
 834  8B1E AF           2 xor a
 835  8B1F 32 F1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 836  8B22
 837  8B22              ; Movemos Entidades malignas.
 838  8B22
 839  8B22 CD A6 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 840  8B25
 841  8B25 3A F1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 842  8B28 CB 67        	bit 4,a
 843  8B2A C8           	ret z
 844  8B2B
 845  8B2B              ; Ha habido desplazamiento de la entidad maligna.
 846  8B2B              ; Ha llegado a zona de AMADEUS ???
 847  8B2B
 848  8B2B 3A CE 88     	ld a,(Coordenada_y)
 849  8B2E FE 14        	cp $14
 850  8B30 D4 D1 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 851  8B33              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 852  8B33              ; ---------
 853  8B33
 854  8B33 CD 67 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 855  8B36 CD CB 8D     	call Repone_datos_de_borrado
 856  8B39 CD 23 8C     	call Limpia_Variables_de_borrado
 857  8B3C
 858  8B3C C9           3 ret													; _de la misma.
 859  8B3D
 860  8B3D              ; --------------------------------------------------------------------------------------------------------------
 861  8B3D              ;
 862  8B3D              ;	29/1/23
 863  8B3D
 864  8B3D              Mov_Amadeus
 865  8B3D
 866  8B3D CD 6E 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 867  8B40
 868  8B40 3A F1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 869  8B43 CB 67        	bit 4,a
 870  8B45 C8           	ret z
 871  8B46
 872  8B46              ; ---------
 873  8B46
 874  8B46 CD 67 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 875  8B49 CD BB 8D     	call Repone_datos_de_borrado_Amadeus
 876  8B4C CD 23 8C     	call Limpia_Variables_de_borrado
 877  8B4F
 878  8B4F C9           	ret
 879  8B50
 880  8B50              ; -----------------------------------------------------------------------------------
 881  8B50
 882  8B50 CD 87 8C     Inicia_entidad	call Inicia_Puntero_objeto
 883  8B53 CD 4B 99     	call Recompone_posicion_inicio
 884  8B56 CD 2A 93     	call Draw
 885  8B59 CD A0 7F     	call Guarda_foto_registros
 886  8B5C              ;	call Guarda_datos_de_borrado
 887  8B5C CD CF 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 888  8B5F C9           	ret
 889  8B60
 890  8B60              ; --------------------------------------------------------------------------------------------------------------
 891  8B60              ;
 892  8B60              ;	31/08/23
 893  8B60              ;
 894  8B60              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 895  8B60              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 896  8B60
 897  8B60              Guarda_foto_entidad_a_pintar
 898  8B60
 899  8B60              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 900  8B60
 901  8B60 CD 2A 93     	call Draw
 902  8B63 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 903  8B66 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 904  8B67
 905  8B67              ; --------------------------------------------------------------------------------------------------------------
 906  8B67              ;
 907  8B67              ;	19/9/23
 908  8B67
 909  8B67 21 C7 88     Prepara_var_pintado ld hl,Filas
 910  8B6A 11 E7 88     	ld de,Variables_de_pintado
 911  8B6D 01 08 00     	ld bc,8
 912  8B70 ED B0        	ldir
 913  8B72 C9           	ret
 914  8B73
 915  8B73              ; --------------------------------------------------------------------------------------------------------------
 916  8B73
 917  8B73 21 E7 88     Repone_pintar ld hl,Variables_de_pintado
 918  8B76 11 C7 88     	ld de,Filas
 919  8B79 01 08 00     	ld bc,8
 920  8B7C ED B0        	ldir
 921  8B7E C9           	ret
 922  8B7F
 923  8B7F              ; *************************************************************************************************************************************************************
 924  8B7F              ;
 925  8B7F              ; 8/1/23
 926  8B7F              ;
 927  8B7F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 928  8B7F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 929  8B7F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 930  8B7F
 931  8B7F              ; Destruye HL y DE !!!!!
 932  8B7F
 933  8B7F              Inicia_punteros_de_cajas
 934  8B7F
 935  8B7F 21 8C 85     	ld hl,Indice_de_cajas
 936  8B82 CD 81 8C         call Extrae_address
 937  8B85 22 07 89         ld (Puntero_store_caja),hl
 938  8B88 21 8E 85     	ld hl,Indice_de_cajas+2
 939  8B8B 22 0B 89     	ld (Indice_restore_caja),hl
 940  8B8E CD 81 8C     	call Extrae_address
 941  8B91 22 09 89     	ld (Puntero_restore_caja),hl
 942  8B94 C9               ret
 943  8B95
 944  8B95              ; ---------------------------------------------------------------
 945  8B95              ;
 946  8B95              ;	9/8/23
 947  8B95              ;
 948  8B95              ;	Inicialización y gestión de álbumes de fotos y cajas.
 949  8B95
 950  8B95              Inicia_punteros_de_albumes_y_malotes
 951  8B95
 952  8B95 21 EC 84     	ld hl,Indice_album_de_fotos
 953  8B98 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 954  8B9B CD 81 8C     	call Extrae_address
 955  8B9E 22 1B 89     	ld (Stack_snapshot),hl
 956  8BA1
 957  8BA1 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 958  8BA4 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 959  8BA7 CD 81 8C     	call Extrae_address
 960  8BAA 22 1D 89     	ld (Stack_snapshot_disparos),hl
 961  8BAD
 962  8BAD 21 FC 84     	ld hl,Indice_End_Snapshot
 963  8BB0 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 964  8BB3 CD 81 8C     	call Extrae_address
 965  8BB6 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 966  8BB9
 967  8BB9 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 968  8BBC 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 969  8BBF CD 81 8C     	call Extrae_address
 970  8BC2 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 971  8BC5
 972  8BC5 C9           	ret
 973  8BC6
 974  8BC6              ;	23/10/23
 975  8BC6
 976  8BC6              Avanza_puntero_de_album_de_fotos_de_entidades
 977  8BC6
 978  8BC6              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 979  8BC6
 980  8BC6              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 981  8BC6              ; Estamos en el último álbum del índice???.
 982  8BC6              ;
 983  8BC6
 984  8BC6 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 985  8BC9 01 F2 84     	ld bc,Indice_album_de_fotos+6
 986  8BCC A7           	and a
 987  8BCD ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 988  8BCF 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 989  8BD1
 990  8BD1              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
 991  8BD1              ; Actualizamos (Semaforo).
 992  8BD1
 993  8BD1 21 3D 89     	ld hl,Semaforo
 994  8BD4 CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
 995  8BD6
 996  8BD6              ; Inicia con el buffer de video completo !!!
 997  8BD6
 998  8BD6 FB           	ei
 999  8BD7 76           	halt
1000  8BD8 C9           	ret
1001  8BD9
1002  8BD9 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1003  8BDC 23           	inc hl
1004  8BDD 23           	inc hl
1005  8BDE 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1006  8BE1 CD 81 8C     	call Extrae_address
1007  8BE4 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1008  8BE7
1009  8BE7 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1010  8BEA 23           	inc hl
1011  8BEB 23           	inc hl
1012  8BEC 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1013  8BEF CD 81 8C     	call Extrae_address
1014  8BF2 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1015  8BF5
1016  8BF5 21 3D 89     	ld hl,Semaforo
1017  8BF8 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1018  8BFA
1019  8BFA C9           	ret
1020  8BFB
1021  8BFB              ; *************************************************************************************************************************************************************
1022  8BFB              ;
1023  8BFB              ; 8/1/23
1024  8BFB              ;
1025  8BFB              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1026  8BFB
1027  8BFB 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1028  8BFE 22 40 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1029  8C01 C9           	ret
1030  8C02 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1031  8C05 22 42 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1032  8C08 C9           	ret
1033  8C09
1034  8C09              ; -------------------------------------------------------------------------------------------------------------
1035  8C09              ;
1036  8C09              ; 21/9/23
1037  8C09              ;
1038  8C09
1039  8C09              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1040  8C09
1041  8C09              Limpia_album_Amadeus
1042  8C09
1043  8C09 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1044  8C0C 7E           	ld a,(hl)
1045  8C0D A7           	and a
1046  8C0E C8           	ret z
1047  8C0F
1048  8C0F 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1049  8C12 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1050  8C15 01 0B 00     	ld bc,11
1051  8C18 AF           	xor a
1052  8C19 77           	ld (hl),a
1053  8C1A ED B0        	ldir
1054  8C1C
1055  8C1C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1056  8C1F 22 23 89     	ld (End_Snapshot_Amadeus),hl
1057  8C22
1058  8C22 C9           	ret
1059  8C23
1060  8C23 21 E1 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1061  8C26 11 E2 88     	ld de,Variables_de_borrado+1
1062  8C29 01 05 00     	ld bc,5
1063  8C2C AF           	xor a
1064  8C2D 77           	ld (hl),a
1065  8C2E ED B0        	ldir
1066  8C30 C9           	ret
1067  8C31
1068  8C31              ; -------------------------------------------------------------------------------------------------------------
1069  8C31              ;
1070  8C31              ; 8/9/23
1071  8C31              ;
1072  8C31
1073  8C31              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1074  8C31              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1075  8C31
1076  8C31              Calcula_numero_de_malotes
1077  8C31
1078  8C31 21 00 70     	ld hl,Album_de_fotos
1079  8C34 EB           	ex de,hl
1080  8C35 2A 1F 89     	ld hl,(End_Snapshot)
1081  8C38
1082  8C38 7C           	ld a,h
1083  8C39 A7           	and a
1084  8C3A 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1085  8C3C
1086  8C3C 06 00        4 ld b,0
1087  8C3E 7D           	ld a,l
1088  8C3F 93           	sub e
1089  8C40 28 07        	jr z,1F
1090  8C42
1091  8C42              ; Nº de malotes no es "0".
1092  8C42
1093  8C42 D6 06        2 sub 6
1094  8C44 04           	inc b
1095  8C45 A7           	and a
1096  8C46 20 FA        	jr nz,2B
1097  8C48 78           	ld a,b
1098  8C49
1099  8C49 32 10 89     1 ld (Numero_de_malotes),a
1100  8C4C C9           	ret
1101  8C4D
1102  8C4D              ; -------------------------------------------------------------------------------------------------------------
1103  8C4D              ;
1104  8C4D              ; 8/9/23
1105  8C4D              ;
1106  8C4D
1107  8C4D              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1108  8C4D              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1109  8C4D
1110  8C4D              Calcula_malotes_Amadeus
1111  8C4D
1112  8C4D 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1113  8C50 EB           	ex de,hl
1114  8C51 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1115  8C54
1116  8C54 7C           	ld a,h
1117  8C55 A7           	and a
1118  8C56 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1119  8C58
1120  8C58 06 00        	ld b,0
1121  8C5A 7D           	ld a,l
1122  8C5B 93           	sub e
1123  8C5C 28 07        	jr z,1F
1124  8C5E
1125  8C5E              ; Nº de malotes no es "0".
1126  8C5E
1127  8C5E D6 06        2 sub 6
1128  8C60 04           	inc b
1129  8C61 A7           	and a
1130  8C62 20 FA        	jr nz,2B
1131  8C64 78           	ld a,b
1132  8C65
1133  8C65 32 10 89     1 ld (Numero_de_malotes),a
1134  8C68 C9           	ret
1135  8C69
1136  8C69              ; -------------------------------------------------------------------------------------------------------------
1137  8C69              ;
1138  8C69              ; 28/2/23
1139  8C69              ;
1140  8C69
1141  8C69              Calcula_numero_de_disparotes
1142  8C69
1143  8C69 21 50 71     	ld hl,Album_de_fotos_disparos
1144  8C6C EB           	ex de,hl
1145  8C6D 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1146  8C70
1147  8C70 06 00        	ld b,0
1148  8C72 7D           	ld a,l
1149  8C73 93           	sub e
1150  8C74 28 07        	jr z,1F
1151  8C76
1152  8C76              ; Nº de malotes no es "0".
1153  8C76
1154  8C76 D6 06        2 sub 6
1155  8C78 04           	inc b
1156  8C79 A7           	and a
1157  8C7A 20 FA        	jr nz,2B
1158  8C7C 78           	ld a,b
1159  8C7D
1160  8C7D 32 3F 89     1 ld (Numero_de_disparotes),a
1161  8C80 C9           	ret
1162  8C81
1163  8C81              ; *************************************************************************************************************************************************************
1164  8C81              ;
1165  8C81              ; 20/10/22
1166  8C81              ;
1167  8C81              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1168  8C81              ;
1169  8C81              ; Destruye el puntero y DE !!!!!
1170  8C81
1171  8C81 5E           Extrae_address ld e,(hl)
1172  8C82 23           	inc hl
1173  8C83 56           	ld d,(hl)
1174  8C84 2B           	dec hl
1175  8C85 EB           	ex de,hl
1176  8C86 C9           	ret
1177  8C87
1178  8C87              ; *************************************************************************************************************************************************************
1179  8C87              ;
1180  8C87              ;	7/2/23
1181  8C87              ;
1182  8C87              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1183  8C87              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1184  8C87              ;
1185  8C87              ;   Destruye HL y BC !!!!!,
1186  8C87              ;
1187  8C87              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1188  8C87              ;					"0" ..... Izquierda.
1189  8C87
1190  8C87              Inicia_Puntero_objeto
1191  8C87
1192  8C87 3A DB 88     	ld a,(Cuad_objeto)
1193  8C8A E6 01        	and 1
1194  8C8C F5           	push af
1195  8C8D CC AB 8C     	call z,Inicia_puntero_objeto_izq
1196  8C90 F1           	pop af
1197  8C91 28 2B        	jr z,1F
1198  8C93 CD 98 8C     	call Inicia_puntero_objeto_der
1199  8C96 18 26        	jr 1F
1200  8C98
1201  8C98              ; Arrancamos desde la parte izquierda de la pantalla.
1202  8C98              ; Iniciamos (Indice_Sprite_der).
1203  8C98
1204  8C98 2A D1 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1205  8C9B 22 D5 88     	ld (Puntero_DESPLZ_der),hl
1206  8C9E CD 81 8C     	call Extrae_address
1207  8CA1 22 CB 88     	ld (Puntero_objeto),hl
1208  8CA4
1209  8CA4 2A D3 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1210  8CA7 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
1211  8CAA C9           	ret
1212  8CAB
1213  8CAB              ; Arrancamos desde la parte derecha de la pantalla.
1214  8CAB              ; Iniciamos (Indice_Sprite_izq).
1215  8CAB
1216  8CAB 2A D3 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1217  8CAE 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
1218  8CB1 CD 81 8C     	call Extrae_address
1219  8CB4 22 CB 88     	ld (Puntero_objeto),hl
1220  8CB7
1221  8CB7 2A D1 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1222  8CBA 22 D5 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1223  8CBD C9           	ret
1224  8CBE
1225  8CBE              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1226  8CBE
1227  8CBE 21 40 83     1 ld hl,Amadeus
1228  8CC1 ED 4B CB 88  	ld bc,(Puntero_objeto)
1229  8CC5 B7 ED 42     	sub hl,bc
1230  8CC8 C0           	ret nz
1231  8CC9 21 F1 88     	ld hl,Ctrl_0
1232  8CCC CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1233  8CCE C9           	ret 												; _de nuestra nave en los extremos.
1234  8CCF
1235  8CCF              ; *************************************************************************************************************************************************************
1236  8CCF              ;
1237  8CCF              ;	14/5/23
1238  8CCF              ;
1239  8CCF              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1240  8CCF              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1241  8CCF
1242  8CCF              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1243  8CCF              ;	_de la 2ª y 3ª entidad respectivamente.
1244  8CCF
1245  8CCF              Store_Restore_cajas
1246  8CCF
1247  8CCF E5           	push hl
1248  8CD0 D5           	push de
1249  8CD1 C5            	push bc
1250  8CD2
1251  8CD2              ;	STORE !!!!!
1252  8CD2              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1253  8CD2
1254  8CD2 21 C7 88     	ld hl,Filas
1255  8CD5 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1256  8CD9 01 3D 00     	ld bc,61
1257  8CDC ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1258  8CDE
1259  8CDE              ; 	Entidad_sospechosa. 20/4/23
1260  8CDE
1261  8CDE 3A E0 88     	ld a,(Impacto)
1262  8CE1 A7           	and a
1263  8CE2 28 0C        	jr z,1F
1264  8CE4
1265  8CE4 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1266  8CE7 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1267  8CEA A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1268  8CEB ED 4A        	adc hl,bc 											; _ "0" más adelante.
1269  8CED 22 45 89     	ld (Entidad_sospechosa_de_colision),hl
1270  8CF0
1271  8CF0              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1272  8CF0
1273  8CF0 2A 09 89     1 ld hl,(Puntero_restore_caja)
1274  8CF3 7E           	ld a,(hl)
1275  8CF4 A7           	and a
1276  8CF5 F5           	push af
1277  8CF6 28 08        	jr z,2F
1278  8CF8
1279  8CF8 11 C7 88     	ld de,Filas
1280  8CFB 01 3D 00     	ld bc,61
1281  8CFE ED B0        	ldir
1282  8D00
1283  8D00 CD 1C 8D     2 call Incrementa_punteros_de_cajas
1284  8D03
1285  8D03 F1           	pop af
1286  8D04 28 EA        	jr z,1B
1287  8D06
1288  8D06 C1           	pop bc
1289  8D07 D1           	pop de
1290  8D08 E1           	pop hl
1291  8D09
1292  8D09 C9           	ret
1293  8D0A
1294  8D0A              ; **************************************************************************************************
1295  8D0A              ;
1296  8D0A              ;	12/05/23
1297  8D0A              ;
1298  8D0A              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1299  8D0A
1300  8D0A E5           Restore_entidad push hl
1301  8D0B D5           	push de
1302  8D0C C5            	push bc
1303  8D0D
1304  8D0D 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1305  8D10 11 C7 88     	ld de,Filas
1306  8D13 01 3D 00     	ld bc,61
1307  8D16 ED B0        	ldir
1308  8D18
1309  8D18 C1           	pop bc
1310  8D19 D1           	pop de
1311  8D1A E1           	pop hl
1312  8D1B C9           	ret
1313  8D1C
1314  8D1C              ; **************************************************************************************************
1315  8D1C              ;
1316  8D1C              ;	08/05/23
1317  8D1C              ;
1318  8D1C              ;	Incrementamos los dos punteros de entidades. (+1).
1319  8D1C
1320  8D1C              Incrementa_punteros_de_cajas
1321  8D1C
1322  8D1C 2A 09 89     	ld hl,(Puntero_restore_caja)
1323  8D1F 22 07 89     	ld (Puntero_store_caja),hl
1324  8D22 2A 0B 89     	ld hl,(Indice_restore_caja)
1325  8D25 23           	inc hl
1326  8D26 23           	inc hl
1327  8D27 22 0B 89     	ld (Indice_restore_caja),hl
1328  8D2A CD 81 8C         call Extrae_address
1329  8D2D 22 09 89         ld (Puntero_restore_caja),hl
1330  8D30 C9               ret
1331  8D31
1332  8D31              ; **************************************************************************************************
1333  8D31              ;
1334  8D31              ;	25/01/23
1335  8D31              ;
1336  8D31              ;	Restore_Amadeus
1337  8D31              ;
1338  8D31              ;	Cargamos en DRAW los parámetros de Amadeus.
1339  8D31              ;
1340  8D31
1341  8D31 E5           Restore_Amadeus	push hl
1342  8D32 D5           	push de
1343  8D33 C5            	push bc
1344  8D34 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1345  8D37 11 C7 88     	ld de,Filas
1346  8D3A 01 3D 00     	ld bc,61
1347  8D3D ED B0        	ldir
1348  8D3F C1           	pop bc
1349  8D40 D1           	pop de
1350  8D41 E1           	pop hl
1351  8D42 C9           	ret
1352  8D43
1353  8D43              ; *************************************************************************************************************************************************************
1354  8D43              ;
1355  8D43              ;	29/04/23
1356  8D43              ;
1357  8D43              ;	Store_Amadeus
1358  8D43              ;
1359  8D43              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1360  8D43              ;
1361  8D43              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1362  8D43              ;
1363  8D43              ;	DESTRUYE: HL y BC y DE.
1364  8D43
1365  8D43 21 C7 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1366  8D46 01 3D 00     	ld bc,61
1367  8D49 ED B0        	ldir
1368  8D4B C9           	ret
1369  8D4C
1370  8D4C              ; -----------------------------------------------------------
1371  8D4C              ;
1372  8D4C              ;	27/04/23
1373  8D4C              ;
1374  8D4C              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1375  8D4C              ;
1376  8D4C              ;	Destruye: HL,BC,DE,A
1377  8D4C
1378  8D4C 21 C7 88     Borra_datos_entidad ld hl,Filas
1379  8D4F 01 3C 00     	ld bc,60
1380  8D52 AF           	xor a
1381  8D53 77           	ld (hl),a
1382  8D54 11 C8 88     	ld de,Filas+1
1383  8D57 ED B0        	ldir
1384  8D59 C9           	ret
1385  8D5A
1386  8D5A              ; -----------------------------------------------------------
1387  8D5A
1388  8D5A              ; Teclado.
1389  8D5A
1390  8D5A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1391  8D5C DB FE        	in a,($fe)
1392  8D5E E6 01        	and $01
1393  8D60 28 02        	jr z,1f
1394  8D62 18 F6        	jr Pulsa_ENTER
1395  8D64 C9           1 ret
1396  8D65
1397  8D65              ; **************************************************************************************************
1398  8D65              ;
1399  8D65              ; Temporización.
1400  8D65
1401  8D65              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1402  8D65              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1403  8D65              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1404  8D65              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1405  8D65
1406  8D65              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1407  8D65              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1408  8D65              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1409  8D65
1410  8D65              ; A partir de $4f61 no hace falta DELAY.
1411  8D65
1412  8D65              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1413  8D65
1414  8D65 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1415  8D68 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1416  8D69 78           	LD A,B
1417  8D6A A7           	AND A
1418  8D6B 20 FB        	JR NZ,wait
1419  8D6D C9           	RET
1420  8D6E
1421  8D6E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1422  8D6E              ;
1423  8D6E              ;	5/3/23
1424  8D6E              ;
1425  8D6E              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1426  8D6E
1427  8D6E              Movimiento_Amadeus
1428  8D6E
1429  8D6E              ; Disparo.
1430  8D6E
1431  8D6E 3A 57 89     	ld a,(Disparo_Amadeus)
1432  8D71 A7           	and a
1433  8D72 20 02        	jr nz,1F
1434  8D74 18 15        	jr 2F
1435  8D76
1436  8D76 3E F7        1 ld a,$f7													; "5" para disparar.
1437  8D78 DB FE        	in a,($fe)
1438  8D7A E6 10        	and $10
1439  8D7C
1440  8D7C F5           	push af
1441  8D7D CC 34 8E     	call z,Genera_disparo
1442  8D80 F1           	pop af
1443  8D81 20 08        	jr nz,2F
1444  8D83
1445  8D83 3A 57 89     	ld a,(Disparo_Amadeus)
1446  8D86 EE 01        	xor 1
1447  8D88 32 57 89     	ld (Disparo_Amadeus),a
1448  8D8B
1449  8D8B 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1450  8D8D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1451  8D8F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1452  8D91 CC 05 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1453  8D94
1454  8D94 3E F7        	ld a,$f7
1455  8D96 DB FE        	in a,($fe)
1456  8D98 E6 01        	and $01
1457  8D9A C8           	ret z
1458  8D9B
1459  8D9B 3E F7        	ld a,$f7
1460  8D9D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1461  8D9F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1462  8DA1 CC E7 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1463  8DA4 C9           	ret
1464  8DA5
1465  8DA5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1466  8DA5              ;
1467  8DA5              ;	Rutina provisional para que los malotes cagen balas.
1468  8DA5
1469  8DA5              Detecta_disparo_entidad
1470  8DA5
1471  8DA5 3A 5A 89     	ld a,(Disparo_entidad)
1472  8DA8 A7           	and a
1473  8DA9 C8           	ret z
1474  8DAA
1475  8DAA              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1476  8DAA
1477  8DAA              ;	ld a,$7f				; Detecta SPACE.
1478  8DAA              ;	in a,($fe)
1479  8DAA              ;	and 1
1480  8DAA              ;	ret nz
1481  8DAA
1482  8DAA              ;	call Genera_disparo
1483  8DAA C9           	ret
1484  8DAB
1485  8DAB              ; ----------------------------------------------------------------------
1486  8DAB              ;
1487  8DAB              ;	8/9/23
1488  8DAB
1489  8DAB 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1490  8DAE 2B            	dec hl
1491  8DAF 7E           	ld a,(hl)
1492  8DB0 A7           	and a
1493  8DB1 C8           	ret z										; Salimos si es álbum está vacío.
1494  8DB2
1495  8DB2 11 E6 88     	ld de,Variables_de_borrado+5
1496  8DB5 01 06 00     	ld bc,6
1497  8DB8 ED B8        	lddr
1498  8DBA C9           	ret
1499  8DBB
1500  8DBB              ; ----------------------------------------------------------------------
1501  8DBB              ;
1502  8DBB              ;	9/9/23
1503  8DBB
1504  8DBB              Repone_datos_de_borrado_Amadeus
1505  8DBB
1506  8DBB 21 E1 88     	ld hl,Variables_de_borrado
1507  8DBE 11 A0 72     	ld de,Album_de_fotos_Amadeus
1508  8DC1 01 06 00     	ld bc,6
1509  8DC4 ED B0        	ldir
1510  8DC6
1511  8DC6 EB           	ex de,hl
1512  8DC7 22 23 89     	ld (End_Snapshot_Amadeus),hl
1513  8DCA
1514  8DCA C9           	ret
1515  8DCB
1516  8DCB              ; ----------------------------------------------------------------------
1517  8DCB              ;
1518  8DCB              ;	27/10/23
1519  8DCB              ;
1520  8DCB
1521  8DCB              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1522  8DCB              ;	_ Album_de_fotos correspondiente.
1523  8DCB
1524  8DCB              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1525  8DCB              ;	_ durante el proceso de escritura.
1526  8DCB
1527  8DCB              Repone_datos_de_borrado
1528  8DCB
1529  8DCB F3           	di
1530  8DCC ED 5B 1B 89  	ld de,(Stack_snapshot)
1531  8DD0 21 E1 88     	ld hl,Variables_de_borrado
1532  8DD3 01 06 00     	ld bc,6
1533  8DD6 ED B0        	ldir
1534  8DD8 FB           	ei
1535  8DD9
1536  8DD9 EB           	ex de,hl
1537  8DDA 22 1B 89     	ld (Stack_snapshot),hl
1538  8DDD
1539  8DDD C9           	ret
1540  8DDE
1541  8DDE              ; ----------------------------------------------------------------------
1542  8DDE              ;
1543  8DDE              ;	11/8/23
1544  8DDE
1545  8DDE              Gestiona_entidades
1546  8DDE
1547  8DDE              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1548  8DDE
1549  8DDE 3A 3D 89     	ld a,(Semaforo)
1550  8DE1 CB 47        	bit 0,a
1551  8DE3 28 FE        	jr z,$												;! STOP el buffer está vacío.
1552  8DE5 C8           	ret z
1553  8DE6
1554  8DE6              ;	call Extrae_foto_disparos
1555  8DE6              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1556  8DE6
1557  8DE6 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1558  8DE9
1559  8DE9              ;	Album incompleto ?????
1560  8DE9              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1561  8DE9
1562  8DE9
1563  8DE9 3A 3E 89     	ld a,(Ctrl_Semaforo)
1564  8DEC CB 47        	bit 0,a
1565  8DEE C0           	ret nz
1566  8DEF
1567  8DEF              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1568  8DEF              ; Nos situamos al comienzo del último álbum.
1569  8DEF
1570  8DEF CD 43 73     	call Modifica_Stack_snapshot
1571  8DF2
1572  8DF2 C9           	ret
1573  8DF3
1574  8DF3
1575  8DF3
1576  8DF3              ; -----------------------------------------------------------------------------------
1577  8DF3
1578  8DF3              Pinta_Amadeus
1579  8DF3
1580  8DF3 3E 06        	ld a,6
1581  8DF5 D3 FE            out ($fe),a										; Amarillo
1582  8DF7
1583  8DF7 CD 4D 8C        	call Calcula_malotes_Amadeus
1584  8DFA CD BA 96     	call Extrae_foto_Amadeus
1585  8DFD CD 09 8C     	call Limpia_album_Amadeus
1586  8E00
1587  8E00 C9           	ret
1588  8E01
1589  8E01              Pinta_entidades
1590  8E01
1591  8E01 3A 3D 89     	ld a,(Semaforo)
1592  8E04 CB 47        	bit 0,a
1593  8E06 C8           	ret z
1594  8E07
1595  8E07              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1596  8E07
1597  8E07 CD 31 8C     	call Calcula_numero_de_malotes
1598  8E0A CD 38 96     	call Extrae_foto_entidades
1599  8E0D
1600  8E0D C9           	ret
1601  8E0E
1602  8E0E              ; -----------------------------------------------------------------------------------
1603  8E0E
1604  8E0E              Actualiza_relojes
1605  8E0E
1606  8E0E 21 52 89     	ld hl,Contador_de_frames
1607  8E11 7E           	ld a,(hl)
1608  8E12 FE FF        	cp $ff
1609  8E14 20 04        	jr nz,1F
1610  8E16 34           	inc (hl)
1611  8E17 21 53 89     	ld hl,Contador_de_frames_2
1612  8E1A 34           1 inc (hl)											; 0 - 255
1613  8E1B C9           	ret
1614  8E1C
1615  8E1C              ; ---------------------------------------------------------------
1616  8E1C              ;
1617  8E1C              ;	27/9/23
1618  8E1C
1619  8E1C              Guarda_parametros_DRAW
1620  8E1C
1621  8E1C 21 C7 88     	ld hl,Filas
1622  8E1F 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1623  8E22 01 3D 00     	ld bc,61
1624  8E25 ED B0        	ldir
1625  8E27 C9           	ret
1626  8E28
1627  8E28              Recupera_parametros_DRAW
1628  8E28
1629  8E28 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1630  8E2B 11 C7 88     	ld de,Filas
1631  8E2E 01 3D 00     	ld bc,61
1632  8E31 ED B0        	ldir
1633  8E33 C9           	ret
1634  8E34
1635  8E34              ; ---------------------------------------------------------------
1636  8E34
1637  8E34              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E34              ; ******************************************************************************************************************************************************************************************
   2+ 8E34              ;
   3+ 8E34              ;   21/07/23
   4+ 8E34              ;
   5+ 8E34              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E34              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E34              ;
   8+ 8E34              ;
   9+ 8E34              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E34              ;
  11+ 8E34              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E34              ;               _ hacen las entidades hacia abajo.
  13+ 8E34              ;
  14+ 8E34              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E34              ;
  16+ 8E34              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E34              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E34              ;
  19+ 8E34              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E34              ;           _ la bala.
  21+ 8E34              ;
  22+ 8E34              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E34              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E34              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E34              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E34              ;           _ en el momento de generarse la bala)).
  27+ 8E34
  28+ 8E34              Genera_disparo
  29+ 8E34
  30+ 8E34              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E34              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E34              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E34              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E34              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E34              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E34              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E34
  38+ 8E34              ; Exclusiones:
  39+ 8E34
  40+ 8E34 3A DF 88         ld a,(Vel_down)
  41+ 8E37 47               ld b,a
  42+ 8E38 3A 51 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E3B B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E3C D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E3D 3A FE 88         ld a,(Columnas)
  46+ 8E40 47               ld b,a
  47+ 8E41 3A C8 88         ld a,(Columns)
  48+ 8E44 B8               cp b
  49+ 8E45 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E46
  51+ 8E46              ; ----- ----- -----
  52+ 8E46
  53+ 8E46 3A F1 88         ld a,(Ctrl_0)
  54+ 8E49 CB 77            bit 6,a
  55+ 8E4B 20 06            jr nz,14F
  56+ 8E4D
  57+ 8E4D 3A CE 88         ld a,(Coordenada_y)
  58+ 8E50 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E52 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E53
  61+ 8E53 21 00 80     14 ld hl,Indice_disparo
  62+ 8E56 3A CF 88         ld a,(CTRL_DESPLZ)
  63+ 8E59 4F               ld c,a
  64+ 8E5A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E5C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E5C              ;                                            ""        ""       "f9", B="1"
  67+ 8E5C              ;                                            ""        ""       "fb", B="2"
  68+ 8E5C              ;                                            ""        ""       "fb", B="3"
  69+ 8E5C A7               and a
  70+ 8E5D 28 10            jr z,1F
  71+ 8E5F E6 01            and 1
  72+ 8E61 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E62
  74+ 8E62 79               ld a,c
  75+ 8E63 16 F9            ld d,$f9
  76+ 8E65 23           2 inc hl
  77+ 8E66 23               inc hl
  78+ 8E67 04               inc b
  79+ 8E68 BA               cp d
  80+ 8E69 28 04            jr z,1F
  81+ 8E6B 14               inc d
  82+ 8E6C 14               inc d
  83+ 8E6D 18 F6            jr 2B
  84+ 8E6F
  85+ 8E6F CD 81 8C     1 call Extrae_address
  86+ 8E72 E5               push hl
  87+ 8E73 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E75 DD 21 00 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E79
  90+ 8E79              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E79              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E79
  93+ 8E79 3A F1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E7C CB 77            bit 6,a
  95+ 8E7E 20 04            jr nz,19F
  96+ 8E80
  97+ 8E80 AF               xor a
  98+ 8E81 32 5A 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E84
 100+ 8E84 3A DB 88     19 ld a,(Cuad_objeto)
 101+ 8E87 FE 02            cp 2
 102+ 8E89 38 66            jr c,3F
 103+ 8E8B 28 64            jr z,3F
 104+ 8E8D
 105+ 8E8D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E8D
 107+ 8E8D E6 01            and 1
 108+ 8E8F 28 30            jr z,4F
 109+ 8E91
 110+ 8E91              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E91              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E91              ;
 113+ 8E91              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E91              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E91              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E91
 117+ 8E91 2A C9 88     	ld hl,(Posicion_actual)
 118+ 8E94
 119+ 8E94              ;   Amadeus o entidad ???.
 120+ 8E94
 121+ 8E94 3A F1 88         ld a,(Ctrl_0)
 122+ 8E97 CB 77            bit 6,a
 123+ 8E99 28 0A            jr z,8F
 124+ 8E9B
 125+ 8E9B              ; 	Dispara Amadeus.
 126+ 8E9B
 127+ 8E9B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E9D CD 29 96         call PreviousScan
 129+ 8EA0 CD 29 96         call PreviousScan
 130+ 8EA3
 131+ 8EA3              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EA3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EA3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EA3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EA3
 136+ 8EA3 18 11            jr 10F
 137+ 8EA5
 138+ 8EA5              ; 	Dispara Entidad.
 139+ 8EA5
 140+ 8EA5 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EA8              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EA8
 143+ 8EA8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EA8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EA8
 146+ 8EA8 C5               push bc
 147+ 8EA9 06 10            ld b,16
 148+ 8EAB CD 1A 96     9 call NextScan
 149+ 8EAE 10 FB            djnz 9B
 150+ 8EB0 C1               pop bc
 151+ 8EB1 CD 1B 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EB4 18 06            jr 17F
 153+ 8EB6
 154+ 8EB6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EB6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EB6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EB6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EB6
 159+ 8EB6 CD 1B 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EB9 CD 90 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EBC              ;                                                      ; _al generar el disparo.
 162+ 8EBC
 163+ 8EBC              ; 	LLegados a este punto tendremos:
 164+ 8EBC              ;
 165+ 8EBC              ;       Puntero_objeto_disparo en IY.
 166+ 8EBC              ;       Rutinas_de_impresion en IX.
 167+ 8EBC              ;       Puntero_de_impresion en HL.
 168+ 8EBC              ;       Impacto/Dirección en BC.
 169+ 8EBC
 170+ 8EBC CD 23 8F     17 call Almacena_disparo
 171+ 8EBF 18 52            jr 6F                                             ; RET.
 172+ 8EC1
 173+ 8EC1              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EC1              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EC1              ;
 176+ 8EC1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EC1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EC1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EC1
 180+ 8EC1 2A C9 88     4 ld hl,(Posicion_actual)
 181+ 8EC4
 182+ 8EC4              ;   Amadeus o entidad ???.
 183+ 8EC4
 184+ 8EC4 3A F1 88         ld a,(Ctrl_0)
 185+ 8EC7 CB 77            bit 6,a
 186+ 8EC9 28 0A            jr z,11F
 187+ 8ECB
 188+ 8ECB              ; 	Dispara Amadeus.
 189+ 8ECB
 190+ 8ECB 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ECD CD 29 96         call PreviousScan
 192+ 8ED0 CD 29 96         call PreviousScan
 193+ 8ED3
 194+ 8ED3              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8ED3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8ED3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8ED3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8ED3
 199+ 8ED3 18 11            jr 13F
 200+ 8ED5
 201+ 8ED5              ; 	Dispara Entidad.
 202+ 8ED5
 203+ 8ED5 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8ED8              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8ED8
 206+ 8ED8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8ED8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8ED8
 209+ 8ED8 C5               push bc
 210+ 8ED9 06 10            ld b,16
 211+ 8EDB CD 1A 96     12 call NextScan
 212+ 8EDE 10 FB            djnz 12B
 213+ 8EE0 C1               pop bc
 214+ 8EE1
 215+ 8EE1 CD 14 8F         call Ajusta_disparo_parte_derecha
 216+ 8EE4 18 06            jr 18F
 217+ 8EE6
 218+ 8EE6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EE6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EE6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EE6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EE6
 223+ 8EE6 CD 14 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EE9 CD 90 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EEC              ;                                                       ; _al generar el disparo.
 226+ 8EEC
 227+ 8EEC              ; LLegados a este punto tendremos:
 228+ 8EEC              ;
 229+ 8EEC              ;       Puntero_objeto_disparo en IY.
 230+ 8EEC              ;       Rutinas_de_impresion en IX.
 231+ 8EEC              ;       Puntero_de_impresion en HL.
 232+ 8EEC              ;       Impacto/Dirección en BC.
 233+ 8EEC
 234+ 8EEC CD 23 8F     18 call Almacena_disparo
 235+ 8EEF 18 22            jr 6F                                               ; RET.
 236+ 8EF1
 237+ 8EF1              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EF1
 239+ 8EF1 28 11        3 jr z,5F
 240+ 8EF3
 241+ 8EF3              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EF3              ;
 243+ 8EF3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EF3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EF3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EF3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EF3
 248+ 8EF3              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EF3              ;	   ""        ""       "f9", B="1"
 250+ 8EF3              ;	   ""        ""       "fb", B="2"
 251+ 8EF3              ; 	   ""        ""       "fb", B="3"
 252+ 8EF3
 253+ 8EF3 2A C9 88     	ld hl,(Posicion_actual)
 254+ 8EF6 CD 1A 96     	call NextScan
 255+ 8EF9
 256+ 8EF9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EF9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EF9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EF9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EF9
 261+ 8EF9 CD 1B 8F         call Ajusta_disparo_parte_izquierda
 262+ 8EFC
 263+ 8EFC              ; 	No se produce impacto. B="$80"
 264+ 8EFC              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EFC
 266+ 8EFC 01 80 80         ld bc,$8080
 267+ 8EFF
 268+ 8EFF              ; 	LLegados a este punto tendremos:
 269+ 8EFF              ;
 270+ 8EFF              ;       Puntero_objeto_disparo en IY.
 271+ 8EFF              ;       Rutinas_de_impresion en IX.
 272+ 8EFF              ;       Puntero_de_impresion en HL.
 273+ 8EFF              ;       Impacto/Dirección en BC.
 274+ 8EFF
 275+ 8EFF CD 23 8F         call Almacena_disparo
 276+ 8F02 18 0F            jr 6F                                           ; RET.
 277+ 8F04
 278+ 8F04              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F04              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F04              ;
 281+ 8F04              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F04              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F04              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F04              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F04
 286+ 8F04 2A C9 88     5 ld hl,(Posicion_actual)
 287+ 8F07 CD 1A 96     	call NextScan
 288+ 8F0A
 289+ 8F0A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F0A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F0A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F0A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F0A
 294+ 8F0A CD 14 8F         call Ajusta_disparo_parte_derecha
 295+ 8F0D
 296+ 8F0D              ; 	No se produce impacto. B="$80"
 297+ 8F0D              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F0D
 299+ 8F0D 01 80 80     15 ld bc,$8080
 300+ 8F10
 301+ 8F10              ; 	LLegados a este punto tendremos:
 302+ 8F10              ;
 303+ 8F10              ;       Puntero_objeto_disparo en IY.
 304+ 8F10              ;       Rutinas_de_impresion en IX.
 305+ 8F10              ;       Puntero_de_impresion en HL.
 306+ 8F10              ;       Impacto/Dirección en BC.
 307+ 8F10
 308+ 8F10 CD 23 8F         call Almacena_disparo
 309+ 8F13
 310+ 8F13 C9           6 ret
 311+ 8F14
 312+ 8F14              ; ----------------------------------------------------------------
 313+ 8F14              ;
 314+ 8F14              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F14              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F14              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F14
 318+ 8F14 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F15 FE 02            cp 2
 320+ 8F17 38 01            jr c,1F
 321+ 8F19 23               inc hl
 322+ 8F1A C9           1 ret
 323+ 8F1B
 324+ 8F1B 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F1C FE 01        	cp 1
 326+ 8F1E 20 01        	jr nz,1F
 327+ 8F20 2B           	dec hl
 328+ 8F21 2B           1 dec hl
 329+ 8F22 C9               ret
 330+ 8F23
 331+ 8F23              ; ----------------------------------------------------------------
 332+ 8F23              ;
 333+ 8F23              ;   25/02/23
 334+ 8F23              ;
 335+ 8F23              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F23              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F23              ;
 338+ 8F23              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F23              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F23
 341+ 8F23              Almacena_disparo
 342+ 8F23
 343+ 8F23 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F24 F1               pop af
 345+ 8F25 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F26
 347+ 8F26 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F27 E6 01            and 1
 349+ 8F29 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F2B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F2B              ; 	Dispara AMADEUS.
 352+ 8F2B
 353+ 8F2B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F2B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F2B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F2B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F2B
 358+ 8F2B C5               push bc
 359+ 8F2C 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F2F 2A 42 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F32 A7               and a
 362+ 8F33 ED 42            sbc hl,bc
 363+ 8F35 CC 02 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F38 C1               pop bc
 365+ 8F39 28 54            jr z,4F
 366+ 8F3B
 367+ 8F3B 2A 42 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F3E 23               inc hl
 369+ 8F3F 23               inc hl
 370+ 8F40 22 42 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F43              ;                                                   ; _ Disparo_(+1).
 372+ 8F43 18 18            jr 2F
 373+ 8F45
 374+ 8F45              ; Dispara una entidad.
 375+ 8F45
 376+ 8F45 C5           1 push bc
 377+ 8F46 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F49 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F4C A7               and a
 380+ 8F4D ED 42            sbc hl,bc
 381+ 8F4F CC FB 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F52 C1               pop bc
 383+ 8F53 28 3A            jr z,4F
 384+ 8F55
 385+ 8F55 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F58 23               inc hl
 387+ 8F59 23               inc hl
 388+ 8F5A 22 40 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F5D              ;                                                   ; _ Disparo_(+1).
 390+ 8F5D CD 81 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F60              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F60              ;
 393+ 8F60              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F60              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F60              ;                                                     Puntero_de_impresion en HL.
 396+ 8F60              ;                                                     Impacto/Dirección en BC.
 397+ 8F60
 398+ 8F60 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F61 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F62 23               inc hl                                          ; _ al siguiente.
 401+ 8F63 A7               and a
 402+ 8F64 20 C0            jr nz,3B
 403+ 8F66
 404+ 8F66 08               ex af,af
 405+ 8F67 ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F6B F9               ld sp,hl
 407+ 8F6C
 408+ 8F6C DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F6E F5               push af                                         ; Puntero de impresión.
 410+ 8F6F FD E5            push iy                                         ; Puntero objeto.
 411+ 8F71 C5               push bc                                         ; Control.
 412+ 8F72
 413+ 8F72 ED 7B 15 89      ld sp,(Stack)
 414+ 8F76
 415+ 8F76              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F76
 417+ 8F76 21 04 89     	ld hl,Ctrl_1
 418+ 8F79 CB C6        	set 0,(hl)
 419+ 8F7B
 420+ 8F7B DD E5        	push ix
 421+ 8F7D E1               pop hl
 422+ 8F7E F5               push af
 423+ 8F7F DD E1            pop ix
 424+ 8F81
 425+ 8F81 CD A0 7F     	call Guarda_foto_registros
 426+ 8F84
 427+ 8F84 21 04 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F87 CB 86        	res 0,(hl)
 429+ 8F89
 430+ 8F89              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F89              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F89
 433+ 8F89 CD 02 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F8C CD FB 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F8F
 436+ 8F8F C9           4 ret
 437+ 8F90
 438+ 8F90              ; ----------------------------------------------------------------
 439+ 8F90              ;
 440+ 8F90              ;   4/3/23
 441+ 8F90              ;
 442+ 8F90              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F90              ;   _ al generarse el disparo.
 444+ 8F90              ;
 445+ 8F90              ;       "$80" ..... No se produce colisión.
 446+ 8F90              ;       "$81" ..... Se produce colisión.
 447+ 8F90              ;
 448+ 8F90              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F90              ;         _ que forman el disparo.
 450+ 8F90
 451+ 8F90
 452+ 8F90              Comprueba_Colision
 453+ 8F90
 454+ 8F90              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F90
 456+ 8F90 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F92 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F93
 459+ 8F93 CD C9 8F         call Modifica_H_Velocidad_disparo
 460+ 8F96
 461+ 8F96 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F97 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F99 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F9B
 465+ 8F9B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F9D CD B9 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FA0
 468+ 8FA0 7B               ld a,e
 469+ 8FA1 E6 01            and 1
 470+ 8FA3 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FA5              ;                                                  ; _ para activar IMPACTO.
 472+ 8FA5 E1               pop hl
 473+ 8FA6 E5               push hl
 474+ 8FA7 CD 1A 96         call NextScan
 475+ 8FAA
 476+ 8FAA 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FAB FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FAD 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FAF              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FAF 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FB1 CD B9 8F         call Bucle_2
 482+ 8FB4
 483+ 8FB4 43           1 ld b,e
 484+ 8FB5 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FB6 FD E1            pop iy
 486+ 8FB8 C9               ret
 487+ 8FB9
 488+ 8FB9              ; ---------- ----------
 489+ 8FB9
 490+ 8FB9 06 02        Bucle_2 ld b,2
 491+ 8FBB FD 7E 00     2 ld a,(iy)
 492+ 8FBE A6               and (hl)
 493+ 8FBF 28 02            jr z,1F
 494+ 8FC1 1E 81            ld e,$81
 495+ 8FC3 23           1 inc hl
 496+ 8FC4 FD 23            inc iy
 497+ 8FC6 10 F3            djnz 2B
 498+ 8FC8 C9               ret
 499+ 8FC9
 500+ 8FC9              ; ---------- ----------
 501+ 8FC9              ;
 502+ 8FC9              ;   21/7/23
 503+ 8FC9
 504+ 8FC9              Modifica_H_Velocidad_disparo
 505+ 8FC9
 506+ 8FC9 3A 51 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FCC FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FCE D0               ret nc                                         ; _ incrementamos H.
 509+ 8FCF 24               inc h
 510+ 8FD0
 511+ 8FD0 C9               ret
 512+ 8FD1
 513+ 8FD1              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FD1              ;
 515+ 8FD1              ;   11/04/23
 516+ 8FD1              ;
 517+ 8FD1              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FD1              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FD1              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FD1              ;
 521+ 8FD1              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FD1
 523+ 8FD1              Compara_coordenadas_X
 524+ 8FD1
 525+ 8FD1              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FD1              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FD1
 528+ 8FD1              ; Preparamos registros:
 529+ 8FD1
 530+ 8FD1 21 CD 88         ld hl,Filas+6
 531+ 8FD4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FD5 23               inc hl
 533+ 8FD6 23               inc hl
 534+ 8FD7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FD8 43               ld b,e
 536+ 8FD9
 537+ 8FD9 21 DB 88         ld hl,Filas+20
 538+ 8FDC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FDD 21 4C 89         ld hl,Coordenadas_X_Entidad
 540+ 8FE0 CD FC 91         call Guarda_coordenadas_X
 541+ 8FE3
 542+ 8FE3              ; Preparamos registros:
 543+ 8FE3
 544+ 8FE3 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FE6 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FE7 23               inc hl
 547+ 8FE8 23               inc hl
 548+ 8FE9 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FEA 7B               ld a,e
 550+ 8FEB 08               ex af,af'
 551+ 8FEC 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FEF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FF0 21 49 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FF3 CD FC 91         call Guarda_coordenadas_X
 555+ 8FF6
 556+ 8FF6              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8FF6              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8FF6
 559+ 8FF6 04               inc b
 560+ 8FF7 05               dec b
 561+ 8FF8 28 04            jr z,1F
 562+ 8FFA 06 03            ld b,3
 563+ 8FFC 18 02            jr 2F
 564+ 8FFE 06 02        1 ld b,2
 565+ 9000 08           2 ex af,af'
 566+ 9001 3C               inc a
 567+ 9002 3D               dec a
 568+ 9003 28 04            jr z,5F
 569+ 9005 0E 03            ld c,3
 570+ 9007 18 02            jr 6F
 571+ 9009 0E 02        5 ld c,2
 572+ 900B 79           6 ld a,c
 573+ 900C 08               ex af,af'
 574+ 900D 11 4C 89         ld de,Coordenadas_X_Entidad
 575+ 9010 1A           4 ld a,(de)
 576+ 9011 21 49 89         ld hl,Coordenadas_X_Amadeus
 577+ 9014 BE           3 cp (hl)
 578+ 9015 28 0E            jr z,7F
 579+ 9017 23               inc hl
 580+ 9018 0D               dec c
 581+ 9019 20 F9            jr nz,3B
 582+ 901B 13               inc de
 583+ 901C 08               ex af,af'
 584+ 901D 4F               ld c,a
 585+ 901E 08               ex af,af'
 586+ 901F 10 EF            djnz 4B
 587+ 9021
 588+ 9021              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9021
 590+ 9021 CD 38 92     8 call Limpia_Coordenadas_X
 591+ 9024 C9               ret
 592+ 9025
 593+ 9025 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9027 32 E0 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 902A 21 44 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 902D CB D6            set 2,(hl)
 597+ 902F 18 F0            jr 8B
 598+ 9031
 599+ 9031              ; -----------------------------------------------------------------------
 600+ 9031              ;
 601+ 9031              ;   17/04/23
 602+ 9031              ;
 603+ 9031
 604+ 9031              Detecta_colision_nave_entidad
 605+ 9031
 606+ 9031              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9031
 608+ 9031 2A C9 88         ld hl,(Posicion_actual)
 609+ 9034 CD 75 95         call Calcula_puntero_de_impresion
 610+ 9037
 611+ 9037              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9037              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9037
 614+ 9037 DD E5            push ix
 615+ 9039 E1               pop hl
 616+ 903A E5               push hl
 617+ 903B
 618+ 903B              ; ----- ----- -----
 619+ 903B 1E 00            ld e,0                                         ; Indica impacto.
 620+ 903D 06 0A            ld b,10
 621+ 903F CD 6F 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9042 7B               ld a,e
 623+ 9043 FE 05            cp 5
 624+ 9045 38 0E            jr c,3F
 625+ 9047
 626+ 9047              ; LLegados a este punto:
 627+ 9047              ;
 628+ 9047              ;   HAY COLISIÓN !!!!!.
 629+ 9047              ;
 630+ 9047              ;   .db (Impacto) de Amadeus a "1".
 631+ 9047              ;   SET el bit3 de (Impacto2).
 632+ 9047              ;
 633+ 9047              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9047
 635+ 9047 21 B7 85         ld hl,Amadeus_db+25
 636+ 904A 36 01            ld (hl),1
 637+ 904C 21 44 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 904F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9051 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9053 18 18            jr 1F
 641+ 9055
 642+ 9055              ; -----
 643+ 9055
 644+ 9055 E1           3 pop hl
 645+ 9056 CD 1A 96         call NextScan
 646+ 9059 E5               push hl
 647+ 905A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 905B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 905D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 905F 30 0C            jr nc,1F
 651+ 9061              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9061 10 DC            djnz 2B
 653+ 9063
 654+ 9063              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9063
 656+ 9063              ; LLegados a este punto:
 657+ 9063              ;
 658+ 9063              ;   NO HAY COLISIÓN !!!!!.
 659+ 9063              ;
 660+ 9063              ;   .db (Impacto) de Amadeus a "0".
 661+ 9063              ;   RES el bit2 de (Impacto2).
 662+ 9063              ;
 663+ 9063              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9063              ;   Lo colocamos a "0".
 665+ 9063
 666+ 9063 21 44 89         ld hl,Impacto2
 667+ 9066 CB 96            res 2,(hl)
 668+ 9068 2A 45 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 906B 36 00            ld (hl),0
 670+ 906D
 671+ 906D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 906E C9               ret
 673+ 906F
 674+ 906F               ; ---------- ----------
 675+ 906F
 676+ 906F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9070 3A C8 88         ld a,(Columns)
 678+ 9073 47               ld b,a
 679+ 9074 FD 7E 00     2 ld a,(iy)
 680+ 9077 BE               cp (hl)
 681+ 9078 28 01            jr z,1F
 682+ 907A
 683+ 907A 1C               inc e
 684+ 907B
 685+ 907B 23           1 inc hl
 686+ 907C FD 23            inc iy
 687+ 907E 10 F4            djnz 2B
 688+ 9080 C1               pop bc
 689+ 9081 C9               ret
 690+ 9082
 691+ 9082              ; -------------------------------------------------------------------------------------------------------------
 692+ 9082              ;
 693+ 9082              ;   13/03/23
 694+ 9082              ;
 695+ 9082              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9082              ;
 697+ 9082              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9082
 699+ 9082 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9085 7E               ld a,(hl)
 701+ 9086 A7               and a
 702+ 9087 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9088
 704+ 9088 44               ld b,h
 705+ 9089 4D               ld c,l
 706+ 908A 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 908D E5               push hl
 708+ 908E A7               and a
 709+ 908F ED 42            sbc hl,bc
 710+ 9091 E5               push hl
 711+ 9092 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9093
 713+ 9093 E1               pop hl
 714+ 9094 54               ld d,h
 715+ 9095 5D               ld e,l
 716+ 9096 1B               dec de
 717+ 9097 ED B8            lddr                                                ; Limpiamos.
 718+ 9099
 719+ 9099 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 909C 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 909F
 722+ 909F C9               ret
 723+ 90A0
 724+ 90A0              ; -------------------------------------------------------------------------------------------------------------
 725+ 90A0              ;
 726+ 90A0              ;   18/07/23
 727+ 90A0              ;
 728+ 90A0
 729+ 90A0              Motor_de_disparos
 730+ 90A0
 731+ 90A0              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90A0
 733+ 90A0 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90A3 2A 42 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90A6
 736+ 90A6 CD 81 8C     2 call Extrae_address
 737+ 90A9 7E               ld a,(hl)
 738+ 90AA A7               and a
 739+ 90AB 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90AD
 741+ 90AD              ; ----- ----- ----- ----- ----- -----
 742+ 90AD
 743+ 90AD C5               push bc
 744+ 90AE CD 72 91         call foto_disparo_a_borrar
 745+ 90B1
 746+ 90B1              ; Existe colisión con este disparo???
 747+ 90B1
 748+ 90B1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90B2 7E               ld a,(hl)
 750+ 90B3 2B               dec hl
 751+ 90B4 E6 01            and 1
 752+ 90B6 28 1D            jr z,9F
 753+ 90B8
 754+ 90B8              ;   En este punto:
 755+ 90B8              ;
 756+ 90B8              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90B8              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90B8              ;   _con la entidad).
 759+ 90B8              ;
 760+ 90B8              ;   Disparo_2A defw 0                                ; Control.
 761+ 90B8              ;    defw 0                                          ; Puntero objeto.
 762+ 90B8              ;    defw 0                                          ; Puntero de impresión.
 763+ 90B8              ;    defw 0                                          ; Rutina de impresión.
 764+ 90B8
 765+ 90B8 E5               push hl
 766+ 90B9
 767+ 90B9 06 04            ld b,4
 768+ 90BB 23           19 inc hl
 769+ 90BC 10 FD            djnz 19B
 770+ 90BE
 771+ 90BE CD 81 8C         call Extrae_address
 772+ 90C1 CD E3 9C         call Genera_coordenadas_disparo
 773+ 90C4
 774+ 90C4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90C4
 776+ 90C4 21 47 89         ld hl,Coordenadas_disparo_certero
 777+ 90C7 72               ld (hl),d
 778+ 90C8 23               inc hl
 779+ 90C9 73               ld (hl),e
 780+ 90CA
 781+ 90CA              ; Elimino el disparo de la base de datos.
 782+ 90CA
 783+ 90CA E1               pop hl
 784+ 90CB CD F1 91         call Elimina_disparo_de_base_de_datos
 785+ 90CE 21 44 89         ld hl,Impacto2
 786+ 90D1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90D3
 788+ 90D3 18 06            jr 11F
 789+ 90D5
 790+ 90D5 CD 9B 91     9 call Mueve_disparo
 791+ 90D8 CD 72 91         call foto_disparo_a_borrar
 792+ 90DB
 793+ 90DB C1           11 pop bc
 794+ 90DC 18 04            jr 7F
 795+ 90DE
 796+ 90DE              ; ----- ----- ----- ----- ----- -----
 797+ 90DE
 798+ 90DE ED 42        1 sbc hl,bc
 799+ 90E0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90E2
 801+ 90E2 2A 42 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90E5 23               inc hl
 803+ 90E6 23               inc hl
 804+ 90E7 22 42 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90EA 18 BA            jr 2B
 806+ 90EC
 807+ 90EC CD 02 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90EF              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90EF
 810+ 90EF              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90EF
 812+ 90EF 01 8A 85         ld bc,Disparo_11
 813+ 90F2 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90F5
 815+ 90F5 CD 81 8C     5 call Extrae_address
 816+ 90F8 7E               ld a,(hl)
 817+ 90F9 A7               and a
 818+ 90FA 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 90FC
 820+ 90FC              ; ----- ----- ----- ----- ----- -----
 821+ 90FC
 822+ 90FC C5               push bc
 823+ 90FD CD 72 91         call foto_disparo_a_borrar
 824+ 9100
 825+ 9100              ; Existe colisión con este disparo???
 826+ 9100
 827+ 9100 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9101 7E               ld a,(hl)
 829+ 9102 2B               dec hl
 830+ 9103 E6 01            and 1
 831+ 9105 28 4D            jr z,10F
 832+ 9107
 833+ 9107              ;! La colisión se produce con Amadeus???
 834+ 9107              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9107
 836+ 9107 E5               push hl
 837+ 9108
 838+ 9108 06 04            ld b,4
 839+ 910A 23           16 inc hl
 840+ 910B 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 910D
 842+ 910D CD 81 8C         call Extrae_address
 843+ 9110 CD E3 9C         call Genera_coordenadas_disparo
 844+ 9113
 845+ 9113 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9114 FE 16            cp $16
 847+ 9116 38 2A            jr c,15F
 848+ 9118
 849+ 9118
 850+ 9118              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9118
 852+ 9118 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9119
 854+ 9119              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9119
 856+ 9119
 857+ 9119 2A 4F 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 911C
 859+ 911C              ; Coordenada X de Amadeus en D.
 860+ 911C
 861+ 911C 7D               ld a,l
 862+ 911D E6 1F            and $1F
 863+ 911F 57               ld d,a
 864+ 9120
 865+ 9120 21 A6 85         ld hl,Amadeus_db+8
 866+ 9123 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9124
 868+ 9124 21 49 89         ld hl,Coordenadas_X_Amadeus
 869+ 9127 CD FC 91         call Guarda_coordenadas_X
 870+ 912A
 871+ 912A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 912B
 873+ 912B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 912B
 875+ 912B 06 02            ld b,2
 876+ 912D C5           20 push bc
 877+ 912E
 878+ 912E 06 03            ld b,3
 879+ 9130 21 49 89         ld hl,Coordenadas_X_Amadeus
 880+ 9133 7E           18 ld a,(hl)
 881+ 9134 BA               cp d
 882+ 9135 20 04            jr nz,17F
 883+ 9137
 884+ 9137              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9137
 886+ 9137 C1               pop bc
 887+ 9138 E1               pop hl
 888+ 9139 18 0D            jr 14F
 889+ 913B
 890+ 913B 23           17 inc hl
 891+ 913C 10 F5            djnz 18B
 892+ 913E
 893+ 913E 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 913F
 895+ 913F C1               pop bc
 896+ 9140 10 EB            djnz 20B
 897+ 9142
 898+ 9142
 899+ 9142              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9142              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9142
 902+ 9142 E1           15 pop hl
 903+ 9143 23               inc hl
 904+ 9144 35               dec (hl)
 905+ 9145 2B               dec hl
 906+ 9146 18 0C            jr 10F
 907+ 9148
 908+ 9148              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9148              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9148
 911+ 9148 E5           14 push hl
 912+ 9149 CD F1 91         call Elimina_disparo_de_base_de_datos
 913+ 914C 21 44 89         ld hl,Impacto2
 914+ 914F CB CE            set 1,(hl)
 915+ 9151 E1               pop hl
 916+ 9152 18 06            jr 12F
 917+ 9154
 918+ 9154              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9154
 920+ 9154 CD 9B 91     10 call Mueve_disparo
 921+ 9157 CD 72 91         call foto_disparo_a_borrar
 922+ 915A C1           12 pop bc
 923+ 915B
 924+ 915B 18 04            jr 8F
 925+ 915D
 926+ 915D              ; ----- ----- ----- ----- ----- -----
 927+ 915D
 928+ 915D ED 42        4 sbc hl,bc
 929+ 915F 28 0A            jr z,6F
 930+ 9161
 931+ 9161 2A 40 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9164 23               inc hl
 933+ 9165 23               inc hl
 934+ 9166 22 40 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9169 18 8A            jr 5B
 936+ 916B
 937+ 916B CD FB 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 916E CD 38 92         call Limpia_Coordenadas_X
 939+ 9171 C9               ret
 940+ 9172
 941+ 9172              ; ------------------------------------------------------------------
 942+ 9172
 943+ 9172              foto_disparo_a_borrar
 944+ 9172
 945+ 9172 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9173 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9174 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9175
 949+ 9175 E5               push hl
 950+ 9176 23               inc hl
 951+ 9177 23               inc hl
 952+ 9178 ED 73 15 89      ld (Stack),sp
 953+ 917C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 917D FD E1            pop iy
 955+ 917F DD E1            pop ix
 956+ 9181 E1               pop hl
 957+ 9182 ED 7B 15 89      ld sp,(Stack)
 958+ 9186 3A 04 89         ld a,(Ctrl_1)
 959+ 9189 CB C7            set 0,a
 960+ 918B 32 04 89         ld (Ctrl_1),a
 961+ 918E CD A0 7F         call Guarda_foto_registros
 962+ 9191 3A 04 89         ld a,(Ctrl_1)
 963+ 9194 CB 87            res 0,a
 964+ 9196 32 04 89         ld (Ctrl_1),a
 965+ 9199 E1               pop hl
 966+ 919A C9               ret
 967+ 919B
 968+ 919B              ;---------------------------------------------------
 969+ 919B              ;
 970+ 919B              ;   18/07/23
 971+ 919B              ;
 972+ 919B
 973+ 919B              Mueve_disparo
 974+ 919B
 975+ 919B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 919B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 919B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 919B
 979+ 919B E5               push hl
 980+ 919C
 981+ 919C 7E               ld a,(hl)
 982+ 919D
 983+ 919D 06 04            ld b,4
 984+ 919F 23           1 inc hl
 985+ 91A0 10 FD            djnz 1B
 986+ 91A2
 987+ 91A2              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91A2
 989+ 91A2 CD 81 8C         call Extrae_address
 990+ 91A5
 991+ 91A5 E6 01            and 1
 992+ 91A7 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91A9
 994+ 91A9              ; Disparo hacia arriba, (Amadeus).
 995+ 91A9
 996+ 91A9              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91A9              ; _ de la dificultad.
 998+ 91A9
 999+ 91A9 CD 29 96         call PreviousScan
1000+ 91AC CD 29 96         call PreviousScan
1001+ 91AF CD 29 96         call PreviousScan
1002+ 91B2 CD 29 96         call PreviousScan
1003+ 91B5
1004+ 91B5              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91B5
1006+ 91B5 7C               ld a,h
1007+ 91B6 FE 40            cp $40
1008+ 91B8 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91BA
1010+ 91BA              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91BA
1012+ 91BA EB               ex de,hl
1013+ 91BB 06 04            ld b,4
1014+ 91BD 2B           6 dec hl
1015+ 91BE 10 FD            djnz 6B
1016+ 91C0
1017+ 91C0 CD F1 91         call Elimina_disparo_de_base_de_datos
1018+ 91C3 E1               pop hl
1019+ 91C4 18 10            jr 7F
1020+ 91C6
1021+ 91C6              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91C6              ; HL contiene el puntero de impresión del disparo.
1023+ 91C6              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91C6
1025+ 91C6 D5           3 push de
1026+ 91C7 C5               push bc
1027+ 91C8
1028+ 91C8 CD 90 8F         call Comprueba_Colision
1029+ 91CB
1030+ 91CB              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91CB
1032+ 91CB 78               ld a,b
1033+ 91CC
1034+ 91CC C1               pop bc
1035+ 91CD D1               pop de
1036+ 91CE
1037+ 91CE EB               ex de,hl
1038+ 91CF
1039+ 91CF 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91D0 23               inc hl                                      ; _ movimiento.
1041+ 91D1 72               ld (hl),d
1042+ 91D2
1043+ 91D2 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91D3
1045+ 91D3 23               inc hl                                      ; _ en curso.
1046+ 91D4 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91D5 2B               dec hl
1048+ 91D6
1049+ 91D6 C9           7 ret
1050+ 91D7
1051+ 91D7              ; Disparo hacia abajo, (Entidad).
1052+ 91D7
1053+ 91D7 3A 51 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91DA 47               ld b,a
1055+ 91DB
1056+ 91DB CD 1A 96     4 call NextScan
1057+ 91DE 10 FB            djnz 4B
1058+ 91E0
1059+ 91E0              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91E0
1061+ 91E0 7C               ld a,h
1062+ 91E1 FE 58            cp $58
1063+ 91E3 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91E5
1065+ 91E5 EB               ex de,hl
1066+ 91E6 06 04            ld b,4
1067+ 91E8 2B           5 dec hl
1068+ 91E9 10 FD            djnz 5B
1069+ 91EB
1070+ 91EB CD F1 91         call Elimina_disparo_de_base_de_datos
1071+ 91EE E1               pop hl
1072+ 91EF 18 E5            jr 7B
1073+ 91F1
1074+ 91F1              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91F1
1076+ 91F1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91F4 AF               xor a
1078+ 91F5 77               ld (hl),a
1079+ 91F6 54               ld d,h
1080+ 91F7 5D               ld e,l
1081+ 91F8 13               inc de
1082+ 91F9 ED B0            ldir
1083+ 91FB C9               ret
1084+ 91FC
1085+ 91FC              ; -----------------------------------------------------------------
1086+ 91FC              ;
1087+ 91FC              ;   19/7/23
1088+ 91FC              ;
1089+ 91FC              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 91FC              ;
1091+ 91FC              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 91FC              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 91FC              ;
1094+ 91FC              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 91FC              ;
1096+ 91FC              ;   INPUTS:
1097+ 91FC              ;
1098+ 91FC              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 91FC              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 91FC
1101+ 91FC              ;   MODIFICA: A, HL, BC y DE.
1102+ 91FC
1103+ 91FC              Guarda_coordenadas_X
1104+ 91FC
1105+ 91FC 7B               ld a,e
1106+ 91FD A7               and a
1107+ 91FE 20 04            jr nz,1F
1108+ 9200
1109+ 9200 06 02            ld b,2
1110+ 9202 18 02            jr 2F
1111+ 9204
1112+ 9204 06 03        1 ld b,3
1113+ 9206 72           2 ld (hl),d
1114+ 9207 23               inc hl
1115+ 9208 14               inc d
1116+ 9209 10 FB            djnz 2B
1117+ 920B
1118+ 920B C9               ret
1119+ 920C
1120+ 920C              ; -----------------------------------------------------------------
1121+ 920C              ;
1122+ 920C              ;   12/04/23
1123+ 920C              ;
1124+ 920C
1125+ 920C 3A 44 89     Selector_de_impactos ld a,(Impacto2)
1126+ 920F A7               and a
1127+ 9210 C8               ret z
1128+ 9211
1129+ 9211 FE 04            cp 4
1130+ 9213 20 09            jr nz,1F
1131+ 9215
1132+ 9215
1133+ 9215              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9215
1135+ 9215 CD 31 90         call Detecta_colision_nave_entidad
1136+ 9218
1137+ 9218 21 44 89         ld hl,Impacto2
1138+ 921B CB 5E            bit 3,(hl)
1139+ 921D C0               ret nz                                               ; Existe colisión, RET.
1140+ 921E
1141+ 921E              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 921E              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 921E
1144+ 921E 21 44 89     1 ld hl,Impacto2
1145+ 9221 CB 4E            bit 1,(hl)
1146+ 9223 28 07            jr z,2F
1147+ 9225
1148+ 9225 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9228 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 922A 18 0B            jr 3F
1151+ 922C
1152+ 922C 21 44 89     2 ld hl,Impacto2
1153+ 922F CB 46            bit 0,(hl)
1154+ 9231 C8               ret z
1155+ 9232
1156+ 9232              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9232
1158+ 9232 21 04 89         ld hl,Ctrl_1
1159+ 9235 CB D6            set 2,(hl)
1160+ 9237
1161+ 9237 C9           3 ret
1162+ 9238
1163+ 9238              ; -----------------------------------------------------------------
1164+ 9238              ;
1165+ 9238              ;   19/7/23
1166+ 9238              ;
1167+ 9238              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9238
1169+ 9238 AF           Limpia_Coordenadas_X xor a
1170+ 9239 06 06            ld b,6
1171+ 923B 21 49 89         ld hl,Coordenadas_X_Amadeus
1172+ 923E 77           1 ld (hl),a
1173+ 923F 23               inc hl
1174+ 9240 10 FC            djnz 1B
1175+ 9242 C9               ret
1176+ 9243
1177+ 9243              ; -----------------------------------------------------------------
1178+ 9243              ;
1179+ 9243              ;   25/04/23
1180+ 9243              ;
1181+ 9243
1182+ 9243              Determina_resultado_comparativa
1183+ 9243
1184+ 9243              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9243              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9243              ;
1187+ 9243              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9243              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9243              ;
1190+ 9243              ;   SBC HL,DE
1191+ 9243
1192+ 9243              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9243              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9243
1195+ 9243              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9243              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9243
1198+ 9243
1199+ 9243 3A DB 88         ld a,(Cuad_objeto)
1200+ 9246 FE 02            cp 2
1201+ 9248 28 26            jr z,2F
1202+ 924A 38 24            jr c,2F
1203+ 924C
1204+ 924C              ; Cuadrantes 3º y 4º
1205+ 924C
1206+ 924C E6 01            and 1
1207+ 924E 28 10            jr z,4F
1208+ 9250
1209+ 9250              ; Cuadrante 3º
1210+ 9250
1211+ 9250 7C               ld a,h
1212+ 9251 06 00            ld b,0
1213+ 9253
1214+ 9253 CD DE 92         call Compara_cositas_H3
1215+ 9256
1216+ 9256 04               inc b
1217+ 9257 05               dec b
1218+ 9258 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9259
1220+ 9259 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 925A 06 00            ld b,0
1222+ 925C
1223+ 925C CD F0 92         call Compara_cositas_L3
1224+ 925F C9               ret
1225+ 9260
1226+ 9260              ; Cuadrante 4º
1227+ 9260
1228+ 9260 7C           4 ld a,h
1229+ 9261 06 00            ld b,0
1230+ 9263
1231+ 9263 CD 02 93         call Compara_cositas_H4
1232+ 9266
1233+ 9266 04               inc b
1234+ 9267 05               dec b
1235+ 9268 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9269
1237+ 9269 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 926A 06 00            ld b,0
1239+ 926C
1240+ 926C CD 18 93         call Compara_cositas_L4
1241+ 926F C9               ret
1242+ 9270
1243+ 9270              ; Cuadrantes 1º y 2º.
1244+ 9270
1245+ 9270 28 10        2 jr z,3F
1246+ 9272
1247+ 9272              ; 1er Cuadrante
1248+ 9272
1249+ 9272 7C               ld a,h
1250+ 9273 06 00            ld b,0
1251+ 9275
1252+ 9275 CD B6 92         call Compara_cositas_H1
1253+ 9278
1254+ 9278 04               inc b
1255+ 9279 05               dec b
1256+ 927A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 927B
1258+ 927B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 927C 06 00            ld b,0
1260+ 927E
1261+ 927E CD CC 92         call Compara_cositas_L1
1262+ 9281 C9               ret
1263+ 9282
1264+ 9282
1265+ 9282              ; 2º Cuadrante
1266+ 9282
1267+ 9282 7C           3 ld a,h
1268+ 9283 06 00            ld b,0
1269+ 9285
1270+ 9285 CD 92 92         call Compara_cositas_H2
1271+ 9288
1272+ 9288 04               inc b
1273+ 9289 05               dec b
1274+ 928A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 928B
1276+ 928B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 928C 06 00            ld b,0
1278+ 928E
1279+ 928E CD A4 92         call Compara_cositas_L2
1280+ 9291 C9               ret
1281+ 9292
1282+ 9292 A7           Compara_cositas_H2 and a
1283+ 9293 28 0D            jr z,1F
1284+ 9295              ;    cp $fd
1285+ 9295              ;    jr z,1F
1286+ 9295              ;    cp $fe
1287+ 9295              ;    jr z,1F
1288+ 9295 FE FF            cp $ff
1289+ 9297 28 09            jr z,1F
1290+ 9299 FE 01            cp $01
1291+ 929B 28 05            jr z,1F
1292+ 929D FE 02            cp $02
1293+ 929F 28 01            jr z,1F
1294+ 92A1 C0               ret nz
1295+ 92A2 04           1 inc b
1296+ 92A3 C9               ret
1297+ 92A4
1298+ 92A4 A7           Compara_cositas_L2 and a
1299+ 92A5 28 0D            jr z,1F
1300+ 92A7              ;    cp $fd
1301+ 92A7              ;    jr z,1F
1302+ 92A7 FE FE            cp $fe
1303+ 92A9 28 09            jr z,1F
1304+ 92AB FE FF            cp $ff
1305+ 92AD 28 05            jr z,1F
1306+ 92AF FE 01            cp $01
1307+ 92B1 28 01            jr z,1F
1308+ 92B3              ;    cp $02
1309+ 92B3              ;    jr z,1F
1310+ 92B3 C0               ret nz
1311+ 92B4 04           1 inc b
1312+ 92B5 C9               ret
1313+ 92B6
1314+ 92B6 A7           Compara_cositas_H1 and a
1315+ 92B7 28 11            jr z,1F
1316+ 92B9              ;    cp $fd
1317+ 92B9              ;    jr z,1F
1318+ 92B9              ;    cp $fe
1319+ 92B9              ;    jr z,1F
1320+ 92B9 FE FF            cp $ff
1321+ 92BB 28 0D            jr z,1F
1322+ 92BD FE 01            cp $01
1323+ 92BF 28 09            jr z,1F
1324+ 92C1 FE 02            cp $02
1325+ 92C3 28 05            jr z,1F
1326+ 92C5 FE 03            cp $03
1327+ 92C7 28 01            jr z,1F
1328+ 92C9 C0               ret nz
1329+ 92CA 04           1 inc b
1330+ 92CB C9               ret
1331+ 92CC
1332+ 92CC A7           Compara_cositas_L1 and a
1333+ 92CD 28 0D            jr z,1F
1334+ 92CF              ;    cp $fd
1335+ 92CF              ;    jr z,1F
1336+ 92CF              ;    cp $fe
1337+ 92CF              ;    jr z,1F
1338+ 92CF              ;    cp $ff
1339+ 92CF              ;    jr z,1F
1340+ 92CF FE 01            cp $01
1341+ 92D1 28 09            jr z,1F
1342+ 92D3 FE 02            cp $02
1343+ 92D5 28 05            jr z,1F
1344+ 92D7 FE 03            cp $03
1345+ 92D9 28 01            jr z,1F
1346+ 92DB C0               ret nz
1347+ 92DC 04           1 inc b
1348+ 92DD C9               ret
1349+ 92DE
1350+ 92DE A7           Compara_cositas_H3 and a
1351+ 92DF 28 0D            jr z,1F
1352+ 92E1              ;    cp $fd
1353+ 92E1              ;    jr z,1F
1354+ 92E1 FE FE            cp $fe
1355+ 92E3 28 09            jr z,1F
1356+ 92E5 FE FF            cp $ff
1357+ 92E7 28 05            jr z,1F
1358+ 92E9 FE 01            cp $01
1359+ 92EB 28 01            jr z,1F
1360+ 92ED              ;    cp $02
1361+ 92ED              ;    jr z,1F
1362+ 92ED              ;    cp $03
1363+ 92ED              ;    jr z,1F
1364+ 92ED C0               ret nz
1365+ 92EE 04           1 inc b
1366+ 92EF C9               ret
1367+ 92F0
1368+ 92F0 A7           Compara_cositas_L3 and a
1369+ 92F1 28 0D            jr z,1F
1370+ 92F3              ;    cp $fd
1371+ 92F3              ;    jr z,1F
1372+ 92F3              ;    cp $fe
1373+ 92F3              ;    jr z,1F
1374+ 92F3              ;    cp $ff
1375+ 92F3              ;    jr z,1F
1376+ 92F3 FE 01            cp $01
1377+ 92F5 28 09            jr z,1F
1378+ 92F7 FE 02            cp $02
1379+ 92F9 28 05            jr z,1F
1380+ 92FB FE 03            cp $03
1381+ 92FD 28 01            jr z,1F
1382+ 92FF C0               ret nz
1383+ 9300 04           1 inc b
1384+ 9301 C9               ret
1385+ 9302
1386+ 9302 A7           Compara_cositas_H4 and a
1387+ 9303 28 11            jr z,1F
1388+ 9305 FE FD            cp $fd
1389+ 9307 28 0D            jr z,1F
1390+ 9309 FE FE            cp $fe
1391+ 930B 28 09            jr z,1F
1392+ 930D FE FF            cp $ff
1393+ 930F 28 05            jr z,1F
1394+ 9311 FE 01            cp $01
1395+ 9313 28 01            jr z,1F
1396+ 9315              ;    cp $02
1397+ 9315              ;    jr z,1F
1398+ 9315              ;    cp $03
1399+ 9315              ;    jr z,1F
1400+ 9315 C0               ret nz
1401+ 9316 04           1 inc b
1402+ 9317 C9               ret
1403+ 9318
1404+ 9318 A7           Compara_cositas_L4 and a
1405+ 9319 28 0D            jr z,1F
1406+ 931B              ;    cp $fd
1407+ 931B              ;    jr z,1F
1408+ 931B FE FE            cp $fe
1409+ 931D 28 09            jr z,1F
1410+ 931F FE FF            cp $ff
1411+ 9321 28 05            jr z,1F
1412+ 9323 FE 01            cp $01
1413+ 9325 28 01            jr z,1F
1414+ 9327              ;    cp $02
1415+ 9327              ;    jr z,1F
1416+ 9327              ;    cp $03
1417+ 9327              ;    jr z,1F
1418+ 9327 C0               ret nz
1419+ 9328 04           1 inc b
1420+ 9329 C9               ret
# file closed: Disparo.asm
1638  932A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 932A              ; ******************************************************************************************************************************************************************************************
   2+ 932A              ;
   3+ 932A              ; 26/06/23
   4+ 932A              ;
   5+ 932A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 932A
   7+ 932A CD 0E 96     Draw call Prepara_draw
   8+ 932D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 932E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 932F 28 05        	jr z,2F
  11+ 9331
  12+ 9331 3A DB 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9334 18 0C        	jr 1F
  14+ 9336
  15+ 9336 2A D9 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9339 22 C9 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 933C CD CB 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 933F              ;													; _la esquina superior izquierda de la pantalla.
  19+ 933F CD 6E 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9342
  21+ 9342 3A F1 88     1 ld a,(Ctrl_0)
  22+ 9345 CB 6F        	bit 5,a
  23+ 9347 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9349
  25+ 9349 CD 61 93     	call Comprueba_limite_horizontal
  26+ 934C CD F1 93     	call Comprueba_limite_vertical
  27+ 934F
  28+ 934F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 934F              ; -----------------------
  30+ 934F              ; -----------------------
  31+ 934F              ; -----------------------
  32+ 934F
  33+ 934F CD 3E 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9352 CD 75 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9355 CD D4 95     	call Define_rutina_de_impresion
  36+ 9358
  37+ 9358 3A F1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 935B CB AF        	res 5,a											; _a ser de utilidad.
  39+ 935D 32 F1 88     	ld (Ctrl_0),a
  40+ 9360
  41+ 9360 C9           	ret
  42+ 9361
  43+ 9361              ; *******************************************************************************************************************************************************************************************
  44+ 9361              ;	21/01/23
  45+ 9361              ;
  46+ 9361              ; 	Comprueba_limite_horizontal.
  47+ 9361              ;
  48+ 9361              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9361              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9361              ;
  51+ 9361              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9361              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9361              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9361              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9361
  56+ 9361
  57+ 9361
  58+ 9361 3A F1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9364 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9366 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9368 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 936A 32 F1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 936D 18 09            jr 6F
  64+ 936F CB 5F        1 bit 3,a
  65+ 9371 28 0A            jr z,2F
  66+ 9373 E6 F7            and $f7
  67+ 9375 32 F1 88         ld (Ctrl_0),a
  68+ 9378 CD CB 94     6 call Inicializacion
  69+ 937B 18 5B            jr 5F
  70+ 937D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 937E
  72+ 937E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 937E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 937E
  75+ 937E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 937F 2A FF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9382 CD 2D 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9385 67           	ld h,a
  79+ 9386 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9387 CD 2D 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 938A 67           	ld h,a
  82+ 938B A7           	and a
  83+ 938C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 938E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 938F 3A DB 88     	ld a,(Cuad_objeto)
  86+ 9392 FE 02        	cp 2
  87+ 9394 38 1E        	jr c,3F
  88+ 9396 28 1C        	jr z,3F
  89+ 9398 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9399 28 23            jr z,7F
  91+ 939B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 939D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 939F E1           	pop hl
  94+ 93A0
  95+ 93A0              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93A0              ; _para indicar con E="2" en caso necesario.
  97+ 93A0
  98+ 93A0 E5               push hl
  99+ 93A1 C5               push bc
 100+ 93A2 CD 2D 99     	call calcula_tercio
 101+ 93A5 FE 01        	cp 1
 102+ 93A7 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93A9 CD D9 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93AC 28 26            jr z,9F
 105+ 93AE 38 24            jr c,9F
 106+ 93B0 1E 00        11 ld e,0
 107+ 93B2 18 22            jr 8F
 108+ 93B4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93B5 28 07        	jr z, 7F
 110+ 93B7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93B9 1E 00         	ld e,0
 112+ 93BB E1           	pop hl
 113+ 93BC 18 04        	jr 4F
 114+ 93BE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93C0 18 15            jr 10F
 116+ 93C2
 117+ 93C2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93C2              ; _para indicar con E="2" en caso necesario.
 119+ 93C2
 120+ 93C2 E5           4 push hl
 121+ 93C3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93C4 CD 2D 99     	call calcula_tercio
 123+ 93C7 FE 01        	cp 1
 124+ 93C9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93CB CD D9 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93CE 28 04            jr z,9F
 127+ 93D0 30 02            jr nc,9F
 128+ 93D2 18 02        	jr 8F
 129+ 93D4 1E 02        9 ld e,2
 130+ 93D6 C1           8 pop bc
 131+ 93D7 E1           10 pop hl
 132+ 93D8 C9           5 ret
 133+ 93D9
 134+ 93D9              ; --------------------
 135+ 93D9              ;
 136+ 93D9              ; 25/08/22
 137+ 93D9
 138+ 93D9 CD 2D 99     Comprueba_centro call calcula_tercio
 139+ 93DC 67               ld h,a
 140+ 93DD 08           	ex af,af
 141+ 93DE FE 02        	cp 2
 142+ 93E0 38 07        	jr c,1F
 143+ 93E2 28 05        	jr z,1F
 144+ 93E4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93E7 18 03        	jr 2F
 146+ 93E9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93EC 08           2 ex af,af
 148+ 93ED A7               and a
 149+ 93EE ED 42            sbc hl,bc
 150+ 93F0 C9               ret
 151+ 93F1
 152+ 93F1              ; *********************************************************************************************************************************************************************************************
 153+ 93F1              ;
 154+ 93F1              ;   16/8/22
 155+ 93F1              ;
 156+ 93F1              ;	Comprueba_limite_vertical
 157+ 93F1              ;
 158+ 93F1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93F1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93F1              ;
 161+ 93F1
 162+ 93F1 2A C9 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93F4 7D           	ld a,l
 164+ 93F5 E6 1F        	and $1F
 165+ 93F7 57           	ld d,a
 166+ 93F8 3A 01 89     	ld a,(Limite_vertical)
 167+ 93FB BA           	cp d 											; Límite - Posición.
 168+ 93FC 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 93FD 3A DB 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9400 CB 47        	bit 0,a
 171+ 9402 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9404
 173+ 9404              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9404
 175+ 9404 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9405 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9407
 178+ 9407              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9407              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9407
 181+ 9407 3A CD 88         ld a,(Coordenada_X)
 182+ 940A 16 0F            ld d,Centro_izquierda
 183+ 940C A7               and a
 184+ 940D 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 940E 28 1E            jr z,3F
 186+ 9410 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9412              ;                                                    ; _salimos sin modificar nada.
 188+ 9412 18 0E            jr 2F
 189+ 9414 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9415 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9417
 192+ 9417              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9417              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9417
 195+ 9417 3A CD 88         ld a,(Coordenada_X)
 196+ 941A 16 10            ld d,Centro_derecha
 197+ 941C A7               and a
 198+ 941D 92               sub d
 199+ 941E 28 0E            jr z,3F
 200+ 9420 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9422              ;                                                    ; _salimos sin modificar nada.
 202+ 9422 CB 43        2 bit 0,e
 203+ 9424 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9426 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9427 CD BB 94         call Modificaccionne
 206+ 942A C1           	pop bc
 207+ 942B CD CB 94         call Inicializacion
 208+ 942E C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 942F
 210+ 942F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 942F
 212+ 942F C5           4 push bc
 213+ 9430 01 C8 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9433 0A           	ld a,(bc)
 215+ 9434 3D           	dec a
 216+ 9435 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9436 7D           	ld a,l
 218+ 9437 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9438 CB 47        	bit 0,a
 220+ 943A 28 03        	jr z,5F
 221+ 943C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 943D 18 2E        	jr 7F
 223+ 943F
 224+ 943F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 943F
 226+ 943F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9440 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9441 3A F1 88     	ld a,(Ctrl_0)
 229+ 9444 CB 4F        	bit 1,a
 230+ 9446 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9448 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9449
 233+ 9449              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9449
 235+ 9449 1C               inc e
 236+ 944A 1D               dec e
 237+ 944B 20 07            jr nz,12F
 238+ 944D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 944E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 944F 22 C9 88     	ld (Posicion_actual),hl
 241+ 9452 18 44        13 jr 9F
 242+ 9454 CB 43        12 bit 0,e
 243+ 9456 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9458              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9458 C1           	pop bc
 246+ 9459 18 D3        	jr 3B
 247+ 945B 80           14 add b
 248+ 945C 6F               ld l,a
 249+ 945D 22 C9 88     	ld (Posicion_actual),hl
 250+ 9460 CD BB 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9463 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9465 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9467 32 F1 88         ld (Ctrl_0),a
 254+ 946A F1           	pop af
 255+ 946B 18 2B        	jr 9F
 256+ 946D
 257+ 946D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 946D
 259+ 946D F5           7 push af
 260+ 946E 3A F1 88     	ld a,(Ctrl_0)
 261+ 9471 CB 47        	bit 0,a
 262+ 9473 20 1D        	jr nz,8F
 263+ 9475 F1           	pop af
 264+ 9476
 265+ 9476              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9476
 267+ 9476 1C           	inc e
 268+ 9477 1D               dec e
 269+ 9478 20 07            jr nz,10F
 270+ 947A 90           	sub b
 271+ 947B 6F               ld l,a
 272+ 947C 22 C9 88     	ld (Posicion_actual),hl
 273+ 947F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9481              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9481 CB 43        10 bit 0,e
 276+ 9483 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9485              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9485 C1           	pop bc
 279+ 9486 18 A6        	jr 3B
 280+ 9488 90           16 sub b
 281+ 9489 6F               ld l,a
 282+ 948A 22 C9 88     	ld (Posicion_actual),hl
 283+ 948D CD BB 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9490 18 06            jr 9F
 285+ 9492 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9494 32 F1 88         ld (Ctrl_0),a
 287+ 9497 F1           	pop af
 288+ 9498 C1           9 pop bc
 289+ 9499 1E 00        	ld e,0
 290+ 949B CD CB 94         call Inicializacion
 291+ 949E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 949F 08           	ex af,af
 293+ 94A0 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94A1 18 8B            jr 3B
 295+ 94A3
 296+ 94A3              ; --------------------
 297+ 94A3
 298+ 94A3 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94A5 CD 29 96     1 call PreviousScan
 300+ 94A8 10 FB            djnz 1B
 301+ 94AA 22 C9 88     	ld (Posicion_actual),hl
 302+ 94AD AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94AE C9           	ret
 304+ 94AF
 305+ 94AF              ; --------------------
 306+ 94AF
 307+ 94AF 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94B1 CD 1A 96     1 call NextScan
 309+ 94B4 10 FB            djnz 1B
 310+ 94B6 22 C9 88     	ld (Posicion_actual),hl
 311+ 94B9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94BA C9           	ret
 313+ 94BB
 314+ 94BB              ; --------------------
 315+ 94BB              ;
 316+ 94BB              ;	22/01/23
 317+ 94BB              ;
 318+ 94BB              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94BB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94BB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94BB
 322+ 94BB
 323+ 94BB              Modificaccionne
 324+ 94BB
 325+ 94BB 3A DB 88     	ld a,(Cuad_objeto)
 326+ 94BE FE 02        	cp 2
 327+ 94C0 CC A3 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94C3 DC A3 94         call c,Modifica_Pos_actual
 329+ 94C6 C8           	ret z
 330+ 94C7 CD AF 94         call Modifica_Pos_actual2
 331+ 94CA C9               ret
 332+ 94CB
 333+ 94CB              ; *************************************************************************************************************************************************************************************************
 334+ 94CB              ;
 335+ 94CB              ;	13/8/22
 336+ 94CB              ;
 337+ 94CB              ;	Inicializacion
 338+ 94CB              ;
 339+ 94CB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94CB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94CB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94CB              ;
 343+ 94CB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94CB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94CB              ;	_ desaparece/aparece.
 346+ 94CB
 347+ 94CB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94CB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94CB              ;
 350+ 94CB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94CB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94CB              ; 		   [E] ="0"
 353+ 94CB
 354+ 94CB              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94CB
 356+ 94CB CD 2D 99     Inicializacion call calcula_tercio
 357+ 94CE 28 36        	jr z,primit
 358+ 94D0 E6 02        	and 2
 359+ 94D2 20 07        	jr nz,segmit
 360+ 94D4 7D           	ld a,l
 361+ 94D5 FE 7F        	cp $7f
 362+ 94D7 38 2D        	jr c,primit
 363+ 94D9 28 2B        	jr z,primit
 364+ 94DB CD 38 95     segmit call column
 365+ 94DE 38 13        	jr c,tercuad
 366+ 94E0 3E 04        cuarcuad ld a,4
 367+ 94E2 32 DB 88     	ld (Cuad_objeto),a
 368+ 94E5 21 20 48     	ld hl,$4820
 369+ 94E8 22 FF 88     	ld (Limite_horizontal),hl
 370+ 94EB 21 01 89     	ld hl,Limite_vertical
 371+ 94EE 36 0D        	ld (hl),$0d
 372+ 94F0 08           	ex af,af
 373+ 94F1 18 3C        	jr 1F
 374+ 94F3              tercuad
 375+ 94F3 3E 03        	ld a,3
 376+ 94F5 32 DB 88     	ld (Cuad_objeto),a
 377+ 94F8 21 20 48     	ld hl,$4820
 378+ 94FB 22 FF 88     	ld (Limite_horizontal),hl
 379+ 94FE 21 01 89     	ld hl,Limite_vertical
 380+ 9501 36 12        	ld (hl),$12
 381+ 9503 08           	ex af,af
 382+ 9504 18 29        	jr 1F
 383+ 9506 CD 38 95     primit call column
 384+ 9509 38 13        	jr c, primcuad
 385+ 950B              segcuad
 386+ 950B 3E 02        	ld a,2
 387+ 950D 32 DB 88     	ld (Cuad_objeto),a
 388+ 9510 21 C0 4F     	ld hl,$4fc0
 389+ 9513 22 FF 88     	ld (Limite_horizontal),hl
 390+ 9516 21 01 89     	ld hl,Limite_vertical
 391+ 9519 36 0D        	ld (hl),$0d
 392+ 951B 08           	ex af,af
 393+ 951C 18 11        	jr 1F
 394+ 951E              primcuad
 395+ 951E 3E 01        	ld a,1
 396+ 9520 32 DB 88     	ld (Cuad_objeto),a
 397+ 9523 21 C0 4F     	ld hl,$4fc0
 398+ 9526 22 FF 88     	ld (Limite_horizontal),hl
 399+ 9529 21 01 89     	ld hl,Limite_vertical
 400+ 952C 36 12        	ld (hl),$12
 401+ 952E 08           	ex af,af
 402+ 952F CD B8 9C     1 call Genera_coordenadas
 403+ 9532 21 F1 88     	ld hl,Ctrl_0
 404+ 9535 CB EE        	set 5,(hl)
 405+ 9537 C9           	ret
 406+ 9538
 407+ 9538              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9538
 409+ 9538              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9538              ;
 411+ 9538              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9538
 413+ 9538 7D           column ld a,l
 414+ 9539 E6 1F        	and $1f
 415+ 953B FE 10         	cp $10
 416+ 953D C9            	ret
 417+ 953E
 418+ 953E              ; --------------------------------------------------------------------------------------------------------------------
 419+ 953E              ;
 420+ 953E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 953E              ;
 422+ 953E              ; 14/12/22
 423+ 953E              ;
 424+ 953E              ;	Modifica: A y BC.
 425+ 953E
 426+ 953E 3A DB 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9541 E6 01        	and 1
 428+ 9543 28 17        	jr z,1F
 429+ 9545
 430+ 9545              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9545
 432+ 9545 3A CD 88     	ld a,(Coordenada_X)
 433+ 9548 47           	ld b,a
 434+ 9549 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 954A 79           	ld a,c
 436+ 954B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 954C 38 08        	jr c,2F
 438+ 954E 47           	ld b,a
 439+ 954F 79           	ld a,c
 440+ 9550 90           	sub b
 441+ 9551 32 FE 88     	ld (Columnas),a
 442+ 9554 18 1B        	jr 4F
 443+ 9556 79           2 ld a,c
 444+ 9557 32 FE 88     	ld (Columnas),a
 445+ 955A 18 15        	jr 4F
 446+ 955C
 447+ 955C              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 955C
 449+ 955C 3A CD 88     1 ld a,(Coordenada_X)
 450+ 955F 81           	add c
 451+ 9560 3D           	dec a
 452+ 9561 D6 1F        	sub $1f
 453+ 9563 38 08        	jr c,3F
 454+ 9565 47           	ld b,a
 455+ 9566 79           	ld a,c
 456+ 9567 90           	sub b
 457+ 9568 32 FE 88     	ld (Columnas),a
 458+ 956B 18 04        	jr 4F
 459+ 956D 79           3 ld a,c
 460+ 956E 32 FE 88     	ld (Columnas),a
 461+ 9571 D9           4 exx
 462+ 9572 4F           	ld c,a
 463+ 9573 D9           	exx
 464+ 9574 C9            ret
 465+ 9575
 466+ 9575              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9575              ;
 468+ 9575              ;   19/7/23
 469+ 9575              ;
 470+ 9575              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9575              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9575              ;
 473+ 9575              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9575              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9575              ;
 476+ 9575              ;	DESTRUYE: HL,B Y A.
 477+ 9575
 478+ 9575 3A DB 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9578 FE 02        	cp 2
 480+ 957A 38 18        	jr c,1F
 481+ 957C 28 16        	jr z,1F
 482+ 957E E6 01        	and 1
 483+ 9580 28 0D        	jr z,3F
 484+ 9582
 485+ 9582              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9582
 487+ 9582 CD C8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9585
 489+ 9585 7D           9 ld a,l
 490+ 9586 E6 1F        	and $1f
 491+ 9588 28 2A        	jr z,7F
 492+ 958A 2B           	dec hl
 493+ 958B 10 F8        	djnz 9B
 494+ 958D 18 25        	jr 7F
 495+ 958F
 496+ 958F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 958F
 498+ 958F 2A C9 88     3 ld hl,(Posicion_actual)
 499+ 9592 18 20        	jr 7F
 500+ 9594
 501+ 9594 28 14        1 jr z,2F
 502+ 9596
 503+ 9596              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9596
 505+ 9596 CD C8 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9599
 507+ 9599 7D           4 ld a,l
 508+ 959A E6 1F        	and $1f
 509+ 959C 28 03        	jr z,6F
 510+ 959E 2B           	dec hl
 511+ 959F 10 F8        	djnz 4B
 512+ 95A1 06 0F        6 ld b,15
 513+ 95A3 CD 29 96     5 call PreviousScan
 514+ 95A6 10 FB        	djnz 5B
 515+ 95A8 18 0A        	jr 7F
 516+ 95AA
 517+ 95AA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95AA
 519+ 95AA CD C8 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95AD 06 0F        	ld b,15
 521+ 95AF CD 29 96     8 call PreviousScan
 522+ 95B2 10 FB        	djnz 8B
 523+ 95B4
 524+ 95B4 E5           7 push hl
 525+ 95B5 DD E1        	pop ix
 526+ 95B7
 527+ 95B7 2A CB 88     	ld hl,(Puntero_objeto)
 528+ 95BA E5           	push hl
 529+ 95BB FD E1        	pop iy
 530+ 95BD
 531+ 95BD              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95BD
 533+ 95BD 3A F1 88     	ld a,(Ctrl_0)
 534+ 95C0 CB 77        	bit 6,a
 535+ 95C2 C8           	ret z
 536+ 95C3
 537+ 95C3              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95C3              ; _ entidad / Amadeus´.
 539+ 95C3
 540+ 95C3 DD 22 4F 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95C7
 542+ 95C7 C9           	ret
 543+ 95C8
 544+ 95C8              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95C8              ;
 546+ 95C8              ;	2/1/23
 547+ 95C8              ;
 548+ 95C8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95C8              ;
 550+ 95C8              ;	Tras esta rutina tenemos:
 551+ 95C8              ;
 552+ 95C8              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95C8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95C8              ;
 555+ 95C8              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95C8
 557+ 95C8 2A C9 88     Operandos ld hl,(Posicion_actual)
 558+ 95CB 3A FE 88     	ld a,(Columnas)
 559+ 95CE 3D           	dec a
 560+ 95CF 20 01        	jr nz,1F
 561+ 95D1 3C           	inc a
 562+ 95D2 47           1 ld b,a
 563+ 95D3 C9           	ret
 564+ 95D4
 565+ 95D4              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95D4              ;
 567+ 95D4              ;	3/1/23
 568+ 95D4              ;
 569+ 95D4              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95D4              ;
 571+ 95D4              ;	Destruye: A,B,HL y DE.
 572+ 95D4
 573+ 95D4              Define_rutina_de_impresion
 574+ 95D4
 575+ 95D4 3A C8 88     	ld a,(Columns)
 576+ 95D7 47           	ld b,a
 577+ 95D8 3A FE 88     	ld a,(Columnas)
 578+ 95DB B8           	cp b
 579+ 95DC 20 0D        	jr nz,2f
 580+ 95DE
 581+ 95DE              ;	La entidad se imprime entera.
 582+ 95DE
 583+ 95DE 21 FD 96     	ld hl, Indice_entidades_completas
 584+ 95E1 E6 01        	and 1
 585+ 95E3 28 02        	jr z,1F
 586+ 95E5
 587+ 95E5 23           	inc hl
 588+ 95E6 23           	inc hl
 589+ 95E7
 590+ 95E7 CD 81 8C     1 call Extrae_address
 591+ 95EA C9           	ret		;	ret
 592+ 95EB
 593+ 95EB              ;	La entidad no se imprime entera en pantalla.
 594+ 95EB
 595+ 95EB 3A DB 88     2 ld a,(Cuad_objeto)
 596+ 95EE E6 01        	and 1
 597+ 95F0 28 17        	jr z,3F
 598+ 95F2
 599+ 95F2              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95F2
 601+ 95F2 21 01 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95F5 3A C8 88     4 ld a,(Columns)
 603+ 95F8 E6 01        	and 1
 604+ 95FA 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 95FC
 606+ 95FC 23           	inc hl
 607+ 95FD 23           	inc hl
 608+ 95FE
 609+ 95FE 3A FE 88     	ld a,(Columnas)
 610+ 9601 E6 01        	and 1
 611+ 9603 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9605
 613+ 9605 23           	inc hl
 614+ 9606 23           	inc hl
 615+ 9607
 616+ 9607 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9609
 618+ 9609 21 07 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 960C 18 E7        	jr 4B
 620+ 960E
 621+ 960E              ; --------------------------------------------------------------------------------------------------------------------
 622+ 960E              ;
 623+ 960E              ;	Prepara_draw
 624+ 960E              ;
 625+ 960E              ;	Es una rutina de carga.
 626+ 960E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 960E              ;
 628+ 960E              ;	FUNCIONAMIENTO:
 629+ 960E              ;
 630+ 960E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 960E              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 960E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 960E              ;
 634+ 960E              ;	DESTRUYE:
 635+ 960E              ;
 636+ 960E              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 960E
 638+ 960E 21 C7 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9611 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9612 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9613 4E           	ld c,(hl)
 642+ 9614 2A C9 88     	ld hl,(Posicion_actual)
 643+ 9617 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9619 C9           	ret
 645+ 961A
 646+ 961A              ;----------------------------------------------------------------------------------------------------------------
 647+ 961A              ;
 648+ 961A              ;	5/08/22
 649+ 961A              ;
 650+ 961A              ;   NextScan.
 651+ 961A              ;
 652+ 961A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 961A              ;
 654+ 961A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 961A              ;
 656+ 961A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 961A              ;
 658+ 961A              ;       DESTRUIDOS: AF y HL !!!
 659+ 961A              ;
 660+ 961A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 961A              ;
 662+ 961A
 663+ 961A 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 961B 7C               ld a,h
 665+ 961C E6 07            and 7
 666+ 961E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 961F
 668+ 961F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9620 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9622 6F               ld l,a
 671+ 9623 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9624
 673+ 9624 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9625 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9627 67               ld h,a
 676+ 9628 C9               ret
 677+ 9629
 678+ 9629              ;----------------------------------------------------------------------------------------------------------------
 679+ 9629              ;
 680+ 9629              ;	5/08/22
 681+ 9629              ;
 682+ 9629              ;   PreviousScan.
 683+ 9629              ;
 684+ 9629              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9629              ;
 686+ 9629              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9629              ;
 688+ 9629              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9629              ;
 690+ 9629              ;       DESTRUIDOS: AF y HL !!!
 691+ 9629              ;
 692+ 9629              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9629              ;
 694+ 9629
 695+ 9629 7C           PreviousScan ld a,h
 696+ 962A 25               dec h               ; Dec H.
 697+ 962B E6 07            and 7
 698+ 962D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 962E
 700+ 962E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 962F D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9631 6F               ld l,a
 703+ 9632 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9633
 705+ 9633 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9634 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9636 67               ld h,a
 708+ 9637 C9               ret
 709+ 9638
 710+ 9638              ; -----------------------------------------------------------------------------------
 711+ 9638              ;
 712+ 9638              ;	31/7/23
 713+ 9638              ;
 714+ 9638              ;	Rutina principal de pintado de entidades.
 715+ 9638              ;	Extrae la foto del frame, (entidades).
 716+ 9638
 717+ 9638              Extrae_foto_entidades
 718+ 9638
 719+ 9638 21 01 70     	ld hl,Album_de_fotos+1
 720+ 963B 7E           	ld a,(hl)
 721+ 963C A7           	and a
 722+ 963D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 963E
 724+ 963E              ;	No hay datos, (entidades para pintar en este frame).
 725+ 963E
 726+ 963E 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9641 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9642 C8           	ret z
 729+ 9643
 730+ 9643              ; -----------------------------------
 731+ 9643
 732+ 9643 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9647 31 00 70     	ld sp,Album_de_fotos
 734+ 964A
 735+ 964A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 964C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 964D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 964E
 739+ 964E ED 73 17 89  	ld (Stack_2),sp
 740+ 9652 ED 7B 15 89  	ld sp,(Stack)
 741+ 9656
 742+ 9656              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9656
 744+ 9656 3E CD        	ld a,$cd
 745+ 9658 32 60 96     	ld (Imprime),a
 746+ 965B EB           	ex de,hl
 747+ 965C 22 61 96     	ld (Imprime+1),hl
 748+ 965F EB           	ex de,hl
 749+ 9660
 750+ 9660              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9660
 752+ 9660 00 00 00     Imprime db 0,0,0
 753+ 9663
 754+ 9663 ED 73 15 89  	ld (Stack),sp
 755+ 9667
 756+ 9667 3A 10 89     	ld a,(Numero_de_malotes)
 757+ 966A 3D           	dec a
 758+ 966B 28 09        	jr z,1F
 759+ 966D 32 10 89      	ld (Numero_de_malotes),a
 760+ 9670
 761+ 9670 ED 7B 17 89  	ld sp,(Stack_2)
 762+ 9674 18 D4        	jr 2B
 763+ 9676
 764+ 9676 AF           1 xor a
 765+ 9677 32 17 89     	ld (Stack_2),a
 766+ 967A
 767+ 967A C9           	ret
 768+ 967B
 769+ 967B              ; -----------------------------------------------------------------------------------
 770+ 967B              ;
 771+ 967B              ;	28/2/23
 772+ 967B              ;
 773+ 967B              ;	Pinta los disparos generados.
 774+ 967B
 775+ 967B              Extrae_foto_disparos
 776+ 967B
 777+ 967B 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 967E 7E               ld a,(hl)
 779+ 967F A7               and a
 780+ 9680 C8               ret z
 781+ 9681
 782+ 9681 3A 3F 89     	ld a,(Numero_de_disparotes)
 783+ 9684 A7           	and a
 784+ 9685 C8           	ret z
 785+ 9686 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 968A 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 968D
 788+ 968D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 968F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9690 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9691
 792+ 9691 ED 73 17 89  	ld (Stack_2),sp
 793+ 9695 ED 7B 15 89  	ld sp,(Stack)
 794+ 9699
 795+ 9699              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9699
 797+ 9699 3E CD        	ld a,$cd
 798+ 969B 32 A3 96     	ld (Imprime2),a
 799+ 969E EB           	ex de,hl
 800+ 969F 22 A4 96     	ld (Imprime2+1),hl
 801+ 96A2 EB           	ex de,hl
 802+ 96A3
 803+ 96A3              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96A3
 805+ 96A3 00 00 00     Imprime2 db 0,0,0
 806+ 96A6
 807+ 96A6 3A 3F 89     	ld a,(Numero_de_disparotes)
 808+ 96A9 3D           	dec a
 809+ 96AA 28 09        	jr z,1F
 810+ 96AC 32 3F 89      	ld (Numero_de_disparotes),a
 811+ 96AF
 812+ 96AF ED 7B 17 89  	ld sp,(Stack_2)
 813+ 96B3 18 D8        	jr 2B
 814+ 96B5
 815+ 96B5 AF           1 xor a
 816+ 96B6 32 17 89     	ld (Stack_2),a
 817+ 96B9 C9           	ret
 818+ 96BA
 819+ 96BA              ; -----------------------------------------------------------------------------------
 820+ 96BA              ;
 821+ 96BA              ;	4/9/23
 822+ 96BA              ;
 823+ 96BA              ;	Rutina principal de pintado de Amadeus.
 824+ 96BA              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96BA
 826+ 96BA 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96BD 7E           	ld a,(hl)
 828+ 96BE A7           	and a
 829+ 96BF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96C0
 831+ 96C0 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96C3 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96C4 C8           	ret z
 834+ 96C5
 835+ 96C5              ; -----------------------------------
 836+ 96C5
 837+ 96C5 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96C9 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96CC
 840+ 96CC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96CE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96CF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96D0
 844+ 96D0 ED 73 17 89  	ld (Stack_2),sp
 845+ 96D4 ED 7B 15 89  	ld sp,(Stack)
 846+ 96D8
 847+ 96D8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96D8
 849+ 96D8 3E CD        	ld a,$cd
 850+ 96DA 32 E2 96     	ld (Imprime_Amadeus),a
 851+ 96DD EB           	ex de,hl
 852+ 96DE 22 E3 96     	ld (Imprime_Amadeus+1),hl
 853+ 96E1 EB           	ex de,hl
 854+ 96E2
 855+ 96E2              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96E2
 857+ 96E2 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96E5
 859+ 96E5 ED 73 15 89  	ld (Stack),sp
 860+ 96E9
 861+ 96E9 3A 10 89     	ld a,(Numero_de_malotes)
 862+ 96EC 3D           	dec a
 863+ 96ED 28 09        	jr z,1F
 864+ 96EF 32 10 89      	ld (Numero_de_malotes),a
 865+ 96F2
 866+ 96F2 ED 7B 17 89  	ld sp,(Stack_2)
 867+ 96F6 18 D4        	jr 2B
 868+ 96F8
 869+ 96F8 AF           1 xor a
 870+ 96F9 32 17 89     	ld (Stack_2),a
 871+ 96FC
 872+ 96FC C9           	ret
# file closed: Draw_XOR.asm
1639  96FD              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96FD              ;   índices de Rutinas de impresión.
   2+ 96FD
   3+ 96FD 0D 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96FF 3A 97            defw Pinta_Amadeus_3x2
   5+ 9701
   6+ 9701 90 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9703 30 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9705 E4 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9707
  10+ 9707 BA 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9709 BE 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 970B 72 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 970D
  14+ 970D
  15+ 970D              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 970D              ;
  17+ 970D              ;   12/12/22
  18+ 970D              ;
  19+ 970D              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 970D              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 970D              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 970D              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 970D              ;
  24+ 970D              ;   Modifica: DE y HL.
  25+ 970D
  26+ 970D ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9711 FD F9        	ld sp,iy
  28+ 9713 06 10            ld b,16
  29+ 9715 D1           1 pop de
  30+ 9716 7B               ld a,e
  31+ 9717 AE               xor (hl)
  32+ 9718 77           	ld (hl),a
  33+ 9719 23           	inc hl
  34+ 971A 7A               ld a,d
  35+ 971B AE               xor (hl)
  36+ 971C 77           	ld (hl),a
  37+ 971D 2B           	dec hl
  38+ 971E 24           	inc h
  39+ 971F 7C               ld a,h
  40+ 9720 E6 07            and 7
  41+ 9722 20 0A            jr nz,2F
  42+ 9724 7D               ld a,l
  43+ 9725 C6 20            add a,$20
  44+ 9727 6F               ld l,a
  45+ 9728 38 04            jr c,2F
  46+ 972A 7C               ld a,h
  47+ 972B D6 08            sub 8
  48+ 972D 67               ld h,a
  49+ 972E 7C           2 ld a,h
  50+ 972F FE 58            cp $58
  51+ 9731 28 02            jr z,3F
  52+ 9733 10 E0            djnz 1B
  53+ 9735 ED 7B 15 89  3 ld sp,(Stack)
  54+ 9739 C9           	ret
  55+ 973A
  56+ 973A ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 973E FD F9        	ld sp,iy
  58+ 9740 06 08            ld b,8
  59+ 9742 D1           1 pop de
  60+ 9743 7B               ld a,e
  61+ 9744 AE               xor (hl)
  62+ 9745 77           	ld (hl),a
  63+ 9746 23           	inc hl
  64+ 9747 7A               ld a,d
  65+ 9748 AE               xor (hl)
  66+ 9749 77           	ld (hl),a
  67+ 974A 23           	inc hl
  68+ 974B D1           	pop de
  69+ 974C 7B               ld a,e
  70+ 974D AE               xor (hl)
  71+ 974E 77           	ld (hl),a
  72+ 974F 2B           	dec hl
  73+ 9750 2B           	dec hl
  74+ 9751 24           	inc h
  75+ 9752 7C               ld a,h
  76+ 9753 E6 07            and 7
  77+ 9755 20 0A            jr nz,2F
  78+ 9757 7D               ld a,l
  79+ 9758 C6 20            add a,$20
  80+ 975A 6F               ld l,a
  81+ 975B 38 04            jr c,2F
  82+ 975D 7C               ld a,h
  83+ 975E D6 08            sub 8
  84+ 9760 67               ld h,a
  85+ 9761 7C           2 ld a,h
  86+ 9762 FE 58            cp $58
  87+ 9764 28 25            jr z,4F
  88+ 9766 7A               ld a,d
  89+ 9767 AE               xor (hl)
  90+ 9768 77               ld (hl),a
  91+ 9769 D1           	pop de
  92+ 976A 23           	inc hl
  93+ 976B 7B               ld a,e
  94+ 976C AE               xor (hl)
  95+ 976D 77           	ld (hl),a
  96+ 976E 23           	inc hl
  97+ 976F 7A               ld a,d
  98+ 9770 AE               xor (hl)
  99+ 9771 77           	ld (hl),a
 100+ 9772 2B           	dec hl
 101+ 9773 2B           	dec hl
 102+ 9774 24           	inc h
 103+ 9775 7C               ld a,h
 104+ 9776 E6 07            and 7
 105+ 9778 20 0A            jr nz,3F
 106+ 977A 7D               ld a,l
 107+ 977B C6 20            add a,$20
 108+ 977D 6F               ld l,a
 109+ 977E 38 04            jr c,3F
 110+ 9780 7C               ld a,h
 111+ 9781 D6 08            sub 8
 112+ 9783 67               ld h,a
 113+ 9784 7C           3 ld a,h
 114+ 9785 FE 58            cp $58
 115+ 9787 28 02            jr z,4F
 116+ 9789 10 B7            djnz 1B
 117+ 978B ED 7B 15 89  4 ld sp,(Stack)
 118+ 978F C9           	ret
 119+ 9790
 120+ 9790              ; ---------------------------------------------------
 121+ 9790
 122+ 9790 ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9794 FD F9        	ld sp,iy
 124+ 9796
 125+ 9796              ; >>>
 126+ 9796
 127+ 9796 06 10            ld b,16
 128+ 9798 D1           1 pop de
 129+ 9799 7A           	ld a,d
 130+ 979A AE           	xor (hl)
 131+ 979B 77           	ld (hl),a
 132+ 979C 24           	inc h
 133+ 979D 7C               ld a,h
 134+ 979E E6 07            and 7
 135+ 97A0 20 0C            jr nz,2F
 136+ 97A2 7D               ld a,l
 137+ 97A3 C6 20            add a,$20
 138+ 97A5 6F               ld l,a
 139+ 97A6 38 06            jr c,2F
 140+ 97A8 7C               ld a,h
 141+ 97A9 D6 08            sub 8
 142+ 97AB 67               ld h,a
 143+ 97AC 18 00            jr 2F
 144+ 97AE 7C           2 ld a,h
 145+ 97AF FE 58            cp $58
 146+ 97B1 28 02            jr z,3F
 147+ 97B3 10 E3            djnz 1B
 148+ 97B5 ED 7B 15 89  3 ld sp,(Stack)
 149+ 97B9 C9           	ret
 150+ 97BA
 151+ 97BA ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97BE FD F9        	ld sp,iy
 153+ 97C0
 154+ 97C0              ; >>>
 155+ 97C0
 156+ 97C0 06 10            ld b,16
 157+ 97C2 D1           1 pop de
 158+ 97C3 7B           	ld a,e
 159+ 97C4 AE           	xor (hl)
 160+ 97C5 77           	ld (hl),a
 161+ 97C6 24           	inc h
 162+ 97C7 7C               ld a,h
 163+ 97C8 E6 07            and 7
 164+ 97CA 20 0C            jr nz,2F
 165+ 97CC 7D               ld a,l
 166+ 97CD C6 20            add a,$20
 167+ 97CF 6F               ld l,a
 168+ 97D0 38 06            jr c,2F
 169+ 97D2 7C               ld a,h
 170+ 97D3 D6 08            sub 8
 171+ 97D5 67               ld h,a
 172+ 97D6 18 00            jr 2F
 173+ 97D8 7C           2 ld a,h
 174+ 97D9 FE 58            cp $58
 175+ 97DB 28 02            jr z,3F
 176+ 97DD 10 E3            djnz 1B
 177+ 97DF ED 7B 15 89  3 ld sp,(Stack)
 178+ 97E3 C9           	ret
 179+ 97E4
 180+ 97E4              ; ---------------------------------------------------
 181+ 97E4
 182+ 97E4 ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97E8 FD F9        	ld sp,iy
 184+ 97EA 06 08            ld b,8
 185+ 97EC D1           1 pop de
 186+ 97ED 7A           	ld a,d
 187+ 97EE AE           	xor (hl)
 188+ 97EF 77           	ld (hl),a
 189+ 97F0 23           	inc hl
 190+ 97F1 D1           	pop de
 191+ 97F2 7B           	ld a,e
 192+ 97F3 AE           	xor (hl)
 193+ 97F4 77           	ld (hl),a
 194+ 97F5 2B           	dec hl
 195+ 97F6 24            	inc h
 196+ 97F7 7C               ld a,h
 197+ 97F8 E6 07            and 7
 198+ 97FA 20 0A            jr nz,2F
 199+ 97FC 7D               ld a,l
 200+ 97FD C6 20            add a,$20
 201+ 97FF 6F               ld l,a
 202+ 9800 38 04            jr c,2F
 203+ 9802 7C               ld a,h
 204+ 9803 D6 08            sub 8
 205+ 9805 67               ld h,a
 206+ 9806 7C           2 ld a,h
 207+ 9807 FE 58            cp $58
 208+ 9809 28 20            jr z,4F
 209+ 980B D1               pop de
 210+ 980C 7B           	ld a,e
 211+ 980D AE           	xor (hl)
 212+ 980E 77           	ld (hl),a
 213+ 980F 23           	inc hl
 214+ 9810 7A           	ld a,d
 215+ 9811 AE           	xor (hl)
 216+ 9812 77           	ld (hl),a
 217+ 9813 2B           	dec hl
 218+ 9814 24           	inc h
 219+ 9815 7C               ld a,h
 220+ 9816 E6 07            and 7
 221+ 9818 20 0A            jr nz,3F
 222+ 981A 7D               ld a,l
 223+ 981B C6 20            add a,$20
 224+ 981D 6F               ld l,a
 225+ 981E 38 04            jr c,3F
 226+ 9820 7C               ld a,h
 227+ 9821 D6 08            sub 8
 228+ 9823 67               ld h,a
 229+ 9824 7C           3 ld a,h
 230+ 9825 FE 58            cp $58
 231+ 9827 28 02            jr z,4F
 232+ 9829 10 C1            djnz 1B
 233+ 982B ED 7B 15 89  4 ld sp,(Stack)
 234+ 982F C9           	ret
 235+ 9830
 236+ 9830 ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9834 FD F9        	ld sp,iy
 238+ 9836 06 08            ld b,8
 239+ 9838 D1           1 pop de
 240+ 9839 D1           	pop de
 241+ 983A 7B           	ld a,e
 242+ 983B AE           	xor (hl)
 243+ 983C 77           	ld (hl),a
 244+ 983D 24            	inc h
 245+ 983E 7C               ld a,h
 246+ 983F E6 07            and 7
 247+ 9841 20 0A            jr nz,2F
 248+ 9843 7D               ld a,l
 249+ 9844 C6 20            add a,$20
 250+ 9846 6F               ld l,a
 251+ 9847 38 04            jr c,2F
 252+ 9849 7C               ld a,h
 253+ 984A D6 08            sub 8
 254+ 984C 67               ld h,a
 255+ 984D 7C           2 ld a,h
 256+ 984E FE 58            cp $58
 257+ 9850 28 1B            jr z,4F
 258+ 9852 D1               pop de
 259+ 9853 7A           	ld a,d
 260+ 9854 AE           	xor (hl)
 261+ 9855 77           	ld (hl),a
 262+ 9856 24           	inc h
 263+ 9857 7C               ld a,h
 264+ 9858 E6 07            and 7
 265+ 985A 20 0A            jr nz,3F
 266+ 985C 7D               ld a,l
 267+ 985D C6 20            add a,$20
 268+ 985F 6F               ld l,a
 269+ 9860 38 04            jr c,3F
 270+ 9862 7C               ld a,h
 271+ 9863 D6 08            sub 8
 272+ 9865 67               ld h,a
 273+ 9866 7C           3 ld a,h
 274+ 9867 FE 58            cp $58
 275+ 9869 28 02            jr z,4F
 276+ 986B 10 CB            djnz 1B
 277+ 986D ED 7B 15 89  4 ld sp,(Stack)
 278+ 9871 C9           	ret
 279+ 9872
 280+ 9872 ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9876 FD F9        	ld sp,iy
 282+ 9878 06 08            ld b,8
 283+ 987A D1           1 pop de
 284+ 987B 7B           	ld a,e
 285+ 987C AE           	xor (hl)
 286+ 987D 77           	ld (hl),a
 287+ 987E 23           	inc hl
 288+ 987F 7A           	ld a,d
 289+ 9880 AE           	xor (hl)
 290+ 9881 77           	ld (hl),a
 291+ 9882 2B           	dec hl
 292+ 9883 24             	inc h
 293+ 9884 7C               ld a,h
 294+ 9885 E6 07            and 7
 295+ 9887 20 0A            jr nz,2F
 296+ 9889 7D               ld a,l
 297+ 988A C6 20            add a,$20
 298+ 988C 6F               ld l,a
 299+ 988D 38 04            jr c,2F
 300+ 988F 7C               ld a,h
 301+ 9890 D6 08            sub 8
 302+ 9892 67               ld h,a
 303+ 9893 7C           2 ld a,h
 304+ 9894 FE 58            cp $58
 305+ 9896 28 21            jr z,4F
 306+ 9898 D1               pop de
 307+ 9899 7A           	ld a,d
 308+ 989A AE           	xor (hl)
 309+ 989B 77           	ld (hl),a
 310+ 989C 23           	inc hl
 311+ 989D D1               pop de
 312+ 989E 7B           	ld a,e
 313+ 989F AE           	xor (hl)
 314+ 98A0 77           	ld (hl),a
 315+ 98A1 2B           	dec hl
 316+ 98A2 24           	inc h
 317+ 98A3 7C               ld a,h
 318+ 98A4 E6 07            and 7
 319+ 98A6 20 0A            jr nz,3F
 320+ 98A8 7D               ld a,l
 321+ 98A9 C6 20            add a,$20
 322+ 98AB 6F               ld l,a
 323+ 98AC 38 04            jr c,3F
 324+ 98AE 7C               ld a,h
 325+ 98AF D6 08            sub 8
 326+ 98B1 67               ld h,a
 327+ 98B2 7C           3 ld a,h
 328+ 98B3 FE 58            cp $58
 329+ 98B5 28 02            jr z,4F
 330+ 98B7 10 C1            djnz 1B
 331+ 98B9 ED 7B 15 89  4 ld sp,(Stack)
 332+ 98BD C9           	ret
 333+ 98BE
 334+ 98BE ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98C2 FD F9        	ld sp,iy
 336+ 98C4 06 08            ld b,8
 337+ 98C6 D1           1 pop de
 338+ 98C7 7B           	ld a,e
 339+ 98C8 AE           	xor (hl)
 340+ 98C9 77           	ld (hl),a
 341+ 98CA 24            	inc h
 342+ 98CB 7C               ld a,h
 343+ 98CC E6 07            and 7
 344+ 98CE 20 0A            jr nz,2F
 345+ 98D0 7D               ld a,l
 346+ 98D1 C6 20            add a,$20
 347+ 98D3 6F               ld l,a
 348+ 98D4 38 04            jr c,2F
 349+ 98D6 7C               ld a,h
 350+ 98D7 D6 08            sub 8
 351+ 98D9 67               ld h,a
 352+ 98DA 7C           2 ld a,h
 353+ 98DB FE 58            cp $58
 354+ 98DD 28 1C            jr z,4F
 355+ 98DF D1               pop de
 356+ 98E0 7A           	ld a,d
 357+ 98E1 AE           	xor (hl)
 358+ 98E2 77           	ld (hl),a
 359+ 98E3 24           	inc h
 360+ 98E4 7C               ld a,h
 361+ 98E5 E6 07            and 7
 362+ 98E7 20 0A            jr nz,3F
 363+ 98E9 7D               ld a,l
 364+ 98EA C6 20            add a,$20
 365+ 98EC 6F               ld l,a
 366+ 98ED 38 04            jr c,3F
 367+ 98EF 7C               ld a,h
 368+ 98F0 D6 08            sub 8
 369+ 98F2 67               ld h,a
 370+ 98F3 7C           3 ld a,h
 371+ 98F4 FE 58            cp $58
 372+ 98F6 28 03            jr z,4F
 373+ 98F8 D1               pop de
 374+ 98F9 10 CB            djnz 1B
 375+ 98FB ED 7B 15 89  4 ld sp,(Stack)
 376+ 98FF C9           	ret
 377+ 9900
 378+ 9900              ; ---------------------------------------------------
 379+ 9900              ;
 380+ 9900              ;   27/02/23
 381+ 9900              ;
 382+ 9900              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9900              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9900              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9900
 386+ 9900 ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 9904 FD F9            ld sp,iy
 388+ 9906 06 03            ld b,3
 389+ 9908 D1           1 pop de
 390+ 9909 7B               ld a,e
 391+ 990A AE               xor (hl)
 392+ 990B 77               ld (hl),a
 393+ 990C 23               inc hl
 394+ 990D 7A               ld a,d
 395+ 990E AE               xor (hl)
 396+ 990F 77               ld (hl),a
 397+ 9910 2B               dec hl
 398+ 9911
 399+ 9911 24               inc h
 400+ 9912 7C               ld a,h
 401+ 9913 E6 07            and 7
 402+ 9915 20 0A            jr nz,2F
 403+ 9917 7D               ld a,l
 404+ 9918 C6 20            add a,$20
 405+ 991A 6F               ld l,a
 406+ 991B 38 04            jr c,2F
 407+ 991D 7C               ld a,h
 408+ 991E D6 08            sub 8
 409+ 9920 67               ld h,a
 410+ 9921 7C           2 ld a,h
 411+ 9922 FE 58            cp $58
 412+ 9924 28 02            jr z,3F
 413+ 9926
 414+ 9926 10 E0            djnz 1B
 415+ 9928 ED 7B 15 89  3 ld sp,(Stack)
 416+ 992C C9               ret
 417+ 992D
# file closed: Rutinas_de_impresion_sprites.asm
1640  992D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 992D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 992D              ;
   3+ 992D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 992D              ;
   5+ 992D              ; *****************************************************************************************************************************************************************************************
   6+ 992D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 992D
   8+ 992D 7C           calcula_tercio ld a,h
   9+ 992E E6 18        	and $18
  10+ 9930 CB 2F        	sra a
  11+ 9932 CB 2F        	sra a
  12+ 9934 CB 2F        	sra a
  13+ 9936 C9           	ret
  14+ 9937
# file closed: calcula_tercio.asm
1641  9937              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9937              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9937              ;
   3+ 9937              ;
   4+ 9937              ;	CLS.
   5+ 9937              ;
   6+ 9937              ;	Limpia la pantalla y define sus atributos.
   7+ 9937              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9937              ;
   9+ 9937              ;	COLORES: 0 ..... NEGRO
  10+ 9937              ;    		 1 ..... AZUL
  11+ 9937              ; 			 2 ..... ROJO
  12+ 9937              ;			 3 ..... MAGENTA
  13+ 9937              ; 			 4 ..... VERDE
  14+ 9937              ; 			 5 ..... CIAN
  15+ 9937              ;			 6 ..... AMARILLO
  16+ 9937              ; 			 7 ..... BLANCO
  17+ 9937              ;
  18+ 9937              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9937              ;
  20+ 9937              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9937
  22+ 9937
  23+ 9937 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 993A 11 01 40     	LD DE,$4001
  25+ 993D 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9940 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9942 ED B0        	LDIR
  28+ 9944 01 FF 02     	LD BC,767
  29+ 9947 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9948 ED B0        	LDIR
  31+ 994A C9           	ret
  32+ 994B
# file closed: Cls.asm
1642  994B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 994B              ; ******************************************************************************************************************************************************************************************
   2+ 994B              ;
   3+ 994B              ;   20/05/23
   4+ 994B              ;
   5+ 994B              ;	Recompone_posicion_inicio
   6+ 994B              ;
   7+ 994B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 994B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 994B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 994B              ;	_ a una u otra rutina.
  11+ 994B
  12+ 994B              Recompone_posicion_inicio
  13+ 994B
  14+ 994B 2A D9 88     	ld hl,(Posicion_inicio)
  15+ 994E 7D           	ld a,l
  16+ 994F E6 1F        	and $1f
  17+ 9951 28 16        	jr z,1F
  18+ 9953
  19+ 9953 FE 1F        	cp $1f
  20+ 9955 28 0D        	jr z,3F
  21+ 9957
  22+ 9957 21 02 89     	ld hl,Ctrl_2
  23+ 995A CB C6        	set 0,(hl)
  24+ 995C 2A CB 88     	ld hl,(Puntero_objeto)
  25+ 995F 22 05 89     	ld (Repone_puntero_objeto),hl
  26+ 9962 18 08        	jr 2F
  27+ 9964
  28+ 9964 CD 05 9B     3 call Mov_left
  29+ 9967 18 03        	jr 2F
  30+ 9969
  31+ 9969 CD E7 99     1 call Mov_right
  32+ 996C 21 00 F0     2 ld hl,Sprite_vacio
  33+ 996F 22 CB 88     	ld (Puntero_objeto),hl
  34+ 9972 C9           	ret
  35+ 9973
  36+ 9973              ; ******************************************************************************************************************************************************************************************
  37+ 9973              ;
  38+ 9973              ;   27/05/23
  39+ 9973              ;
  40+ 9973              ;	Mov_down
  41+ 9973              ;
  42+ 9973              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9973              ;
  44+ 9973              ;
  45+ 9973              Mov_down
  46+ 9973
  47+ 9973 CD D5 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9976              ;																	; _ repone (Puntero_objeto).
  49+ 9976 21 F1 88     	ld hl,Ctrl_0
  50+ 9979 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 997B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 997B              ; 																	; _ en el caso de que no lo haya.
  53+ 997B 3A DF 88     	ld a,(Vel_down)
  54+ 997E 47           	ld b,a
  55+ 997F 2A C9 88         ld hl,(Posicion_actual)
  56+ 9982 CD 2D 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9985 E6 02        	and 2
  58+ 9987 28 0F        	jr z,1F
  59+ 9989
  60+ 9989              ; Nos encontramos en el último tercio de pantalla.
  61+ 9989              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9989
  63+ 9989 7C           	ld a,h
  64+ 998A FE 57        	cp $57
  65+ 998C 20 0A        	jr nz,1F
  66+ 998E
  67+ 998E 7D           	ld a,l
  68+ 998F C6 20        	add $20
  69+ 9991 30 05        	jr nc,1F
  70+ 9993
  71+ 9993              ; ------------------------------
  72+ 9993              ;	call Reaparece_arriba
  73+ 9993 CD 92 9C     	call Reinicio
  74+ 9996              ; ------------------------------
  75+ 9996
  76+ 9996 18 08        	jr 3F
  77+ 9998 CD 1A 96     1 call NextScan
  78+ 999B 22 C9 88     	ld (Posicion_actual),hl
  79+ 999E 10 E2            djnz 2B
  80+ 99A0 CD B8 9C     3 call Genera_coordenadas
  81+ 99A3 C9           	ret
  82+ 99A4
  83+ 99A4              ; ******************************************************************************************************************************************************************************************
  84+ 99A4              ;
  85+ 99A4              ;   27/05/23
  86+ 99A4              ;
  87+ 99A4              ;	Mov_up
  88+ 99A4              ;
  89+ 99A4              ; 	Mueve el Sprite hacia arriba.
  90+ 99A4              ;
  91+ 99A4              ;
  92+ 99A4              Mov_up
  93+ 99A4
  94+ 99A4 CD D5 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99A7              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99A7 21 F1 88     	ld hl,Ctrl_0
  97+ 99AA CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99AC              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99AC              ; 																		; _ en el caso de que no lo haya.
 100+ 99AC 3A DE 88     	ld a,(Vel_up)
 101+ 99AF 47           	ld b,a
 102+ 99B0 2A C9 88     	ld hl,(Posicion_actual)
 103+ 99B3 CD 2D 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99B6 A7           	and a
 105+ 99B7 20 10        	jr nz,1F
 106+ 99B9
 107+ 99B9              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99B9              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99B9
 110+ 99B9 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99BA FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99BC 20 0B            jr nz,1F
 113+ 99BE 7D               ld a,l
 114+ 99BF D6 20            sub $20
 115+ 99C1 30 06            jr nc,1F
 116+ 99C3 25               dec h
 117+ 99C4
 118+ 99C4              ; -----------------------------
 119+ 99C4 CD 73 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99C7              ;	call Reinicio
 121+ 99C7              ; -----------------------------
 122+ 99C7
 123+ 99C7 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99C9 CD 29 96     1 call PreviousScan
 125+ 99CC 22 C9 88     	ld (Posicion_actual),hl
 126+ 99CF 10 E2            djnz 3B
 127+ 99D1 CD B8 9C     2 call Genera_coordenadas
 128+ 99D4 C9           	ret
 129+ 99D5
 130+ 99D5              ; -----------------------------
 131+ 99D5              ;
 132+ 99D5              ;	27/5/23
 133+ 99D5              ;
 134+ 99D5              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99D5              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99D5              ;
 137+ 99D5              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99D5              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99D5              ;
 140+ 99D5              ;	Modifica: A y (Puntero_objeto).
 141+ 99D5
 142+ 99D5 3A 02 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99D8 CB 47        	bit 0,a
 144+ 99DA C8           	ret z
 145+ 99DB CB 87        	res 0,a
 146+ 99DD 32 02 89     	ld (Ctrl_2),a
 147+ 99E0 2A 05 89     	ld hl,(Repone_puntero_objeto)
 148+ 99E3 22 CB 88     	ld (Puntero_objeto),hl
 149+ 99E6 C9           	ret
 150+ 99E7
 151+ 99E7              ; ******************************************************************************************************************************************************************************************
 152+ 99E7              ;
 153+ 99E7              ;	19/10/22
 154+ 99E7              ;
 155+ 99E7              ;	Mov_right.
 156+ 99E7              ;
 157+ 99E7              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99E7              ;
 159+ 99E7
 160+ 99E7 21 F1 88     Mov_right ld hl,Ctrl_0
 161+ 99EA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99EC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99EC              ; 																	; _ en el caso de que no lo haya.
 164+ 99EC 3A F1 88     	ld a,(Ctrl_0)
 165+ 99EF CB 77        	bit 6,a
 166+ 99F1 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99F3
 168+ 99F3 CD 21 9C     	call Stop_Amadeus_right
 169+ 99F6 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99F7 18 4D        	jr 8F
 171+ 99F9
 172+ 99F9 3A CD 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99FC FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99FE 20 46        	jr nz,8F
 175+ 9A00
 176+ 9A00 3A CF 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A03 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A04 28 40        	jr z,8F
 179+ 9A06
 180+ 9A06              ; ---------- ---------- ----------
 181+ 9A06              ;
 182+ 9A06              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A06
 184+ 9A06 3A DD 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A09 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A0B 28 11        	jr z,1F
 187+ 9A0D 38 06        	jr c,6F
 188+ 9A0F FE 04        	cp 4
 189+ 9A11 28 14        	jr z,7F
 190+ 9A13 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A15
 192+ 9A15              ; ---------- ---------- ----------
 193+ 9A15              ;
 194+ 9A15              ; Perfiles de velocidad
 195+ 9A15              ;
 196+ 9A15
 197+ 9A15 3A CF 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A18 FE FE        	cp $fe
 199+ 9A1A 20 2A        	jr nz,8F
 200+ 9A1C 18 10        	jr 3F
 201+ 9A1E 3A CF 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A21 FE FD        	cp $fd
 203+ 9A23 20 21        	jr nz,8F
 204+ 9A25 18 07        	jr 3F
 205+ 9A27 3A CF 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A2A FE FB        	cp $fb
 207+ 9A2C 20 18        	jr nz,8F
 208+ 9A2E
 209+ 9A2E              ; ---------- ---------- ----------
 210+ 9A2E
 211+ 9A2E              3
 212+ 9A2E CD 61 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A31              ;	call Reinicio
 214+ 9A31
 215+ 9A31              ; ---------- ---------- ----------
 216+ 9A31              ;
 217+ 9A31              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A31
 219+ 9A31 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A33 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A34 CD 4D 9A     	call DESPLZ_DER
 222+ 9A37 C1           	pop bc
 223+ 9A38 10 F9        	djnz 5B
 224+ 9A3A 2A C9 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A3D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A3E 22 C9 88     	ld (Posicion_actual),hl
 227+ 9A41 CD B8 9C     	call Genera_coordenadas
 228+ 9A44 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A46
 230+ 9A46              ; ---------- ---------- ----------
 231+ 9A46
 232+ 9A46 2A C9 88     8 ld hl,(Posicion_actual)
 233+ 9A49 CD 4D 9A     	call DESPLZ_DER
 234+ 9A4C C9           2 ret
 235+ 9A4D
 236+ 9A4D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A4D              ;
 238+ 9A4D              ;	22/9/22
 239+ 9A4D              ;
 240+ 9A4D
 241+ 9A4D CD 5C 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A50 CD A8 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A53 CD D1 9A         call Ciclo_completo
 244+ 9A56 21 F1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A59 CB FE        	set 7,(hl)
 246+ 9A5B C9           	ret
 247+ 9A5C
 248+ 9A5C              ; ******************************************************************************************************************************************************************************************
 249+ 9A5C              ;	15/02/23
 250+ 9A5C              ;
 251+ 9A5C
 252+ 9A5C 3A DD 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A5F 47           	ld b,a
 254+ 9A60 2A D5 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A63 23           1 inc hl
 256+ 9A64 23           	inc hl
 257+ 9A65 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A67 22 D5 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A6A CD 81 8C     	call Extrae_address
 260+ 9A6D 22 CB 88     	ld (Puntero_objeto),hl
 261+ 9A70
 262+ 9A70              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A70
 264+ 9A70              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A70              ; Cuántos movimientos hemos hecho ??
 266+ 9A70              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A70
 268+ 9A70 2A D1 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A73 EB           	ex de,hl
 270+ 9A74 A7           	and a
 271+ 9A75 ED 52        	sbc hl,de
 272+ 9A77 CB 3D        	srl l
 273+ 9A79 3E 08        6 ld a,8
 274+ 9A7B 95           	sub l
 275+ 9A7C 30 1E        	jr nc,3F
 276+ 9A7E
 277+ 9A7E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A7E              ; B="0".
 279+ 9A7E
 280+ 9A7E 04           4 inc b
 281+ 9A7F 3C           	inc a
 282+ 9A80 20 FC        	jr nz,4B
 283+ 9A82 78           	ld a,b
 284+ 9A83 08           	ex af,af
 285+ 9A84 2A D1 88     	ld hl,(Indice_Sprite_der)
 286+ 9A87 23           5 inc hl
 287+ 9A88 23           	inc hl
 288+ 9A89 10 FC        	djnz 5B
 289+ 9A8B 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A8E CD 81 8C     	call Extrae_address
 291+ 9A91 22 CB 88     	ld (Puntero_objeto),hl
 292+ 9A94
 293+ 9A94              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A94              ; _(Posicion_actual).
 295+ 9A94
 296+ 9A94 21 C9 88     	ld hl,Posicion_actual
 297+ 9A97 34           	inc (hl)
 298+ 9A98 08               ex af,af
 299+ 9A99 6F           	ld l,a
 300+ 9A9A 18 DD        	jr 6B
 301+ 9A9C
 302+ 9A9C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A9C
 304+ 9A9C 47           3 ld b,a
 305+ 9A9D 2A D3 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AA0 23           2 inc hl
 307+ 9AA1 23           	inc hl
 308+ 9AA2 10 FC        	djnz 2B
 309+ 9AA4 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AA7 C9           8 ret
 311+ 9AA8
 312+ 9AA8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AA8              ;
 314+ 9AA8              ;	24/7/22
 315+ 9AA8              ;
 316+ 9AA8              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AA8              ;
 318+ 9AA8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AA8              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AA8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AA8
 322+ 9AA8 3A CF 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AAB A7           	and a
 324+ 9AAC 20 1F        	jr nz,1F
 325+ 9AAE D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AB0 32 CF 88         ld (CTRL_DESPLZ),a
 327+ 9AB3
 328+ 9AB3 21 C8 88     	ld hl,Columns
 329+ 9AB6 34           	inc (hl)
 330+ 9AB7 3A DB 88     	ld a,(Cuad_objeto)
 331+ 9ABA E6 01        	and 1
 332+ 9ABC 28 0F        	jr z,1F
 333+ 9ABE 2A C9 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AC1 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AC2 22 C9 88     	ld (Posicion_actual),hl
 336+ 9AC5 CD B8 9C     	call Genera_coordenadas
 337+ 9AC8 CD 2D 9C     	call Inc_CTRL_DESPLZ
 338+ 9ACB 18 03        	jr 2F
 339+ 9ACD CD 2D 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AD0 C9           2 ret
 341+ 9AD1
 342+ 9AD1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AD1              ;
 344+ 9AD1              ;	24/7/22
 345+ 9AD1              ;
 346+ 9AD1              ;	Ciclo_completo.
 347+ 9AD1              ;
 348+ 9AD1              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AD1              ;
 350+ 9AD1              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AD1              ; 	Decrementamos (Columns).
 352+ 9AD1              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AD1              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AD1
 355+ 9AD1
 356+ 9AD1 3A CF 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AD4 FE FF        	cp $ff
 358+ 9AD6 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AD8 E6 F0        	and $f0
 360+ 9ADA 20 28        	jr nz,3F
 361+ 9ADC
 362+ 9ADC              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9ADC
 364+ 9ADC 3A CF 88     	ld a,(CTRL_DESPLZ)
 365+ 9ADF 47           	ld b,a
 366+ 9AE0 3E F8        	ld a,$f8
 367+ 9AE2 80           	add b
 368+ 9AE3 32 CF 88     	ld (CTRL_DESPLZ),a
 369+ 9AE6 18 1C        	jr 3F
 370+ 9AE8 21 C8 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AEB 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AEC AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AED 32 CF 88     	ld (CTRL_DESPLZ),a
 374+ 9AF0 3A DB 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AF3 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AF5 20 0A        	jr nz,2F
 377+ 9AF7 2A C9 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AFA 23           	inc hl
 379+ 9AFB 22 C9 88     	ld (Posicion_actual),hl
 380+ 9AFE CD B8 9C     	call Genera_coordenadas
 381+ 9B01
 382+ 9B01              ; Inicia el puntero de Sprite.
 383+ 9B01
 384+ 9B01 CD 98 8C     2 call Inicia_puntero_objeto_der
 385+ 9B04 C9           3 ret
 386+ 9B05
 387+ 9B05              ; ******************************************************************************************************************************************************************************************
 388+ 9B05              ;
 389+ 9B05              ;	15/02/23
 390+ 9B05              ;
 391+ 9B05              ;	Mov_left.
 392+ 9B05              ;
 393+ 9B05              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B05              ;
 395+ 9B05              Mov_left
 396+ 9B05
 397+ 9B05 21 F1 88     	ld hl,Ctrl_0
 398+ 9B08 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B0A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B0A              ; 																	; _ en el caso de que no lo haya.
 401+ 9B0A 3A F1 88     	ld a,(Ctrl_0)
 402+ 9B0D CB 77        	bit 6,a
 403+ 9B0F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B11
 405+ 9B11 CD 27 9C     	call Stop_Amadeus_left
 406+ 9B14 C8           	ret z
 407+ 9B15 20 4A        	jr nz,8F
 408+ 9B17
 409+ 9B17 3A CD 88     11 ld a,(Coordenada_X)
 410+ 9B1A A7           	and a
 411+ 9B1B 20 44        	jr nz,8F
 412+ 9B1D
 413+ 9B1D 3A CF 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B20 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B21 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B23
 417+ 9B23              ; ---------- ---------- ----------
 418+ 9B23
 419+ 9B23 3A DC 88     	ld a,(Vel_left)
 420+ 9B26 FE 02        	cp 2
 421+ 9B28 28 0F        	jr z,1F
 422+ 9B2A 38 04        	jr c,6F
 423+ 9B2C FE 04        	cp 4
 424+ 9B2E 28 12        	jr z,7F
 425+ 9B30
 426+ 9B30              ; ---------- ---------- ----------
 427+ 9B30
 428+ 9B30 3A CF 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B33 FE F8        	cp $f8
 430+ 9B35 20 2A        	jr nz,8F
 431+ 9B37 18 10        	jr 4F
 432+ 9B39 3A CF 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B3C FE F9        	cp $f9
 434+ 9B3E 20 21        	jr nz,8F
 435+ 9B40 18 07        	jr 4F
 436+ 9B42 3A CF 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B45 FE FB        	cp $fb
 438+ 9B47 20 18        	jr nz,8F
 439+ 9B49
 440+ 9B49              ; ---------- ---------- ----------
 441+ 9B49
 442+ 9B49              4
 443+ 9B49 CD 4F 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B4C              ;	call Reinicio
 445+ 9B4C
 446+ 9B4C              ; ---------- ---------- ----------
 447+ 9B4C
 448+ 9B4C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B4E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B4F
 451+ 9B4F              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B4F              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B4F
 454+ 9B4F CD 68 9B     	call DESPLZ_IZQ
 455+ 9B52 C1           	pop bc
 456+ 9B53 10 F9        	djnz 5B
 457+ 9B55 2A C9 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B58 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B59 22 C9 88     	ld (Posicion_actual),hl
 460+ 9B5C CD B8 9C     	call Genera_coordenadas
 461+ 9B5F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B61
 463+ 9B61              ; ---------- ---------- ----------
 464+ 9B61
 465+ 9B61              ; Movemos, no hay recolocación.
 466+ 9B61
 467+ 9B61 2A C9 88     8 ld hl,(Posicion_actual)
 468+ 9B64 CD 68 9B     	call DESPLZ_IZQ
 469+ 9B67 C9           2 ret
 470+ 9B68
 471+ 9B68              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B68              ;
 473+ 9B68              ;	22/9/22
 474+ 9B68
 475+ 9B68              DESPLZ_IZQ
 476+ 9B68
 477+ 9B68 CD 77 9B     	call Desplaza_izquierda
 478+ 9B6B CD C3 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B6E CD EB 9B     	call Ciclo_completo_2
 480+ 9B71 21 F1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B74 CB BE        	res 7,(hl)
 482+ 9B76 C9           	ret
 483+ 9B77
 484+ 9B77              Desplaza_izquierda
 485+ 9B77
 486+ 9B77 3A DC 88     	ld a,(Vel_left)
 487+ 9B7A 47           	ld b,a
 488+ 9B7B 2A D7 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B7E 23           1 inc hl
 490+ 9B7F 23           	inc hl
 491+ 9B80 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B82 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B85 CD 81 8C     	call Extrae_address
 494+ 9B88 22 CB 88     	ld (Puntero_objeto),hl
 495+ 9B8B
 496+ 9B8B              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B8B
 498+ 9B8B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B8B              ; Cuántos movimientos hemos hecho ??
 500+ 9B8B              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B8B
 502+ 9B8B 2A D3 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B8E EB           	ex de,hl
 504+ 9B8F A7           	and a
 505+ 9B90 ED 52        	sbc hl,de
 506+ 9B92 CB 3D        	srl l
 507+ 9B94 3E 08        6 ld a,8
 508+ 9B96 95           	sub l
 509+ 9B97 30 1E        	jr nc,3F
 510+ 9B99
 511+ 9B99              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B99              ; B="0".
 513+ 9B99
 514+ 9B99 04           4 inc b
 515+ 9B9A 3C           	inc a
 516+ 9B9B 20 FC        	jr nz,4B
 517+ 9B9D 78           	ld a,b
 518+ 9B9E 08           	ex af,af
 519+ 9B9F 2A D3 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BA2 23           5 inc hl
 521+ 9BA3 23           	inc hl
 522+ 9BA4 10 FC        	djnz 5B
 523+ 9BA6 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BA9 CD 81 8C     	call Extrae_address
 525+ 9BAC 22 CB 88     	ld (Puntero_objeto),hl
 526+ 9BAF
 527+ 9BAF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BAF              ; _(Posicion_actual).
 529+ 9BAF
 530+ 9BAF 21 C9 88     	ld hl,Posicion_actual
 531+ 9BB2 35           	dec (hl)
 532+ 9BB3 08           	ex af,af
 533+ 9BB4 6F           	ld l,a
 534+ 9BB5 18 DD        	jr 6B
 535+ 9BB7
 536+ 9BB7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BB7
 538+ 9BB7 47           3 ld b,a
 539+ 9BB8 2A D1 88     	ld hl,(Indice_Sprite_der)
 540+ 9BBB 23           2 inc hl
 541+ 9BBC 23           	inc hl
 542+ 9BBD 10 FC        	djnz 2B
 543+ 9BBF 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BC2 C9           8 ret
 545+ 9BC3
 546+ 9BC3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BC3              ;
 548+ 9BC3              ;	modifica_parametros_1er_DESPLZ
 549+ 9BC3              ;
 550+ 9BC3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BC3              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BC3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BC3
 554+ 9BC3 3A CF 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BC6 A7           	and a
 556+ 9BC7 20 1E        	jr nz,1F
 557+ 9BC9 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BCA 32 CF 88         ld (CTRL_DESPLZ),a
 559+ 9BCD 21 C8 88     	ld hl,Columns
 560+ 9BD0 34           	inc (hl)
 561+ 9BD1 3A DB 88     	ld a,(Cuad_objeto)
 562+ 9BD4 E6 01        	and 1
 563+ 9BD6 20 0F        	jr nz,1F
 564+ 9BD8 2A C9 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BDB 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BDC 22 C9 88     	ld (Posicion_actual),hl
 567+ 9BDF CD B8 9C     	call Genera_coordenadas
 568+ 9BE2 CD 3E 9C     	call Dec_CTRL_DESPLZ
 569+ 9BE5 18 03        	jr 2F
 570+ 9BE7 CD 3E 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BEA C9           2 ret
 572+ 9BEB
 573+ 9BEB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BEB
 575+ 9BEB 3A CF 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BEE FE F7        	cp $f7
 577+ 9BF0 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BF2 30 2C        	jr nc,3F
 579+ 9BF4
 580+ 9BF4              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BF4
 582+ 9BF4 06 00        	ld b,0
 583+ 9BF6 04           4 inc b
 584+ 9BF7 3C           	inc a
 585+ 9BF8 FE F7        	cp $f7
 586+ 9BFA 20 FA        	jr nz,4B
 587+ 9BFC 3E FF        	ld a,$ff
 588+ 9BFE 90           	sub b
 589+ 9BFF 32 CF 88     	ld (CTRL_DESPLZ),a
 590+ 9C02 18 1C        	jr 3F
 591+ 9C04
 592+ 9C04              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C04
 594+ 9C04 21 C8 88     1 ld hl,Columns
 595+ 9C07 35           	dec (hl)
 596+ 9C08 AF           	xor a
 597+ 9C09 32 CF 88     	ld (CTRL_DESPLZ),a
 598+ 9C0C 3A DB 88     	ld a,(Cuad_objeto)
 599+ 9C0F E6 01        	and 1
 600+ 9C11 28 0A        	jr z,2F
 601+ 9C13 2A C9 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C16 2B           	dec hl
 603+ 9C17 22 C9 88     	ld (Posicion_actual),hl
 604+ 9C1A CD B8 9C     	call Genera_coordenadas
 605+ 9C1D
 606+ 9C1D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C1D
 608+ 9C1D CD AB 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C20 C9           3 ret
 610+ 9C21
 611+ 9C21              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C21              ;
 613+ 9C21              ;	19/10/22
 614+ 9C21              ;
 615+ 9C21              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C21              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C21
 618+ 9C21 3A CD 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C24 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C26 C9           	ret
 621+ 9C27
 622+ 9C27              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C27              ;
 624+ 9C27              ;	19/10/22
 625+ 9C27              ;
 626+ 9C27              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C27              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C27
 629+ 9C27 3A CD 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C2A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C2C C9           	ret
 632+ 9C2D
 633+ 9C2D              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C2D              ;
 635+ 9C2D              ;	24/7/22
 636+ 9C2D              ;
 637+ 9C2D              ;	Inc_CTRL_DESPLZ
 638+ 9C2D              ;
 639+ 9C2D              ;
 640+ 9C2D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C2D
 642+ 9C2D 21 CF 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C30 3A DD 88     	ld a,(Vel_right)
 644+ 9C33 A7           	and a
 645+ 9C34 28 06        	jr z,1F
 646+ 9C36 47           	ld b,a
 647+ 9C37 34           3 inc (hl)
 648+ 9C38 10 FD        	djnz 3B
 649+ 9C3A 18 01        	jr 2F
 650+ 9C3C 34           1 inc (hl)
 651+ 9C3D C9           2 ret
 652+ 9C3E
 653+ 9C3E              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C3E              ;
 655+ 9C3E              ;	5/2/23
 656+ 9C3E              ;
 657+ 9C3E              ;	Dec_CTRL_DESPLZ
 658+ 9C3E              ;
 659+ 9C3E              ;
 660+ 9C3E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C3E
 662+ 9C3E 21 CF 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C41 3A DC 88     	ld a,(Vel_left)
 664+ 9C44 A7           	and a
 665+ 9C45 28 06        	jr z,1F
 666+ 9C47 47           	ld b,a
 667+ 9C48 35           3 dec (hl)
 668+ 9C49 10 FD        	djnz 3B
 669+ 9C4B 18 01        	jr 2F
 670+ 9C4D 35           1 dec (hl)
 671+ 9C4E C9           2 ret
 672+ 9C4F
 673+ 9C4F              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C4F
 675+ 9C4F 2A C9 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C52 01 1F 00     	ld bc,31
 677+ 9C55 A7           	and a
 678+ 9C56 ED 4A        	adc hl,bc
 679+ 9C58 22 C9 88     	ld (Posicion_actual),hl
 680+ 9C5B 21 F1 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C5E CB C6        	set 0,(hl)
 682+ 9C60 C9           	ret
 683+ 9C61
 684+ 9C61              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C61
 686+ 9C61 2A C9 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C64 01 1F 00     	ld bc,31
 688+ 9C67 A7           	and a
 689+ 9C68 ED 42        	sbc hl,bc
 690+ 9C6A 22 C9 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C6D 21 F1 88     	ld hl,Ctrl_0
 692+ 9C70 CB CE        	set 1,(hl)
 693+ 9C72 C9           	ret
 694+ 9C73
 695+ 9C73              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C73
 697+ 9C73 24           Reaparece_abajo inc h
 698+ 9C74 01 E0 17     	ld bc,$17e0
 699+ 9C77 A7           	and a
 700+ 9C78 ED 4A        	adc hl,bc
 701+ 9C7A 22 C9 88     	ld (Posicion_actual),hl
 702+ 9C7D 21 F1 88     	ld hl,Ctrl_0
 703+ 9C80 CB D6        	set 2,(hl)
 704+ 9C82 C9           	ret
 705+ 9C83
 706+ 9C83              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C83
 708+ 9C83 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C86 A7           	and a
 710+ 9C87 ED 42        	sbc hl,bc
 711+ 9C89 22 C9 88     	ld (Posicion_actual),hl
 712+ 9C8C 21 F1 88     	ld hl,Ctrl_0
 713+ 9C8F CB DE        	set 3,(hl)
 714+ 9C91 C9           	ret
 715+ 9C92
 716+ 9C92              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C92              ;
 718+ 9C92              ;	15/07/23
 719+ 9C92
 720+ 9C92              Reinicio
 721+ 9C92
 722+ 9C92              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C92
 724+ 9C92 AF           	xor a
 725+ 9C93 21 F6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C96 CD B4 9C     	call Limpia_contenido_hl
 727+ 9C99
 728+ 9C99 21 C9 88     	ld hl,Posicion_actual
 729+ 9C9C CD B4 9C     	call Limpia_contenido_hl
 730+ 9C9F
 731+ 9C9F CD E4 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CA2 CD 6E 9F     	call Inicia_Puntero_mov
 733+ 9CA5
 734+ 9CA5 21 F8 88     	ld hl,Incrementa_puntero
 735+ 9CA8 06 05        	ld b,5
 736+ 9CAA 77           1 ld (hl),a
 737+ 9CAB 23           	inc hl
 738+ 9CAC 10 FC        	djnz 1B
 739+ 9CAE
 740+ 9CAE 21 02 89     	ld hl,Ctrl_2
 741+ 9CB1 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CB3
 743+ 9CB3 C9           	ret
 744+ 9CB4
 745+ 9CB4 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CB5 23           	inc hl
 747+ 9CB6 77           	ld (hl),a
 748+ 9CB7 C9           	ret
 749+ 9CB8
 750+ 9CB8
# file closed: Direcciones.asm
1643  9CB8              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CB8              ; ------------------------------------------------------------------------
   2+ 9CB8              ;
   3+ 9CB8              ;	02/04/23
   4+ 9CB8              ;
   5+ 9CB8              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CB8              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CB8              ;
   8+ 9CB8              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CB8              ;
  10+ 9CB8              ;	Modifica: A,BC y DE.
  11+ 9CB8
  12+ 9CB8 C5           Genera_coordenadas push bc
  13+ 9CB9 E5           	push hl
  14+ 9CBA D5           	push de
  15+ 9CBB
  16+ 9CBB 2A C9 88     	ld hl,(Posicion_actual)
  17+ 9CBE
  18+ 9CBE 7D           	ld a,l
  19+ 9CBF E6 1F        	and $1f
  20+ 9CC1 32 CD 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CC4
  22+ 9CC4 CD 2D 99     	call calcula_tercio
  23+ 9CC7 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CC8
  25+ 9CC8 1E 00        	ld e,0
  26+ 9CCA 7D           	ld a,l
  27+ 9CCB E6 E0        	and $e0
  28+ 9CCD 28 01        	jr z,1F
  29+ 9CCF 04           	inc b
  30+ 9CD0
  31+ 9CD0 04           1 inc b
  32+ 9CD1 05           	dec b
  33+ 9CD2 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CD4              ;														; _ , salimos.
  35+ 9CD4 1C           3 inc e
  36+ 9CD5 D6 20        	sub 32
  37+ 9CD7 20 FB        	jr nz,3B
  38+ 9CD9 10 F5        	djnz 1B
  39+ 9CDB
  40+ 9CDB 7B           2 ld a,e
  41+ 9CDC 32 CE 88     	ld (Coordenada_y),a
  42+ 9CDF
  43+ 9CDF D1           	pop de
  44+ 9CE0 E1           	pop hl
  45+ 9CE1 C1           	pop bc
  46+ 9CE2
  47+ 9CE2 C9           	ret
  48+ 9CE3
  49+ 9CE3              ; ------------------------------------------------------------------------
  50+ 9CE3              ;	28/05/23
  51+ 9CE3              ;
  52+ 9CE3              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CE3              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CE3              ;
  55+ 9CE3              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CE3              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CE3              ;
  58+ 9CE3              ;		DE="$120d"
  59+ 9CE3              ;
  60+ 9CE3              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CE3              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CE3              ;
  63+ 9CE3              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CE3
  65+ 9CE3              ;	Modifica: A,BC y DE.
  66+ 9CE3
  67+ 9CE3
  68+ 9CE3              Genera_coordenadas_disparo
  69+ 9CE3
  70+ 9CE3              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CE3
  72+ 9CE3 7D           	ld a,l
  73+ 9CE4 E6 1F        	and $1f
  74+ 9CE6 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CE7 CD 2D 99     	call calcula_tercio
  76+ 9CEA 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CEB 1E 00        	ld e,0
  78+ 9CED 7D           	ld a,l
  79+ 9CEE E6 E0        	and $e0
  80+ 9CF0 28 01        	jr z,1F
  81+ 9CF2 04           	inc b
  82+ 9CF3 1C           1 inc e
  83+ 9CF4 D6 20        	sub 32
  84+ 9CF6 20 FB        	jr nz,1B
  85+ 9CF8 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CFA C9           	ret
  87+ 9CFB
# file closed: Genera_coordenadas.asm
1644  9CFB              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CFB              ; Relojes y temporizaciones.
   2+ 9CFB
   3+ 9CFB              ; ------------------------------------------------------
   4+ 9CFB              ;
   5+ 9CFB              ;	16/7/23
   6+ 9CFB              ;
   7+ 9CFB              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CFB              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CFB              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CFB              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CFB              ;
  12+ 9CFB              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CFB              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CFB
  15+ 9CFB              ; Disparo_entidad db 1
  16+ 9CFB              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CFB              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CFB
  19+ 9CFB              Habilita_disparos
  20+ 9CFB
  21+ 9CFB 7E           	ld a,(hl)
  22+ 9CFC A7           	and a
  23+ 9CFD C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9CFE
  25+ 9CFE EB           	ex de,hl
  26+ 9CFF
  27+ 9CFF 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D00 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D01
  30+ 9D01              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D01
  32+ 9D01 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D02 7E           	ld a,(hl)
  34+ 9D03 23           	inc hl
  35+ 9D04 77           	ld (hl),a
  36+ 9D05
  37+ 9D05 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D06 3E 01        	ld a,1
  39+ 9D08 77           	ld (hl),a
  40+ 9D09 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1645  9D0A              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D0A
   2+ 9D0A
   3+ 9D0A              ;   07/07/23
   4+ 9D0A              ;
   5+ 9D0A              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D0A              ;
   7+ 9D0A              ;   Codificación:
   8+ 9D0A              ;
   9+ 9D0A              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D0A              ;
  11+ 9D0A              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D0A              ;
  13+ 9D0A              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D0A              ;
  15+ 9D0A              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D0A              ;
  17+ 9D0A              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D0A              ;                               ..... %01000010 Vel_up 4
  19+ 9D0A              ;                                               Vel_down 2
  20+ 9D0A              ;                               ..... $42
  21+ 9D0A              ;
  22+ 9D0A              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D0A              ;
  24+ 9D0A              ;                               ..... %01000010 Vel_left 4
  25+ 9D0A              ;                                               Vel_right 2
  26+ 9D0A              ;                               ..... $42
  27+ 9D0A              ;
  28+ 9D0A              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D0A              ;
  30+ 9D0A              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D0A              ;
  32+ 9D0A              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D0A              ;
  34+ 9D0A              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D0A              ;                                     $53
  36+ 9D0A              ;
  37+ 9D0A              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D0A              ;
  39+ 9D0A              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D0A              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D0A              ;
  42+ 9D0A              ;                       Arriba ..... $81
  43+ 9D0A              ;                       Arriba - izquierda ..... $a1
  44+ 9D0A              ;                       Arriba - derecha ..... $91
  45+ 9D0A              ;
  46+ 9D0A              ;                       Abajo ..... $41
  47+ 9D0A              ;                       Abajo - izquierda ..... $61
  48+ 9D0A              ;                       Abajo - derecha ..... $51
  49+ 9D0A              ;
  50+ 9D0A              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D0A              ;
  52+ 9D0A              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D0A              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D0A              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D0A              ;
  56+ 9D0A              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D0A              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D0A              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D0A              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D0A              ;
  61+ 9D0A              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D0A              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D0A              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D0A              ;
  65+ 9D0A              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D0A              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D0A              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D0A              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D0A
  70+ 9D0A              ; ----- ----- ----- ----- -----
  71+ 9D0A
  72+ 9D0A 36 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D0C 3E 9D            defw F_1
  74+ 9D0E 48 9D            defw F_2
  75+ 9D10 52 9D            defw Codo_abajo_derecha
  76+ 9D12 86 9D            defw Derecha_y_subiendo
  77+ 9D14 90 9D            defw Derecha_y_subiendo_1
  78+ 9D16 9A 9D            defw F_3
  79+ 9D18 A4 9D            defw F_4
  80+ 9D1A AE 9D            defw Derecha_y_bajando
  81+ 9D1C B8 9D            defw Derecha_y_bajando_1
  82+ 9D1E C2 9D            defw Derecha_y_bajando_2
  83+ 9D20 CC 9D            defw Codo_derecha_abajo
  84+ 9D22 FC 9D            defw Codo_abajo_izq.
  85+ 9D24 30 9E            defw Izquierda_y_subiendo
  86+ 9D26 3A 9E            defw Izquierda_y_subiendo_1
  87+ 9D28 44 9E            defw F_5
  88+ 9D2A 4E 9E            defw F_6
  89+ 9D2C 58 9E            defw Izquierda_y_bajando
  90+ 9D2E 62 9E            defw Izquierda_y_bajando_1
  91+ 9D30 6C 9E            defw Izquierda_y_bajando_2
  92+ 9D32 76 9E            defw Codo_izquierda_abajo
  93+ 9D34 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D36
  95+ 9D36 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D3A 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D3E
  98+ 9D3E 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D42 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D46 08 00
 100+ 9D48 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D4C 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D50 0F FE
 102+ 9D52
 103+ 9D52 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D56 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D5A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D5E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D62 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D66 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D6A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D6E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D72 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D76 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D7A 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D7E 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D82 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D86
 117+ 9D86 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D8A 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D8E 06 00
 119+ 9D90
 120+ 9D90 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D94 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D98 02 00
 122+ 9D9A
 123+ 9D9A 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D9E 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DA2 04 00
 125+ 9DA4 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DA8 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DAC 08 00
 127+ 9DAE
 128+ 9DAE 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DB2 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DB6 02 00
 130+ 9DB8
 131+ 9DB8 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DBC 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DC0 06 00
 133+ 9DC2
 134+ 9DC2 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DC6 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DCA 06 00
 136+ 9DCC
 137+ 9DCC              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DCC
 139+ 9DCC 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DD0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DD4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DD8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DDC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DE0 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DE4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DE8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DEC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DF0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DF4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DF8 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DFC
 152+ 9DFC 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E00 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E04 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E08 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E0C 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E10 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E14 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E18 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E1C 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E20 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E24 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E28 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E2C 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E30
 166+ 9E30 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E34 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E38 06 00
 168+ 9E3A
 169+ 9E3A 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E3E 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E42 02 00
 171+ 9E44
 172+ 9E44 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E48 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E4C 04 00
 174+ 9E4E 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E52 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E56 08 00
 176+ 9E58
 177+ 9E58 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E5C 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E60 02 00
 179+ 9E62
 180+ 9E62 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E66 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E6A 06 00
 182+ 9E6C
 183+ 9E6C 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E70 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E74 06 00
 185+ 9E76
 186+ 9E76 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E7A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E7E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E82 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E86 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E8A 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E8E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E92 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E96 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E9A 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E9E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EA2 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EA6
 199+ 9EA6              ; ----- ----- ----- ----- -----
 200+ 9EA6              ;
 201+ 9EA6              ;   27/06/23
 202+ 9EA6
 203+ 9EA6              Movimiento
 204+ 9EA6
 205+ 9EA6              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EA6
 207+ 9EA6              ;    ld hl,(Posicion_actual)
 208+ 9EA6
 209+ 9EA6 3A 02 89         ld a,(Ctrl_2)
 210+ 9EA9 CB 57            bit 2,a
 211+ 9EAB 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EAD
 213+ 9EAD 2A F4 88         ld hl,(Puntero_mov)
 214+ 9EB0 7E               ld a,(hl)
 215+ 9EB1
 216+ 9EB1              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EB1
 218+ 9EB1              Inicia_desplazamiento.
 219+ 9EB1
 220+ 9EB1              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EB1
 222+ 9EB1 CD A5 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EB4
 224+ 9EB4              ; Iniciamos (Repetimos_mov).
 225+ 9EB4
 226+ 9EB4 7E               ld a,(hl)
 227+ 9EB5 E6 0F            and $0f
 228+ 9EB7 32 FA 88         ld (Repetimos_desplazamiento),a
 229+ 9EBA 32 FB 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EBD
 231+ 9EBD              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EBD
 233+ 9EBD 23               inc hl
 234+ 9EBE 7E               ld a,(hl)
 235+ 9EBF 32 FD 88         ld (Cola_de_desplazamiento),a
 236+ 9EC2 2B               dec hl
 237+ 9EC3
 238+ 9EC3 21 02 89         ld hl,Ctrl_2
 239+ 9EC6 CB D6            set 2,(hl)
 240+ 9EC8
 241+ 9EC8              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EC8              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EC8
 244+ 9EC8              Desplazamiento_iniciado
 245+ 9EC8
 246+ 9EC8 CD 79 9F         call Aplica_desplazamiento
 247+ 9ECB
 248+ 9ECB 3A 02 89         ld a,(Ctrl_2)
 249+ 9ECE CB 67            bit 4,a
 250+ 9ED0 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9ED1
 252+ 9ED1 21 FA 88     3 ld hl,Repetimos_desplazamiento
 253+ 9ED4 35               dec (hl)
 254+ 9ED5 C0               ret nz
 255+ 9ED6
 256+ 9ED6              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9ED6              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9ED6              ; Analiza (Cola_de_desplazamiento).
 259+ 9ED6
 260+ 9ED6 3A FD 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9ED9 A7               and a
 262+ 9EDA CC CE 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EDD 28 30            jr z,Reinicia_el_movimiento
 264+ 9EDF
 265+ 9EDF FE FF            cp $ff
 266+ 9EE1 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EE3
 268+ 9EE3 FE FE            cp $fe
 269+ 9EE5 CC 52 9F         call z,Fijamos_bucle
 270+ 9EE8 28 25            jr z,Reinicia_el_movimiento
 271+ 9EEA
 272+ 9EEA FE FD            cp $fd
 273+ 9EEC 20 11            jr nz,1F
 274+ 9EEE
 275+ 9EEE              ; ---
 276+ 9EEE              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EEE
 278+ 9EEE 3A 02 89         ld a,(Ctrl_2)
 279+ 9EF1 CB 5F            bit 3,a
 280+ 9EF3 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EF5
 282+ 9EF5              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EF5
 284+ 9EF5 21 02 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EF8 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EFA
 287+ 9EFA CD 63 9F         call Inicia_Repetimos_movimiento
 288+ 9EFD 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EFF              ; ---
 290+ 9EFF
 291+ 9EFF FE 01        1 cp 1
 292+ 9F01 CA 3C 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F04
 294+ 9F04 3D               dec a
 295+ 9F05 32 FD 88         ld (Cola_de_desplazamiento),a
 296+ 9F08
 297+ 9F08 3A FB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F0B 32 FA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F0E              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F0E C9               ret
 301+ 9F0F
 302+ 9F0F              Reinicia_el_movimiento
 303+ 9F0F
 304+ 9F0F 3A 02 89         ld a,(Ctrl_2)
 305+ 9F12 CB 5F            bit 3,a
 306+ 9F14 28 1B            jr z,2F
 307+ 9F16
 308+ 9F16              ; (Cola_de_desplazamiento)="254".
 309+ 9F16
 310+ 9F16 21 FC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F19 35               dec (hl)
 312+ 9F1A 20 15            jr nz,2F
 313+ 9F1C
 314+ 9F1C              ; Fin de las repeticiones del último movimiento.
 315+ 9F1C
 316+ 9F1C 21 02 89         ld hl,Ctrl_2
 317+ 9F1F CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F21
 319+ 9F21 2A F4 88         ld hl,(Puntero_mov)
 320+ 9F24 23               inc hl
 321+ 9F25 23               inc hl
 322+ 9F26 23               inc hl
 323+ 9F27 22 F4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F2A              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F2A 7E               ld a,(hl)
 326+ 9F2B 32 FD 88         ld (Cola_de_desplazamiento),a
 327+ 9F2E
 328+ 9F2E C3 D6 9E         jp Cola
 329+ 9F31
 330+ 9F31 CD 6E 9F     2 call Inicia_Puntero_mov
 331+ 9F34
 332+ 9F34 21 02 89         ld hl,Ctrl_2
 333+ 9F37 CB 96            res 2,(hl)
 334+ 9F39
 335+ 9F39 C3 A6 9E         jp Movimiento
 336+ 9F3C
 337+ 9F3C              Siguiente_desplazamiento
 338+ 9F3C
 339+ 9F3C              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F3C              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F3C
 342+ 9F3C 21 02 89         ld hl,Ctrl_2
 343+ 9F3F CB 96            res 2,(hl)
 344+ 9F41
 345+ 9F41 2A F4 88         ld hl,(Puntero_mov)
 346+ 9F44 23               inc hl
 347+ 9F45 23               inc hl
 348+ 9F46 22 F4 88         ld (Puntero_mov),hl
 349+ 9F49
 350+ 9F49 7E               ld a,(hl)
 351+ 9F4A A7               and a
 352+ 9F4B CC CE 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F4E CA 0F 9F         jp z,Reinicia_el_movimiento
 354+ 9F51
 355+ 9F51 C9               ret
 356+ 9F52              ; Subrutinas -----------------------------------------
 357+ 9F52              ; ---------- --------- --------- ---------- ----------
 358+ 9F52              ;
 359+ 9F52              ;   24/07/23
 360+ 9F52              ;
 361+ 9F52              ;   Fijamos_bucle
 362+ 9F52              ;
 363+ 9F52              ;
 364+ 9F52
 365+ 9F52              Fijamos_bucle
 366+ 9F52
 367+ 9F52 3A F8 88         ld a,(Incrementa_puntero)
 368+ 9F55 3C               inc a
 369+ 9F56 32 F9 88         ld (Incrementa_puntero_backup),a
 370+ 9F59
 371+ 9F59 CD CE 9F         call Incrementa_Puntero_indice_mov
 372+ 9F5C 2A F2 88         ld hl,(Puntero_indice_mov)
 373+ 9F5F 22 F6 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F62 C9               ret
 375+ 9F63
 376+ 9F63              ; ---------- --------- --------- ---------- ----------
 377+ 9F63              ;
 378+ 9F63              ;   07/7/23
 379+ 9F63              ;
 380+ 9F63              ;   Inicia_Repetimos_movimiento
 381+ 9F63              ;
 382+ 9F63              ;
 383+ 9F63
 384+ 9F63              Inicia_Repetimos_movimiento
 385+ 9F63
 386+ 9F63              ; Iniciamos (Repetimos_movimiento).
 387+ 9F63
 388+ 9F63 DD 2A F4 88      ld ix,(Puntero_mov)
 389+ 9F67 DD 7E 02         ld a,(ix+2)
 390+ 9F6A 32 FC 88         ld (Repetimos_movimiento),a
 391+ 9F6D
 392+ 9F6D C9               ret
 393+ 9F6E
 394+ 9F6E              ; ---------- --------- --------- ---------- ----------
 395+ 9F6E              ;
 396+ 9F6E              ;   26/6/23
 397+ 9F6E              ;
 398+ 9F6E              ;   Inicia_Puntero_mov
 399+ 9F6E              ;
 400+ 9F6E              ;
 401+ 9F6E
 402+ 9F6E 2A F2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F71 5E               ld e,(hl)
 404+ 9F72 23               inc hl
 405+ 9F73 56               ld d,(hl)
 406+ 9F74 EB               ex de,hl
 407+ 9F75 22 F4 88         ld (Puntero_mov),hl
 408+ 9F78 C9               ret
 409+ 9F79
 410+ 9F79              ; ---------- --------- --------- ---------- ----------
 411+ 9F79              ;
 412+ 9F79              ;   27/06/23
 413+ 9F79              ;
 414+ 9F79              ;   Aplica_movimiento.
 415+ 9F79
 416+ 9F79              Aplica_desplazamiento
 417+ 9F79
 418+ 9F79              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F79
 420+ 9F79 2A F4 88         ld hl, (Puntero_mov)
 421+ 9F7C
 422+ 9F7C 7E               ld a,(hl)
 423+ 9F7D E6 F0            and $f0
 424+ 9F7F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F80
 426+ 9F80 CB 7E            bit 7,(hl)
 427+ 9F82 28 03            jr z,1F
 428+ 9F84 CD A4 99         call Mov_up
 429+ 9F87 2A F4 88     1 ld hl, (Puntero_mov)
 430+ 9F8A CB 76            bit 6,(hl)
 431+ 9F8C 28 03            jr z,2F
 432+ 9F8E CD 73 99         call Mov_down
 433+ 9F91 2A F4 88     2 ld hl, (Puntero_mov)
 434+ 9F94 CB 6E            bit 5,(hl)
 435+ 9F96 28 03            jr z,3F
 436+ 9F98 CD 05 9B         call Mov_left
 437+ 9F9B 2A F4 88     3 ld hl, (Puntero_mov)
 438+ 9F9E CB 66            bit 4,(hl)
 439+ 9FA0 C8               ret z
 440+ 9FA1 CD E7 99         call Mov_right
 441+ 9FA4 C9               ret
 442+ 9FA5
 443+ 9FA5              ; ---------- --------- --------- ---------- ----------
 444+ 9FA5              ;
 445+ 9FA5              ;   26/06/23
 446+ 9FA5              ;
 447+ 9FA5              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FA5
 449+ 9FA5              Ajusta_velocidad_desplazamiento
 450+ 9FA5
 451+ 9FA5              ; 1er byte de la cadena de movimiento.
 452+ 9FA5              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FA5
 454+ 9FA5 CD C3 9F         call Extrae_nibble_alto
 455+ 9FA8
 456+ 9FA8 32 DE 88         ld (Vel_up),a
 457+ 9FAB 79               ld a,c
 458+ 9FAC E6 0F            and $0f
 459+ 9FAE 32 DF 88         ld (Vel_down),a
 460+ 9FB1
 461+ 9FB1              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FB1              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FB1
 464+ 9FB1 23               inc hl
 465+ 9FB2 CD C3 9F         call Extrae_nibble_alto
 466+ 9FB5
 467+ 9FB5 32 DC 88         ld (Vel_left),a
 468+ 9FB8 79               ld a,c
 469+ 9FB9 E6 0F            and $0f
 470+ 9FBB 32 DD 88         ld (Vel_right),a
 471+ 9FBE
 472+ 9FBE              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FBE
 474+ 9FBE 23               inc hl
 475+ 9FBF 22 F4 88         ld (Puntero_mov),hl
 476+ 9FC2 C9               ret
 477+ 9FC3
 478+ 9FC3 06 04        Extrae_nibble_alto ld b,4
 479+ 9FC5 7E               ld a,(hl)
 480+ 9FC6 4F               ld c,a
 481+ 9FC7 E6 F0            and $f0
 482+ 9FC9 CB 3F        1 srl a
 483+ 9FCB 10 FC            djnz 1B
 484+ 9FCD C9               ret
 485+ 9FCE
 486+ 9FCE              ; ---------- --------- --------- ---------- ----------
 487+ 9FCE              ;
 488+ 9FCE              ;   5/7/23
 489+ 9FCE              ;
 490+ 9FCE              ;   Incrementa_Puntero_indice_mov
 491+ 9FCE
 492+ 9FCE              Incrementa_Puntero_indice_mov
 493+ 9FCE
 494+ 9FCE 21 F8 88         ld hl,Incrementa_puntero
 495+ 9FD1 34               inc (hl)
 496+ 9FD2
 497+ 9FD2 2A F2 88         ld hl,(Puntero_indice_mov)
 498+ 9FD5 01 02 00         ld bc,2
 499+ 9FD8 A7               and a
 500+ 9FD9 09               add hl,bc
 501+ 9FDA 22 F2 88         ld (Puntero_indice_mov),hl
 502+ 9FDD
 503+ 9FDD 7E               ld a,(hl)
 504+ 9FDE A7               and a
 505+ 9FDF
 506+ 9FDF              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FDF
 508+ 9FDF              ;    jr z,$
 509+ 9FDF
 510+ 9FDF              ;! Reinicia el Patrón de movimiento.
 511+ 9FDF
 512+ 9FDF CC E4 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FE2
 514+ 9FE2 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FE3
 516+ 9FE3 C9               ret
 517+ 9FE4
 518+ 9FE4
 519+ 9FE4              ; ---------- --------- --------- ---------- ----------
 520+ 9FE4              ;
 521+ 9FE4              ;   24/07/23
 522+ 9FE4              ;
 523+ 9FE4              ;   Inicializa_Puntero_indice_mov
 524+ 9FE4
 525+ 9FE4              Inicializa_Puntero_indice_mov
 526+ 9FE4
 527+ 9FE4              ; Existe etiqueta de bucle principal???
 528+ 9FE4
 529+ 9FE4 2A F6 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FE7 24               inc h
 531+ 9FE8 25               dec h
 532+ 9FE9 28 05            jr z,2F
 533+ 9FEB
 534+ 9FEB 22 F2 88         ld (Puntero_indice_mov),hl
 535+ 9FEE 18 14            jr 3F
 536+ 9FF0
 537+ 9FF0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FF0
 539+ 9FF0 3A F8 88     2 ld a,(Incrementa_puntero)
 540+ 9FF3 47               ld b,a
 541+ 9FF4
 542+ 9FF4 2A F2 88         ld hl,(Puntero_indice_mov)
 543+ 9FF7 2B           1 dec hl
 544+ 9FF8 2B               dec hl
 545+ 9FF9 10 FC            djnz 1B
 546+ 9FFB 22 F2 88         ld (Puntero_indice_mov),hl
 547+ 9FFE
 548+ 9FFE AF               xor a
 549+ 9FFF 32 F8 88         ld (Incrementa_puntero),a
 550+ A002 18 06            jr 4F
 551+ A004
 552+ A004 3A F9 88     3 ld a,(Incrementa_puntero_backup)
 553+ A007 32 F8 88         ld (Incrementa_puntero),a
 554+ A00A C9           4 ret
 555+ A00B
 556+ A00B
 557+ A00B
# file closed: Patrones_de_mov.asm
1646  A00B              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A00B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A00B              ;
   3+ A00B              ;	27/10/23
   4+ A00B              ;
   5+ A00B              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A00B
   7+ A00B              ;	ADC HL,SP	LD (addr),SP
   8+ A00B              ;	ADD HL,SP	LD SP,(addr)
   9+ A00B              ;	ADD IX,SP	LD SP,nn
  10+ A00B              ; 	ADD IY,SP	LD SP,HL
  11+ A00B              ;				LD SP,IX
  12+ A00B              ;	DEC SP		LD SP,IY
  13+ A00B
  14+ A00B              ;	EX (SP),HL
  15+ A00B              ;	EX (SP),IX
  16+ A00B              ;	EX (SP),IY
  17+ A00B
  18+ A00B              ;	INC SP
  19+ A00B
  20+ A00B                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E7 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A 04 89         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A F1 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A 04 89         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 1D 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A F1 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 23 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 15 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 1B 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 15 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 107+ 7FFC
 108+ 7FFC 5D               ld e,l
 109+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 110+ 7FFE
 111+ 7FFE 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 112+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 113+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 114+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 115+ 8004 FB               ei
 116+ 8005 C9               ret
 117+ 8006
 118+ 8006              ; ------------------------------------------------
 119+ 8006              ;
 120+ 8006              ;   19/10/23
 121+ 8006              ;
 122+ 8006              ;   La rutina estará situada justo después de:
 123+ 8006              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 124+ 8006
 125+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 126+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 127+ 8006
 128+ 8006                  org $72ec
 129+ 72EC
 130+ 72EC              Gestiona_albumes_de_fotos ; 12
 131+ 72EC
 132+ 72EC              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 133+ 72EC              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 134+ 72EC
 135+ 72EC 3A 3E 89         ld a,(Ctrl_Semaforo)
 136+ 72EF CB 47            bit 0,a
 137+ 72F1 28 5F            jr z,7F
 138+ 72F3
 139+ 72F3              ; Doble recolocación ???. Album_de_fotos_2 y Album_de_fotos_3 vacíos ???
 140+ 72F3
 141+ 72F3              ; Último FRAME impreso, vacío ?????????????????
 142+ 72F3
 143+ 72F3 CB 67            bit 4,a
 144+ 72F5 20 FE            jr nz,$
 145+ 72F7
 146+ 72F7 CB 5F            bit 3,a
 147+ 72F9 28 17            jr z,13F
 148+ 72FB
 149+ 72FB              ; Volcamos Álbum_3 a Álbum_2
 150+ 72FB              ;    ""    Álbum_2 a Álbum_1
 151+ 72FB              ; Situamos (Stack_snapshot) al comienzo de Album_de_fotos_2.
 152+ 72FB              ; Actualizamos (Semaforo)
 153+ 72FB              ; Inicializamos (Ctrl_Semaforo)
 154+ 72FB              ; Saltamos a 7F.
 155+ 72FB
 156+ 72FB CD F4 73         call Album3_a_Album2
 157+ 72FE CD 1B 74         call Album2_a_Album1
 158+ 7301 CD 4F 74         call Actualiza_punteros_de_albumes
 159+ 7304 CD 43 73         call Modifica_Stack_snapshot
 160+ 7307 21 3D 89     	ld hl,Semaforo
 161+ 730A CB 0E        	rrc (hl)
 162+ 730C AF               xor a
 163+ 730D 32 3E 89         ld (Ctrl_Semaforo),a
 164+ 7310 18 40            jr 7F
 165+ 7312
 166+ 7312
 167+ 7312              ;   Álbum_2 vacío ?????
 168+ 7312
 169+ 7312 CB 4F        13 bit 1,a
 170+ 7314 20 0A            jr nz,10F
 171+ 7316
 172+ 7316              ;   Álbum_1 vacío.
 173+ 7316
 174+ 7316              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 175+ 7316
 176+ 7316 3A 3D 89         ld a,(Semaforo)
 177+ 7319 CB 57            bit 2,a
 178+ 731B 28 FE            jr z,$
 179+ 731D
 180+ 731D CD 1B 74         call Album2_a_Album1
 181+ 7320
 182+ 7320              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 183+ 7320
 184+ 7320 3A 3D 89     10 ld a,(Semaforo)
 185+ 7323 CB 5F            bit 3,a
 186+ 7325 20 0B            jr nz,11F
 187+ 7327
 188+ 7327              ; Album_de_fotos_2 está vacío, (sus datos se han volcado a Album_de_fotos_1). Album_de_fotos_3 está incompleto por lo que no vamos a poder hacer el trasbase de datos del álbum_3 al álbum_2.
 189+ 7327              ; Activaremos el bit_3 de (Ctrl_Semaforo) para indicar este hecho.
 190+ 7327
 191+ 7327 21 3E 89         ld hl,Ctrl_Semaforo
 192+ 732A CB DE            set 3,(hl)
 193+ 732C CB 86            res 0,(hl)
 194+ 732E CB 96            res 2,(hl)
 195+ 7330 18 20            jr 7F
 196+ 7332
 197+ 7332              ; Album_de_fotos_3 contiene un FRAME completo.
 198+ 7332              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 199+ 7332
 200+ 7332 CD F4 73     11 call Album3_a_Album2     ;   X-X-X-0
 201+ 7335 CD 43 73         call Modifica_Stack_snapshot
 202+ 7338
 203+ 7338 21 3E 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 204+ 733B CB 86            res 0,(hl)
 205+ 733D CB 8E            res 1,(hl)
 206+ 733F CB 96            res 2,(hl)
 207+ 7341
 208+ 7341 18 0F            jr 7F
 209+ 7343
 210+ 7343 2A 31 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 211+ 7346 CD 81 8C     	call Extrae_address
 212+ 7349 22 1B 89     	ld (Stack_snapshot),hl
 213+ 734C 21 3D 89     	ld hl,Semaforo
 214+ 734F CB 0E        	rrc (hl)
 215+ 7351 C9               ret
 216+ 7352
 217+ 7352              ; #############################################################3
 218+ 7352
 219+ 7352              ;   En 1er lugar limpiamos el FRAME pintado.
 220+ 7352              ;   Vaciamos Album_de_fotos.
 221+ 7352
 222+ 7352              ;   Album_de_fotos. Contiene datos ???
 223+ 7352
 224+ 7352              ;! Ordena_Albumes
 225+ 7352
 226+ 7352 21 01 70     7 ld hl,Album_de_fotos+1
 227+ 7355 7E               ld a,(hl)
 228+ 7356 A7               and a
 229+ 7357 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 230+ 7359
 231+ 7359              ;   Hemos impreso Album_de_fotos.
 232+ 7359              ;   Limpiamos el álbum y actualizamos (End_Snapshot). !!!!!!!!!!!!!!
 233+ 7359
 234+ 7359 2A 1F 89         ld hl,(End_Snapshot)
 235+ 735C 01 00 70         ld bc,Album_de_fotos
 236+ 735F 11 01 70         ld de,Album_de_fotos+1
 237+ 7362 AF               xor a
 238+ 7363 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 239+ 7364
 240+ 7364 CD 42 74         call Limpia_album
 241+ 7367
 242+ 7367 21 00 00         ld hl,0
 243+ 736A 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 244+ 736D
 245+ 736D              ; ----- ----- ----- -----
 246+ 736D
 247+ 736D              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 248+ 736D              ;   Album_de_fotos_1. Contiene un frame completo ???
 249+ 736D
 250+ 736D 3A 3D 89     3 ld a,(Semaforo)
 251+ 7370 CB 4F            bit 1,a
 252+ 7372 20 08            jr nz,4F
 253+ 7374
 254+ 7374              ;! Buffer vacío !!!!!!!!!!!!!!!!!!!!!!!!!
 255+ 7374
 256+ 7374 21 3E 89         ld hl,Ctrl_Semaforo
 257+ 7377 CB C6            set 0,(hl)
 258+ 7379 CB E6            set 4,(hl)
 259+ 737B C9               ret
 260+ 737C
 261+ 737C              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 262+ 737C
 263+ 737C 21 55 70     4 ld hl,Album_de_fotos_1+1
 264+ 737F 7E               ld a,(hl)
 265+ 7380 A7               and a
 266+ 7381 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 267+ 7383
 268+ 7383              ; ----- ----- ----- -----
 269+ 7383              ; ----- ----- ----- -----
 270+ 7383
 271+ 7383              ;   Album_de_fotos_1 Contiene un frame completo que hay que volcar en Album_de_fotos.
 272+ 7383              ;   Actualiza (End_Snapshot).
 273+ 7383
 274+ 7383 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 275+ 7386 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 276+ 7389 11 00 70         ld de,Album_de_fotos        ; Destino.
 277+ 738C
 278+ 738C CD 42 74         call Limpia_album
 279+ 738F
 280+ 738F              ;   Calculamos (End_Snapshot)
 281+ 738F
 282+ 738F A7               and a
 283+ 7390 ED 4A            adc hl,bc
 284+ 7392 22 1F 89         ld (End_Snapshot),hl
 285+ 7395
 286+ 7395              ;   Limpiamos Album_de_fotos_1.
 287+ 7395
 288+ 7395 2A 25 89         ld hl,(End_Snapshot_1)
 289+ 7398 01 54 70         ld bc,Album_de_fotos_1
 290+ 739B 11 55 70         ld de,Album_de_fotos_1+1
 291+ 739E AF               xor a
 292+ 739F 02               ld (bc),a
 293+ 73A0
 294+ 73A0 CD 42 74         call Limpia_album
 295+ 73A3
 296+ 73A3 21 00 00         ld hl,0
 297+ 73A6 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 298+ 73A9
 299+ 73A9              ; ----- ----- ----- -----
 300+ 73A9
 301+ 73A9              ;   Album_de_fotos_2.
 302+ 73A9
 303+ 73A9 3A 3E 89     1 ld a,(Ctrl_Semaforo)
 304+ 73AC CB 5F            bit 3,a
 305+ 73AE 20 36            jr nz,8F
 306+ 73B0
 307+ 73B0              ;   El bit_3 de (Ctrl_Semaforo) activo, indica que después de reestructurar, Album_de_fotos_2 está vacío por que Album_de_fotos_3 no está completo.
 308+ 73B0              ;   Tenemos que salir de la rutina sin modificar punteros para completar Album_de_fotos_3.
 309+ 73B0              ;   Activaremos el bit_0 y el bit_1 de (Ctrl_Semaforo) para volver a reestructurar y volcar sus datos a Album_de_fotos_2.
 310+ 73B0
 311+ 73B0              ;   Contiene Frame completo ???
 312+ 73B0
 313+ 73B0 3A 3D 89     12 ld a,(Semaforo)
 314+ 73B3 CB 57            bit 2,a
 315+ 73B5 20 13            jr nz,5F
 316+ 73B7
 317+ 73B7              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 318+ 73B7
 319+ 73B7 21 A9 70         ld hl,Album_de_fotos_2+1
 320+ 73BA 7E               ld a,(hl)
 321+ 73BB A7               and a
 322+ 73BC 20 04            jr nz,9F
 323+ 73BE
 324+ 73BE              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 325+ 73BE              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 326+ 73BE
 327+ 73BE CD 4F 74         call Actualiza_punteros_de_albumes
 328+ 73C1
 329+ 73C1              ;! Debuggggggggggggggggggggggggggggggg
 330+ 73C1              ;    jr $
 331+ 73C1
 332+ 73C1 C9               ret
 333+ 73C2
 334+ 73C2              ;   Album_de_fotos_3 no está completo.
 335+ 73C2
 336+ 73C2 21 3E 89     9 ld hl,Ctrl_Semaforo
 337+ 73C5 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 338+ 73C7 CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 339+ 73C9 C9               ret
 340+ 73CA
 341+ 73CA 21 A9 70     5 ld hl,Album_de_fotos_2+1
 342+ 73CD 7E               ld a,(hl)
 343+ 73CE A7               and a
 344+ 73CF 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 345+ 73D1
 346+ 73D1              ; ----- ----- ----- -----
 347+ 73D1              ; ----- ----- ----- -----
 348+ 73D1              ; ----- ----- ----- -----
 349+ 73D1
 350+ 73D1              ;   Album_de_fotos_2 contiene un frame completo.
 351+ 73D1              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 352+ 73D1
 353+ 73D1 CD 1B 74         call Album2_a_Album1
 354+ 73D4
 355+ 73D4              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 356+ 73D4              ;   Album_de_fotos_3. Contiene un frame completo ???
 357+ 73D4
 358+ 73D4 3A 3D 89     2 ld a,(Semaforo)
 359+ 73D7 CB 5F            bit 3,a
 360+ 73D9 20 13            jr nz,6F
 361+ 73DB
 362+ 73DB              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 363+ 73DB
 364+ 73DB 21 FD 70         ld hl,Album_de_fotos_3+1
 365+ 73DE 7E               ld a,(hl)
 366+ 73DF A7               and a
 367+ 73E0 20 04            jr nz,8F
 368+ 73E2
 369+ 73E2              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 370+ 73E2              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 371+ 73E2
 372+ 73E2 CD 4F 74         call Actualiza_punteros_de_albumes
 373+ 73E5 C9               ret
 374+ 73E6
 375+ 73E6              ;   Album_de_fotos_3 no está completo.
 376+ 73E6
 377+ 73E6 21 3E 89     8 ld hl,Ctrl_Semaforo
 378+ 73E9 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 379+ 73EB CB CE            set 1,(hl)
 380+ 73ED C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 381+ 73EE
 382+ 73EE              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 383+ 73EE
 384+ 73EE 21 FD 70     6 ld hl,Album_de_fotos_3+1
 385+ 73F1 7E               ld a,(hl)
 386+ 73F2 A7               and a
 387+ 73F3 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 388+ 73F4
 389+ 73F4              ; ----- ----- ----- -----
 390+ 73F4              ; ----- ----- ----- -----
 391+ 73F4              ; ----- ----- ----- -----
 392+ 73F4
 393+ 73F4              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2 y limpiamos Album_de_fotos_3.
 394+ 73F4
 395+ 73F4 2A 2D 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 396+ 73F7 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 397+ 73FA 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 398+ 73FD
 399+ 73FD CD 42 74         call Limpia_album
 400+ 7400
 401+ 7400              ;   Actualizamos (End_Snapshot_2):
 402+ 7400
 403+ 7400 A7               and a
 404+ 7401 ED 4A            adc hl,bc
 405+ 7403 22 29 89         ld (End_Snapshot_2),hl
 406+ 7406
 407+ 7406              ;   Limpiamos Album_de_fotos_3.
 408+ 7406
 409+ 7406 2A 2D 89         ld hl,(End_Snapshot_3)
 410+ 7409 01 FC 70         ld bc,Album_de_fotos_3
 411+ 740C 11 FD 70         ld de,Album_de_fotos_3+1
 412+ 740F AF               xor a
 413+ 7410 02               ld (bc),a
 414+ 7411 CD 42 74         call Limpia_album
 415+ 7414
 416+ 7414              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 417+ 7414              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 418+ 7414
 419+ 7414 21 00 00         ld hl,0
 420+ 7417 22 2D 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 421+ 741A
 422+ 741A C9               ret
 423+ 741B
 424+ 741B 2A 29 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 425+ 741E 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 426+ 7421 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 427+ 7424 CD 42 74         call Limpia_album
 428+ 7427
 429+ 7427              ;   Actualizamos (End_Snapshot_1):
 430+ 7427
 431+ 7427 A7               and a
 432+ 7428 ED 4A            adc hl,bc
 433+ 742A 22 25 89         ld (End_Snapshot_1),hl
 434+ 742D
 435+ 742D              ;   Limpiamos Album_de_fotos_2.
 436+ 742D
 437+ 742D 2A 29 89         ld hl,(End_Snapshot_2)
 438+ 7430 01 A8 70         ld bc,Album_de_fotos_2
 439+ 7433 11 A9 70         ld de,Album_de_fotos_2+1
 440+ 7436 AF               xor a
 441+ 7437 02               ld (bc),a
 442+ 7438 CD 42 74         call Limpia_album
 443+ 743B 21 00 00         ld hl,0
 444+ 743E 22 29 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 445+ 7441 C9               ret
 446+ 7442
 447+ 7442
 448+ 7442              ; ----------------------------------------------------
 449+ 7442              ;
 450+ 7442              ;   10/8/23
 451+ 7442              ;
 452+ 7442              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 453+ 7442              ;
 454+ 7442              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 455+ 7442              ;           BC ..... Dirección de inicio del álbum.
 456+ 7442              ;           DE ..... Dirección de inicio del álbum. +1
 457+ 7442
 458+ 7442              ;    ld hl,(End_Snapshot)
 459+ 7442              ;    ld bc,Album_de_fotos
 460+ 7442              ;    ld de,Album_de_fotos+1
 461+ 7442
 462+ 7442              ;   MODIFICA: A,HL,BC y DE.
 463+ 7442
 464+ 7442              Limpia_album
 465+ 7442 D5               push de                     ; Guardo DESTINO.
 466+ 7443 C5               push bc                     ; Guardo ORIGEN.
 467+ 7444 ED 42            sbc hl,bc
 468+ 7446 4D               ld c,l
 469+ 7447 44               ld b,h
 470+ 7448 E1               pop hl
 471+ 7449 C5               push bc
 472+ 744A ED B0            ldir
 473+ 744C C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 474+ 744D E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 475+ 744E C9               ret                         ; _ a otro).
 476+ 744F
 477+ 744F              ; --------------------------------------------------------------------------------------------
 478+ 744F              ;
 479+ 744F              ;   20/10/23
 480+ 744F
 481+ 744F              ;
 482+ 744F
 483+ 744F              Actualiza_punteros_de_albumes
 484+ 744F
 485+ 744F 2A 31 89         ld hl,(Puntero_indice_album_de_fotos)
 486+ 7452 2B               dec hl
 487+ 7453 2B               dec hl
 488+ 7454 22 31 89         ld (Puntero_indice_album_de_fotos),hl
 489+ 7457
 490+ 7457 2A 35 89         ld hl,(Puntero_indice_End_Snapshot)
 491+ 745A 2B               dec hl
 492+ 745B 2B               dec hl
 493+ 745C 22 35 89         ld (Puntero_indice_End_Snapshot),hl
 494+ 745F CD 81 8C         call Extrae_address
 495+ 7462 22 39 89         ld (Puntero_de_End_Snapshot),hl
 496+ 7465
 497+ 7465 C9               ret
 498+ 7466
# file closed: Guarda_foto_registros.asm
1647  7466
1648  7466              	SAVESNA "Pruebas.sna", START
1649  7466
1650  7466
1651  7466
1652  7466
# file closed: Banco_de_pruebas.asm
