# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 6E A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 3F 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 87 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 97 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1	 							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 07           Lives db 7
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD F0 94     	call Cls
 517  8CA2 CD 7C 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD E9 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD FB 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3              ;	Inicia los álbumes de líneas.
 529  8CB3
 530  8CB3 CD CE 90     	call Inicia_albumes_de_lineas
 531  8CB6 CD DE 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CB9 CD EB 90     	call Inicia_albumes_de_disparos
 533  8CBC
 534  8CBC              ;	Inicia 1er Nivel.
 535  8CBC
 536  8CBC CD 4B 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CBF CD 19 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CC2              ;														   _reponiendo entidades eliminadas.
 539  8CC2 CD 7F 93     	call Prepara_Cajas_de_Entidades
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD D0 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD BF 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD 13 94     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 91 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD AC 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD 07 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 87 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE              ; Gestión de disparos.
 593  8CFE
 594  8CFE CD D0 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D01 CD 85 9F     	call Motor_de_disparos_entidades
 596  8D04 CD 1A A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D07
 598  8D07              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D07              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D07              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D07
 602  8D07 CD BB A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0A
 604  8D0A              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0A
 606  8D0A 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0D 35           	dec (hl)
 608  8D0E CC 11 8E     	call z,Autoriza_disparo_de_entidades
 609  8D11
 610  8D11 2A 7F 8C     	ld hl,(Clock_next_entity)
 611  8D14 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D18 A7           	and a
 613  8D19 ED 42        	sbc hl,bc
 614  8D1B 20 16        	jr nz,1F
 615  8D1D
 616  8D1D              ; GESTIÓN DE ENTIDADES.
 617  8D1D
 618  8D1D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1D              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1D
 621  8D1D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1D
 625  8D1D 21 37 8C     	ld hl,Numero_parcial_de_entidades
 626  8D20 46           	ld b,(hl)
 627  8D21 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D24 B8           	cp b
 629  8D25 28 0C        	jr z,1F
 630  8D27 30 0A        	jr nc,1F
 631  8D29
 632  8D29              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D29
 634  8D29 3C           	inc a
 635  8D2A 32 38 8C     	ld (Entidades_en_curso),a
 636  8D2D
 637  8D2D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2D
 639  8D2D CD FB 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D30 CD 17 8F     	call Define_Clock_next_entity
 641  8D33
 642  8D33 3A 38 8C     1 ld a,(Entidades_en_curso)
 643  8D36 A7           	and a
 644  8D37 CA BC 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3A 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3B
 647  8D3B              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3B
 649  8D3B              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3B              ;
 651  8D3B              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3B
 653  8D3B 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3E 22 61 8C     	ld (India_SP),hl
 655  8D41
 656  8D41 21 65 8C     	ld hl,Ctrl_3
 657  8D44 CB D6        	set 2,(hl)
 658  8D46 CD A5 8E     	call Change
 659  8D49
 660  8D49 C5           2 push bc 												; Nº de entidades en curso.
 661  8D4A
 662  8D4A              ;	di
 663  8D4A              ;	ld hl,Ctrl_4
 664  8D4A              ;	bit 0,(hl)
 665  8D4A              ;	jr nz,$
 666  8D4A              ;	ei
 667  8D4A
 668  8D4A DD 2A 2E 8C  	ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 669  8D4E CD 58 91     	call Salta_caja_de_entidades_vacia
 670  8D51
 671  8D51              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 672  8D51              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 673  8D51
 674  8D51 3A 6C 8C     	ld a,(Impacto2)
 675  8D54 CB 5F        	bit 3,a
 676  8D56 C4 B1 A1     	call nz,Compara_con_coordenadas_de_disparo
 677  8D59
 678  8D59              ; Existe colisión entre esta entidad y Amadeus ???
 679  8D59
 680  8D59 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 681  8D5C CB 4F        	bit 1,a
 682  8D5E C4 64 92     	call nz,Genera_explosion
 683  8D61 20 3C        	jr nz,Gestiona_siguiente_entidad
 684  8D63
 685  8D63 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 686  8D66 A7           	and a
 687  8D67 28 0C        	jr z,3F
 688  8D69
 689  8D69              ; IMPACTO en entidad por colisión con Amadeus.
 690  8D69
 691  8D69              ; 5/7/24
 692  8D69              ; Nota importante:
 693  8D69              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 694  8D69              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 695  8D69              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 696  8D69
 697  8D69 3A BB 89     	ld a,(Impacto_Amadeus)
 698  8D6C A7           	and a
 699  8D6D C4 64 92     	call nz,Genera_explosion
 700  8D70 20 2D        	jr nz,Gestiona_siguiente_entidad
 701  8D72
 702  8D72              ; Falsa colisión !!!
 703  8D72
 704  8D72 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 705  8D75
 706  8D75              ; -------------------------------------------
 707  8D75
 708  8D75 CD 5B 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 709  8D78 CD 7D 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 710  8D7B CD 4B 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 711  8D7E
 712  8D7E DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 713  8D80 DD 2A F3 8B  	ld ix,(Puntero_de_impresion)
 714  8D84 CD 30 95     	call Genera_datos_de_impresion
 715  8D87 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 716  8D89
 717  8D89 CD 36 94     	call Decrementa_Contador_de_mov_masticados
 718  8D8C
 719  8D8C              ; -------------------------------------------
 720  8D8C
 721  8D8C              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 722  8D8C
 723  8D8C 2A F3 8B     	ld hl,(Puntero_de_impresion)
 724  8D8F CD 04 95     	call Genera_coordenadas
 725  8D92
 726  8D92 ED 4B EF 8B  	ld bc,(Coordenada_X)
 727  8D96
 728  8D96 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 729  8D99 DD 70 02     	ld (ix+2),b
 730  8D9C
 731  8D9C              ; TODO: Generamos disparo ???
 732  8D9C
 733  8D9C              ;	ld a,(Permiso_de_disparo_Entidades)
 734  8D9C              ;	and a
 735  8D9C              ;	call nz,Entidad_genera_disparo_si_procede
 736  8D9C
 737  8D9C CD 35 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 738  8D9F
 739  8D9F              Gestiona_siguiente_entidad
 740  8D9F
 741  8D9F CD 67 91     	call Incrementa_punteros_de_cajas
 742  8DA2
 743  8DA2 C1           	pop bc
 744  8DA3 10 A4        	djnz 2B
 745  8DA5
 746  8DA5              ; Hemos gestionado todas las entidades.
 747  8DA5              ; ----- ----- -----
 748  8DA5
 749  8DA5 CD 6F 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 750  8DA8 CD 86 8F     	call Ordena_tabla_de_impresion
 751  8DAB CD 07 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 752  8DAE
 753  8DAE CD 2C 8F     	call Borra_diferencia
 754  8DB1
 755  8DB1 3A 65 8C     	ld a,(Ctrl_3)
 756  8DB4 CB 5F        	bit 3,a
 757  8DB6 20 04        	jr nz,Gestion_de_Amadeus
 758  8DB8
 759  8DB8 EB           	ex de,hl
 760  8DB9 71           	ld (hl),c
 761  8DBA 2C           	inc l
 762  8DBB 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 763  8DBC
 764  8DBC              ;! GESTIONA AMADEUS !!!!!!!!!!
 765  8DBC
 766  8DBC              Gestion_de_Amadeus
 767  8DBC
 768  8DBC 21 65 8C     	ld hl,Ctrl_3
 769  8DBF CB 76        	bit 6,(hl)
 770  8DC1 28 13        	jr z,Amadeus_vivo
 771  8DC3
 772  8DC3              ; Amadeus ha sido destruido.
 773  8DC3              ; Decrementa (Temp_new_live).
 774  8DC3
 775  8DC3 21 79 8C     	ld hl,Temp_new_live
 776  8DC6 35           	dec (hl)
 777  8DC7 20 26        	jr nz,End_frame
 778  8DC9
 779  8DC9              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 780  8DC9
 781  8DC9 21 92 8C     	ld hl,Lives
 782  8DCC 35           	dec (hl)
 783  8DCD
 784  8DCD              ;! Fin del juego
 785  8DCD
 786  8DCD F3           	di
 787  8DCE 28 FE        	jr z,$
 788  8DD0 FB           	ei
 789  8DD1
 790  8DD1              ; Nueva nave.
 791  8DD1
 792  8DD1 CD 43 8E     	call Reinicia_Amadeus
 793  8DD4 18 19        	jr End_frame
 794  8DD6
 795  8DD6              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 796  8DD6
 797  8DD6              Amadeus_vivo
 798  8DD6
 799  8DD6 3A BB 89     	ld a,(Impacto_Amadeus)
 800  8DD9 A7           	and a
 801  8DDA C4 B4 92     	call nz, Genera_explosion_Amadeus
 802  8DDD 20 10        	jr nz, End_frame
 803  8DDF
 804  8DDF CD 41 92     	call Teclado
 805  8DE2 21 65 8C     	ld hl,Ctrl_3
 806  8DE5
 807  8DE5 CB 6E        	bit 5,(hl)
 808  8DE7 28 06        	jr z,End_frame
 809  8DE9
 810  8DE9              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 811  8DE9
 812  8DE9 CD C0 8E     	call Change_Amadeus
 813  8DEC CD AC 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 814  8DEF
 815  8DEF              End_frame
 816  8DEF
 817  8DEF              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 818  8DEF              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 819  8DEF
 820  8DEF CD DC A0     	call Genera_datos_de_impresion_disparos_Entidades
 821  8DF2 CD A0 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 822  8DF5 CD F6 A1     	call Calcula_bytes_pintado_disparos
 823  8DF8 CD 03 A2     	call Limpia_album_de_pintado_disparos_entidades
 824  8DFB
 825  8DFB              ; ------------ ------------- --------------
 826  8DFB
 827  8DFB 2A 43 8C     	ld hl,(Album_de_borrado)
 828  8DFE 22 5F 8C     	ld (Scanlines_album_SP),hl
 829  8E01
 830  8E01 21 65 8C     	ld hl,Ctrl_3
 831  8E04 CB C6        	set 0,(hl) 											; Indica Frame completo.
 832  8E06 CB 9E        	res 3,(hl)
 833  8E08 CB A6        	res 4,(hl)
 834  8E0A
 835  8E0A AF           	xor a
 836  8E0B D3 FE        	out ($fe),a
 837  8E0D
 838  8E0D 76           	halt
 839  8E0E
 840  8E0E              ; ----------------------------------------
 841  8E0E
 842  8E0E              ;	ld a,(Ctrl_1) 										; Existe Loop?
 843  8E0E              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 844  8E0E CA FE 8C     	jp z,Main
 845  8E11
 846  8E11              ;------------------------------------------
 847  8E11              ;
 848  8E11              ;	07/11/24
 849  8E11
 850  8E11              Autoriza_disparo_de_entidades
 851  8E11
 852  8E11 3E 01        	ld a,1
 853  8E13 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 854  8E16
 855  8E16 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 856  8E19 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 857  8E1B 38 02        	jr c,1F
 858  8E1D
 859  8E1D              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 860  8E1D              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 861  8E1D              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 862  8E1D
 863  8E1D D6 03        	sub 3
 864  8E1F
 865  8E1F 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 866  8E22 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 867  8E25
 868  8E25 C9           	ret
 869  8E26
 870  8E26              ;------------------------------------------
 871  8E26              ;
 872  8E26              ;	14/09/24
 873  8E26              ;
 874  8E26              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 875  8E26
 876  8E26              Entidad_genera_disparo_si_procede
 877  8E26
 878  8E26 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 879  8E29 CB 06        	rlc (hl)
 880  8E2B
 881  8E2B DC 2C A1     	call c,Genera_disparo_de_entidad_maldosa
 882  8E2E
 883  8E2E C9           	ret
 884  8E2F
 885  8E2F              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 886  8E2F              ;
 887  8E2F              ;	30/09/24
 888  8E2F
 889  8E2F              Actuaiza_sp_de_disparos_de_entidades
 890  8E2F
 891  8E2F 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 892  8E32 23           	inc hl
 893  8E33 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 894  8E36
 895  8E36 11 FD 88     	ld de,Numeros_aleatorios+7
 896  8E39 7B           	ld a,e
 897  8E3A 95           	sub l
 898  8E3B C0           	ret nz
 899  8E3C
 900  8E3C 21 F6 88     1 ld hl,Numeros_aleatorios
 901  8E3F 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 902  8E42 C9           	ret
 903  8E43
 904  8E43              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 905  8E43              ;
 906  8E43              ;	24/07/24
 907  8E43
 908  8E43              Reinicia_Amadeus
 909  8E43
 910  8E43              ;	Reinicia posición y estado.
 911  8E43
 912  8E43 21 CF 50     	ld hl,$50cf
 913  8E46 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 914  8E49 21 CC DC     	ld hl,$dccc
 915  8E4C 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 916  8E4F 21 3D 00     	ld hl,$003d
 917  8E52 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 918  8E55
 919  8E55              ;	limpiamos el álbum de borrado.
 920  8E55
 921  8E55 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 922  8E58
 923  8E58 AF           	xor a
 924  8E59 77           	ld (hl),a
 925  8E5A
 926  8E5A E5           	push hl
 927  8E5B D1           	pop de
 928  8E5C 13           	inc de
 929  8E5D
 930  8E5D 01 23 00     	ld bc,35
 931  8E60 ED B0        	ldir
 932  8E62
 933  8E62 CD AC 90     	call Genera_datos_de_impresion_Amadeus
 934  8E65
 935  8E65              ;	Reinicia temporizaciones.
 936  8E65
 937  8E65 CD 87 91     	call Inicia_Shield
 938  8E68
 939  8E68 3E 5A        	ld a,90
 940  8E6A 32 8F 8C     	ld (Shield),a
 941  8E6D
 942  8E6D 3E 64        	ld a,100
 943  8E6F 32 79 8C     	ld (Temp_new_live),a
 944  8E72
 945  8E72              ; 	Restauramos el FLAG: Amadeus vivo.
 946  8E72
 947  8E72 21 65 8C     	ld hl,Ctrl_3
 948  8E75 CB B6        	res 6,(hl)
 949  8E77
 950  8E77              ;	Fuerza la impresión de la nave en el siguiente frame.
 951  8E77
 952  8E77 21 65 8C      	ld hl,Ctrl_3
 953  8E7A CB EE        	set 5,(hl)
 954  8E7C
 955  8E7C C9           	ret
 956  8E7D
 957  8E7D              ; --------------------------------------------------------------------------------------------------------------
 958  8E7D              ;
 959  8E7D              ;	23/11/24
 960  8E7D
 961  8E7D              Ajusta_velocidad_entidad
 962  8E7D
 963  8E7D DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 964  8E80 A7           	and a
 965  8E81 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 966  8E82              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 967  8E82              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 968  8E82
 969  8E82
 970  8E82              ; Incrementa (Contador_de_vueltas)x2.
 971  8E82              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 972  8E82
 973  8E82              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 974  8E82              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 975  8E82              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 976  8E82              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 977  8E82              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 978  8E82
 979  8E82
 980  8E82 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 981  8E84 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 982  8E87 E6 10        	and $10
 983  8E89 C8           	ret z
 984  8E8A
 985  8E8A              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 986  8E8A
 987  8E8A DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
 988  8E8D CB 2F        	sra a
 989  8E8F CB 2F        	sra a
 990  8E91 DD 77 0B     	ld (ix+11),a
 991  8E94
 992  8E94 DD 6E 07     	ld l,(ix+7)
 993  8E97 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
 994  8E9A
 995  8E9A              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
 996  8E9A 23           	inc hl
 997  8E9B 23           	inc hl
 998  8E9C 23           	inc hl
 999  8E9D 23           	inc hl
1000  8E9E              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1001  8E9E
1002  8E9E DD 75 07     	ld (ix+7),l
1003  8EA1 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1004  8EA4
1005  8EA4 C9           	ret
1006  8EA5
1007  8EA5              ; --------------------------------------------------------------------------------------------------------------
1008  8EA5              ;
1009  8EA5              ;	25/08/24
1010  8EA5
1011  8EA5              Change
1012  8EA5
1013  8EA5 3A 5C 8C     	ld a,(Switch)
1014  8EA8 EE 01        	xor 1
1015  8EAA 32 5C 8C     	ld (Switch),a
1016  8EAD 2A 41 8C     	ld hl,(Album_de_pintado)
1017  8EB0 ED 5B 43 8C  	ld de,(Album_de_borrado)
1018  8EB4 EB           	ex de,hl
1019  8EB5 22 41 8C     	ld (Album_de_pintado),hl
1020  8EB8 22 5F 8C     	ld (Scanlines_album_SP),hl
1021  8EBB ED 53 43 8C  	ld (Album_de_borrado),de
1022  8EBF C9           	ret
1023  8EC0
1024  8EC0              Change_Amadeus
1025  8EC0
1026  8EC0 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1027  8EC3 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1028  8EC7 EB           	ex de,hl
1029  8EC8 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1030  8ECB ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1031  8ECF C9           	ret
1032  8ED0
1033  8ED0              Change_Disparos
1034  8ED0
1035  8ED0              ; Álbumes de Amadeus.
1036  8ED0
1037  8ED0 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1038  8ED3 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1039  8ED7 EB           	ex de,hl
1040  8ED8 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1041  8EDB ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1042  8EDF CD EB A1     	call Limpia_album_de_pintado_disparos_Amadeus
1043  8EE2
1044  8EE2              ; Álbumes de entidades.
1045  8EE2
1046  8EE2 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1047  8EE5 ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1048  8EE9 EB           	ex de,hl
1049  8EEA 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1050  8EED ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1051  8EF1 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1052  8EF4
1053  8EF4 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1054  8EF7 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1055  8EFA
1056  8EFA C9           	ret
1057  8EFB
1058  8EFB              ; ------------------------------------
1059  8EFB              ;
1060  8EFB              ; 1/05/24
1061  8EFB
1062  8EFB              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1063  8EFB              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1064  8EFB
1065  8EFB              ;	DESTRUYE: HL,DE,A
1066  8EFB              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1067  8EFB
1068  8EFB              ;	Variables implicadas: (RND_SP).
1069  8EFB
1070  8EFB              Extrae_numero_aleatorio_y_avanza
1071  8EFB
1072  8EFB 21 00 89     	ld hl,Tabla_de_pintado
1073  8EFE EB           	ex de,hl
1074  8EFF 2A 7A 8C     	ld hl,(RND_SP)
1075  8F02 EB           	ex de,hl
1076  8F03 A7           	and a
1077  8F04 ED 52        	sbc hl,de
1078  8F06
1079  8F06 2A 7A 8C     	ld hl,(RND_SP)
1080  8F09 20 06        	jr nz,1F
1081  8F0B
1082  8F0B              ; Sitúa HL al principio de la tabla de nº aleatorios.
1083  8F0B
1084  8F0B 21 F6 88     	ld hl,Numeros_aleatorios
1085  8F0E 22 7A 8C     	ld (RND_SP),HL
1086  8F11
1087  8F11              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1088  8F11
1089  8F11 7E           1 ld a,(hl)
1090  8F12 23           	inc hl
1091  8F13 22 7A 8C     	ld (RND_SP),hl
1092  8F16 C9           	ret
1093  8F17
1094  8F17              ; ------------------------------------
1095  8F17              ;
1096  8F17              ; 1/05/24
1097  8F17
1098  8F17              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1099  8F17              ; (1 a 4 segundos).
1100  8F17              ; Actualizamos (Clock_next_entity) con A.
1101  8F17
1102  8F17              ;	DESTRUYE: A y B.
1103  8F17              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1104  8F17              ;			 Actualiza (Clock_next_entity) con A.
1105  8F17
1106  8F17              ;	Variables implicadas: (Clock_next_entity).
1107  8F17
1108  8F17              ; Notas:
1109  8F17
1110  8F17              ; 	$32 1 seg.
1111  8F17              ; 	$64 2 seg.
1112  8F17              ; 	$96 3 seg.
1113  8F17              ; 	$c8 4 seg.
1114  8F17              ; 	$fa 5 seg.
1115  8F17
1116  8F17              ; $ffff 1310,7 seg, 22 minutos.
1117  8F17
1118  8F17              ;	$0100  5 seg. aproximadamente.
1119  8F17              ;	$0200 10 seg. aproximadamente.
1120  8F17              ;	$0300 15 seg. aproximadamente.
1121  8F17              ;	$0400 20 seg. aproximadamente.
1122  8F17              ;	$0500 25 seg. aproximadamente.
1123  8F17              ;	$0600 30 seg. aproximadamente.
1124  8F17
1125  8F17              Define_Clock_next_entity
1126  8F17
1127  8F17 FE 34        	cp $34
1128  8F19 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1129  8F1B
1130  8F1B              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1131  8F1B
1132  8F1B 4F           3 ld c,a
1133  8F1C 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1134  8F1E 2A 78 5C     	ld hl,(FRAMES)
1135  8F21 A7           	and a
1136  8F22 ED 4A        	adc hl,bc
1137  8F24 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1138  8F27 C9           	ret
1139  8F28
1140  8F28 3E 34        1 ld a,$34
1141  8F2A 18 EF        	jr 3B
1142  8F2C
1143  8F2C              ; ------------------------------------
1144  8F2C              ;
1145  8F2C              ; 18/03/24
1146  8F2C
1147  8F2C              Borra_diferencia
1148  8F2C
1149  8F2C ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1150  8F30
1151  8F30 3A 5C 8C     	ld a,(Switch)
1152  8F33 A7           	and a
1153  8F34 28 08        	jr z,2F
1154  8F36
1155  8F36 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1156  8F39 11 5A 8C     	ld de,Techo_Scanlines_album_2
1157  8F3C 18 06        	jr 3F
1158  8F3E
1159  8F3E 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1160  8F41 11 58 8C     	ld de,Techo_Scanlines_album
1161  8F44
1162  8F44              ; Diferencia.
1163  8F44
1164  8F44 ED 42        3 sbc hl,bc
1165  8F46
1166  8F46 C8           	ret z
1167  8F47 D8           	ret c
1168  8F48
1169  8F48              ; Nuevo techo, (más bajo que el anterior).
1170  8F48              ; Fijamos nuevo techo y borramos bytes sobrantes.
1171  8F48
1172  8F48 EB           	ex de,hl
1173  8F49
1174  8F49 71           	ld (hl),c
1175  8F4A 2C           	inc l
1176  8F4B 70           	ld (hl),b
1177  8F4C
1178  8F4C AF           	xor a
1179  8F4D 43           	ld b,e
1180  8F4E
1181  8F4E 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1182  8F51
1183  8F51 77           1 ld (hl),a
1184  8F52 23           	inc hl
1185  8F53 10 FC        	djnz 1B
1186  8F55
1187  8F55              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1188  8F55
1189  8F55 21 65 8C     	ld hl,Ctrl_3
1190  8F58 CB DE        	set 3,(hl)
1191  8F5A
1192  8F5A C9           	ret
1193  8F5B
1194  8F5B              ; --------------------------------------------------------------------------------------------------------------
1195  8F5B              ;
1196  8F5B              ;	23/11/24
1197  8F5B              ;
1198  8F5B              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1199  8F5B
1200  8F5B              Entidad_a_Tabla_de_pintado
1201  8F5B
1202  8F5B              ; Almacena la Coordenada Y de la entidad en curso.
1203  8F5B
1204  8F5B              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1205  8F5B
1206  8F5B DD 7E 02     	ld a,(ix+2)
1207  8F5E 2A 61 8C     	ld hl,(India_SP)
1208  8F61 77           	ld (hl),a
1209  8F62 2C           	inc l
1210  8F63
1211  8F63              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1212  8F63
1213  8F63 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1214  8F67
1215  8F67 73           	ld (hl),e
1216  8F68 2C           	inc l
1217  8F69 72           	ld (hl),d
1218  8F6A 2C           	inc l
1219  8F6B
1220  8F6B 22 61 8C     	ld (India_SP),hl
1221  8F6E
1222  8F6E C9           	ret
1223  8F6F
1224  8F6F              ; --------------------------------------------------------------------------------------------------------------
1225  8F6F              ;
1226  8F6F              ;	27/03/24
1227  8F6F              ;
1228  8F6F
1229  8F6F              Inicializa_India_y_limpia_Tabla_de_impresion
1230  8F6F
1231  8F6F 2A 61 8C     	ld hl,(India_SP)
1232  8F72 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1233  8F75
1234  8F75 79           	ld a,c
1235  8F76 95           	sub l
1236  8F77 28 06        	jr z,2F
1237  8F79 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1238  8F7A              ;														; _ y pasamos a inicializar (India_SP).
1239  8F7A AF           	xor a
1240  8F7B
1241  8F7B 77           1 ld (hl),a
1242  8F7C 2C           	inc l
1243  8F7D 10 FC        	djnz 1B												; Limpia Tabla.
1244  8F7F
1245  8F7F 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1246  8F82 22 61 8C     	ld (India_SP),hl
1247  8F85
1248  8F85 C9           	ret
1249  8F86
1250  8F86              ; --------------------------------------------------------------------------------------------------------------
1251  8F86              ;
1252  8F86              ;	31/3/24
1253  8F86
1254  8F86              Ordena_tabla_de_impresion
1255  8F86
1256  8F86              ; 5794 T/states.
1257  8F86              ; 6278 T/states.
1258  8F86              ; 5310 T/states.
1259  8F86
1260  8F86              ; Inicializamos punteros (India_SP) e (India_2_SP).
1261  8F86              ; Inicializamos contador de comparaciones, [C].
1262  8F86              ; Cargamos los registros A y B para efectuar comparación.
1263  8F86
1264  8F86 FD 2E 00     	ld iyl,0
1265  8F89
1266  8F89 3A 38 8C     	ld a,(Entidades_en_curso)
1267  8F8C FE 04        	cp 4 	;	4
1268  8F8E D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1269  8F8F
1270  8F8F 3D           	dec a
1271  8F90 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1272  8F91 51           	ld d,c 										; Copia de respaldo.
1273  8F92
1274  8F92 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1275  8F93
1276  8F93 21 03 89     	ld hl,Tabla_de_pintado+3
1277  8F96 46           	ld b,(hl)
1278  8F97 22 63 8C     	ld (India_2_SP),hl
1279  8F9A
1280  8F9A B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1281  8F9B DC C3 8F     	call c, Avanza_India_2_SP
1282  8F9E CC C3 8F     	call z, Avanza_India_2_SP
1283  8FA1
1284  8FA1 FD 2D        	dec iyl
1285  8FA3 28 18        	jr z,2F
1286  8FA5
1287  8FA5
1288  8FA5              ; --------------------------------------------------------------------------------------------------------------
1289  8FA5              ;
1290  8FA5              ;	7/4/24
1291  8FA5
1292  8FA5              Trueque
1293  8FA5
1294  8FA5              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1295  8FA5              ;  			A contiene en nº de fila de (India_SP).
1296  8FA5              ;			HL contiene (India_2_SP).
1297  8FA5
1298  8FA5 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1299  8FA6 E5           	push hl										; Preservo (India_2_SP).
1300  8FA7
1301  8FA7 ED 5B 61 8C  	ld de,(India_SP)
1302  8FAB EB           	ex de,hl
1303  8FAC 70           	ld (hl),b
1304  8FAD 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1305  8FAE
1306  8FAE CD EF 8F     	call Intercambia_1_byte
1307  8FB1 CD EF 8F     	call Intercambia_1_byte
1308  8FB4
1309  8FB4
1310  8FB4              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1311  8FB4              ; Recuperamos (India_2_SP) en HL.
1312  8FB4
1313  8FB4 2A 61 8C     	ld hl,(India_SP)
1314  8FB7 7E           	ld a,(hl)
1315  8FB8
1316  8FB8 E1           	pop hl
1317  8FB9 D1           	pop de
1318  8FBA
1319  8FBA              ; --------------------------------------------------------------------------------------------------------------
1320  8FBA
1321  8FBA CD C3 8F     	call Avanza_India_2_SP
1322  8FBD
1323  8FBD 14           2 inc d
1324  8FBE 15           	dec d
1325  8FBF C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1326  8FC0 18 D8        	jr 1B
1327  8FC2
1328  8FC2 C9           	ret
1329  8FC3
1330  8FC3              ; ----- ----- ----- ----- -----
1331  8FC3
1332  8FC3              Avanza_India_2_SP
1333  8FC3
1334  8FC3 0D           	dec c
1335  8FC4 28 0A        	jr z,Avanza_punteros_indios
1336  8FC6
1337  8FC6 FD 2C        	inc iyl
1338  8FC8
1339  8FC8 2C           	inc l
1340  8FC9 2C           	inc l
1341  8FCA 2C           	inc l
1342  8FCB
1343  8FCB 46           	ld b,(hl)
1344  8FCC 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1345  8FCF
1346  8FCF C9           	ret
1347  8FD0
1348  8FD0              ; ----- ----- ----- ----- -----
1349  8FD0
1350  8FD0              Avanza_punteros_indios
1351  8FD0
1352  8FD0 15           	dec d
1353  8FD1 28 15        	jr z,Prepara_salida
1354  8FD3
1355  8FD3 4A           	ld c,d
1356  8FD4
1357  8FD4 2A 61 8C     	ld hl,(India_SP)
1358  8FD7 2C           	inc l
1359  8FD8 2C           	inc l
1360  8FD9 2C           	inc l
1361  8FDA 7E           	ld a,(hl)
1362  8FDB 22 61 8C     	ld (India_SP),hl
1363  8FDE
1364  8FDE 2C           	inc l
1365  8FDF 2C           	inc l
1366  8FE0 2C           	inc l
1367  8FE1 46           	ld b,(hl)
1368  8FE2 22 63 8C     	ld (India_2_SP),hl
1369  8FE5
1370  8FE5 FD 2C        	inc iyl
1371  8FE7
1372  8FE7 C9           	ret
1373  8FE8
1374  8FE8              Prepara_salida
1375  8FE8
1376  8FE8 21 00 89     	ld hl,Tabla_de_pintado
1377  8FEB 22 61 8C     	ld (India_SP),hl
1378  8FEE C9           	ret
1379  8FEF
1380  8FEF
1381  8FEF 2C           Intercambia_1_byte inc l
1382  8FF0 1C           	inc e
1383  8FF1 46           	ld b,(hl)
1384  8FF2 1A           	ld a,(de)
1385  8FF3 EB           	ex de,hl
1386  8FF4 70           	ld (hl),b
1387  8FF5 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1388  8FF6 C9           	ret
1389  8FF7
1390  8FF7              ; -----------------------------------------------------------------------------------
1391  8FF7              ;
1392  8FF7              ;	20/01/24
1393  8FF7              ;
1394  8FF7              ;
1395  8FF7
1396  8FF7              Construye_movimientos_masticados_entidad
1397  8FF7
1398  8FF7 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1399  8FFA E5           	push hl
1400  8FFB CD 3E 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1401  8FFE              ;															; _ el (Contador_de_mov_masticados).
1402  8FFE CD 23 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1403  9001              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1404  9001 CD 17 9A     	call Recompone_posicion_inicio
1405  9004
1406  9004 CD 47 97     1 call Draw
1407  9007 CD 23 90     	call Guarda_movimiento_masticado
1408  900A
1409  900A CD C4 9D     	call Movimiento
1410  900D
1411  900D 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1412  9010 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1413  9012 28 F0        	jr z,1B
1414  9014
1415  9014              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1416  9014              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1417  9014
1418  9014 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1419  9015 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1420  9018
1421  9018              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1422  9018
1423  9018 CD 28 9F     	call Situa_en_contador_general_de_mov_masticados
1424  901B
1425  901B              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1426  901B              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1427  901B
1428  901B ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1429  901F
1430  901F 71           	ld (hl),c
1431  9020 23           	inc hl
1432  9021 70           	ld (hl),b
1433  9022
1434  9022 C9           	ret
1435  9023
1436  9023              ; -----------------------------------------------------------------------------------
1437  9023              ;
1438  9023              ;	28/12/23
1439  9023              ;
1440  9023              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1441  9023              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1442  9023
1443  9023              Guarda_movimiento_masticado
1444  9023
1445  9023 ED 73 3D 8C  	ld (Stack),sp
1446  9027 ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1447  902B
1448  902B DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1449  902D FD E5            push iy 												; Pushea Puntero_objeto.
1450  902F
1451  902F ED 7B 3D 8C      ld sp,(Stack)
1452  9033
1453  9033 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1454  9036 23           	inc hl
1455  9037 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1456  903A
1457  903A CD 3E 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1458  903D              ;															; _ el (Contador_de_mov_masticados).
1459  903D C9               ret
1460  903E
1461  903E              ; --------------------------------------------------------------------------------------------------------------
1462  903E              ;
1463  903E              ;	12/1/24
1464  903E              ;
1465  903E              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1466  903E
1467  903E              Actualiza_Puntero_de_almacen_de_mov_masticados
1468  903E
1469  903E 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1470  9041 01 04 00     	ld bc,4
1471  9044 A7           	and a
1472  9045 ED 4A        	adc hl,bc
1473  9047 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1474  904A C9           	ret
1475  904B
1476  904B              ; ------------------------------------------
1477  904B              ;
1478  904B              ;	23/11/24
1479  904B              ;
1480  904B              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1481  904B
1482  904B
1483  904B              Obtenemos_puntero_de_impresion
1484  904B
1485  904B DD 6E 07     	ld l,(ix+7)
1486  904E DD 66 08     	ld h,(ix+8)
1487  9051
1488  9051              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1489  9051
1490  9051 ED 73 3D 8C  	ld (Stack),sp
1491  9055 F9           	ld sp,hl
1492  9056
1493  9056 AF           	xor a
1494  9057 67           	ld h,a
1495  9058 6C           	ld l,h															; ld hl,"0"
1496  9059
1497  9059 D1           	pop de															; (Puntero_objeto) en DE.
1498  905A C1           	pop bc
1499  905B
1500  905B              ; 	Almacena (Puntero_de_impresion) en caja.
1501  905B
1502  905B DD 71 05     	ld (ix+5),c
1503  905E DD 70 06     	ld (ix+6),b
1504  9061
1505  9061 ED 43 F3 8B  	ld (Puntero_de_impresion),bc
1506  9065
1507  9065              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1508  9065
1509  9065 39           	add hl,sp
1510  9066 DD 75 07     	ld (ix+7),l
1511  9069 DD 74 08     	ld (ix+8),h
1512  906C
1513  906C C1           	pop bc
1514  906D
1515  906D 79           	ld a,c
1516  906E 80           	add b															; Comprueba si ya no hay datos en el almacén.
1517  906F
1518  906F ED 7B 3D 8C  	ld sp,(Stack)
1519  9073
1520  9073 CC 44 94     	call z,Reinicia_entidad_maliciosa
1521  9076
1522  9076 C9           	ret
1523  9077
1524  9077              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1525  9077              ;
1526  9077              ;	25/11/24
1527  9077
1528  9077              Cargamos_registros_con_explosion
1529  9077
1530  9077 DD 6E 07     	ld l,(ix+7)
1531  907A DD 66 08     	ld h,(ix+8)
1532  907D CD 1D 91     	call Extrae_address
1533  9080 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1534  9081
1535  9081 DD 6E 05     	ld l,(ix+5)
1536  9084 DD 66 06     	ld h,(ix+6)
1537  9087
1538  9087 E5           	push hl
1539  9088 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1540  908A
1541  908A C9           	ret
1542  908B
1543  908B
1544  908B              Cargamos_registros_con_explosion_Amadeus
1545  908B
1546  908B 2A BE 89     	ld hl,(Pamm_Amadeus)
1547  908E CD 1D 91     	call Extrae_address
1548  9091
1549  9091 5D           	ld e,l
1550  9092 54           	ld d,h
1551  9093
1552  9093 DD 2A BC 89  	ld ix,(p.imp.amadeus)
1553  9097
1554  9097 C9           	ret
1555  9098
1556  9098              ; --------------------------------------------------------------------------------------------------------------
1557  9098              ;
1558  9098              ;	17/06/24
1559  9098              ;
1560  9098              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1561  9098              ;
1562  9098              ;	IX contiene el puntero de impresión.
1563  9098              ;	DE contiene (Puntero_objeto).
1564  9098
1565  9098
1566  9098              Cargamos_registros_con_mov_masticado_Amadeus
1567  9098
1568  9098 ED 73 3D 8C  	ld (Stack),sp
1569  909C ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1570  90A0 D1           	pop de 															; DE contiene Puntero_objeto
1571  90A1 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1572  90A3 DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1573  90A7 ED 7B 3D 8C  	ld sp,(Stack)
1574  90AB C9           	ret
1575  90AC
1576  90AC              ; ---------------------------------------------------------------------------------------------------------------------
1577  90AC              ;
1578  90AC              ;	18/6/24
1579  90AC              ;
1580  90AC              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1581  90AC
1582  90AC              Genera_datos_de_impresion_Amadeus
1583  90AC
1584  90AC 3A BB 89     	ld a,(Impacto_Amadeus)
1585  90AF A7           	and a
1586  90B0 20 03        	jr nz,1F
1587  90B2
1588  90B2              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1589  90B2              ; _apuntando a la correspondiente explosión.
1590  90B2
1591  90B2 CD 98 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1592  90B5
1593  90B5 DD 7D        1 ld a,ixl
1594  90B7 E6 1F        	and $1f
1595  90B9 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1596  90BC
1597  90BC 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1598  90BF E5           	push hl
1599  90C0
1600  90C0 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1601  90C3 22 5F 8C     	ld (Scanlines_album_SP),hl
1602  90C6
1603  90C6 CD 30 95     	call Genera_datos_de_impresion
1604  90C9
1605  90C9 E1           	pop hl
1606  90CA 22 5F 8C     	ld (Scanlines_album_SP),hl
1607  90CD
1608  90CD C9           	ret
1609  90CE
1610  90CE              ; ---------------------------------------------------------------------------------------------------------------------
1611  90CE              ;
1612  90CE              ;	13/03/24
1613  90CE              ;
1614  90CE              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1615  90CE
1616  90CE              Inicia_albumes_de_lineas
1617  90CE
1618  90CE 21 00 80     	ld hl,Scanlines_album
1619  90D1 22 41 8C     	ld (Album_de_pintado),hl
1620  90D4 22 5F 8C     	ld (Scanlines_album_SP),hl
1621  90D7
1622  90D7 21 1A 81     	ld hl,Scanlines_album_2
1623  90DA 22 43 8C     	ld (Album_de_borrado),hl
1624  90DD
1625  90DD C9           	ret
1626  90DE
1627  90DE              Inicia_albumes_de_lineas_Amadeus
1628  90DE
1629  90DE 21 34 82     	ld hl,Amadeus_scanlines_album
1630  90E1 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1631  90E4 21 58 82     	ld hl,Amadeus_scanlines_album_2
1632  90E7 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1633  90EA
1634  90EA C9           	ret
1635  90EB
1636  90EB              Inicia_albumes_de_disparos
1637  90EB
1638  90EB 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1639  90EE 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1640  90F1 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1641  90F4 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1642  90F7
1643  90F7 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1644  90FA 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1645  90FD 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1646  9100
1647  9100 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1648  9103 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1649  9106
1650  9106 C9           	ret
1651  9107
1652  9107              ; ---------------------------------------------------------------------------------------------------------------------
1653  9107              ;
1654  9107              ; 8/1/23
1655  9107              ;
1656  9107              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1657  9107              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1658  9107              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1659  9107
1660  9107              ; Destruye HL y DE !!!!!
1661  9107
1662  9107              Inicia_punteros_de_cajas
1663  9107
1664  9107 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1665  910A CD 1D 91         call Extrae_address
1666  910D 22 2E 8C         ld (Puntero_store_caja),hl
1667  9110 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1668  9113 22 32 8C     	ld (Indice_restore_caja),hl
1669  9116 CD 1D 91     	call Extrae_address
1670  9119 22 30 8C     	ld (Puntero_restore_caja),hl
1671  911C C9               ret
1672  911D
1673  911D              ; *************************************************************************************************************************************************************
1674  911D
1675  911D              ;
1676  911D              ; 20/10/22
1677  911D              ;
1678  911D              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1679  911D              ;
1680  911D              ; Destruye el puntero y DE !!!!!
1681  911D
1682  911D 5E           Extrae_address ld e,(hl)
1683  911E 23           	inc hl
1684  911F 56           	ld d,(hl)
1685  9120 2B           	dec hl
1686  9121 EB           	ex de,hl
1687  9122 C9           	ret
1688  9123
1689  9123              ; *************************************************************************************************************************************************************
1690  9123              ;
1691  9123              ;	20/1/24
1692  9123              ;
1693  9123              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1694  9123              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1695  9123              ;
1696  9123              ;   Destruye HL y BC !!!!!,
1697  9123              ;
1698  9123              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1699  9123              ;					"0" ..... Izquierda.
1700  9123
1701  9123              Inicia_Puntero_objeto
1702  9123
1703  9123 3A 0D 8C     	ld a,(Cuad_objeto)
1704  9126 E6 01        	and 1
1705  9128 F5           	push af
1706  9129 CC 45 91     	call z,Inicia_puntero_objeto_izq
1707  912C F1           	pop af
1708  912D C8           	ret z
1709  912E CD 32 91     	call Inicia_puntero_objeto_der
1710  9131 C9           	ret
1711  9132
1712  9132              ; Arrancamos desde la parte izquierda de la pantalla.
1713  9132              ; Iniciamos (Indice_Sprite_der).
1714  9132
1715  9132 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1716  9135 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1717  9138 CD 1D 91     	call Extrae_address
1718  913B 22 00 8C     	ld (Puntero_objeto),hl
1719  913E
1720  913E 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1721  9141 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1722  9144 C9           	ret
1723  9145
1724  9145              ; Arrancamos desde la parte derecha de la pantalla.
1725  9145              ; Iniciamos (Indice_Sprite_izq).
1726  9145
1727  9145 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1728  9148 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1729  914B CD 1D 91     	call Extrae_address
1730  914E 22 00 8C     	ld (Puntero_objeto),hl
1731  9151
1732  9151 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1733  9154 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1734  9157 C9           	ret
1735  9158
1736  9158              ; **************************************************************************************************
1737  9158              ;
1738  9158              ;	27/11/24
1739  9158              ;
1740  9158              ;	INPUT: IX contiene (Puntero_store_caja).
1741  9158              ;
1742  9158              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1743  9158
1744  9158              Salta_caja_de_entidades_vacia
1745  9158
1746  9158 DD 7E 00     	ld a,(ix+0)
1747  915B A7           	and a
1748  915C C0           	ret nz
1749  915D
1750  915D CD 67 91     	call Incrementa_punteros_de_cajas
1751  9160 DD 2A 2E 8C  	ld ix,(Puntero_store_caja)
1752  9164 18 F2        	jr Salta_caja_de_entidades_vacia
1753  9166
1754  9166 C9           	ret
1755  9167
1756  9167              ; **************************************************************************************************
1757  9167              ;
1758  9167              ;	08/05/23
1759  9167              ;
1760  9167              ;	Incrementamos los dos punteros de entidades. (+1).
1761  9167
1762  9167              Incrementa_punteros_de_cajas
1763  9167
1764  9167 2A 30 8C     	ld hl,(Puntero_restore_caja)
1765  916A 22 2E 8C     	ld (Puntero_store_caja),hl
1766  916D 2A 32 8C     	ld hl,(Indice_restore_caja)
1767  9170 23           	inc hl
1768  9171 23           	inc hl
1769  9172 22 32 8C     	ld (Indice_restore_caja),hl
1770  9175 CD 1D 91         call Extrae_address
1771  9178 22 30 8C         ld (Puntero_restore_caja),hl
1772  917B C9               ret
1773  917C
1774  917C              ; -----------------------------------------------------------
1775  917C
1776  917C              ; Teclado.
1777  917C
1778  917C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1779  917E DB FE        	in a,($fe)
1780  9180 E6 01        	and $01
1781  9182 28 02        	jr z,1f
1782  9184 18 F6        	jr Pulsa_ENTER
1783  9186 C9           1 ret
1784  9187
1785  9187              ; **************************************************************************************************
1786  9187              ;
1787  9187              ; Temporización.
1788  9187
1789  9187              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1790  9187              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1791  9187              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1792  9187              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1793  9187
1794  9187              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1795  9187              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1796  9187              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1797  9187
1798  9187              ; A partir de $4f61 no hace falta DELAY.
1799  9187
1800  9187              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1801  9187
1802  9187              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1803  9187              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1804  9187              ;	LD A,B
1805  9187              ;	AND A
1806  9187              ;	JR NZ,wait
1807  9187              ;	RET
1808  9187
1809  9187              ; ---------------------------------------------------------------------------------------------------------------
1810  9187              ;
1811  9187              ;	13/07/24
1812  9187              ;
1813  9187
1814  9187              Inicia_Shield
1815  9187
1816  9187 21 89 8C     	ld hl,Datos_Shield
1817  918A 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1818  918D
1819  918D 7E           	ld a,(hl)
1820  918E 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1821  9191
1822  9191 3E 01        	ld a,1
1823  9193 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1824  9196
1825  9196 C9           	ret
1826  9197
1827  9197              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1828  9197              ;
1829  9197              ;	4/6/24
1830  9197              ;
1831  9197              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1832  9197              ;
1833  9197              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1834  9197              ;
1835  9197
1836  9197              Actualiza_pantalla
1837  9197
1838  9197 3E 02        	ld a,2
1839  9199 D3 FE        	out ($fe),a
1840  919B
1841  919B 3A 65 8C     	ld a,(Ctrl_3)
1842  919E CB 57        	bit 2,a
1843  91A0 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1844  91A2
1845  91A2              Borrando_entidades
1846  91A2
1847  91A2 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1848  91A5 CD 1D 91     	call Extrae_address
1849  91A8 24           	inc h
1850  91A9 25           	dec h
1851  91AA 28 05        	jr z,Pintando_entidades
1852  91AC CD 24 96     	call Pinta_Sprites
1853  91AF 18 F1        	jr Borrando_entidades
1854  91B1
1855  91B1              Pintando_entidades
1856  91B1
1857  91B1 2A 61 8C     	ld hl,(India_SP)
1858  91B4 2C           	inc l
1859  91B5 CD 1D 91     	call Extrae_address
1860  91B8 24           	inc h
1861  91B9 25           	dec h
1862  91BA 28 0E        	jr z,Ejecuta_escudo
1863  91BC 1C           	inc e
1864  91BD 1C           	inc e
1865  91BE ED 53 61 8C  	ld (India_SP),de
1866  91C2 CD 1D 91     	call Extrae_address
1867  91C5 CD 24 96     	call Pinta_Sprites
1868  91C8 18 E7        	jr Pintando_entidades
1869  91CA
1870  91CA              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1871  91CA
1872  91CA              Ejecuta_escudo
1873  91CA
1874  91CA 3A 8F 8C     	ld a,(Shield)
1875  91CD A7           	and a
1876  91CE 20 2F        	jr nz,Aplica_Shield
1877  91D0
1878  91D0              Borrando_Amadeus
1879  91D0
1880  91D0 21 65 8C     	ld hl,Ctrl_3
1881  91D3 CB 6E        	bit 5,(hl)
1882  91D5 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1883  91D7
1884  91D7 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1885  91DA CD 1D 91     	call Extrae_address
1886  91DD 24           	inc h
1887  91DE 25           	dec h
1888  91DF 28 03        	jr z,Pintando_Amadeus
1889  91E1 CD 24 96     	call Pinta_Sprites
1890  91E4
1891  91E4              Pintando_Amadeus
1892  91E4
1893  91E4 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1894  91E7 CD 1D 91     	call Extrae_address
1895  91EA 24           	inc h
1896  91EB 25           	dec h
1897  91EC 28 03        	jr z,1F
1898  91EE CD 24 96     	call Pinta_Sprites
1899  91F1
1900  91F1              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1901  91F1
1902  91F1 21 65 8C     1 ld hl,Ctrl_3
1903  91F4 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1904  91F6 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1905  91F8 CB AE        	res 5,(hl)
1906  91FA
1907  91FA 3E 01        	ld a,1												; Borde azul.
1908  91FC D3 FE        	out ($fe),a
1909  91FE
1910  91FE C9           	ret
1911  91FF
1912  91FF              Aplica_Shield
1913  91FF
1914  91FF              ;	Bit 1 "1" (Shield_3) Sólo borra.
1915  91FF              ;		  "0"     ""     Borra/Pinta.
1916  91FF              ;	Bit 2    ""  RET.	 No borra, no pinta.
1917  91FF
1918  91FF 21 91 8C     	ld hl,Shield_3
1919  9202
1920  9202 CB 5E        	bit 3,(hl)
1921  9204 20 DE        	jr nz,Pintando_Amadeus
1922  9206
1923  9206 CB 56        	bit 2,(hl)
1924  9208 20 E7        	jr nz,1B
1925  920A
1926  920A CB 4E        	bit 1,(hl)
1927  920C C4 13 92     	call nz,Borra_Amadeus_shield
1928  920F
1929  920F 28 BF        	jr z,Borrando_Amadeus
1930  9211 18 DE        	jr 1B
1931  9213
1932  9213              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1933  9213
1934  9213              Borra_Amadeus_shield
1935  9213
1936  9213 3A 65 8C     	ld a,(Ctrl_3)
1937  9216 CB 6F        	bit 5,a
1938  9218 28 08        	jr z,1F
1939  921A
1940  921A 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1941  921D CD 1D 91     	call Extrae_address
1942  9220 18 06        	jr 2F
1943  9222
1944  9222 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1945  9225 CD 1D 91     	call Extrae_address
1946  9228
1947  9228 CD 24 96     2 call Pinta_Sprites
1948  922B
1949  922B AF           	xor a
1950  922C 3C           	inc a											; Asegura NZ en la salida de la rutina.
1951  922D
1952  922D C9           	ret
1953  922E
1954  922E              Pinta_Amadeus_shield
1955  922E
1956  922E 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1957  9231 CD 1D 91     	call Extrae_address
1958  9234 CD 24 96     	call Pinta_Sprites
1959  9237
1960  9237 AF           	xor a
1961  9238 3C           	inc a											; Asegura NZ en la salida de la rutina.
1962  9239
1963  9239 C9           	ret
1964  923A
1965  923A              Borra_Pinta_Amadeus_shield
1966  923A
1967  923A CD 13 92     	call Borra_Amadeus_shield
1968  923D CD 2E 92     	call Pinta_Amadeus_shield
1969  9240 C9           	ret
1970  9241
1971  9241              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1972  9241              ;
1973  9241              ;	19/6/24
1974  9241              ;
1975  9241
1976  9241              Teclado
1977  9241
1978  9241              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1979  9241
1980  9241 3E F7        	ld a,$f7												; "5" para disparar.
1981  9243 DB FE        	in a,($fe)
1982  9245 E6 10        	and $10
1983  9247
1984  9247 CC BF A2     	call z,Genera_disparo_Amadeus
1985  924A
1986  924A 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1987  924C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1988  924E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1989  9250 CC 91 9D         call z,Amadeus_a_izquierda
1990  9253
1991  9253 3E F7        	ld a,$f7
1992  9255 DB FE        	in a,($fe)
1993  9257 E6 01        	and $01
1994  9259 C8           	ret z
1995  925A
1996  925A 3E F7        	ld a,$f7
1997  925C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1998  925E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1999  9260 CC A9 9D     	call z,Amadeus_a_derecha
2000  9263
2001  9263 C9           	ret
2002  9264
2003  9264              ; ------------------------------------------------------------------------------------------------------------------------
2004  9264              ;
2005  9264              ;	06/07/24
2006  9264              ;
2007  9264
2008  9264              Genera_explosion
2009  9264
2010  9264 21 77 8C     	ld hl,Clock_explosion
2011  9267 35           	dec (hl)
2012  9268 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2013  926A
2014  926A              Borra_entidad_colisionada
2015  926A
2016  926A CD 5B 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2017  926D
2018  926D DD E5        	push ix
2019  926F CD 77 90     	call Cargamos_registros_con_explosion
2020  9272 CD 30 95     	call Genera_datos_de_impresion
2021  9275 DD E1        	pop ix
2022  9277
2023  9277 AF           	xor a
2024  9278 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2025  9279
2026  9279 C9           	ret
2027  927A
2028  927A              Siguiente_frame_explosion
2029  927A
2030  927A 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2031  927C
2032  927C              ; Avanza Frame de explosión.
2033  927C
2034  927C DD 6E 07     	ld l,(ix+7)
2035  927F DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2036  9282
2037  9282 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2038  9285
2039  9285 79           	ld a,c
2040  9286 95           	sub l
2041  9287 20 21        	jr nz,1F
2042  9289
2043  9289              ; Fín de la entidad !!!!!!!!!!!!!
2044  9289
2045  9289 F3           	di
2046  928A 18 FE        	jr $
2047  928C FB           	ei
2048  928D
2049  928D
2050  928D 21 37 8C     	ld hl,Numero_parcial_de_entidades
2051  9290 35           	dec (hl)
2052  9291 23           	inc hl
2053  9292 35           	dec (hl)														; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso)
2054  9293
2055  9293              ; !! Provisional. Limpia la caja de entidades.
2056  9293
2057  9293 DD E5        	push ix
2058  9295 E1           	pop hl
2059  9296
2060  9296 AF           	xor a
2061  9297 77           	ld (hl),a
2062  9298
2063  9298 5D           	ld e,l
2064  9299 54           	ld d,h
2065  929A 1C           	inc e
2066  929B
2067  929B 01 0B 00     	ld bc,11
2068  929E ED B0        	ldir
2069  92A0
2070  92A0 21 66 8C     	ld hl,Ctrl_4
2071  92A3 CB C6        	set 0,(hl)
2072  92A5
2073  92A5 CD 13 94     	call Limpiamos_bandeja_DRAW
2074  92A8 18 C0        	jr Borra_entidad_colisionada
2075  92AA
2076  92AA 23           1 inc hl
2077  92AB 23           	inc hl
2078  92AC
2079  92AC DD 75 07     	ld (ix+7),l
2080  92AF DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2081  92B2
2082  92B2 18 B6        	jr Borra_entidad_colisionada
2083  92B4
2084  92B4              ; ----- ----- ----- ----- -----
2085  92B4
2086  92B4              Genera_explosion_Amadeus
2087  92B4
2088  92B4 21 78 8C     	ld hl,Clock_explosion_Amadeus
2089  92B7 35           	dec (hl)
2090  92B8 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2091  92BA
2092  92BA              Borra_Amadeus_impactado
2093  92BA
2094  92BA CD C0 8E     	call Change_Amadeus
2095  92BD CD 8B 90     	call Cargamos_registros_con_explosion_Amadeus
2096  92C0 CD AC 90     	call Genera_datos_de_impresion_Amadeus
2097  92C3
2098  92C3 21 65 8C     	ld hl,Ctrl_3
2099  92C6 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2100  92C8
2101  92C8 AF           	xor a
2102  92C9 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2103  92CA
2104  92CA C9           	ret
2105  92CB
2106  92CB              Siguiente_frame_explosion_Amadeus
2107  92CB
2108  92CB 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2109  92CD
2110  92CD              ; Avanza Frame de explosión.
2111  92CD
2112  92CD 2A BE 89     	ld hl,(Pamm_Amadeus)
2113  92D0 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2114  92D3
2115  92D3 79           	ld a,c
2116  92D4 95           	sub l
2117  92D5 20 0B        	jr nz,1F
2118  92D7
2119  92D7              ; Fín de Amadeus !!!!!!!!!!!!!
2120  92D7              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2121  92D7
2122  92D7 AF           	xor a
2123  92D8 32 BB 89     	ld (Impacto_Amadeus),a
2124  92DB 21 65 8C     	ld hl,Ctrl_3
2125  92DE CB F6        	set 6,(hl)
2126  92E0
2127  92E0 18 D8        	jr Borra_Amadeus_impactado
2128  92E2
2129  92E2 23           1 inc hl
2130  92E3 23           	inc hl
2131  92E4 22 BE 89     	ld (Pamm_Amadeus),hl
2132  92E7 18 D1        	jr Borra_Amadeus_impactado
2133  92E9
2134  92E9              ; ---------------------------------------------------------------
2135  92E9
2136  92E9              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92E9              ; ******************************************************************************************************************************************************************************************
   2+ 92E9              ;
   3+ 92E9              ;   21/04/24
   4+ 92E9              ;
   5+ 92E9              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92E9              ;   (XOR) bit a bit.
   7+ 92E9              ;
   8+ 92E9              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92E9
  10+ 92E9              Derivando_RND
  11+ 92E9
  12+ 92E9 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92EC
  14+ 92EC ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92EE C5               push bc
  16+ 92EF              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92EF 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92F2              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92F2
  20+ 92F2 A7           6 and a                                 ; Carry a "0".
  21+ 92F3 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92F5 30 02            jr nc,1F
  23+ 92F7
  24+ 92F7 CB C1            set 0,c
  25+ 92F9
  26+ 92F9 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92FA E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92FC 5F               ld e,a
  29+ 92FD
  30+ 92FD 7A               ld a,d
  31+ 92FE E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9300 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9302
  34+ 9302 CB 3F            srl a
  35+ 9304
  36+ 9304 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9305
  38+ 9305 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9306 28 04            jr z,4F
  40+ 9308
  41+ 9308 CB FF            set 7,a
  42+ 930A 18 02            jr 5F
  43+ 930C
  44+ 930C CB BF        4 res 7,a
  45+ 930E
  46+ 930E CB 21        5 sla c
  47+ 9310 10 E0            djnz 6B
  48+ 9312
  49+ 9312 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9313
  51+ 9313 77               ld (hl),a
  52+ 9314 23               inc hl
  53+ 9315 C1               pop bc
  54+ 9316 10 D4            djnz 3B
  55+ 9318
  56+ 9318 C9               ret
  57+ 9319
  58+ 9319
  59+ 9319
# file closed: RND_Derivando.asm
2137  9319              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9319              ;---------------------------------------------------------------------------------------------------------------
   2+ 9319              ;
   3+ 9319              ;   13/11/24
   4+ 9319
   5+ 9319              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9319
   7+ 9319              Genera_movimientos_masticados_del_nivel
   8+ 9319
   9+ 9319              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9319
  11+ 9319              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9319              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9319              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9319
  15+ 9319 2D           	dec l
  16+ 931A 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 931B 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 931C 4E           	ld c,(hl)
  19+ 931D
  20+ 931D E5           1 push hl														; Push (Datos_de_nivel).
  21+ 931E C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 931F
  23+ 931F              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 931F
  25+ 931F 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9320
  27+ 9320 CD 5E 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9323
  29+ 9323              ;	Caja Master inicializada ???
  30+ 9323
  31+ 9323 7E           	ld a,(hl)
  32+ 9324 A7           	and a
  33+ 9325 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9327
  35+ 9327              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9327
  37+ 9327 C1           	pop bc
  38+ 9328 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9329 C5           	push bc
  40+ 932A
  41+ 932A CD FE 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 932D CD 92 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9330
  44+ 9330 3A EE 8B     	ld a,(Tipo)
  45+ 9333 CD 6E 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9336
  47+ 9336              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9336
  49+ 9336              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9336              ;	ld a,(hl)
  51+ 9336              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9336
  53+ 9336              ;	ld hl,Posicion_inicio
  54+ 9336              ;	ld (hl),a
  55+ 9336
  56+ 9336              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9336              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9336
  59+ 9336 CD F7 8F     	call Construye_movimientos_masticados_entidad
  60+ 9339
  61+ 9339 2A 34 8C     	ld hl,(Puntero_indice_master)
  62+ 933C CD 1D 91     	call Extrae_address
  63+ 933F
  64+ 933F 5D           	ld e,l
  65+ 9340 54           	ld d,h
  66+ 9341
  67+ 9341 CD BF 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9344
  69+ 9344              Movimientos_masticados_construidos
  70+ 9344
  71+ 9344 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9345
  73+ 9345 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9346 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9347
  76+ 9347 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9348 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 934A
  79+ 934A C9           	ret
  80+ 934B
  81+ 934B              ;---------------------------------------------------------------------------------------------------------------
  82+ 934B              ;
  83+ 934B              ;   9/11/24
  84+ 934B              ;
  85+ 934B              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 934B              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 934B              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 934B              ;	_ de la 1ª entidad del Nivel.
  89+ 934B              ;
  90+ 934B              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 934B
  92+ 934B              ;	MODIFICA: HL,DE y A.
  93+ 934B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 934B
  95+ 934B              Inicializa_1er_Nivel
  96+ 934B
  97+ 934B              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 934B
  99+ 934B 21 D2 8B     	ld hl,Indice_de_niveles
 100+ 934E CD 1D 91     	call Extrae_address
 101+ 9351 ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9355
 103+ 9355 7E           	ld a,(hl)
 104+ 9356 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9359
 106+ 9359 2C           	inc l
 107+ 935A 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 935D
 109+ 935D C9           	ret
 110+ 935E
 111+ 935E              ; ----------------------
 112+ 935E              ;
 113+ 935E              ;	13/11/24
 114+ 935E              ;
 115+ 935E
 116+ 935E              Situa_en_Caja_Master
 117+ 935E
 118+ 935E CD 7D 94         call Calcula_salto_en_BC
 119+ 9361 21 61 89         ld hl,Indice_de_cajas_master
 120+ 9364 A7               and a
 121+ 9365 ED 4A            adc hl,bc
 122+ 9367 22 34 8C       	ld (Puntero_indice_master),hl
 123+ 936A CD 1D 91     	call Extrae_address
 124+ 936D C9           	ret
 125+ 936E
 126+ 936E              ; ----------------------
 127+ 936E
 128+ 936E              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 936E              ; 	ld bc,4
 130+ 936E              ; 	ldir
 131+ 936E              ; 	ret
 132+ 936E
 133+ 936E 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 936F CD 7D 94         call Calcula_salto_en_BC
 135+ 9372 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 9375 A7               and a
 137+ 9376 ED 4A            adc hl,bc
 138+ 9378 CD 1D 91         call Extrae_address
 139+ 937B 22 1F 8C         ld (Puntero_indice_mov),hl
 140+ 937E C9               ret
 141+ 937F
 142+ 937F              ;---------------------------------------------------------------------------------------------------------------
 143+ 937F              ;
 144+ 937F              ;   13/11/24
 145+ 937F              ;
 146+ 937F              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 937F
 148+ 937F
 149+ 937F              Prepara_Cajas_de_Entidades
 150+ 937F
 151+ 937F              ; Preparamos los punteros de las cajas de entidades:
 152+ 937F
 153+ 937F CD 07 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9382              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9382 CD C8 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 9385
 157+ 9385 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 9388
 159+ 9388              ; En este punto:
 160+ 9388              ;
 161+ 9388              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 9388              ; B contiene (Numero_parcial_de_entidades).
 163+ 9388
 164+ 9388 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 9389
 166+ 9389 7E           	ld a,(hl)
 167+ 938A
 168+ 938A CD 5E 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 938D
 170+ 938D ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9391
 172+ 9391 D5           	push de
 173+ 9392 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 9394
 175+ 9394 01 0C 00     	ld bc,12
 176+ 9397 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 9399              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 9399
 179+ 9399              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 9399              ;
 181+ 9399              ;
 182+ 9399              ; ------------------------------------------------------ IX
 183+ 9399              ; ------------------------------------------------------ IX
 184+ 9399              ; ------------------------------------------------------ IX
 185+ 9399              ; ------------------------------------------------------ IX
 186+ 9399
 187+ 9399 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 939B
 189+ 939B CD 4B 90     	call Obtenemos_puntero_de_impresion
 190+ 939E
 191+ 939E DD 6E 05     	ld l,(ix+5)
 192+ 93A1 2C           	inc l
 193+ 93A2 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 93A5
 195+ 93A5 D5           	push de														; Push (Puntero_objeto).
 196+ 93A6 E5           	push hl														; Push (Puntero_de_impresion).
 197+ 93A7
 198+ 93A7 CD 04 95     	call Genera_coordenadas
 199+ 93AA
 200+ 93AA ED 4B EF 8B  	ld bc,(Coordenada_X)
 201+ 93AE
 202+ 93AE DD 71 01     	ld (ix+1),c
 203+ 93B1 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 93B4
 205+ 93B4 CD 5B 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 93B7
 207+ 93B7 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 93B9 D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 93BA
 210+ 93BA CD 30 95     	call Genera_datos_de_impresion
 211+ 93BD
 212+ 93BD DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 93BF
 214+ 93BF              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 93BF
 216+ 93BF CD 36 94     	call Decrementa_Contador_de_mov_masticados
 217+ 93C2 CD 13 94     	call Limpiamos_bandeja_DRAW									;! Cuando el juego funcione, probar a eliminar esta línea!!!!!!!!!!!
 218+ 93C5 CD 67 91     	call Incrementa_punteros_de_cajas
 219+ 93C8
 220+ 93C8              ; Siguiente entidad del Nivel.
 221+ 93C8
 222+ 93C8 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 93CB 23           	inc hl 														; _ entidad del Nivel.
 224+ 93CC
 225+ 93CC C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 93CD
 227+ 93CD 10 B9        	djnz 1B
 228+ 93CF
 229+ 93CF C9           	ret
 230+ 93D0
 231+ 93D0              ; -------------------------------------------------------------------------------------------------------------------
 232+ 93D0              ;
 233+ 93D0              ;	27/5/24
 234+ 93D0              ;
 235+ 93D0              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 93D0              ;
 237+ 93D0
 238+ 93D0              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 93D0              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 93D0
 241+ 93D0 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 93D3 CD 92 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 93D6
 244+ 93D6
 245+ 93D6              Construye_movimientos_masticados_Amadeus
 246+ 93D6
 247+ 93D6 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 93D9 CD 3E 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 93DC              ;															; _ el (Contador_de_mov_masticados).
 250+ 93DC CD 23 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 93DF              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 93DF
 253+ 93DF              ; Generamos movimientos masticados de Amadeus.
 254+ 93DF
 255+ 93DF 06 79        	ld b,121												; $0079, 121d.
 256+ 93E1
 257+ 93E1 C5           1 push bc
 258+ 93E2 CD 47 97     	call Draw
 259+ 93E5 CD 23 90     	call Guarda_movimiento_masticado
 260+ 93E8
 261+ 93E8 CD BB 9A     	call Mov_right
 262+ 93EB CD BB 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 93EE
 264+ 93EE C1           	pop bc
 265+ 93EF 10 F0        	djnz 1B
 266+ 93F1
 267+ 93F1              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 93F1
 269+ 93F1              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 93F1              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 93F1
 272+ 93F1 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 93F4 01 08 00     	ld bc,8
 274+ 93F7 A7           	and a
 275+ 93F8 ED 42        	sbc hl,bc
 276+ 93FA 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 93FD
 278+ 93FD C9           	ret
 279+ 93FE
 280+ 93FE              ; ---------------------------------------------------------------------
 281+ 93FE              ;
 282+ 93FE              ;	10/02/24
 283+ 93FE              ;
 284+ 93FE              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 93FE              ;
 286+ 93FE              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 93FE
 288+ 93FE              Definicion_segun_tipo
 289+ 93FE
 290+ 93FE CD 7D 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 9401 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 9404 CD 88 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 9407 C9           	ret
 294+ 9408
 295+ 9408              ; ---------------------------------------------------------------------
 296+ 9408              ;
 297+ 9408              ;	6/7/24
 298+ 9408
 299+ 9408
 300+ 9408              Store_Restore_cajas
 301+ 9408
 302+ 9408 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 303+ 940C CD BF 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 940F CD 67 91     	call Incrementa_punteros_de_cajas
 305+ 9412 C9           	ret
 306+ 9413
 307+ 9413              ; ---------------------------------------------------------------------
 308+ 9413              ;
 309+ 9413              ;	23/6/24
 310+ 9413              ;
 311+ 9413              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 9413              ;
 313+ 9413              ;	MODIFY: HL
 314+ 9413
 315+ 9413              Limpiamos_bandeja_DRAW
 316+ 9413
 317+ 9413 ED 73 3D 8C  	ld (Stack),sp
 318+ 9417 31 13 8C     	ld sp,Vel_left
 319+ 941A
 320+ 941A AF           	xor a
 321+ 941B 67           	ld h,a
 322+ 941C 6F           	ld l,a
 323+ 941D
 324+ 941D E5           	push hl
 325+ 941E E5           	push hl
 326+ 941F E5           	push hl
 327+ 9420 E5           	push hl
 328+ 9421 E5           	push hl
 329+ 9422 E5           	push hl
 330+ 9423 E5           	push hl
 331+ 9424 E5           	push hl
 332+ 9425 E5           	push hl
 333+ 9426 E5           	push hl
 334+ 9427 E5           	push hl
 335+ 9428 E5           	push hl
 336+ 9429 E5           	push hl
 337+ 942A E5           	push hl
 338+ 942B E5           	push hl
 339+ 942C E5           	push hl
 340+ 942D E5           	push hl
 341+ 942E E5           	push hl
 342+ 942F
 343+ 942F 33           	inc sp
 344+ 9430
 345+ 9430 E5           	push hl
 346+ 9431 ED 7B 3D 8C  	ld sp,(Stack)
 347+ 9435
 348+ 9435 C9           	ret
 349+ 9436
 350+ 9436              ; ---------------------------------------------------------------------
 351+ 9436              ;
 352+ 9436              ;	23/11/24
 353+ 9436              ;
 354+ 9436              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 9436
 356+ 9436              Decrementa_Contador_de_mov_masticados
 357+ 9436
 358+ 9436 DD 6E 09     	ld l,(ix+9)
 359+ 9439 DD 66 0A     	ld h,(ix+10)
 360+ 943C
 361+ 943C 2B           	dec hl
 362+ 943D
 363+ 943D DD 75 09     	ld (ix+9),l
 364+ 9440 DD 74 0A     	ld (ix+10),h
 365+ 9443
 366+ 9443 C9           	ret
 367+ 9444
 368+ 9444              ; ---------------------------------------------------------------------
 369+ 9444              ;
 370+ 9444              ;	24/11/24
 371+ 9444
 372+ 9444              Reinicia_entidad_maliciosa
 373+ 9444
 374+ 9444              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 9444
 376+ 9444 CD 28 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 9447 CD 35 9F     	call Transfiere_datos_de_contadores
 378+ 944A
 379+ 944A              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 944A
 381+ 944A DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 944D CD FE 93     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 9450
 384+ 9450 7D           	ld a,l
 385+ 9451 C6 0B        	add 11
 386+ 9453 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 9454
 388+ 9454 CD 1D 91     	call Extrae_address
 389+ 9457
 390+ 9457 DD 75 07     	ld (ix+7),l
 391+ 945A DD 74 08     	ld (ix+8),h
 392+ 945D
 393+ 945D CD 4B 90     	call Obtenemos_puntero_de_impresion
 394+ 9460
 395+ 9460              ; Incrementa (Contador_de_vueltas)x2.
 396+ 9460              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 9460
 398+ 9460              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 9460              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 9460              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 9460              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 9460              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 9460
 404+ 9460 DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 9464
 406+ 9464 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 9467 CB 2F        	sra a
 408+ 9469 CB 2F        	sra a
 409+ 946B
 410+ 946B DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 946E
 412+ 946E 3E 40        	ld a,$40
 413+ 9470 DD BE 03     	cp (ix+3)
 414+ 9473 C0           	ret nz
 415+ 9474
 416+ 9474              ; Límitador.
 417+ 9474
 418+ 9474              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 9474
 420+ 9474 DD CB 03 2E  	sra (ix+3)
 421+ 9478 DD CB 0B 2E  	sra (ix+11)
 422+ 947C
 423+ 947C C9           	ret
 424+ 947D
 425+ 947D              ;	------------------------------------------------------------------------------------
 426+ 947D              ;
 427+ 947D              ;	09/11/24
 428+ 947D              ;
 429+ 947D              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 947D              ;
 431+ 947D              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 947D              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 947D
 434+ 947D A7           Calcula_salto_en_BC and a
 435+ 947E 28 04        	jr z,1F
 436+ 9480 CB 27        	sla a
 437+ 9482 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 9484 4F           1 ld c,a
 439+ 9485 06 00        	ld b,0
 440+ 9487 C9           	ret
 441+ 9488
 442+ 9488              ; ------------------------------------------------------------------
 443+ 9488              ;
 444+ 9488              ;	19/1/24
 445+ 9488              ;
 446+ 9488              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 9488              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 9488
 449+ 9488 A7           Situa_en_datos_de_definicion and a
 450+ 9489 ED 4A        	adc hl,bc
 451+ 948B CD 1D 91     	call Extrae_address
 452+ 948E 22 3B 8C         ld (Datos_de_entidad),hl
 453+ 9491 C9           	ret
 454+ 9492
 455+ 9492              ; ----------------------------------------------------------------------------------------------------------
 456+ 9492              ;
 457+ 9492              ;	24/6/24
 458+ 9492              ;
 459+ 9492              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 9492              ;	_ de entidad.
 461+ 9492              ;
 462+ 9492              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 9492              ;
 464+ 9492              ;
 465+ 9492              ;	MODIFICA: HL,DE y BC
 466+ 9492
 467+ 9492
 468+ 9492              Definicion_de_entidad_a_bandeja_DRAW
 469+ 9492
 470+ 9492 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 9495 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 9496 12           	ld (de),a
 473+ 9497 23           	inc hl
 474+ 9498              ;
 475+ 9498 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 949B 01 02 00     	ld bc,2
 477+ 949E ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 94A0              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 94A0 11 F1 8B     	ld de,Contador_de_vueltas
 480+ 94A3 7E           	ld a,(hl)
 481+ 94A4 12           	ld (de),a
 482+ 94A5 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 94A6
 484+ 94A6 11 03 8C     	ld de,Indice_Sprite_der
 485+ 94A9 01 04 00     	ld bc,4
 486+ 94AC ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 94AE
 488+ 94AE 11 0B 8C     	ld de,Posicion_inicio
 489+ 94B1 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 94B4 ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 94B6
 492+ 94B6 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 94B9 01 02 00     	ld bc,2
 494+ 94BC ED B0        	ldir
 495+ 94BE
 496+ 94BE C9           	ret
 497+ 94BF
 498+ 94BF              ; ----------------------------------------------------------------------------------------------------------
 499+ 94BF              ;
 500+ 94BF              ;	1/8/24
 501+ 94BF              ;
 502+ 94BF
 503+ 94BF              Parametros_de_bandeja_DRAW_a_caja
 504+ 94BF
 505+ 94BF 21 EE 8B     	ld hl,Bandeja_DRAW
 506+ 94C2 01 0C 00     	ld bc,12
 507+ 94C5 ED B0        	ldir
 508+ 94C7 C9           	ret
 509+ 94C8
 510+ 94C8              ;---------------------------------------------------------------------------------------------------------------
 511+ 94C8              ;
 512+ 94C8              ;	13/11/24
 513+ 94C8              ;
 514+ 94C8              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 94C8              ;
 516+ 94C8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 94C8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 94C8
 519+ 94C8              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 94C8              ;			- Actualiza (Numero_de_entidades).
 521+ 94C8
 522+ 94C8              ;	MODIFICA: A y B.
 523+ 94C8
 524+ 94C8
 525+ 94C8              Inicializa_Numero_parcial_de_entidades
 526+ 94C8
 527+ 94C8 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 94CB FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 94CD 38 0E        	jr c,1F
 530+ 94CF 28 0C        	jr z,1F
 531+ 94D1
 532+ 94D1              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 94D1              ; Actualizamos variables.
 534+ 94D1
 535+ 94D1 D6 06        	sub 6
 536+ 94D3 32 36 8C     	ld (Numero_de_entidades),a
 537+ 94D6 3E 06        	ld a,6
 538+ 94D8 32 37 8C     	ld (Numero_parcial_de_entidades),a
 539+ 94DB 47           	ld b,a
 540+ 94DC C9           	ret
 541+ 94DD
 542+ 94DD              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 94DD              ; (Numero_de_entidades)="0".
 544+ 94DD
 545+ 94DD 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 94E0 47           	ld b,a
 547+ 94E1 AF           	xor a
 548+ 94E2 32 36 8C     	ld (Numero_de_entidades),a
 549+ 94E5 C9           	ret
 550+ 94E6
# file closed: Rutinas_de_inicio_y_niveles.asm
2138  94E6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94E6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94E6              ;
   3+ 94E6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94E6              ;
   5+ 94E6              ; *****************************************************************************************************************************************************************************************
   6+ 94E6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94E6
   8+ 94E6 7C           calcula_tercio ld a,h
   9+ 94E7 E6 18        	and $18
  10+ 94E9 CB 2F        	sra a
  11+ 94EB CB 2F        	sra a
  12+ 94ED CB 2F        	sra a
  13+ 94EF C9           	ret
  14+ 94F0
# file closed: calcula_tercio.asm
2139  94F0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94F0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94F0              ;
   3+ 94F0              ;
   4+ 94F0              ;	CLS.
   5+ 94F0              ;
   6+ 94F0              ;	Limpia la pantalla y define sus atributos.
   7+ 94F0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94F0              ;
   9+ 94F0              ;	COLORES: 0 ..... NEGRO
  10+ 94F0              ;    		 1 ..... AZUL
  11+ 94F0              ; 			 2 ..... ROJO
  12+ 94F0              ;			 3 ..... MAGENTA
  13+ 94F0              ; 			 4 ..... VERDE
  14+ 94F0              ; 			 5 ..... CIAN
  15+ 94F0              ;			 6 ..... AMARILLO
  16+ 94F0              ; 			 7 ..... BLANCO
  17+ 94F0              ;
  18+ 94F0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94F0              ;
  20+ 94F0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94F0
  22+ 94F0
  23+ 94F0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94F3 11 01 40     	LD DE,$4001
  25+ 94F6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94F9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94FB ED B0        	LDIR
  28+ 94FD 01 FF 02     	LD BC,767
  29+ 9500 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9501 ED B0        	LDIR
  31+ 9503 C9           	ret
  32+ 9504
# file closed: Cls.asm
2140  9504              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9504              ; ------------------------------------------------------------------------
   2+ 9504              ;
   3+ 9504              ;	30/1/24
   4+ 9504              ;
   5+ 9504              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9504              ;	Fila superior "0", Columna izquierda "0".
   7+ 9504              ;
   8+ 9504              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9504              ;
  10+ 9504              ;	Modifica: A,BC y DE.
  11+ 9504
  12+ 9504              Genera_coordenadas
  13+ 9504
  14+ 9504 7D           	ld a,l
  15+ 9505 E6 1F        	and $1f
  16+ 9507
  17+ 9507 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 950A
  19+ 950A 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 950B FE 40        	cp $40
  21+ 950D 38 1C        	jr c,4F
  22+ 950F
  23+ 950F CD E6 94     	call calcula_tercio
  24+ 9512 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9513
  26+ 9513 1E 00        	ld e,0
  27+ 9515 7D           	ld a,l
  28+ 9516 E6 E0        	and $e0
  29+ 9518 28 01        	jr z,1F
  30+ 951A 04           	inc b
  31+ 951B
  32+ 951B 04           1 inc b
  33+ 951C 05           	dec b
  34+ 951D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 951F              ;														; _ , salimos.
  36+ 951F 1C           3 inc e
  37+ 9520 D6 20        	sub 32
  38+ 9522 20 FB        	jr nz,3B
  39+ 9524 10 F5        	djnz 1B
  40+ 9526
  41+ 9526 7B           2 ld a,e
  42+ 9527 32 F0 8B     	ld (Coordenada_y),a
  43+ 952A C9           	ret
  44+ 952B
  45+ 952B AF           4 xor a
  46+ 952C 32 F0 8B     	ld (Coordenada_y),a
  47+ 952F C9           	ret
  48+ 9530
# file closed: Genera_coordenadas.asm
2141  9530              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9530              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9530              ;
   3+ 9530              ;	20/09/24
   4+ 9530              ;
   5+ 9530              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9530              ;   DE contiene Puntero_objeto.
   7+ 9530              ;   IX contiene el Puntero de impresión.
   8+ 9530
   9+ 9530              Genera_datos_de_impresion
  10+ 9530
  11+ 9530 ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9534
  13+ 9534 2A 5F 8C         ld hl,(Scanlines_album_SP)
  14+ 9537
  15+ 9537 3E 05            ld a,5
  16+ 9539 85               add l
  17+ 953A 6F               ld l,a
  18+ 953B
  19+ 953B F9               ld sp,hl
  20+ 953C 22 5F 8C         ld (Scanlines_album_SP),hl
  21+ 953F
  22+ 953F 21 00 00         ld hl,0
  23+ 9542
  24+ 9542 DD E5            push ix
  25+ 9544 3B               dec sp
  26+ 9545 ED 7A            adc hl,sp
  27+ 9547 D5               push de
  28+ 9548
  29+ 9548              ; Recuperamos SP.
  30+ 9548
  31+ 9548 ED 7B 3D 8C      ld sp,(Stack)
  32+ 954C
  33+ 954C E5               push hl
  34+ 954D F1               pop af
  35+ 954E 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 954F
  37+ 954F              ; Tenemos el encabezado listo.
  38+ 954F              ; Preparamos registros para generar los scanlines.
  39+ 954F
  40+ 954F DD E5            push ix
  41+ 9551 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9552
  43+ 9552 ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  44+ 9556
  45+ 9556              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 9556              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 9556
  48+ 9556 7C               ld a,h
  49+ 9557 FE 50            cp $50
  50+ 9559 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 955B
  52+ 955B 20 05            jr nz,2F
  53+ 955D
  54+ 955D 7D               ld a,l
  55+ 955E FE E0            cp $e0
  56+ 9560 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9562
  58+ 9562 7D           2 ld a,l
  59+ 9563 FE C0            cp $c0
  60+ 9565 D2 FB 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 9568
  62+ 9568              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 9568
  64+ 9568 CD F9 99         call NextScan
  65+ 956B EB               ex de,hl
  66+ 956C
  67+ 956C 73               ld (hl),e
  68+ 956D 23               inc hl
  69+ 956E 72               ld (hl),d
  70+ 956F 23               inc hl
  71+ 9570
  72+ 9570 EB               ex de,hl
  73+ 9571
  74+ 9571 CD F9 99         call NextScan
  75+ 9574 EB               ex de,hl
  76+ 9575
  77+ 9575 73               ld (hl),e
  78+ 9576 23               inc hl
  79+ 9577 72               ld (hl),d
  80+ 9578 23               inc hl
  81+ 9579
  82+ 9579 EB               ex de,hl
  83+ 957A
  84+ 957A CD F9 99         call NextScan
  85+ 957D EB               ex de,hl
  86+ 957E
  87+ 957E 73               ld (hl),e
  88+ 957F 23               inc hl
  89+ 9580 72               ld (hl),d
  90+ 9581 23               inc hl
  91+ 9582
  92+ 9582 EB               ex de,hl
  93+ 9583
  94+ 9583 CD F9 99         call NextScan
  95+ 9586 EB               ex de,hl
  96+ 9587
  97+ 9587 73               ld (hl),e
  98+ 9588 23               inc hl
  99+ 9589 72               ld (hl),d
 100+ 958A 23               inc hl
 101+ 958B
 102+ 958B EB               ex de,hl
 103+ 958C
 104+ 958C CD F9 99         call NextScan
 105+ 958F EB               ex de,hl
 106+ 9590
 107+ 9590 73               ld (hl),e
 108+ 9591 23               inc hl
 109+ 9592 72               ld (hl),d
 110+ 9593 23               inc hl
 111+ 9594
 112+ 9594 EB               ex de,hl
 113+ 9595
 114+ 9595 CD F9 99         call NextScan
 115+ 9598 EB               ex de,hl
 116+ 9599
 117+ 9599 73               ld (hl),e
 118+ 959A 23               inc hl
 119+ 959B 72               ld (hl),d
 120+ 959C 23               inc hl
 121+ 959D
 122+ 959D EB               ex de,hl
 123+ 959E
 124+ 959E CD F9 99         call NextScan
 125+ 95A1 EB               ex de,hl
 126+ 95A2
 127+ 95A2 73               ld (hl),e
 128+ 95A3 23               inc hl
 129+ 95A4 72               ld (hl),d
 130+ 95A5 23               inc hl
 131+ 95A6
 132+ 95A6 EB               ex de,hl
 133+ 95A7
 134+ 95A7 CD F9 99         call NextScan
 135+ 95AA EB               ex de,hl
 136+ 95AB
 137+ 95AB 73               ld (hl),e
 138+ 95AC 23               inc hl
 139+ 95AD 72               ld (hl),d
 140+ 95AE 23               inc hl
 141+ 95AF
 142+ 95AF EB               ex de,hl
 143+ 95B0
 144+ 95B0 CD F9 99         call NextScan
 145+ 95B3 EB               ex de,hl
 146+ 95B4
 147+ 95B4 73               ld (hl),e
 148+ 95B5 23               inc hl
 149+ 95B6 72               ld (hl),d
 150+ 95B7 23               inc hl
 151+ 95B8
 152+ 95B8 EB               ex de,hl
 153+ 95B9
 154+ 95B9 CD F9 99         call NextScan
 155+ 95BC EB               ex de,hl
 156+ 95BD
 157+ 95BD 73               ld (hl),e
 158+ 95BE 23               inc hl
 159+ 95BF 72               ld (hl),d
 160+ 95C0 23               inc hl
 161+ 95C1
 162+ 95C1 EB               ex de,hl
 163+ 95C2
 164+ 95C2 CD F9 99         call NextScan
 165+ 95C5 EB               ex de,hl
 166+ 95C6
 167+ 95C6 73               ld (hl),e
 168+ 95C7 23               inc hl
 169+ 95C8 72               ld (hl),d
 170+ 95C9 23               inc hl
 171+ 95CA
 172+ 95CA EB               ex de,hl
 173+ 95CB
 174+ 95CB CD F9 99         call NextScan
 175+ 95CE EB               ex de,hl
 176+ 95CF
 177+ 95CF 73               ld (hl),e
 178+ 95D0 23               inc hl
 179+ 95D1 72               ld (hl),d
 180+ 95D2 23               inc hl
 181+ 95D3
 182+ 95D3 EB               ex de,hl
 183+ 95D4
 184+ 95D4 CD F9 99         call NextScan
 185+ 95D7 EB               ex de,hl
 186+ 95D8
 187+ 95D8 73               ld (hl),e
 188+ 95D9 23               inc hl
 189+ 95DA 72               ld (hl),d
 190+ 95DB 23               inc hl
 191+ 95DC
 192+ 95DC EB               ex de,hl
 193+ 95DD
 194+ 95DD CD F9 99         call NextScan
 195+ 95E0 EB               ex de,hl
 196+ 95E1
 197+ 95E1 73               ld (hl),e
 198+ 95E2 23               inc hl
 199+ 95E3 72               ld (hl),d
 200+ 95E4 23               inc hl
 201+ 95E5
 202+ 95E5 EB               ex de,hl
 203+ 95E6
 204+ 95E6 CD F9 99         call NextScan
 205+ 95E9 EB               ex de,hl
 206+ 95EA
 207+ 95EA              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 95EA              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 95EA              ;   _ generar sus scanlines.
 210+ 95EA
 211+ 95EA              ;    ld (Puntero_de_impresion_disparo),de
 212+ 95EA
 213+ 95EA 73               ld (hl),e
 214+ 95EB 23               inc hl
 215+ 95EC 72               ld (hl),d
 216+ 95ED 23               inc hl
 217+ 95EE
 218+ 95EE              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 95EE
 220+ 95EE 22 5F 8C         ld (Scanlines_album_SP),hl
 221+ 95F1
 222+ 95F1 EB               ex de,hl
 223+ 95F2
 224+ 95F2              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 95F2
 226+ 95F2              ;    call NextScan
 227+ 95F2              ;    call NextScan
 228+ 95F2
 229+ 95F2 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 95F5
 231+ 95F5              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 95F5
 233+ 95F5 08               ex af,af
 234+ 95F6
 235+ 95F6 F5               push af
 236+ 95F7 E1               pop hl
 237+ 95F8
 238+ 95F8 36 10            ld (hl),16
 239+ 95FA
 240+ 95FA C9               ret
 241+ 95FB
 242+ 95FB              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 95FB
 244+ 95FB              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 95FB
 246+ 95FB 3E 57            ld a,$57
 247+ 95FD 94               sub h
 248+ 95FE 47               ld b,a
 249+ 95FF
 250+ 95FF 3E DF            ld a,$df
 251+ 9601 BD               cp l
 252+ 9602 38 04            jr c,1F
 253+ 9604
 254+ 9604 3E 08            ld a,8
 255+ 9606 80               add b
 256+ 9607 47               ld b,a
 257+ 9608
 258+ 9608              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 9608              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 9608
 261+ 9608 48           1 ld c,b
 262+ 9609 0C               inc c
 263+ 960A
 264+ 960A 04               inc b
 265+ 960B 05               dec b
 266+ 960C 20 02            jr nz,3F
 267+ 960E
 268+ 960E 18 0B            jr 6F
 269+ 9610
 270+ 9610 CD F9 99     3 call NextScan
 271+ 9613 EB               ex de,hl
 272+ 9614
 273+ 9614 73               ld (hl),e
 274+ 9615 23               inc hl
 275+ 9616 72               ld (hl),d
 276+ 9617 23               inc hl
 277+ 9618
 278+ 9618 EB               ex de,hl
 279+ 9619 10 F5            djnz 3B
 280+ 961B
 281+ 961B ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 282+ 961F
 283+ 961F 08           5 ex af,af
 284+ 9620 F5               push af
 285+ 9621 E1               pop hl
 286+ 9622
 287+ 9622 71               ld (hl),c
 288+ 9623
 289+ 9623 C9               ret
 290+ 9624
# file closed: Genera_datos_de_impresion.asm
2142  9624              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9624              ; -----------------------------------------------------------------------------
   2+ 9624              ;
   3+ 9624              ;   11/03/24
   4+ 9624              ;
   5+ 9624
   6+ 9624              Pinta_Sprites
   7+ 9624
   8+ 9624              ;    ld hl,(Scanlines_album_SP)
   9+ 9624              ;    call Extrae_address
  10+ 9624
  11+ 9624              ;    inc h
  12+ 9624              ;    dec h
  13+ 9624              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9624
  15+ 9624 ED 73 3D 8C      ld (Stack),sp
  16+ 9628
  17+ 9628 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9629              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9629 2C               inc l
  20+ 962A 2C               inc l
  21+ 962B
  22+ 962B 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 962C
  24+ 962C 2C               inc l
  25+ 962D F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 962E
  27+ 962E              ;   Seleccionamos rutina de impresión:
  28+ 962E
  29+ 962E 3E 10            ld a,16
  30+ 9630 B8               cp b
  31+ 9631 C2 2D 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9634
  33+ 9634              ;   Rutinas:
  34+ 9634
  35+ 9634              Pinta_rapido    ;   1520 t/states.
  36+ 9634
  37+ 9634 E1               pop hl
  38+ 9635
  39+ 9635 1A               ld a,(de)
  40+ 9636 AE               xor (hl)
  41+ 9637 77               ld (hl),a
  42+ 9638 2C               inc l
  43+ 9639 1C               inc e
  44+ 963A 1A               ld a,(de)
  45+ 963B AE               xor (hl)
  46+ 963C 77               ld (hl),a
  47+ 963D 2C               inc l
  48+ 963E 1C               inc e
  49+ 963F 1A               ld a,(de)
  50+ 9640 AE               xor (hl)
  51+ 9641 77               ld (hl),a
  52+ 9642 13               inc de
  53+ 9643
  54+ 9643 E1               pop hl
  55+ 9644
  56+ 9644 1A               ld a,(de)
  57+ 9645 AE               xor (hl)
  58+ 9646 77               ld (hl),a
  59+ 9647 2C               inc l
  60+ 9648 1C               inc e
  61+ 9649 1A               ld a,(de)
  62+ 964A AE               xor (hl)
  63+ 964B 77               ld (hl),a
  64+ 964C 2C               inc l
  65+ 964D 1C               inc e
  66+ 964E 1A               ld a,(de)
  67+ 964F AE               xor (hl)
  68+ 9650 77               ld (hl),a
  69+ 9651 13               inc de
  70+ 9652
  71+ 9652 E1               pop hl
  72+ 9653
  73+ 9653 1A               ld a,(de)
  74+ 9654 AE               xor (hl)
  75+ 9655 77               ld (hl),a
  76+ 9656 2C               inc l
  77+ 9657 1C               inc e
  78+ 9658 1A               ld a,(de)
  79+ 9659 AE               xor (hl)
  80+ 965A 77               ld (hl),a
  81+ 965B 2C               inc l
  82+ 965C 1C               inc e
  83+ 965D 1A               ld a,(de)
  84+ 965E AE               xor (hl)
  85+ 965F 77               ld (hl),a
  86+ 9660 13               inc de
  87+ 9661
  88+ 9661 E1               pop hl
  89+ 9662
  90+ 9662 1A               ld a,(de)
  91+ 9663 AE               xor (hl)
  92+ 9664 77               ld (hl),a
  93+ 9665 2C               inc l
  94+ 9666 1C               inc e
  95+ 9667 1A               ld a,(de)
  96+ 9668 AE               xor (hl)
  97+ 9669 77               ld (hl),a
  98+ 966A 2C               inc l
  99+ 966B 1C               inc e
 100+ 966C 1A               ld a,(de)
 101+ 966D AE               xor (hl)
 102+ 966E 77               ld (hl),a
 103+ 966F 13               inc de
 104+ 9670
 105+ 9670 E1               pop hl
 106+ 9671
 107+ 9671 1A               ld a,(de)
 108+ 9672 AE               xor (hl)
 109+ 9673 77               ld (hl),a
 110+ 9674 2C               inc l
 111+ 9675 1C               inc e
 112+ 9676 1A               ld a,(de)
 113+ 9677 AE               xor (hl)
 114+ 9678 77               ld (hl),a
 115+ 9679 2C               inc l
 116+ 967A 1C               inc e
 117+ 967B 1A               ld a,(de)
 118+ 967C AE               xor (hl)
 119+ 967D 77               ld (hl),a
 120+ 967E 13               inc de
 121+ 967F
 122+ 967F E1               pop hl
 123+ 9680
 124+ 9680 1A               ld a,(de)
 125+ 9681 AE               xor (hl)
 126+ 9682 77               ld (hl),a
 127+ 9683 2C               inc l
 128+ 9684 1C               inc e
 129+ 9685 1A               ld a,(de)
 130+ 9686 AE               xor (hl)
 131+ 9687 77               ld (hl),a
 132+ 9688 2C               inc l
 133+ 9689 1C               inc e
 134+ 968A 1A               ld a,(de)
 135+ 968B AE               xor (hl)
 136+ 968C 77               ld (hl),a
 137+ 968D 13               inc de
 138+ 968E
 139+ 968E E1               pop hl
 140+ 968F
 141+ 968F 1A               ld a,(de)
 142+ 9690 AE               xor (hl)
 143+ 9691 77               ld (hl),a
 144+ 9692 2C               inc l
 145+ 9693 1C               inc e
 146+ 9694 1A               ld a,(de)
 147+ 9695 AE               xor (hl)
 148+ 9696 77               ld (hl),a
 149+ 9697 2C               inc l
 150+ 9698 1C               inc e
 151+ 9699 1A               ld a,(de)
 152+ 969A AE               xor (hl)
 153+ 969B 77               ld (hl),a
 154+ 969C 13               inc de
 155+ 969D
 156+ 969D E1               pop hl
 157+ 969E
 158+ 969E 1A               ld a,(de)
 159+ 969F AE               xor (hl)
 160+ 96A0 77               ld (hl),a
 161+ 96A1 2C               inc l
 162+ 96A2 1C               inc e
 163+ 96A3 1A               ld a,(de)
 164+ 96A4 AE               xor (hl)
 165+ 96A5 77               ld (hl),a
 166+ 96A6 2C               inc l
 167+ 96A7 1C               inc e
 168+ 96A8 1A               ld a,(de)
 169+ 96A9 AE               xor (hl)
 170+ 96AA 77               ld (hl),a
 171+ 96AB 13               inc de
 172+ 96AC
 173+ 96AC E1               pop hl
 174+ 96AD
 175+ 96AD 1A               ld a,(de)
 176+ 96AE AE               xor (hl)
 177+ 96AF 77               ld (hl),a
 178+ 96B0 2C               inc l
 179+ 96B1 1C               inc e
 180+ 96B2 1A               ld a,(de)
 181+ 96B3 AE               xor (hl)
 182+ 96B4 77               ld (hl),a
 183+ 96B5 2C               inc l
 184+ 96B6 1C               inc e
 185+ 96B7 1A               ld a,(de)
 186+ 96B8 AE               xor (hl)
 187+ 96B9 77               ld (hl),a
 188+ 96BA 13               inc de
 189+ 96BB
 190+ 96BB E1               pop hl
 191+ 96BC
 192+ 96BC 1A               ld a,(de)
 193+ 96BD AE               xor (hl)
 194+ 96BE 77               ld (hl),a
 195+ 96BF 2C               inc l
 196+ 96C0 1C               inc e
 197+ 96C1 1A               ld a,(de)
 198+ 96C2 AE               xor (hl)
 199+ 96C3 77               ld (hl),a
 200+ 96C4 2C               inc l
 201+ 96C5 1C               inc e
 202+ 96C6 1A               ld a,(de)
 203+ 96C7 AE               xor (hl)
 204+ 96C8 77               ld (hl),a
 205+ 96C9 13               inc de
 206+ 96CA
 207+ 96CA E1               pop hl
 208+ 96CB
 209+ 96CB 1A               ld a,(de)
 210+ 96CC AE               xor (hl)
 211+ 96CD 77               ld (hl),a
 212+ 96CE 2C               inc l
 213+ 96CF 1C               inc e
 214+ 96D0 1A               ld a,(de)
 215+ 96D1 AE               xor (hl)
 216+ 96D2 77               ld (hl),a
 217+ 96D3 2C               inc l
 218+ 96D4 1C               inc e
 219+ 96D5 1A               ld a,(de)
 220+ 96D6 AE               xor (hl)
 221+ 96D7 77               ld (hl),a
 222+ 96D8 13               inc de
 223+ 96D9
 224+ 96D9 E1               pop hl
 225+ 96DA
 226+ 96DA 1A               ld a,(de)
 227+ 96DB AE               xor (hl)
 228+ 96DC 77               ld (hl),a
 229+ 96DD 2C               inc l
 230+ 96DE 1C               inc e
 231+ 96DF 1A               ld a,(de)
 232+ 96E0 AE               xor (hl)
 233+ 96E1 77               ld (hl),a
 234+ 96E2 2C               inc l
 235+ 96E3 1C               inc e
 236+ 96E4 1A               ld a,(de)
 237+ 96E5 AE               xor (hl)
 238+ 96E6 77               ld (hl),a
 239+ 96E7 13               inc de
 240+ 96E8
 241+ 96E8 E1               pop hl
 242+ 96E9
 243+ 96E9 1A               ld a,(de)
 244+ 96EA AE               xor (hl)
 245+ 96EB 77               ld (hl),a
 246+ 96EC 2C               inc l
 247+ 96ED 1C               inc e
 248+ 96EE 1A               ld a,(de)
 249+ 96EF AE               xor (hl)
 250+ 96F0 77               ld (hl),a
 251+ 96F1 2C               inc l
 252+ 96F2 1C               inc e
 253+ 96F3 1A               ld a,(de)
 254+ 96F4 AE               xor (hl)
 255+ 96F5 77               ld (hl),a
 256+ 96F6 13               inc de
 257+ 96F7
 258+ 96F7 E1               pop hl
 259+ 96F8
 260+ 96F8 1A               ld a,(de)
 261+ 96F9 AE               xor (hl)
 262+ 96FA 77               ld (hl),a
 263+ 96FB 2C               inc l
 264+ 96FC 1C               inc e
 265+ 96FD 1A               ld a,(de)
 266+ 96FE AE               xor (hl)
 267+ 96FF 77               ld (hl),a
 268+ 9700 2C               inc l
 269+ 9701 1C               inc e
 270+ 9702 1A               ld a,(de)
 271+ 9703 AE               xor (hl)
 272+ 9704 77               ld (hl),a
 273+ 9705 13               inc de
 274+ 9706
 275+ 9706 E1               pop hl
 276+ 9707
 277+ 9707 1A               ld a,(de)
 278+ 9708 AE               xor (hl)
 279+ 9709 77               ld (hl),a
 280+ 970A 2C               inc l
 281+ 970B 1C               inc e
 282+ 970C 1A               ld a,(de)
 283+ 970D AE               xor (hl)
 284+ 970E 77               ld (hl),a
 285+ 970F 2C               inc l
 286+ 9710 1C               inc e
 287+ 9711 1A               ld a,(de)
 288+ 9712 AE               xor (hl)
 289+ 9713 77               ld (hl),a
 290+ 9714 13               inc de
 291+ 9715
 292+ 9715 E1               pop hl
 293+ 9716
 294+ 9716 1A               ld a,(de)
 295+ 9717 AE               xor (hl)
 296+ 9718 77               ld (hl),a
 297+ 9719 2C               inc l
 298+ 971A 1C               inc e
 299+ 971B 1A               ld a,(de)
 300+ 971C AE               xor (hl)
 301+ 971D 77               ld (hl),a
 302+ 971E 2C               inc l
 303+ 971F 1C               inc e
 304+ 9720 1A               ld a,(de)
 305+ 9721 AE               xor (hl)
 306+ 9722 77               ld (hl),a
 307+ 9723 13               inc de
 308+ 9724
 309+ 9724 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 9728 ED 7B 3D 8C      ld sp,(Stack)
 311+ 972C C9               ret
 312+ 972D
 313+ 972D              Pinta_lento
 314+ 972D
 315+ 972D E1           1 pop hl
 316+ 972E
 317+ 972E 1A               ld a,(de)
 318+ 972F AE               xor (hl)
 319+ 9730 77               ld (hl),a
 320+ 9731 2C               inc l
 321+ 9732 1C               inc e
 322+ 9733 1A               ld a,(de)
 323+ 9734 AE               xor (hl)
 324+ 9735 77               ld (hl),a
 325+ 9736 2C               inc l
 326+ 9737 1C               inc e
 327+ 9738 1A               ld a,(de)
 328+ 9739 AE               xor (hl)
 329+ 973A 77               ld (hl),a
 330+ 973B 13               inc de
 331+ 973C
 332+ 973C 10 EF            djnz 1B
 333+ 973E
 334+ 973E ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 9742 ED 7B 3D 8C      ld sp,(Stack)
 336+ 9746 C9               ret
# file closed: Pinta_Sprites.asm
2143  9747              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9747              ; ******************************************************************************************************************************************************************************************
   2+ 9747              ;
   3+ 9747              ; 26/06/23
   4+ 9747              ;
   5+ 9747              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9747
   7+ 9747              Draw
   8+ 9747
   9+ 9747 CD ED 99     	call Prepara_draw
  10+ 974A 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 974B A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 974C 28 05        	jr z,2F
  13+ 974E
  14+ 974E 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9751 18 0C        	jr 1F
  16+ 9753
  17+ 9753 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9756 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9759 CD E5 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 975C              ;													; _la esquina superior izquierda de la pantalla.
  21+ 975C
  22+ 975C CD 8C 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 975F
  24+ 975F 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 9762 CB 6F        	bit 5,a
  26+ 9764 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9766
  28+ 9766 CD 7B 97     	call Comprueba_limite_horizontal
  29+ 9769 CD 0B 98     	call Comprueba_limite_vertical
  30+ 976C
  31+ 976C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 976C              ; -----------------------
  33+ 976C              ; -----------------------
  34+ 976C              ; -----------------------
  35+ 976C
  36+ 976C CD 61 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 976F CD 98 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9772
  39+ 9772 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9775 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9777 32 FB 8B     	ld (Ctrl_0),a
  42+ 977A
  43+ 977A C9           	ret
  44+ 977B
  45+ 977B              ; *******************************************************************************************************************************************************************************************
  46+ 977B              ;	21/01/23
  47+ 977B              ;
  48+ 977B              ; 	Comprueba_limite_horizontal.
  49+ 977B              ;
  50+ 977B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 977B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 977B              ;
  53+ 977B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 977B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 977B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 977B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 977B
  58+ 977B
  59+ 977B
  60+ 977B 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 977E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9780 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9782 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9784 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9787 18 09            jr 6F
  66+ 9789 CB 5F        1 bit 3,a
  67+ 978B 28 0A            jr z,2F
  68+ 978D E6 F7            and $f7
  69+ 978F 32 FB 8B         ld (Ctrl_0),a
  70+ 9792 CD E5 98     6 call Inicializacion
  71+ 9795 18 5B            jr 5F
  72+ 9797 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9798
  74+ 9798              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9798              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9798
  77+ 9798 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9799 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 979C CD E6 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 979F 67           	ld h,a
  81+ 97A0 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 97A1 CD E6 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 97A4 67           	ld h,a
  84+ 97A5 A7           	and a
  85+ 97A6 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 97A8 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 97A9 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 97AC FE 02        	cp 2
  89+ 97AE 38 1E        	jr c,3F
  90+ 97B0 28 1C        	jr z,3F
  91+ 97B2 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 97B3 28 23            jr z,7F
  93+ 97B5 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 97B7 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97B9 E1           	pop hl
  96+ 97BA
  97+ 97BA              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97BA              ; _para indicar con E="2" en caso necesario.
  99+ 97BA
 100+ 97BA E5               push hl
 101+ 97BB C5               push bc
 102+ 97BC CD E6 94     	call calcula_tercio
 103+ 97BF FE 01        	cp 1
 104+ 97C1 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97C3 CD F3 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97C6 28 26            jr z,9F
 107+ 97C8 38 24            jr c,9F
 108+ 97CA 1E 00        11 ld e,0
 109+ 97CC 18 22            jr 8F
 110+ 97CE 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97CF 28 07        	jr z, 7F
 112+ 97D1 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97D3 1E 00         	ld e,0
 114+ 97D5 E1           	pop hl
 115+ 97D6 18 04        	jr 4F
 116+ 97D8 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97DA 18 15            jr 10F
 118+ 97DC
 119+ 97DC              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97DC              ; _para indicar con E="2" en caso necesario.
 121+ 97DC
 122+ 97DC E5           4 push hl
 123+ 97DD C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97DE CD E6 94     	call calcula_tercio
 125+ 97E1 FE 01        	cp 1
 126+ 97E3 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97E5 CD F3 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97E8 28 04            jr z,9F
 129+ 97EA 30 02            jr nc,9F
 130+ 97EC 18 02        	jr 8F
 131+ 97EE 1E 02        9 ld e,2
 132+ 97F0 C1           8 pop bc
 133+ 97F1 E1           10 pop hl
 134+ 97F2 C9           5 ret
 135+ 97F3
 136+ 97F3              ; --------------------
 137+ 97F3              ;
 138+ 97F3              ; 25/08/22
 139+ 97F3
 140+ 97F3 CD E6 94     Comprueba_centro call calcula_tercio
 141+ 97F6 67               ld h,a
 142+ 97F7 08           	ex af,af
 143+ 97F8 FE 02        	cp 2
 144+ 97FA 38 07        	jr c,1F
 145+ 97FC 28 05        	jr z,1F
 146+ 97FE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9801 18 03        	jr 2F
 148+ 9803 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9806 08           2 ex af,af
 150+ 9807 A7               and a
 151+ 9808 ED 42            sbc hl,bc
 152+ 980A C9               ret
 153+ 980B
 154+ 980B              ; *********************************************************************************************************************************************************************************************
 155+ 980B              ;
 156+ 980B              ;   16/8/22
 157+ 980B              ;
 158+ 980B              ;	Comprueba_limite_vertical
 159+ 980B              ;
 160+ 980B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 980B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 980B              ;
 163+ 980B
 164+ 980B 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 980E 7D           	ld a,l
 166+ 980F E6 1F        	and $1F
 167+ 9811 57           	ld d,a
 168+ 9812 3A 11 8C     	ld a,(Limite_vertical)
 169+ 9815 BA           	cp d 											; Límite - Posición.
 170+ 9816 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9817 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 981A CB 47        	bit 0,a
 173+ 981C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 981E
 175+ 981E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 981E
 177+ 981E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 981F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9821
 180+ 9821              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9821              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9821
 183+ 9821 3A EF 8B         ld a,(Coordenada_X)
 184+ 9824 16 0F            ld d,Centro_izquierda
 185+ 9826 A7               and a
 186+ 9827 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9828 28 1E            jr z,3F
 188+ 982A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 982C              ;                                                    ; _salimos sin modificar nada.
 190+ 982C 18 0E            jr 2F
 191+ 982E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 982F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9831
 194+ 9831              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9831              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9831
 197+ 9831 3A EF 8B         ld a,(Coordenada_X)
 198+ 9834 16 10            ld d,Centro_derecha
 199+ 9836 A7               and a
 200+ 9837 92               sub d
 201+ 9838 28 0E            jr z,3F
 202+ 983A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 983C              ;                                                    ; _salimos sin modificar nada.
 204+ 983C CB 43        2 bit 0,e
 205+ 983E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9840 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9841 CD D5 98         call Modificaccionne
 208+ 9844 C1           	pop bc
 209+ 9845 CD E5 98         call Inicializacion
 210+ 9848 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9849
 212+ 9849              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9849
 214+ 9849 C5           4 push bc
 215+ 984A 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 984D 0A           	ld a,(bc)
 217+ 984E 3D           	dec a
 218+ 984F 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9850 7D           	ld a,l
 220+ 9851 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9852 CB 47        	bit 0,a
 222+ 9854 28 03        	jr z,5F
 223+ 9856 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9857 18 2E        	jr 7F
 225+ 9859
 226+ 9859              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9859
 228+ 9859 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 985A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 985B 3A FB 8B     	ld a,(Ctrl_0)
 231+ 985E CB 4F        	bit 1,a
 232+ 9860 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9862 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9863
 235+ 9863              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9863
 237+ 9863 1C               inc e
 238+ 9864 1D               dec e
 239+ 9865 20 07            jr nz,12F
 240+ 9867 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9868 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9869 22 FE 8B     	ld (Posicion_actual),hl
 243+ 986C 18 44        13 jr 9F
 244+ 986E CB 43        12 bit 0,e
 245+ 9870 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9872              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9872 C1           	pop bc
 248+ 9873 18 D3        	jr 3B
 249+ 9875 80           14 add b
 250+ 9876 6F               ld l,a
 251+ 9877 22 FE 8B     	ld (Posicion_actual),hl
 252+ 987A CD D5 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 987D 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 987F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9881 32 FB 8B         ld (Ctrl_0),a
 256+ 9884 F1           	pop af
 257+ 9885 18 2B        	jr 9F
 258+ 9887
 259+ 9887              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9887
 261+ 9887 F5           7 push af
 262+ 9888 3A FB 8B     	ld a,(Ctrl_0)
 263+ 988B CB 47        	bit 0,a
 264+ 988D 20 1D        	jr nz,8F
 265+ 988F F1           	pop af
 266+ 9890
 267+ 9890              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9890
 269+ 9890 1C           	inc e
 270+ 9891 1D               dec e
 271+ 9892 20 07            jr nz,10F
 272+ 9894 90           	sub b
 273+ 9895 6F               ld l,a
 274+ 9896 22 FE 8B     	ld (Posicion_actual),hl
 275+ 9899 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 989B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 989B CB 43        10 bit 0,e
 278+ 989D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 989F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 989F C1           	pop bc
 281+ 98A0 18 A6        	jr 3B
 282+ 98A2 90           16 sub b
 283+ 98A3 6F               ld l,a
 284+ 98A4 22 FE 8B     	ld (Posicion_actual),hl
 285+ 98A7 CD D5 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 98AA 18 06            jr 9F
 287+ 98AC E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 98AE 32 FB 8B         ld (Ctrl_0),a
 289+ 98B1 F1           	pop af
 290+ 98B2 C1           9 pop bc
 291+ 98B3 1E 00        	ld e,0
 292+ 98B5 CD E5 98         call Inicializacion
 293+ 98B8 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98B9 08           	ex af,af
 295+ 98BA F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98BB 18 8B            jr 3B
 297+ 98BD
 298+ 98BD              ; --------------------
 299+ 98BD
 300+ 98BD 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98BF CD 08 9A     1 call PreviousScan
 302+ 98C2 10 FB            djnz 1B
 303+ 98C4 22 FE 8B     	ld (Posicion_actual),hl
 304+ 98C7 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98C8 C9           	ret
 306+ 98C9
 307+ 98C9              ; --------------------
 308+ 98C9
 309+ 98C9 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98CB CD F9 99     1 call NextScan
 311+ 98CE 10 FB            djnz 1B
 312+ 98D0 22 FE 8B     	ld (Posicion_actual),hl
 313+ 98D3 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98D4 C9           	ret
 315+ 98D5
 316+ 98D5              ; --------------------
 317+ 98D5              ;
 318+ 98D5              ;	22/01/23
 319+ 98D5              ;
 320+ 98D5              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98D5              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98D5              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98D5
 324+ 98D5
 325+ 98D5              Modificaccionne
 326+ 98D5
 327+ 98D5 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 98D8 FE 02        	cp 2
 329+ 98DA CC BD 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98DD DC BD 98         call c,Modifica_Pos_actual
 331+ 98E0 C8           	ret z
 332+ 98E1 CD C9 98         call Modifica_Pos_actual2
 333+ 98E4 C9               ret
 334+ 98E5
 335+ 98E5              ; *************************************************************************************************************************************************************************************************
 336+ 98E5              ;
 337+ 98E5              ;	13/8/22
 338+ 98E5              ;
 339+ 98E5              ;	Inicializacion
 340+ 98E5              ;
 341+ 98E5              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98E5              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98E5              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98E5              ;
 345+ 98E5              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98E5              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98E5              ;	_ desaparece/aparece.
 348+ 98E5
 349+ 98E5              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98E5              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98E5              ;
 352+ 98E5              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98E5              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98E5              ; 		   [E] ="0"
 355+ 98E5
 356+ 98E5              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98E5
 358+ 98E5 CD E6 94     Inicializacion call calcula_tercio
 359+ 98E8 28 36        	jr z,primit
 360+ 98EA E6 02        	and 2
 361+ 98EC 20 07        	jr nz,segmit
 362+ 98EE 7D           	ld a,l
 363+ 98EF FE 7F        	cp $7f
 364+ 98F1 38 2D        	jr c,primit
 365+ 98F3 28 2B        	jr z,primit
 366+ 98F5 CD 5B 99     segmit call column
 367+ 98F8 38 13        	jr c,tercuad
 368+ 98FA 3E 04        cuarcuad ld a,4
 369+ 98FC 32 0D 8C     	ld (Cuad_objeto),a
 370+ 98FF 21 20 48     	ld hl,$4820
 371+ 9902 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 9905 21 11 8C     	ld hl,Limite_vertical
 373+ 9908 36 0D        	ld (hl),$0d
 374+ 990A 08           	ex af,af
 375+ 990B 18 3C        	jr 1F
 376+ 990D              tercuad
 377+ 990D 3E 03        	ld a,3
 378+ 990F 32 0D 8C     	ld (Cuad_objeto),a
 379+ 9912 21 20 48     	ld hl,$4820
 380+ 9915 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 9918 21 11 8C     	ld hl,Limite_vertical
 382+ 991B 36 12        	ld (hl),$12
 383+ 991D 08           	ex af,af
 384+ 991E 18 29        	jr 1F
 385+ 9920 CD 5B 99     primit call column
 386+ 9923 38 13        	jr c, primcuad
 387+ 9925              segcuad
 388+ 9925 3E 02        	ld a,2
 389+ 9927 32 0D 8C     	ld (Cuad_objeto),a
 390+ 992A 21 C0 4F     	ld hl,$4fc0
 391+ 992D 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 9930 21 11 8C     	ld hl,Limite_vertical
 393+ 9933 36 0D        	ld (hl),$0d
 394+ 9935 08           	ex af,af
 395+ 9936 18 11        	jr 1F
 396+ 9938              primcuad
 397+ 9938 3E 01        	ld a,1
 398+ 993A 32 0D 8C     	ld (Cuad_objeto),a
 399+ 993D 21 C0 4F     	ld hl,$4fc0
 400+ 9940 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 9943 21 11 8C     	ld hl,Limite_vertical
 402+ 9946 36 12        	ld (hl),$12
 403+ 9948 08           	ex af,af
 404+ 9949
 405+ 9949 C5           1 push bc
 406+ 994A E5           	push hl
 407+ 994B D5           	push de
 408+ 994C
 409+ 994C 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 994F CD 04 95     	call Genera_coordenadas
 411+ 9952
 412+ 9952 D1           	pop de
 413+ 9953 E1           	pop hl
 414+ 9954 C1           	pop bc
 415+ 9955
 416+ 9955 21 FB 8B     	ld hl,Ctrl_0
 417+ 9958 CB EE        	set 5,(hl)
 418+ 995A C9           	ret
 419+ 995B
 420+ 995B              ; ------------------------------------------------------------------------------------------------------------------
 421+ 995B
 422+ 995B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 995B              ;
 424+ 995B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 995B
 426+ 995B 7D           column ld a,l
 427+ 995C E6 1F        	and $1f
 428+ 995E FE 10         	cp $10
 429+ 9960 C9            	ret
 430+ 9961
 431+ 9961              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9961              ;
 433+ 9961              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9961              ;
 435+ 9961              ; 14/12/22
 436+ 9961              ;
 437+ 9961              ;	Modifica: A y BC.
 438+ 9961
 439+ 9961 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9964 E6 01        	and 1
 441+ 9966 28 17        	jr z,1F
 442+ 9968
 443+ 9968              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9968
 445+ 9968 3A EF 8B     	ld a,(Coordenada_X)
 446+ 996B 47           	ld b,a
 447+ 996C 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 996D 79           	ld a,c
 449+ 996E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 996F 38 08        	jr c,2F
 451+ 9971 47           	ld b,a
 452+ 9972 79           	ld a,c
 453+ 9973 90           	sub b
 454+ 9974 32 0E 8C     	ld (Columnas),a
 455+ 9977 18 1B        	jr 4F
 456+ 9979 79           2 ld a,c
 457+ 997A 32 0E 8C     	ld (Columnas),a
 458+ 997D 18 15        	jr 4F
 459+ 997F
 460+ 997F              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 997F
 462+ 997F 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 9982 81           	add c
 464+ 9983 3D           	dec a
 465+ 9984 D6 1F        	sub $1f
 466+ 9986 38 08        	jr c,3F
 467+ 9988 47           	ld b,a
 468+ 9989 79           	ld a,c
 469+ 998A 90           	sub b
 470+ 998B 32 0E 8C     	ld (Columnas),a
 471+ 998E 18 04        	jr 4F
 472+ 9990 79           3 ld a,c
 473+ 9991 32 0E 8C     	ld (Columnas),a
 474+ 9994 D9           4 exx
 475+ 9995 4F           	ld c,a
 476+ 9996 D9           	exx
 477+ 9997 C9            ret
 478+ 9998
 479+ 9998              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9998              ;
 481+ 9998              ;   19/7/23
 482+ 9998              ;
 483+ 9998              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9998              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9998              ;
 486+ 9998              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9998              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9998              ;
 489+ 9998              ;	DESTRUYE: HL,B Y A.
 490+ 9998
 491+ 9998 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 999B FE 02        	cp 2
 493+ 999D 38 18        	jr c,1F
 494+ 999F 28 16        	jr z,1F
 495+ 99A1 E6 01        	and 1
 496+ 99A3 28 0D        	jr z,3F
 497+ 99A5
 498+ 99A5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 99A5
 500+ 99A5 CD E1 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 99A8
 502+ 99A8 7D           9 ld a,l
 503+ 99A9 E6 1F        	and $1f
 504+ 99AB 28 2A        	jr z,7F
 505+ 99AD 2B           	dec hl
 506+ 99AE 10 F8        	djnz 9B
 507+ 99B0 18 25        	jr 7F
 508+ 99B2
 509+ 99B2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 99B2
 511+ 99B2 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 99B5 18 20        	jr 7F
 513+ 99B7
 514+ 99B7 28 14        1 jr z,2F
 515+ 99B9
 516+ 99B9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99B9
 518+ 99B9 CD E1 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99BC
 520+ 99BC 7D           4 ld a,l
 521+ 99BD E6 1F        	and $1f
 522+ 99BF 28 03        	jr z,6F
 523+ 99C1 2B           	dec hl
 524+ 99C2 10 F8        	djnz 4B
 525+ 99C4 06 0F        6 ld b,15
 526+ 99C6 CD 08 9A     5 call PreviousScan
 527+ 99C9 10 FB        	djnz 5B
 528+ 99CB 18 0A        	jr 7F
 529+ 99CD
 530+ 99CD              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99CD
 532+ 99CD CD E1 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99D0 06 0F        	ld b,15
 534+ 99D2 CD 08 9A     8 call PreviousScan
 535+ 99D5 10 FB        	djnz 8B
 536+ 99D7
 537+ 99D7 E5           7 push hl
 538+ 99D8 DD E1        	pop ix
 539+ 99DA
 540+ 99DA 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 99DD E5           	push hl
 542+ 99DE FD E1        	pop iy
 543+ 99E0
 544+ 99E0 C9           	ret
 545+ 99E1
 546+ 99E1              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99E1              ;
 548+ 99E1              ;	2/1/23
 549+ 99E1              ;
 550+ 99E1              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99E1              ;
 552+ 99E1              ;	Tras esta rutina tenemos:
 553+ 99E1              ;
 554+ 99E1              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99E1              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99E1              ;
 557+ 99E1              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99E1
 559+ 99E1 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 99E4 3A 0E 8C     	ld a,(Columnas)
 561+ 99E7 3D           	dec a
 562+ 99E8 20 01        	jr nz,1F
 563+ 99EA 3C           	inc a
 564+ 99EB 47           1 ld b,a
 565+ 99EC C9           	ret
 566+ 99ED
 567+ 99ED              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99ED              ;
 569+ 99ED              ;	Prepara_draw
 570+ 99ED              ;
 571+ 99ED              ;	Es una rutina de carga.
 572+ 99ED              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99ED              ;
 574+ 99ED              ;	FUNCIONAMIENTO:
 575+ 99ED              ;
 576+ 99ED              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99ED              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99ED              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99ED              ;
 580+ 99ED              ;	DESTRUYE:
 581+ 99ED              ;
 582+ 99ED              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99ED
 584+ 99ED 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99F0 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99F1 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99F2 4E           	ld c,(hl)
 588+ 99F3 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99F6 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99F8 C9           	ret
 591+ 99F9
 592+ 99F9              ;----------------------------------------------------------------------------------------------------------------
 593+ 99F9              ;
 594+ 99F9              ;	5/08/22
 595+ 99F9              ;
 596+ 99F9              ;   NextScan.
 597+ 99F9              ;
 598+ 99F9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99F9              ;
 600+ 99F9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99F9              ;
 602+ 99F9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99F9              ;
 604+ 99F9              ;       DESTRUIDOS: AF y HL !!!
 605+ 99F9              ;
 606+ 99F9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99F9              ;
 608+ 99F9
 609+ 99F9 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99FA 7C               ld a,h
 611+ 99FB E6 07            and 7
 612+ 99FD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99FE
 614+ 99FE 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99FF C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9A01 6F               ld l,a
 617+ 9A02 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9A03
 619+ 9A03 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A04 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A06 67               ld h,a
 622+ 9A07 C9               ret
 623+ 9A08
 624+ 9A08              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A08              ;
 626+ 9A08              ;	5/08/22
 627+ 9A08              ;
 628+ 9A08              ;   PreviousScan.
 629+ 9A08              ;
 630+ 9A08              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A08              ;
 632+ 9A08              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A08              ;
 634+ 9A08              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A08              ;
 636+ 9A08              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A08              ;
 638+ 9A08              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A08              ;
 640+ 9A08
 641+ 9A08 7C           PreviousScan ld a,h
 642+ 9A09 25               dec h               ; Dec H.
 643+ 9A0A E6 07            and 7
 644+ 9A0C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A0D
 646+ 9A0D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A0E D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A10 6F               ld l,a
 649+ 9A11 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A12
 651+ 9A12 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A13 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A15 67               ld h,a
 654+ 9A16 C9               ret
 655+ 9A17
 656+ 9A17
 657+ 9A17
 658+ 9A17
 659+ 9A17
 660+ 9A17
 661+ 9A17
 662+ 9A17
 663+ 9A17
 664+ 9A17
 665+ 9A17
 666+ 9A17
# file closed: Draw_XOR.asm
2144  9A17              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A17
   2+ 9A17              ; ******************************************************************************************************************************************************************************************
   3+ 9A17              ;
   4+ 9A17              ;   20/05/23
   5+ 9A17              ;
   6+ 9A17              ;	Recompone_posicion_inicio
   7+ 9A17              ;
   8+ 9A17              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A17              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A17              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A17              ;	_ a una u otra rutina.
  12+ 9A17
  13+ 9A17              Recompone_posicion_inicio
  14+ 9A17
  15+ 9A17 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 9A1A 7D           	ld a,l
  17+ 9A1B E6 1F        	and $1f
  18+ 9A1D 28 16        	jr z,1F
  19+ 9A1F
  20+ 9A1F FE 1F        	cp $1f
  21+ 9A21 28 0D        	jr z,3F
  22+ 9A23
  23+ 9A23 21 FA 8B     	ld hl,Ctrl_2
  24+ 9A26 CB C6        	set 0,(hl)
  25+ 9A28 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 9A2B 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A2E 18 08        	jr 2F
  28+ 9A30
  29+ 9A30 CD DE 9B     3 call Mov_left
  30+ 9A33 18 03        	jr 2F
  31+ 9A35
  32+ 9A35 CD BB 9A     1 call Mov_right
  33+ 9A38 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A3B 22 00 8C     	ld (Puntero_objeto),hl
  35+ 9A3E C9           	ret
  36+ 9A3F
  37+ 9A3F              ; ******************************************************************************************************************************************************************************************
  38+ 9A3F              ;
  39+ 9A3F              ;   27/05/23
  40+ 9A3F              ;
  41+ 9A3F              ;	Mov_down
  42+ 9A3F              ;
  43+ 9A3F              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A3F              ;
  45+ 9A3F              ;
  46+ 9A3F              Mov_down
  47+ 9A3F
  48+ 9A3F CD A9 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A42              ;																	; _ repone (Puntero_objeto).
  50+ 9A42 21 FB 8B     	ld hl,Ctrl_0
  51+ 9A45 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A47              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A47              ; 																	; _ en el caso de que no lo haya.
  54+ 9A47 3A 16 8C     	ld a,(Vel_down)
  55+ 9A4A 47           	ld b,a
  56+ 9A4B 2A FE 8B         ld hl,(Posicion_actual)
  57+ 9A4E CD E6 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A51 E6 02        	and 2
  59+ 9A53 28 17        	jr z,1F
  60+ 9A55
  61+ 9A55              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A55              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A55
  64+ 9A55 7C           	ld a,h
  65+ 9A56 FE 57        	cp $57
  66+ 9A58 20 12        	jr nz,1F
  67+ 9A5A
  68+ 9A5A 7D           	ld a,l
  69+ 9A5B C6 20        	add $20
  70+ 9A5D 30 0D        	jr nc,1F
  71+ 9A5F
  72+ 9A5F              ; ------------------------------
  73+ 9A5F              ;
  74+ 9A5F              ;	12/01/24
  75+ 9A5F
  76+ 9A5F              ;	call Reaparece_arriba
  77+ 9A5F CD 6B 9D     	call Reinicio
  78+ 9A62
  79+ 9A62              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A62
  81+ 9A62 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A65 CB CF        	set 1,a
  83+ 9A67 32 65 8C     	ld (Ctrl_3),a
  84+ 9A6A
  85+ 9A6A 18 08        	jr 3F
  86+ 9A6C              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A6C              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A6C              ; ------------------------------
  89+ 9A6C
  90+ 9A6C CD F9 99     1 call NextScan
  91+ 9A6F 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A72 10 DA            djnz 2B
  93+ 9A74 CD 04 95     3 call Genera_coordenadas
  94+ 9A77 C9           	ret
  95+ 9A78
  96+ 9A78              ; ******************************************************************************************************************************************************************************************
  97+ 9A78              ;
  98+ 9A78              ;   27/05/23
  99+ 9A78              ;
 100+ 9A78              ;	Mov_up
 101+ 9A78              ;
 102+ 9A78              ; 	Mueve el Sprite hacia arriba.
 103+ 9A78              ;
 104+ 9A78              ;
 105+ 9A78              Mov_up
 106+ 9A78
 107+ 9A78 CD A9 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A7B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A7B 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A7E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A80              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A80              ; 																		; _ en el caso de que no lo haya.
 113+ 9A80 3A 15 8C     	ld a,(Vel_up)
 114+ 9A83 47           	ld b,a
 115+ 9A84 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A87 CD E6 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A8A A7           	and a
 118+ 9A8B 20 10        	jr nz,1F
 119+ 9A8D
 120+ 9A8D              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A8D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A8D
 123+ 9A8D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A8E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A90 20 0B            jr nz,1F
 126+ 9A92 7D               ld a,l
 127+ 9A93 D6 20            sub $20
 128+ 9A95 30 06            jr nc,1F
 129+ 9A97 25               dec h
 130+ 9A98
 131+ 9A98              ; -----------------------------
 132+ 9A98 CD 4C 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A9B              ;	call Reinicio
 134+ 9A9B              ; -----------------------------
 135+ 9A9B
 136+ 9A9B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A9D CD 08 9A     1 call PreviousScan
 138+ 9AA0 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9AA3 10 E2            djnz 3B
 140+ 9AA5 CD 04 95     2 call Genera_coordenadas
 141+ 9AA8 C9           	ret
 142+ 9AA9
 143+ 9AA9              ; -----------------------------
 144+ 9AA9              ;
 145+ 9AA9              ;	27/5/23
 146+ 9AA9              ;
 147+ 9AA9              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9AA9              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9AA9              ;
 150+ 9AA9              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9AA9              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9AA9              ;
 153+ 9AA9              ;	Modifica: A y (Puntero_objeto).
 154+ 9AA9
 155+ 9AA9 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9AAC CB 47        	bit 0,a
 157+ 9AAE C8           	ret z
 158+ 9AAF CB 87        	res 0,a
 159+ 9AB1 32 FA 8B     	ld (Ctrl_2),a
 160+ 9AB4 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9AB7 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9ABA C9           	ret
 163+ 9ABB
 164+ 9ABB              ; ******************************************************************************************************************************************************************************************
 165+ 9ABB              ;
 166+ 9ABB              ;	19/10/22
 167+ 9ABB              ;
 168+ 9ABB              ;	Mov_right.
 169+ 9ABB              ;
 170+ 9ABB              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9ABB              ;
 172+ 9ABB
 173+ 9ABB 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9ABE CB 77        	bit 6,a
 175+ 9AC0 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AC2
 177+ 9AC2 CD FA 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AC5 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AC6
 180+ 9AC6 21 FB 8B     	ld hl,Ctrl_0
 181+ 9AC9 CB E6        	set 4,(hl)
 182+ 9ACB 18 52        	jr 8F
 183+ 9ACD
 184+ 9ACD 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9AD0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AD2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AD2              ; 																	; _ en el caso de que no lo haya.
 188+ 9AD2 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AD5 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AD7 20 46        	jr nz,8F
 191+ 9AD9
 192+ 9AD9 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9ADC A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9ADD 28 40        	jr z,8F
 195+ 9ADF
 196+ 9ADF              ; ---------- ---------- ----------
 197+ 9ADF              ;
 198+ 9ADF              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ADF
 200+ 9ADF 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AE2 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AE4 28 11        	jr z,1F
 203+ 9AE6 38 06        	jr c,6F
 204+ 9AE8 FE 04        	cp 4
 205+ 9AEA 28 14        	jr z,7F
 206+ 9AEC 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AEE
 208+ 9AEE              ; ---------- ---------- ----------
 209+ 9AEE              ;
 210+ 9AEE              ; Perfiles de velocidad
 211+ 9AEE              ;
 212+ 9AEE
 213+ 9AEE 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AF1 FE FE        	cp $fe
 215+ 9AF3 20 2A        	jr nz,8F
 216+ 9AF5 18 10        	jr 3F
 217+ 9AF7 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AFA FE FD        	cp $fd
 219+ 9AFC 20 21        	jr nz,8F
 220+ 9AFE 18 07        	jr 3F
 221+ 9B00 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9B03 FE FB        	cp $fb
 223+ 9B05 20 18        	jr nz,8F
 224+ 9B07
 225+ 9B07              ; ---------- ---------- ----------
 226+ 9B07
 227+ 9B07              3
 228+ 9B07 CD 3A 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B0A              ;	call Reinicio
 230+ 9B0A
 231+ 9B0A              ; ---------- ---------- ----------
 232+ 9B0A              ;
 233+ 9B0A              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B0A
 235+ 9B0A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B0C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B0D CD 26 9B     	call DESPLZ_DER
 238+ 9B10 C1           	pop bc
 239+ 9B11 10 F9        	djnz 5B
 240+ 9B13 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B16 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B17 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9B1A CD 04 95     	call Genera_coordenadas
 244+ 9B1D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B1F
 246+ 9B1F              ; ---------- ---------- ----------
 247+ 9B1F
 248+ 9B1F 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9B22 CD 26 9B     	call DESPLZ_DER
 250+ 9B25 C9           2 ret
 251+ 9B26
 252+ 9B26              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B26              ;
 254+ 9B26              ;	22/9/22
 255+ 9B26              ;
 256+ 9B26
 257+ 9B26 CD 35 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B29 CD 81 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B2C CD AA 9B         call Ciclo_completo
 260+ 9B2F 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B32 CB FE        	set 7,(hl)
 262+ 9B34 C9           	ret
 263+ 9B35
 264+ 9B35              ; ******************************************************************************************************************************************************************************************
 265+ 9B35              ;	15/02/23
 266+ 9B35              ;
 267+ 9B35
 268+ 9B35 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B38 47           	ld b,a
 270+ 9B39 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B3C 23           1 inc hl
 272+ 9B3D 23           	inc hl
 273+ 9B3E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B40 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B43 CD 1D 91     	call Extrae_address
 276+ 9B46 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9B49
 278+ 9B49              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B49
 280+ 9B49              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B49              ; Cuántos movimientos hemos hecho ??
 282+ 9B49              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B49
 284+ 9B49 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B4C EB           	ex de,hl
 286+ 9B4D A7           	and a
 287+ 9B4E ED 52        	sbc hl,de
 288+ 9B50 CB 3D        	srl l
 289+ 9B52 3E 08        6 ld a,8
 290+ 9B54 95           	sub l
 291+ 9B55 30 1E        	jr nc,3F
 292+ 9B57
 293+ 9B57              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B57              ; B="0".
 295+ 9B57
 296+ 9B57 04           4 inc b
 297+ 9B58 3C           	inc a
 298+ 9B59 20 FC        	jr nz,4B
 299+ 9B5B 78           	ld a,b
 300+ 9B5C 08           	ex af,af
 301+ 9B5D 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B60 23           5 inc hl
 303+ 9B61 23           	inc hl
 304+ 9B62 10 FC        	djnz 5B
 305+ 9B64 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B67 CD 1D 91     	call Extrae_address
 307+ 9B6A 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B6D
 309+ 9B6D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B6D              ; _(Posicion_actual).
 311+ 9B6D
 312+ 9B6D 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B70 34           	inc (hl)
 314+ 9B71 08               ex af,af
 315+ 9B72 6F           	ld l,a
 316+ 9B73 18 DD        	jr 6B
 317+ 9B75
 318+ 9B75              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B75
 320+ 9B75 47           3 ld b,a
 321+ 9B76 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B79 23           2 inc hl
 323+ 9B7A 23           	inc hl
 324+ 9B7B 10 FC        	djnz 2B
 325+ 9B7D 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B80 C9           8 ret
 327+ 9B81
 328+ 9B81              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B81              ;
 330+ 9B81              ;	24/7/22
 331+ 9B81              ;
 332+ 9B81              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B81              ;
 334+ 9B81              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B81              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B81              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B81
 338+ 9B81 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B84 A7           	and a
 340+ 9B85 20 1F        	jr nz,1F
 341+ 9B87 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B89 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B8C
 344+ 9B8C 21 FD 8B     	ld hl,Columns
 345+ 9B8F 34           	inc (hl)
 346+ 9B90 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B93 E6 01        	and 1
 348+ 9B95 28 0F        	jr z,1F
 349+ 9B97 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B9A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B9B 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9B9E CD 04 95     	call Genera_coordenadas
 353+ 9BA1 CD 06 9D     	call Inc_CTRL_DESPLZ
 354+ 9BA4 18 03        	jr 2F
 355+ 9BA6 CD 06 9D     1 call Inc_CTRL_DESPLZ
 356+ 9BA9 C9           2 ret
 357+ 9BAA
 358+ 9BAA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9BAA              ;
 360+ 9BAA              ;	24/7/22
 361+ 9BAA              ;
 362+ 9BAA              ;	Ciclo_completo.
 363+ 9BAA              ;
 364+ 9BAA              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9BAA              ;
 366+ 9BAA              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9BAA              ; 	Decrementamos (Columns).
 368+ 9BAA              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9BAA              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9BAA
 371+ 9BAA
 372+ 9BAA 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9BAD FE FF        	cp $ff
 374+ 9BAF 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9BB1 E6 F0        	and $f0
 376+ 9BB3 20 28        	jr nz,3F
 377+ 9BB5
 378+ 9BB5              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9BB5
 380+ 9BB5 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9BB8 47           	ld b,a
 382+ 9BB9 3E F8        	ld a,$f8
 383+ 9BBB 80           	add b
 384+ 9BBC 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9BBF 18 1C        	jr 3F
 386+ 9BC1 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BC4 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BC5 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BC6 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9BC9 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BCC E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BCE 20 0A        	jr nz,2F
 393+ 9BD0 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BD3 23           	inc hl
 395+ 9BD4 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9BD7 CD 04 95     	call Genera_coordenadas
 397+ 9BDA
 398+ 9BDA              ; Inicia el puntero de Sprite.
 399+ 9BDA
 400+ 9BDA CD 32 91     2 call Inicia_puntero_objeto_der
 401+ 9BDD C9           3 ret
 402+ 9BDE
 403+ 9BDE              ; ******************************************************************************************************************************************************************************************
 404+ 9BDE              ;
 405+ 9BDE              ;	15/02/23
 406+ 9BDE              ;
 407+ 9BDE              ;	Mov_left.
 408+ 9BDE              ;
 409+ 9BDE              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BDE              ;
 411+ 9BDE              Mov_left
 412+ 9BDE
 413+ 9BDE 21 FB 8B     	ld hl,Ctrl_0
 414+ 9BE1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BE3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BE3              ; 																	; _ en el caso de que no lo haya.
 417+ 9BE3 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9BE6 CB 77        	bit 6,a
 419+ 9BE8 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BEA
 421+ 9BEA CD 00 9D     	call Stop_Amadeus_left
 422+ 9BED C8           	ret z
 423+ 9BEE 20 4A        	jr nz,8F
 424+ 9BF0
 425+ 9BF0 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BF3 A7           	and a
 427+ 9BF4 20 44        	jr nz,8F
 428+ 9BF6
 429+ 9BF6 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BF9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BFA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BFC
 433+ 9BFC              ; ---------- ---------- ----------
 434+ 9BFC
 435+ 9BFC 3A 13 8C     	ld a,(Vel_left)
 436+ 9BFF FE 02        	cp 2
 437+ 9C01 28 0F        	jr z,1F
 438+ 9C03 38 04        	jr c,6F
 439+ 9C05 FE 04        	cp 4
 440+ 9C07 28 12        	jr z,7F
 441+ 9C09
 442+ 9C09              ; ---------- ---------- ----------
 443+ 9C09
 444+ 9C09 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C0C FE F8        	cp $f8
 446+ 9C0E 20 2A        	jr nz,8F
 447+ 9C10 18 10        	jr 4F
 448+ 9C12 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C15 FE F9        	cp $f9
 450+ 9C17 20 21        	jr nz,8F
 451+ 9C19 18 07        	jr 4F
 452+ 9C1B 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C1E FE FB        	cp $fb
 454+ 9C20 20 18        	jr nz,8F
 455+ 9C22
 456+ 9C22              ; ---------- ---------- ----------
 457+ 9C22
 458+ 9C22              4
 459+ 9C22 CD 28 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C25              ;	call Reinicio
 461+ 9C25
 462+ 9C25              ; ---------- ---------- ----------
 463+ 9C25
 464+ 9C25 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C27 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C28
 467+ 9C28              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C28              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C28
 470+ 9C28 CD 41 9C     	call DESPLZ_IZQ
 471+ 9C2B C1           	pop bc
 472+ 9C2C 10 F9        	djnz 5B
 473+ 9C2E 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C31 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C32 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9C35 CD 04 95     	call Genera_coordenadas
 477+ 9C38 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C3A
 479+ 9C3A              ; ---------- ---------- ----------
 480+ 9C3A
 481+ 9C3A              ; Movemos, no hay recolocación.
 482+ 9C3A
 483+ 9C3A 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9C3D CD 41 9C     	call DESPLZ_IZQ
 485+ 9C40 C9           2 ret
 486+ 9C41
 487+ 9C41              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C41              ;
 489+ 9C41              ;	22/9/22
 490+ 9C41
 491+ 9C41              DESPLZ_IZQ
 492+ 9C41
 493+ 9C41 CD 50 9C     	call Desplaza_izquierda
 494+ 9C44 CD 9C 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C47 CD C4 9C     	call Ciclo_completo_2
 496+ 9C4A 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C4D CB BE        	res 7,(hl)
 498+ 9C4F C9           	ret
 499+ 9C50
 500+ 9C50              Desplaza_izquierda
 501+ 9C50
 502+ 9C50 3A 13 8C     	ld a,(Vel_left)
 503+ 9C53 47           	ld b,a
 504+ 9C54 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C57 23           1 inc hl
 506+ 9C58 23           	inc hl
 507+ 9C59 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C5B 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C5E CD 1D 91     	call Extrae_address
 510+ 9C61 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C64
 512+ 9C64              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C64
 514+ 9C64              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C64              ; Cuántos movimientos hemos hecho ??
 516+ 9C64              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C64
 518+ 9C64 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C67 EB           	ex de,hl
 520+ 9C68 A7           	and a
 521+ 9C69 ED 52        	sbc hl,de
 522+ 9C6B CB 3D        	srl l
 523+ 9C6D 3E 08        6 ld a,8
 524+ 9C6F 95           	sub l
 525+ 9C70 30 1E        	jr nc,3F
 526+ 9C72
 527+ 9C72              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C72              ; B="0".
 529+ 9C72
 530+ 9C72 04           4 inc b
 531+ 9C73 3C           	inc a
 532+ 9C74 20 FC        	jr nz,4B
 533+ 9C76 78           	ld a,b
 534+ 9C77 08           	ex af,af
 535+ 9C78 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C7B 23           5 inc hl
 537+ 9C7C 23           	inc hl
 538+ 9C7D 10 FC        	djnz 5B
 539+ 9C7F 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C82 CD 1D 91     	call Extrae_address
 541+ 9C85 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C88
 543+ 9C88              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C88              ; _(Posicion_actual).
 545+ 9C88
 546+ 9C88 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C8B 35           	dec (hl)
 548+ 9C8C 08           	ex af,af
 549+ 9C8D 6F           	ld l,a
 550+ 9C8E 18 DD        	jr 6B
 551+ 9C90
 552+ 9C90              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C90
 554+ 9C90 47           3 ld b,a
 555+ 9C91 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C94 23           2 inc hl
 557+ 9C95 23           	inc hl
 558+ 9C96 10 FC        	djnz 2B
 559+ 9C98 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C9B C9           8 ret
 561+ 9C9C
 562+ 9C9C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C9C              ;
 564+ 9C9C              ;	modifica_parametros_1er_DESPLZ
 565+ 9C9C              ;
 566+ 9C9C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C9C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C9C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C9C
 570+ 9C9C 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C9F A7           	and a
 572+ 9CA0 20 1E        	jr nz,1F
 573+ 9CA2 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9CA3 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9CA6 21 FD 8B     	ld hl,Columns
 576+ 9CA9 34           	inc (hl)
 577+ 9CAA 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9CAD E6 01        	and 1
 579+ 9CAF 20 0F        	jr nz,1F
 580+ 9CB1 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9CB4 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9CB5 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9CB8 CD 04 95     	call Genera_coordenadas
 584+ 9CBB CD 17 9D     	call Dec_CTRL_DESPLZ
 585+ 9CBE 18 03        	jr 2F
 586+ 9CC0 CD 17 9D     1 call Dec_CTRL_DESPLZ
 587+ 9CC3 C9           2 ret
 588+ 9CC4
 589+ 9CC4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CC4
 591+ 9CC4 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CC7 FE F7        	cp $f7
 593+ 9CC9 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CCB 30 2C        	jr nc,3F
 595+ 9CCD
 596+ 9CCD              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CCD
 598+ 9CCD 06 00        	ld b,0
 599+ 9CCF 04           4 inc b
 600+ 9CD0 3C           	inc a
 601+ 9CD1 FE F7        	cp $f7
 602+ 9CD3 20 FA        	jr nz,4B
 603+ 9CD5 3E FF        	ld a,$ff
 604+ 9CD7 90           	sub b
 605+ 9CD8 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9CDB 18 1C        	jr 3F
 607+ 9CDD
 608+ 9CDD              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CDD
 610+ 9CDD 21 FD 8B     1 ld hl,Columns
 611+ 9CE0 35           	dec (hl)
 612+ 9CE1 AF           	xor a
 613+ 9CE2 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9CE5 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9CE8 E6 01        	and 1
 616+ 9CEA 28 0A        	jr z,2F
 617+ 9CEC 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CEF 2B           	dec hl
 619+ 9CF0 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CF3 CD 04 95     	call Genera_coordenadas
 621+ 9CF6
 622+ 9CF6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CF6
 624+ 9CF6 CD 45 91     2 call Inicia_puntero_objeto_izq
 625+ 9CF9 C9           3 ret
 626+ 9CFA
 627+ 9CFA              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CFA              ;
 629+ 9CFA              ;	19/10/22
 630+ 9CFA              ;
 631+ 9CFA              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CFA              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CFA
 634+ 9CFA 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CFD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CFF C9           	ret
 637+ 9D00
 638+ 9D00              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9D00              ;
 640+ 9D00              ;	19/10/22
 641+ 9D00              ;
 642+ 9D00              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9D00              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9D00
 645+ 9D00 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9D03 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D05 C9           	ret
 648+ 9D06
 649+ 9D06              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D06              ;
 651+ 9D06              ;	24/7/22
 652+ 9D06              ;
 653+ 9D06              ;	Inc_CTRL_DESPLZ
 654+ 9D06              ;
 655+ 9D06              ;
 656+ 9D06              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D06
 658+ 9D06 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D09 3A 14 8C     	ld a,(Vel_right)
 660+ 9D0C A7           	and a
 661+ 9D0D 28 06        	jr z,1F
 662+ 9D0F 47           	ld b,a
 663+ 9D10 34           3 inc (hl)
 664+ 9D11 10 FD        	djnz 3B
 665+ 9D13 18 01        	jr 2F
 666+ 9D15 34           1 inc (hl)
 667+ 9D16 C9           2 ret
 668+ 9D17
 669+ 9D17              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D17              ;
 671+ 9D17              ;	5/2/23
 672+ 9D17              ;
 673+ 9D17              ;	Dec_CTRL_DESPLZ
 674+ 9D17              ;
 675+ 9D17              ;
 676+ 9D17              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D17
 678+ 9D17 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D1A 3A 13 8C     	ld a,(Vel_left)
 680+ 9D1D A7           	and a
 681+ 9D1E 28 06        	jr z,1F
 682+ 9D20 47           	ld b,a
 683+ 9D21 35           3 dec (hl)
 684+ 9D22 10 FD        	djnz 3B
 685+ 9D24 18 01        	jr 2F
 686+ 9D26 35           1 dec (hl)
 687+ 9D27 C9           2 ret
 688+ 9D28
 689+ 9D28              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D28
 691+ 9D28 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D2B 01 1F 00     	ld bc,31
 693+ 9D2E A7           	and a
 694+ 9D2F ED 4A        	adc hl,bc
 695+ 9D31 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9D34 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D37 CB C6        	set 0,(hl)
 698+ 9D39 C9           	ret
 699+ 9D3A
 700+ 9D3A              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D3A
 702+ 9D3A 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D3D 01 1F 00     	ld bc,31
 704+ 9D40 A7           	and a
 705+ 9D41 ED 42        	sbc hl,bc
 706+ 9D43 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D46 21 FB 8B     	ld hl,Ctrl_0
 708+ 9D49 CB CE        	set 1,(hl)
 709+ 9D4B C9           	ret
 710+ 9D4C
 711+ 9D4C              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D4C
 713+ 9D4C 24           Reaparece_abajo inc h
 714+ 9D4D 01 E0 17     	ld bc,$17e0
 715+ 9D50 A7           	and a
 716+ 9D51 ED 4A        	adc hl,bc
 717+ 9D53 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D56 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D59 CB D6        	set 2,(hl)
 720+ 9D5B C9           	ret
 721+ 9D5C
 722+ 9D5C              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D5C
 724+ 9D5C 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D5F A7           	and a
 726+ 9D60 ED 42        	sbc hl,bc
 727+ 9D62 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D65 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D68 CB DE        	set 3,(hl)
 730+ 9D6A C9           	ret
 731+ 9D6B
 732+ 9D6B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D6B              ;
 734+ 9D6B              ;	15/07/23
 735+ 9D6B
 736+ 9D6B              Reinicio
 737+ 9D6B
 738+ 9D6B              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D6B
 740+ 9D6B AF           	xor a
 741+ 9D6C 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D6F CD 8D 9D     	call Limpia_contenido_hl
 743+ 9D72
 744+ 9D72 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D75 CD 8D 9D     	call Limpia_contenido_hl
 746+ 9D78
 747+ 9D78 CD 6E 93     	call Situa_Puntero_indice_mov
 748+ 9D7B CD 8C 9E     	call Inicia_Puntero_mov
 749+ 9D7E
 750+ 9D7E 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D81 06 05        	ld b,5
 752+ 9D83 77           1 ld (hl),a
 753+ 9D84 23           	inc hl
 754+ 9D85 10 FC        	djnz 1B
 755+ 9D87
 756+ 9D87 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D8A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D8C
 759+ 9D8C C9           	ret
 760+ 9D8D
 761+ 9D8D 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D8E 23           	inc hl
 763+ 9D8F 77           	ld (hl),a
 764+ 9D90 C9           	ret
 765+ 9D91
 766+ 9D91              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D91              ;
 768+ 9D91              ;	18/6/24
 769+ 9D91              ;
 770+ 9D91
 771+ 9D91              Amadeus_a_izquierda
 772+ 9D91
 773+ 9D91              ;	Actualiza contador de movimientos.
 774+ 9D91
 775+ 9D91 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D94 35           	dec (hl)
 777+ 9D95 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D97
 779+ 9D97 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D9A 2B           	dec hl
 781+ 9D9B 2B           	dec hl
 782+ 9D9C 2B           	dec hl
 783+ 9D9D 2B           	dec hl
 784+ 9D9E 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9DA1
 786+ 9DA1 21 65 8C     	ld hl,Ctrl_3
 787+ 9DA4 CB EE        	set 5,(hl)
 788+ 9DA6
 789+ 9DA6 C9           	ret
 790+ 9DA7
 791+ 9DA7 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9DA8 C9           	ret
 793+ 9DA9
 794+ 9DA9
 795+ 9DA9              Amadeus_a_derecha
 796+ 9DA9
 797+ 9DA9              ;	Actualiza contador de movimientos.
 798+ 9DA9
 799+ 9DA9 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9DAC 34           	inc (hl)
 801+ 9DAD 3E 7A        	ld a,$7a
 802+ 9DAF BE           	cp (hl)
 803+ 9DB0 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9DB2
 805+ 9DB2 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9DB5 23           	inc hl
 807+ 9DB6 23           	inc hl
 808+ 9DB7 23           	inc hl
 809+ 9DB8 23           	inc hl
 810+ 9DB9 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DBC
 812+ 9DBC 21 65 8C     	ld hl,Ctrl_3
 813+ 9DBF CB EE        	set 5,(hl)
 814+ 9DC1 C9           	ret
 815+ 9DC2
 816+ 9DC2 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DC3 C9           	ret
# file closed: Direcciones.asm
2145  9DC4              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DC4              ; ----- ----- ----- ----- -----
   2+ 9DC4              ;
   3+ 9DC4              ;   28/12/23
   4+ 9DC4
   5+ 9DC4              Movimiento
   6+ 9DC4
   7+ 9DC4              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DC4
   9+ 9DC4 3A FA 8B         ld a,(Ctrl_2)
  10+ 9DC7 CB 57            bit 2,a
  11+ 9DC9 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DCB
  13+ 9DCB 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9DCE 7E               ld a,(hl)
  15+ 9DCF
  16+ 9DCF              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DCF
  18+ 9DCF              Inicia_desplazamiento.
  19+ 9DCF
  20+ 9DCF              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DCF
  22+ 9DCF CD C2 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DD2
  24+ 9DD2              ; Iniciamos (Repetimos_mov).
  25+ 9DD2
  26+ 9DD2 7E               ld a,(hl)
  27+ 9DD3 E6 0F            and $0f
  28+ 9DD5 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9DD8 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DDB
  31+ 9DDB              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DDB
  33+ 9DDB 23               inc hl
  34+ 9DDC 7E               ld a,(hl)
  35+ 9DDD 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9DE0 2B               dec hl
  37+ 9DE1
  38+ 9DE1 21 FA 8B         ld hl,Ctrl_2
  39+ 9DE4 CB D6            set 2,(hl)
  40+ 9DE6
  41+ 9DE6              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DE6              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DE6
  44+ 9DE6              Desplazamiento_iniciado
  45+ 9DE6
  46+ 9DE6 CD 96 9E         call Aplica_desplazamiento
  47+ 9DE9
  48+ 9DE9              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DE9
  50+ 9DE9 3A 65 8C         ld a,(Ctrl_3)
  51+ 9DEC CB 4F            bit 1,a
  52+ 9DEE C0               ret nz
  53+ 9DEF
  54+ 9DEF 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DF2 35               dec (hl)
  56+ 9DF3 C0               ret nz
  57+ 9DF4
  58+ 9DF4              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DF4              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DF4              ; Analiza (Cola_de_desplazamiento).
  61+ 9DF4
  62+ 9DF4 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DF7 A7               and a
  64+ 9DF8 CC EB 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DFB 28 30            jr z,Reinicia_el_movimiento
  66+ 9DFD
  67+ 9DFD FE FF            cp $ff
  68+ 9DFF 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9E01
  70+ 9E01 FE FE            cp $fe
  71+ 9E03 CC 70 9E         call z,Fijamos_bucle
  72+ 9E06 28 25            jr z,Reinicia_el_movimiento
  73+ 9E08
  74+ 9E08 FE FD            cp $fd
  75+ 9E0A 20 11            jr nz,1F
  76+ 9E0C
  77+ 9E0C              ; ---
  78+ 9E0C              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E0C
  80+ 9E0C 3A FA 8B         ld a,(Ctrl_2)
  81+ 9E0F CB 5F            bit 3,a
  82+ 9E11 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E13
  84+ 9E13              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E13
  86+ 9E13 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E16 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E18
  89+ 9E18 CD 81 9E         call Inicia_Repetimos_movimiento
  90+ 9E1B 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E1D              ; ---
  92+ 9E1D
  93+ 9E1D FE 01        1 cp 1
  94+ 9E1F CA 5A 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E22
  96+ 9E22 3D               dec a
  97+ 9E23 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9E26
  99+ 9E26 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E29 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E2C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E2C C9               ret
 103+ 9E2D
 104+ 9E2D              Reinicia_el_movimiento
 105+ 9E2D
 106+ 9E2D 3A FA 8B         ld a,(Ctrl_2)
 107+ 9E30 CB 5F            bit 3,a
 108+ 9E32 28 1B            jr z,2F
 109+ 9E34
 110+ 9E34              ; (Cola_de_desplazamiento)="254".
 111+ 9E34
 112+ 9E34 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E37 35               dec (hl)
 114+ 9E38 20 15            jr nz,2F
 115+ 9E3A
 116+ 9E3A              ; Fin de las repeticiones del último movimiento.
 117+ 9E3A
 118+ 9E3A 21 FA 8B         ld hl,Ctrl_2
 119+ 9E3D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E3F
 121+ 9E3F 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9E42 23               inc hl
 123+ 9E43 23               inc hl
 124+ 9E44 23               inc hl
 125+ 9E45 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E48              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E48 7E               ld a,(hl)
 128+ 9E49 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9E4C
 130+ 9E4C C3 F4 9D         jp Cola
 131+ 9E4F
 132+ 9E4F CD 8C 9E     2 call Inicia_Puntero_mov
 133+ 9E52
 134+ 9E52 21 FA 8B         ld hl,Ctrl_2
 135+ 9E55 CB 96            res 2,(hl)
 136+ 9E57
 137+ 9E57 C3 C4 9D         jp Movimiento
 138+ 9E5A
 139+ 9E5A              Siguiente_desplazamiento
 140+ 9E5A
 141+ 9E5A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E5A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E5A
 144+ 9E5A 21 FA 8B         ld hl,Ctrl_2
 145+ 9E5D CB 96            res 2,(hl)
 146+ 9E5F
 147+ 9E5F 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E62 23               inc hl
 149+ 9E63 23               inc hl
 150+ 9E64 22 21 8C         ld (Puntero_mov),hl
 151+ 9E67
 152+ 9E67 7E               ld a,(hl)
 153+ 9E68 A7               and a
 154+ 9E69 CC EB 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E6C CA 2D 9E         jp z,Reinicia_el_movimiento
 156+ 9E6F
 157+ 9E6F C9               ret
 158+ 9E70
 159+ 9E70              ; Subrutinas -----------------------------------------
 160+ 9E70              ; ---------- --------- --------- ---------- ----------
 161+ 9E70              ;
 162+ 9E70              ;   24/07/23
 163+ 9E70              ;
 164+ 9E70              ;   Fijamos_bucle
 165+ 9E70              ;
 166+ 9E70              ;
 167+ 9E70
 168+ 9E70              Fijamos_bucle
 169+ 9E70
 170+ 9E70 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E73 3C               inc a
 172+ 9E74 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E77
 174+ 9E77 CD EB 9E         call Incrementa_Puntero_indice_mov
 175+ 9E7A 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E7D 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E80 C9               ret
 178+ 9E81
 179+ 9E81              ; ---------- --------- --------- ---------- ----------
 180+ 9E81              ;
 181+ 9E81              ;   07/7/23
 182+ 9E81              ;
 183+ 9E81              ;   Inicia_Repetimos_movimiento
 184+ 9E81              ;
 185+ 9E81              ;
 186+ 9E81
 187+ 9E81              Inicia_Repetimos_movimiento
 188+ 9E81
 189+ 9E81              ; Iniciamos (Repetimos_movimiento).
 190+ 9E81
 191+ 9E81 DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E85 DD 7E 02         ld a,(ix+2)
 193+ 9E88 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E8B
 195+ 9E8B C9               ret
 196+ 9E8C
 197+ 9E8C              ; ---------- --------- --------- ---------- ----------
 198+ 9E8C              ;
 199+ 9E8C              ;   26/6/23
 200+ 9E8C              ;
 201+ 9E8C              ;   Inicia_Puntero_mov
 202+ 9E8C              ;
 203+ 9E8C              ;
 204+ 9E8C
 205+ 9E8C 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E8F CD 1D 91         call Extrae_address
 207+ 9E92 22 21 8C         ld (Puntero_mov),hl
 208+ 9E95 C9               ret
 209+ 9E96
 210+ 9E96              ; ---------- --------- --------- ---------- ----------
 211+ 9E96              ;
 212+ 9E96              ;   27/06/23
 213+ 9E96              ;
 214+ 9E96              ;   Aplica_movimiento.
 215+ 9E96
 216+ 9E96              Aplica_desplazamiento
 217+ 9E96
 218+ 9E96              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E96
 220+ 9E96 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E99
 222+ 9E99 7E               ld a,(hl)
 223+ 9E9A E6 F0            and $f0
 224+ 9E9C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E9D
 226+ 9E9D CB 7E            bit 7,(hl)
 227+ 9E9F 28 03            jr z,1F
 228+ 9EA1 CD 78 9A         call Mov_up
 229+ 9EA4 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9EA7 CB 76            bit 6,(hl)
 231+ 9EA9 28 03            jr z,2F
 232+ 9EAB CD 3F 9A         call Mov_down
 233+ 9EAE
 234+ 9EAE              ; Se ha aplicado reinicio ???
 235+ 9EAE              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9EAE
 237+ 9EAE              ;    ld a,(Ctrl_3)
 238+ 9EAE              ;    bit 1,a
 239+ 9EAE              ;    ret nz
 240+ 9EAE
 241+ 9EAE 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9EB1 CB 6E            bit 5,(hl)
 243+ 9EB3 28 03            jr z,3F
 244+ 9EB5 CD DE 9B         call Mov_left
 245+ 9EB8 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9EBB CB 66            bit 4,(hl)
 247+ 9EBD C8               ret z
 248+ 9EBE CD BB 9A         call Mov_right
 249+ 9EC1 C9               ret
 250+ 9EC2
 251+ 9EC2              ; ---------- --------- --------- ---------- ----------
 252+ 9EC2              ;
 253+ 9EC2              ;   26/06/23
 254+ 9EC2              ;
 255+ 9EC2              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EC2
 257+ 9EC2              Ajusta_velocidad_desplazamiento
 258+ 9EC2
 259+ 9EC2              ; 1er byte de la cadena de movimiento.
 260+ 9EC2              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EC2
 262+ 9EC2 CD E0 9E         call Extrae_nibble_alto
 263+ 9EC5
 264+ 9EC5 32 15 8C         ld (Vel_up),a
 265+ 9EC8 79               ld a,c
 266+ 9EC9 E6 0F            and $0f
 267+ 9ECB 32 16 8C         ld (Vel_down),a
 268+ 9ECE
 269+ 9ECE              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9ECE              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9ECE
 272+ 9ECE 23               inc hl
 273+ 9ECF CD E0 9E         call Extrae_nibble_alto
 274+ 9ED2
 275+ 9ED2 32 13 8C         ld (Vel_left),a
 276+ 9ED5 79               ld a,c
 277+ 9ED6 E6 0F            and $0f
 278+ 9ED8 32 14 8C         ld (Vel_right),a
 279+ 9EDB
 280+ 9EDB              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EDB
 282+ 9EDB 23               inc hl
 283+ 9EDC 22 21 8C         ld (Puntero_mov),hl
 284+ 9EDF C9               ret
 285+ 9EE0
 286+ 9EE0 06 04        Extrae_nibble_alto ld b,4
 287+ 9EE2 7E               ld a,(hl)
 288+ 9EE3 4F               ld c,a
 289+ 9EE4 E6 F0            and $f0
 290+ 9EE6 CB 3F        1 srl a
 291+ 9EE8 10 FC            djnz 1B
 292+ 9EEA C9               ret
 293+ 9EEB
 294+ 9EEB              ; ---------- --------- --------- ---------- ----------
 295+ 9EEB              ;
 296+ 9EEB              ;   5/7/23
 297+ 9EEB              ;
 298+ 9EEB              ;   Incrementa_Puntero_indice_mov
 299+ 9EEB
 300+ 9EEB              Incrementa_Puntero_indice_mov
 301+ 9EEB
 302+ 9EEB 21 25 8C         ld hl,Incrementa_puntero
 303+ 9EEE 34               inc (hl)
 304+ 9EEF
 305+ 9EEF 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9EF2 01 02 00         ld bc,2
 307+ 9EF5 A7               and a
 308+ 9EF6 09               add hl,bc
 309+ 9EF7 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9EFA
 311+ 9EFA 7E               ld a,(hl)
 312+ 9EFB A7               and a
 313+ 9EFC
 314+ 9EFC              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EFC
 316+ 9EFC              ;    jr z,$
 317+ 9EFC
 318+ 9EFC              ;! Reinicia el Patrón de movimiento.
 319+ 9EFC
 320+ 9EFC CC 01 9F         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EFF
 322+ 9EFF AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9F00
 324+ 9F00 C9               ret
 325+ 9F01
 326+ 9F01              ; ---------- --------- --------- ---------- ----------
 327+ 9F01              ;
 328+ 9F01              ;   15/01/24
 329+ 9F01              ;
 330+ 9F01              ;   Inicializa_Puntero_indice_mov
 331+ 9F01
 332+ 9F01              Inicializa_Puntero_indice_mov_2
 333+ 9F01
 334+ 9F01              ; Existe etiqueta de bucle principal???
 335+ 9F01
 336+ 9F01 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9F04 24               inc h
 338+ 9F05 25               dec h
 339+ 9F06 28 05            jr z,2F
 340+ 9F08
 341+ 9F08 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9F0B 18 14            jr 3F
 343+ 9F0D
 344+ 9F0D              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F0D
 346+ 9F0D 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9F10 47               ld b,a
 348+ 9F11
 349+ 9F11 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9F14 2B           1 dec hl
 351+ 9F15 2B               dec hl
 352+ 9F16 10 FC            djnz 1B
 353+ 9F18 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9F1B
 355+ 9F1B AF               xor a
 356+ 9F1C 32 25 8C         ld (Incrementa_puntero),a
 357+ 9F1F 18 06            jr 4F
 358+ 9F21
 359+ 9F21 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F24 32 25 8C         ld (Incrementa_puntero),a
 361+ 9F27 C9           4 ret
 362+ 9F28
 363+ 9F28              ; ----------------------------------------------------------------------
 364+ 9F28              ;
 365+ 9F28              ;   24/11/24
 366+ 9F28              ;
 367+ 9F28              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F28
 369+ 9F28 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F2B CD 7D 94         call Calcula_salto_en_BC
 371+ 9F2E 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F31 A7               and a
 373+ 9F32 ED 4A            adc hl,bc
 374+ 9F34 C9               ret
 375+ 9F35
 376+ 9F35              ; ----------------------------------------------------------------------
 377+ 9F35              ;
 378+ 9F35              ;   24/11/24
 379+ 9F35              ;
 380+ 9F35              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F35              ;
 382+ 9F35              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F35
 384+ 9F35 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F36 23               inc hl
 386+ 9F37 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F38 DD 71 09         ld (ix+9),c
 388+ 9F3B DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F3E C9               ret
 390+ 9F3F
# file closed: Movimiento.asm
2146  9F3F              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F3F              ; --------------------------------------------------------------------------------------
   2+ 9F3F              ;
   3+ 9F3F              ;   25/10/24
   4+ 9F3F              ;
   5+ 9F3F
   6+ 9F3F              Pinta_disparos_Entidades
   7+ 9F3F
   8+ 9F3F ED 73 3D 8C      ld (Stack),sp
   9+ 9F43 ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F47
  11+ 9F47 3E 02            ld a,2
  12+ 9F49 08               ex af,af
  13+ 9F4A
  14+ 9F4A 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F4C              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F4C              ;                                     _ No encontraría "0".
  17+ 9F4C FD E1        4 pop iy
  18+ 9F4E D1               pop de                          ; 1er .db IYL
  19+ 9F4F              ;                                   ; 2º  .db IYH
  20+ 9F4F              ;                                   ; 3er .db E.
  21+ 9F4F              ;   Album vacío ???
  22+ 9F4F
  23+ 9F4F FD 7D            ld a,iyl
  24+ 9F51 FD 84            add iyh
  25+ 9F53 83               add e
  26+ 9F54 28 1F            jr z,1F
  27+ 9F56
  28+ 9F56              ;   Imprime album, (contiene datos).
  29+ 9F56
  30+ 9F56 3B               dec sp
  31+ 9F57
  32+ 9F57 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F58
  34+ 9F58              ; Imprime el 1er scanline del disparo.
  35+ 9F58
  36+ 9F58 FD 7D            ld a,iyl
  37+ 9F5A AE               xor (hl)
  38+ 9F5B 77               ld (hl),a
  39+ 9F5C
  40+ 9F5C 2C               inc l
  41+ 9F5D
  42+ 9F5D FD 7C            ld a,iyh
  43+ 9F5F AE               xor (hl)
  44+ 9F60 77               ld (hl),a
  45+ 9F61
  46+ 9F61 2C               inc l
  47+ 9F62
  48+ 9F62 7B               ld a,e
  49+ 9F63 AE               xor (hl)
  50+ 9F64 77               ld (hl),a
  51+ 9F65
  52+ 9F65              ; Imprime el 2º scanline del disparo.
  53+ 9F65
  54+ 9F65 E1               pop hl
  55+ 9F66
  56+ 9F66 FD 7D            ld a,iyl
  57+ 9F68 AE               xor (hl)
  58+ 9F69 77               ld (hl),a
  59+ 9F6A
  60+ 9F6A 2C               inc l
  61+ 9F6B
  62+ 9F6B FD 7C            ld a,iyh
  63+ 9F6D AE               xor (hl)
  64+ 9F6E 77               ld (hl),a
  65+ 9F6F
  66+ 9F6F 2C               inc l
  67+ 9F70
  68+ 9F70 7B               ld a,e
  69+ 9F71 AE               xor (hl)
  70+ 9F72 77               ld (hl),a
  71+ 9F73
  72+ 9F73 10 D7            djnz 4B
  73+ 9F75
  74+ 9F75 08           1 ex af,af
  75+ 9F76 3D               dec a
  76+ 9F77 20 05            jr nz,2F
  77+ 9F79
  78+ 9F79 ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F7D C9               ret
  80+ 9F7E
  81+ 9F7E ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F82 08               ex af,af
  83+ 9F83 18 C5            jr 3B
  84+ 9F85
  85+ 9F85              ; --------------------------------------------------------------------------------------
  86+ 9F85              ;
  87+ 9F85              ;   30/10/24
  88+ 9F85              ;
  89+ 9F85
  90+ 9F85              Motor_de_disparos_entidades
  91+ 9F85
  92+ 9F85 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F88 FE 07            cp 7
  94+ 9F8A C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F8B
  96+ 9F8B 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F8D 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F90
  99+ 9F90 CD 1D 91     1 call Extrae_address
 100+ 9F93 1C               inc e
 101+ 9F94 1C               inc e
 102+ 9F95 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F99
 104+ 9F99               ; Caja vacía ???
 105+ 9F99
 106+ 9F99 2D               dec l
 107+ 9F9A 7E               ld a,(hl)
 108+ 9F9B A7               and a
 109+ 9F9C 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F9E
 111+ 9F9E              ; --- Trabajamos con caja:
 112+ 9F9E
 113+ 9F9E 2C               inc l
 114+ 9F9F
 115+ 9F9F              ; --- Existe posibilidad de impacto ???
 116+ 9F9F
 117+ 9F9F CB 46            bit 0,(hl)
 118+ 9FA1 C4 E1 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9FA4 20 37            jr nz,3F
 120+ 9FA6
 121+ 9FA6 CD 68 A0         call Rota_disparo_si_procede
 122+ 9FA9
 123+ 9FA9              ; ------------------------------------------------------------
 124+ 9FA9
 125+ 9FA9 2D               dec l
 126+ 9FAA 2D               dec l
 127+ 9FAB
 128+ 9FAB CD 1D 91         call Extrae_address
 129+ 9FAE
 130+ 9FAE              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9FAE              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9FAE
 133+ 9FAE 3A 67 8C         ld a,(Ctrl_5)
 134+ 9FB1 CB 57            bit 2,a
 135+ 9FB3 28 09            jr z,4F
 136+ 9FB5
 137+ 9FB5 CB 97            res 2,a
 138+ 9FB7 32 67 8C         ld (Ctrl_5),a
 139+ 9FBA 2C               inc l
 140+ 9FBB 2C               inc l
 141+ 9FBC 18 0C            jr 5F
 142+ 9FBE
 143+ 9FBE CB 5F        4 bit 3,a
 144+ 9FC0 28 08            jr z,5F
 145+ 9FC2
 146+ 9FC2 CB 9F            res 3,a
 147+ 9FC4 32 67 8C         ld (Ctrl_5),a
 148+ 9FC7 2D               dec l
 149+ 9FC8 2D               dec l
 150+ 9FC9 2D               dec l
 151+ 9FCA
 152+ 9FCA              ; ---------------------------------------------------------------------
 153+ 9FCA
 154+ 9FCA              ;! Velocidad del disparo de entidades.
 155+ 9FCA
 156+ 9FCA CD F9 99     5 call NextScan
 157+ 9FCD CD F9 99         call NextScan
 158+ 9FD0
 159+ 9FD0              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FD0
 161+ 9FD0 CD 45 A0         call Fin_de_disparo_de_entidad
 162+ 9FD3
 163+ 9FD3 EB               ex de,hl
 164+ 9FD4
 165+ 9FD4 73               ld (hl),e
 166+ 9FD5 23               inc hl
 167+ 9FD6 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FD7
 169+ 9FD7 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FDA 18 02            jr 2F
 171+ 9FDC
 172+ 9FDC C9               ret
 173+ 9FDD
 174+ 9FDD EB           3 ex de,hl
 175+ 9FDE 10 B0        2 djnz 1B
 176+ 9FE0
 177+ 9FE0 C9               ret
 178+ 9FE1
 179+ 9FE1              ; ------------- ------------- ------------
 180+ 9FE1              ;
 181+ 9FE1              ;   1/11/24
 182+ 9FE1
 183+ 9FE1              Comprueba_impacto_con_Amadeus
 184+ 9FE1
 185+ 9FE1              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FE1              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FE1
 188+ 9FE1              ;   Modificamos registros, así que guardamos ...
 189+ 9FE1
 190+ 9FE1 C5               push bc
 191+ 9FE2 E5               push hl
 192+ 9FE3 D5               push de
 193+ 9FE4
 194+ 9FE4 2D               dec l
 195+ 9FE5 2D               dec l
 196+ 9FE6
 197+ 9FE6 CD 1D 91         call Extrae_address
 198+ 9FE9
 199+ 9FE9 3A B8 89         ld a,(CX_Amadeus)
 200+ 9FEC 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FED
 202+ 9FED 7D               ld a,l
 203+ 9FEE E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FF0
 205+ 9FF0 06 03            ld b,3
 206+ 9FF2
 207+ 9FF2 B9           1 cp c
 208+ 9FF3 28 15            jr z,Coincidencia
 209+ 9FF5 0C               inc c
 210+ 9FF6 10 FA            djnz 1B
 211+ 9FF8
 212+ 9FF8 0D               dec c
 213+ 9FF9 0D               dec c
 214+ 9FFA 0D               dec c
 215+ 9FFB
 216+ 9FFB 3C               inc a
 217+ 9FFC B9               cp c
 218+ 9FFD 28 0B            jr z,Coincidencia
 219+ 9FFF
 220+ 9FFF 3C               inc a
 221+ A000 B9               cp c
 222+ A001 28 07            jr z,Coincidencia
 223+ A003
 224+ A003 D1           2 pop de
 225+ A004 E1               pop hl
 226+ A005 C1               pop bc
 227+ A006
 228+ A006              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ A006
 230+ A006 CB 86            res 0,(hl)
 231+ A008 AF               xor a                       ; Z before RET.
 232+ A009 C9               ret
 233+ A00A
 234+ A00A              Coincidencia
 235+ A00A
 236+ A00A              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ A00A              ;   Existe posibilidad de impacto.
 238+ A00A              ;   Vamos a averiguarlo ...
 239+ A00A
 240+ A00A 1D               dec e
 241+ A00B 1D               dec e
 242+ A00C 1D               dec e
 243+ A00D
 244+ A00D              ; DE en Puntero_objeto del disparo.
 245+ A00D              ; HL en Puntero_de_impresión del disparo.
 246+ A00D
 247+ A00D              ; Comparador:
 248+ A00D
 249+ A00D 06 03            ld b,3
 250+ A00F
 251+ A00F 1A           3 ld a,(de)
 252+ A010 4F               ld c,a
 253+ A011 A6               and (hl)
 254+ A012 B9               cp c
 255+ A013 20 06            jr nz,Amadeus_impactado
 256+ A015
 257+ A015 2C               inc l
 258+ A016 1C               inc e
 259+ A017
 260+ A017 10 F6            djnz 3B
 261+ A019
 262+ A019 18 E8            jr 2B
 263+ A01B
 264+ A01B              Amadeus_impactado
 265+ A01B
 266+ A01B              ; Borramos disparo.
 267+ A01B
 268+ A01B D1               pop de
 269+ A01C E1               pop hl
 270+ A01D
 271+ A01D E5               push hl
 272+ A01E D5               push de
 273+ A01F
 274+ A01F CD D3 A0         call Borra_6_bytes
 275+ A022
 276+ A022 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A025 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A026
 279+ A026              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A026
 281+ A026 21 BB 89         ld hl,Impacto_Amadeus
 282+ A029 36 01            ld (hl),1
 283+ A02B
 284+ A02B              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A02B              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A02B
 287+ A02B 3A BC 89         ld a,(p.imp.amadeus)
 288+ A02E FE DE            cp $de
 289+ A030 20 04            jr nz,1F
 290+ A032
 291+ A032 3D               dec a
 292+ A033 32 BC 89         ld (p.imp.amadeus),a
 293+ A036
 294+ A036              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A036
 296+ A036 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A039 21 BE 89         ld hl,Pamm_Amadeus
 298+ A03C
 299+ A03C 73               ld (hl),e
 300+ A03D 23               inc hl
 301+ A03E 72               ld (hl),d
 302+ A03F
 303+ A03F D1               pop de
 304+ A040 E1               pop hl
 305+ A041 C1               pop bc
 306+ A042
 307+ A042 AF               xor a
 308+ A043 3C               inc a               ; NZ before RET.
 309+ A044 C9               ret
 310+ A045
 311+ A045              ; ------------- ------------- ------------
 312+ A045              ;
 313+ A045              ;   31/10/24
 314+ A045
 315+ A045              Fin_de_disparo_de_entidad
 316+ A045
 317+ A045              ; Estamos en zona de Amadeus ??
 318+ A045
 319+ A045 7C               ld a,h
 320+ A046 FE 54            cp $54
 321+ A048 38 0D            jr c,1F
 322+ A04A
 323+ A04A D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A04B
 325+ A04B 5D               ld e,l
 326+ A04C 54               ld d,h
 327+ A04D
 328+ A04D 21 E0 57         ld hl,$57e0
 329+ A050 ED 52            sbc hl,de
 330+ A052
 331+ A052 38 6F            jr c,Elimina_disparo_entidad
 332+ A054
 333+ A054 6B               ld l,e
 334+ A055 62               ld h,d
 335+ A056
 336+ A056 D1               pop de
 337+ A057
 338+ A057 7C           1 ld a,h
 339+ A058 FE 50            cp $50
 340+ A05A D8               ret c
 341+ A05B
 342+ A05B 7D               ld a,l
 343+ A05C FE C0            cp $c0
 344+ A05E D8               ret c
 345+ A05F
 346+ A05F              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A05F              ; Así podremos comprobar si hay colisión más adelante.
 348+ A05F
 349+ A05F 1C               inc e
 350+ A060 1C               inc e
 351+ A061
 352+ A061 EB               ex de,hl
 353+ A062 CB C6            set 0,(hl)
 354+ A064 EB               ex de,hl
 355+ A065
 356+ A065 1D               dec e
 357+ A066 1D               dec e
 358+ A067
 359+ A067 C9               ret
 360+ A068
 361+ A068              ; ----------------------------------------------------------
 362+ A068              ;
 363+ A068              ;   08/10/24
 364+ A068
 365+ A068              ;   Estructura de un disparo de entidades.
 366+ A068
 367+ A068              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A068              ; 	defw 0											; Puntero de impresión.
 369+ A068              ;	defw 0											; Control.
 370+ A068
 371+ A068              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A068              ;   _de la entidad en el momento de disparar.
 373+ A068
 374+ A068              ;   El byte alto muestra la siguiente información:
 375+ A068              ;
 376+ A068              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A068              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A068              ;
 379+ A068              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A068              ;
 381+ A068              ;                        10xx ..... Izquierda.
 382+ A068              ;                        01xx ..... Derecha.
 383+ A068              ;                        00xx ..... Recto.
 384+ A068
 385+ A068              Rota_disparo_si_procede
 386+ A068
 387+ A068              ;   Nos situamos en el byte alto de (Control).
 388+ A068
 389+ A068 CB 76            bit 6,(hl)
 390+ A06A 20 2D            jr nz,Rota_a_derecha
 391+ A06C CB 7E            bit 7,(hl)
 392+ A06E C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A06F
 394+ A06F              Rota_a_izq
 395+ A06F
 396+ A06F E5               push hl
 397+ A070
 398+ A070 7D               ld a,l
 399+ A071 D6 05            sub 5
 400+ A073 6F               ld l,a
 401+ A074
 402+ A074 E5               push hl
 403+ A075 FD E1            pop iy
 404+ A077
 405+ A077 A7               and a
 406+ A078
 407+ A078 FD CB 02 16      rl (iy+02)
 408+ A07C FD CB 01 16      rl (iy+01)
 409+ A080 FD CB 00 16      rl (iy+00)
 410+ A084
 411+ A084 30 3B            jr nc,Exit
 412+ A086
 413+ A086              ; Desplazamiento completo hasta Carry.
 414+ A086              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A086
 416+ A086 FD 36 02 03      ld (iy+02),$03
 417+ A08A FD 36 01 00      ld (iy+01),$00
 418+ A08E FD 36 00 00      ld (iy+00),$00
 419+ A092
 420+ A092 21 67 8C         ld hl,Ctrl_5
 421+ A095 CB DE            set 3,(hl)
 422+ A097
 423+ A097 18 28            jr Exit
 424+ A099
 425+ A099              Rota_a_derecha
 426+ A099
 427+ A099 E5               push hl
 428+ A09A
 429+ A09A 7D               ld a,l
 430+ A09B D6 05            sub 5
 431+ A09D 6F               ld l,a
 432+ A09E
 433+ A09E E5               push hl
 434+ A09F FD E1            pop iy
 435+ A0A1
 436+ A0A1 A7               and a
 437+ A0A2
 438+ A0A2 FD CB 00 1E      rr (iy+00)
 439+ A0A6 FD CB 01 1E      rr (iy+01)
 440+ A0AA FD CB 02 1E      rr (iy+02)
 441+ A0AE
 442+ A0AE 30 11            jr nc,Exit
 443+ A0B0
 444+ A0B0              ; Desplazamiento completo hasta Carry.
 445+ A0B0              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A0B0
 447+ A0B0 FD 36 00 01      ld (iy+00),$01
 448+ A0B4 FD 36 01 80      ld (iy+01),$80
 449+ A0B8 FD 36 02 00      ld (iy+02),$00
 450+ A0BC
 451+ A0BC 21 67 8C         ld hl,Ctrl_5
 452+ A0BF CB D6            set 2,(hl)
 453+ A0C1
 454+ A0C1 E1           Exit pop hl
 455+ A0C2 C9               ret
 456+ A0C3
 457+ A0C3              ; ------------ ----------- ------------
 458+ A0C3              ;
 459+ A0C3              ;   25/9/24
 460+ A0C3
 461+ A0C3              Elimina_disparo_entidad
 462+ A0C3
 463+ A0C3 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0C6 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0C7
 466+ A0C7 E1               pop hl
 467+ A0C8 E5               push hl
 468+ A0C9
 469+ A0C9 2C               inc l
 470+ A0CA 2C               inc l
 471+ A0CB
 472+ A0CB CD D3 A0         call Borra_6_bytes
 473+ A0CE
 474+ A0CE D1               pop de
 475+ A0CF
 476+ A0CF 21 00 00         ld hl,0
 477+ A0D2
 478+ A0D2 C9               ret
 479+ A0D3
 480+ A0D3              ; ----- ----- ----- ----- -----
 481+ A0D3
 482+ A0D3              Borra_6_bytes
 483+ A0D3
 484+ A0D3 16 06            ld d,6                                                    ; Contador
 485+ A0D5 AF               xor a                                                     ; Borrador
 486+ A0D6 77           1 ld (hl),a
 487+ A0D7 2D               dec l
 488+ A0D8 15               dec d
 489+ A0D9 20 FB            jr nz,1B
 490+ A0DB
 491+ A0DB C9               ret
 492+ A0DC
 493+ A0DC              ; --------------------------------------------------------------------------------------
 494+ A0DC              ;
 495+ A0DC              ;   12/10/24
 496+ A0DC              ;
 497+ A0DC
 498+ A0DC              Genera_datos_de_impresion_disparos_Entidades
 499+ A0DC
 500+ A0DC 3E 07            ld a,7
 501+ A0DE 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0DF
 503+ A0DF              ; ---------------
 504+ A0DF
 505+ A0DF              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0DF
 507+ A0DF 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0E2
 509+ A0E2 CD 1D 91     1 call Extrae_address
 510+ A0E5
 511+ A0E5 13               inc de
 512+ A0E6 13               inc de
 513+ A0E7
 514+ A0E7 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0EB
 516+ A0EB 2D               dec l
 517+ A0EC 7E               ld a,(hl)
 518+ A0ED A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0EE 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0F0
 521+ A0F0              ; ----- ----- ----- -----
 522+ A0F0
 523+ A0F0 2D               dec l
 524+ A0F1 CD 1D 91         call Extrae_address
 525+ A0F4 E5               push hl
 526+ A0F5
 527+ A0F5 1D               dec e
 528+ A0F6
 529+ A0F6 EB               ex de,hl
 530+ A0F7
 531+ A0F7 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0F8 2D               dec l
 533+ A0F9 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0FA 2D               dec l
 535+ A0FB 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0FC
 537+ A0FC E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0FD
 539+ A0FD              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0FD
 541+ A0FD FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A101 FD 73 00         ld (iy+0),e
 543+ A104 FD 70 01         ld (iy+1),b
 544+ A107 FD 71 02         ld (iy+2),c
 545+ A10A
 546+ A10A FD 75 03         ld (iy+3),l
 547+ A10D FD 74 04         ld (iy+4),h
 548+ A110
 549+ A110 CD F9 99         call NextScan
 550+ A113
 551+ A113 FD 75 05         ld (iy+5),l
 552+ A116 FD 74 06         ld (iy+6),h
 553+ A119
 554+ A119 FD E5            push iy
 555+ A11B E1               pop hl
 556+ A11C
 557+ A11C 3E 07            ld a,7
 558+ A11E 85               add l
 559+ A11F 6F               ld l,a
 560+ A120
 561+ A120 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A123
 563+ A123              ; ----- ----- ----- -----
 564+ A123
 565+ A123              Situa_en_siguiente_caja
 566+ A123
 567+ A123 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A124 3D               dec a
 569+ A125 C8               ret z
 570+ A126
 571+ A126 08               ex af,af
 572+ A127 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A12A 18 B6            jr 1B
 574+ A12C
 575+ A12C              ; --------------------------------------------------------------------------------------
 576+ A12C              ;
 577+ A12C              ;   12/10/24
 578+ A12C              ;
 579+ A12C
 580+ A12C              Genera_disparo_de_entidad_maldosa
 581+ A12C
 582+ A12C              ;   Estructura de un disparo de entidades.
 583+ A12C
 584+ A12C              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A12C              ; 	defw 0											; Puntero de impresión.
 586+ A12C              ;	defw 0											; Control.
 587+ A12C
 588+ A12C              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A12C              ;   _de la entidad en el momento de disparar.
 590+ A12C
 591+ A12C              ;   El byte de control muestra la siguiente información:
 592+ A12C
 593+ A12C              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A12C              ;
 595+ A12C              ;                        10xx ..... Izquierda.
 596+ A12C              ;                        01xx ..... Derecha.
 597+ A12C              ;                        00xx ..... Recto.
 598+ A12C
 599+ A12C              ;*  Exclusiones.
 600+ A12C
 601+ A12C              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A12C              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A12C
 604+ A12C 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A12F A7               and a
 606+ A130 C8               ret z
 607+ A131
 608+ A131 3A F0 8B         ld a,(Coordenada_y)
 609+ A134 A7               and a
 610+ A135 C8               ret z
 611+ A136
 612+ A136 3D               dec a
 613+ A137 C8               ret z
 614+ A138
 615+ A138 FE 10            cp 16
 616+ A13A D0               ret nc
 617+ A13B
 618+ A13B              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A13B              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A13B              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A13B
 622+ A13B 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A13E 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A13F
 625+ A13F              ;   Decrementa el numero de disparos de entidades.
 626+ A13F
 627+ A13F 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A142 35               dec (hl)
 629+ A143
 630+ A143 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A146
 632+ A146 CD 1D 91     1 call Extrae_address
 633+ A149
 634+ A149 13               inc de
 635+ A14A 13               inc de
 636+ A14B
 637+ A14B ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A14F
 639+ A14F              ;   Comprobamos si la caja está vacía.
 640+ A14F
 641+ A14F 2D               dec l
 642+ A150 7E               ld a,(hl)
 643+ A151 A7               and a
 644+ A152 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A154 2C               inc l
 646+ A155
 647+ A155              ;   Caja vacía, vamos a generar un disparo.
 648+ A155              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A155
 650+ A155 CD 76 A1         call Genera_byte_inclinacion
 651+ A158
 652+ A158 7E               ld a,(hl)
 653+ A159 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A15A
 655+ A15A 2D               dec l
 656+ A15B
 657+ A15B CD 92 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A15E
 659+ A15E 70               ld (hl),b
 660+ A15F 2D               dec l
 661+ A160 71               ld (hl),c
 662+ A161
 663+ A161 2D               dec l
 664+ A162
 665+ A162              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A162
 667+ A162 FD 7E 02         ld a,(iy+02)
 668+ A165 77               ld (hl),a
 669+ A166 2D               dec l
 670+ A167
 671+ A167 FD 7E 01         ld a,(iy+01)
 672+ A16A 77               ld (hl),a
 673+ A16B 2D               dec l
 674+ A16C
 675+ A16C FD 7E 00         ld a,(iy+00)
 676+ A16F 77               ld (hl),a
 677+ A170
 678+ A170 C9               ret
 679+ A171
 680+ A171              ;   --- --- ---
 681+ A171
 682+ A171              Situa_en_siguiente_disparo
 683+ A171
 684+ A171 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A174 18 D0            jr 1B
 686+ A176
 687+ A176              ; --------------------------------------------------------------------------------------
 688+ A176              ;
 689+ A176              ;   09/10/24
 690+ A176              ;
 691+ A176
 692+ A176              Genera_byte_inclinacion
 693+ A176
 694+ A176              ; Determina tendencia del disparo.
 695+ A176
 696+ A176 3A B8 89         ld a,(CX_Amadeus)
 697+ A179 47               ld b,a
 698+ A17A 3A EF 8B         ld a,(Coordenada_X)
 699+ A17D 90               sub b
 700+ A17E 38 07            jr c,Disparo_a_derecha
 701+ A180
 702+ A180 FE 06        Disparo_a_izquierda cp 6
 703+ A182
 704+ A182 D8               ret c
 705+ A183 C8               ret z
 706+ A184
 707+ A184 CB FE            set 7,(hl)
 708+ A186 C9               ret
 709+ A187
 710+ A187 47           Disparo_a_derecha ld b,a
 711+ A188 3E FF            ld a,$ff
 712+ A18A 90               sub b
 713+ A18B
 714+ A18B FE 05            cp 5
 715+ A18D
 716+ A18D D8               ret c
 717+ A18E C8               ret z
 718+ A18F
 719+ A18F CB F6            set 6,(hl)
 720+ A191 C9               ret
 721+ A192
 722+ A192              ; --------------------------------------------------------------------------------------
 723+ A192              ;
 724+ A192              ;   09/10/24
 725+ A192              ;
 726+ A192
 727+ A192              Modifica_puntero_de_impresion
 728+ A192
 729+ A192              ;   Puntero de impresión del disparo en BC.
 730+ A192
 731+ A192 E5               push hl
 732+ A193
 733+ A193 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A196 CD F9 99         call NextScan
 735+ A199
 736+ A199 4D               ld c,l
 737+ A19A 44               ld b,h
 738+ A19B
 739+ A19B E1               pop hl
 740+ A19C
 741+ A19C 08               ex af,af
 742+ A19D CB 77            bit 6,a
 743+ A19F 28 06            jr z,1F
 744+ A1A1
 745+ A1A1 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A1A5 0C               inc c
 747+ A1A6 C9               ret
 748+ A1A7
 749+ A1A7 CB 7F        1 bit 7,a
 750+ A1A9 28 F6            jr z,2B
 751+ A1AB
 752+ A1AB FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A1AF 0D               dec c
 754+ A1B0
 755+ A1B0 C9               ret
 756+ A1B1
 757+ A1B1              ; --------------------------------------------------------------------------------------
 758+ A1B1              ;
 759+ A1B1              ;   31/08/24
 760+ A1B1              ;
 761+ A1B1
 762+ A1B1              Compara_con_coordenadas_de_disparo
 763+ A1B1
 764+ A1B1 3A F0 8B         ld a,(Coordenada_y)
 765+ A1B4 47               ld b,a
 766+ A1B5 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A1B8 90               sub b
 768+ A1B9
 769+ A1B9              ; A = "0" ok
 770+ A1B9              ; A = "1" ok
 771+ A1B9
 772+ A1B9 28 08            jr z,Comprueba_coordenada_X
 773+ A1BB 3D               dec a
 774+ A1BC 28 05            jr z,Comprueba_coordenada_X
 775+ A1BE
 776+ A1BE              ; A = "$ff" ok
 777+ A1BE
 778+ A1BE FE FE            cp $fe
 779+ A1C0 28 01            jr z,Comprueba_coordenada_X
 780+ A1C2
 781+ A1C2 C9               ret
 782+ A1C3
 783+ A1C3              Comprueba_coordenada_X
 784+ A1C3
 785+ A1C3 3A EF 8B         ld a,(Coordenada_X)
 786+ A1C6 47               ld b,a
 787+ A1C7 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1CA 7E               ld a,(hl)
 789+ A1CB 90               sub b
 790+ A1CC
 791+ A1CC              ; A = "0" ok
 792+ A1CC              ; A = "1" ok
 793+ A1CC
 794+ A1CC 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1CE 3D               dec a
 796+ A1CF 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1D1
 798+ A1D1              ; A = "2" ok
 799+ A1D1
 800+ A1D1 3D               dec a
 801+ A1D2 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1D4
 803+ A1D4              ; A = "$ff"
 804+ A1D4
 805+ A1D4 FE FD            cp $fd
 806+ A1D6 C0               ret nz
 807+ A1D7
 808+ A1D7              Activa_Impacto_en_entidad
 809+ A1D7
 810+ A1D7              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1D7
 812+ A1D7 3E 02            ld a,2
 813+ A1D9 32 F2 8B         ld (Impacto),a
 814+ A1DC
 815+ A1DC              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1DC
 817+ A1DC 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1DF 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1E2
 820+ A1E2 73               ld (hl),e
 821+ A1E3 23               inc hl
 822+ A1E4 72               ld (hl),d
 823+ A1E5
 824+ A1E5              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1E5
 826+ A1E5 21 6C 8C         ld hl,Impacto2
 827+ A1E8 CB 9E            res 3,(hl)
 828+ A1EA
 829+ A1EA C9               ret
 830+ A1EB
 831+ A1EB              ; --------------------------------------------------------------------------------------
 832+ A1EB              ;
 833+ A1EB              ;   13/10/24
 834+ A1EB              ;
 835+ A1EB
 836+ A1EB              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1EB
 838+ A1EB              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1EB
 840+ A1EB 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1EE 06 06            ld b,6
 842+ A1F0 AF               xor a
 843+ A1F1 77           1 ld (hl),a
 844+ A1F2 2C               inc l
 845+ A1F3 10 FC            djnz 1B
 846+ A1F5
 847+ A1F5 C9               ret
 848+ A1F6
 849+ A1F6              ; --------------------------------------------------------------------------------------
 850+ A1F6              ;
 851+ A1F6              ;   29/09/24
 852+ A1F6              ;
 853+ A1F6
 854+ A1F6              Calcula_bytes_pintado_disparos
 855+ A1F6
 856+ A1F6 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1F9 45               ld b,l
 858+ A1FA 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1FD 7D               ld a,l
 860+ A1FE
 861+ A1FE 90               sub b
 862+ A1FF 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A202
 864+ A202 C9               ret
 865+ A203
 866+ A203              ; --------------------------------------------------------------------------------------
 867+ A203              ;
 868+ A203              ;   26/10/24
 869+ A203              ;
 870+ A203              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A203              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A203              ;   _disparos que el álbum del FRAME actual).
 873+ A203
 874+ A203              Limpia_album_de_pintado_disparos_entidades
 875+ A203
 876+ A203 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A206 7E               ld a,(hl)
 878+ A207 2D               dec l
 879+ A208 46               ld b,(hl)
 880+ A209 90               sub b
 881+ A20A
 882+ A20A D8               ret c
 883+ A20B C8               ret z
 884+ A20C
 885+ A20C F5               push af
 886+ A20D 80               add b
 887+ A20E 77               ld (hl),a
 888+ A20F F1               pop af
 889+ A210
 890+ A210              ; Clean.
 891+ A210
 892+ A210 47           2 ld b,a
 893+ A211 AF               xor a
 894+ A212 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A215 77           1 ld (hl),a
 896+ A216 23               inc hl
 897+ A217 10 FC            djnz 1B
 898+ A219
 899+ A219 C9               ret
 900+ A21A
 901+ A21A              ; --------------------------------------------------------------------------------------
 902+ A21A              ;
 903+ A21A              ;   29/09/24
 904+ A21A              ;
 905+ A21A
 906+ A21A              Motor_Disparos_Amadeus
 907+ A21A
 908+ A21A 21 26 89         ld hl,Disparo_Amad+1
 909+ A21D
 910+ A21D 34               inc (hl)
 911+ A21E 35               dec (hl)
 912+ A21F
 913+ A21F C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A220
 915+ A220              ;   Esta caja contiene un disparo.
 916+ A220
 917+ A220 CD 27 A2         call Consulta_Impacto
 918+ A223 CC 40 A2         call z,Mueve_disparo_Amadeus
 919+ A226
 920+ A226 C9               ret
 921+ A227
 922+ A227              ; ----------------------
 923+ A227              ;
 924+ A227              ;
 925+ A227              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A227              ;
 927+ A227              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A227
 929+ A227
 930+ A227              Consulta_Impacto
 931+ A227
 932+ A227              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A227              ;   _sea lo más coherente posible.
 934+ A227
 935+ A227 E5               push hl
 936+ A228 2B               dec hl
 937+ A229 CD 1C A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A22C E1               pop hl
 939+ A22D 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A22E
 941+ A22E C8               ret z
 942+ A22F
 943+ A22F 3A 6C 8C         ld a,(Impacto2)
 944+ A232 CB DF            set 3,a
 945+ A234 32 6C 8C         ld (Impacto2),a
 946+ A237
 947+ A237 E5               push hl
 948+ A238 CD 09 A3         call Genera_coordenadas_de_disparo_Amadeus
 949+ A23B E1               pop hl
 950+ A23C CD 59 A2         call Elimina_disparo_Amadeus
 951+ A23F
 952+ A23F C9               ret
 953+ A240
 954+ A240              ; ----------------------
 955+ A240              ;
 956+ A240              ;
 957+ A240              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A240
 959+ A240              Mueve_disparo_Amadeus
 960+ A240
 961+ A240 CD 1D 91         call Extrae_address
 962+ A243
 963+ A243 CD 08 9A         call PreviousScan
 964+ A246 CD 08 9A         call PreviousScan
 965+ A249 CD 08 9A         call PreviousScan
 966+ A24C CD 08 9A         call PreviousScan
 967+ A24F
 968+ A24F              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A24F
 970+ A24F 7C               ld a,h
 971+ A250 D6 40            sub $40
 972+ A252 EB               ex de,hl
 973+ A253 38 04            jr c,Elimina_disparo_Amadeus
 974+ A255
 975+ A255               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A255
 977+ A255 73               ld (hl),e
 978+ A256 23               inc hl
 979+ A257 72               ld (hl),d
 980+ A258
 981+ A258 C9               ret
 982+ A259
 983+ A259              ; ----------------------
 984+ A259              ;
 985+ A259              ;   29/9/24
 986+ A259
 987+ A259              Elimina_disparo_Amadeus
 988+ A259
 989+ A259              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A259              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A259
 992+ A259              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A259              ;   	defw 0											; Puntero de impresión.
 994+ A259
 995+ A259 2B               dec hl
 996+ A25A 2B               dec hl
 997+ A25B
 998+ A25B AF               xor a
 999+ A25C 77               ld (hl),a
1000+ A25D 23               inc hl
1001+ A25E 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A25F
1003+ A25F 23               inc hl
1004+ A260 77               ld (hl),a
1005+ A261 23               inc hl
1006+ A262 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A263
1008+ A263 3E 01            ld a,1
1009+ A265 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A268
1011+ A268 CD EB A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A26B
1013+ A26B AF               xor a
1014+ A26C 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A26D
1016+ A26D C9               ret
1017+ A26E
1018+ A26E              ; --------------------------------------------------------------------------------------
1019+ A26E              ;
1020+ A26E              ;   13/10/24
1021+ A26E              ;
1022+ A26E
1023+ A26E              Pinta_disparos_Amadeus
1024+ A26E
1025+ A26E 06 02            ld b,2
1026+ A270 ED 73 3D 8C      ld (Stack),sp
1027+ A274 ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A278 D1           3 pop de
1029+ A279 14               inc d
1030+ A27A 15               dec d
1031+ A27B 28 1C            jr z,1F
1032+ A27D E1               pop hl
1033+ A27E
1034+ A27E              Imprime_scanlines_en_pantalla
1035+ A27E
1036+ A27E              ; 1er scanline
1037+ A27E
1038+ A27E 1A               ld a,(de)
1039+ A27F AE               xor (hl)
1040+ A280 77               ld (hl),a
1041+ A281
1042+ A281 1C               inc e
1043+ A282 2C               inc l
1044+ A283
1045+ A283 1A               ld a,(de)
1046+ A284 AE               xor (hl)
1047+ A285 77               ld (hl),a
1048+ A286
1049+ A286 1D               dec e
1050+ A287 E1               pop hl
1051+ A288
1052+ A288              ; 2º scanline
1053+ A288
1054+ A288 1A               ld a,(de)
1055+ A289 AE               xor (hl)
1056+ A28A 77               ld (hl),a
1057+ A28B
1058+ A28B 1C               inc e
1059+ A28C 2C               inc l
1060+ A28D
1061+ A28D 1A               ld a,(de)
1062+ A28E AE               xor (hl)
1063+ A28F 77               ld (hl),a
1064+ A290
1065+ A290 1D               dec e
1066+ A291
1067+ A291 18 06            jr 1F
1068+ A293
1069+ A293 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A297 18 DF            jr 3B
1071+ A299 10 F8        1 djnz 2B
1072+ A29B ED 7B 3D 8C      ld sp,(Stack)
1073+ A29F C9               ret
1074+ A2A0
1075+ A2A0              ; --------------------------------------------------------------------------------------
1076+ A2A0              ;
1077+ A2A0              ;   13/10/24
1078+ A2A0              ;
1079+ A2A0              ;   Modifica: HL,BC y DE.
1080+ A2A0
1081+ A2A0
1082+ A2A0              Genera_datos_de_impresion_disparos_Amadeus
1083+ A2A0
1084+ A2A0 ED 73 3D 8C      ld (Stack),sp
1085+ A2A4 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A2A7 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A2A8
1088+ A2A8 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A2A9 15               dec d
1090+ A2AA
1091+ A2AA 28 0E            jr z,Salida
1092+ A2AC
1093+ A2AC              Genera_scanlines_de_disparo_Amadeus
1094+ A2AC
1095+ A2AC E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A2AD              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A2AD ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A2B1
1099+ A2B1 C1               pop bc
1100+ A2B2 C1               pop bc
1101+ A2B3 C1               pop bc
1102+ A2B4
1103+ A2B4 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A2B5 CD 08 9A         call PreviousScan
1105+ A2B8 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A2B9 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A2BA
1108+ A2BA              Salida
1109+ A2BA
1110+ A2BA ED 7B 3D 8C      ld sp,(Stack)
1111+ A2BE
1112+ A2BE C9               ret
1113+ A2BF
1114+ A2BF              ; --------------------------------------------------------------------------------------
1115+ A2BF              ;
1116+ A2BF              ;   12/09/24
1117+ A2BF              ;
1118+ A2BF
1119+ A2BF              Genera_disparo_Amadeus
1120+ A2BF
1121+ A2BF              ;*  Exclusiones.
1122+ A2BF
1123+ A2BF 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A2C2 A7               and a
1125+ A2C3 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2C4
1127+ A2C4 3D               dec a
1128+ A2C5 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2C8
1130+ A2C8              Define_puntero_objeto_disparo
1131+ A2C8
1132+ A2C8              ;   Inicializamos contador.
1133+ A2C8
1134+ A2C8 06 00            ld b,0
1135+ A2CA
1136+ A2CA 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A2CD 2C               inc l
1138+ A2CE
1139+ A2CE 3E 80            ld a,$80
1140+ A2D0 BE               cp (hl)
1141+ A2D1 28 0D            jr z,1F
1142+ A2D3
1143+ A2D3 04               inc b
1144+ A2D4
1145+ A2D4 3E 60            ld a,$60
1146+ A2D6 BE               cp (hl)
1147+ A2D7 28 07            jr z,1F
1148+ A2D9
1149+ A2D9
1150+ A2D9 04               inc b
1151+ A2DA
1152+ A2DA 3E 18            ld a,$18
1153+ A2DC BE               cp (hl)
1154+ A2DD 28 01            jr z,1F
1155+ A2DF
1156+ A2DF 04               inc b
1157+ A2E0
1158+ A2E0              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2E0
1160+ A2E0              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2E0
1162+ A2E0 CD 08 9A     1 call PreviousScan
1163+ A2E3
1164+ A2E3 78               ld a,b
1165+ A2E4 CB 3F            srl a
1166+ A2E6 28 03            jr z,4F
1167+ A2E8
1168+ A2E8              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2E8 E5               push hl
1170+ A2E9 18 02            jr 5F
1171+ A2EB 2D           4 dec l
1172+ A2EC E5               push hl
1173+ A2ED              ; ---
1174+ A2ED
1175+ A2ED              ;   Calcula el Puntero_objeto del disparo.
1176+ A2ED
1177+ A2ED 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2F0 04               inc b
1179+ A2F1 05               dec b
1180+ A2F2 28 04            jr z,2F
1181+ A2F4
1182+ A2F4              ;   Nos desplazamos por el índice de disparos.
1183+ A2F4
1184+ A2F4 2C           3 inc l
1185+ A2F5 2C               inc l
1186+ A2F6 10 FC            djnz 3B
1187+ A2F8
1188+ A2F8              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2F8 CD 1D 91     2 call Extrae_address
1190+ A2FB E5               push hl
1191+ A2FC              ; ---
1192+ A2FC
1193+ A2FC              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2FC              ; HL en el 1er .db de la caja.
1195+ A2FC
1196+ A2FC 21 25 89         ld hl,Disparo_Amad
1197+ A2FF
1198+ A2FF 06 02            ld b,2
1199+ A301
1200+ A301 D1           6 pop de
1201+ A302 73               ld (hl),e
1202+ A303 23               inc hl
1203+ A304 72               ld (hl),d
1204+ A305 23               inc hl
1205+ A306
1206+ A306 10 F9            djnz 6B
1207+ A308
1208+ A308 C9               ret
1209+ A309
1210+ A309              Genera_coordenadas_de_disparo_Amadeus
1211+ A309
1212+ A309              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A309              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A309              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A309
1216+ A309 CD 1D 91         call Extrae_address
1217+ A30C CD 04 95         call Genera_coordenadas
1218+ A30F
1219+ A30F 3D               dec a
1220+ A310
1221+ A310 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A313 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A314 23               inc hl
1224+ A315 3A EF 8B         ld a,(Coordenada_X)
1225+ A318 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A319
1227+ A319 AF               xor a
1228+ A31A 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A31B
1230+ A31B C9               ret
1231+ A31C
1232+ A31C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A31C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A31C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A31C
1236+ A31C              ; ----------------------------------------------
1237+ A31C              ;
1238+ A31C              ;   27/08/24
1239+ A31C              ;
1240+ A31C              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A31C              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A31C
1243+ A31C              Detecta_impacto_en_disparo_de_Amadeus
1244+ A31C
1245+ A31C              Extraccion_de_datos
1246+ A31C
1247+ A31C 13               inc de
1248+ A31D 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A31E
1250+ A31E 5E               ld e,(hl)
1251+ A31F 23               inc hl
1252+ A320 56               ld d,(hl)
1253+ A321
1254+ A321 23               inc hl
1255+ A322
1256+ A322 4E               ld c,(hl)
1257+ A323 23               inc hl
1258+ A324 46               ld b,(hl)
1259+ A325
1260+ A325 C5               push bc
1261+ A326 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A327
1263+ A327              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A327
1265+ A327 CD 08 9A         call PreviousScan
1266+ A32A CD 08 9A         call PreviousScan
1267+ A32D
1268+ A32D              Detecta_impacto_
1269+ A32D
1270+ A32D 1A               ld a,(de)
1271+ A32E A6               and (hl)
1272+ A32F C0               ret nz
1273+ A330
1274+ A330 13               inc de
1275+ A331 23               inc hl
1276+ A332
1277+ A332 1A               ld a,(de)
1278+ A333 A6               and (hl)
1279+ A334 C9               ret
1280+ A335
1281+ A335              ; -------------------------------------------------------------------------------------------------------------
1282+ A335              ;
1283+ A335              ;   25/11//24
1284+ A335              ;
1285+ A335              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A335              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A335              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A335              ;
1289+ A335              ;   MODIFICA: HL,DE,BC y A.
1290+ A335              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A335              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A335
1293+ A335              Colision_Entidad_Amadeus
1294+ A335
1295+ A335              ; Posible contacto de entidad con Amadeus. ?????
1296+ A335
1297+ A335              ; Exclusiones:
1298+ A335
1299+ A335 3A 8F 8C         ld a,(Shield)
1300+ A338 A7               and a
1301+ A339 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A33A
1303+ A33A 21 65 8C         ld hl,Ctrl_3
1304+ A33D CB 76            bit 6,(hl)
1305+ A33F C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A340
1307+ A340 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A343 CB 56            bit 2,(hl)
1309+ A345 C0               ret nz
1310+ A346
1311+ A346 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1312+ A349 FE 14        	cp $14
1313+ A34B D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A34C
1315+ A34C 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A34F A7               and a
1317+ A350 C0               ret nz
1318+ A351
1319+ A351              Genera_coordenadas_X
1320+ A351
1321+ A351              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A351              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A351
1324+ A351              ;   Limpiamos almacenes.
1325+ A351
1326+ A351              ;    call Limpia_Coordenadas_X
1327+ A351
1328+ A351              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A351
1330+ A351 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A354 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1332+ A357 CD 7D A3         call Guarda_coordenadas_X
1333+ A35A
1334+ A35A              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A35A
1336+ A35A 3A B8 89         ld a,(CX_Amadeus)
1337+ A35D CD 7D A3         call Guarda_coordenadas_X
1338+ A360
1339+ A360 DD E5            push ix
1340+ A362 CD 91 A3         call Compara_coordenadas_X
1341+ A365 DD E1            pop ix
1342+ A367
1343+ A367 C0               ret nz
1344+ A368
1345+ A368 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1346+ A36A DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1347+ A36D
1348+ A36D DD 7D            ld a,ixl
1349+ A36F C6 04            add 4
1350+ A371 DD 6F            ld ixl,a
1351+ A373
1352+ A373 DD 22 6D 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1353+ A377
1354+ A377 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1355+ A37A CB D6            set 2,(hl)
1356+ A37C
1357+ A37C C9               ret
1358+ A37D
1359+ A37D               ; ----- ----- ----- ----- -----
1360+ A37D
1361+ A37D 77           Guarda_coordenadas_X ld (hl),a
1362+ A37E 3C               inc a
1363+ A37F 2C               inc l
1364+ A380 77               ld (hl),a
1365+ A381 3C               inc a
1366+ A382 2C               inc l
1367+ A383 77               ld (hl),a
1368+ A384 2C               inc l
1369+ A385 C9               ret
1370+ A386
1371+ A386 AF           Limpia_Coordenadas_X xor a
1372+ A387 06 06            ld b,6
1373+ A389 21 74 8C         ld hl,Coordenadas_X_Amadeus
1374+ A38C 77           1 ld (hl),a
1375+ A38D 23               inc hl
1376+ A38E 10 FC            djnz 1B
1377+ A390 C9               ret
1378+ A391
1379+ A391              ; ----- ----- ----- ----- -----
1380+ A391
1381+ A391              Compara_coordenadas_X
1382+ A391
1383+ A391 DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1384+ A395 DD 7E 00         ld a,(ix+0)
1385+ A398 CD A6 A3         call Comparando
1386+ A39B C8               ret z
1387+ A39C
1388+ A39C 3C               inc a
1389+ A39D CD B5 A3         call Comparando_1
1390+ A3A0 C8               ret z
1391+ A3A1
1392+ A3A1 3C               inc a
1393+ A3A2 CD B5 A3         call Comparando_1
1394+ A3A5 C9               ret
1395+ A3A6
1396+ A3A6              ; ----- ----- ----- ----- -----
1397+ A3A6              ;
1398+ A3A6              ;   4/12/23
1399+ A3A6              ;
1400+ A3A6              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1401+ A3A6
1402+ A3A6              Comparando
1403+ A3A6
1404+ A3A6 DD 2C            inc ixl
1405+ A3A8 DD 2C            inc ixl
1406+ A3AA DD 2C            inc ixl
1407+ A3AC
1408+ A3AC DD 46 00         ld b,(ix+0)
1409+ A3AF DD 4E 01         ld c,(ix+1)
1410+ A3B2 DD 56 02         ld d,(ix+2)
1411+ A3B5
1412+ A3B5 B8           Comparando_1 cp b
1413+ A3B6 C8               ret z
1414+ A3B7 B9               cp c
1415+ A3B8 C8               ret z
1416+ A3B9 BA               cp d
1417+ A3BA C9               ret
1418+ A3BB
1419+ A3BB              ; -----------------------------------------------------------------------
1420+ A3BB              ;
1421+ A3BB              ;   04/7/24
1422+ A3BB              ;
1423+ A3BB
1424+ A3BB              Detecta_colision_nave_entidad
1425+ A3BB
1426+ A3BB              ; Exclusiones:
1427+ A3BB
1428+ A3BB              ; Salimos de la rutina si no hay advertencia de posible colisión.
1429+ A3BB
1430+ A3BB 21 6C 8C     	ld hl,Impacto2
1431+ A3BE CB 56        	bit 2,(hl)
1432+ A3C0 C8           	ret z
1433+ A3C1
1434+ A3C1              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1435+ A3C1
1436+ A3C1 2A BE 89         ld hl,(Pamm_Amadeus)
1437+ A3C4 CD 1D 91         call Extrae_address
1438+ A3C7 54               ld d,h
1439+ A3C8 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1440+ A3C9
1441+ A3C9 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1442+ A3CC 06 10            ld b,16                                        ; Contador de scanlines en B.
1443+ A3CE FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1444+ A3D1
1445+ A3D1 C5           1 push bc
1446+ A3D2 06 03            ld b,3
1447+ A3D4 E5               push hl
1448+ A3D5
1449+ A3D5              ; .db
1450+ A3D5
1451+ A3D5 1A           3 ld a,(de)
1452+ A3D6 A7               and a
1453+ A3D7 20 03            jr nz,4F
1454+ A3D9
1455+ A3D9 2C               inc l
1456+ A3DA 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1457+ A3DC
1458+ A3DC ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1459+ A3DE 28 04            jr z,2F
1460+ A3E0
1461+ A3E0              ; Impacto.
1462+ A3E0 FD 2D            dec iyl
1463+ A3E2 28 22            jr z,5F
1464+ A3E4
1465+ A3E4 1C           2 inc e
1466+ A3E5 10 EE            djnz 3B
1467+ A3E7
1468+ A3E7 E1               pop hl
1469+ A3E8
1470+ A3E8              ; Hay salto de línea en el puntero de impresión ???
1471+ A3E8
1472+ A3E8 7C               ld a,h
1473+ A3E9 D6 57            sub $57
1474+ A3EB 20 0A            jr nz,6F
1475+ A3ED
1476+ A3ED              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1477+ A3ED
1478+ A3ED 2A BC 89         ld hl,(p.imp.amadeus)
1479+ A3F0 3E 20            ld a,$20
1480+ A3F2 A7               and a
1481+ A3F3 85               add l
1482+ A3F4 6F               ld l,a
1483+ A3F5 18 01            jr 7F
1484+ A3F7
1485+ A3F7 24           6 inc h
1486+ A3F8
1487+ A3F8 C1           7 pop bc
1488+ A3F9 10 D6            djnz 1B
1489+ A3FB
1490+ A3FB              ;   Fin de la comparativa.
1491+ A3FB
1492+ A3FB              ;   NO HAY COLISIÓN !!!!!.
1493+ A3FB              ;
1494+ A3FB              ;   .db (Impacto) de Amadeus a "0".
1495+ A3FB              ;   RES el bit2 de (Impacto2).
1496+ A3FB              ;
1497+ A3FB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1498+ A3FB              ;   Lo colocamos a "0".
1499+ A3FB
1500+ A3FB 21 6C 8C         ld hl,Impacto2
1501+ A3FE CB 96            res 2,(hl)
1502+ A400 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1503+ A403 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1504+ A405 C9               ret
1505+ A406
1506+ A406              ;   COLISIÓN !!!!!.
1507+ A406              ;
1508+ A406              ;   .db (Impacto) de Amadeus a "1".
1509+ A406              ;   SET el bit3 de (Impacto2).
1510+ A406              ;
1511+ A406              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1512+ A406
1513+ A406 E1           5 pop hl
1514+ A407 C1               pop bc
1515+ A408
1516+ A408 21 BB 89         ld hl,Impacto_Amadeus
1517+ A40B 36 01            ld (hl),1
1518+ A40D 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1519+ A410 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1520+ A412
1521+ A412 11 C0 87         ld de,Indice_Explosion_entidades
1522+ A415 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1523+ A418
1524+ A418 23               inc hl
1525+ A419 23               inc hl
1526+ A41A 23               inc hl
1527+ A41B
1528+ A41B 73               ld (hl),e
1529+ A41C 23               inc hl
1530+ A41D 72               ld (hl),d
1531+ A41E
1532+ A41E              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1533+ A41E
1534+ A41E 11 60 88         ld de,Indice_Explosion_Amadeus
1535+ A421 21 BE 89         ld hl,Pamm_Amadeus
1536+ A424
1537+ A424 73               ld (hl),e
1538+ A425 23               inc hl
1539+ A426 72               ld (hl),d
1540+ A427
1541+ A427 C9               ret
1542+ A428
1543+ A428
1544+ A428
# file closed: Disparo.asm
2147  A428
2148  A428              	SAVESNA "Pruebas.sna", START
2149  A428
2150  A428
2151  A428
2152  A428
# file closed: Banco_de_pruebas.asm
