# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8284	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $828c	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82bf	;	($82c0 - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82f4
  60  82F4
  61  82F4 F5           	push af
  62  82F5 E5           	push hl
  63  82F6
  64  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82F6 21 2E 8C     	ld hl,Ctrl_3
  66  82F9 CB 46        	bit 0,(hl)
  67  82FB 28 FE        	jr z,$
  68  82FD              ;! -------------------
  69  82FD
  70  82FD              ; Disparos.
  71  82FD
  72  82FD CD 79 A1     	call Pinta_disparos_Amadeus
  73  8300 CD 0E 9F     	call Pinta_disparos_Entidades
  74  8303
  75  8303              ; Shield -----------------------
  76  8303
  77  8303              Temporizacion_shield
  78  8303
  79  8303 21 58 8C     	ld hl,Shield
  80  8306 7E           	ld a,(hl)
  81  8307 A7           	and a
  82  8308 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  830A
  84  830A 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  830B
  86  830B 23           	inc hl
  87  830C 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  830D
  89  830D 20 17        	jr nz,Incrementa_FRAMES
  90  830F
  91  830F              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  830F
  93  830F              Cambio_de_estado
  94  830F
  95  830F              ;	Indica cambio de estado.
  96  830F
  97  830F 23           	inc hl						;	Sitúa en (Shield_3).
  98  8310
  99  8310 CB 5E        	bit 3,(hl)
 100  8312 28 05        	jr z,2F
 101  8314
 102  8314 CD 1E 91     	call Inicia_Shield
 103  8317
 104  8317 18 0D        	jr Incrementa_FRAMES
 105  8319
 106  8319 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  831B
 108  831B              ;	Carga en (Shield_2) la siguiente temporización.
 109  831B
 110  831B 2A 56 8C     	ld hl,(Puntero_datos_shield)
 111  831E 23           	inc hl
 112  831F 22 56 8C     	ld (Puntero_datos_shield),hl
 113  8322 7E           	ld a,(hl)
 114  8323 32 59 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  8326
 116  8326              Incrementa_FRAMES
 117  8326
 118  8326 2A 78 5C     	ld hl,(FRAMES)
 119  8329 23           	inc hl
 120  832A 22 78 5C     	ld (FRAMES),hl
 121  832D
 122  832D 7C           	ld a,h
 123  832E B5           	or l
 124  832F 20 04        	jr nz,1F
 125  8331
 126  8331 21 7A 5C     	ld hl,FRAMES_3
 127  8334 34           	inc (hl)
 128  8335
 129  8335 D5           1 push de
 130  8336 C5           	push bc
 131  8337
 132  8337 CD 2E 91     	call Actualiza_pantalla
 133  833A
 134  833A C1           	pop bc
 135  833B D1           	pop de
 136  833C E1           	pop hl
 137  833D F1           	pop af
 138  833E
 139  833E FB           	ei
 140  833F
 141  833F C9           	ret
 142  8340
 143  8340              ; --------------------------------------------------------------------------------
 144  8340
 145  8340              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8340              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8340              ;
   3+ 8340              ;	17/02/23
   4+ 8340              ;
   5+ 8340              ;	Sprites e índices.
   6+ 8340
   7+ 8340              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 148  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D A9 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA9
  19+ 8BA9 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAA 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB2 01 02
  22+ 8BB4 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB8 01 02
  23+ 8BBA
# file closed: Niveles.asm
 149  8BBA
 150  8BBA              ; --------------------------------------------------------------------------------
 151  8BBA              ;
 152  8BBA              ; 12/05/24
 153  8BBA              ;
 154  8BBA              ; Parámetros DRAW.
 155  8BBA              ;
 156  8BBA
 157  8BBA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BBA
 159  8BBA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BBB              ;															- Patrón de movimiento.
 161  8BBB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BBC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BBD
 164  8BBD 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BBE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BBE
 167  8BBE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BBE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BBE              ; Ejemplos.
 170  8BBE
 171  8BBE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BBE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BBE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BBE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BBE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BBE
 177  8BBE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BBF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BBF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BBF
 181  8BBF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BC1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BC1
 184  8BC1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC3
 186  8BC3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC3
 188  8BC3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BC5              ;														; _palabras que componen el "movimiento_masticado".
 190  8BC5
 191  8BC5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BC5
 193  8BC5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BC6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BC6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BC6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BC6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BC6
 199  8BC6 00           Ctrl_2 db 0
 200  8BC7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BC7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BC7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BC7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BC7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BC7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BC7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BC7              ;
 208  8BC7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BC7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BC7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BC7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BC7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BC7              ;														BIT 4, ???
 214  8BC7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BC7
 216  8BC7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BC8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BC8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BC8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BC8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BC8              ;
 222  8BC8              ; 														DESCRIPCIÖN:
 223  8BC8              ;
 224  8BC8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BC8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BC8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BC8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BC8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BC8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BC8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BC8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BC8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BC8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BC8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BC8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BC8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BC8              ;
 238  8BC8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BC8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BC8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BC8
 242  8BC8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BC8
 244  8BC8 00           Filas db 0												; Filas. [DRAW]
 245  8BC9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BCA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BCC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BCE
 249  8BCE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BCE
 251  8BCE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BCF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BCF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BCF
 255  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BCF
 257  8BCF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BCF              ;
 259  8BCF              ;	COLORES: 0 ..... NEGRO
 260  8BCF              ;    		 1 ..... AZUL
 261  8BCF              ; 			 2 ..... ROJO
 262  8BCF              ;			 3 ..... MAGENTA
 263  8BCF              ; 			 4 ..... VERDE
 264  8BCF              ; 			 5 ..... CIAN
 265  8BCF              ;			 6 ..... AMARILLO
 266  8BCF              ; 			 7 ..... BLANCO
 267  8BCF
 268  8BCF 00 00        Indice_Sprite_der defw 0
 269  8BD1 00 00        Indice_Sprite_izq defw 0
 270  8BD3 00 00        Puntero_DESPLZ_der defw 0
 271  8BD5 00 00        Puntero_DESPLZ_izq defw 0
 272  8BD7
 273  8BD7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BD9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BDA 00           Columnas db 0
 276  8BDB 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BDD              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BDD 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BDE
 280  8BDE              ; variables de control general.
 281  8BDE
 282  8BDE 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BDF
 284  8BDF              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BDF
 286  8BDF              Perfiles_de_velocidad
 287  8BDF
 288  8BDF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BE0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BE1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE3
 293  8BE3              ; Contadores de 16 bits.
 294  8BE3
 295  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BE7 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BE9 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BEB
 300  8BEB              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BEB
 302  8BEB 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BED 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BEF 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BF1              ;
 306  8BF1              ;
 307  8BF1 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF2              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF2              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF2 00           Incrementa_puntero_backup db 0
 311  8BF3 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF4              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF4 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BF5 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BF6 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BF7              ;
 317  8BF7              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BF7              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BF7              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BF7              ;
 321  8BF7              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BF7              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BF7              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BF7              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BF7              ;
 326  8BF7              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BF7              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BF7              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BF7
 330  8BF7 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BF8
 332  8BF8              ;														DESCRIPCIÓN:
 333  8BF8              ;
 334  8BF8              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BF8              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BF8              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BF8              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BF8              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BF8              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BF8
 341  8BF8              ;														BIT 3, Recarga de nueva oleada.
 342  8BF8              ;														BIT 4, Recarga de nueva oleada.
 343  8BF8              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BF8              ;														BIT 6, **** Frame completo.
 345  8BF8              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BF8
 347  8BF8 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BFA              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BFA              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BFA              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BFA
 352  8BFA              ; Gestión de ENTIDADES y CAJAS.
 353  8BFA
 354  8BFA 00 00        Puntero_store_caja defw 0
 355  8BFC 00 00        Puntero_restore_caja defw 0
 356  8BFE 00 00        Indice_restore_caja defw 0
 357  8C00 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8C01 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C02 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C03
 361  8C03 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C05 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C07              ;														; _ puntero (Indice_entidades).
 364  8C07
 365  8C07              ;---------------------------------------------------------------------------------------------------------------
 366  8C07              ;
 367  8C07              ;	13/10/24
 368  8C07              ;
 369  8C07              ;	Álbumes.
 370  8C07
 371  8C07 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C09              ;														; _variable para almacenar lo posición del puntero_
 373  8C09              ; 														; _de pila, SP.
 374  8C09 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C0B              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C0B
 377  8C0B              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C0B
 379  8C0B 00 00        Album_de_pintado defw 0
 380  8C0D 00 00        Album_de_borrado defw 0
 381  8C0F 00 00        Album_de_pintado_Amadeus defw 0
 382  8C11 00 00        Album_de_borrado_Amadeus defw 0
 383  8C13
 384  8C13 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C15 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C17
 387  8C17 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C19 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C1B
 390  8C1B
 391  8C1B 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C1D 00           Num_de_bytes_album_de_disparos db 0
 393  8C1E
 394  8C1E 07           Numero_de_disparos_de_entidades db 7
 395  8C1F
 396  8C1F 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 397  8C20 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 398  8C21
 399  8C21 00 00        Techo_Scanlines_album defw 0
 400  8C23 00 00        Techo_Scanlines_album_2 defw 0
 401  8C25 00           Switch db 0
 402  8C26 00 00        Techo defw 0
 403  8C28 00 00        Scanlines_album_SP defw 0
 404  8C2A 00 89        India_SP defw Tabla_de_pintado
 405  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 406  8C2E
 407  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 408  8C2F              ;
 409  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 410  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 411  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 412  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 413  8C2F              ;																Habilita el borrado/pintado de sprites.
 414  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 415  8C2F              ;																_ a la baja.
 416  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 417  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 418  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 419  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 420  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 421  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 422  8C2F
 423  8C2F 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 424  8C30              ;
 425  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 426  8C30              ;
 427  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 428  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 429  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 430  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 431  8C30              ;
 432  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 433  8C30              ;															_ masticados ya generados.
 434  8C30              ;
 435  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 436  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 437  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 438  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 439  8C30
 440  8C30 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 441  8C31
 442  8C31
 443  8C31              ; Gestión de Disparos.
 444  8C31
 445  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 446  8C33 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 447  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 448  8C36
 449  8C36              ;
 450  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 451  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 452  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 453  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 454  8C36
 455  8C36
 456  8C36
 457  8C36
 458  8C36
 459  8C36
 460  8C36
 461  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 462  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 463  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 464  8C38
 465  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 466  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 467  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 468  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 469  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 470  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 471  8C40
 472  8C40              ;---------------------------------------------------------------------------------------------------------------
 473  8C40
 474  8C40              ; Relojes y temporizaciones.
 475  8C40
 476  8C40 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 477  8C41 05           Clock_explosion_Amadeus db 5
 478  8C42 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 479  8C43
 480  8C43 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 481  8C45 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 482  8C47 00           Numero_rnd_disparos db 0
 483  8C48
 484  8C48 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 485  8C4A 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 486  8C4B              ;														; Repite la oleada de entidades.
 487  8C4B A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 488  8C4C A0           CLOCK_disparos_de_entidades db $a0
 489  8C4D
 490  8C4D              ;---------------------------------------------------------------------------------------------------------------
 491  8C4D
 492  8C4D              ; Gestión de NIVELES.
 493  8C4D
 494  8C4D 00           Nivel db 0												; Nivel actual del juego.
 495  8C4E 00 00        Puntero_indice_NIVELES defw 0
 496  8C50 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 497  8C52              ; 														; _ que definen el NIVEL.
 498  8C52
 499  8C52              ; ---------------------------------------------------------------------------------------------------------------
 500  8C52
 501  8C52              ; Temporizaciones Shield.
 502  8C52
 503  8C52 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 504  8C56 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 505  8C58 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 506  8C59 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 507  8C5A 00           Shield_3 db 0
 508  8C5B
 509  8C5B 06           Lives db 6
 510  8C5C
 511  8C5C              ; 	INICIO  *************************************************************************************************************************************************************************
 512  8C5C              ;
 513  8C5C              ;	5/1/24
 514  8C5C
 515  8C5C              START
 516  8C5C
 517  8C5C 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 518  8C5F 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 519  8C61 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 520  8C63 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 521  8C65 F3           	DI
 522  8C66
 523  8C66              ; Limpiamos pantalla.
 524  8C66
 525  8C66 3E 07        	ld a,%00000111
 526  8C68 CD BB 94     	call Cls
 527  8C6B CD 13 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 528  8C6E
 529  8C6E              ; INICIALIZACIÓN.
 530  8C6E
 531  8C6E 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 532  8C70 CD 60 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 533  8C73
 534  8C73 CD A8 8E     	call Extrae_numero_aleatorio_y_avanza
 535  8C76
 536  8C76 6F           	ld l,a
 537  8C77 26 00        	ld h,0
 538  8C79 22 48 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 539  8C7C
 540  8C7C              ;	Inicializa 1er Nivel.
 541  8C7C
 542  8C7C 21 9B 8B     	ld hl,Indice_de_niveles
 543  8C7F 22 4E 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 544  8C82 CD 90 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 545  8C85              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 546  8C85              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 547  8C85              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 548  8C85
 549  8C85              ;	Inicia los álbumes de líneas.
 550  8C85
 551  8C85 CD 61 90     	call Inicia_albumes_de_lineas
 552  8C88              ;
 553  8C88 CD 71 90     	call Inicia_albumes_de_lineas_Amadeus
 554  8C8B CD 7E 90     	call Inicia_albumes_de_disparos
 555  8C8E
 556  8C8E CD D5 92     4 call Inicia_Entidades
 557  8C91 CD 38 93     	call Inicia_Amadeus
 558  8C94
 559  8C94              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 560  8C94              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 561  8C94              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 562  8C94
 563  8C94 11 74 89     	ld de,Amadeus_BOX
 564  8C97 CD 8B 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 565  8C9A CD 7B 93     	call Limpiamos_bandeja_DRAW
 566  8C9D
 567  8C9D              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 568  8C9D
 569  8C9D 06 3C        	ld b,60
 570  8C9F CD 61 9D     2 call Amadeus_a_izquierda
 571  8CA2 10 FB        	djnz 2B
 572  8CA4
 573  8CA4 CD 3F 90     	call Genera_datos_de_impresion_Amadeus
 574  8CA7
 575  8CA7              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 576  8CA7
 577  8CA7 CD 9A 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 578  8CAA
 579  8CAA CD 1E 91     	call Inicia_Shield
 580  8CAD
 581  8CAD 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 582  8CB0 22 21 8C     	ld (Techo_Scanlines_album),hl
 583  8CB3
 584  8CB3 2A 0D 8C     	ld hl,(Album_de_borrado)
 585  8CB6 22 28 8C     	ld (Scanlines_album_SP),hl
 586  8CB9
 587  8CB9 21 00 89     	ld hl,Tabla_de_pintado
 588  8CBC 22 2A 8C     	ld (India_SP),hl
 589  8CBF
 590  8CBF 21 2E 8C     	ld hl,Ctrl_3
 591  8CC2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 592  8CC4 CB D6        	set 2,(hl)
 593  8CC6 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 594  8CC8
 595  8CC8 FB           	ei 													; Ha de apuntar a $5c3a.
 596  8CC9
 597  8CC9 76           	halt
 598  8CCA
 599  8CCA              ; ------------------------------------
 600  8CCA
 601  8CCA              Main
 602  8CCA              ;
 603  8CCA              ; 20/09/24
 604  8CCA
 605  8CCA              ; Gestión de disparos.
 606  8CCA
 607  8CCA CD 83 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 608  8CCD CD 50 9F     	call Motor_de_disparos_entidades
 609  8CD0 CD 25 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 610  8CD3
 611  8CD3              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 612  8CD3              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 613  8CD3              ; Este hecho lo indica el bit2 de (Impacto2).
 614  8CD3
 615  8CD3 CD C2 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 616  8CD6
 617  8CD6              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 618  8CD6
 619  8CD6 21 4C 8C     	ld hl,CLOCK_disparos_de_entidades
 620  8CD9 35           	dec (hl)
 621  8CDA CC CC 8D     	call z,Autoriza_disparo_de_entidades
 622  8CDD
 623  8CDD 2A 48 8C     	ld hl,(Clock_next_entity)
 624  8CE0 ED 4B 78 5C  	ld bc,(FRAMES)
 625  8CE4 A7           	and a
 626  8CE5 ED 42        	sbc hl,bc
 627  8CE7 20 16        	jr nz,1F
 628  8CE9
 629  8CE9              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 630  8CE9              ; _ (Clock_next_entity) para la siguiente entidad.
 631  8CE9
 632  8CE9 3A 01 8C     	ld a,(Numero_parcial_de_entidades)
 633  8CEC 47           	ld b,a
 634  8CED 3A 02 8C     	ld a,(Entidades_en_curso)
 635  8CF0 B8           	cp b
 636  8CF1 28 0C        	jr z,1F
 637  8CF3 30 0A        	jr nc,1F
 638  8CF5
 639  8CF5 3C           	inc a
 640  8CF6 32 02 8C     	ld (Entidades_en_curso),a
 641  8CF9
 642  8CF9              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 643  8CF9
 644  8CF9 CD A8 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 645  8CFC CD C4 8E     	call Define_Clock_next_entity
 646  8CFF
 647  8CFF 3A 02 8C     1 ld a,(Entidades_en_curso)
 648  8D02 A7           	and a
 649  8D03 CA 7D 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 650  8D06 47           	ld b,a												; No hay entidades que gestionar.
 651  8D07
 652  8D07              ; ( Código que ejecutamos con cada entidad: ).
 653  8D07
 654  8D07              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 655  8D07              ;
 656  8D07              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 657  8D07
 658  8D07 21 00 89     	ld hl,Tabla_de_pintado
 659  8D0A 22 2A 8C     	ld (India_SP),hl
 660  8D0D
 661  8D0D 21 2E 8C     	ld hl,Ctrl_3
 662  8D10 CB D6        	set 2,(hl)
 663  8D12 CD 58 8E     	call Change
 664  8D15
 665  8D15 C5           2 push bc 												; Nº de entidades en curso.
 666  8D16
 667  8D16 CD EB 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 668  8D19 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 669  8D1D
 670  8D1D              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 671  8D1D
 672  8D1D              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 673  8D1D              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 674  8D1D
 675  8D1D 3A 35 8C     	ld a,(Impacto2)
 676  8D20 CB 5F        	bit 3,a
 677  8D22 C4 BB A0     	call nz,Compara_con_coordenadas_de_disparo
 678  8D25
 679  8D25 3A BE 8B     	ld a,(Impacto)
 680  8D28 CB 4F        	bit 1,a
 681  8D2A C4 FB 91     	call nz,Genera_explosion
 682  8D2D 20 31        	jr nz,Gestiona_siguiente_entidad
 683  8D2F
 684  8D2F 3A BE 8B     	ld a,(Impacto)
 685  8D32 A7           	and a
 686  8D33 28 0C        	jr z,3F
 687  8D35
 688  8D35              ; IMPACTO en entidad por colisión con Amadeus.
 689  8D35
 690  8D35              ; 5/7/24
 691  8D35              ; Nota importante:
 692  8D35              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 693  8D35              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 694  8D35              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 695  8D35
 696  8D35 3A 78 89     	ld a,(Impacto_Amadeus)
 697  8D38 A7           	and a
 698  8D39 C4 FB 91     	call nz,Genera_explosion
 699  8D3C 20 22        	jr nz,Gestiona_siguiente_entidad
 700  8D3E
 701  8D3E              ; Falsa colisión !!!
 702  8D3E
 703  8D3E 32 BE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 704  8D41
 705  8D41              ; -------------------------------------------
 706  8D41
 707  8D41 CD 08 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 708  8D44 CD 38 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 709  8D47 CD F8 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 710  8D4A CD FB 94     	call Genera_datos_de_impresion
 711  8D4D CD 9E 93     	call Decrementa_Contador_de_mov_masticados
 712  8D50
 713  8D50              ; -------------------------------------------
 714  8D50
 715  8D50              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 716  8D50
 717  8D50 2A BF 8B     	ld hl,(Puntero_de_impresion)
 718  8D53 CD CF 94     	call Genera_coordenadas
 719  8D56
 720  8D56              ; TODO: Generamos disparo ???
 721  8D56
 722  8D56 3A 20 8C     	ld a,(Permiso_de_disparo_Entidades)
 723  8D59 A7           	and a
 724  8D5A C4 E1 8D     	call nz,Entidad_genera_disparo_si_procede
 725  8D5D
 726  8D5D CD 40 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 727  8D60
 728  8D60              Gestiona_siguiente_entidad
 729  8D60
 730  8D60 CD 70 93      	call Store_Restore_cajas
 731  8D63 C1           	pop bc
 732  8D64 10 AF        	djnz 2B
 733  8D66
 734  8D66              ; Hemos gestionado todas las entidades.
 735  8D66              ; ----- ----- -----
 736  8D66
 737  8D66 CD 1C 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 738  8D69 CD 33 8F     	call Ordena_tabla_de_impresion
 739  8D6C CD 9A 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 740  8D6F
 741  8D6F CD D9 8E     	call Borra_diferencia
 742  8D72
 743  8D72 3A 2E 8C     	ld a,(Ctrl_3)
 744  8D75 CB 5F        	bit 3,a
 745  8D77 20 04        	jr nz,Gestion_de_Amadeus
 746  8D79
 747  8D79 EB           	ex de,hl
 748  8D7A 71           	ld (hl),c
 749  8D7B 2C           	inc l
 750  8D7C 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 751  8D7D
 752  8D7D              ;! GESTIONA AMADEUS !!!!!!!!!!
 753  8D7D
 754  8D7D              Gestion_de_Amadeus
 755  8D7D
 756  8D7D 21 2E 8C     	ld hl,Ctrl_3
 757  8D80 CB 76        	bit 6,(hl)
 758  8D82 28 13        	jr z,Amadeus_vivo
 759  8D84
 760  8D84              ; Amadeus ha sido destruido.
 761  8D84              ; Decrementa (Temp_new_live).
 762  8D84
 763  8D84 21 42 8C     	ld hl,Temp_new_live
 764  8D87 35           	dec (hl)
 765  8D88 20 26        	jr nz,End_frame
 766  8D8A
 767  8D8A              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 768  8D8A
 769  8D8A 21 5B 8C     	ld hl,Lives
 770  8D8D 35           	dec (hl)
 771  8D8E
 772  8D8E              ;! Fin del juego
 773  8D8E
 774  8D8E F3           	di
 775  8D8F 28 FE        	jr z,$
 776  8D91 FB           	ei
 777  8D92
 778  8D92              ; Nueva nave.
 779  8D92
 780  8D92 CD FE 8D     	call Reinicia_Amadeus
 781  8D95 18 19        	jr End_frame
 782  8D97
 783  8D97              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 784  8D97
 785  8D97              Amadeus_vivo
 786  8D97
 787  8D97 3A 78 89     	ld a,(Impacto_Amadeus)
 788  8D9A A7           	and a
 789  8D9B C4 2B 92     	call nz, Genera_explosion_Amadeus
 790  8D9E 20 10        	jr nz, End_frame
 791  8DA0
 792  8DA0 CD D8 91     	call Teclado
 793  8DA3
 794  8DA3 21 2E 8C     	ld hl,Ctrl_3
 795  8DA6 CB 6E        	bit 5,(hl)
 796  8DA8 28 06        	jr z,End_frame
 797  8DAA
 798  8DAA              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 799  8DAA
 800  8DAA CD 73 8E     	call Change_Amadeus
 801  8DAD CD 3F 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 802  8DB0
 803  8DB0              End_frame
 804  8DB0
 805  8DB0              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 806  8DB0              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 807  8DB0
 808  8DB0 CD D3 9F     	call Genera_datos_de_impresion_disparos_Entidades
 809  8DB3 CD AB A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 810  8DB6              ;	call Calcula_bytes_pintado_disparos
 811  8DB6              ;	call Limpia_album_de_pintado_disparos_entidades
 812  8DB6
 813  8DB6              ; ------------ ------------- --------------
 814  8DB6
 815  8DB6 2A 0D 8C     	ld hl,(Album_de_borrado)
 816  8DB9 22 28 8C     	ld (Scanlines_album_SP),hl
 817  8DBC
 818  8DBC 21 2E 8C     	ld hl,Ctrl_3
 819  8DBF CB C6        	set 0,(hl) 											; Indica Frame completo.
 820  8DC1 CB 9E        	res 3,(hl)
 821  8DC3 CB A6        	res 4,(hl)
 822  8DC5
 823  8DC5 AF           	xor a
 824  8DC6 D3 FE        	out ($fe),a
 825  8DC8
 826  8DC8 76           	halt
 827  8DC9
 828  8DC9              ; ----------------------------------------
 829  8DC9
 830  8DC9              ;	ld a,(Ctrl_1) 										; Existe Loop?
 831  8DC9              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 832  8DC9 CA CA 8C     	jp z,Main
 833  8DCC
 834  8DCC              ;------------------------------------------
 835  8DCC              ;
 836  8DCC              ;	2/10/24
 837  8DCC
 838  8DCC              Autoriza_disparo_de_entidades
 839  8DCC
 840  8DCC 3E 01        	ld a,1
 841  8DCE 32 20 8C     	ld (Permiso_de_disparo_Entidades),a
 842  8DD1
 843  8DD1 3A 4B 8C     	ld a,(Repone_CLOCK_disparos)
 844  8DD4 FE 19        	cp 25
 845  8DD6 38 02        	jr c,1F
 846  8DD8
 847  8DD8 D6 05        	sub 5
 848  8DDA
 849  8DDA 32 4B 8C     1 ld (Repone_CLOCK_disparos),a
 850  8DDD 32 4C 8C     	ld (CLOCK_disparos_de_entidades),a
 851  8DE0
 852  8DE0 C9           	ret
 853  8DE1
 854  8DE1              ;------------------------------------------
 855  8DE1              ;
 856  8DE1              ;	14/09/24
 857  8DE1              ;
 858  8DE1              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 859  8DE1
 860  8DE1              Entidad_genera_disparo_si_procede
 861  8DE1
 862  8DE1 2A 45 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 863  8DE4 CB 06        	rlc (hl)
 864  8DE6
 865  8DE6 DC 2B A0     	call c,Genera_disparo_de_entidad_maldosa
 866  8DE9
 867  8DE9 C9           	ret
 868  8DEA
 869  8DEA              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 870  8DEA              ;
 871  8DEA              ;	30/09/24
 872  8DEA
 873  8DEA              Actuaiza_sp_de_disparos_de_entidades
 874  8DEA
 875  8DEA 2A 45 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 876  8DED 23           	inc hl
 877  8DEE 22 45 8C     	ld (Puntero_num_aleatorios_disparos),hl
 878  8DF1
 879  8DF1 11 FD 88     	ld de,Numeros_aleatorios+7
 880  8DF4 7B           	ld a,e
 881  8DF5 95           	sub l
 882  8DF6 C0           	ret nz
 883  8DF7
 884  8DF7 21 F6 88     1 ld hl,Numeros_aleatorios
 885  8DFA 22 45 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 886  8DFD C9           	ret
 887  8DFE
 888  8DFE              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 889  8DFE              ;
 890  8DFE              ;	24/07/24
 891  8DFE
 892  8DFE              Reinicia_Amadeus
 893  8DFE
 894  8DFE              ;	Reinicia posición y estado.
 895  8DFE
 896  8DFE 21 CF 50     	ld hl,$50cf
 897  8E01 22 79 89     	ld (p.imp.amadeus),hl
 898  8E04 21 F0 E0     	ld hl,$e0f0
 899  8E07 22 7B 89     	ld (Pamm_Amadeus),hl
 900  8E0A 21 3D 00     	ld hl,$003d
 901  8E0D 22 7D 89     	ld (Comm_Amadeus),hl
 902  8E10
 903  8E10              ;	limpiamos el álbum de borrado.
 904  8E10
 905  8E10 2A 11 8C     	ld hl,(Album_de_borrado_Amadeus)
 906  8E13
 907  8E13 AF           	xor a
 908  8E14 77           	ld (hl),a
 909  8E15
 910  8E15 E5           	push hl
 911  8E16 D1           	pop de
 912  8E17 13           	inc de
 913  8E18
 914  8E18 01 23 00     	ld bc,35
 915  8E1B ED B0        	ldir
 916  8E1D
 917  8E1D CD 3F 90     	call Genera_datos_de_impresion_Amadeus
 918  8E20
 919  8E20              ;	Reinicia temporizaciones.
 920  8E20
 921  8E20 CD 1E 91     	call Inicia_Shield
 922  8E23
 923  8E23 3E 5A        	ld a,90
 924  8E25 32 58 8C     	ld (Shield),a
 925  8E28
 926  8E28 3E 64        	ld a,100
 927  8E2A 32 42 8C     	ld (Temp_new_live),a
 928  8E2D
 929  8E2D              ; 	Restauramos el FLAG: Amadeus vivo.
 930  8E2D
 931  8E2D 21 2E 8C     	ld hl,Ctrl_3
 932  8E30 CB B6        	res 6,(hl)
 933  8E32
 934  8E32              ;	Fuerza la impresión de la nave en el siguiente frame.
 935  8E32
 936  8E32 21 2E 8C      	ld hl,Ctrl_3
 937  8E35 CB EE        	set 5,(hl)
 938  8E37
 939  8E37 C9           	ret
 940  8E38
 941  8E38              ; --------------------------------------------------------------------------------------------------------------
 942  8E38              ;
 943  8E38              ;	12/05/24
 944  8E38
 945  8E38 3A C5 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 946  8E3B CB 27        	sla a
 947  8E3D 32 C5 8B     	ld (Velocidad),a
 948  8E40 E6 10        	and $10
 949  8E42 C8           	ret z
 950  8E43
 951  8E43              ; Restaura (Velocidad) a razón del nº de vueltas.
 952  8E43
 953  8E43 3A BD 8B     	ld a,(Contador_de_vueltas)
 954  8E46 CB 2F        	sra a
 955  8E48 CB 2F        	sra a
 956  8E4A 32 C5 8B     	ld (Velocidad),a
 957  8E4D
 958  8E4D 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 959  8E50 23           	inc hl
 960  8E51 23           	inc hl
 961  8E52 23           	inc hl
 962  8E53 23           	inc hl
 963  8E54 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 964  8E57
 965  8E57 C9           	ret
 966  8E58
 967  8E58              ; --------------------------------------------------------------------------------------------------------------
 968  8E58              ;
 969  8E58              ;	25/08/24
 970  8E58
 971  8E58              Change
 972  8E58
 973  8E58 3A 25 8C     	ld a,(Switch)
 974  8E5B EE 01        	xor 1
 975  8E5D 32 25 8C     	ld (Switch),a
 976  8E60 2A 0B 8C     	ld hl,(Album_de_pintado)
 977  8E63 ED 5B 0D 8C  	ld de,(Album_de_borrado)
 978  8E67 EB           	ex de,hl
 979  8E68 22 0B 8C     	ld (Album_de_pintado),hl
 980  8E6B 22 28 8C     	ld (Scanlines_album_SP),hl
 981  8E6E ED 53 0D 8C  	ld (Album_de_borrado),de
 982  8E72 C9           	ret
 983  8E73
 984  8E73              Change_Amadeus
 985  8E73
 986  8E73 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
 987  8E76 ED 5B 11 8C  	ld de,(Album_de_borrado_Amadeus)
 988  8E7A EB           	ex de,hl
 989  8E7B 22 0F 8C     	ld (Album_de_pintado_Amadeus),hl
 990  8E7E ED 53 11 8C  	ld (Album_de_borrado_Amadeus),de
 991  8E82 C9           	ret
 992  8E83
 993  8E83              Change_Disparos
 994  8E83
 995  8E83              ; Álbumes de Amadeus.
 996  8E83
 997  8E83 2A 13 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
 998  8E86 ED 5B 15 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
 999  8E8A EB           	ex de,hl
1000  8E8B 22 13 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1001  8E8E ED 53 15 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1002  8E92 CD F5 A0     	call Limpia_album_de_pintado_disparos_Amadeus
1003  8E95
1004  8E95              ; Álbumes de entidades.
1005  8E95
1006  8E95 2A 17 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1007  8E98 ED 5B 19 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1008  8E9C EB           	ex de,hl
1009  8E9D 22 17 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1010  8EA0 ED 53 19 8C  	ld (Album_de_borrado_disparos_Entidades),de
1011  8EA4 22 1B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1012  8EA7
1013  8EA7              ;	xor a
1014  8EA7              ;	ld (Num_de_bytes_album_de_disparos),a
1015  8EA7
1016  8EA7 C9           	ret
1017  8EA8
1018  8EA8              ; ------------------------------------
1019  8EA8              ;
1020  8EA8              ; 1/05/24
1021  8EA8
1022  8EA8              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1023  8EA8              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1024  8EA8
1025  8EA8              ;	DESTRUYE: HL,DE,A
1026  8EA8              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1027  8EA8
1028  8EA8              ;	Variables implicadas: (RND_SP).
1029  8EA8
1030  8EA8              Extrae_numero_aleatorio_y_avanza
1031  8EA8
1032  8EA8 21 00 89     	ld hl,Tabla_de_pintado
1033  8EAB EB           	ex de,hl
1034  8EAC 2A 43 8C     	ld hl,(RND_SP)
1035  8EAF EB           	ex de,hl
1036  8EB0 A7           	and a
1037  8EB1 ED 52        	sbc hl,de
1038  8EB3
1039  8EB3 2A 43 8C     	ld hl,(RND_SP)
1040  8EB6 20 06        	jr nz,1F
1041  8EB8
1042  8EB8              ; Sitúa HL al principio de la tabla de nº aleatorios.
1043  8EB8
1044  8EB8 21 F6 88     	ld hl,Numeros_aleatorios
1045  8EBB 22 43 8C     	ld (RND_SP),HL
1046  8EBE
1047  8EBE              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1048  8EBE
1049  8EBE 7E           1 ld a,(hl)
1050  8EBF 23           	inc hl
1051  8EC0 22 43 8C     	ld (RND_SP),hl
1052  8EC3 C9           	ret
1053  8EC4
1054  8EC4              ; ------------------------------------
1055  8EC4              ;
1056  8EC4              ; 1/05/24
1057  8EC4
1058  8EC4              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1059  8EC4              ; (1 a 4 segundos).
1060  8EC4              ; Actualizamos (Clock_next_entity) con A.
1061  8EC4
1062  8EC4              ;	DESTRUYE: A y B.
1063  8EC4              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1064  8EC4              ;			 Actualiza (Clock_next_entity) con A.
1065  8EC4
1066  8EC4              ;	Variables implicadas: (Clock_next_entity).
1067  8EC4
1068  8EC4              ; Notas:
1069  8EC4
1070  8EC4              ; 	$32 1 seg.
1071  8EC4              ; 	$64 2 seg.
1072  8EC4              ; 	$96 3 seg.
1073  8EC4              ; 	$c8 4 seg.
1074  8EC4              ; 	$fa 5 seg.
1075  8EC4
1076  8EC4              ; $ffff 1310,7 seg, 22 minutos.
1077  8EC4
1078  8EC4              ;	$0100  5 seg. aproximadamente.
1079  8EC4              ;	$0200 10 seg. aproximadamente.
1080  8EC4              ;	$0300 15 seg. aproximadamente.
1081  8EC4              ;	$0400 20 seg. aproximadamente.
1082  8EC4              ;	$0500 25 seg. aproximadamente.
1083  8EC4              ;	$0600 30 seg. aproximadamente.
1084  8EC4
1085  8EC4              Define_Clock_next_entity
1086  8EC4
1087  8EC4 FE 34        	cp $34
1088  8EC6 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1089  8EC8
1090  8EC8              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1091  8EC8
1092  8EC8 4F           3 ld c,a
1093  8EC9 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1094  8ECB 2A 78 5C     	ld hl,(FRAMES)
1095  8ECE A7           	and a
1096  8ECF ED 4A        	adc hl,bc
1097  8ED1 22 48 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1098  8ED4 C9           	ret
1099  8ED5
1100  8ED5 3E 34        1 ld a,$34
1101  8ED7 18 EF        	jr 3B
1102  8ED9
1103  8ED9              ; ------------------------------------
1104  8ED9              ;
1105  8ED9              ; 18/03/24
1106  8ED9
1107  8ED9              Borra_diferencia
1108  8ED9
1109  8ED9 ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1110  8EDD
1111  8EDD 3A 25 8C     	ld a,(Switch)
1112  8EE0 A7           	and a
1113  8EE1 28 08        	jr z,2F
1114  8EE3
1115  8EE3 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1116  8EE6 11 23 8C     	ld de,Techo_Scanlines_album_2
1117  8EE9 18 06        	jr 3F
1118  8EEB
1119  8EEB 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1120  8EEE 11 21 8C     	ld de,Techo_Scanlines_album
1121  8EF1
1122  8EF1              ; Diferencia.
1123  8EF1
1124  8EF1 ED 42        3 sbc hl,bc
1125  8EF3
1126  8EF3 C8           	ret z
1127  8EF4 D8           	ret c
1128  8EF5
1129  8EF5              ; Nuevo techo, (más bajo que el anterior).
1130  8EF5              ; Fijamos nuevo techo y borramos bytes sobrantes.
1131  8EF5
1132  8EF5 EB           	ex de,hl
1133  8EF6
1134  8EF6 71           	ld (hl),c
1135  8EF7 2C           	inc l
1136  8EF8 70           	ld (hl),b
1137  8EF9
1138  8EF9 AF           	xor a
1139  8EFA 43           	ld b,e
1140  8EFB
1141  8EFB 2A 28 8C     	ld hl,(Scanlines_album_SP)
1142  8EFE
1143  8EFE 77           1 ld (hl),a
1144  8EFF 23           	inc hl
1145  8F00 10 FC        	djnz 1B
1146  8F02
1147  8F02              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1148  8F02
1149  8F02 21 2E 8C     	ld hl,Ctrl_3
1150  8F05 CB DE        	set 3,(hl)
1151  8F07
1152  8F07 C9           	ret
1153  8F08
1154  8F08              ; --------------------------------------------------------------------------------------------------------------
1155  8F08              ;
1156  8F08              ;	26/3/24
1157  8F08
1158  8F08              Recauda_informacion_de_entidad_en_curso
1159  8F08
1160  8F08              ; Almacena la Coordenada Y de la entidad en curso.
1161  8F08
1162  8F08              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1163  8F08
1164  8F08 3A BC 8B     	ld a,(Coordenada_y)
1165  8F0B 2A 2A 8C     	ld hl,(India_SP)
1166  8F0E 77           	ld (hl),a
1167  8F0F 2C           	inc l
1168  8F10
1169  8F10              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1170  8F10
1171  8F10 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
1172  8F14
1173  8F14 73           	ld (hl),e
1174  8F15 2C           	inc l
1175  8F16 72           	ld (hl),d
1176  8F17 2C           	inc l
1177  8F18
1178  8F18 22 2A 8C     	ld (India_SP),hl
1179  8F1B
1180  8F1B C9           	ret
1181  8F1C
1182  8F1C              ; --------------------------------------------------------------------------------------------------------------
1183  8F1C              ;
1184  8F1C              ;	27/03/24
1185  8F1C              ;
1186  8F1C
1187  8F1C              Inicializa_India_y_limpia_Tabla_de_impresion
1188  8F1C
1189  8F1C 2A 2A 8C     	ld hl,(India_SP)
1190  8F1F 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1191  8F22
1192  8F22 79           	ld a,c
1193  8F23 95           	sub l
1194  8F24 28 06        	jr z,2F
1195  8F26 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1196  8F27              ;														; _ y pasamos a inicializar (India_SP).
1197  8F27 AF           	xor a
1198  8F28
1199  8F28 77           1 ld (hl),a
1200  8F29 2C           	inc l
1201  8F2A 10 FC        	djnz 1B												; Limpia Tabla.
1202  8F2C
1203  8F2C 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1204  8F2F 22 2A 8C     	ld (India_SP),hl
1205  8F32
1206  8F32 C9           	ret
1207  8F33
1208  8F33              ; --------------------------------------------------------------------------------------------------------------
1209  8F33              ;
1210  8F33              ;	31/3/24
1211  8F33
1212  8F33              Ordena_tabla_de_impresion
1213  8F33
1214  8F33              ; 5794 T/states.
1215  8F33              ; 6278 T/states.
1216  8F33              ; 5310 T/states.
1217  8F33
1218  8F33              ; Inicializamos punteros (India_SP) e (India_2_SP).
1219  8F33              ; Inicializamos contador de comparaciones, [C].
1220  8F33              ; Cargamos los registros A y B para efectuar comparación.
1221  8F33
1222  8F33 FD 2E 00     	ld iyl,0
1223  8F36
1224  8F36 3A 02 8C     	ld a,(Entidades_en_curso)
1225  8F39 FE 04        	cp 4 	;	4
1226  8F3B D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1227  8F3C
1228  8F3C 3D           	dec a
1229  8F3D 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1230  8F3E 51           	ld d,c 										; Copia de respaldo.
1231  8F3F
1232  8F3F 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1233  8F40
1234  8F40 21 03 89     	ld hl,Tabla_de_pintado+3
1235  8F43 46           	ld b,(hl)
1236  8F44 22 2C 8C     	ld (India_2_SP),hl
1237  8F47
1238  8F47 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1239  8F48 DC 70 8F     	call c, Avanza_India_2_SP
1240  8F4B CC 70 8F     	call z, Avanza_India_2_SP
1241  8F4E
1242  8F4E FD 2D        	dec iyl
1243  8F50 28 18        	jr z,2F
1244  8F52
1245  8F52
1246  8F52              ; --------------------------------------------------------------------------------------------------------------
1247  8F52              ;
1248  8F52              ;	7/4/24
1249  8F52
1250  8F52              Trueque
1251  8F52
1252  8F52              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1253  8F52              ;  			A contiene en nº de fila de (India_SP).
1254  8F52              ;			HL contiene (India_2_SP).
1255  8F52
1256  8F52 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1257  8F53 E5           	push hl										; Preservo (India_2_SP).
1258  8F54
1259  8F54 ED 5B 2A 8C  	ld de,(India_SP)
1260  8F58 EB           	ex de,hl
1261  8F59 70           	ld (hl),b
1262  8F5A 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1263  8F5B
1264  8F5B CD 9C 8F     	call Intercambia_1_byte
1265  8F5E CD 9C 8F     	call Intercambia_1_byte
1266  8F61
1267  8F61
1268  8F61              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1269  8F61              ; Recuperamos (India_2_SP) en HL.
1270  8F61
1271  8F61 2A 2A 8C     	ld hl,(India_SP)
1272  8F64 7E           	ld a,(hl)
1273  8F65
1274  8F65 E1           	pop hl
1275  8F66 D1           	pop de
1276  8F67
1277  8F67              ; --------------------------------------------------------------------------------------------------------------
1278  8F67
1279  8F67 CD 70 8F     	call Avanza_India_2_SP
1280  8F6A
1281  8F6A 14           2 inc d
1282  8F6B 15           	dec d
1283  8F6C C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1284  8F6D 18 D8        	jr 1B
1285  8F6F
1286  8F6F C9           	ret
1287  8F70
1288  8F70              ; ----- ----- ----- ----- -----
1289  8F70
1290  8F70              Avanza_India_2_SP
1291  8F70
1292  8F70 0D           	dec c
1293  8F71 28 0A        	jr z,Avanza_punteros_indios
1294  8F73
1295  8F73 FD 2C        	inc iyl
1296  8F75
1297  8F75 2C           	inc l
1298  8F76 2C           	inc l
1299  8F77 2C           	inc l
1300  8F78
1301  8F78 46           	ld b,(hl)
1302  8F79 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1303  8F7C
1304  8F7C C9           	ret
1305  8F7D
1306  8F7D              ; ----- ----- ----- ----- -----
1307  8F7D
1308  8F7D              Avanza_punteros_indios
1309  8F7D
1310  8F7D 15           	dec d
1311  8F7E 28 15        	jr z,Prepara_salida
1312  8F80
1313  8F80 4A           	ld c,d
1314  8F81
1315  8F81 2A 2A 8C     	ld hl,(India_SP)
1316  8F84 2C           	inc l
1317  8F85 2C           	inc l
1318  8F86 2C           	inc l
1319  8F87 7E           	ld a,(hl)
1320  8F88 22 2A 8C     	ld (India_SP),hl
1321  8F8B
1322  8F8B 2C           	inc l
1323  8F8C 2C           	inc l
1324  8F8D 2C           	inc l
1325  8F8E 46           	ld b,(hl)
1326  8F8F 22 2C 8C     	ld (India_2_SP),hl
1327  8F92
1328  8F92 FD 2C        	inc iyl
1329  8F94
1330  8F94 C9           	ret
1331  8F95
1332  8F95              Prepara_salida
1333  8F95
1334  8F95 21 00 89     	ld hl,Tabla_de_pintado
1335  8F98 22 2A 8C     	ld (India_SP),hl
1336  8F9B C9           	ret
1337  8F9C
1338  8F9C
1339  8F9C 2C           Intercambia_1_byte inc l
1340  8F9D 1C           	inc e
1341  8F9E 46           	ld b,(hl)
1342  8F9F 1A           	ld a,(de)
1343  8FA0 EB           	ex de,hl
1344  8FA1 70           	ld (hl),b
1345  8FA2 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1346  8FA3 C9           	ret
1347  8FA4
1348  8FA4              ; -----------------------------------------------------------------------------------
1349  8FA4              ;
1350  8FA4              ;	20/01/24
1351  8FA4              ;
1352  8FA4              ;
1353  8FA4
1354  8FA4              Construye_movimientos_masticados_entidad
1355  8FA4
1356  8FA4 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1357  8FA7 E5           	push hl
1358  8FA8 CD EB 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1359  8FAB              ;															; _ el (Contador_de_mov_masticados).
1360  8FAB CD B6 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1361  8FAE              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1362  8FAE CD E7 99     	call Recompone_posicion_inicio
1363  8FB1
1364  8FB1 CD 17 97     1 call Draw
1365  8FB4 CD D0 8F     	call Guarda_movimiento_masticado
1366  8FB7
1367  8FB7 CD 94 9D     	call Movimiento
1368  8FBA
1369  8FBA 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1370  8FBD CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1371  8FBF 28 F0        	jr z,1B
1372  8FC1
1373  8FC1              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1374  8FC1              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1375  8FC1
1376  8FC1 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1377  8FC2 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1378  8FC5
1379  8FC5              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1380  8FC5
1381  8FC5 CD F8 9E     	call Situa_en_contador_general_de_mov_masticados
1382  8FC8
1383  8FC8              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1384  8FC8              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1385  8FC8
1386  8FC8 ED 4B C3 8B  	ld bc,(Contador_de_mov_masticados)
1387  8FCC
1388  8FCC 71           	ld (hl),c
1389  8FCD 23           	inc hl
1390  8FCE 70           	ld (hl),b
1391  8FCF
1392  8FCF C9           	ret
1393  8FD0
1394  8FD0              ; -----------------------------------------------------------------------------------
1395  8FD0              ;
1396  8FD0              ;	28/12/23
1397  8FD0              ;
1398  8FD0              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1399  8FD0              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1400  8FD0
1401  8FD0              Guarda_movimiento_masticado
1402  8FD0
1403  8FD0 ED 73 07 8C  	ld (Stack),sp
1404  8FD4 ED 7B C1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1405  8FD8
1406  8FD8 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1407  8FDA FD E5            push iy 												; Pushea Puntero_objeto.
1408  8FDC
1409  8FDC ED 7B 07 8C      ld sp,(Stack)
1410  8FE0
1411  8FE0 2A C3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1412  8FE3 23           	inc hl
1413  8FE4 22 C3 8B     	ld (Contador_de_mov_masticados),hl
1414  8FE7
1415  8FE7 CD EB 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1416  8FEA              ;															; _ el (Contador_de_mov_masticados).
1417  8FEA C9               ret
1418  8FEB
1419  8FEB              ; --------------------------------------------------------------------------------------------------------------
1420  8FEB              ;
1421  8FEB              ;	12/1/24
1422  8FEB              ;
1423  8FEB              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1424  8FEB
1425  8FEB              Actualiza_Puntero_de_almacen_de_mov_masticados
1426  8FEB
1427  8FEB 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1428  8FEE 01 04 00     	ld bc,4
1429  8FF1 A7           	and a
1430  8FF2 ED 4A        	adc hl,bc
1431  8FF4 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1432  8FF7 C9           	ret
1433  8FF8
1434  8FF8              ; --------------------------------------------------------------------------------------------------------------
1435  8FF8              ;
1436  8FF8              ;	24/03/24
1437  8FF8              ;
1438  8FF8              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1439  8FF8              ;
1440  8FF8              ;	IX contiene el puntero de impresión.
1441  8FF8              ;	DE contiene (Puntero_objeto).
1442  8FF8
1443  8FF8
1444  8FF8              Cargamos_registros_con_mov_masticado
1445  8FF8
1446  8FF8 ED 73 07 8C  	ld (Stack),sp
1447  8FFC ED 7B C1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1448  9000
1449  9000 D1           	pop de 															; DE contiene Puntero_objeto
1450  9001 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1451  9003
1452  9003 ED 73 C1 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1453  9007 ED 7B 07 8C  	ld sp,(Stack)
1454  900B
1455  900B 7B           	ld a,e
1456  900C 82           	add d															; Comprueba si ya no hay datos en el almacén.
1457  900D
1458  900D CC A6 93     	call z,Reinicia_entidad_maliciosa
1459  9010
1460  9010 C9           	ret
1461  9011
1462  9011              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1463  9011              ;
1464  9011              ;	22/7/24
1465  9011
1466  9011              Cargamos_registros_con_explosion
1467  9011
1468  9011
1469  9011 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1470  9014 CD B0 90     	call Extrae_address
1471  9017
1472  9017 5D           	ld e,l
1473  9018 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1474  9019
1475  9019 DD 2A BF 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1476  901D
1477  901D C9           	ret
1478  901E
1479  901E
1480  901E              Cargamos_registros_con_explosion_Amadeus
1481  901E
1482  901E 2A 7B 89     	ld hl,(Pamm_Amadeus)
1483  9021 CD B0 90     	call Extrae_address
1484  9024
1485  9024 5D           	ld e,l
1486  9025 54           	ld d,h
1487  9026
1488  9026 DD 2A 79 89  	ld ix,(p.imp.amadeus)
1489  902A
1490  902A C9           	ret
1491  902B
1492  902B              ; --------------------------------------------------------------------------------------------------------------
1493  902B              ;
1494  902B              ;	17/06/24
1495  902B              ;
1496  902B              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1497  902B              ;
1498  902B              ;	IX contiene el puntero de impresión.
1499  902B              ;	DE contiene (Puntero_objeto).
1500  902B
1501  902B
1502  902B              Cargamos_registros_con_mov_masticado_Amadeus
1503  902B
1504  902B ED 73 07 8C  	ld (Stack),sp
1505  902F ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1506  9033 D1           	pop de 															; DE contiene Puntero_objeto
1507  9034 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1508  9036 DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1509  903A ED 7B 07 8C  	ld sp,(Stack)
1510  903E C9           	ret
1511  903F
1512  903F              ; ---------------------------------------------------------------------------------------------------------------------
1513  903F              ;
1514  903F              ;	18/6/24
1515  903F              ;
1516  903F              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1517  903F
1518  903F              Genera_datos_de_impresion_Amadeus
1519  903F
1520  903F 3A 78 89     	ld a,(Impacto_Amadeus)
1521  9042 A7           	and a
1522  9043 20 03        	jr nz,1F
1523  9045
1524  9045              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1525  9045              ; _apuntando a la correspondiente explosión.
1526  9045
1527  9045 CD 2B 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1528  9048
1529  9048 DD 7D        1 ld a,ixl
1530  904A E6 1F        	and $1f
1531  904C 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1532  904F
1533  904F 2A 28 8C     	ld hl,(Scanlines_album_SP)
1534  9052 E5           	push hl
1535  9053
1536  9053 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1537  9056 22 28 8C     	ld (Scanlines_album_SP),hl
1538  9059
1539  9059 CD FB 94     	call Genera_datos_de_impresion
1540  905C
1541  905C E1           	pop hl
1542  905D 22 28 8C     	ld (Scanlines_album_SP),hl
1543  9060
1544  9060 C9           	ret
1545  9061
1546  9061              ; ---------------------------------------------------------------------------------------------------------------------
1547  9061              ;
1548  9061              ;	13/03/24
1549  9061              ;
1550  9061              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1551  9061
1552  9061              Inicia_albumes_de_lineas
1553  9061
1554  9061 21 00 80     	ld hl,Scanlines_album
1555  9064 22 0B 8C     	ld (Album_de_pintado),hl
1556  9067 22 28 8C     	ld (Scanlines_album_SP),hl
1557  906A
1558  906A 21 1A 81     	ld hl,Scanlines_album_2
1559  906D 22 0D 8C     	ld (Album_de_borrado),hl
1560  9070
1561  9070 C9           	ret
1562  9071
1563  9071              Inicia_albumes_de_lineas_Amadeus
1564  9071
1565  9071 21 34 82     	ld hl,Amadeus_scanlines_album
1566  9074 22 0F 8C     	ld (Album_de_pintado_Amadeus),hl
1567  9077 21 58 82     	ld hl,Amadeus_scanlines_album_2
1568  907A 22 11 8C     	ld (Album_de_borrado_Amadeus),hl
1569  907D
1570  907D C9           	ret
1571  907E
1572  907E              Inicia_albumes_de_disparos
1573  907E
1574  907E 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1575  9081 22 13 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1576  9084 21 84 82     	ld hl,Amadeus_disparos_scanlines_album_2
1577  9087 22 15 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1578  908A
1579  908A 21 8C 82     	ld hl,Entidades_disparos_scanlines_album
1580  908D 22 17 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1581  9090 22 1B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1582  9093
1583  9093 21 BF 82     	ld hl,Entidades_disparos_scanlines_album_2
1584  9096 22 19 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1585  9099
1586  9099 C9           	ret
1587  909A
1588  909A              ; ---------------------------------------------------------------------------------------------------------------------
1589  909A              ;
1590  909A              ; 8/1/23
1591  909A              ;
1592  909A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1593  909A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1594  909A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1595  909A
1596  909A              ; Destruye HL y DE !!!!!
1597  909A
1598  909A              Inicia_punteros_de_cajas
1599  909A
1600  909A 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1601  909D CD B0 90         call Extrae_address
1602  90A0 22 FA 8B         ld (Puntero_store_caja),hl
1603  90A3 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1604  90A6 22 FE 8B     	ld (Indice_restore_caja),hl
1605  90A9 CD B0 90     	call Extrae_address
1606  90AC 22 FC 8B     	ld (Puntero_restore_caja),hl
1607  90AF C9               ret
1608  90B0
1609  90B0              ; *************************************************************************************************************************************************************
1610  90B0
1611  90B0              ;
1612  90B0              ; 20/10/22
1613  90B0              ;
1614  90B0              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1615  90B0              ;
1616  90B0              ; Destruye el puntero y DE !!!!!
1617  90B0
1618  90B0 5E           Extrae_address ld e,(hl)
1619  90B1 23           	inc hl
1620  90B2 56           	ld d,(hl)
1621  90B3 2B           	dec hl
1622  90B4 EB           	ex de,hl
1623  90B5 C9           	ret
1624  90B6
1625  90B6              ; *************************************************************************************************************************************************************
1626  90B6              ;
1627  90B6              ;	20/1/24
1628  90B6              ;
1629  90B6              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1630  90B6              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1631  90B6              ;
1632  90B6              ;   Destruye HL y BC !!!!!,
1633  90B6              ;
1634  90B6              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1635  90B6              ;					"0" ..... Izquierda.
1636  90B6
1637  90B6              Inicia_Puntero_objeto
1638  90B6
1639  90B6 3A D9 8B     	ld a,(Cuad_objeto)
1640  90B9 E6 01        	and 1
1641  90BB F5           	push af
1642  90BC CC D8 90     	call z,Inicia_puntero_objeto_izq
1643  90BF F1           	pop af
1644  90C0 C8           	ret z
1645  90C1 CD C5 90     	call Inicia_puntero_objeto_der
1646  90C4 C9           	ret
1647  90C5
1648  90C5              ; Arrancamos desde la parte izquierda de la pantalla.
1649  90C5              ; Iniciamos (Indice_Sprite_der).
1650  90C5
1651  90C5 2A CF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1652  90C8 22 D3 8B     	ld (Puntero_DESPLZ_der),hl
1653  90CB CD B0 90     	call Extrae_address
1654  90CE 22 CC 8B     	ld (Puntero_objeto),hl
1655  90D1
1656  90D1 2A D1 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1657  90D4 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
1658  90D7 C9           	ret
1659  90D8
1660  90D8              ; Arrancamos desde la parte derecha de la pantalla.
1661  90D8              ; Iniciamos (Indice_Sprite_izq).
1662  90D8
1663  90D8 2A D1 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1664  90DB 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
1665  90DE CD B0 90     	call Extrae_address
1666  90E1 22 CC 8B     	ld (Puntero_objeto),hl
1667  90E4
1668  90E4 2A CF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1669  90E7 22 D3 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1670  90EA C9           	ret
1671  90EB
1672  90EB              ; **************************************************************************************************
1673  90EB              ;
1674  90EB              ;	06/07/24
1675  90EB              ;
1676  90EB              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1677  90EB
1678  90EB              Restore_entidad
1679  90EB
1680  90EB 2A FA 8B     	ld hl,(Puntero_store_caja)
1681  90EE 7E           	ld a,(hl)
1682  90EF A7           	and a
1683  90F0 CC FE 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1684  90F3 28 F6        	jr z,Restore_entidad
1685  90F5
1686  90F5 11 BA 8B     	ld de,Bandeja_DRAW
1687  90F8 01 0C 00     	ld bc,12
1688  90FB ED B0        	ldir
1689  90FD C9           	ret
1690  90FE
1691  90FE              ; **************************************************************************************************
1692  90FE              ;
1693  90FE              ;	08/05/23
1694  90FE              ;
1695  90FE              ;	Incrementamos los dos punteros de entidades. (+1).
1696  90FE
1697  90FE              Incrementa_punteros_de_cajas
1698  90FE
1699  90FE 2A FC 8B     	ld hl,(Puntero_restore_caja)
1700  9101 22 FA 8B     	ld (Puntero_store_caja),hl
1701  9104 2A FE 8B     	ld hl,(Indice_restore_caja)
1702  9107 23           	inc hl
1703  9108 23           	inc hl
1704  9109 22 FE 8B     	ld (Indice_restore_caja),hl
1705  910C CD B0 90         call Extrae_address
1706  910F 22 FC 8B         ld (Puntero_restore_caja),hl
1707  9112 C9               ret
1708  9113
1709  9113              ; -----------------------------------------------------------
1710  9113
1711  9113              ; Teclado.
1712  9113
1713  9113 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1714  9115 DB FE        	in a,($fe)
1715  9117 E6 01        	and $01
1716  9119 28 02        	jr z,1f
1717  911B 18 F6        	jr Pulsa_ENTER
1718  911D C9           1 ret
1719  911E
1720  911E              ; **************************************************************************************************
1721  911E              ;
1722  911E              ; Temporización.
1723  911E
1724  911E              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1725  911E              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1726  911E              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1727  911E              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1728  911E
1729  911E              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1730  911E              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1731  911E              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1732  911E
1733  911E              ; A partir de $4f61 no hace falta DELAY.
1734  911E
1735  911E              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1736  911E
1737  911E              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1738  911E              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1739  911E              ;	LD A,B
1740  911E              ;	AND A
1741  911E              ;	JR NZ,wait
1742  911E              ;	RET
1743  911E
1744  911E              ; ---------------------------------------------------------------------------------------------------------------
1745  911E              ;
1746  911E              ;	13/07/24
1747  911E              ;
1748  911E
1749  911E              Inicia_Shield
1750  911E
1751  911E 21 52 8C     	ld hl,Datos_Shield
1752  9121 22 56 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1753  9124
1754  9124 7E           	ld a,(hl)
1755  9125 32 59 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1756  9128
1757  9128 3E 01        	ld a,1
1758  912A 32 5A 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1759  912D
1760  912D C9           	ret
1761  912E
1762  912E              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1763  912E              ;
1764  912E              ;	4/6/24
1765  912E              ;
1766  912E              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1767  912E              ;
1768  912E              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1769  912E              ;
1770  912E
1771  912E              Actualiza_pantalla
1772  912E
1773  912E 3E 02        	ld a,2
1774  9130 D3 FE        	out ($fe),a
1775  9132
1776  9132 3A 2E 8C     	ld a,(Ctrl_3)
1777  9135 CB 57        	bit 2,a
1778  9137 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1779  9139
1780  9139              Borrando_entidades
1781  9139
1782  9139 2A 28 8C     	ld hl,(Scanlines_album_SP)
1783  913C CD B0 90     	call Extrae_address
1784  913F 24           	inc h
1785  9140 25           	dec h
1786  9141 28 05        	jr z,Pintando_entidades
1787  9143 CD F4 95     	call Pinta_Sprites
1788  9146 18 F1        	jr Borrando_entidades
1789  9148
1790  9148              Pintando_entidades
1791  9148
1792  9148 2A 2A 8C     	ld hl,(India_SP)
1793  914B 2C           	inc l
1794  914C CD B0 90     	call Extrae_address
1795  914F 24           	inc h
1796  9150 25           	dec h
1797  9151 28 0E        	jr z,Ejecuta_escudo
1798  9153 1C           	inc e
1799  9154 1C           	inc e
1800  9155 ED 53 2A 8C  	ld (India_SP),de
1801  9159 CD B0 90     	call Extrae_address
1802  915C CD F4 95     	call Pinta_Sprites
1803  915F 18 E7        	jr Pintando_entidades
1804  9161
1805  9161              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1806  9161
1807  9161              Ejecuta_escudo
1808  9161
1809  9161 3A 58 8C     	ld a,(Shield)
1810  9164 A7           	and a
1811  9165 20 2F        	jr nz,Aplica_Shield
1812  9167
1813  9167              Borrando_Amadeus
1814  9167
1815  9167 21 2E 8C     	ld hl,Ctrl_3
1816  916A CB 6E        	bit 5,(hl)
1817  916C 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1818  916E
1819  916E 2A 11 8C     	ld hl,(Album_de_borrado_Amadeus)
1820  9171 CD B0 90     	call Extrae_address
1821  9174 24           	inc h
1822  9175 25           	dec h
1823  9176 28 03        	jr z,Pintando_Amadeus
1824  9178 CD F4 95     	call Pinta_Sprites
1825  917B
1826  917B              Pintando_Amadeus
1827  917B
1828  917B 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1829  917E CD B0 90     	call Extrae_address
1830  9181 24           	inc h
1831  9182 25           	dec h
1832  9183 28 03        	jr z,1F
1833  9185 CD F4 95     	call Pinta_Sprites
1834  9188
1835  9188              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1836  9188
1837  9188 21 2E 8C     1 ld hl,Ctrl_3
1838  918B CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1839  918D CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1840  918F CB AE        	res 5,(hl)
1841  9191
1842  9191 3E 01        	ld a,1												; Borde azul.
1843  9193 D3 FE        	out ($fe),a
1844  9195
1845  9195 C9           	ret
1846  9196
1847  9196              Aplica_Shield
1848  9196
1849  9196              ;	Bit 1 "1" (Shield_3) Sólo borra.
1850  9196              ;		  "0"     ""     Borra/Pinta.
1851  9196              ;	Bit 2    ""  RET.	 No borra, no pinta.
1852  9196
1853  9196 21 5A 8C     	ld hl,Shield_3
1854  9199
1855  9199 CB 5E        	bit 3,(hl)
1856  919B 20 DE        	jr nz,Pintando_Amadeus
1857  919D
1858  919D CB 56        	bit 2,(hl)
1859  919F 20 E7        	jr nz,1B
1860  91A1
1861  91A1 CB 4E        	bit 1,(hl)
1862  91A3 C4 AA 91     	call nz,Borra_Amadeus_shield
1863  91A6
1864  91A6 28 BF        	jr z,Borrando_Amadeus
1865  91A8 18 DE        	jr 1B
1866  91AA
1867  91AA              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1868  91AA
1869  91AA              Borra_Amadeus_shield
1870  91AA
1871  91AA 3A 2E 8C     	ld a,(Ctrl_3)
1872  91AD CB 6F        	bit 5,a
1873  91AF 28 08        	jr z,1F
1874  91B1
1875  91B1 2A 11 8C     	ld hl,(Album_de_borrado_Amadeus)
1876  91B4 CD B0 90     	call Extrae_address
1877  91B7 18 06        	jr 2F
1878  91B9
1879  91B9 2A 0F 8C     1 ld hl,(Album_de_pintado_Amadeus)
1880  91BC CD B0 90     	call Extrae_address
1881  91BF
1882  91BF CD F4 95     2 call Pinta_Sprites
1883  91C2
1884  91C2 AF           	xor a
1885  91C3 3C           	inc a											; Asegura NZ en la salida de la rutina.
1886  91C4
1887  91C4 C9           	ret
1888  91C5
1889  91C5              Pinta_Amadeus_shield
1890  91C5
1891  91C5 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1892  91C8 CD B0 90     	call Extrae_address
1893  91CB CD F4 95     	call Pinta_Sprites
1894  91CE
1895  91CE AF           	xor a
1896  91CF 3C           	inc a											; Asegura NZ en la salida de la rutina.
1897  91D0
1898  91D0 C9           	ret
1899  91D1
1900  91D1              Borra_Pinta_Amadeus_shield
1901  91D1
1902  91D1 CD AA 91     	call Borra_Amadeus_shield
1903  91D4 CD C5 91     	call Pinta_Amadeus_shield
1904  91D7 C9           	ret
1905  91D8
1906  91D8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1907  91D8              ;
1908  91D8              ;	19/6/24
1909  91D8              ;
1910  91D8
1911  91D8              Teclado
1912  91D8
1913  91D8              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1914  91D8
1915  91D8 3E F7        	ld a,$f7												; "5" para disparar.
1916  91DA DB FE        	in a,($fe)
1917  91DC E6 10        	and $10
1918  91DE
1919  91DE CC CA A1     	call z,Genera_disparo_Amadeus
1920  91E1
1921  91E1 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1922  91E3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1923  91E5 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1924  91E7 CC 61 9D         call z,Amadeus_a_izquierda
1925  91EA
1926  91EA 3E F7        	ld a,$f7
1927  91EC DB FE        	in a,($fe)
1928  91EE E6 01        	and $01
1929  91F0 C8           	ret z
1930  91F1
1931  91F1 3E F7        	ld a,$f7
1932  91F3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1933  91F5 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1934  91F7 CC 79 9D     	call z,Amadeus_a_derecha
1935  91FA
1936  91FA C9           	ret
1937  91FB
1938  91FB              ; ------------------------------------------------------------------------------------------------------------------------
1939  91FB              ;
1940  91FB              ;	06/07/24
1941  91FB              ;
1942  91FB
1943  91FB              Genera_explosion
1944  91FB
1945  91FB 21 40 8C     	ld hl,Clock_explosion
1946  91FE 35           	dec (hl)
1947  91FF 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1948  9201
1949  9201              Borra_entidad_colisionada
1950  9201
1951  9201 CD 08 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1952  9204 CD 11 90     	call Cargamos_registros_con_explosion
1953  9207 CD FB 94     	call Genera_datos_de_impresion
1954  920A
1955  920A AF           	xor a
1956  920B 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1957  920C
1958  920C C9           	ret
1959  920D
1960  920D              Siguiente_frame_explosion
1961  920D
1962  920D 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1963  920F
1964  920F              ; Avanza Frame de explosión.
1965  920F
1966  920F 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1967  9212 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1968  9215
1969  9215 79           	ld a,c
1970  9216 95           	sub l
1971  9217 20 0B        	jr nz,1F
1972  9219
1973  9219              ; Fín de la entidad !!!!!!!!!!!!!
1974  9219
1975  9219 21 01 8C     	ld hl,Numero_parcial_de_entidades
1976  921C 35           	dec (hl)
1977  921D 23           	inc hl
1978  921E 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1979  921F
1980  921F CD 7B 93     	call Limpiamos_bandeja_DRAW
1981  9222 18 DD        	jr Borra_entidad_colisionada
1982  9224
1983  9224 23           1 inc hl
1984  9225 23           	inc hl
1985  9226 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1986  9229 18 D6        	jr Borra_entidad_colisionada
1987  922B
1988  922B              ; ----- ----- ----- ----- -----
1989  922B
1990  922B              Genera_explosion_Amadeus
1991  922B
1992  922B 21 41 8C     	ld hl,Clock_explosion_Amadeus
1993  922E 35           	dec (hl)
1994  922F 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
1995  9231
1996  9231              Borra_Amadeus_impactado
1997  9231
1998  9231 CD 73 8E     	call Change_Amadeus
1999  9234 CD 1E 90     	call Cargamos_registros_con_explosion_Amadeus
2000  9237 CD 3F 90     	call Genera_datos_de_impresion_Amadeus
2001  923A
2002  923A 21 2E 8C     	ld hl,Ctrl_3
2003  923D CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2004  923F
2005  923F AF           	xor a
2006  9240 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2007  9241
2008  9241 C9           	ret
2009  9242
2010  9242              Siguiente_frame_explosion_Amadeus
2011  9242
2012  9242 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2013  9244
2014  9244              ; Avanza Frame de explosión.
2015  9244
2016  9244 2A 7B 89     	ld hl,(Pamm_Amadeus)
2017  9247 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2018  924A
2019  924A 79           	ld a,c
2020  924B 95           	sub l
2021  924C 20 0B        	jr nz,1F
2022  924E
2023  924E              ; Fín de Amadeus !!!!!!!!!!!!!
2024  924E              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2025  924E
2026  924E AF           	xor a
2027  924F 32 78 89     	ld (Impacto_Amadeus),a
2028  9252 21 2E 8C     	ld hl,Ctrl_3
2029  9255 CB F6        	set 6,(hl)
2030  9257
2031  9257 18 D8        	jr Borra_Amadeus_impactado
2032  9259
2033  9259 23           1 inc hl
2034  925A 23           	inc hl
2035  925B 22 7B 89     	ld (Pamm_Amadeus),hl
2036  925E 18 D1        	jr Borra_Amadeus_impactado
2037  9260
2038  9260              ; ---------------------------------------------------------------
2039  9260
2040  9260              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9260              ; ******************************************************************************************************************************************************************************************
   2+ 9260              ;
   3+ 9260              ;   21/04/24
   4+ 9260              ;
   5+ 9260              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9260              ;   (XOR) bit a bit.
   7+ 9260              ;
   8+ 9260              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9260
  10+ 9260              Derivando_RND
  11+ 9260
  12+ 9260 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9263
  14+ 9263 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9265 C5               push bc
  16+ 9266              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9266 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9269              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9269
  20+ 9269 A7           6 and a                                 ; Carry a "0".
  21+ 926A CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 926C 30 02            jr nc,1F
  23+ 926E
  24+ 926E CB C1            set 0,c
  25+ 9270
  26+ 9270 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9271 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9273 5F               ld e,a
  29+ 9274
  30+ 9274 7A               ld a,d
  31+ 9275 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9277 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9279
  34+ 9279 CB 3F            srl a
  35+ 927B
  36+ 927B AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 927C
  38+ 927C 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 927D 28 04            jr z,4F
  40+ 927F
  41+ 927F CB FF            set 7,a
  42+ 9281 18 02            jr 5F
  43+ 9283
  44+ 9283 CB BF        4 res 7,a
  45+ 9285
  46+ 9285 CB 21        5 sla c
  47+ 9287 10 E0            djnz 6B
  48+ 9289
  49+ 9289 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 928A
  51+ 928A 77               ld (hl),a
  52+ 928B 23               inc hl
  53+ 928C C1               pop bc
  54+ 928D 10 D4            djnz 3B
  55+ 928F
  56+ 928F C9               ret
  57+ 9290
  58+ 9290
  59+ 9290
# file closed: RND_Derivando.asm
2041  9290              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9290              ;---------------------------------------------------------------------------------------------------------------
   2+ 9290              ;
   3+ 9290              ;   8/3/24
   4+ 9290              ;
   5+ 9290              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9290              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9290              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9290              ;	_ de la 1ª entidad del Nivel.
   9+ 9290              ;
  10+ 9290              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9290
  12+ 9290              ;	MODIFICA: HL,DE y A.
  13+ 9290              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9290
  15+ 9290              Inicializa_Nivel
  16+ 9290
  17+ 9290 2A 4E 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9293 CD B0 90     	call Extrae_address
  19+ 9296 7E           	ld a,(hl)
  20+ 9297 32 00 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 929A 23           	inc hl
  22+ 929B CD A8 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 929E 22 50 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92A1 CD B1 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92A4
  26+ 92A4 CD C2 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92A7 C9           	ret
  28+ 92A8
  29+ 92A8              ; ----------------------
  30+ 92A8
  31+ 92A8 11 DF 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92AB 01 04 00     	ld bc,4
  33+ 92AE ED B0        	ldir
  34+ 92B0 C9           	ret
  35+ 92B1
  36+ 92B1 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92B2 CD 4C 94         call Calcula_salto_en_BC
  38+ 92B5 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92B8 A7               and a
  40+ 92B9 ED 4A            adc hl,bc
  41+ 92BB CD B0 90         call Extrae_address
  42+ 92BE 22 EB 8B         ld (Puntero_indice_mov),hl
  43+ 92C1 C9               ret
  44+ 92C2
  45+ 92C2 3A BA 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92C5 CD 4C 94     	call Calcula_salto_en_BC
  47+ 92C8 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92CB A7               and a
  49+ 92CC ED 4A            adc hl,bc
  50+ 92CE CD B0 90         call Extrae_address
  51+ 92D1 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92D4 C9           	ret
  53+ 92D5
  54+ 92D5              ;---------------------------------------------------------------------------------------------------------------
  55+ 92D5              ;
  56+ 92D5              ;   5/1/24
  57+ 92D5              ;
  58+ 92D5              ;	Destruye A,BC,HL,DE
  59+ 92D5
  60+ 92D5              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92D5              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92D5
  63+ 92D5              Inicia_Entidades
  64+ 92D5
  65+ 92D5              ; Preparamos los punteros de las cajas de entidades:
  66+ 92D5
  67+ 92D5 CD 9A 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92D8              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92D8 CD 94 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92DB
  71+ 92DB 2A 50 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92DE
  73+ 92DE 22 50 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92E1
  75+ 92E1 CD FA 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92E4
  77+ 92E4 2A 50 8C     	ld hl,(Datos_de_nivel)
  78+ 92E7
  79+ 92E7              ; En este punto:
  80+ 92E7              ;
  81+ 92E7              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92E7              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92E7
  84+ 92E7 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92E8
  86+ 92E8 7E           	ld a,(hl)
  87+ 92E9 CD 66 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92EC
  89+ 92EC CD 5E 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92EF
  91+ 92EF              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92EF
  93+ 92EF CD 1C 94     	call Busca_mov_masticados_segun_tipo
  94+ 92F2
  95+ 92F2 A7           	and a
  96+ 92F3 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92F5
  98+ 92F5              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92F5
 100+ 92F5              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92F5              ;	_ de este tipo de entidad.
 102+ 92F5
 103+ 92F5 CD F8 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92F8 CD 05 9F     	call Transfiere_datos_de_contadores
 105+ 92FB
 106+ 92FB 18 06        	jr 4F
 107+ 92FD
 108+ 92FD CD A4 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9300
 110+ 9300              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9300              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9300              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9300              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9300              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9300
 116+ 9300 CD DA 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9303              ;																; _ Mov_masticados ya generados.
 118+ 9303
 119+ 9303 CD F8 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9306
 121+ 9306 DD E5        	push ix
 122+ 9308 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9309
 124+ 9309 D5           	push de
 125+ 930A CD CF 94     	call Genera_coordenadas
 126+ 930D
 127+ 930D ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 128+ 9311 CD 08 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9314 D1           	pop de
 130+ 9315
 131+ 9315 CD FB 94     	call Genera_datos_de_impresion
 132+ 9318              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9318              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9318              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9318              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9318
 137+ 9318 CD 9E 93     	call Decrementa_Contador_de_mov_masticados
 138+ 931B
 139+ 931B              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 931B
 141+ 931B ED 5B FA 8B  	ld de,(Puntero_store_caja)
 142+ 931F CD 8B 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9322
 144+ 9322 CD 7B 93     	call Limpiamos_bandeja_DRAW
 145+ 9325 CD FE 90     	call Incrementa_punteros_de_cajas
 146+ 9328
 147+ 9328              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9328              ; _ entidad del Nivel.
 149+ 9328
 150+ 9328 3A 2F 8C     	ld a,(Ctrl_4)
 151+ 932B E6 F0        	and $f0
 152+ 932D 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9330
 154+ 9330              ; Siguiente entidad del Nivel.
 155+ 9330
 156+ 9330 2A 50 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9333 23           	inc hl 														; _ entidad del Nivel.
 158+ 9334
 159+ 9334 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9335
 161+ 9335 10 A7        	djnz 2B
 162+ 9337
 163+ 9337 C9           	ret
 164+ 9338
 165+ 9338              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9338              ;
 167+ 9338              ;	27/5/24
 168+ 9338              ;
 169+ 9338              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9338              ;
 171+ 9338
 172+ 9338              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9338              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9338
 175+ 9338 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 933B CD 5E 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 933E
 178+ 933E
 179+ 933E              Construye_movimientos_masticados_Amadeus
 180+ 933E
 181+ 933E 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9341 CD EB 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9344              ;															; _ el (Contador_de_mov_masticados).
 184+ 9344 CD B6 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9347              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9347
 187+ 9347              ; Generamos movimientos masticados de Amadeus.
 188+ 9347
 189+ 9347 06 79        	ld b,121												; $0079, 121d.
 190+ 9349
 191+ 9349 C5           1 push bc
 192+ 934A CD 17 97     	call Draw
 193+ 934D CD D0 8F     	call Guarda_movimiento_masticado
 194+ 9350
 195+ 9350 CD 8B 9A     	call Mov_right
 196+ 9353 CD 8B 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9356
 198+ 9356 C1           	pop bc
 199+ 9357 10 F0        	djnz 1B
 200+ 9359
 201+ 9359              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9359
 203+ 9359              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9359              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9359
 206+ 9359 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 935C 01 08 00     	ld bc,8
 208+ 935F A7           	and a
 209+ 9360 ED 42        	sbc hl,bc
 210+ 9362 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9365
 212+ 9365 C9           	ret
 213+ 9366
 214+ 9366              ; ---------------------------------------------------------------------
 215+ 9366              ;
 216+ 9366              ;	10/02/24
 217+ 9366              ;
 218+ 9366              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9366              ;
 220+ 9366              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9366
 222+ 9366              Definicion_segun_tipo
 223+ 9366
 224+ 9366 CD 4C 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9369 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 936C CD 54 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 936F C9           	ret
 228+ 9370
 229+ 9370              ; ---------------------------------------------------------------------
 230+ 9370              ;
 231+ 9370              ;	6/7/24
 232+ 9370
 233+ 9370
 234+ 9370              Store_Restore_cajas
 235+ 9370
 236+ 9370 ED 5B FA 8B  	ld de,(Puntero_store_caja)
 237+ 9374 CD 8B 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9377 CD FE 90     	call Incrementa_punteros_de_cajas
 239+ 937A C9           	ret
 240+ 937B
 241+ 937B              ; ---------------------------------------------------------------------
 242+ 937B              ;
 243+ 937B              ;	23/6/24
 244+ 937B              ;
 245+ 937B              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 937B              ;
 247+ 937B              ;	MODIFY: HL
 248+ 937B
 249+ 937B              Limpiamos_bandeja_DRAW
 250+ 937B
 251+ 937B ED 73 07 8C  	ld (Stack),sp
 252+ 937F 31 DF 8B     	ld sp,Vel_left
 253+ 9382
 254+ 9382 AF           	xor a
 255+ 9383 67           	ld h,a
 256+ 9384 6F           	ld l,a
 257+ 9385
 258+ 9385 E5           	push hl
 259+ 9386 E5           	push hl
 260+ 9387 E5           	push hl
 261+ 9388 E5           	push hl
 262+ 9389 E5           	push hl
 263+ 938A E5           	push hl
 264+ 938B E5           	push hl
 265+ 938C E5           	push hl
 266+ 938D E5           	push hl
 267+ 938E E5           	push hl
 268+ 938F E5           	push hl
 269+ 9390 E5           	push hl
 270+ 9391 E5           	push hl
 271+ 9392 E5           	push hl
 272+ 9393 E5           	push hl
 273+ 9394 E5           	push hl
 274+ 9395 E5           	push hl
 275+ 9396 E5           	push hl
 276+ 9397
 277+ 9397 33           	inc sp
 278+ 9398
 279+ 9398 E5           	push hl
 280+ 9399 ED 7B 07 8C  	ld sp,(Stack)
 281+ 939D
 282+ 939D C9           	ret
 283+ 939E
 284+ 939E              ; ---------------------------------------------------------------------
 285+ 939E              ;
 286+ 939E              ;	24/03/24
 287+ 939E
 288+ 939E 2A C3 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93A1 2B           	dec hl
 290+ 93A2 22 C3 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93A5 C9           	ret
 292+ 93A6
 293+ 93A6              ; ---------------------------------------------------------------------
 294+ 93A6              ;
 295+ 93A6              ;	8/5/24
 296+ 93A6
 297+ 93A6              Reinicia_entidad_maliciosa
 298+ 93A6
 299+ 93A6              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93A6
 301+ 93A6 CD F8 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93A9 CD 05 9F     	call Transfiere_datos_de_contadores
 303+ 93AC
 304+ 93AC              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93AC
 306+ 93AC 3A BA 8B     	ld a,(Tipo)
 307+ 93AF CD 66 93     	call Definicion_segun_tipo
 308+ 93B2
 309+ 93B2 E5           	push hl
 310+ 93B3 DD E1        	pop ix
 311+ 93B5
 312+ 93B5 DD 6E 0B     	ld l,(ix+11)
 313+ 93B8 DD 66 0C     	ld h,(ix+12)
 314+ 93BB
 315+ 93BB 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93BE
 317+ 93BE CD F8 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93C1
 319+ 93C1              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93C1              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93C1              ; Ejemplos.
 322+ 93C1
 323+ 93C1              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93C1              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93C1              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93C1              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93C1              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93C1
 329+ 93C1 21 BD 8B     	ld hl,Contador_de_vueltas
 330+ 93C4 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93C6
 332+ 93C6 7E           	ld a,(hl)
 333+ 93C7 CB 2F        	sra a
 334+ 93C9 CB 2F        	sra a
 335+ 93CB
 336+ 93CB 32 C5 8B     	ld (Velocidad),a
 337+ 93CE
 338+ 93CE 3E 40        	ld a,$40
 339+ 93D0 BE           	cp (hl)
 340+ 93D1 C0           	ret nz
 341+ 93D2
 342+ 93D2              ; Límitador.
 343+ 93D2
 344+ 93D2              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93D2
 346+ 93D2 CB 2E        	sra (hl)
 347+ 93D4 21 C5 8B     	ld hl,Velocidad
 348+ 93D7 CB 2E        	sra (hl)
 349+ 93D9
 350+ 93D9 C9           	ret
 351+ 93DA
 352+ 93DA              ; ---------------------------------------------------------------------
 353+ 93DA              ;
 354+ 93DA              ;	22/01/24
 355+ 93DA
 356+ 93DA 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93DD CB 46        	bit 0,(hl)
 358+ 93DF 20 0D        	jr nz,1F
 359+ 93E1 CB 4E        	bit 1,(hl)
 360+ 93E3 20 0C        	jr nz,2F
 361+ 93E5 CB 56        	bit 2,(hl)
 362+ 93E7 20 0B        	jr nz,3F
 363+ 93E9 CB 5E        	bit 3,(hl)
 364+ 93EB 20 0A        	jr nz,4F
 365+ 93ED C9           	ret
 366+ 93EE
 367+ 93EE CB E6        1 set 4,(hl)
 368+ 93F0 C9           	ret
 369+ 93F1 CB EE        2 set 5,(hl)
 370+ 93F3 C9           	ret
 371+ 93F4 CB F6        3 set 6,(hl)
 372+ 93F6 C9           	ret
 373+ 93F7 CB FE        4 set 7,(hl)
 374+ 93F9 C9           	ret
 375+ 93FA
 376+ 93FA              ; ---------------------------------------------------------------------
 377+ 93FA              ;
 378+ 93FA              ;	23/01/24
 379+ 93FA              ;
 380+ 93FA              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93FA              ;
 382+ 93FA              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93FA              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93FA              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93FA              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93FA
 387+ 93FA              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93FA
 389+ 93FA 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93FB 3D           	dec a
 391+ 93FC 20 06        	jr nz,1F
 392+ 93FE
 393+ 93FE              ; --- Tipo_1
 394+ 93FE
 395+ 93FE 21 2F 8C     	ld hl,Ctrl_4
 396+ 9401 CB C6        	set 0,(hl)
 397+ 9403 C9           	ret
 398+ 9404
 399+ 9404 3D           1 dec a
 400+ 9405 20 06        	jr nz,2F
 401+ 9407
 402+ 9407              ; --- Tipo_2
 403+ 9407
 404+ 9407 21 2F 8C     	ld hl,Ctrl_4
 405+ 940A CB CE        	set 1,(hl)
 406+ 940C C9           	ret
 407+ 940D
 408+ 940D 3D           2 dec a
 409+ 940E 20 06        	jr nz,3F
 410+ 9410
 411+ 9410              ; --- Tipo_3
 412+ 9410
 413+ 9410 21 2F 8C     	ld hl,Ctrl_4
 414+ 9413 CB D6        	set 2,(hl)
 415+ 9415 C9           	ret
 416+ 9416
 417+ 9416              ; --- Tipo_3
 418+ 9416
 419+ 9416 21 2F 8C     3 ld hl,Ctrl_4
 420+ 9419 CB D6        	set 2,(hl)
 421+ 941B C9           	ret
 422+ 941C
 423+ 941C              ; ---------------------------------------------------------------------
 424+ 941C              ;
 425+ 941C              ;	22/01/24
 426+ 941C
 427+ 941C 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 941F CB 46        	bit 0,(hl)
 429+ 9421 20 0E        	jr nz,1F
 430+ 9423
 431+ 9423 CB 4E        	bit 1,(hl)
 432+ 9425 20 10        	jr nz,2F
 433+ 9427
 434+ 9427 CB 56        	bit 2,(hl)
 435+ 9429 20 12        	jr nz,3F
 436+ 942B
 437+ 942B CB 5E        	bit 3,(hl)
 438+ 942D 20 14        	jr nz,4F
 439+ 942F 18 19        	jr 6F
 440+ 9431
 441+ 9431              ; Entidad_de_Tipo_1.
 442+ 9431
 443+ 9431 CB 66        1 bit 4,(hl)
 444+ 9433 28 15        	jr z,6F
 445+ 9435 18 10        	jr 5F
 446+ 9437
 447+ 9437              ; Entidad_de_Tipo_2.
 448+ 9437
 449+ 9437 CB 6E        2 bit 5,(hl)
 450+ 9439 28 0F        	jr z,6F
 451+ 943B 18 0A        	jr 5F
 452+ 943D
 453+ 943D              ; Entidad_de_Tipo_3.
 454+ 943D
 455+ 943D CB 76        3 bit 6,(hl)
 456+ 943F 28 09        	jr z,6F
 457+ 9441 18 04        	jr 5F
 458+ 9443
 459+ 9443              ; Entidad_de_Tipo_4.
 460+ 9443
 461+ 9443 CB 7E        4 bit 7,(hl)
 462+ 9445 28 03        	jr z,6F
 463+ 9447
 464+ 9447              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9447
 466+ 9447 AF           5 xor a
 467+ 9448 3C           	inc a
 468+ 9449 C9           	ret
 469+ 944A
 470+ 944A              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 944A
 472+ 944A AF           6 xor a
 473+ 944B C9           	ret
 474+ 944C
 475+ 944C              ;	------------------------------------------------------------------------------------
 476+ 944C              ;
 477+ 944C              ;	12/01/24
 478+ 944C              ;
 479+ 944C              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 944C              ;
 481+ 944C              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 944C              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 944C
 484+ 944C CB 27        Calcula_salto_en_BC sla a
 485+ 944E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9450 4F           	ld c,a
 487+ 9451 06 00        	ld b,0
 488+ 9453 C9           	ret
 489+ 9454
 490+ 9454              ; ------------------------------------------------------------------
 491+ 9454              ;
 492+ 9454              ;	19/1/24
 493+ 9454              ;
 494+ 9454              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9454              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9454
 497+ 9454 A7           Situa_en_datos_de_definicion and a
 498+ 9455 ED 4A        	adc hl,bc
 499+ 9457 CD B0 90     	call Extrae_address
 500+ 945A 22 05 8C         ld (Datos_de_entidad),hl
 501+ 945D C9           	ret
 502+ 945E
 503+ 945E              ; ------------------------------------------------------------------
 504+ 945E
 505+ 945E              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 945E              ; 	inc de
 507+ 945E              ; 	inc de
 508+ 945E              ; 	ex de,hl
 509+ 945E              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 945E              ; 	ret
 511+ 945E
 512+ 945E              ; ----------------------------------------------------------------------------------------------------------
 513+ 945E              ;
 514+ 945E              ;	24/6/24
 515+ 945E              ;
 516+ 945E              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 945E              ;	_ de entidad.
 518+ 945E              ;
 519+ 945E              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 945E              ;
 521+ 945E              ;
 522+ 945E              ;	MODIFICA: HL,DE y BC
 523+ 945E
 524+ 945E
 525+ 945E              Definicion_de_entidad_a_bandeja_DRAW
 526+ 945E
 527+ 945E 11 BA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9461 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9462 12           	ld (de),a
 530+ 9463 23           	inc hl
 531+ 9464              ;
 532+ 9464 11 C8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9467 01 02 00     	ld bc,2
 534+ 946A ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 946C              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 946C 11 BD 8B     	ld de,Contador_de_vueltas
 537+ 946F 7E           	ld a,(hl)
 538+ 9470 12           	ld (de),a
 539+ 9471 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9472
 541+ 9472 11 CF 8B     	ld de,Indice_Sprite_der
 542+ 9475 01 04 00     	ld bc,4
 543+ 9478 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 947A
 545+ 947A 11 D7 8B     	ld de,Posicion_inicio
 546+ 947D 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9480 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9482
 549+ 9482 11 C1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9485 01 02 00     	ld bc,2
 551+ 9488 ED B0        	ldir
 552+ 948A
 553+ 948A C9           	ret
 554+ 948B
 555+ 948B              ; ----------------------------------------------------------------------------------------------------------
 556+ 948B              ;
 557+ 948B              ;	1/8/24
 558+ 948B              ;
 559+ 948B
 560+ 948B              Parametros_de_bandeja_DRAW_a_caja
 561+ 948B
 562+ 948B 21 BA 8B     	ld hl,Bandeja_DRAW
 563+ 948E 01 0C 00     	ld bc,12
 564+ 9491 ED B0        	ldir
 565+ 9493 C9           	ret
 566+ 9494
 567+ 9494              ;---------------------------------------------------------------------------------------------------------------
 568+ 9494              ;
 569+ 9494              ;	5/1/24
 570+ 9494              ;
 571+ 9494              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9494              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9494              ;
 574+ 9494              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9494              ;
 576+ 9494              ;	(Numero_parcial_de_entidades)="7".
 577+ 9494              ;
 578+ 9494              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9494              ;
 580+ 9494              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9494              ;
 582+ 9494              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9494              ;	MODIFICA: A y B.
 584+ 9494              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9494
 586+ 9494              Inicializa_Numero_parcial_de_entidades
 587+ 9494
 588+ 9494              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9494
 590+ 9494 3A 00 8C     	ld a,(Numero_de_entidades)
 591+ 9497 A7           	and a
 592+ 9498
 593+ 9498              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9498              ;	jr z,$
 595+ 9498              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9498
 597+ 9498 20 03        	jr nz,3F
 598+ 949A
 599+ 949A              ; ---------- ---------- ----------
 600+ 949A
 601+ 949A              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 949A              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 949A
 604+ 949A CD 90 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 949D
 606+ 949D              ; ---------- ---------- ----------
 607+ 949D
 608+ 949D 3A 00 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94A0 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94A2 38 08        	jr c,1F
 611+ 94A4
 612+ 94A4              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94A4              ; Actualizamos variables.
 614+ 94A4
 615+ 94A4 3E 07        	ld a,7
 616+ 94A6 32 01 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94A9 47           	ld b,a
 618+ 94AA 18 04        	jr 2F
 619+ 94AC
 620+ 94AC              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94AC              ; (Numero_de_entidades)="0".
 622+ 94AC
 623+ 94AC 32 01 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94AF 47           	ld b,a
 625+ 94B0 C9           2 ret
 626+ 94B1
# file closed: Rutinas_de_inicio_y_niveles.asm
2042  94B1              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94B1              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94B1              ;
   3+ 94B1              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94B1              ;
   5+ 94B1              ; *****************************************************************************************************************************************************************************************
   6+ 94B1              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94B1
   8+ 94B1 7C           calcula_tercio ld a,h
   9+ 94B2 E6 18        	and $18
  10+ 94B4 CB 2F        	sra a
  11+ 94B6 CB 2F        	sra a
  12+ 94B8 CB 2F        	sra a
  13+ 94BA C9           	ret
  14+ 94BB
# file closed: calcula_tercio.asm
2043  94BB              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94BB              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94BB              ;
   3+ 94BB              ;
   4+ 94BB              ;	CLS.
   5+ 94BB              ;
   6+ 94BB              ;	Limpia la pantalla y define sus atributos.
   7+ 94BB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94BB              ;
   9+ 94BB              ;	COLORES: 0 ..... NEGRO
  10+ 94BB              ;    		 1 ..... AZUL
  11+ 94BB              ; 			 2 ..... ROJO
  12+ 94BB              ;			 3 ..... MAGENTA
  13+ 94BB              ; 			 4 ..... VERDE
  14+ 94BB              ; 			 5 ..... CIAN
  15+ 94BB              ;			 6 ..... AMARILLO
  16+ 94BB              ; 			 7 ..... BLANCO
  17+ 94BB              ;
  18+ 94BB              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94BB              ;
  20+ 94BB              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94BB
  22+ 94BB
  23+ 94BB 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94BE 11 01 40     	LD DE,$4001
  25+ 94C1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94C4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94C6 ED B0        	LDIR
  28+ 94C8 01 FF 02     	LD BC,767
  29+ 94CB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94CC ED B0        	LDIR
  31+ 94CE C9           	ret
  32+ 94CF
# file closed: Cls.asm
2044  94CF              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94CF              ; ------------------------------------------------------------------------
   2+ 94CF              ;
   3+ 94CF              ;	30/1/24
   4+ 94CF              ;
   5+ 94CF              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94CF              ;	Fila superior "0", Columna izquierda "0".
   7+ 94CF              ;
   8+ 94CF              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94CF              ;
  10+ 94CF              ;	Modifica: A,BC y DE.
  11+ 94CF
  12+ 94CF 7D           Genera_coordenadas ld a,l
  13+ 94D0 E6 1F        	and $1f
  14+ 94D2 32 BB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94D5
  16+ 94D5 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94D6 FE 40        	cp $40
  18+ 94D8 38 1C        	jr c,4F
  19+ 94DA
  20+ 94DA CD B1 94     	call calcula_tercio
  21+ 94DD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94DE
  23+ 94DE 1E 00        	ld e,0
  24+ 94E0 7D           	ld a,l
  25+ 94E1 E6 E0        	and $e0
  26+ 94E3 28 01        	jr z,1F
  27+ 94E5 04           	inc b
  28+ 94E6
  29+ 94E6 04           1 inc b
  30+ 94E7 05           	dec b
  31+ 94E8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94EA              ;														; _ , salimos.
  33+ 94EA 1C           3 inc e
  34+ 94EB D6 20        	sub 32
  35+ 94ED 20 FB        	jr nz,3B
  36+ 94EF 10 F5        	djnz 1B
  37+ 94F1
  38+ 94F1 7B           2 ld a,e
  39+ 94F2 32 BC 8B     	ld (Coordenada_y),a
  40+ 94F5 C9           	ret
  41+ 94F6
  42+ 94F6 AF           4 xor a
  43+ 94F7 32 BC 8B     	ld (Coordenada_y),a
  44+ 94FA C9           	ret
  45+ 94FB
# file closed: Genera_coordenadas.asm
2045  94FB              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94FB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94FB              ;
   3+ 94FB              ;	20/09/24
   4+ 94FB              ;
   5+ 94FB              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94FB              ;   DE contiene Puntero_objeto.
   7+ 94FB              ;   IX contiene el Puntero de impresión.
   8+ 94FB
   9+ 94FB              Genera_datos_de_impresion
  10+ 94FB
  11+ 94FB ED 73 07 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94FF
  13+ 94FF 31 C1 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9502 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9504
  16+ 9504 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 9507
  18+ 9507 3E 05            ld a,5
  19+ 9509 85               add l
  20+ 950A 6F               ld l,a
  21+ 950B
  22+ 950B F9               ld sp,hl
  23+ 950C 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 950F
  25+ 950F 21 00 00         ld hl,0
  26+ 9512
  27+ 9512 DD E5            push ix
  28+ 9514 3B               dec sp
  29+ 9515 ED 7A            adc hl,sp
  30+ 9517 D5               push de
  31+ 9518
  32+ 9518              ; Recuperamos SP.
  33+ 9518
  34+ 9518 ED 7B 07 8C      ld sp,(Stack)
  35+ 951C
  36+ 951C E5               push hl
  37+ 951D F1               pop af
  38+ 951E 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 951F
  40+ 951F              ; Tenemos el encabezado listo.
  41+ 951F              ; Preparamos registros para generar los scanlines.
  42+ 951F
  43+ 951F DD E5            push ix
  44+ 9521 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9522
  46+ 9522 ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 9526
  48+ 9526              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9526              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9526
  51+ 9526 7C               ld a,h
  52+ 9527 FE 50            cp $50
  53+ 9529 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 952B
  55+ 952B 20 05            jr nz,2F
  56+ 952D
  57+ 952D 7D               ld a,l
  58+ 952E FE E0            cp $e0
  59+ 9530 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9532
  61+ 9532 7D           2 ld a,l
  62+ 9533 FE C0            cp $c0
  63+ 9535 D2 CB 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9538
  65+ 9538              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9538
  67+ 9538 CD C9 99         call NextScan
  68+ 953B EB               ex de,hl
  69+ 953C
  70+ 953C 73               ld (hl),e
  71+ 953D 23               inc hl
  72+ 953E 72               ld (hl),d
  73+ 953F 23               inc hl
  74+ 9540
  75+ 9540 EB               ex de,hl
  76+ 9541
  77+ 9541 CD C9 99         call NextScan
  78+ 9544 EB               ex de,hl
  79+ 9545
  80+ 9545 73               ld (hl),e
  81+ 9546 23               inc hl
  82+ 9547 72               ld (hl),d
  83+ 9548 23               inc hl
  84+ 9549
  85+ 9549 EB               ex de,hl
  86+ 954A
  87+ 954A CD C9 99         call NextScan
  88+ 954D EB               ex de,hl
  89+ 954E
  90+ 954E 73               ld (hl),e
  91+ 954F 23               inc hl
  92+ 9550 72               ld (hl),d
  93+ 9551 23               inc hl
  94+ 9552
  95+ 9552 EB               ex de,hl
  96+ 9553
  97+ 9553 CD C9 99         call NextScan
  98+ 9556 EB               ex de,hl
  99+ 9557
 100+ 9557 73               ld (hl),e
 101+ 9558 23               inc hl
 102+ 9559 72               ld (hl),d
 103+ 955A 23               inc hl
 104+ 955B
 105+ 955B EB               ex de,hl
 106+ 955C
 107+ 955C CD C9 99         call NextScan
 108+ 955F EB               ex de,hl
 109+ 9560
 110+ 9560 73               ld (hl),e
 111+ 9561 23               inc hl
 112+ 9562 72               ld (hl),d
 113+ 9563 23               inc hl
 114+ 9564
 115+ 9564 EB               ex de,hl
 116+ 9565
 117+ 9565 CD C9 99         call NextScan
 118+ 9568 EB               ex de,hl
 119+ 9569
 120+ 9569 73               ld (hl),e
 121+ 956A 23               inc hl
 122+ 956B 72               ld (hl),d
 123+ 956C 23               inc hl
 124+ 956D
 125+ 956D EB               ex de,hl
 126+ 956E
 127+ 956E CD C9 99         call NextScan
 128+ 9571 EB               ex de,hl
 129+ 9572
 130+ 9572 73               ld (hl),e
 131+ 9573 23               inc hl
 132+ 9574 72               ld (hl),d
 133+ 9575 23               inc hl
 134+ 9576
 135+ 9576 EB               ex de,hl
 136+ 9577
 137+ 9577 CD C9 99         call NextScan
 138+ 957A EB               ex de,hl
 139+ 957B
 140+ 957B 73               ld (hl),e
 141+ 957C 23               inc hl
 142+ 957D 72               ld (hl),d
 143+ 957E 23               inc hl
 144+ 957F
 145+ 957F EB               ex de,hl
 146+ 9580
 147+ 9580 CD C9 99         call NextScan
 148+ 9583 EB               ex de,hl
 149+ 9584
 150+ 9584 73               ld (hl),e
 151+ 9585 23               inc hl
 152+ 9586 72               ld (hl),d
 153+ 9587 23               inc hl
 154+ 9588
 155+ 9588 EB               ex de,hl
 156+ 9589
 157+ 9589 CD C9 99         call NextScan
 158+ 958C EB               ex de,hl
 159+ 958D
 160+ 958D 73               ld (hl),e
 161+ 958E 23               inc hl
 162+ 958F 72               ld (hl),d
 163+ 9590 23               inc hl
 164+ 9591
 165+ 9591 EB               ex de,hl
 166+ 9592
 167+ 9592 CD C9 99         call NextScan
 168+ 9595 EB               ex de,hl
 169+ 9596
 170+ 9596 73               ld (hl),e
 171+ 9597 23               inc hl
 172+ 9598 72               ld (hl),d
 173+ 9599 23               inc hl
 174+ 959A
 175+ 959A EB               ex de,hl
 176+ 959B
 177+ 959B CD C9 99         call NextScan
 178+ 959E EB               ex de,hl
 179+ 959F
 180+ 959F 73               ld (hl),e
 181+ 95A0 23               inc hl
 182+ 95A1 72               ld (hl),d
 183+ 95A2 23               inc hl
 184+ 95A3
 185+ 95A3 EB               ex de,hl
 186+ 95A4
 187+ 95A4 CD C9 99         call NextScan
 188+ 95A7 EB               ex de,hl
 189+ 95A8
 190+ 95A8 73               ld (hl),e
 191+ 95A9 23               inc hl
 192+ 95AA 72               ld (hl),d
 193+ 95AB 23               inc hl
 194+ 95AC
 195+ 95AC EB               ex de,hl
 196+ 95AD
 197+ 95AD CD C9 99         call NextScan
 198+ 95B0 EB               ex de,hl
 199+ 95B1
 200+ 95B1 73               ld (hl),e
 201+ 95B2 23               inc hl
 202+ 95B3 72               ld (hl),d
 203+ 95B4 23               inc hl
 204+ 95B5
 205+ 95B5 EB               ex de,hl
 206+ 95B6
 207+ 95B6 CD C9 99         call NextScan
 208+ 95B9 EB               ex de,hl
 209+ 95BA
 210+ 95BA              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95BA              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95BA              ;   _ generar sus scanlines.
 213+ 95BA
 214+ 95BA              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95BA
 216+ 95BA 73               ld (hl),e
 217+ 95BB 23               inc hl
 218+ 95BC 72               ld (hl),d
 219+ 95BD 23               inc hl
 220+ 95BE
 221+ 95BE              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95BE
 223+ 95BE 22 28 8C         ld (Scanlines_album_SP),hl
 224+ 95C1
 225+ 95C1 EB               ex de,hl
 226+ 95C2
 227+ 95C2              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95C2
 229+ 95C2              ;    call NextScan
 230+ 95C2              ;    call NextScan
 231+ 95C2
 232+ 95C2 22 33 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95C5
 234+ 95C5              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95C5
 236+ 95C5 08               ex af,af
 237+ 95C6
 238+ 95C6 F5               push af
 239+ 95C7 E1               pop hl
 240+ 95C8
 241+ 95C8 36 10            ld (hl),16
 242+ 95CA
 243+ 95CA C9               ret
 244+ 95CB
 245+ 95CB              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95CB
 247+ 95CB              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95CB
 249+ 95CB 3E 57            ld a,$57
 250+ 95CD 94               sub h
 251+ 95CE 47               ld b,a
 252+ 95CF
 253+ 95CF 3E DF            ld a,$df
 254+ 95D1 BD               cp l
 255+ 95D2 38 04            jr c,1F
 256+ 95D4
 257+ 95D4 3E 08            ld a,8
 258+ 95D6 80               add b
 259+ 95D7 47               ld b,a
 260+ 95D8
 261+ 95D8              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95D8              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95D8
 264+ 95D8 48           1 ld c,b
 265+ 95D9 0C               inc c
 266+ 95DA
 267+ 95DA 04               inc b
 268+ 95DB 05               dec b
 269+ 95DC 20 02            jr nz,3F
 270+ 95DE
 271+ 95DE 18 0B            jr 6F
 272+ 95E0
 273+ 95E0 CD C9 99     3 call NextScan
 274+ 95E3 EB               ex de,hl
 275+ 95E4
 276+ 95E4 73               ld (hl),e
 277+ 95E5 23               inc hl
 278+ 95E6 72               ld (hl),d
 279+ 95E7 23               inc hl
 280+ 95E8
 281+ 95E8 EB               ex de,hl
 282+ 95E9 10 F5            djnz 3B
 283+ 95EB
 284+ 95EB ED 53 28 8C  6 ld (Scanlines_album_SP),de
 285+ 95EF
 286+ 95EF 08           5 ex af,af
 287+ 95F0 F5               push af
 288+ 95F1 E1               pop hl
 289+ 95F2
 290+ 95F2 71               ld (hl),c
 291+ 95F3
 292+ 95F3 C9               ret
 293+ 95F4
# file closed: Genera_datos_de_impresion.asm
2046  95F4              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95F4              ; -----------------------------------------------------------------------------
   2+ 95F4              ;
   3+ 95F4              ;   11/03/24
   4+ 95F4              ;
   5+ 95F4
   6+ 95F4              Pinta_Sprites
   7+ 95F4
   8+ 95F4              ;    ld hl,(Scanlines_album_SP)
   9+ 95F4              ;    call Extrae_address
  10+ 95F4
  11+ 95F4              ;    inc h
  12+ 95F4              ;    dec h
  13+ 95F4              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95F4
  15+ 95F4 ED 73 07 8C      ld (Stack),sp
  16+ 95F8
  17+ 95F8 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95F9              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95F9 2C               inc l
  20+ 95FA 2C               inc l
  21+ 95FB
  22+ 95FB 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95FC
  24+ 95FC 2C               inc l
  25+ 95FD F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95FE
  27+ 95FE              ;   Seleccionamos rutina de impresión:
  28+ 95FE
  29+ 95FE 3E 10            ld a,16
  30+ 9600 B8               cp b
  31+ 9601 C2 FD 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9604
  33+ 9604              ;   Rutinas:
  34+ 9604
  35+ 9604              Pinta_rapido    ;   1520 t/states.
  36+ 9604
  37+ 9604 E1               pop hl
  38+ 9605
  39+ 9605 1A               ld a,(de)
  40+ 9606 AE               xor (hl)
  41+ 9607 77               ld (hl),a
  42+ 9608 2C               inc l
  43+ 9609 1C               inc e
  44+ 960A 1A               ld a,(de)
  45+ 960B AE               xor (hl)
  46+ 960C 77               ld (hl),a
  47+ 960D 2C               inc l
  48+ 960E 1C               inc e
  49+ 960F 1A               ld a,(de)
  50+ 9610 AE               xor (hl)
  51+ 9611 77               ld (hl),a
  52+ 9612 13               inc de
  53+ 9613
  54+ 9613 E1               pop hl
  55+ 9614
  56+ 9614 1A               ld a,(de)
  57+ 9615 AE               xor (hl)
  58+ 9616 77               ld (hl),a
  59+ 9617 2C               inc l
  60+ 9618 1C               inc e
  61+ 9619 1A               ld a,(de)
  62+ 961A AE               xor (hl)
  63+ 961B 77               ld (hl),a
  64+ 961C 2C               inc l
  65+ 961D 1C               inc e
  66+ 961E 1A               ld a,(de)
  67+ 961F AE               xor (hl)
  68+ 9620 77               ld (hl),a
  69+ 9621 13               inc de
  70+ 9622
  71+ 9622 E1               pop hl
  72+ 9623
  73+ 9623 1A               ld a,(de)
  74+ 9624 AE               xor (hl)
  75+ 9625 77               ld (hl),a
  76+ 9626 2C               inc l
  77+ 9627 1C               inc e
  78+ 9628 1A               ld a,(de)
  79+ 9629 AE               xor (hl)
  80+ 962A 77               ld (hl),a
  81+ 962B 2C               inc l
  82+ 962C 1C               inc e
  83+ 962D 1A               ld a,(de)
  84+ 962E AE               xor (hl)
  85+ 962F 77               ld (hl),a
  86+ 9630 13               inc de
  87+ 9631
  88+ 9631 E1               pop hl
  89+ 9632
  90+ 9632 1A               ld a,(de)
  91+ 9633 AE               xor (hl)
  92+ 9634 77               ld (hl),a
  93+ 9635 2C               inc l
  94+ 9636 1C               inc e
  95+ 9637 1A               ld a,(de)
  96+ 9638 AE               xor (hl)
  97+ 9639 77               ld (hl),a
  98+ 963A 2C               inc l
  99+ 963B 1C               inc e
 100+ 963C 1A               ld a,(de)
 101+ 963D AE               xor (hl)
 102+ 963E 77               ld (hl),a
 103+ 963F 13               inc de
 104+ 9640
 105+ 9640 E1               pop hl
 106+ 9641
 107+ 9641 1A               ld a,(de)
 108+ 9642 AE               xor (hl)
 109+ 9643 77               ld (hl),a
 110+ 9644 2C               inc l
 111+ 9645 1C               inc e
 112+ 9646 1A               ld a,(de)
 113+ 9647 AE               xor (hl)
 114+ 9648 77               ld (hl),a
 115+ 9649 2C               inc l
 116+ 964A 1C               inc e
 117+ 964B 1A               ld a,(de)
 118+ 964C AE               xor (hl)
 119+ 964D 77               ld (hl),a
 120+ 964E 13               inc de
 121+ 964F
 122+ 964F E1               pop hl
 123+ 9650
 124+ 9650 1A               ld a,(de)
 125+ 9651 AE               xor (hl)
 126+ 9652 77               ld (hl),a
 127+ 9653 2C               inc l
 128+ 9654 1C               inc e
 129+ 9655 1A               ld a,(de)
 130+ 9656 AE               xor (hl)
 131+ 9657 77               ld (hl),a
 132+ 9658 2C               inc l
 133+ 9659 1C               inc e
 134+ 965A 1A               ld a,(de)
 135+ 965B AE               xor (hl)
 136+ 965C 77               ld (hl),a
 137+ 965D 13               inc de
 138+ 965E
 139+ 965E E1               pop hl
 140+ 965F
 141+ 965F 1A               ld a,(de)
 142+ 9660 AE               xor (hl)
 143+ 9661 77               ld (hl),a
 144+ 9662 2C               inc l
 145+ 9663 1C               inc e
 146+ 9664 1A               ld a,(de)
 147+ 9665 AE               xor (hl)
 148+ 9666 77               ld (hl),a
 149+ 9667 2C               inc l
 150+ 9668 1C               inc e
 151+ 9669 1A               ld a,(de)
 152+ 966A AE               xor (hl)
 153+ 966B 77               ld (hl),a
 154+ 966C 13               inc de
 155+ 966D
 156+ 966D E1               pop hl
 157+ 966E
 158+ 966E 1A               ld a,(de)
 159+ 966F AE               xor (hl)
 160+ 9670 77               ld (hl),a
 161+ 9671 2C               inc l
 162+ 9672 1C               inc e
 163+ 9673 1A               ld a,(de)
 164+ 9674 AE               xor (hl)
 165+ 9675 77               ld (hl),a
 166+ 9676 2C               inc l
 167+ 9677 1C               inc e
 168+ 9678 1A               ld a,(de)
 169+ 9679 AE               xor (hl)
 170+ 967A 77               ld (hl),a
 171+ 967B 13               inc de
 172+ 967C
 173+ 967C E1               pop hl
 174+ 967D
 175+ 967D 1A               ld a,(de)
 176+ 967E AE               xor (hl)
 177+ 967F 77               ld (hl),a
 178+ 9680 2C               inc l
 179+ 9681 1C               inc e
 180+ 9682 1A               ld a,(de)
 181+ 9683 AE               xor (hl)
 182+ 9684 77               ld (hl),a
 183+ 9685 2C               inc l
 184+ 9686 1C               inc e
 185+ 9687 1A               ld a,(de)
 186+ 9688 AE               xor (hl)
 187+ 9689 77               ld (hl),a
 188+ 968A 13               inc de
 189+ 968B
 190+ 968B E1               pop hl
 191+ 968C
 192+ 968C 1A               ld a,(de)
 193+ 968D AE               xor (hl)
 194+ 968E 77               ld (hl),a
 195+ 968F 2C               inc l
 196+ 9690 1C               inc e
 197+ 9691 1A               ld a,(de)
 198+ 9692 AE               xor (hl)
 199+ 9693 77               ld (hl),a
 200+ 9694 2C               inc l
 201+ 9695 1C               inc e
 202+ 9696 1A               ld a,(de)
 203+ 9697 AE               xor (hl)
 204+ 9698 77               ld (hl),a
 205+ 9699 13               inc de
 206+ 969A
 207+ 969A E1               pop hl
 208+ 969B
 209+ 969B 1A               ld a,(de)
 210+ 969C AE               xor (hl)
 211+ 969D 77               ld (hl),a
 212+ 969E 2C               inc l
 213+ 969F 1C               inc e
 214+ 96A0 1A               ld a,(de)
 215+ 96A1 AE               xor (hl)
 216+ 96A2 77               ld (hl),a
 217+ 96A3 2C               inc l
 218+ 96A4 1C               inc e
 219+ 96A5 1A               ld a,(de)
 220+ 96A6 AE               xor (hl)
 221+ 96A7 77               ld (hl),a
 222+ 96A8 13               inc de
 223+ 96A9
 224+ 96A9 E1               pop hl
 225+ 96AA
 226+ 96AA 1A               ld a,(de)
 227+ 96AB AE               xor (hl)
 228+ 96AC 77               ld (hl),a
 229+ 96AD 2C               inc l
 230+ 96AE 1C               inc e
 231+ 96AF 1A               ld a,(de)
 232+ 96B0 AE               xor (hl)
 233+ 96B1 77               ld (hl),a
 234+ 96B2 2C               inc l
 235+ 96B3 1C               inc e
 236+ 96B4 1A               ld a,(de)
 237+ 96B5 AE               xor (hl)
 238+ 96B6 77               ld (hl),a
 239+ 96B7 13               inc de
 240+ 96B8
 241+ 96B8 E1               pop hl
 242+ 96B9
 243+ 96B9 1A               ld a,(de)
 244+ 96BA AE               xor (hl)
 245+ 96BB 77               ld (hl),a
 246+ 96BC 2C               inc l
 247+ 96BD 1C               inc e
 248+ 96BE 1A               ld a,(de)
 249+ 96BF AE               xor (hl)
 250+ 96C0 77               ld (hl),a
 251+ 96C1 2C               inc l
 252+ 96C2 1C               inc e
 253+ 96C3 1A               ld a,(de)
 254+ 96C4 AE               xor (hl)
 255+ 96C5 77               ld (hl),a
 256+ 96C6 13               inc de
 257+ 96C7
 258+ 96C7 E1               pop hl
 259+ 96C8
 260+ 96C8 1A               ld a,(de)
 261+ 96C9 AE               xor (hl)
 262+ 96CA 77               ld (hl),a
 263+ 96CB 2C               inc l
 264+ 96CC 1C               inc e
 265+ 96CD 1A               ld a,(de)
 266+ 96CE AE               xor (hl)
 267+ 96CF 77               ld (hl),a
 268+ 96D0 2C               inc l
 269+ 96D1 1C               inc e
 270+ 96D2 1A               ld a,(de)
 271+ 96D3 AE               xor (hl)
 272+ 96D4 77               ld (hl),a
 273+ 96D5 13               inc de
 274+ 96D6
 275+ 96D6 E1               pop hl
 276+ 96D7
 277+ 96D7 1A               ld a,(de)
 278+ 96D8 AE               xor (hl)
 279+ 96D9 77               ld (hl),a
 280+ 96DA 2C               inc l
 281+ 96DB 1C               inc e
 282+ 96DC 1A               ld a,(de)
 283+ 96DD AE               xor (hl)
 284+ 96DE 77               ld (hl),a
 285+ 96DF 2C               inc l
 286+ 96E0 1C               inc e
 287+ 96E1 1A               ld a,(de)
 288+ 96E2 AE               xor (hl)
 289+ 96E3 77               ld (hl),a
 290+ 96E4 13               inc de
 291+ 96E5
 292+ 96E5 E1               pop hl
 293+ 96E6
 294+ 96E6 1A               ld a,(de)
 295+ 96E7 AE               xor (hl)
 296+ 96E8 77               ld (hl),a
 297+ 96E9 2C               inc l
 298+ 96EA 1C               inc e
 299+ 96EB 1A               ld a,(de)
 300+ 96EC AE               xor (hl)
 301+ 96ED 77               ld (hl),a
 302+ 96EE 2C               inc l
 303+ 96EF 1C               inc e
 304+ 96F0 1A               ld a,(de)
 305+ 96F1 AE               xor (hl)
 306+ 96F2 77               ld (hl),a
 307+ 96F3 13               inc de
 308+ 96F4
 309+ 96F4 ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 96F8 ED 7B 07 8C      ld sp,(Stack)
 311+ 96FC C9               ret
 312+ 96FD
 313+ 96FD              Pinta_lento
 314+ 96FD
 315+ 96FD E1           1 pop hl
 316+ 96FE
 317+ 96FE 1A               ld a,(de)
 318+ 96FF AE               xor (hl)
 319+ 9700 77               ld (hl),a
 320+ 9701 2C               inc l
 321+ 9702 1C               inc e
 322+ 9703 1A               ld a,(de)
 323+ 9704 AE               xor (hl)
 324+ 9705 77               ld (hl),a
 325+ 9706 2C               inc l
 326+ 9707 1C               inc e
 327+ 9708 1A               ld a,(de)
 328+ 9709 AE               xor (hl)
 329+ 970A 77               ld (hl),a
 330+ 970B 13               inc de
 331+ 970C
 332+ 970C 10 EF            djnz 1B
 333+ 970E
 334+ 970E ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 9712 ED 7B 07 8C      ld sp,(Stack)
 336+ 9716 C9               ret
# file closed: Pinta_Sprites.asm
2047  9717              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9717              ; ******************************************************************************************************************************************************************************************
   2+ 9717              ;
   3+ 9717              ; 26/06/23
   4+ 9717              ;
   5+ 9717              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9717
   7+ 9717              Draw
   8+ 9717
   9+ 9717 CD BD 99     	call Prepara_draw
  10+ 971A 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 971B A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 971C 28 05        	jr z,2F
  13+ 971E
  14+ 971E 3A D9 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9721 18 0C        	jr 1F
  16+ 9723
  17+ 9723 2A D7 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9726 22 CA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9729 CD B5 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 972C              ;													; _la esquina superior izquierda de la pantalla.
  21+ 972C
  22+ 972C CD 5C 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 972F
  24+ 972F 3A C7 8B     1 ld a,(Ctrl_0)
  25+ 9732 CB 6F        	bit 5,a
  26+ 9734 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9736
  28+ 9736 CD 4B 97     	call Comprueba_limite_horizontal
  29+ 9739 CD DB 97     	call Comprueba_limite_vertical
  30+ 973C
  31+ 973C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 973C              ; -----------------------
  33+ 973C              ; -----------------------
  34+ 973C              ; -----------------------
  35+ 973C
  36+ 973C CD 31 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 973F CD 68 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9742
  39+ 9742 3A C7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9745 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9747 32 C7 8B     	ld (Ctrl_0),a
  42+ 974A
  43+ 974A C9           	ret
  44+ 974B
  45+ 974B              ; *******************************************************************************************************************************************************************************************
  46+ 974B              ;	21/01/23
  47+ 974B              ;
  48+ 974B              ; 	Comprueba_limite_horizontal.
  49+ 974B              ;
  50+ 974B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 974B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 974B              ;
  53+ 974B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 974B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 974B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 974B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 974B
  58+ 974B
  59+ 974B
  60+ 974B 3A C7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 974E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9750 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9752 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9754 32 C7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9757 18 09            jr 6F
  66+ 9759 CB 5F        1 bit 3,a
  67+ 975B 28 0A            jr z,2F
  68+ 975D E6 F7            and $f7
  69+ 975F 32 C7 8B         ld (Ctrl_0),a
  70+ 9762 CD B5 98     6 call Inicializacion
  71+ 9765 18 5B            jr 5F
  72+ 9767 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9768
  74+ 9768              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9768              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9768
  77+ 9768 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9769 2A DB 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 976C CD B1 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 976F 67           	ld h,a
  81+ 9770 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9771 CD B1 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9774 67           	ld h,a
  84+ 9775 A7           	and a
  85+ 9776 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9778 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9779 3A D9 8B     	ld a,(Cuad_objeto)
  88+ 977C FE 02        	cp 2
  89+ 977E 38 1E        	jr c,3F
  90+ 9780 28 1C        	jr z,3F
  91+ 9782 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9783 28 23            jr z,7F
  93+ 9785 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9787 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9789 E1           	pop hl
  96+ 978A
  97+ 978A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 978A              ; _para indicar con E="2" en caso necesario.
  99+ 978A
 100+ 978A E5               push hl
 101+ 978B C5               push bc
 102+ 978C CD B1 94     	call calcula_tercio
 103+ 978F FE 01        	cp 1
 104+ 9791 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9793 CD C3 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9796 28 26            jr z,9F
 107+ 9798 38 24            jr c,9F
 108+ 979A 1E 00        11 ld e,0
 109+ 979C 18 22            jr 8F
 110+ 979E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 979F 28 07        	jr z, 7F
 112+ 97A1 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97A3 1E 00         	ld e,0
 114+ 97A5 E1           	pop hl
 115+ 97A6 18 04        	jr 4F
 116+ 97A8 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97AA 18 15            jr 10F
 118+ 97AC
 119+ 97AC              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97AC              ; _para indicar con E="2" en caso necesario.
 121+ 97AC
 122+ 97AC E5           4 push hl
 123+ 97AD C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97AE CD B1 94     	call calcula_tercio
 125+ 97B1 FE 01        	cp 1
 126+ 97B3 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97B5 CD C3 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97B8 28 04            jr z,9F
 129+ 97BA 30 02            jr nc,9F
 130+ 97BC 18 02        	jr 8F
 131+ 97BE 1E 02        9 ld e,2
 132+ 97C0 C1           8 pop bc
 133+ 97C1 E1           10 pop hl
 134+ 97C2 C9           5 ret
 135+ 97C3
 136+ 97C3              ; --------------------
 137+ 97C3              ;
 138+ 97C3              ; 25/08/22
 139+ 97C3
 140+ 97C3 CD B1 94     Comprueba_centro call calcula_tercio
 141+ 97C6 67               ld h,a
 142+ 97C7 08           	ex af,af
 143+ 97C8 FE 02        	cp 2
 144+ 97CA 38 07        	jr c,1F
 145+ 97CC 28 05        	jr z,1F
 146+ 97CE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97D1 18 03        	jr 2F
 148+ 97D3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97D6 08           2 ex af,af
 150+ 97D7 A7               and a
 151+ 97D8 ED 42            sbc hl,bc
 152+ 97DA C9               ret
 153+ 97DB
 154+ 97DB              ; *********************************************************************************************************************************************************************************************
 155+ 97DB              ;
 156+ 97DB              ;   16/8/22
 157+ 97DB              ;
 158+ 97DB              ;	Comprueba_limite_vertical
 159+ 97DB              ;
 160+ 97DB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97DB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97DB              ;
 163+ 97DB
 164+ 97DB 2A CA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97DE 7D           	ld a,l
 166+ 97DF E6 1F        	and $1F
 167+ 97E1 57           	ld d,a
 168+ 97E2 3A DD 8B     	ld a,(Limite_vertical)
 169+ 97E5 BA           	cp d 											; Límite - Posición.
 170+ 97E6 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97E7 3A D9 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97EA CB 47        	bit 0,a
 173+ 97EC 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97EE
 175+ 97EE              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97EE
 177+ 97EE 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97EF 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97F1
 180+ 97F1              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97F1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97F1
 183+ 97F1 3A BB 8B         ld a,(Coordenada_X)
 184+ 97F4 16 0F            ld d,Centro_izquierda
 185+ 97F6 A7               and a
 186+ 97F7 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97F8 28 1E            jr z,3F
 188+ 97FA 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97FC              ;                                                    ; _salimos sin modificar nada.
 190+ 97FC 18 0E            jr 2F
 191+ 97FE 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97FF 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9801
 194+ 9801              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9801              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9801
 197+ 9801 3A BB 8B         ld a,(Coordenada_X)
 198+ 9804 16 10            ld d,Centro_derecha
 199+ 9806 A7               and a
 200+ 9807 92               sub d
 201+ 9808 28 0E            jr z,3F
 202+ 980A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 980C              ;                                                    ; _salimos sin modificar nada.
 204+ 980C CB 43        2 bit 0,e
 205+ 980E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9810 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9811 CD A5 98         call Modificaccionne
 208+ 9814 C1           	pop bc
 209+ 9815 CD B5 98         call Inicializacion
 210+ 9818 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9819
 212+ 9819              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9819
 214+ 9819 C5           4 push bc
 215+ 981A 01 C9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 981D 0A           	ld a,(bc)
 217+ 981E 3D           	dec a
 218+ 981F 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9820 7D           	ld a,l
 220+ 9821 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9822 CB 47        	bit 0,a
 222+ 9824 28 03        	jr z,5F
 223+ 9826 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9827 18 2E        	jr 7F
 225+ 9829
 226+ 9829              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9829
 228+ 9829 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 982A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 982B 3A C7 8B     	ld a,(Ctrl_0)
 231+ 982E CB 4F        	bit 1,a
 232+ 9830 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9832 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9833
 235+ 9833              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9833
 237+ 9833 1C               inc e
 238+ 9834 1D               dec e
 239+ 9835 20 07            jr nz,12F
 240+ 9837 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9838 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9839 22 CA 8B     	ld (Posicion_actual),hl
 243+ 983C 18 44        13 jr 9F
 244+ 983E CB 43        12 bit 0,e
 245+ 9840 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9842              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9842 C1           	pop bc
 248+ 9843 18 D3        	jr 3B
 249+ 9845 80           14 add b
 250+ 9846 6F               ld l,a
 251+ 9847 22 CA 8B     	ld (Posicion_actual),hl
 252+ 984A CD A5 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 984D 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 984F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9851 32 C7 8B         ld (Ctrl_0),a
 256+ 9854 F1           	pop af
 257+ 9855 18 2B        	jr 9F
 258+ 9857
 259+ 9857              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9857
 261+ 9857 F5           7 push af
 262+ 9858 3A C7 8B     	ld a,(Ctrl_0)
 263+ 985B CB 47        	bit 0,a
 264+ 985D 20 1D        	jr nz,8F
 265+ 985F F1           	pop af
 266+ 9860
 267+ 9860              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9860
 269+ 9860 1C           	inc e
 270+ 9861 1D               dec e
 271+ 9862 20 07            jr nz,10F
 272+ 9864 90           	sub b
 273+ 9865 6F               ld l,a
 274+ 9866 22 CA 8B     	ld (Posicion_actual),hl
 275+ 9869 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 986B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 986B CB 43        10 bit 0,e
 278+ 986D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 986F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 986F C1           	pop bc
 281+ 9870 18 A6        	jr 3B
 282+ 9872 90           16 sub b
 283+ 9873 6F               ld l,a
 284+ 9874 22 CA 8B     	ld (Posicion_actual),hl
 285+ 9877 CD A5 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 987A 18 06            jr 9F
 287+ 987C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 987E 32 C7 8B         ld (Ctrl_0),a
 289+ 9881 F1           	pop af
 290+ 9882 C1           9 pop bc
 291+ 9883 1E 00        	ld e,0
 292+ 9885 CD B5 98         call Inicializacion
 293+ 9888 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9889 08           	ex af,af
 295+ 988A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 988B 18 8B            jr 3B
 297+ 988D
 298+ 988D              ; --------------------
 299+ 988D
 300+ 988D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 988F CD D8 99     1 call PreviousScan
 302+ 9892 10 FB            djnz 1B
 303+ 9894 22 CA 8B     	ld (Posicion_actual),hl
 304+ 9897 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9898 C9           	ret
 306+ 9899
 307+ 9899              ; --------------------
 308+ 9899
 309+ 9899 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 989B CD C9 99     1 call NextScan
 311+ 989E 10 FB            djnz 1B
 312+ 98A0 22 CA 8B     	ld (Posicion_actual),hl
 313+ 98A3 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98A4 C9           	ret
 315+ 98A5
 316+ 98A5              ; --------------------
 317+ 98A5              ;
 318+ 98A5              ;	22/01/23
 319+ 98A5              ;
 320+ 98A5              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98A5              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98A5              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98A5
 324+ 98A5
 325+ 98A5              Modificaccionne
 326+ 98A5
 327+ 98A5 3A D9 8B     	ld a,(Cuad_objeto)
 328+ 98A8 FE 02        	cp 2
 329+ 98AA CC 8D 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98AD DC 8D 98         call c,Modifica_Pos_actual
 331+ 98B0 C8           	ret z
 332+ 98B1 CD 99 98         call Modifica_Pos_actual2
 333+ 98B4 C9               ret
 334+ 98B5
 335+ 98B5              ; *************************************************************************************************************************************************************************************************
 336+ 98B5              ;
 337+ 98B5              ;	13/8/22
 338+ 98B5              ;
 339+ 98B5              ;	Inicializacion
 340+ 98B5              ;
 341+ 98B5              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98B5              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98B5              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98B5              ;
 345+ 98B5              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98B5              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98B5              ;	_ desaparece/aparece.
 348+ 98B5
 349+ 98B5              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98B5              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98B5              ;
 352+ 98B5              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98B5              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98B5              ; 		   [E] ="0"
 355+ 98B5
 356+ 98B5              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98B5
 358+ 98B5 CD B1 94     Inicializacion call calcula_tercio
 359+ 98B8 28 36        	jr z,primit
 360+ 98BA E6 02        	and 2
 361+ 98BC 20 07        	jr nz,segmit
 362+ 98BE 7D           	ld a,l
 363+ 98BF FE 7F        	cp $7f
 364+ 98C1 38 2D        	jr c,primit
 365+ 98C3 28 2B        	jr z,primit
 366+ 98C5 CD 2B 99     segmit call column
 367+ 98C8 38 13        	jr c,tercuad
 368+ 98CA 3E 04        cuarcuad ld a,4
 369+ 98CC 32 D9 8B     	ld (Cuad_objeto),a
 370+ 98CF 21 20 48     	ld hl,$4820
 371+ 98D2 22 DB 8B     	ld (Limite_horizontal),hl
 372+ 98D5 21 DD 8B     	ld hl,Limite_vertical
 373+ 98D8 36 0D        	ld (hl),$0d
 374+ 98DA 08           	ex af,af
 375+ 98DB 18 3C        	jr 1F
 376+ 98DD              tercuad
 377+ 98DD 3E 03        	ld a,3
 378+ 98DF 32 D9 8B     	ld (Cuad_objeto),a
 379+ 98E2 21 20 48     	ld hl,$4820
 380+ 98E5 22 DB 8B     	ld (Limite_horizontal),hl
 381+ 98E8 21 DD 8B     	ld hl,Limite_vertical
 382+ 98EB 36 12        	ld (hl),$12
 383+ 98ED 08           	ex af,af
 384+ 98EE 18 29        	jr 1F
 385+ 98F0 CD 2B 99     primit call column
 386+ 98F3 38 13        	jr c, primcuad
 387+ 98F5              segcuad
 388+ 98F5 3E 02        	ld a,2
 389+ 98F7 32 D9 8B     	ld (Cuad_objeto),a
 390+ 98FA 21 C0 4F     	ld hl,$4fc0
 391+ 98FD 22 DB 8B     	ld (Limite_horizontal),hl
 392+ 9900 21 DD 8B     	ld hl,Limite_vertical
 393+ 9903 36 0D        	ld (hl),$0d
 394+ 9905 08           	ex af,af
 395+ 9906 18 11        	jr 1F
 396+ 9908              primcuad
 397+ 9908 3E 01        	ld a,1
 398+ 990A 32 D9 8B     	ld (Cuad_objeto),a
 399+ 990D 21 C0 4F     	ld hl,$4fc0
 400+ 9910 22 DB 8B     	ld (Limite_horizontal),hl
 401+ 9913 21 DD 8B     	ld hl,Limite_vertical
 402+ 9916 36 12        	ld (hl),$12
 403+ 9918 08           	ex af,af
 404+ 9919
 405+ 9919 C5           1 push bc
 406+ 991A E5           	push hl
 407+ 991B D5           	push de
 408+ 991C
 409+ 991C 2A CA 8B     	ld hl,(Posicion_actual)
 410+ 991F CD CF 94     	call Genera_coordenadas
 411+ 9922
 412+ 9922 D1           	pop de
 413+ 9923 E1           	pop hl
 414+ 9924 C1           	pop bc
 415+ 9925
 416+ 9925 21 C7 8B     	ld hl,Ctrl_0
 417+ 9928 CB EE        	set 5,(hl)
 418+ 992A C9           	ret
 419+ 992B
 420+ 992B              ; ------------------------------------------------------------------------------------------------------------------
 421+ 992B
 422+ 992B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 992B              ;
 424+ 992B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 992B
 426+ 992B 7D           column ld a,l
 427+ 992C E6 1F        	and $1f
 428+ 992E FE 10         	cp $10
 429+ 9930 C9            	ret
 430+ 9931
 431+ 9931              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9931              ;
 433+ 9931              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9931              ;
 435+ 9931              ; 14/12/22
 436+ 9931              ;
 437+ 9931              ;	Modifica: A y BC.
 438+ 9931
 439+ 9931 3A D9 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9934 E6 01        	and 1
 441+ 9936 28 17        	jr z,1F
 442+ 9938
 443+ 9938              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9938
 445+ 9938 3A BB 8B     	ld a,(Coordenada_X)
 446+ 993B 47           	ld b,a
 447+ 993C 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 993D 79           	ld a,c
 449+ 993E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 993F 38 08        	jr c,2F
 451+ 9941 47           	ld b,a
 452+ 9942 79           	ld a,c
 453+ 9943 90           	sub b
 454+ 9944 32 DA 8B     	ld (Columnas),a
 455+ 9947 18 1B        	jr 4F
 456+ 9949 79           2 ld a,c
 457+ 994A 32 DA 8B     	ld (Columnas),a
 458+ 994D 18 15        	jr 4F
 459+ 994F
 460+ 994F              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 994F
 462+ 994F 3A BB 8B     1 ld a,(Coordenada_X)
 463+ 9952 81           	add c
 464+ 9953 3D           	dec a
 465+ 9954 D6 1F        	sub $1f
 466+ 9956 38 08        	jr c,3F
 467+ 9958 47           	ld b,a
 468+ 9959 79           	ld a,c
 469+ 995A 90           	sub b
 470+ 995B 32 DA 8B     	ld (Columnas),a
 471+ 995E 18 04        	jr 4F
 472+ 9960 79           3 ld a,c
 473+ 9961 32 DA 8B     	ld (Columnas),a
 474+ 9964 D9           4 exx
 475+ 9965 4F           	ld c,a
 476+ 9966 D9           	exx
 477+ 9967 C9            ret
 478+ 9968
 479+ 9968              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9968              ;
 481+ 9968              ;   19/7/23
 482+ 9968              ;
 483+ 9968              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9968              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9968              ;
 486+ 9968              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9968              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9968              ;
 489+ 9968              ;	DESTRUYE: HL,B Y A.
 490+ 9968
 491+ 9968 3A D9 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 996B FE 02        	cp 2
 493+ 996D 38 18        	jr c,1F
 494+ 996F 28 16        	jr z,1F
 495+ 9971 E6 01        	and 1
 496+ 9973 28 0D        	jr z,3F
 497+ 9975
 498+ 9975              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9975
 500+ 9975 CD B1 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9978
 502+ 9978 7D           9 ld a,l
 503+ 9979 E6 1F        	and $1f
 504+ 997B 28 2A        	jr z,7F
 505+ 997D 2B           	dec hl
 506+ 997E 10 F8        	djnz 9B
 507+ 9980 18 25        	jr 7F
 508+ 9982
 509+ 9982              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9982
 511+ 9982 2A CA 8B     3 ld hl,(Posicion_actual)
 512+ 9985 18 20        	jr 7F
 513+ 9987
 514+ 9987 28 14        1 jr z,2F
 515+ 9989
 516+ 9989              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9989
 518+ 9989 CD B1 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 998C
 520+ 998C 7D           4 ld a,l
 521+ 998D E6 1F        	and $1f
 522+ 998F 28 03        	jr z,6F
 523+ 9991 2B           	dec hl
 524+ 9992 10 F8        	djnz 4B
 525+ 9994 06 0F        6 ld b,15
 526+ 9996 CD D8 99     5 call PreviousScan
 527+ 9999 10 FB        	djnz 5B
 528+ 999B 18 0A        	jr 7F
 529+ 999D
 530+ 999D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 999D
 532+ 999D CD B1 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99A0 06 0F        	ld b,15
 534+ 99A2 CD D8 99     8 call PreviousScan
 535+ 99A5 10 FB        	djnz 8B
 536+ 99A7
 537+ 99A7 E5           7 push hl
 538+ 99A8 DD E1        	pop ix
 539+ 99AA
 540+ 99AA 2A CC 8B     	ld hl,(Puntero_objeto)
 541+ 99AD E5           	push hl
 542+ 99AE FD E1        	pop iy
 543+ 99B0
 544+ 99B0 C9           	ret
 545+ 99B1
 546+ 99B1              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99B1              ;
 548+ 99B1              ;	2/1/23
 549+ 99B1              ;
 550+ 99B1              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99B1              ;
 552+ 99B1              ;	Tras esta rutina tenemos:
 553+ 99B1              ;
 554+ 99B1              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99B1              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99B1              ;
 557+ 99B1              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99B1
 559+ 99B1 2A CA 8B     Operandos ld hl,(Posicion_actual)
 560+ 99B4 3A DA 8B     	ld a,(Columnas)
 561+ 99B7 3D           	dec a
 562+ 99B8 20 01        	jr nz,1F
 563+ 99BA 3C           	inc a
 564+ 99BB 47           1 ld b,a
 565+ 99BC C9           	ret
 566+ 99BD
 567+ 99BD              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99BD              ;
 569+ 99BD              ;	Prepara_draw
 570+ 99BD              ;
 571+ 99BD              ;	Es una rutina de carga.
 572+ 99BD              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99BD              ;
 574+ 99BD              ;	FUNCIONAMIENTO:
 575+ 99BD              ;
 576+ 99BD              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99BD              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99BD              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99BD              ;
 580+ 99BD              ;	DESTRUYE:
 581+ 99BD              ;
 582+ 99BD              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99BD
 584+ 99BD 21 C8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99C0 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99C1 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99C2 4E           	ld c,(hl)
 588+ 99C3 2A CA 8B     	ld hl,(Posicion_actual)
 589+ 99C6 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99C8 C9           	ret
 591+ 99C9
 592+ 99C9              ;----------------------------------------------------------------------------------------------------------------
 593+ 99C9              ;
 594+ 99C9              ;	5/08/22
 595+ 99C9              ;
 596+ 99C9              ;   NextScan.
 597+ 99C9              ;
 598+ 99C9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99C9              ;
 600+ 99C9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99C9              ;
 602+ 99C9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99C9              ;
 604+ 99C9              ;       DESTRUIDOS: AF y HL !!!
 605+ 99C9              ;
 606+ 99C9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99C9              ;
 608+ 99C9
 609+ 99C9 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99CA 7C               ld a,h
 611+ 99CB E6 07            and 7
 612+ 99CD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99CE
 614+ 99CE 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99CF C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99D1 6F               ld l,a
 617+ 99D2 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99D3
 619+ 99D3 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99D4 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99D6 67               ld h,a
 622+ 99D7 C9               ret
 623+ 99D8
 624+ 99D8              ;----------------------------------------------------------------------------------------------------------------
 625+ 99D8              ;
 626+ 99D8              ;	5/08/22
 627+ 99D8              ;
 628+ 99D8              ;   PreviousScan.
 629+ 99D8              ;
 630+ 99D8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99D8              ;
 632+ 99D8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99D8              ;
 634+ 99D8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99D8              ;
 636+ 99D8              ;       DESTRUIDOS: AF y HL !!!
 637+ 99D8              ;
 638+ 99D8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99D8              ;
 640+ 99D8
 641+ 99D8 7C           PreviousScan ld a,h
 642+ 99D9 25               dec h               ; Dec H.
 643+ 99DA E6 07            and 7
 644+ 99DC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99DD
 646+ 99DD 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99DE D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99E0 6F               ld l,a
 649+ 99E1 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99E2
 651+ 99E2 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99E3 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99E5 67               ld h,a
 654+ 99E6 C9               ret
 655+ 99E7
 656+ 99E7
 657+ 99E7
 658+ 99E7
 659+ 99E7
 660+ 99E7
 661+ 99E7
 662+ 99E7
 663+ 99E7
 664+ 99E7
 665+ 99E7
 666+ 99E7
# file closed: Draw_XOR.asm
2048  99E7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E7
   2+ 99E7              ; ******************************************************************************************************************************************************************************************
   3+ 99E7              ;
   4+ 99E7              ;   20/05/23
   5+ 99E7              ;
   6+ 99E7              ;	Recompone_posicion_inicio
   7+ 99E7              ;
   8+ 99E7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99E7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99E7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99E7              ;	_ a una u otra rutina.
  12+ 99E7
  13+ 99E7              Recompone_posicion_inicio
  14+ 99E7
  15+ 99E7 2A D7 8B     	ld hl,(Posicion_inicio)
  16+ 99EA 7D           	ld a,l
  17+ 99EB E6 1F        	and $1f
  18+ 99ED 28 16        	jr z,1F
  19+ 99EF
  20+ 99EF FE 1F        	cp $1f
  21+ 99F1 28 0D        	jr z,3F
  22+ 99F3
  23+ 99F3 21 C6 8B     	ld hl,Ctrl_2
  24+ 99F6 CB C6        	set 0,(hl)
  25+ 99F8 2A CC 8B     	ld hl,(Puntero_objeto)
  26+ 99FB 22 F8 8B     	ld (Repone_puntero_objeto),hl
  27+ 99FE 18 08        	jr 2F
  28+ 9A00
  29+ 9A00 CD AE 9B     3 call Mov_left
  30+ 9A03 18 03        	jr 2F
  31+ 9A05
  32+ 9A05 CD 8B 9A     1 call Mov_right
  33+ 9A08 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A0B 22 CC 8B     	ld (Puntero_objeto),hl
  35+ 9A0E C9           	ret
  36+ 9A0F
  37+ 9A0F              ; ******************************************************************************************************************************************************************************************
  38+ 9A0F              ;
  39+ 9A0F              ;   27/05/23
  40+ 9A0F              ;
  41+ 9A0F              ;	Mov_down
  42+ 9A0F              ;
  43+ 9A0F              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A0F              ;
  45+ 9A0F              ;
  46+ 9A0F              Mov_down
  47+ 9A0F
  48+ 9A0F CD 79 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A12              ;																	; _ repone (Puntero_objeto).
  50+ 9A12 21 C7 8B     	ld hl,Ctrl_0
  51+ 9A15 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A17              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A17              ; 																	; _ en el caso de que no lo haya.
  54+ 9A17 3A E2 8B     	ld a,(Vel_down)
  55+ 9A1A 47           	ld b,a
  56+ 9A1B 2A CA 8B         ld hl,(Posicion_actual)
  57+ 9A1E CD B1 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A21 E6 02        	and 2
  59+ 9A23 28 17        	jr z,1F
  60+ 9A25
  61+ 9A25              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A25              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A25
  64+ 9A25 7C           	ld a,h
  65+ 9A26 FE 57        	cp $57
  66+ 9A28 20 12        	jr nz,1F
  67+ 9A2A
  68+ 9A2A 7D           	ld a,l
  69+ 9A2B C6 20        	add $20
  70+ 9A2D 30 0D        	jr nc,1F
  71+ 9A2F
  72+ 9A2F              ; ------------------------------
  73+ 9A2F              ;
  74+ 9A2F              ;	12/01/24
  75+ 9A2F
  76+ 9A2F              ;	call Reaparece_arriba
  77+ 9A2F CD 3B 9D     	call Reinicio
  78+ 9A32
  79+ 9A32              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A32
  81+ 9A32 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 9A35 CB CF        	set 1,a
  83+ 9A37 32 2E 8C     	ld (Ctrl_3),a
  84+ 9A3A
  85+ 9A3A 18 08        	jr 3F
  86+ 9A3C              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A3C              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A3C              ; ------------------------------
  89+ 9A3C
  90+ 9A3C CD C9 99     1 call NextScan
  91+ 9A3F 22 CA 8B     	ld (Posicion_actual),hl
  92+ 9A42 10 DA            djnz 2B
  93+ 9A44 CD CF 94     3 call Genera_coordenadas
  94+ 9A47 C9           	ret
  95+ 9A48
  96+ 9A48              ; ******************************************************************************************************************************************************************************************
  97+ 9A48              ;
  98+ 9A48              ;   27/05/23
  99+ 9A48              ;
 100+ 9A48              ;	Mov_up
 101+ 9A48              ;
 102+ 9A48              ; 	Mueve el Sprite hacia arriba.
 103+ 9A48              ;
 104+ 9A48              ;
 105+ 9A48              Mov_up
 106+ 9A48
 107+ 9A48 CD 79 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A4B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A4B 21 C7 8B     	ld hl,Ctrl_0
 110+ 9A4E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A50              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A50              ; 																		; _ en el caso de que no lo haya.
 113+ 9A50 3A E1 8B     	ld a,(Vel_up)
 114+ 9A53 47           	ld b,a
 115+ 9A54 2A CA 8B     	ld hl,(Posicion_actual)
 116+ 9A57 CD B1 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A5A A7           	and a
 118+ 9A5B 20 10        	jr nz,1F
 119+ 9A5D
 120+ 9A5D              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A5D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A5D
 123+ 9A5D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A5E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A60 20 0B            jr nz,1F
 126+ 9A62 7D               ld a,l
 127+ 9A63 D6 20            sub $20
 128+ 9A65 30 06            jr nc,1F
 129+ 9A67 25               dec h
 130+ 9A68
 131+ 9A68              ; -----------------------------
 132+ 9A68 CD 1C 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A6B              ;	call Reinicio
 134+ 9A6B              ; -----------------------------
 135+ 9A6B
 136+ 9A6B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A6D CD D8 99     1 call PreviousScan
 138+ 9A70 22 CA 8B     	ld (Posicion_actual),hl
 139+ 9A73 10 E2            djnz 3B
 140+ 9A75 CD CF 94     2 call Genera_coordenadas
 141+ 9A78 C9           	ret
 142+ 9A79
 143+ 9A79              ; -----------------------------
 144+ 9A79              ;
 145+ 9A79              ;	27/5/23
 146+ 9A79              ;
 147+ 9A79              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A79              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A79              ;
 150+ 9A79              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A79              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A79              ;
 153+ 9A79              ;	Modifica: A y (Puntero_objeto).
 154+ 9A79
 155+ 9A79 3A C6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A7C CB 47        	bit 0,a
 157+ 9A7E C8           	ret z
 158+ 9A7F CB 87        	res 0,a
 159+ 9A81 32 C6 8B     	ld (Ctrl_2),a
 160+ 9A84 2A F8 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A87 22 CC 8B     	ld (Puntero_objeto),hl
 162+ 9A8A C9           	ret
 163+ 9A8B
 164+ 9A8B              ; ******************************************************************************************************************************************************************************************
 165+ 9A8B              ;
 166+ 9A8B              ;	19/10/22
 167+ 9A8B              ;
 168+ 9A8B              ;	Mov_right.
 169+ 9A8B              ;
 170+ 9A8B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A8B              ;
 172+ 9A8B
 173+ 9A8B 3A C7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A8E CB 77        	bit 6,a
 175+ 9A90 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A92
 177+ 9A92 CD CA 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A95 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A96
 180+ 9A96 21 C7 8B     	ld hl,Ctrl_0
 181+ 9A99 CB E6        	set 4,(hl)
 182+ 9A9B 18 52        	jr 8F
 183+ 9A9D
 184+ 9A9D 21 C7 8B     10 ld hl,Ctrl_0
 185+ 9AA0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AA2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AA2              ; 																	; _ en el caso de que no lo haya.
 188+ 9AA2 3A BB 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AA5 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AA7 20 46        	jr nz,8F
 191+ 9AA9
 192+ 9AA9 3A CE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AAC A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AAD 28 40        	jr z,8F
 195+ 9AAF
 196+ 9AAF              ; ---------- ---------- ----------
 197+ 9AAF              ;
 198+ 9AAF              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AAF
 200+ 9AAF 3A E0 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AB2 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AB4 28 11        	jr z,1F
 203+ 9AB6 38 06        	jr c,6F
 204+ 9AB8 FE 04        	cp 4
 205+ 9ABA 28 14        	jr z,7F
 206+ 9ABC 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ABE
 208+ 9ABE              ; ---------- ---------- ----------
 209+ 9ABE              ;
 210+ 9ABE              ; Perfiles de velocidad
 211+ 9ABE              ;
 212+ 9ABE
 213+ 9ABE 3A CE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AC1 FE FE        	cp $fe
 215+ 9AC3 20 2A        	jr nz,8F
 216+ 9AC5 18 10        	jr 3F
 217+ 9AC7 3A CE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ACA FE FD        	cp $fd
 219+ 9ACC 20 21        	jr nz,8F
 220+ 9ACE 18 07        	jr 3F
 221+ 9AD0 3A CE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AD3 FE FB        	cp $fb
 223+ 9AD5 20 18        	jr nz,8F
 224+ 9AD7
 225+ 9AD7              ; ---------- ---------- ----------
 226+ 9AD7
 227+ 9AD7              3
 228+ 9AD7 CD 0A 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ADA              ;	call Reinicio
 230+ 9ADA
 231+ 9ADA              ; ---------- ---------- ----------
 232+ 9ADA              ;
 233+ 9ADA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ADA
 235+ 9ADA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9ADC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ADD CD F6 9A     	call DESPLZ_DER
 238+ 9AE0 C1           	pop bc
 239+ 9AE1 10 F9        	djnz 5B
 240+ 9AE3 2A CA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AE6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AE7 22 CA 8B     	ld (Posicion_actual),hl
 243+ 9AEA CD CF 94     	call Genera_coordenadas
 244+ 9AED 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AEF
 246+ 9AEF              ; ---------- ---------- ----------
 247+ 9AEF
 248+ 9AEF 2A CA 8B     8 ld hl,(Posicion_actual)
 249+ 9AF2 CD F6 9A     	call DESPLZ_DER
 250+ 9AF5 C9           2 ret
 251+ 9AF6
 252+ 9AF6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AF6              ;
 254+ 9AF6              ;	22/9/22
 255+ 9AF6              ;
 256+ 9AF6
 257+ 9AF6 CD 05 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9AF9 CD 51 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AFC CD 7A 9B         call Ciclo_completo
 260+ 9AFF 21 C7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B02 CB FE        	set 7,(hl)
 262+ 9B04 C9           	ret
 263+ 9B05
 264+ 9B05              ; ******************************************************************************************************************************************************************************************
 265+ 9B05              ;	15/02/23
 266+ 9B05              ;
 267+ 9B05
 268+ 9B05 3A E0 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B08 47           	ld b,a
 270+ 9B09 2A D3 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B0C 23           1 inc hl
 272+ 9B0D 23           	inc hl
 273+ 9B0E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B10 22 D3 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B13 CD B0 90     	call Extrae_address
 276+ 9B16 22 CC 8B     	ld (Puntero_objeto),hl
 277+ 9B19
 278+ 9B19              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B19
 280+ 9B19              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B19              ; Cuántos movimientos hemos hecho ??
 282+ 9B19              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B19
 284+ 9B19 2A CF 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B1C EB           	ex de,hl
 286+ 9B1D A7           	and a
 287+ 9B1E ED 52        	sbc hl,de
 288+ 9B20 CB 3D        	srl l
 289+ 9B22 3E 08        6 ld a,8
 290+ 9B24 95           	sub l
 291+ 9B25 30 1E        	jr nc,3F
 292+ 9B27
 293+ 9B27              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B27              ; B="0".
 295+ 9B27
 296+ 9B27 04           4 inc b
 297+ 9B28 3C           	inc a
 298+ 9B29 20 FC        	jr nz,4B
 299+ 9B2B 78           	ld a,b
 300+ 9B2C 08           	ex af,af
 301+ 9B2D 2A CF 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B30 23           5 inc hl
 303+ 9B31 23           	inc hl
 304+ 9B32 10 FC        	djnz 5B
 305+ 9B34 22 D3 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B37 CD B0 90     	call Extrae_address
 307+ 9B3A 22 CC 8B     	ld (Puntero_objeto),hl
 308+ 9B3D
 309+ 9B3D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B3D              ; _(Posicion_actual).
 311+ 9B3D
 312+ 9B3D 21 CA 8B     	ld hl,Posicion_actual
 313+ 9B40 34           	inc (hl)
 314+ 9B41 08               ex af,af
 315+ 9B42 6F           	ld l,a
 316+ 9B43 18 DD        	jr 6B
 317+ 9B45
 318+ 9B45              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B45
 320+ 9B45 47           3 ld b,a
 321+ 9B46 2A D1 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B49 23           2 inc hl
 323+ 9B4A 23           	inc hl
 324+ 9B4B 10 FC        	djnz 2B
 325+ 9B4D 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B50 C9           8 ret
 327+ 9B51
 328+ 9B51              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B51              ;
 330+ 9B51              ;	24/7/22
 331+ 9B51              ;
 332+ 9B51              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B51              ;
 334+ 9B51              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B51              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B51              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B51
 338+ 9B51 3A CE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B54 A7           	and a
 340+ 9B55 20 1F        	jr nz,1F
 341+ 9B57 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B59 32 CE 8B         ld (CTRL_DESPLZ),a
 343+ 9B5C
 344+ 9B5C 21 C9 8B     	ld hl,Columns
 345+ 9B5F 34           	inc (hl)
 346+ 9B60 3A D9 8B     	ld a,(Cuad_objeto)
 347+ 9B63 E6 01        	and 1
 348+ 9B65 28 0F        	jr z,1F
 349+ 9B67 2A CA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B6A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B6B 22 CA 8B     	ld (Posicion_actual),hl
 352+ 9B6E CD CF 94     	call Genera_coordenadas
 353+ 9B71 CD D6 9C     	call Inc_CTRL_DESPLZ
 354+ 9B74 18 03        	jr 2F
 355+ 9B76 CD D6 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B79 C9           2 ret
 357+ 9B7A
 358+ 9B7A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B7A              ;
 360+ 9B7A              ;	24/7/22
 361+ 9B7A              ;
 362+ 9B7A              ;	Ciclo_completo.
 363+ 9B7A              ;
 364+ 9B7A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B7A              ;
 366+ 9B7A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B7A              ; 	Decrementamos (Columns).
 368+ 9B7A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B7A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B7A
 371+ 9B7A
 372+ 9B7A 3A CE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B7D FE FF        	cp $ff
 374+ 9B7F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B81 E6 F0        	and $f0
 376+ 9B83 20 28        	jr nz,3F
 377+ 9B85
 378+ 9B85              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B85
 380+ 9B85 3A CE 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B88 47           	ld b,a
 382+ 9B89 3E F8        	ld a,$f8
 383+ 9B8B 80           	add b
 384+ 9B8C 32 CE 8B     	ld (CTRL_DESPLZ),a
 385+ 9B8F 18 1C        	jr 3F
 386+ 9B91 21 C9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B94 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B95 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B96 32 CE 8B     	ld (CTRL_DESPLZ),a
 390+ 9B99 3A D9 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B9C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B9E 20 0A        	jr nz,2F
 393+ 9BA0 2A CA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BA3 23           	inc hl
 395+ 9BA4 22 CA 8B     	ld (Posicion_actual),hl
 396+ 9BA7 CD CF 94     	call Genera_coordenadas
 397+ 9BAA
 398+ 9BAA              ; Inicia el puntero de Sprite.
 399+ 9BAA
 400+ 9BAA CD C5 90     2 call Inicia_puntero_objeto_der
 401+ 9BAD C9           3 ret
 402+ 9BAE
 403+ 9BAE              ; ******************************************************************************************************************************************************************************************
 404+ 9BAE              ;
 405+ 9BAE              ;	15/02/23
 406+ 9BAE              ;
 407+ 9BAE              ;	Mov_left.
 408+ 9BAE              ;
 409+ 9BAE              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BAE              ;
 411+ 9BAE              Mov_left
 412+ 9BAE
 413+ 9BAE 21 C7 8B     	ld hl,Ctrl_0
 414+ 9BB1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BB3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BB3              ; 																	; _ en el caso de que no lo haya.
 417+ 9BB3 3A C7 8B     	ld a,(Ctrl_0)
 418+ 9BB6 CB 77        	bit 6,a
 419+ 9BB8 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BBA
 421+ 9BBA CD D0 9C     	call Stop_Amadeus_left
 422+ 9BBD C8           	ret z
 423+ 9BBE 20 4A        	jr nz,8F
 424+ 9BC0
 425+ 9BC0 3A BB 8B     11 ld a,(Coordenada_X)
 426+ 9BC3 A7           	and a
 427+ 9BC4 20 44        	jr nz,8F
 428+ 9BC6
 429+ 9BC6 3A CE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BC9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BCA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BCC
 433+ 9BCC              ; ---------- ---------- ----------
 434+ 9BCC
 435+ 9BCC 3A DF 8B     	ld a,(Vel_left)
 436+ 9BCF FE 02        	cp 2
 437+ 9BD1 28 0F        	jr z,1F
 438+ 9BD3 38 04        	jr c,6F
 439+ 9BD5 FE 04        	cp 4
 440+ 9BD7 28 12        	jr z,7F
 441+ 9BD9
 442+ 9BD9              ; ---------- ---------- ----------
 443+ 9BD9
 444+ 9BD9 3A CE 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BDC FE F8        	cp $f8
 446+ 9BDE 20 2A        	jr nz,8F
 447+ 9BE0 18 10        	jr 4F
 448+ 9BE2 3A CE 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BE5 FE F9        	cp $f9
 450+ 9BE7 20 21        	jr nz,8F
 451+ 9BE9 18 07        	jr 4F
 452+ 9BEB 3A CE 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BEE FE FB        	cp $fb
 454+ 9BF0 20 18        	jr nz,8F
 455+ 9BF2
 456+ 9BF2              ; ---------- ---------- ----------
 457+ 9BF2
 458+ 9BF2              4
 459+ 9BF2 CD F8 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BF5              ;	call Reinicio
 461+ 9BF5
 462+ 9BF5              ; ---------- ---------- ----------
 463+ 9BF5
 464+ 9BF5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BF7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BF8
 467+ 9BF8              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BF8              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BF8
 470+ 9BF8 CD 11 9C     	call DESPLZ_IZQ
 471+ 9BFB C1           	pop bc
 472+ 9BFC 10 F9        	djnz 5B
 473+ 9BFE 2A CA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C01 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C02 22 CA 8B     	ld (Posicion_actual),hl
 476+ 9C05 CD CF 94     	call Genera_coordenadas
 477+ 9C08 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C0A
 479+ 9C0A              ; ---------- ---------- ----------
 480+ 9C0A
 481+ 9C0A              ; Movemos, no hay recolocación.
 482+ 9C0A
 483+ 9C0A 2A CA 8B     8 ld hl,(Posicion_actual)
 484+ 9C0D CD 11 9C     	call DESPLZ_IZQ
 485+ 9C10 C9           2 ret
 486+ 9C11
 487+ 9C11              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C11              ;
 489+ 9C11              ;	22/9/22
 490+ 9C11
 491+ 9C11              DESPLZ_IZQ
 492+ 9C11
 493+ 9C11 CD 20 9C     	call Desplaza_izquierda
 494+ 9C14 CD 6C 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C17 CD 94 9C     	call Ciclo_completo_2
 496+ 9C1A 21 C7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C1D CB BE        	res 7,(hl)
 498+ 9C1F C9           	ret
 499+ 9C20
 500+ 9C20              Desplaza_izquierda
 501+ 9C20
 502+ 9C20 3A DF 8B     	ld a,(Vel_left)
 503+ 9C23 47           	ld b,a
 504+ 9C24 2A D5 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C27 23           1 inc hl
 506+ 9C28 23           	inc hl
 507+ 9C29 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C2B 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C2E CD B0 90     	call Extrae_address
 510+ 9C31 22 CC 8B     	ld (Puntero_objeto),hl
 511+ 9C34
 512+ 9C34              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C34
 514+ 9C34              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C34              ; Cuántos movimientos hemos hecho ??
 516+ 9C34              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C34
 518+ 9C34 2A D1 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C37 EB           	ex de,hl
 520+ 9C38 A7           	and a
 521+ 9C39 ED 52        	sbc hl,de
 522+ 9C3B CB 3D        	srl l
 523+ 9C3D 3E 08        6 ld a,8
 524+ 9C3F 95           	sub l
 525+ 9C40 30 1E        	jr nc,3F
 526+ 9C42
 527+ 9C42              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C42              ; B="0".
 529+ 9C42
 530+ 9C42 04           4 inc b
 531+ 9C43 3C           	inc a
 532+ 9C44 20 FC        	jr nz,4B
 533+ 9C46 78           	ld a,b
 534+ 9C47 08           	ex af,af
 535+ 9C48 2A D1 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C4B 23           5 inc hl
 537+ 9C4C 23           	inc hl
 538+ 9C4D 10 FC        	djnz 5B
 539+ 9C4F 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C52 CD B0 90     	call Extrae_address
 541+ 9C55 22 CC 8B     	ld (Puntero_objeto),hl
 542+ 9C58
 543+ 9C58              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C58              ; _(Posicion_actual).
 545+ 9C58
 546+ 9C58 21 CA 8B     	ld hl,Posicion_actual
 547+ 9C5B 35           	dec (hl)
 548+ 9C5C 08           	ex af,af
 549+ 9C5D 6F           	ld l,a
 550+ 9C5E 18 DD        	jr 6B
 551+ 9C60
 552+ 9C60              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C60
 554+ 9C60 47           3 ld b,a
 555+ 9C61 2A CF 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C64 23           2 inc hl
 557+ 9C65 23           	inc hl
 558+ 9C66 10 FC        	djnz 2B
 559+ 9C68 22 D3 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C6B C9           8 ret
 561+ 9C6C
 562+ 9C6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C6C              ;
 564+ 9C6C              ;	modifica_parametros_1er_DESPLZ
 565+ 9C6C              ;
 566+ 9C6C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C6C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C6C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C6C
 570+ 9C6C 3A CE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C6F A7           	and a
 572+ 9C70 20 1E        	jr nz,1F
 573+ 9C72 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C73 32 CE 8B         ld (CTRL_DESPLZ),a
 575+ 9C76 21 C9 8B     	ld hl,Columns
 576+ 9C79 34           	inc (hl)
 577+ 9C7A 3A D9 8B     	ld a,(Cuad_objeto)
 578+ 9C7D E6 01        	and 1
 579+ 9C7F 20 0F        	jr nz,1F
 580+ 9C81 2A CA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C84 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C85 22 CA 8B     	ld (Posicion_actual),hl
 583+ 9C88 CD CF 94     	call Genera_coordenadas
 584+ 9C8B CD E7 9C     	call Dec_CTRL_DESPLZ
 585+ 9C8E 18 03        	jr 2F
 586+ 9C90 CD E7 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C93 C9           2 ret
 588+ 9C94
 589+ 9C94              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C94
 591+ 9C94 3A CE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C97 FE F7        	cp $f7
 593+ 9C99 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C9B 30 2C        	jr nc,3F
 595+ 9C9D
 596+ 9C9D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C9D
 598+ 9C9D 06 00        	ld b,0
 599+ 9C9F 04           4 inc b
 600+ 9CA0 3C           	inc a
 601+ 9CA1 FE F7        	cp $f7
 602+ 9CA3 20 FA        	jr nz,4B
 603+ 9CA5 3E FF        	ld a,$ff
 604+ 9CA7 90           	sub b
 605+ 9CA8 32 CE 8B     	ld (CTRL_DESPLZ),a
 606+ 9CAB 18 1C        	jr 3F
 607+ 9CAD
 608+ 9CAD              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CAD
 610+ 9CAD 21 C9 8B     1 ld hl,Columns
 611+ 9CB0 35           	dec (hl)
 612+ 9CB1 AF           	xor a
 613+ 9CB2 32 CE 8B     	ld (CTRL_DESPLZ),a
 614+ 9CB5 3A D9 8B     	ld a,(Cuad_objeto)
 615+ 9CB8 E6 01        	and 1
 616+ 9CBA 28 0A        	jr z,2F
 617+ 9CBC 2A CA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CBF 2B           	dec hl
 619+ 9CC0 22 CA 8B     	ld (Posicion_actual),hl
 620+ 9CC3 CD CF 94     	call Genera_coordenadas
 621+ 9CC6
 622+ 9CC6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CC6
 624+ 9CC6 CD D8 90     2 call Inicia_puntero_objeto_izq
 625+ 9CC9 C9           3 ret
 626+ 9CCA
 627+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CCA              ;
 629+ 9CCA              ;	19/10/22
 630+ 9CCA              ;
 631+ 9CCA              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CCA              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CCA
 634+ 9CCA 3A BB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CCD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CCF C9           	ret
 637+ 9CD0
 638+ 9CD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CD0              ;
 640+ 9CD0              ;	19/10/22
 641+ 9CD0              ;
 642+ 9CD0              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CD0              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CD0
 645+ 9CD0 3A BB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CD3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CD5 C9           	ret
 648+ 9CD6
 649+ 9CD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CD6              ;
 651+ 9CD6              ;	24/7/22
 652+ 9CD6              ;
 653+ 9CD6              ;	Inc_CTRL_DESPLZ
 654+ 9CD6              ;
 655+ 9CD6              ;
 656+ 9CD6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CD6
 658+ 9CD6 21 CE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CD9 3A E0 8B     	ld a,(Vel_right)
 660+ 9CDC A7           	and a
 661+ 9CDD 28 06        	jr z,1F
 662+ 9CDF 47           	ld b,a
 663+ 9CE0 34           3 inc (hl)
 664+ 9CE1 10 FD        	djnz 3B
 665+ 9CE3 18 01        	jr 2F
 666+ 9CE5 34           1 inc (hl)
 667+ 9CE6 C9           2 ret
 668+ 9CE7
 669+ 9CE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CE7              ;
 671+ 9CE7              ;	5/2/23
 672+ 9CE7              ;
 673+ 9CE7              ;	Dec_CTRL_DESPLZ
 674+ 9CE7              ;
 675+ 9CE7              ;
 676+ 9CE7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CE7
 678+ 9CE7 21 CE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CEA 3A DF 8B     	ld a,(Vel_left)
 680+ 9CED A7           	and a
 681+ 9CEE 28 06        	jr z,1F
 682+ 9CF0 47           	ld b,a
 683+ 9CF1 35           3 dec (hl)
 684+ 9CF2 10 FD        	djnz 3B
 685+ 9CF4 18 01        	jr 2F
 686+ 9CF6 35           1 dec (hl)
 687+ 9CF7 C9           2 ret
 688+ 9CF8
 689+ 9CF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CF8
 691+ 9CF8 2A CA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CFB 01 1F 00     	ld bc,31
 693+ 9CFE A7           	and a
 694+ 9CFF ED 4A        	adc hl,bc
 695+ 9D01 22 CA 8B     	ld (Posicion_actual),hl
 696+ 9D04 21 C7 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D07 CB C6        	set 0,(hl)
 698+ 9D09 C9           	ret
 699+ 9D0A
 700+ 9D0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D0A
 702+ 9D0A 2A CA 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D0D 01 1F 00     	ld bc,31
 704+ 9D10 A7           	and a
 705+ 9D11 ED 42        	sbc hl,bc
 706+ 9D13 22 CA 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D16 21 C7 8B     	ld hl,Ctrl_0
 708+ 9D19 CB CE        	set 1,(hl)
 709+ 9D1B C9           	ret
 710+ 9D1C
 711+ 9D1C              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D1C
 713+ 9D1C 24           Reaparece_abajo inc h
 714+ 9D1D 01 E0 17     	ld bc,$17e0
 715+ 9D20 A7           	and a
 716+ 9D21 ED 4A        	adc hl,bc
 717+ 9D23 22 CA 8B     	ld (Posicion_actual),hl
 718+ 9D26 21 C7 8B     	ld hl,Ctrl_0
 719+ 9D29 CB D6        	set 2,(hl)
 720+ 9D2B C9           	ret
 721+ 9D2C
 722+ 9D2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D2C
 724+ 9D2C 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D2F A7           	and a
 726+ 9D30 ED 42        	sbc hl,bc
 727+ 9D32 22 CA 8B     	ld (Posicion_actual),hl
 728+ 9D35 21 C7 8B     	ld hl,Ctrl_0
 729+ 9D38 CB DE        	set 3,(hl)
 730+ 9D3A C9           	ret
 731+ 9D3B
 732+ 9D3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D3B              ;
 734+ 9D3B              ;	15/07/23
 735+ 9D3B
 736+ 9D3B              Reinicio
 737+ 9D3B
 738+ 9D3B              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D3B
 740+ 9D3B AF           	xor a
 741+ 9D3C 21 EF 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D3F CD 5D 9D     	call Limpia_contenido_hl
 743+ 9D42
 744+ 9D42 21 CA 8B     	ld hl,Posicion_actual
 745+ 9D45 CD 5D 9D     	call Limpia_contenido_hl
 746+ 9D48
 747+ 9D48 CD B1 92     	call Inicializa_Puntero_indice_mov
 748+ 9D4B CD 5C 9E     	call Inicia_Puntero_mov
 749+ 9D4E
 750+ 9D4E 21 F1 8B     	ld hl,Incrementa_puntero
 751+ 9D51 06 05        	ld b,5
 752+ 9D53 77           1 ld (hl),a
 753+ 9D54 23           	inc hl
 754+ 9D55 10 FC        	djnz 1B
 755+ 9D57
 756+ 9D57 21 C6 8B     	ld hl,Ctrl_2
 757+ 9D5A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D5C
 759+ 9D5C C9           	ret
 760+ 9D5D
 761+ 9D5D 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D5E 23           	inc hl
 763+ 9D5F 77           	ld (hl),a
 764+ 9D60 C9           	ret
 765+ 9D61
 766+ 9D61              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D61              ;
 768+ 9D61              ;	18/6/24
 769+ 9D61              ;
 770+ 9D61
 771+ 9D61              Amadeus_a_izquierda
 772+ 9D61
 773+ 9D61              ;	Actualiza contador de movimientos.
 774+ 9D61
 775+ 9D61 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D64 35           	dec (hl)
 777+ 9D65 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D67
 779+ 9D67 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D6A 2B           	dec hl
 781+ 9D6B 2B           	dec hl
 782+ 9D6C 2B           	dec hl
 783+ 9D6D 2B           	dec hl
 784+ 9D6E 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D71
 786+ 9D71 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D74 CB EE        	set 5,(hl)
 788+ 9D76
 789+ 9D76 C9           	ret
 790+ 9D77
 791+ 9D77 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D78 C9           	ret
 793+ 9D79
 794+ 9D79
 795+ 9D79              Amadeus_a_derecha
 796+ 9D79
 797+ 9D79              ;	Actualiza contador de movimientos.
 798+ 9D79
 799+ 9D79 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D7C 34           	inc (hl)
 801+ 9D7D 3E 7A        	ld a,$7a
 802+ 9D7F BE           	cp (hl)
 803+ 9D80 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D82
 805+ 9D82 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D85 23           	inc hl
 807+ 9D86 23           	inc hl
 808+ 9D87 23           	inc hl
 809+ 9D88 23           	inc hl
 810+ 9D89 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D8C
 812+ 9D8C 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D8F CB EE        	set 5,(hl)
 814+ 9D91 C9           	ret
 815+ 9D92
 816+ 9D92 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D93 C9           	ret
# file closed: Direcciones.asm
2049  9D94              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D94              ; ----- ----- ----- ----- -----
   2+ 9D94              ;
   3+ 9D94              ;   28/12/23
   4+ 9D94
   5+ 9D94              Movimiento
   6+ 9D94
   7+ 9D94              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D94
   9+ 9D94 3A C6 8B         ld a,(Ctrl_2)
  10+ 9D97 CB 57            bit 2,a
  11+ 9D99 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D9B
  13+ 9D9B 2A ED 8B         ld hl,(Puntero_mov)
  14+ 9D9E 7E               ld a,(hl)
  15+ 9D9F
  16+ 9D9F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D9F
  18+ 9D9F              Inicia_desplazamiento.
  19+ 9D9F
  20+ 9D9F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D9F
  22+ 9D9F CD 92 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DA2
  24+ 9DA2              ; Iniciamos (Repetimos_mov).
  25+ 9DA2
  26+ 9DA2 7E               ld a,(hl)
  27+ 9DA3 E6 0F            and $0f
  28+ 9DA5 32 F3 8B         ld (Repetimos_desplazamiento),a
  29+ 9DA8 32 F4 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DAB
  31+ 9DAB              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DAB
  33+ 9DAB 23               inc hl
  34+ 9DAC 7E               ld a,(hl)
  35+ 9DAD 32 F6 8B         ld (Cola_de_desplazamiento),a
  36+ 9DB0 2B               dec hl
  37+ 9DB1
  38+ 9DB1 21 C6 8B         ld hl,Ctrl_2
  39+ 9DB4 CB D6            set 2,(hl)
  40+ 9DB6
  41+ 9DB6              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DB6              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DB6
  44+ 9DB6              Desplazamiento_iniciado
  45+ 9DB6
  46+ 9DB6 CD 66 9E         call Aplica_desplazamiento
  47+ 9DB9
  48+ 9DB9              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DB9
  50+ 9DB9 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9DBC CB 4F            bit 1,a
  52+ 9DBE C0               ret nz
  53+ 9DBF
  54+ 9DBF 21 F3 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DC2 35               dec (hl)
  56+ 9DC3 C0               ret nz
  57+ 9DC4
  58+ 9DC4              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DC4              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DC4              ; Analiza (Cola_de_desplazamiento).
  61+ 9DC4
  62+ 9DC4 3A F6 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DC7 A7               and a
  64+ 9DC8 CC BB 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DCB 28 30            jr z,Reinicia_el_movimiento
  66+ 9DCD
  67+ 9DCD FE FF            cp $ff
  68+ 9DCF 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DD1
  70+ 9DD1 FE FE            cp $fe
  71+ 9DD3 CC 40 9E         call z,Fijamos_bucle
  72+ 9DD6 28 25            jr z,Reinicia_el_movimiento
  73+ 9DD8
  74+ 9DD8 FE FD            cp $fd
  75+ 9DDA 20 11            jr nz,1F
  76+ 9DDC
  77+ 9DDC              ; ---
  78+ 9DDC              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DDC
  80+ 9DDC 3A C6 8B         ld a,(Ctrl_2)
  81+ 9DDF CB 5F            bit 3,a
  82+ 9DE1 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DE3
  84+ 9DE3              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DE3
  86+ 9DE3 21 C6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DE6 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DE8
  89+ 9DE8 CD 51 9E         call Inicia_Repetimos_movimiento
  90+ 9DEB 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DED              ; ---
  92+ 9DED
  93+ 9DED FE 01        1 cp 1
  94+ 9DEF CA 2A 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DF2
  96+ 9DF2 3D               dec a
  97+ 9DF3 32 F6 8B         ld (Cola_de_desplazamiento),a
  98+ 9DF6
  99+ 9DF6 3A F4 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DF9 32 F3 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DFC              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DFC C9               ret
 103+ 9DFD
 104+ 9DFD              Reinicia_el_movimiento
 105+ 9DFD
 106+ 9DFD 3A C6 8B         ld a,(Ctrl_2)
 107+ 9E00 CB 5F            bit 3,a
 108+ 9E02 28 1B            jr z,2F
 109+ 9E04
 110+ 9E04              ; (Cola_de_desplazamiento)="254".
 111+ 9E04
 112+ 9E04 21 F5 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E07 35               dec (hl)
 114+ 9E08 20 15            jr nz,2F
 115+ 9E0A
 116+ 9E0A              ; Fin de las repeticiones del último movimiento.
 117+ 9E0A
 118+ 9E0A 21 C6 8B         ld hl,Ctrl_2
 119+ 9E0D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E0F
 121+ 9E0F 2A ED 8B         ld hl,(Puntero_mov)
 122+ 9E12 23               inc hl
 123+ 9E13 23               inc hl
 124+ 9E14 23               inc hl
 125+ 9E15 22 ED 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E18              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E18 7E               ld a,(hl)
 128+ 9E19 32 F6 8B         ld (Cola_de_desplazamiento),a
 129+ 9E1C
 130+ 9E1C C3 C4 9D         jp Cola
 131+ 9E1F
 132+ 9E1F CD 5C 9E     2 call Inicia_Puntero_mov
 133+ 9E22
 134+ 9E22 21 C6 8B         ld hl,Ctrl_2
 135+ 9E25 CB 96            res 2,(hl)
 136+ 9E27
 137+ 9E27 C3 94 9D         jp Movimiento
 138+ 9E2A
 139+ 9E2A              Siguiente_desplazamiento
 140+ 9E2A
 141+ 9E2A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E2A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E2A
 144+ 9E2A 21 C6 8B         ld hl,Ctrl_2
 145+ 9E2D CB 96            res 2,(hl)
 146+ 9E2F
 147+ 9E2F 2A ED 8B         ld hl,(Puntero_mov)
 148+ 9E32 23               inc hl
 149+ 9E33 23               inc hl
 150+ 9E34 22 ED 8B         ld (Puntero_mov),hl
 151+ 9E37
 152+ 9E37 7E               ld a,(hl)
 153+ 9E38 A7               and a
 154+ 9E39 CC BB 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E3C CA FD 9D         jp z,Reinicia_el_movimiento
 156+ 9E3F
 157+ 9E3F C9               ret
 158+ 9E40
 159+ 9E40              ; Subrutinas -----------------------------------------
 160+ 9E40              ; ---------- --------- --------- ---------- ----------
 161+ 9E40              ;
 162+ 9E40              ;   24/07/23
 163+ 9E40              ;
 164+ 9E40              ;   Fijamos_bucle
 165+ 9E40              ;
 166+ 9E40              ;
 167+ 9E40
 168+ 9E40              Fijamos_bucle
 169+ 9E40
 170+ 9E40 3A F1 8B         ld a,(Incrementa_puntero)
 171+ 9E43 3C               inc a
 172+ 9E44 32 F2 8B         ld (Incrementa_puntero_backup),a
 173+ 9E47
 174+ 9E47 CD BB 9E         call Incrementa_Puntero_indice_mov
 175+ 9E4A 2A EB 8B         ld hl,(Puntero_indice_mov)
 176+ 9E4D 22 EF 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E50 C9               ret
 178+ 9E51
 179+ 9E51              ; ---------- --------- --------- ---------- ----------
 180+ 9E51              ;
 181+ 9E51              ;   07/7/23
 182+ 9E51              ;
 183+ 9E51              ;   Inicia_Repetimos_movimiento
 184+ 9E51              ;
 185+ 9E51              ;
 186+ 9E51
 187+ 9E51              Inicia_Repetimos_movimiento
 188+ 9E51
 189+ 9E51              ; Iniciamos (Repetimos_movimiento).
 190+ 9E51
 191+ 9E51 DD 2A ED 8B      ld ix,(Puntero_mov)
 192+ 9E55 DD 7E 02         ld a,(ix+2)
 193+ 9E58 32 F5 8B         ld (Repetimos_movimiento),a
 194+ 9E5B
 195+ 9E5B C9               ret
 196+ 9E5C
 197+ 9E5C              ; ---------- --------- --------- ---------- ----------
 198+ 9E5C              ;
 199+ 9E5C              ;   26/6/23
 200+ 9E5C              ;
 201+ 9E5C              ;   Inicia_Puntero_mov
 202+ 9E5C              ;
 203+ 9E5C              ;
 204+ 9E5C
 205+ 9E5C 2A EB 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E5F CD B0 90         call Extrae_address
 207+ 9E62 22 ED 8B         ld (Puntero_mov),hl
 208+ 9E65 C9               ret
 209+ 9E66
 210+ 9E66              ; ---------- --------- --------- ---------- ----------
 211+ 9E66              ;
 212+ 9E66              ;   27/06/23
 213+ 9E66              ;
 214+ 9E66              ;   Aplica_movimiento.
 215+ 9E66
 216+ 9E66              Aplica_desplazamiento
 217+ 9E66
 218+ 9E66              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E66
 220+ 9E66 2A ED 8B         ld hl, (Puntero_mov)
 221+ 9E69
 222+ 9E69 7E               ld a,(hl)
 223+ 9E6A E6 F0            and $f0
 224+ 9E6C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E6D
 226+ 9E6D CB 7E            bit 7,(hl)
 227+ 9E6F 28 03            jr z,1F
 228+ 9E71 CD 48 9A         call Mov_up
 229+ 9E74 2A ED 8B     1 ld hl, (Puntero_mov)
 230+ 9E77 CB 76            bit 6,(hl)
 231+ 9E79 28 03            jr z,2F
 232+ 9E7B CD 0F 9A         call Mov_down
 233+ 9E7E
 234+ 9E7E              ; Se ha aplicado reinicio ???
 235+ 9E7E              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E7E
 237+ 9E7E              ;    ld a,(Ctrl_3)
 238+ 9E7E              ;    bit 1,a
 239+ 9E7E              ;    ret nz
 240+ 9E7E
 241+ 9E7E 2A ED 8B     2 ld hl, (Puntero_mov)
 242+ 9E81 CB 6E            bit 5,(hl)
 243+ 9E83 28 03            jr z,3F
 244+ 9E85 CD AE 9B         call Mov_left
 245+ 9E88 2A ED 8B     3 ld hl, (Puntero_mov)
 246+ 9E8B CB 66            bit 4,(hl)
 247+ 9E8D C8               ret z
 248+ 9E8E CD 8B 9A         call Mov_right
 249+ 9E91 C9               ret
 250+ 9E92
 251+ 9E92              ; ---------- --------- --------- ---------- ----------
 252+ 9E92              ;
 253+ 9E92              ;   26/06/23
 254+ 9E92              ;
 255+ 9E92              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E92
 257+ 9E92              Ajusta_velocidad_desplazamiento
 258+ 9E92
 259+ 9E92              ; 1er byte de la cadena de movimiento.
 260+ 9E92              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E92
 262+ 9E92 CD B0 9E         call Extrae_nibble_alto
 263+ 9E95
 264+ 9E95 32 E1 8B         ld (Vel_up),a
 265+ 9E98 79               ld a,c
 266+ 9E99 E6 0F            and $0f
 267+ 9E9B 32 E2 8B         ld (Vel_down),a
 268+ 9E9E
 269+ 9E9E              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E9E              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E9E
 272+ 9E9E 23               inc hl
 273+ 9E9F CD B0 9E         call Extrae_nibble_alto
 274+ 9EA2
 275+ 9EA2 32 DF 8B         ld (Vel_left),a
 276+ 9EA5 79               ld a,c
 277+ 9EA6 E6 0F            and $0f
 278+ 9EA8 32 E0 8B         ld (Vel_right),a
 279+ 9EAB
 280+ 9EAB              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EAB
 282+ 9EAB 23               inc hl
 283+ 9EAC 22 ED 8B         ld (Puntero_mov),hl
 284+ 9EAF C9               ret
 285+ 9EB0
 286+ 9EB0 06 04        Extrae_nibble_alto ld b,4
 287+ 9EB2 7E               ld a,(hl)
 288+ 9EB3 4F               ld c,a
 289+ 9EB4 E6 F0            and $f0
 290+ 9EB6 CB 3F        1 srl a
 291+ 9EB8 10 FC            djnz 1B
 292+ 9EBA C9               ret
 293+ 9EBB
 294+ 9EBB              ; ---------- --------- --------- ---------- ----------
 295+ 9EBB              ;
 296+ 9EBB              ;   5/7/23
 297+ 9EBB              ;
 298+ 9EBB              ;   Incrementa_Puntero_indice_mov
 299+ 9EBB
 300+ 9EBB              Incrementa_Puntero_indice_mov
 301+ 9EBB
 302+ 9EBB 21 F1 8B         ld hl,Incrementa_puntero
 303+ 9EBE 34               inc (hl)
 304+ 9EBF
 305+ 9EBF 2A EB 8B         ld hl,(Puntero_indice_mov)
 306+ 9EC2 01 02 00         ld bc,2
 307+ 9EC5 A7               and a
 308+ 9EC6 09               add hl,bc
 309+ 9EC7 22 EB 8B         ld (Puntero_indice_mov),hl
 310+ 9ECA
 311+ 9ECA 7E               ld a,(hl)
 312+ 9ECB A7               and a
 313+ 9ECC
 314+ 9ECC              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ECC
 316+ 9ECC              ;    jr z,$
 317+ 9ECC
 318+ 9ECC              ;! Reinicia el Patrón de movimiento.
 319+ 9ECC
 320+ 9ECC CC D1 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ECF
 322+ 9ECF AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ED0
 324+ 9ED0 C9               ret
 325+ 9ED1
 326+ 9ED1              ; ---------- --------- --------- ---------- ----------
 327+ 9ED1              ;
 328+ 9ED1              ;   15/01/24
 329+ 9ED1              ;
 330+ 9ED1              ;   Inicializa_Puntero_indice_mov
 331+ 9ED1
 332+ 9ED1              Inicializa_Puntero_indice_mov_2
 333+ 9ED1
 334+ 9ED1              ; Existe etiqueta de bucle principal???
 335+ 9ED1
 336+ 9ED1 2A EF 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ED4 24               inc h
 338+ 9ED5 25               dec h
 339+ 9ED6 28 05            jr z,2F
 340+ 9ED8
 341+ 9ED8 22 EB 8B         ld (Puntero_indice_mov),hl
 342+ 9EDB 18 14            jr 3F
 343+ 9EDD
 344+ 9EDD              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EDD
 346+ 9EDD 3A F1 8B     2 ld a,(Incrementa_puntero)
 347+ 9EE0 47               ld b,a
 348+ 9EE1
 349+ 9EE1 2A EB 8B         ld hl,(Puntero_indice_mov)
 350+ 9EE4 2B           1 dec hl
 351+ 9EE5 2B               dec hl
 352+ 9EE6 10 FC            djnz 1B
 353+ 9EE8 22 EB 8B         ld (Puntero_indice_mov),hl
 354+ 9EEB
 355+ 9EEB AF               xor a
 356+ 9EEC 32 F1 8B         ld (Incrementa_puntero),a
 357+ 9EEF 18 06            jr 4F
 358+ 9EF1
 359+ 9EF1 3A F2 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EF4 32 F1 8B         ld (Incrementa_puntero),a
 361+ 9EF7 C9           4 ret
 362+ 9EF8
 363+ 9EF8              ; ----------------------------------------------------------------------
 364+ 9EF8              ;
 365+ 9EF8              ;   30/01/24
 366+ 9EF8              ;
 367+ 9EF8              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EF8
 369+ 9EF8 3A BA 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EFB CD 4C 94         call Calcula_salto_en_BC
 371+ 9EFE 21 E3 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F01 A7               and a
 373+ 9F02 ED 4A            adc hl,bc
 374+ 9F04 C9               ret
 375+ 9F05
 376+ 9F05              ; ----------------------------------------------------------------------
 377+ 9F05              ;
 378+ 9F05              ;   30/01/24
 379+ 9F05              ;
 380+ 9F05              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F05              ;
 382+ 9F05              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F05
 384+ 9F05 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F06 23               inc hl
 386+ 9F07 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F08 69               ld l,c
 388+ 9F09 60               ld h,b
 389+ 9F0A 22 C3 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F0D C9               ret
 391+ 9F0E
# file closed: Movimiento.asm
2050  9F0E              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F0E              ; --------------------------------------------------------------------------------------
   2+ 9F0E              ;
   3+ 9F0E              ;   19/10/24
   4+ 9F0E              ;
   5+ 9F0E
   6+ 9F0E              Pinta_disparos_Entidades
   7+ 9F0E
   8+ 9F0E ED 73 07 8C      ld (Stack),sp
   9+ 9F12 ED 7B 19 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F16
  11+ 9F16 3E 02            ld a,2
  12+ 9F18 08               ex af,af
  13+ 9F19
  14+ 9F19 FD E1        3 pop iy
  15+ 9F1B C1               pop bc                          ; 1er .db IYL
  16+ 9F1C              ;                                   ; 2º  .db IYH
  17+ 9F1C              ;                                   ; 3er .db C.
  18+ 9F1C              ;   Album vacío ???
  19+ 9F1C
  20+ 9F1C FD 7D            ld a,iyl
  21+ 9F1E FD 84            add iyh
  22+ 9F20 81               add c
  23+ 9F21 28 1D            jr z,1F
  24+ 9F23
  25+ 9F23              ;   Imprime album, (contiene datos).
  26+ 9F23
  27+ 9F23 3B               dec sp
  28+ 9F24
  29+ 9F24 E1               pop hl                          ; Puntero de impresión en HL.
  30+ 9F25
  31+ 9F25              ; Imprime el 1er scanline del disparo.
  32+ 9F25
  33+ 9F25 FD 7D            ld a,iyl
  34+ 9F27 AE               xor (hl)
  35+ 9F28 77               ld (hl),a
  36+ 9F29
  37+ 9F29 2C               inc l
  38+ 9F2A
  39+ 9F2A FD 7C            ld a,iyh
  40+ 9F2C AE               xor (hl)
  41+ 9F2D 77               ld (hl),a
  42+ 9F2E
  43+ 9F2E 2C               inc l
  44+ 9F2F
  45+ 9F2F 79               ld a,c
  46+ 9F30 AE               xor (hl)
  47+ 9F31 77               ld (hl),a
  48+ 9F32
  49+ 9F32              ; Imprime el 2º scanline del disparo.
  50+ 9F32
  51+ 9F32 E1               pop hl
  52+ 9F33
  53+ 9F33 FD 7D            ld a,iyl
  54+ 9F35 AE               xor (hl)
  55+ 9F36 77               ld (hl),a
  56+ 9F37
  57+ 9F37 2C               inc l
  58+ 9F38
  59+ 9F38 FD 7C            ld a,iyh
  60+ 9F3A AE               xor (hl)
  61+ 9F3B 77               ld (hl),a
  62+ 9F3C
  63+ 9F3C 2C               inc l
  64+ 9F3D
  65+ 9F3D 79               ld a,c
  66+ 9F3E AE               xor (hl)
  67+ 9F3F 77               ld (hl),a
  68+ 9F40
  69+ 9F40 08           1 ex af,af
  70+ 9F41 3D               dec a
  71+ 9F42 20 05            jr nz,2F
  72+ 9F44
  73+ 9F44 ED 7B 07 8C      ld sp,(Stack)
  74+ 9F48 C9               ret
  75+ 9F49
  76+ 9F49 ED 7B 17 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  77+ 9F4D 08               ex af,af
  78+ 9F4E 18 C9            jr 3B
  79+ 9F50
  80+ 9F50              ; --------------------------------------------------------------------------------------
  81+ 9F50              ;
  82+ 9F50              ;   15/10/24
  83+ 9F50              ;
  84+ 9F50
  85+ 9F50              Motor_de_disparos_entidades
  86+ 9F50
  87+ 9F50 3A 1E 8C         ld a,(Numero_de_disparos_de_entidades)
  88+ 9F53 FE 07            cp 7
  89+ 9F55 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  90+ 9F56
  91+ 9F56 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  92+ 9F58 21 23 89         ld hl,Indice_de_disparos_entidades
  93+ 9F5B
  94+ 9F5B CD B0 90     1 call Extrae_address
  95+ 9F5E 1C               inc e
  96+ 9F5F 1C               inc e
  97+ 9F60 ED 53 31 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  98+ 9F64
  99+ 9F64               ; Caja vacía ???
 100+ 9F64
 101+ 9F64 2C               inc l
 102+ 9F65
 103+ 9F65 7E               ld a,(hl)
 104+ 9F66 A7               and a
 105+ 9F67 28 16            jr z,3F                                                              ; Caja vacía.
 106+ 9F69
 107+ 9F69              ; --- Trabajamos con caja:
 108+ 9F69
 109+ 9F69              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
 110+ 9F69
 111+ 9F69              ;    call Rota_disparo_si_procede
 112+ 9F69
 113+ 9F69              ; ------------------------------------------------------------
 114+ 9F69
 115+ 9F69 2D               dec l
 116+ 9F6A 2D               dec l
 117+ 9F6B 2D               dec l
 118+ 9F6C
 119+ 9F6C CD B0 90         call Extrae_address
 120+ 9F6F              ;   (Puntero_de_impresion) del disparo en HL.
 121+ 9F6F
 122+ 9F6F              ;! Velocidad del disparo de entidades.
 123+ 9F6F
 124+ 9F6F CD C9 99         call NextScan
 125+ 9F72
 126+ 9F72              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 127+ 9F72
 128+ 9F72 CD 83 9F         call Fin_de_disparo_de_entidad
 129+ 9F75
 130+ 9F75 EB               ex de,hl
 131+ 9F76
 132+ 9F76 73               ld (hl),e
 133+ 9F77 23               inc hl
 134+ 9F78 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 135+ 9F79
 136+ 9F79 2A 31 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 137+ 9F7C 18 02            jr 2F
 138+ 9F7E
 139+ 9F7E C9               ret
 140+ 9F7F
 141+ 9F7F EB           3 ex de,hl
 142+ 9F80 10 D9        2 djnz 1B
 143+ 9F82
 144+ 9F82 C9               ret
 145+ 9F83
 146+ 9F83              ; ------------- ------------- ------------
 147+ 9F83              ;
 148+ 9F83              ;   25/9/24
 149+ 9F83
 150+ 9F83              Fin_de_disparo_de_entidad
 151+ 9F83
 152+ 9F83 7C               ld a,h
 153+ 9F84 FE 54            cp $54
 154+ 9F86 D8               ret c
 155+ 9F87
 156+ 9F87 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 157+ 9F88
 158+ 9F88 5D               ld e,l
 159+ 9F89 54               ld d,h
 160+ 9F8A
 161+ 9F8A 21 E0 57         ld hl,$57e0
 162+ 9F8D ED 52            sbc hl,de
 163+ 9F8F
 164+ 9F8F 38 39            jr c,Elimina_disparo_entidad
 165+ 9F91
 166+ 9F91 6B               ld l,e
 167+ 9F92 62               ld h,d
 168+ 9F93
 169+ 9F93 D1               pop de
 170+ 9F94
 171+ 9F94 C9               ret
 172+ 9F95
 173+ 9F95              ; ----------------------------------------------------------
 174+ 9F95              ;
 175+ 9F95              ;   08/10/24
 176+ 9F95
 177+ 9F95              Rota_disparo_si_procede
 178+ 9F95
 179+ 9F95              ;   Nos situamos en el byte alto de (Control).
 180+ 9F95
 181+ 9F95 CB 76            bit 6,(hl)
 182+ 9F97 20 03            jr nz,Decrementa_contador_de_control_de_disparo
 183+ 9F99 CB 7E            bit 7,(hl)
 184+ 9F9B C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 185+ 9F9C
 186+ 9F9C              Decrementa_contador_de_control_de_disparo
 187+ 9F9C
 188+ 9F9C 35               dec (hl)
 189+ 9F9D 7E               ld a,(hl)
 190+ 9F9E E6 07            and 7
 191+ 9FA0 C0               ret nz
 192+ 9FA1
 193+ 9FA1              Rotamos_disparo_segun_proceda
 194+ 9FA1
 195+ 9FA1              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 196+ 9FA1
 197+ 9FA1 3E 07            ld a,7
 198+ 9FA3 86               add (hl)
 199+ 9FA4 77               ld (hl),a                                                           ; Contador reinicializado.
 200+ 9FA5
 201+ 9FA5 CD BE 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 202+ 9FA8
 203+ 9FA8 CB 76            bit 6,(hl)
 204+ 9FAA 20 05            jr nz,Rota_a_derecha
 205+ 9FAC
 206+ 9FAC
 207+ 9FAC              Rota_a_izq
 208+ 9FAC
 209+ 9FAC F3               di
 210+ 9FAD 18 FE            jr $
 211+ 9FAF FB               ei
 212+ 9FB0
 213+ 9FB0 C9               ret
 214+ 9FB1
 215+ 9FB1              Rota_a_derecha
 216+ 9FB1
 217+ 9FB1 FD CB 00 3E      srl (iy+0)
 218+ 9FB5 FD CB 01 3E      srl (iy+1)
 219+ 9FB9 FD CB 02 3E      srl (iy+2)
 220+ 9FBD
 221+ 9FBD              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 222+ 9FBD
 223+ 9FBD C9               ret
 224+ 9FBE
 225+ 9FBE              ; ------------ ----------- ------------
 226+ 9FBE              ;
 227+ 9FBE              ;   11/10/24
 228+ 9FBE
 229+ 9FBE              Puntero_objeto_en_IY
 230+ 9FBE
 231+ 9FBE E5               push hl
 232+ 9FBF
 233+ 9FBF 2D               dec l
 234+ 9FC0 2D               dec l
 235+ 9FC1 2D               dec l
 236+ 9FC2 2D               dec l
 237+ 9FC3 2D               dec l
 238+ 9FC4 2D               dec l
 239+ 9FC5
 240+ 9FC5 E5               push hl
 241+ 9FC6 FD E1            pop iy
 242+ 9FC8
 243+ 9FC8 E1               pop hl
 244+ 9FC9
 245+ 9FC9 C9               ret
 246+ 9FCA
 247+ 9FCA              ; ------------ ----------- ------------
 248+ 9FCA              ;
 249+ 9FCA              ;   25/9/24
 250+ 9FCA
 251+ 9FCA              Elimina_disparo_entidad
 252+ 9FCA
 253+ 9FCA F3               di
 254+ 9FCB 18 FE            jr $
 255+ 9FCD FB               ei
 256+ 9FCE
 257+ 9FCE 21 1E 8C         ld hl,Numero_de_disparos_de_entidades
 258+ 9FD1 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 259+ 9FD2
 260+ 9FD2              ;    pop hl
 261+ 9FD2              ;    push hl
 262+ 9FD2
 263+ 9FD2              ;    dec hl
 264+ 9FD2              ;    dec hl                                                              ; Sitúa en el 1er .db de la caja.
 265+ 9FD2
 266+ 9FD2              ;    ld d,6                                                              ; Contador
 267+ 9FD2              ;    xor a                                                               ; Borrador
 268+ 9FD2
 269+ 9FD2              ;1 ld (hl),a
 270+ 9FD2              ;    dec d
 271+ 9FD2              ;    inc hl
 272+ 9FD2              ;    jr nz,1B
 273+ 9FD2
 274+ 9FD2              ;    pop de
 275+ 9FD2
 276+ 9FD2              ;    ld hl,0
 277+ 9FD2
 278+ 9FD2 C9               ret
 279+ 9FD3              ; --------------------------------------------------------------------------------------
 280+ 9FD3              ;
 281+ 9FD3              ;   12/10/24
 282+ 9FD3              ;
 283+ 9FD3
 284+ 9FD3              Genera_datos_de_impresion_disparos_Entidades
 285+ 9FD3
 286+ 9FD3 3A 1E 8C         ld a,(Numero_de_disparos_de_entidades)
 287+ 9FD6 47               ld b,a
 288+ 9FD7 3E 07            ld a,7
 289+ 9FD9 90               sub b
 290+ 9FDA C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 291+ 9FDB
 292+ 9FDB 08               ex af,af
 293+ 9FDC
 294+ 9FDC              ; ---------------
 295+ 9FDC
 296+ 9FDC              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 297+ 9FDC
 298+ 9FDC 21 23 89         ld hl,Indice_de_disparos_entidades
 299+ 9FDF
 300+ 9FDF CD B0 90     1 call Extrae_address
 301+ 9FE2
 302+ 9FE2 13               inc de
 303+ 9FE3 13               inc de
 304+ 9FE4
 305+ 9FE4 ED 53 31 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 306+ 9FE8
 307+ 9FE8 2C               inc l
 308+ 9FE9
 309+ 9FE9 7E               ld a,(hl)
 310+ 9FEA A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 311+ 9FEB 28 39            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 312+ 9FED
 313+ 9FED              ; ----- ----- ----- -----
 314+ 9FED
 315+ 9FED 2D               dec l
 316+ 9FEE 2D               dec l
 317+ 9FEF 2D               dec l
 318+ 9FF0
 319+ 9FF0 CD B0 90         call Extrae_address
 320+ 9FF3 E5               push hl
 321+ 9FF4
 322+ 9FF4 1D               dec e
 323+ 9FF5
 324+ 9FF5 EB               ex de,hl
 325+ 9FF6
 326+ 9FF6 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 327+ 9FF7 2D               dec l
 328+ 9FF8 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 329+ 9FF9 2D               dec l
 330+ 9FFA 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 331+ 9FFB
 332+ 9FFB E1               pop hl                                                    ;? Puntero de impresión en HL.
 333+ 9FFC
 334+ 9FFC              Genera_scanlines_de_los_disparos_de_entidades.
 335+ 9FFC
 336+ 9FFC FD 2A 1B 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 337+ A000 FD 73 00         ld (iy+0),e
 338+ A003 FD 70 01         ld (iy+1),b
 339+ A006 FD 71 02         ld (iy+2),c
 340+ A009
 341+ A009 FD 75 03         ld (iy+3),l
 342+ A00C FD 74 04         ld (iy+4),h
 343+ A00F
 344+ A00F CD C9 99         call NextScan
 345+ A012
 346+ A012 FD 75 05         ld (iy+5),l
 347+ A015 FD 74 06         ld (iy+6),h
 348+ A018
 349+ A018 FD E5            push iy
 350+ A01A E1               pop hl
 351+ A01B
 352+ A01B 3E 07            ld a,7
 353+ A01D 85               add l
 354+ A01E 6F               ld l,a
 355+ A01F
 356+ A01F 22 1B 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 357+ A022
 358+ A022              ; ----- ----- ----- -----
 359+ A022
 360+ A022 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 361+ A023 3D               dec a
 362+ A024 C8               ret z
 363+ A025 08               ex af,af
 364+ A026
 365+ A026              Situa_en_siguiente_caja
 366+ A026
 367+ A026 2A 31 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 368+ A029 18 B4            jr 1B
 369+ A02B
 370+ A02B              ; --------------------------------------------------------------------------------------
 371+ A02B              ;
 372+ A02B              ;   12/10/24
 373+ A02B              ;
 374+ A02B
 375+ A02B              Genera_disparo_de_entidad_maldosa
 376+ A02B
 377+ A02B              ;   Estructura de un disparo de entidades.
 378+ A02B
 379+ A02B              ;   Disparo_1 defw 0								; Puntero objeto.
 380+ A02B              ; 	defw 0											; Puntero de impresión.
 381+ A02B              ;	defw 0											; Control.
 382+ A02B
 383+ A02B              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 384+ A02B              ;   _de la entidad en el momento de disparar.
 385+ A02B
 386+ A02B              ;   El byte alto muestra la siguiente información:
 387+ A02B              ;
 388+ A02B              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 389+ A02B              ;                        _antes de desplazarse a derecha/izquierda.
 390+ A02B              ;
 391+ A02B              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 392+ A02B              ;
 393+ A02B              ;                        10xx ..... Izquierda.
 394+ A02B              ;                        01xx ..... Derecha.
 395+ A02B              ;                        00xx ..... Recto.
 396+ A02B
 397+ A02B              ;*  Exclusiones.
 398+ A02B
 399+ A02B              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 400+ A02B              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 401+ A02B
 402+ A02B              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 403+ A02B
 404+ A02B 3A 1E 8C         ld a,(Numero_de_disparos_de_entidades)
 405+ A02E A7               and a
 406+ A02F C8               ret z
 407+ A030
 408+ A030 3A BC 8B         ld a,(Coordenada_y)
 409+ A033 A7               and a
 410+ A034 C8               ret z
 411+ A035
 412+ A035 3D               dec a
 413+ A036 C8               ret z
 414+ A037
 415+ A037 FE 10            cp 16
 416+ A039 D0               ret nc
 417+ A03A
 418+ A03A              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 419+ A03A              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 420+ A03A              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 421+ A03A
 422+ A03A 21 30 8C         ld hl,Ctrl_5
 423+ A03D CB D6            set 2,(hl)
 424+ A03F
 425+ A03F 21 20 8C         ld hl,Permiso_de_disparo_Entidades
 426+ A042 35               dec (hl)                                            ; No más disparos en este FRAME.
 427+ A043
 428+ A043              ;   Decrementa el numero de disparos de entidades.
 429+ A043
 430+ A043 21 1E 8C         ld hl,Numero_de_disparos_de_entidades
 431+ A046 35               dec (hl)
 432+ A047
 433+ A047 21 23 89         ld hl,Indice_de_disparos_entidades
 434+ A04A
 435+ A04A CD B0 90     1 call Extrae_address
 436+ A04D
 437+ A04D 13               inc de
 438+ A04E 13               inc de
 439+ A04F
 440+ A04F ED 53 31 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 441+ A053
 442+ A053              ;   Comprobamos si la caja está vacía.
 443+ A053
 444+ A053 2C               inc l
 445+ A054
 446+ A054 7E               ld a,(hl)
 447+ A055 A7               and a
 448+ A056 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 449+ A058
 450+ A058              ;   Caja vacía, vamos a generar un disparo.
 451+ A058              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 452+ A058
 453+ A058 CD 7E A0         call Genera_byte_inclinacion
 454+ A05B
 455+ A05B 7E               ld a,(hl)
 456+ A05C 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 457+ A05D
 458+ A05D 2D               dec l
 459+ A05E
 460+ A05E              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 461+ A05E
 462+ A05E 3A C5 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 463+ A061 77               ld (hl),a
 464+ A062
 465+ A062 2D               dec l
 466+ A063
 467+ A063 CD 9C A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 468+ A066
 469+ A066 70               ld (hl),b
 470+ A067 2D               dec l
 471+ A068 71               ld (hl),c
 472+ A069
 473+ A069 2D               dec l
 474+ A06A
 475+ A06A              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 476+ A06A
 477+ A06A FD 7E 02         ld a,(iy+02)
 478+ A06D 77               ld (hl),a
 479+ A06E 2D               dec l
 480+ A06F
 481+ A06F FD 7E 01         ld a,(iy+01)
 482+ A072 77               ld (hl),a
 483+ A073 2D               dec l
 484+ A074
 485+ A074 FD 7E 00         ld a,(iy+00)
 486+ A077 77               ld (hl),a
 487+ A078
 488+ A078 C9               ret
 489+ A079
 490+ A079              ;   --- --- ---
 491+ A079
 492+ A079              Situa_en_siguiente_disparo
 493+ A079
 494+ A079 2A 31 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 495+ A07C 18 CC            jr 1B
 496+ A07E
 497+ A07E              ; --------------------------------------------------------------------------------------
 498+ A07E              ;
 499+ A07E              ;   09/10/24
 500+ A07E              ;
 501+ A07E
 502+ A07E              Genera_byte_inclinacion
 503+ A07E
 504+ A07E 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 505+ A080
 506+ A080              ; Determina tendencia del disparo.
 507+ A080
 508+ A080 3A 75 89         ld a,(CX_Amadeus)
 509+ A083 47               ld b,a
 510+ A084 3A BB 8B         ld a,(Coordenada_X)
 511+ A087 90               sub b
 512+ A088 38 07            jr c,Disparo_a_derecha
 513+ A08A
 514+ A08A FE 04        Disparo_a_izquierda cp 4
 515+ A08C
 516+ A08C D8               ret c
 517+ A08D C8               ret z
 518+ A08E
 519+ A08E CB FE            set 7,(hl)
 520+ A090 C9               ret
 521+ A091
 522+ A091 47           Disparo_a_derecha ld b,a
 523+ A092 3E FF            ld a,$ff
 524+ A094 90               sub b
 525+ A095
 526+ A095 FE 04            cp 4
 527+ A097
 528+ A097 D8               ret c
 529+ A098 C8               ret z
 530+ A099
 531+ A099 CB F6            set 6,(hl)
 532+ A09B C9               ret
 533+ A09C
 534+ A09C              ; --------------------------------------------------------------------------------------
 535+ A09C              ;
 536+ A09C              ;   09/10/24
 537+ A09C              ;
 538+ A09C
 539+ A09C              Modifica_puntero_de_impresion
 540+ A09C
 541+ A09C              ;   Puntero de impresión del disparo en BC.
 542+ A09C
 543+ A09C E5               push hl
 544+ A09D
 545+ A09D 2A 33 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 546+ A0A0 CD C9 99         call NextScan
 547+ A0A3
 548+ A0A3 4D               ld c,l
 549+ A0A4 44               ld b,h
 550+ A0A5
 551+ A0A5 E1               pop hl
 552+ A0A6
 553+ A0A6 08               ex af,af
 554+ A0A7 CB 77            bit 6,a
 555+ A0A9 28 06            jr z,1F
 556+ A0AB
 557+ A0AB FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 558+ A0AF 0C               inc c
 559+ A0B0 C9               ret
 560+ A0B1
 561+ A0B1 CB 7F        1 bit 7,a
 562+ A0B3 28 F6            jr z,2B
 563+ A0B5
 564+ A0B5 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 565+ A0B9 0D               dec c
 566+ A0BA
 567+ A0BA C9               ret
 568+ A0BB
 569+ A0BB              ; --------------------------------------------------------------------------------------
 570+ A0BB              ;
 571+ A0BB              ;   31/08/24
 572+ A0BB              ;
 573+ A0BB
 574+ A0BB              Compara_con_coordenadas_de_disparo
 575+ A0BB
 576+ A0BB 3A BC 8B         ld a,(Coordenada_y)
 577+ A0BE 47               ld b,a
 578+ A0BF 3A 38 8C         ld a,(Coordenadas_disparo_certero)
 579+ A0C2 90               sub b
 580+ A0C3
 581+ A0C3              ; A = "0" ok
 582+ A0C3              ; A = "1" ok
 583+ A0C3
 584+ A0C3 28 08            jr z,Comprueba_coordenada_X
 585+ A0C5 3D               dec a
 586+ A0C6 28 05            jr z,Comprueba_coordenada_X
 587+ A0C8
 588+ A0C8              ; A = "$ff" ok
 589+ A0C8
 590+ A0C8 FE FE            cp $fe
 591+ A0CA 28 01            jr z,Comprueba_coordenada_X
 592+ A0CC
 593+ A0CC C9               ret
 594+ A0CD
 595+ A0CD              Comprueba_coordenada_X
 596+ A0CD
 597+ A0CD 3A BB 8B         ld a,(Coordenada_X)
 598+ A0D0 47               ld b,a
 599+ A0D1 21 39 8C         ld hl,Coordenadas_disparo_certero+1
 600+ A0D4 7E               ld a,(hl)
 601+ A0D5 90               sub b
 602+ A0D6
 603+ A0D6              ; A = "0" ok
 604+ A0D6              ; A = "1" ok
 605+ A0D6
 606+ A0D6 28 09            jr z,Activa_Impacto_en_entidad
 607+ A0D8 3D               dec a
 608+ A0D9 28 06            jr z,Activa_Impacto_en_entidad
 609+ A0DB
 610+ A0DB              ; A = "2" ok
 611+ A0DB
 612+ A0DB 3D               dec a
 613+ A0DC 28 03            jr z,Activa_Impacto_en_entidad
 614+ A0DE
 615+ A0DE              ; A = "$ff"
 616+ A0DE
 617+ A0DE FE FD            cp $fd
 618+ A0E0 C0               ret nz
 619+ A0E1
 620+ A0E1              Activa_Impacto_en_entidad
 621+ A0E1
 622+ A0E1              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 623+ A0E1
 624+ A0E1 3E 02            ld a,2
 625+ A0E3 32 BE 8B         ld (Impacto),a
 626+ A0E6
 627+ A0E6              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 628+ A0E6
 629+ A0E6 11 C0 87         ld de,Indice_Explosion_entidades
 630+ A0E9 21 C1 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 631+ A0EC
 632+ A0EC 73               ld (hl),e
 633+ A0ED 23               inc hl
 634+ A0EE 72               ld (hl),d
 635+ A0EF
 636+ A0EF              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 637+ A0EF
 638+ A0EF 21 35 8C         ld hl,Impacto2
 639+ A0F2 CB 9E            res 3,(hl)
 640+ A0F4
 641+ A0F4 C9               ret
 642+ A0F5
 643+ A0F5              ; --------------------------------------------------------------------------------------
 644+ A0F5              ;
 645+ A0F5              ;   13/10/24
 646+ A0F5              ;
 647+ A0F5
 648+ A0F5              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 649+ A0F5
 650+ A0F5              Limpia_album_de_pintado_disparos_Amadeus
 651+ A0F5
 652+ A0F5 2A 13 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 653+ A0F8 06 06            ld b,6
 654+ A0FA AF               xor a
 655+ A0FB 77           1 ld (hl),a
 656+ A0FC 2C               inc l
 657+ A0FD 10 FC            djnz 1B
 658+ A0FF
 659+ A0FF C9               ret
 660+ A100
 661+ A100              ; --------------------------------------------------------------------------------------
 662+ A100              ;
 663+ A100              ;   29/09/24
 664+ A100              ;
 665+ A100
 666+ A100              Calcula_bytes_pintado_disparos
 667+ A100
 668+ A100 2A 17 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 669+ A103 45               ld b,l
 670+ A104 2A 1B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 671+ A107 7D               ld a,l
 672+ A108
 673+ A108 90               sub b
 674+ A109 32 1D 8C         ld (Num_de_bytes_album_de_disparos),a
 675+ A10C
 676+ A10C C9               ret
 677+ A10D
 678+ A10D              ; --------------------------------------------------------------------------------------
 679+ A10D              ;
 680+ A10D              ;   29/09/24
 681+ A10D              ;
 682+ A10D              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 683+ A10D              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 684+ A10D              ;   _disparos que el álbum del FRAME actual).
 685+ A10D
 686+ A10D              Limpia_album_de_pintado_disparos_entidades
 687+ A10D
 688+ A10D 3A 1D 8C         ld a,(Num_de_bytes_album_de_disparos)
 689+ A110 A7               and a
 690+ A111 28 0E            jr z,Clean_only_one
 691+ A113
 692+ A113 47               ld b,a
 693+ A114 3E 31            ld a,$31
 694+ A116 90               sub b
 695+ A117 47               ld b,a
 696+ A118 AF           2 xor a
 697+ A119
 698+ A119 2A 1B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 699+ A11C 77           1 ld (hl),a
 700+ A11D 23               inc hl
 701+ A11E 10 FC            djnz 1B
 702+ A120 C9               ret
 703+ A121
 704+ A121              Clean_only_one
 705+ A121
 706+ A121 06 07            ld b,7
 707+ A123 18 F3            jr 2B
 708+ A125
 709+ A125              ; --------------------------------------------------------------------------------------
 710+ A125              ;
 711+ A125              ;   29/09/24
 712+ A125              ;
 713+ A125
 714+ A125              Motor_Disparos_Amadeus
 715+ A125
 716+ A125 21 20 89         ld hl,Disparo_Amad+1
 717+ A128
 718+ A128 34               inc (hl)
 719+ A129 35               dec (hl)
 720+ A12A
 721+ A12A C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 722+ A12B
 723+ A12B              ;   Esta caja contiene un disparo.
 724+ A12B
 725+ A12B CD 32 A1         call Consulta_Impacto
 726+ A12E CC 4B A1         call z,Mueve_disparo_Amadeus
 727+ A131
 728+ A131 C9               ret
 729+ A132
 730+ A132              ; ----------------------
 731+ A132              ;
 732+ A132              ;
 733+ A132              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 734+ A132              ;
 735+ A132              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 736+ A132
 737+ A132
 738+ A132              Consulta_Impacto
 739+ A132
 740+ A132              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 741+ A132              ;   _sea lo más coherente posible.
 742+ A132
 743+ A132 E5               push hl
 744+ A133 2B               dec hl
 745+ A134 CD 27 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 746+ A137 E1               pop hl
 747+ A138 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 748+ A139
 749+ A139 C8               ret z
 750+ A13A
 751+ A13A 3A 35 8C         ld a,(Impacto2)
 752+ A13D CB DF            set 3,a
 753+ A13F 32 35 8C         ld (Impacto2),a
 754+ A142
 755+ A142 E5               push hl
 756+ A143 CD 14 A2         call Genera_coordenadas_de_disparo_Amadeus
 757+ A146 E1               pop hl
 758+ A147 CD 64 A1         call Elimina_disparo_Amadeus
 759+ A14A
 760+ A14A C9               ret
 761+ A14B
 762+ A14B              ; ----------------------
 763+ A14B              ;
 764+ A14B              ;
 765+ A14B              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 766+ A14B
 767+ A14B              Mueve_disparo_Amadeus
 768+ A14B
 769+ A14B CD B0 90         call Extrae_address
 770+ A14E
 771+ A14E CD D8 99         call PreviousScan
 772+ A151 CD D8 99         call PreviousScan
 773+ A154 CD D8 99         call PreviousScan
 774+ A157 CD D8 99         call PreviousScan
 775+ A15A
 776+ A15A              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 777+ A15A
 778+ A15A 7C               ld a,h
 779+ A15B D6 40            sub $40
 780+ A15D EB               ex de,hl
 781+ A15E 38 04            jr c,Elimina_disparo_Amadeus
 782+ A160
 783+ A160               ; Introduce nuevo puntero_de_impresión en la caja.
 784+ A160
 785+ A160 73               ld (hl),e
 786+ A161 23               inc hl
 787+ A162 72               ld (hl),d
 788+ A163
 789+ A163 C9               ret
 790+ A164
 791+ A164              ; ----------------------
 792+ A164              ;
 793+ A164              ;   29/9/24
 794+ A164
 795+ A164              Elimina_disparo_Amadeus
 796+ A164
 797+ A164              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 798+ A164              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 799+ A164
 800+ A164              ;   Disparo_1A defw 0									; Puntero objeto.
 801+ A164              ;   	defw 0											; Puntero de impresión.
 802+ A164
 803+ A164 2B               dec hl
 804+ A165 2B               dec hl
 805+ A166
 806+ A166 AF               xor a
 807+ A167 77               ld (hl),a
 808+ A168 23               inc hl
 809+ A169 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 810+ A16A
 811+ A16A 23               inc hl
 812+ A16B 77               ld (hl),a
 813+ A16C 23               inc hl
 814+ A16D 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 815+ A16E
 816+ A16E 3E 01            ld a,1
 817+ A170 32 1F 8C         ld (Permiso_de_disparo_Amadeus),a
 818+ A173
 819+ A173 CD F5 A0         call Limpia_album_de_pintado_disparos_Amadeus
 820+ A176
 821+ A176 AF               xor a
 822+ A177 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 823+ A178
 824+ A178 C9               ret
 825+ A179
 826+ A179              ; --------------------------------------------------------------------------------------
 827+ A179              ;
 828+ A179              ;   13/10/24
 829+ A179              ;
 830+ A179
 831+ A179              Pinta_disparos_Amadeus
 832+ A179
 833+ A179 06 02            ld b,2
 834+ A17B ED 73 07 8C      ld (Stack),sp
 835+ A17F ED 7B 15 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 836+ A183 D1           3 pop de
 837+ A184 14               inc d
 838+ A185 15               dec d
 839+ A186 28 1C            jr z,1F
 840+ A188 E1               pop hl
 841+ A189
 842+ A189              Imprime_scanlines_en_pantalla
 843+ A189
 844+ A189              ; 1er scanline
 845+ A189
 846+ A189 1A               ld a,(de)
 847+ A18A AE               xor (hl)
 848+ A18B 77               ld (hl),a
 849+ A18C
 850+ A18C 1C               inc e
 851+ A18D 2C               inc l
 852+ A18E
 853+ A18E 1A               ld a,(de)
 854+ A18F AE               xor (hl)
 855+ A190 77               ld (hl),a
 856+ A191
 857+ A191 1D               dec e
 858+ A192 E1               pop hl
 859+ A193
 860+ A193              ; 2º scanline
 861+ A193
 862+ A193 1A               ld a,(de)
 863+ A194 AE               xor (hl)
 864+ A195 77               ld (hl),a
 865+ A196
 866+ A196 1C               inc e
 867+ A197 2C               inc l
 868+ A198
 869+ A198 1A               ld a,(de)
 870+ A199 AE               xor (hl)
 871+ A19A 77               ld (hl),a
 872+ A19B
 873+ A19B 1D               dec e
 874+ A19C
 875+ A19C 18 06            jr 1F
 876+ A19E
 877+ A19E ED 7B 13 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 878+ A1A2 18 DF            jr 3B
 879+ A1A4 10 F8        1 djnz 2B
 880+ A1A6 ED 7B 07 8C      ld sp,(Stack)
 881+ A1AA C9               ret
 882+ A1AB
 883+ A1AB              ; --------------------------------------------------------------------------------------
 884+ A1AB              ;
 885+ A1AB              ;   13/10/24
 886+ A1AB              ;
 887+ A1AB              ;   Modifica: HL,BC y DE.
 888+ A1AB
 889+ A1AB
 890+ A1AB              Genera_datos_de_impresion_disparos_Amadeus
 891+ A1AB
 892+ A1AB ED 73 07 8C      ld (Stack),sp
 893+ A1AF 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 894+ A1B2 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 895+ A1B3
 896+ A1B3 14               inc d                                                     ;? Salimos si no hay disparo.
 897+ A1B4 15               dec d
 898+ A1B5
 899+ A1B5 28 0E            jr z,Salida
 900+ A1B7
 901+ A1B7              Genera_scanlines_de_disparo_Amadeus
 902+ A1B7
 903+ A1B7 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 904+ A1B8              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 905+ A1B8 ED 7B 13 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 906+ A1BC
 907+ A1BC C1               pop bc
 908+ A1BD C1               pop bc
 909+ A1BE C1               pop bc
 910+ A1BF
 911+ A1BF E5               push hl                                                   ;? Sube 2º scanline al álbum.
 912+ A1C0 CD D8 99         call PreviousScan
 913+ A1C3 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 914+ A1C4 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 915+ A1C5
 916+ A1C5              Salida
 917+ A1C5
 918+ A1C5 ED 7B 07 8C      ld sp,(Stack)
 919+ A1C9
 920+ A1C9 C9               ret
 921+ A1CA
 922+ A1CA              ; --------------------------------------------------------------------------------------
 923+ A1CA              ;
 924+ A1CA              ;   12/09/24
 925+ A1CA              ;
 926+ A1CA
 927+ A1CA              Genera_disparo_Amadeus
 928+ A1CA
 929+ A1CA              ;*  Exclusiones.
 930+ A1CA
 931+ A1CA 3A 1F 8C         ld a,(Permiso_de_disparo_Amadeus)
 932+ A1CD A7               and a
 933+ A1CE C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 934+ A1CF
 935+ A1CF 3D               dec a
 936+ A1D0 32 1F 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 937+ A1D3
 938+ A1D3              Define_puntero_objeto_disparo
 939+ A1D3
 940+ A1D3              ;   Inicializamos contador.
 941+ A1D3
 942+ A1D3 06 00            ld b,0
 943+ A1D5
 944+ A1D5 2A 79 89         ld hl,(p.imp.amadeus)
 945+ A1D8 2C               inc l
 946+ A1D9
 947+ A1D9 3E 80            ld a,$80
 948+ A1DB BE               cp (hl)
 949+ A1DC 28 0D            jr z,1F
 950+ A1DE
 951+ A1DE 04               inc b
 952+ A1DF
 953+ A1DF 3E 60            ld a,$60
 954+ A1E1 BE               cp (hl)
 955+ A1E2 28 07            jr z,1F
 956+ A1E4
 957+ A1E4
 958+ A1E4 04               inc b
 959+ A1E5
 960+ A1E5 3E 18            ld a,$18
 961+ A1E7 BE               cp (hl)
 962+ A1E8 28 01            jr z,1F
 963+ A1EA
 964+ A1EA 04               inc b
 965+ A1EB
 966+ A1EB              ;   Calcula el Puntero_de_impresión del disparo.
 967+ A1EB
 968+ A1EB              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 969+ A1EB
 970+ A1EB CD D8 99     1 call PreviousScan
 971+ A1EE
 972+ A1EE 78               ld a,b
 973+ A1EF CB 3F            srl a
 974+ A1F1 28 03            jr z,4F
 975+ A1F3
 976+ A1F3              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 977+ A1F3 E5               push hl
 978+ A1F4 18 02            jr 5F
 979+ A1F6 2D           4 dec l
 980+ A1F7 E5               push hl
 981+ A1F8              ; ---
 982+ A1F8
 983+ A1F8              ;   Calcula el Puntero_objeto del disparo.
 984+ A1F8
 985+ A1F8 21 76 83     5 ld hl,Indice_disparo_Amadeus
 986+ A1FB 04               inc b
 987+ A1FC 05               dec b
 988+ A1FD 28 04            jr z,2F
 989+ A1FF
 990+ A1FF              ;   Nos desplazamos por el índice de disparos.
 991+ A1FF
 992+ A1FF 2C           3 inc l
 993+ A200 2C               inc l
 994+ A201 10 FC            djnz 3B
 995+ A203
 996+ A203              ; --- Guarda el Puntero_objeto del disparo en la pila.
 997+ A203 CD B0 90     2 call Extrae_address
 998+ A206 E5               push hl
 999+ A207              ; ---
1000+ A207
1001+ A207              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1002+ A207              ; HL en el 1er .db de la caja.
1003+ A207
1004+ A207 21 1F 89         ld hl,Disparo_Amad
1005+ A20A
1006+ A20A 06 02            ld b,2
1007+ A20C
1008+ A20C D1           6 pop de
1009+ A20D 73               ld (hl),e
1010+ A20E 23               inc hl
1011+ A20F 72               ld (hl),d
1012+ A210 23               inc hl
1013+ A211
1014+ A211 10 F9            djnz 6B
1015+ A213
1016+ A213 C9               ret
1017+ A214
1018+ A214              Genera_coordenadas_de_disparo_Amadeus
1019+ A214
1020+ A214              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1021+ A214              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1022+ A214              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1023+ A214
1024+ A214 CD B0 90         call Extrae_address
1025+ A217 CD CF 94         call Genera_coordenadas
1026+ A21A
1027+ A21A 3D               dec a
1028+ A21B
1029+ A21B 21 38 8C         ld hl,Coordenadas_disparo_certero
1030+ A21E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1031+ A21F 23               inc hl
1032+ A220 3A BB 8B         ld a,(Coordenada_X)
1033+ A223 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1034+ A224
1035+ A224 AF               xor a
1036+ A225 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1037+ A226
1038+ A226 C9               ret
1039+ A227
1040+ A227              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1041+ A227              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1042+ A227              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1043+ A227
1044+ A227              ; ----------------------------------------------
1045+ A227              ;
1046+ A227              ;   27/08/24
1047+ A227              ;
1048+ A227              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1049+ A227              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1050+ A227
1051+ A227              Detecta_impacto_en_disparo_de_Amadeus
1052+ A227
1053+ A227              Extraccion_de_datos
1054+ A227
1055+ A227 13               inc de
1056+ A228 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1057+ A229
1058+ A229 5E               ld e,(hl)
1059+ A22A 23               inc hl
1060+ A22B 56               ld d,(hl)
1061+ A22C
1062+ A22C 23               inc hl
1063+ A22D
1064+ A22D 4E               ld c,(hl)
1065+ A22E 23               inc hl
1066+ A22F 46               ld b,(hl)
1067+ A230
1068+ A230 C5               push bc
1069+ A231 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1070+ A232
1071+ A232              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1072+ A232
1073+ A232 CD D8 99         call PreviousScan
1074+ A235 CD D8 99         call PreviousScan
1075+ A238
1076+ A238              Detecta_impacto_
1077+ A238
1078+ A238 1A               ld a,(de)
1079+ A239 A6               and (hl)
1080+ A23A C0               ret nz
1081+ A23B
1082+ A23B 13               inc de
1083+ A23C 23               inc hl
1084+ A23D
1085+ A23D 1A               ld a,(de)
1086+ A23E A6               and (hl)
1087+ A23F C9               ret
1088+ A240
1089+ A240              ; -------------------------------------------------------------------------------------------------------------
1090+ A240              ;
1091+ A240              ;   8/8/24
1092+ A240              ;
1093+ A240              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1094+ A240              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1095+ A240              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1096+ A240              ;
1097+ A240              ;   MODIFICA: HL,DE,BC y A.
1098+ A240              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1099+ A240              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1100+ A240
1101+ A240              Colision_Entidad_Amadeus
1102+ A240
1103+ A240              ; Posible contacto de entidad con Amadeus. ?????
1104+ A240
1105+ A240              ; Exclusiones:
1106+ A240
1107+ A240 3A 58 8C         ld a,(Shield)
1108+ A243 A7               and a
1109+ A244 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1110+ A245
1111+ A245 21 2E 8C         ld hl,Ctrl_3
1112+ A248 CB 76            bit 6,(hl)
1113+ A24A C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1114+ A24B
1115+ A24B 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1116+ A24E CB 56            bit 2,(hl)
1117+ A250 C0               ret nz
1118+ A251
1119+ A251 3A BC 8B     	ld a,(Coordenada_y)
1120+ A254 FE 14        	cp $14
1121+ A256 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1122+ A257
1123+ A257 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1124+ A25A A7               and a
1125+ A25B C0               ret nz
1126+ A25C
1127+ A25C              Genera_coordenadas_X
1128+ A25C
1129+ A25C              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1130+ A25C              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1131+ A25C
1132+ A25C              ;   Limpiamos almacenes.
1133+ A25C
1134+ A25C              ;    call Limpia_Coordenadas_X
1135+ A25C
1136+ A25C              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1137+ A25C
1138+ A25C 21 3A 8C         ld hl,Coordenadas_X_Entidad
1139+ A25F 3A BB 8B         ld a,(Coordenada_X)
1140+ A262 CD 84 A2         call Guarda_coordenadas_X
1141+ A265
1142+ A265              ;   Almacenamos las coordenadas X de Amadeus.
1143+ A265
1144+ A265 3A 75 89         ld a,(CX_Amadeus)
1145+ A268 CD 84 A2         call Guarda_coordenadas_X
1146+ A26B CD 98 A2         call Compara_coordenadas_X
1147+ A26E C0               ret nz
1148+ A26F
1149+ A26F 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1150+ A271 32 BE 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1151+ A274
1152+ A274 2A FA 8B         ld hl,(Puntero_store_caja)
1153+ A277 2C               inc l
1154+ A278 2C               inc l
1155+ A279 2C               inc l
1156+ A27A 2C               inc l
1157+ A27B 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1158+ A27E
1159+ A27E 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1160+ A281 CB D6            set 2,(hl)
1161+ A283
1162+ A283 C9               ret
1163+ A284
1164+ A284               ; ----- ----- ----- ----- -----
1165+ A284
1166+ A284 77           Guarda_coordenadas_X ld (hl),a
1167+ A285 3C               inc a
1168+ A286 2C               inc l
1169+ A287 77               ld (hl),a
1170+ A288 3C               inc a
1171+ A289 2C               inc l
1172+ A28A 77               ld (hl),a
1173+ A28B 2C               inc l
1174+ A28C C9               ret
1175+ A28D
1176+ A28D AF           Limpia_Coordenadas_X xor a
1177+ A28E 06 06            ld b,6
1178+ A290 21 3D 8C         ld hl,Coordenadas_X_Amadeus
1179+ A293 77           1 ld (hl),a
1180+ A294 23               inc hl
1181+ A295 10 FC            djnz 1B
1182+ A297 C9               ret
1183+ A298
1184+ A298              ; ----- ----- ----- ----- -----
1185+ A298
1186+ A298              Compara_coordenadas_X
1187+ A298
1188+ A298 DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
1189+ A29C DD 7E 00         ld a,(ix+0)
1190+ A29F CD AD A2         call Comparando
1191+ A2A2 C8               ret z
1192+ A2A3
1193+ A2A3 3C               inc a
1194+ A2A4 CD BC A2         call Comparando_1
1195+ A2A7 C8               ret z
1196+ A2A8
1197+ A2A8 3C               inc a
1198+ A2A9 CD BC A2         call Comparando_1
1199+ A2AC C9               ret
1200+ A2AD
1201+ A2AD              ; ----- ----- ----- ----- -----
1202+ A2AD              ;
1203+ A2AD              ;   4/12/23
1204+ A2AD              ;
1205+ A2AD              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1206+ A2AD
1207+ A2AD              Comparando
1208+ A2AD
1209+ A2AD DD 2C            inc ixl
1210+ A2AF DD 2C            inc ixl
1211+ A2B1 DD 2C            inc ixl
1212+ A2B3
1213+ A2B3 DD 46 00         ld b,(ix+0)
1214+ A2B6 DD 4E 01         ld c,(ix+1)
1215+ A2B9 DD 56 02         ld d,(ix+2)
1216+ A2BC
1217+ A2BC B8           Comparando_1 cp b
1218+ A2BD C8               ret z
1219+ A2BE B9               cp c
1220+ A2BF C8               ret z
1221+ A2C0 BA               cp d
1222+ A2C1 C9               ret
1223+ A2C2
1224+ A2C2              ; -----------------------------------------------------------------------
1225+ A2C2              ;
1226+ A2C2              ;   04/7/24
1227+ A2C2              ;
1228+ A2C2
1229+ A2C2              Detecta_colision_nave_entidad
1230+ A2C2
1231+ A2C2              ; Exclusiones:
1232+ A2C2
1233+ A2C2              ; Salimos de la rutina si no hay advertencia de posible colisión.
1234+ A2C2
1235+ A2C2 21 35 8C     	ld hl,Impacto2
1236+ A2C5 CB 56        	bit 2,(hl)
1237+ A2C7 C8           	ret z
1238+ A2C8
1239+ A2C8              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1240+ A2C8
1241+ A2C8 2A 7B 89         ld hl,(Pamm_Amadeus)
1242+ A2CB CD B0 90         call Extrae_address
1243+ A2CE 54               ld d,h
1244+ A2CF 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1245+ A2D0
1246+ A2D0 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1247+ A2D3 06 10            ld b,16                                        ; Contador de scanlines en B.
1248+ A2D5 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1249+ A2D8
1250+ A2D8 C5           1 push bc
1251+ A2D9 06 03            ld b,3
1252+ A2DB E5               push hl
1253+ A2DC
1254+ A2DC              ; .db
1255+ A2DC
1256+ A2DC 1A           3 ld a,(de)
1257+ A2DD A7               and a
1258+ A2DE 20 03            jr nz,4F
1259+ A2E0
1260+ A2E0 2C               inc l
1261+ A2E1 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1262+ A2E3
1263+ A2E3 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1264+ A2E5 28 04            jr z,2F
1265+ A2E7
1266+ A2E7              ; Impacto.
1267+ A2E7 FD 2D            dec iyl
1268+ A2E9 28 22            jr z,5F
1269+ A2EB
1270+ A2EB 1C           2 inc e
1271+ A2EC 10 EE            djnz 3B
1272+ A2EE
1273+ A2EE E1               pop hl
1274+ A2EF
1275+ A2EF              ; Hay salto de línea en el puntero de impresión ???
1276+ A2EF
1277+ A2EF 7C               ld a,h
1278+ A2F0 D6 57            sub $57
1279+ A2F2 20 0A            jr nz,6F
1280+ A2F4
1281+ A2F4              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1282+ A2F4
1283+ A2F4 2A 79 89         ld hl,(p.imp.amadeus)
1284+ A2F7 3E 20            ld a,$20
1285+ A2F9 A7               and a
1286+ A2FA 85               add l
1287+ A2FB 6F               ld l,a
1288+ A2FC 18 01            jr 7F
1289+ A2FE
1290+ A2FE 24           6 inc h
1291+ A2FF
1292+ A2FF C1           7 pop bc
1293+ A300 10 D6            djnz 1B
1294+ A302
1295+ A302              ;   Fin de la comparativa.
1296+ A302
1297+ A302              ;   NO HAY COLISIÓN !!!!!.
1298+ A302              ;
1299+ A302              ;   .db (Impacto) de Amadeus a "0".
1300+ A302              ;   RES el bit2 de (Impacto2).
1301+ A302              ;
1302+ A302              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1303+ A302              ;   Lo colocamos a "0".
1304+ A302
1305+ A302 21 35 8C         ld hl,Impacto2
1306+ A305 CB 96            res 2,(hl)
1307+ A307 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
1308+ A30A 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1309+ A30C C9               ret
1310+ A30D
1311+ A30D              ;   COLISIÓN !!!!!.
1312+ A30D              ;
1313+ A30D              ;   .db (Impacto) de Amadeus a "1".
1314+ A30D              ;   SET el bit3 de (Impacto2).
1315+ A30D              ;
1316+ A30D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1317+ A30D
1318+ A30D E1           5 pop hl
1319+ A30E C1               pop bc
1320+ A30F
1321+ A30F 21 78 89         ld hl,Impacto_Amadeus
1322+ A312 36 01            ld (hl),1
1323+ A314 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1324+ A317 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1325+ A319
1326+ A319 11 C0 87         ld de,Indice_Explosion_entidades
1327+ A31C 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1328+ A31F
1329+ A31F 23               inc hl
1330+ A320 23               inc hl
1331+ A321 23               inc hl
1332+ A322
1333+ A322 73               ld (hl),e
1334+ A323 23               inc hl
1335+ A324 72               ld (hl),d
1336+ A325
1337+ A325              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1338+ A325
1339+ A325 11 60 88         ld de,Indice_Explosion_Amadeus
1340+ A328 21 7B 89         ld hl,Pamm_Amadeus
1341+ A32B
1342+ A32B 73               ld (hl),e
1343+ A32C 23               inc hl
1344+ A32D 72               ld (hl),d
1345+ A32E
1346+ A32E C9               ret
1347+ A32F
1348+ A32F
1349+ A32F
# file closed: Disparo.asm
2051  A32F
2052  A32F              	SAVESNA "Pruebas.sna", START
2053  A32F
2054  A32F
2055  A32F
2056  A32F
# file closed: Banco_de_pruebas.asm
