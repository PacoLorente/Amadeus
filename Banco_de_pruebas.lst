# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B5 8E     	call Frame
  15  A104
  16  A104              ;	ld a,(Contador_de_frames)
  17  A104              ;	cp $1e
  18  A104              ;	jr z,$
  19  A104
  20  A104 ED 4D        	reti
  21  A106
  22  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  23  A106
  24  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 11 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 15 8A        	defw End_Snapshot_1
 267+ 8500 19 8A        	defw End_Snapshot_2
 268+ 8502 1D 8A        	defw End_Snapshot_3
 269+ 8504 13 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 17 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1B 8A        	defw End_Snapshot_disparos_2
 272+ 850A 1F 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  25  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 68 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 68 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  26  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BB 88        	defw Nivel_2
   7+ 88AD C8 88        	defw Nivel_3
   8+ 88AF D8 88        	defw Nivel_4
   9+ 88B1 EA 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 03           Nivel_1 db 3	                                ; Nº de entidades.
  19+ 88B8 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BB 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C0 01 02
  22+ 88C2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C6 01 02
  23+ 88C8 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88C9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CD 01
  25+ 88CE 03 01 01 01  	db 3,1,1,1,1
  25+ 88D2 01
  26+ 88D3 03 01 01 01  	db 3,1,1,1,1
  26+ 88D7 01
  27+ 88D8 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88D9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DD 01
  29+ 88DE 04 01 01 01  	db 4,1,1,1,1
  29+ 88E2 01
  30+ 88E3 04 01 01 01  	db 4,1,1,1,1
  30+ 88E7 01
  31+ 88E8 02 03        	db 2,3
  32+ 88EA 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88EF 01
  34+ 88F0 05 01 01 01  	db 5,1,1,1,1
  34+ 88F4 01
  35+ 88F5 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88F9 01
  36+ 88FA 05 01 01 01  	db 5,1,1,1,1
  36+ 88FE 01
  37+ 88FF
  38+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  39+ 88FF              ;
  40+ 88FF              ;   21/5/23
  41+ 88FF              ;
  42+ 88FF              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88FF              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88FF              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88FF              ;	_en la caja DRAW correspondiente.
  46+ 88FF              ;
  47+ 88FF              ;	MODIFICA: HL,DE y A.
  48+ 88FF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88FF
  50+ 88FF              Inicializa_Punteros_de_nivel
  51+ 88FF
  52+ 88FF 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8902 22 4B 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8905 CD 8B 8D     	call Extrae_address
  55+ 8908 7E           	ld a,(hl)
  56+ 8909 32 01 8A     	ld (Numero_de_entidades),a
  57+ 890C 23           	inc hl
  58+ 890D 22 4D 8A     	ld (Datos_de_nivel),hl
  59+ 8910 C9           	ret
  60+ 8911
  61+ 8911              ;---------------------------------------------------------------------------------------------------------------
  62+ 8911              ;
  63+ 8911              ;   13/5/23
  64+ 8911              ;
  65+ 8911              ;	Destruye A,BC,HL,DE
  66+ 8911
  67+ 8911              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8911              ;	_del juego.
  69+ 8911
  70+ 8911              Prepara_cajas
  71+ 8911
  72+ 8911              ; Preparamos los punteros de las cajas.
  73+ 8911
  74+ 8911 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8914 CD 8B 8D     	call Extrae_address
  76+ 8917 CD 54 89     	call Avanza_caja
  77+ 891A
  78+ 891A CD 98 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891D
  80+ 891D 2A 4D 8A     	ld hl,(Datos_de_nivel)
  81+ 8920
  82+ 8920              ; HL está en los datos del nivel correspondiente.
  83+ 8920              ; B actuará como contador de cajas.
  84+ 8920
  85+ 8920 C5           1 push bc
  86+ 8921
  87+ 8921 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8922 CD 45 89     	call PreparaBC
  89+ 8925
  90+ 8925 21 85 88     	ld hl,Indice_de_entidades
  91+ 8928 CD 4D 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892B 22 07 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892E
  94+ 892E CD 5E 89     	call Datos_de_entidad_a_caja
  95+ 8931
  96+ 8931 2A FF 89     	ld hl,(Indice_restore_caja)
  97+ 8934 CD 8B 8D     	call Extrae_address
  98+ 8937 CD 54 89     	call Avanza_caja
  99+ 893A
 100+ 893A 2A 4D 8A     	ld hl,(Datos_de_nivel)
 101+ 893D 23           	inc hl
 102+ 893E 22 4D 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8941
 104+ 8941 C1           	pop bc
 105+ 8942 10 DC        	djnz 1B
 106+ 8944 C9           	ret
 107+ 8945
 108+ 8945 CB 27        PreparaBC sla a
 109+ 8947 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8949 4F           	ld c,a
 111+ 894A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894C C9           	ret
 113+ 894D
 114+ 894D A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894E ED 4A        	adc hl,bc
 116+ 8950 CD 8B 8D     	call Extrae_address
 117+ 8953 C9           	ret
 118+ 8954
 119+ 8954 22 FB 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8957 13           	inc de
 121+ 8958 13           	inc de
 122+ 8959 EB           	ex de,hl
 123+ 895A 22 FF 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895D C9           	ret
 125+ 895E
 126+ 895E              Datos_de_entidad_a_caja
 127+ 895E
 128+ 895E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895E
 130+ 895E
 131+ 895E ED 5B FB 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8962
 133+ 8962 01 02 00     	ld bc,2
 134+ 8965 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8967
 136+ 8967 01 07 00     	ld bc,7
 137+ 896A CD 92 89     	call Situa_DE
 138+ 896D
 139+ 896D 01 05 00     	ld bc,5
 140+ 8970 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8972
 142+ 8972 01 04 00     	ld bc,4
 143+ 8975 CD 92 89     	call Situa_DE
 144+ 8978
 145+ 8978 01 07 00     	ld bc,7
 146+ 897B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897D
 148+ 897D 01 18 00     	ld bc,24
 149+ 8980 CD 92 89     	call Situa_DE
 150+ 8983
 151+ 8983 01 02 00     	ld bc,2
 152+ 8986 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8988
 154+ 8988              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8988              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8988
 157+ 8988 01 0F 00     	ld bc,15									; *****
 158+ 898B CD 92 89     	call Situa_DE
 159+ 898E
 160+ 898E 3E 03        	ld a,3
 161+ 8990 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8991
 163+ 8991 C9           	ret
 164+ 8992
 165+ 8992 EB           Situa_DE ex de,hl
 166+ 8993 A7           	and a
 167+ 8994 ED 4A        	adc hl,bc
 168+ 8996 EB           	ex de,hl
 169+ 8997 C9           	ret
 170+ 8998
 171+ 8998              ;---------------------------------------------------------------------------------------------------------------
 172+ 8998              ;
 173+ 8998              ;	21/5/23
 174+ 8998              ;
 175+ 8998              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8998              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8998              ;
 178+ 8998              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8998              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8998              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8998              ;
 182+ 8998              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8998              ;	MODIFICA: A y B.
 184+ 8998              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8998
 186+ 8998              Admin_num_entidades
 187+ 8998
 188+ 8998              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8998
 190+ 8998 3A 01 8A     	ld a,(Numero_de_entidades)
 191+ 899B A7           	and a
 192+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899C              ;	jr z,$
 194+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899C
 196+ 899C 20 03        	jr nz,3F
 197+ 899E
 198+ 899E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899E
 200+ 899E CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A1
 202+ 89A1
 203+ 89A1 3A 01 8A     3 ld a,(Numero_de_entidades)
 204+ 89A4 FE 0A        	cp 10
 205+ 89A6 38 08        	jr c,1F
 206+ 89A8
 207+ 89A8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89A8              ; Actualizamos variables.
 209+ 89A8
 210+ 89A8 3E 0A        	ld a,10
 211+ 89AA 32 02 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89AD 47           	ld b,a
 213+ 89AE 18 04        	jr 2F
 214+ 89B0
 215+ 89B0              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89B0              ; (Numero_de_entidades)="0".
 217+ 89B0
 218+ 89B0 32 02 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89B3 47           	ld b,a
 220+ 89B4 C9           2 ret
# file closed: Niveles.asm
  27  89B5
  28  89B5              ; ******************************************************************************************************************************************************************************************
  29  89B5              ; Constantes.
  30  89B5              ; ******************************************************************************************************************************************************************************************
  31  89B5              ;
  32  89B5              ; 25/05/23
  33  89B5              ;
  34  89B5              ; Constantes generales.
  35  89B5              ;
  36  89B5
  37  89B5              Sprite_vacio equ $f000
  38  89B5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  39  89B5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  40  89B5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  41  89B5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  42  89B5
  43  89B5              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  44  89B5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  45  89B5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  46  89B5              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  47  89B5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  48  89B5              ;                               				        ; De momento situamos este almacén en $7060.
  49  89B5              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  50  89B5              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  51  89B5              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  52  89B5              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  53  89B5              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  54  89B5              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  55  89B5
  56  89B5              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  57  89B5
  58  89B5              ; ******************************************************************************************************************************************************************************************
  59  89B5              ; Variables.
  60  89B5              ; ******************************************************************************************************************************************************************************************
  61  89B5              ;
  62  89B5              ; 28/07/23
  63  89B5              ;
  64  89B5              ; Variables de DRAW. (Motor principal).
  65  89B5              ;
  66  89B5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  67  89B5
  68  89B5 00           Filas db 0												; Filas. [DRAW]
  69  89B6 00           Columns db 0  											; Nº de columnas. [DRAW]
  70  89B7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  71  89B9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  72  89BB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  73  89BC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  74  89BD
  75  89BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  76  89BD
  77  89BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  78  89BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  79  89BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  80  89BE 00           Attr db 0												; Atributos de la entidad:
  81  89BF
  82  89BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  83  89BF              ;
  84  89BF              ;	COLORES: 0 ..... NEGRO
  85  89BF              ;    		 1 ..... AZUL
  86  89BF              ; 			 2 ..... ROJO
  87  89BF              ;			 3 ..... MAGENTA
  88  89BF              ; 			 4 ..... VERDE
  89  89BF              ; 			 5 ..... CIAN
  90  89BF              ;			 6 ..... AMARILLO
  91  89BF              ; 			 7 ..... BLANCO
  92  89BF
  93  89BF 00 00        Indice_Sprite_der defw 0
  94  89C1 00 00        Indice_Sprite_izq defw 0
  95  89C3 00 00        Puntero_DESPLZ_der defw 0
  96  89C5 00 00        Puntero_DESPLZ_izq defw 0
  97  89C7
  98  89C7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  99  89C9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 100  89CA
 101  89CA              ; Variables de objeto. (Características).
 102  89CA
 103  89CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 104  89CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 105  89CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 106  89CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 107  89CE
 108  89CE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 109  89CF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 110  89CF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 111  89CF
 112  89CF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 113  89D1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 114  89D3 00 00        	defw 0
 115  89D5 00 00 00 00  	db 0,0,0,0
 116  89D9
 117  89D9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 118  89DB 00 00        	defw 0
 119  89DD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 120  89DF 00 00 00 00  	db 0,0,0,0
 121  89E3
 122  89E3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 123  89E3
 124  89E3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 125  89E4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 126  89E4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 127  89E4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 128  89E4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 129  89E4              ;
 130  89E4              ; 														DESCRIPCIÖN:
 131  89E4              ;
 132  89E4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 133  89E4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 134  89E4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 135  89E4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 136  89E4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 137  89E4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 138  89E4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 139  89E4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 140  89E4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 141  89E4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 142  89E4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 143  89E4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 144  89E4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 145  89E4              ;
 146  89E4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 147  89E4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 148  89E4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 149  89E4
 150  89E4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 151  89E5
 152  89E5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 153  89E5
 154  89E5 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 155  89E6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 156  89E8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 157  89EA 00 00        Puntero_indice_mov_bucle defw 0							;
 158  89EC              ;
 159  89EC              ;
 160  89EC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 161  89ED              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 162  89ED              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 163  89ED 00           Incrementa_puntero_backup db 0
 164  89EE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 165  89EF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 166  89EF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 167  89F0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 168  89F1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 169  89F2              ;
 170  89F2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 171  89F2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 172  89F2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 173  89F2              ;
 174  89F2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 175  89F2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 176  89F2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 177  89F2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 178  89F2              ;
 179  89F2              ;														;	"$ff" ..... Bucle infinito de repetición.
 180  89F2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 181  89F2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 182  89F2
 183  89F2
 184  89F2              ; Variables de funcionamiento. [DRAW].
 185  89F2
 186  89F2 00           Columnas db 0
 187  89F3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 188  89F5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 189  89F5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 190  89F6
 191  89F6              ; variables de control general.
 192  89F6
 193  89F6 00           Ctrl_2 db 0
 194  89F7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 195  89F7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 196  89F7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 197  89F7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 198  89F7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 199  89F7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 200  89F7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 201  89F7              ;
 202  89F7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 203  89F7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 204  89F7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 205  89F7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 206  89F7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 207  89F7
 208  89F7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 209  89F8
 210  89F8              ;! 67 Bytes por entidad.
 211  89F8
 212  89F8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 213  89F8              ;					         		---------;      ;---------
 214  89F8
 215  89F8
 216  89F8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 217  89F8
 218  89F8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 219  89F9
 220  89F9              ;														DESCRIPCIÓN:
 221  89F9              ;
 222  89F9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 223  89F9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 224  89F9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 225  89F9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 226  89F9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 227  89F9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 228  89F9
 229  89F9              ;														BIT 3, Recarga de nueva oleada.
 230  89F9              ;														BIT 4, Recarga de nueva oleada.
 231  89F9
 232  89F9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 233  89FB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 234  89FB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 235  89FB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 236  89FB
 237  89FB
 238  89FB
 239  89FB              ; Gestión de ENTIDADES y CAJAS.
 240  89FB
 241  89FB 00 00        Puntero_store_caja defw 0
 242  89FD 00 00        Puntero_restore_caja defw 0
 243  89FF 00 00        Indice_restore_caja defw 0
 244  8A01 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 245  8A02 00           Numero_parcial_de_entidades db 0
 246  8A03 00           Entidades_en_curso db 0									; ..... ..... .....
 247  8A04 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 248  8A05              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 249  8A05              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 250  8A05              ;														; _ (Numero_de_malotes)="0".
 251  8A05 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 252  8A07 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 253  8A09              ;														; _ puntero (Indice_entidades).
 254  8A09
 255  8A09
 256  8A09              ;---------------------------------------------------------------------------------------------------------------
 257  8A09              ;
 258  8A09              ;	9/8/23
 259  8A09              ;
 260  8A09              ;	Álbumes.
 261  8A09
 262  8A09 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 263  8A0B              ;															; _variable para almacenar lo posición del puntero_
 264  8A0B              ; 															; _de pila, SP.
 265  8A0B 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 266  8A0D              ;															; La utiliza la rutina [Extrae_foto_registros].
 267  8A0D 00 00        Stack_snapshot defw 0
 268  8A0F 00 00        Stack_snapshot_disparos defw 0
 269  8A11
 270  8A11 00 00        End_Snapshot defw 0
 271  8A13              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 272  8A13 00 00        End_Snapshot_disparos defw 0								; Puntero que indica la posición de memoria donde vamos a guardar_
 273  8A15              ;															; _el snapshot de los registros del siguiente disparo.
 274  8A15              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 275  8A15 00 00        End_Snapshot_1 defw 0
 276  8A17 00 00        End_Snapshot_disparos_1 defw 0
 277  8A19 00 00        End_Snapshot_2 defw 0
 278  8A1B 00 00        End_Snapshot_disparos_2 defw 0
 279  8A1D 00 00        End_Snapshot_3 defw 0
 280  8A1F 00 00        End_Snapshot_disparos_3 defw 0
 281  8A21
 282  8A21 00 00        Puntero_indice_album_de_fotos defw 0
 283  8A23 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 284  8A25
 285  8A25 00 00        Puntero_indice_End_Snapshot defw 0
 286  8A27 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 287  8A29 00 00        Puntero_de_End_Snapshot defw 0
 288  8A2B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 289  8A2D
 290  8A2D              ;---------------------------------------------------------------------------------------------------------------
 291  8A2D
 292  8A2D              ; Gestión de Disparos.
 293  8A2D
 294  8A2D 00           Numero_de_disparotes db 0
 295  8A2E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 296  8A30 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 297  8A32 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 298  8A33              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 299  8A33              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 300  8A33 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 301  8A35              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 302  8A35              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 303  8A35              ;														; _produzca colisión.
 304  8A35 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 305  8A37              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 306  8A37 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 307  8A3A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 308  8A3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 309  8A3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 310  8A3D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 311  8A3F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 312  8A40
 313  8A40              ;---------------------------------------------------------------------------------------------------------------
 314  8A40
 315  8A40              ; Relojes y temporizaciones.
 316  8A40
 317  8A40 00           Contador_de_frames db 0
 318  8A41 04           Clock_explosion db 4
 319  8A42 1E           Clock_Entidades_en_curso db 30
 320  8A43 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 321  8A44              ;														; Repite la oleada de entidades.
 322  8A44 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 323  8A45 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 324  8A46 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 325  8A47
 326  8A47 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 327  8A48 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 328  8A49 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 329  8A4A
 330  8A4A              ;---------------------------------------------------------------------------------------------------------------
 331  8A4A
 332  8A4A              ; Gestión de NIVELES.
 333  8A4A
 334  8A4A 00           Nivel db 0												; Nivel actual del juego.
 335  8A4B 00 00        Puntero_indice_NIVELES defw 0
 336  8A4D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 337  8A4F              ; 														; _ que definen el NIVEL.
 338  8A4F              ; Y todo comienza aquí .....
 339  8A4F              ;
 340  8A4F              ; Rutina principal *************************************************************************************************************************************************************************
 341  8A4F              ;
 342  8A4F              ;	14/11/22
 343  8A4F
 344  8A4F              START
 345  8A4F
 346  8A4F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 347  8A52 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 348  8A54 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 349  8A56 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 350  8A58 F3           	DI
 351  8A59
 352  8A59 3E 07        	ld a,%00000111
 353  8A5B CD A4 99     	call Cls
 354  8A5E
 355  8A5E CD 64 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 356  8A61
 357  8A61              ; INICIALIZACIÓN.
 358  8A61
 359  8A61 CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 360  8A64
 361  8A64 CD 11 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 362  8A67
 363  8A67 CD DC 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 364  8A6A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 365  8A6A CD F2 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 366  8A6D              ;													     ; _ malotes antes de guardar ninguna foto.
 367  8A6D              ; ----------
 368  8A6D
 369  8A6D CD 14 8E     	call Restore_entidad
 370  8A70
 371  8A70 21 02 8A     	ld hl,Numero_parcial_de_entidades
 372  8A73 46           	ld b,(hl)
 373  8A74 04           	inc b
 374  8A75 05           	dec b
 375  8A76 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 376  8A78
 377  8A78              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 378  8A78              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 379  8A78              ;	Pintamos el resto de entidades:
 380  8A78
 381  8A78              ;	INICIA ENTIDADES !!!!!
 382  8A78
 383  8A78 C5           1 push bc  												; Guardo el contador de entidades.
 384  8A79
 385  8A79 CD 83 8C     	call Inicia_entidad
 386  8A7C
 387  8A7C C1           	pop bc
 388  8A7D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 389  8A7F
 390  8A7F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 391  8A7F              ; (Esto se dá cuando se inicia una nueva oleada).
 392  8A7F
 393  8A7F 3A F8 89     	ld a,(Ctrl_1)
 394  8A82 CB 5F        	bit 3,a
 395  8A84 20 18        	jr nz,5F											; Loop
 396  8A86
 397  8A86              ; 	INICIA AMADEUS !!!!!
 398  8A86
 399  8A86 CD 3B 8E     3 call Restore_Amadeus
 400  8A89 CD 91 8D     	call Inicia_Puntero_objeto
 401  8A8C CD DE 93     	call Draw
 402  8A8F CD A0 7F     	call Guarda_foto_registros
 403  8A92 11 A4 85     	ld de,Amadeus_db
 404  8A95 CD 4D 8E     	call Store_Amadeus
 405  8A98
 406  8A98              ; 	INICIA DISPAROS !!!!!
 407  8A98
 408  8A98 CD 4D 8D     	call Inicia_Puntero_Disparo_Entidades
 409  8A9B CD 54 8D     	call Inicia_Puntero_Disparo_Amadeus
 410  8A9E
 411  8A9E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 412  8A9E
 413  8A9E CD DC 8C     5 call Inicia_punteros_de_cajas
 414  8AA1 CD 14 8E     	call Restore_entidad
 415  8AA4
 416  8AA4 3A F8 89     	ld a,(Ctrl_1)
 417  8AA7 CB 5F        	bit 3,a
 418  8AA9 28 0A        	jr z,6F
 419  8AAB
 420  8AAB              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 421  8AAB
 422  8AAB 21 F8 89     	ld hl,Ctrl_1
 423  8AAE CB 9E        	res 3,(hl)
 424  8AB0 CD 5B 8D     	call Calcula_numero_de_malotes
 425  8AB3 18 0A        	jr Main
 426  8AB5
 427  8AB5              ; ----------
 428  8AB5
 429  8AB5 3A 02 8A     6 ld a,(Numero_parcial_de_entidades)
 430  8AB8 3C           	inc a
 431  8AB9 32 04 8A     	ld (Numero_de_malotes),a
 432  8ABC
 433  8ABC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 434  8ABC              ; _ tenemos calculado (Numero_de_malotes).
 435  8ABC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 436  8ABC              ; _ para situarnos en el siguiente album.
 437  8ABC
 438  8ABC CD 23 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 439  8ABF
 440  8ABF              ; ------------------------------------
 441  8ABF
 442  8ABF              Main
 443  8ABF
 444  8ABF FB           	ei ; Interrupciones habilitadas.
 445  8AC0
 446  8AC0              ; -----------------------------------------------------------------------
 447  8AC0              ;
 448  8AC0              ;	3/8/23
 449  8AC0
 450  8AC0 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 451  8AC3 47           	ld b,a
 452  8AC4 3A 40 8A     	ld a,(Contador_de_frames)
 453  8AC7 B8           	cp b
 454  8AC8 20 18        	jr nz,13F
 455  8ACA              ;
 456  8ACA              ;!debuggg
 457  8ACA              ;    ld a,(Contador_de_frames)
 458  8ACA              ;    ld hl,(Stack_snapshot)
 459  8ACA              ;    jr $
 460  8ACA              ;!debuggg
 461  8ACA
 462  8ACA 3A 02 8A     	ld a,(Numero_parcial_de_entidades)
 463  8ACD 47           	ld b,a
 464  8ACE 3A 03 8A     	ld a,(Entidades_en_curso)
 465  8AD1 B8           	cp b
 466  8AD2 28 0E        	jr z,13F
 467  8AD4 30 0C        	jr nc,13F
 468  8AD6
 469  8AD6 3C           	inc a
 470  8AD7 32 03 8A     	ld (Entidades_en_curso),a
 471  8ADA
 472  8ADA 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 473  8ADD
 474  8ADD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 475  8ADD              ;! _ IMPREDECIBLE !!!!
 476  8ADD
 477  8ADD C6 64        	add 100
 478  8ADF 32 42 8A     	ld (Clock_Entidades_en_curso),a
 479  8AE2
 480  8AE2              ; Habilita disparos.
 481  8AE2
 482  8AE2 21 44 8A     13 ld hl,Disparo_Amadeus
 483  8AE5 11 46 8A     	ld de,CLOCK_repone_disparo_Amadeus
 484  8AE8 CD 69 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 485  8AEB
 486  8AEB 21 47 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 487  8AEE 11 49 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 488  8AF1 CD 69 A0     	call Habilita_disparos
 489  8AF4
 490  8AF4              ; COLISIONES.
 491  8AF4
 492  8AF4 CD C0 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 493  8AF7
 494  8AF7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 495  8AF7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 496  8AF7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 497  8AF7
 498  8AF7 AF           	xor a
 499  8AF8 32 32 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 500  8AFB
 501  8AFB CD DC 8C     	call Inicia_punteros_de_cajas
 502  8AFE CD 14 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 503  8B01              ; 														; _ en DRAW.
 504  8B01 3A B5 89     	ld a,(Filas)
 505  8B04 A7           	and a
 506  8B05 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 507  8B07 CD 26 8E     	call Incrementa_punteros_de_cajas
 508  8B0A 18 F2        	jr 12B
 509  8B0C
 510  8B0C              ; ---------------------------------------------------------------------------------------
 511  8B0C
 512  8B0C 3A 02 8A     10 ld a,(Numero_parcial_de_entidades)
 513  8B0F 47               ld b,a
 514  8B10 A7           	and a
 515  8B11 20 14        	jr nz,11F
 516  8B13
 517  8B13 21 F8 89     	ld hl,Ctrl_1
 518  8B16 CB 66        	bit 4,(hl)
 519  8B18 C2 A4 8B     	jp nz,16F
 520  8B1B
 521  8B1B 21 F8 89     	ld hl,Ctrl_1
 522  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 523  8B20
 524  8B20 3A 40 8A     	ld a,(Contador_de_frames)
 525  8B23 3C           	inc a
 526  8B24 32 43 8A     	ld (Activa_recarga_cajas),a
 527  8B27
 528  8B27              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 529  8B27
 530  8B27 3A 03 8A     11 ld a,(Entidades_en_curso)
 531  8B2A A7           	and a
 532  8B2B CA A4 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 533  8B2E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 534  8B2F
 535  8B2F              ; Código que ejecutamos con cada entidad:
 536  8B2F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 537  8B2F
 538  8B2F C5           15 push bc 												; Nº de entidades en curso.
 539  8B30
 540  8B30              ; Impacto ???
 541  8B30
 542  8B30 3A CE 89     	ld a,(Impacto)
 543  8B33 A7           	and a
 544  8B34 28 2D        	jr z,8F
 545  8B36
 546  8B36              ; Hay Impacto en esta entidad.
 547  8B36
 548  8B36 21 41 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 549  8B39 35           	dec (hl)
 550  8B3A 20 62        	jr nz,17F
 551  8B3C
 552  8B3C              ;! Velocidad de la animación de la explosión.
 553  8B3C
 554  8B3C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 555  8B3E              ;														; _,(velocidad de la explosión).
 556  8B3E CD 93 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 557  8B41
 558  8B41              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 559  8B41
 560  8B41 3A F6 89     	ld a,(Ctrl_2)
 561  8B44 CB 4F        	bit 1,a
 562  8B46 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 563  8B48
 564  8B48              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 565  8B48
 566  8B48 3A BD 89     	ld a,(CTRL_DESPLZ)
 567  8B4B A7           	and a
 568  8B4C 20 08        	jr nz,18F
 569  8B4E
 570  8B4E 21 84 84     	ld hl,Indice_Explosion_2x2-2
 571  8B51 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 572  8B54 18 06        	jr 19F
 573  8B56
 574  8B56 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 575  8B59 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 576  8B5C
 577  8B5C 21 F6 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 578  8B5F CB CE        	set 1,(hl)
 579  8B61 18 22        	jr 7F
 580  8B63
 581  8B63              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 582  8B63              ; _con las coordenadas de la entidad almacenada en DRAW.
 583  8B63
 584  8B63 3A F8 89     8 ld a,(Ctrl_1)
 585  8B66 CB 57        	bit 2,a
 586  8B68 28 1B        	jr z,7F
 587  8B6A
 588  8B6A 2A 35 8A     	ld hl,(Coordenadas_disparo_certero)
 589  8B6D EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 590  8B6E              ;														; E contiene la coordenada_X del disparo.
 591  8B6E 2A BB 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 592  8B71              ;														; H FILA, (Coordenada_y de la entidad).
 593  8B71 A7           	and a
 594  8B72 ED 52        	sbc hl,de
 595  8B74
 596  8B74 CD F7 92     	call Determina_resultado_comparativa
 597  8B77
 598  8B77 78           	ld a,b
 599  8B78 A7           	and a
 600  8B79 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 601  8B7B
 602  8B7B              ; ----- ----- -----
 603  8B7B
 604  8B7B 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 605  8B7D 32 CE 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 606  8B80
 607  8B80 21 F8 89     	ld hl,Ctrl_1
 608  8B83 CB 96        	res 2,(hl)
 609  8B85
 610  8B85 CD 05 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 611  8B88
 612  8B88 3A E3 89     	ld a,(Ctrl_0)
 613  8B8B CB 67        	bit 4,a
 614  8B8D 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 615  8B8F
 616  8B8F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 617  8B8F              ; [[[
 618  8B8F CD AF 8E     	call Detecta_disparo_entidad
 619  8B92              ; ]]]
 620  8B92 CD A3 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 621  8B95
 622  8B95 21 E3 89     	ld hl,Ctrl_0
 623  8B98 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 624  8B9A AF           	xor a
 625  8B9B 32 E4 89     	ld (Obj_dibujado),a
 626  8B9E
 627  8B9E CD D9 8D     17 call Store_Restore_cajas
 628  8BA1
 629  8BA1 C1           	pop bc
 630  8BA2 10 8B        	djnz 15B
 631  8BA4
 632  8BA4              ; ------------------------------------
 633  8BA4
 634  8BA4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 635  8BA4              ; Hemos gestionado todas las unidades.
 636  8BA4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 637  8BA4
 638  8BA4              ;	ld hl,Ctrl_1
 639  8BA4              ;	res 2,(hl)
 640  8BA4
 641  8BA4              ; ------------------------------------
 642  8BA4
 643  8BA4              ; Tras la gestión de las entidades, ... AMADEUS.
 644  8BA4
 645  8BA4 CD 3B 8E     16 call Restore_Amadeus
 646  8BA7
 647  8BA7 3A CE 89     	ld a,(Impacto)
 648  8BAA A7           	and a
 649  8BAB 20 FE        	jr nz,$
 650  8BAD
 651  8BAD CD 64 8C     	call Mov_Amadeus
 652  8BB0
 653  8BB0 3A E3 89     	ld a,(Ctrl_0)
 654  8BB3 CB 67        	bit 4,a
 655  8BB5 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 656  8BB7
 657  8BB7 CD A3 8C     	call Guarda_foto_entidad_a_pintar
 658  8BBA
 659  8BBA 21 E3 89     14 ld hl,Ctrl_0
 660  8BBD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 661  8BBF AF           	xor a
 662  8BC0 32 E4 89     	ld (Obj_dibujado),a
 663  8BC3
 664  8BC3 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 665  8BC6 CD 4D 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 666  8BC9
 667  8BC9 CD 54 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 668  8BCC
 669  8BCC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 670  8BCC
 671  8BCC CD 73 8D     	call Calcula_numero_de_disparotes
 672  8BCF CD 5B 8D     9 call Calcula_numero_de_malotes
 673  8BD2
 674  8BD2 CD 23 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 675  8BD5
 676  8BD5 3E 04        	ld a,4
 677  8BD7 D3 FE        	out ($fe),a
 678  8BD9
 679  8BD9              ; ----------------------------------------
 680  8BD9
 681  8BD9 3A F8 89     	ld a,(Ctrl_1) 										; Existe Loop?
 682  8BDC CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 683  8BDE CA BF 8A     	jp z,Main
 684  8BE1
 685  8BE1              ; -----
 686  8BE1              ;	(((
 687  8BE1
 688  8BE1 3A 40 8A     	ld a,(Contador_de_frames)
 689  8BE4 47           	ld b,a
 690  8BE5 3A 43 8A     	ld a,(Activa_recarga_cajas)
 691  8BE8 B8           	cp b
 692  8BE9 28 08        	jr z,20F
 693  8BEB
 694  8BEB 21 F8 89     	ld hl,Ctrl_1
 695  8BEE CB E6        	set 4,(hl)
 696  8BF0 C3 BF 8A     	jp Main
 697  8BF3
 698  8BF3 21 F8 89     20 ld hl,Ctrl_1
 699  8BF6 CB A6        	res 4,(hl)
 700  8BF8 F3           	di
 701  8BF9
 702  8BF9 3A 40 8A     	ld a,(Contador_de_frames)
 703  8BFC
 704  8BFC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 705  8BFC              ;! _ IMPREDECIBLE !!!!
 706  8BFC
 707  8BFC C6 0A        	add 10
 708  8BFE 32 42 8A     	ld (Clock_Entidades_en_curso),a
 709  8C01
 710  8C01 C3 64 8A     	jp 4B
 711  8C04
 712  8C04 C9           	ret
 713  8C05
 714  8C05              ; --------------------------------------------------------------------------------------------------------------
 715  8C05              ;
 716  8C05              ;	27/05/23
 717  8C05
 718  8C05              Mov_obj
 719  8C05
 720  8C05              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 721  8C05
 722  8C05 3A F6 89     	ld a,(Ctrl_2)
 723  8C08 CB 4F        	bit 1,a
 724  8C0A 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 725  8C0C
 726  8C0C              ; Explosión:
 727  8C0C
 728  8C0C 3A F7 89     	ld a,(Frames_explosion)
 729  8C0F A7           	and a
 730  8C10 20 11        	jr nz,4F
 731  8C12
 732  8C12              ; Una alimaña menos!!!!!!!!!1
 733  8C12
 734  8C12 CD 56 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 735  8C15 21 02 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 736  8C18 35           	dec (hl)
 737  8C19 21 03 8A     	ld hl,Entidades_en_curso
 738  8C1C 35           	dec (hl)
 739  8C1D 21 01 8A     	ld hl,Numero_de_entidades
 740  8C20 35           	dec (hl)
 741  8C21 18 40        	jr 3F
 742  8C23
 743  8C23              ; -----
 744  8C23
 745  8C23              ;	`Movemos´ la explosión.
 746  8C23
 747  8C23 2A C3 89     4 ld hl,(Puntero_DESPLZ_der)
 748  8C26 23           	inc hl
 749  8C27 23           	inc hl
 750  8C28 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 751  8C2B CD 8B 8D     	call Extrae_address
 752  8C2E 22 B9 89     	ld (Puntero_objeto),hl
 753  8C31
 754  8C31 21 F7 89     	ld hl,Frames_explosion
 755  8C34 35           	dec (hl)
 756  8C35
 757  8C35 CD 93 8C     	call Guarda_foto_entidad_a_borrar
 758  8C38 18 29        	jr 3F
 759  8C3A
 760  8C3A AF           2 xor a
 761  8C3B 32 E4 89     	ld (Obj_dibujado),a
 762  8C3E 32 E3 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 763  8C41              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 764  8C41              ; 														; _de la entidad.
 765  8C41 CD AD 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 766  8C44              ;														; Obj_dibujado="0".
 767  8C44              ; Movemos Entidades malignas.
 768  8C44
 769  8C44              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 770  8C44              ;	and a 												; _a movernos. (Limitador_de_entidades).
 771  8C44              ;	ret z
 772  8C44
 773  8C44 CD 04 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 774  8C47
 775  8C47 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 776  8C4A CB 67        	bit 4,a
 777  8C4C C8           	ret z
 778  8C4D
 779  8C4D              ; Ha habido desplazamiento de la entidad maligna.
 780  8C4D              ; Ha llegado a zona de AMADEUS ???
 781  8C4D
 782  8C4D 3A BC 89     	ld a,(Coordenada_y)
 783  8C50 FE 14        	cp $14
 784  8C52 D4 85 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 785  8C55              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 786  8C55              ; ---------
 787  8C55
 788  8C55 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 789  8C57 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 790  8C5A CD AD 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 791  8C5D CD C4 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 792  8C60 CD 93 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 793  8C63 C9           3 ret													; _de la misma.
 794  8C64
 795  8C64              ; --------------------------------------------------------------------------------------------------------------
 796  8C64              ;
 797  8C64              ;	29/1/23
 798  8C64
 799  8C64              Mov_Amadeus
 800  8C64
 801  8C64 AF           	xor a
 802  8C65 32 E4 89     	ld (Obj_dibujado),a
 803  8C68 CD AD 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 804  8C6B              ;														; Obj_dibujado="0".
 805  8C6B              ; Movemos Amadeus.
 806  8C6B
 807  8C6B CD 78 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 808  8C6E 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 809  8C71 CB 67        	bit 4,a
 810  8C73 C8           	ret z
 811  8C74
 812  8C74              ; ---------
 813  8C74
 814  8C74 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 815  8C76 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 816  8C79 CD AD 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 817  8C7C CD C4 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 818  8C7F CD 93 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 819  8C82 C9           	ret													; _de la nave.
 820  8C83
 821  8C83              ; -----------------------------------------------------------------------------------
 822  8C83
 823  8C83 CD 91 8D     Inicia_entidad	call Inicia_Puntero_objeto
 824  8C86 CD B8 99     	call Recompone_posicion_inicio
 825  8C89 CD DE 93     	call Draw
 826  8C8C CD A0 7F     	call Guarda_foto_registros
 827  8C8F CD D9 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 828  8C92 C9           	ret
 829  8C93
 830  8C93              ; --------------------------------------------------------------------------------------------------------------
 831  8C93              ;
 832  8C93              ;	31/01/23
 833  8C93              ;
 834  8C93              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 835  8C93
 836  8C93              Guarda_foto_entidad_a_borrar
 837  8C93
 838  8C93 CD C2 96     	call Prepara_draw
 839  8C96 CD F2 95     	call calcula_CColumnass
 840  8C99 CD 29 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 841  8C9C CD 88 96     	call Define_rutina_de_impresion
 842  8C9F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 843  8CA2 C9           	ret
 844  8CA3
 845  8CA3              ; --------------------------------------------------------------------------------------------------------------
 846  8CA3              ;
 847  8CA3              ;	31/01/23
 848  8CA3              ;
 849  8CA3              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 850  8CA3              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 851  8CA3
 852  8CA3              Guarda_foto_entidad_a_pintar
 853  8CA3
 854  8CA3 CD D0 8C     	call Repone_pintar
 855  8CA6 CD DE 93     	call Draw
 856  8CA9 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 857  8CAC C9           	ret
 858  8CAD
 859  8CAD              ; --------------------------------------------------------------------------------------------------------------
 860  8CAD              ;
 861  8CAD              ;
 862  8CAD
 863  8CAD 21 B5 89     Prepara_var_pintado_borrado	ld hl,Filas
 864  8CB0 3A E4 89     	ld a,(Obj_dibujado)
 865  8CB3 A7           	and a
 866  8CB4 28 05        	jr z,1F
 867  8CB6 11 D9 89     	ld de,Variables_de_pintado
 868  8CB9 18 03        	jr 2F
 869  8CBB 11 CF 89     1 ld de,Variables_de_borrado
 870  8CBE 01 08 00     2 ld bc,8
 871  8CC1 ED B0        	ldir
 872  8CC3 C9           	ret
 873  8CC4
 874  8CC4              ; --------------------------------------------------------------------------------------------------------------
 875  8CC4
 876  8CC4 21 CF 89     Repone_borrar ld hl,Variables_de_borrado
 877  8CC7 11 B5 89     	ld de,Filas
 878  8CCA 01 08 00     	ld bc,8
 879  8CCD ED B0        	ldir
 880  8CCF C9           	ret
 881  8CD0
 882  8CD0 21 D9 89     Repone_pintar ld hl,Variables_de_pintado
 883  8CD3 11 B5 89     	ld de,Filas
 884  8CD6 01 08 00     	ld bc,8
 885  8CD9 ED B0        	ldir
 886  8CDB C9           	ret
 887  8CDC
 888  8CDC              ; *************************************************************************************************************************************************************
 889  8CDC              ;
 890  8CDC              ; 8/1/23
 891  8CDC              ;
 892  8CDC              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 893  8CDC              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 894  8CDC              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 895  8CDC
 896  8CDC              ; Destruye HL y DE !!!!!
 897  8CDC
 898  8CDC              Inicia_punteros_de_cajas
 899  8CDC
 900  8CDC 21 8C 85     	ld hl,Indice_de_cajas
 901  8CDF CD 8B 8D         call Extrae_address
 902  8CE2 22 FB 89         ld (Puntero_store_caja),hl
 903  8CE5 21 8E 85     	ld hl,Indice_de_cajas+2
 904  8CE8 22 FF 89     	ld (Indice_restore_caja),hl
 905  8CEB CD 8B 8D     	call Extrae_address
 906  8CEE 22 FD 89     	ld (Puntero_restore_caja),hl
 907  8CF1 C9               ret
 908  8CF2
 909  8CF2              ; ---------------------------------------------------------------
 910  8CF2              ;
 911  8CF2              ;	9/8/23
 912  8CF2              ;
 913  8CF2              ;	Inicialización y gestión de álbumes de fotos y cajas.
 914  8CF2
 915  8CF2              Inicia_punteros_de_albumes_y_malotes
 916  8CF2
 917  8CF2 21 EC 84     	ld hl,Indice_album_de_fotos
 918  8CF5 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 919  8CF8 CD 8B 8D     	call Extrae_address
 920  8CFB 22 0D 8A     	ld (Stack_snapshot),hl
 921  8CFE
 922  8CFE 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 923  8D01 22 23 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 924  8D04 CD 8B 8D     	call Extrae_address
 925  8D07 22 0F 8A     	ld (Stack_snapshot_disparos),hl
 926  8D0A
 927  8D0A 21 FC 84     	ld hl,Indice_End_Snapshot
 928  8D0D 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 929  8D10 CD 8B 8D     	call Extrae_address
 930  8D13 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 931  8D16
 932  8D16 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 933  8D19 22 27 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 934  8D1C CD 8B 8D     	call Extrae_address
 935  8D1F 22 2B 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 936  8D22
 937  8D22 C9           	ret
 938  8D23
 939  8D23              Avanza_puntero_de_album_de_fotos_y_malotes
 940  8D23
 941  8D23              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 942  8D23
 943  8D23              ; Estamos en el último álbum del índice???.
 944  8D23
 945  8D23 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
 946  8D26 01 F2 84     	ld bc,Indice_album_de_fotos+6
 947  8D29 A7           	and a
 948  8D2A ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 949  8D2C 20 02        	jr nz,1F								 		; El buffer está lleno. HALT.
 950  8D2E 76           	halt
 951  8D2F C9           	ret
 952  8D30
 953  8D30 2A 21 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 954  8D33 23           	inc hl
 955  8D34 23           	inc hl
 956  8D35 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 957  8D38 CD 8B 8D     	call Extrae_address
 958  8D3B 22 0D 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 959  8D3E
 960  8D3E 2A 25 8A     	ld hl,(Puntero_indice_End_Snapshot)
 961  8D41 23           	inc hl
 962  8D42 23           	inc hl
 963  8D43 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 964  8D46 CD 8B 8D     	call Extrae_address
 965  8D49 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 966  8D4C
 967  8D4C C9           	ret
 968  8D4D
 969  8D4D              ; *************************************************************************************************************************************************************
 970  8D4D              ;
 971  8D4D              ; 8/1/23
 972  8D4D              ;
 973  8D4D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 974  8D4D
 975  8D4D 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 976  8D50 22 2E 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 977  8D53 C9           	ret
 978  8D54 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 979  8D57 22 30 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 980  8D5A C9           	ret
 981  8D5B
 982  8D5B              ; -------------------------------------------------------------------------------------------------------------
 983  8D5B              ;
 984  8D5B              ; 3/8/23
 985  8D5B              ;
 986  8D5B
 987  8D5B              Calcula_numero_de_malotes
 988  8D5B
 989  8D5B 21 00 70     	ld hl,Album_de_fotos
 990  8D5E EB           	ex de,hl
 991  8D5F 2A 11 8A     	ld hl,(End_Snapshot)
 992  8D62
 993  8D62 06 00        	ld b,0
 994  8D64 7D           	ld a,l
 995  8D65 93           	sub e
 996  8D66 28 07        	jr z,1F
 997  8D68
 998  8D68              ; Nº de malotes no es "0".
 999  8D68
1000  8D68 D6 06        2 sub 6
1001  8D6A 04           	inc b
1002  8D6B A7           	and a
1003  8D6C 20 FA        	jr nz,2B
1004  8D6E 78           	ld a,b
1005  8D6F
1006  8D6F 32 04 8A     1 ld (Numero_de_malotes),a
1007  8D72 C9           	ret
1008  8D73
1009  8D73              ; -------------------------------------------------------------------------------------------------------------
1010  8D73              ;
1011  8D73              ; 28/2/23
1012  8D73              ;
1013  8D73
1014  8D73              Calcula_numero_de_disparotes
1015  8D73
1016  8D73 21 0D 72     	ld hl,Album_de_fotos_disparos
1017  8D76 EB           	ex de,hl
1018  8D77 2A 2B 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1019  8D7A
1020  8D7A 06 00        	ld b,0
1021  8D7C 7D           	ld a,l
1022  8D7D 93           	sub e
1023  8D7E 28 07        	jr z,1F
1024  8D80
1025  8D80              ; Nº de malotes no es "0".
1026  8D80
1027  8D80 D6 06        2 sub 6
1028  8D82 04           	inc b
1029  8D83 A7           	and a
1030  8D84 20 FA        	jr nz,2B
1031  8D86 78           	ld a,b
1032  8D87
1033  8D87 32 2D 8A     1 ld (Numero_de_disparotes),a
1034  8D8A C9           	ret
1035  8D8B
1036  8D8B              ; *************************************************************************************************************************************************************
1037  8D8B              ;
1038  8D8B              ; 20/10/22
1039  8D8B              ;
1040  8D8B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1041  8D8B              ;
1042  8D8B              ; Destruye el puntero y DE !!!!!
1043  8D8B
1044  8D8B 5E           Extrae_address ld e,(hl)
1045  8D8C 23           	inc hl
1046  8D8D 56           	ld d,(hl)
1047  8D8E 2B           	dec hl
1048  8D8F EB           	ex de,hl
1049  8D90 C9           	ret
1050  8D91
1051  8D91              ; *************************************************************************************************************************************************************
1052  8D91              ;
1053  8D91              ;	7/2/23
1054  8D91              ;
1055  8D91              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1056  8D91              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1057  8D91              ;
1058  8D91              ;   Destruye HL y BC !!!!!,
1059  8D91              ;
1060  8D91              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1061  8D91              ;					"0" ..... Izquierda.
1062  8D91
1063  8D91              Inicia_Puntero_objeto
1064  8D91
1065  8D91 3A C9 89     	ld a,(Cuad_objeto)
1066  8D94 E6 01        	and 1
1067  8D96 F5           	push af
1068  8D97 CC B5 8D     	call z,Inicia_puntero_objeto_izq
1069  8D9A F1           	pop af
1070  8D9B 28 2B        	jr z,1F
1071  8D9D CD A2 8D     	call Inicia_puntero_objeto_der
1072  8DA0 18 26        	jr 1F
1073  8DA2
1074  8DA2              ; Arrancamos desde la parte izquierda de la pantalla.
1075  8DA2              ; Iniciamos (Indice_Sprite_der).
1076  8DA2
1077  8DA2 2A BF 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1078  8DA5 22 C3 89     	ld (Puntero_DESPLZ_der),hl
1079  8DA8 CD 8B 8D     	call Extrae_address
1080  8DAB 22 B9 89     	ld (Puntero_objeto),hl
1081  8DAE
1082  8DAE 2A C1 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1083  8DB1 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1084  8DB4 C9           	ret
1085  8DB5
1086  8DB5              ; Arrancamos desde la parte derecha de la pantalla.
1087  8DB5              ; Iniciamos (Indice_Sprite_izq).
1088  8DB5
1089  8DB5 2A C1 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1090  8DB8 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1091  8DBB CD 8B 8D     	call Extrae_address
1092  8DBE 22 B9 89     	ld (Puntero_objeto),hl
1093  8DC1
1094  8DC1 2A BF 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1095  8DC4 22 C3 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1096  8DC7 C9           	ret
1097  8DC8
1098  8DC8              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1099  8DC8
1100  8DC8 21 40 83     1 ld hl,Amadeus
1101  8DCB ED 4B B9 89  	ld bc,(Puntero_objeto)
1102  8DCF B7 ED 42     	sub hl,bc
1103  8DD2 C0           	ret nz
1104  8DD3 21 E3 89     	ld hl,Ctrl_0
1105  8DD6 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1106  8DD8 C9           	ret 												; _de nuestra nave en los extremos.
1107  8DD9
1108  8DD9              ; *************************************************************************************************************************************************************
1109  8DD9              ;
1110  8DD9              ;	14/5/23
1111  8DD9              ;
1112  8DD9              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1113  8DD9              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1114  8DD9
1115  8DD9              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1116  8DD9              ;	_de la 2ª y 3ª entidad respectivamente.
1117  8DD9
1118  8DD9              Store_Restore_cajas
1119  8DD9
1120  8DD9 E5           	push hl
1121  8DDA D5           	push de
1122  8DDB C5            	push bc
1123  8DDC
1124  8DDC              ;	STORE !!!!!
1125  8DDC              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1126  8DDC
1127  8DDC 21 B5 89     	ld hl,Filas
1128  8DDF ED 5B FB 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1129  8DE3 01 43 00     	ld bc,67
1130  8DE6 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1131  8DE8
1132  8DE8              ; 	Entidad_sospechosa. 20/4/23
1133  8DE8
1134  8DE8 3A CE 89     	ld a,(Impacto)
1135  8DEB A7           	and a
1136  8DEC 28 0C        	jr z,1F
1137  8DEE
1138  8DEE 2A FB 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1139  8DF1 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1140  8DF4 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1141  8DF5 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1142  8DF7 22 33 8A     	ld (Entidad_sospechosa_de_colision),hl
1143  8DFA
1144  8DFA              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1145  8DFA
1146  8DFA 2A FD 89     1 ld hl,(Puntero_restore_caja)
1147  8DFD 7E           	ld a,(hl)
1148  8DFE A7           	and a
1149  8DFF F5           	push af
1150  8E00 28 08        	jr z,2F
1151  8E02
1152  8E02 11 B5 89     	ld de,Filas
1153  8E05 01 43 00     	ld bc,67
1154  8E08 ED B0        	ldir
1155  8E0A
1156  8E0A CD 26 8E     2 call Incrementa_punteros_de_cajas
1157  8E0D F1           	pop af
1158  8E0E 28 EA        	jr z,1B
1159  8E10
1160  8E10 C1           	pop bc
1161  8E11 D1           	pop de
1162  8E12 E1           	pop hl
1163  8E13
1164  8E13 C9           	ret
1165  8E14
1166  8E14              ; **************************************************************************************************
1167  8E14              ;
1168  8E14              ;	12/05/23
1169  8E14              ;
1170  8E14              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1171  8E14
1172  8E14 E5           Restore_entidad push hl
1173  8E15 D5           	push de
1174  8E16 C5            	push bc
1175  8E17
1176  8E17 2A FB 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1177  8E1A 11 B5 89     	ld de,Filas
1178  8E1D 01 43 00     	ld bc,67
1179  8E20 ED B0        	ldir
1180  8E22
1181  8E22 C1           	pop bc
1182  8E23 D1           	pop de
1183  8E24 E1           	pop hl
1184  8E25 C9           	ret
1185  8E26
1186  8E26
1187  8E26              ; **************************************************************************************************
1188  8E26              ;
1189  8E26              ;	08/05/23
1190  8E26              ;
1191  8E26              ;	Incrementamos los dos punteros de entidades. (+1).
1192  8E26
1193  8E26 2A FD 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1194  8E29 22 FB 89     	ld (Puntero_store_caja),hl
1195  8E2C 2A FF 89     	ld hl,(Indice_restore_caja)
1196  8E2F 23           	inc hl
1197  8E30 23           	inc hl
1198  8E31 22 FF 89     	ld (Indice_restore_caja),hl
1199  8E34 CD 8B 8D         call Extrae_address
1200  8E37 22 FD 89         ld (Puntero_restore_caja),hl
1201  8E3A C9               ret
1202  8E3B
1203  8E3B              ; **************************************************************************************************
1204  8E3B              ;
1205  8E3B              ;	25/01/23
1206  8E3B              ;
1207  8E3B              ;	Restore_Amadeus
1208  8E3B              ;
1209  8E3B              ;	Cargamos en DRAW los parámetros de Amadeus.
1210  8E3B              ;
1211  8E3B
1212  8E3B E5           Restore_Amadeus	push hl
1213  8E3C D5           	push de
1214  8E3D C5            	push bc
1215  8E3E 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1216  8E41 11 B5 89     	ld de,Filas
1217  8E44 01 43 00     	ld bc,67
1218  8E47 ED B0        	ldir
1219  8E49 C1           	pop bc
1220  8E4A D1           	pop de
1221  8E4B E1           	pop hl
1222  8E4C C9           	ret
1223  8E4D
1224  8E4D              ; *************************************************************************************************************************************************************
1225  8E4D              ;
1226  8E4D              ;	29/04/23
1227  8E4D              ;
1228  8E4D              ;	Store_Amadeus
1229  8E4D              ;
1230  8E4D              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1231  8E4D              ;
1232  8E4D              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1233  8E4D              ;
1234  8E4D              ;	DESTRUYE: HL y BC y DE.
1235  8E4D
1236  8E4D 21 B5 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1237  8E50 01 43 00     	ld bc,67
1238  8E53 ED B0        	ldir
1239  8E55 C9           	ret
1240  8E56
1241  8E56              ; -----------------------------------------------------------
1242  8E56              ;
1243  8E56              ;	27/04/23
1244  8E56              ;
1245  8E56              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1246  8E56              ;
1247  8E56              ;	Destruye: HL,BC,DE,A
1248  8E56
1249  8E56 21 B5 89     Borra_datos_entidad ld hl,Filas
1250  8E59 01 42 00     	ld bc,66
1251  8E5C AF           	xor a
1252  8E5D 77           	ld (hl),a
1253  8E5E 11 B6 89     	ld de,Filas+1
1254  8E61 ED B0        	ldir
1255  8E63 C9           	ret
1256  8E64
1257  8E64              ; -----------------------------------------------------------
1258  8E64
1259  8E64              ; Teclado.
1260  8E64
1261  8E64 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1262  8E66 DB FE        	in a,($fe)
1263  8E68 E6 01        	and $01
1264  8E6A 28 02        	jr z,1f
1265  8E6C 18 F6        	jr Pulsa_ENTER
1266  8E6E C9           1 ret
1267  8E6F
1268  8E6F              ; **************************************************************************************************
1269  8E6F              ;
1270  8E6F              ; Temporización.
1271  8E6F
1272  8E6F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1273  8E6F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1274  8E6F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1275  8E6F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1276  8E6F
1277  8E6F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1278  8E6F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1279  8E6F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1280  8E6F
1281  8E6F              ; A partir de $4f61 no hace falta DELAY.
1282  8E6F
1283  8E6F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1284  8E6F
1285  8E6F 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1286  8E72 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1287  8E73 78           	LD A,B
1288  8E74 A7           	AND A
1289  8E75 20 FB        	JR NZ,wait
1290  8E77 C9           	RET
1291  8E78
1292  8E78              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1293  8E78              ;
1294  8E78              ;	5/3/23
1295  8E78              ;
1296  8E78              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1297  8E78
1298  8E78              Movimiento_Amadeus
1299  8E78
1300  8E78              ; Disparo.
1301  8E78
1302  8E78 3A 44 8A     	ld a,(Disparo_Amadeus)
1303  8E7B A7           	and a
1304  8E7C 20 02        	jr nz,1F
1305  8E7E 18 15        	jr 2F
1306  8E80
1307  8E80 3E F7        1 ld a,$f7													; "5" para disparar.
1308  8E82 DB FE        	in a,($fe)
1309  8E84 E6 10        	and $10
1310  8E86
1311  8E86 F5           	push af
1312  8E87 CC E8 8E     	call z,Genera_disparo
1313  8E8A F1           	pop af
1314  8E8B 20 08        	jr nz,2F
1315  8E8D
1316  8E8D 3A 44 8A     	ld a,(Disparo_Amadeus)
1317  8E90 EE 01        	xor 1
1318  8E92 32 44 8A     	ld (Disparo_Amadeus),a
1319  8E95
1320  8E95 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1321  8E97 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1322  8E99 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1323  8E9B CC 72 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1324  8E9E 3E F7        	ld a,$f7
1325  8EA0 DB FE        	in a,($fe)
1326  8EA2 E6 01        	and $01
1327  8EA4 C8           	ret z
1328  8EA5
1329  8EA5 3E F7        	ld a,$f7
1330  8EA7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1331  8EA9 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1332  8EAB CC 54 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1333  8EAE C9           	ret
1334  8EAF
1335  8EAF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1336  8EAF              ;
1337  8EAF              ;	Rutina provisional para que los malotes cagen balas.
1338  8EAF
1339  8EAF              Detecta_disparo_entidad
1340  8EAF
1341  8EAF 3A 47 8A     	ld a,(Disparo_entidad)
1342  8EB2 A7           	and a
1343  8EB3 C8           	ret z
1344  8EB4
1345  8EB4              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1346  8EB4
1347  8EB4              ;	ld a,$7f				; Detecta SPACE.
1348  8EB4              ;	in a,($fe)
1349  8EB4              ;	and 1
1350  8EB4              ;	ret nz
1351  8EB4
1352  8EB4              ;	call Genera_disparo
1353  8EB4 C9           	ret
1354  8EB5
1355  8EB5              ; ----------------------------------------------------------------------
1356  8EB5              ;
1357  8EB5              ;	11/8/23
1358  8EB5
1359  8EB5              Frame
1360  8EB5
1361  8EB5              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1362  8EB5              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1363  8EB5
1364  8EB5              ; PINTAMOS.
1365  8EB5
1366  8EB5 F5           	push af
1367  8EB6 C5           	push bc
1368  8EB7 D5           	push de
1369  8EB8 E5           	push hl
1370  8EB9
1371  8EB9 3E 02            ld a,2
1372  8EBB D3 FE            out ($fe),a											; Rojo.
1373  8EBD CD EC 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1374  8EC0 CD 2B 97     	call Extrae_foto_disparos
1375  8EC3 3E 01            ld a,1
1376  8EC5 D3 FE            out ($fe),a											; Azul.
1377  8EC7
1378  8EC7              ; 	Gestiona los álbumes de fotos.
1379  8EC7
1380  8EC7 CD 36 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1381  8ECA CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1382  8ECD
1383  8ECD              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1384  8ECD
1385  8ECD
1386  8ECD 3A 40 8A     	ld a,(Contador_de_frames)
1387  8ED0 FE 90        	cp $90
1388  8ED2 28 FE        	jr z,$
1389  8ED4 30 FE            jr nc,$
1390  8ED6
1391  8ED6
1392  8ED6 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
1393  8ED9 CD 8B 8D     	call Extrae_address
1394  8EDC 22 0D 8A     	ld (Stack_snapshot),hl
1395  8EDF
1396  8EDF              ;	En este punto:
1397  8EDF
1398  8EDF              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1399  8EDF              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1400  8EDF
1401  8EDF              ; RELOJES.
1402  8EDF
1403  8EDF 21 40 8A     	ld hl,Contador_de_frames
1404  8EE2 34           	inc (hl)											; 0 - 255
1405  8EE3
1406  8EE3 E1           	pop hl
1407  8EE4 D1           	pop de
1408  8EE5 C1           	pop bc
1409  8EE6 F1           	pop af
1410  8EE7
1411  8EE7 C9           	ret
1412  8EE8
1413  8EE8              ; ---------------------------------------------------------------
1414  8EE8
1415  8EE8              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EE8              ; ******************************************************************************************************************************************************************************************
   2+ 8EE8              ;
   3+ 8EE8              ;   21/07/23
   4+ 8EE8              ;
   5+ 8EE8              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EE8              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EE8              ;
   8+ 8EE8              ;
   9+ 8EE8              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EE8              ;
  11+ 8EE8              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EE8              ;               _ hacen las entidades hacia abajo.
  13+ 8EE8              ;
  14+ 8EE8              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EE8              ;
  16+ 8EE8              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EE8              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EE8              ;
  19+ 8EE8              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EE8              ;           _ la bala.
  21+ 8EE8              ;
  22+ 8EE8              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EE8              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EE8              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EE8              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EE8              ;           _ en el momento de generarse la bala)).
  27+ 8EE8
  28+ 8EE8              Genera_disparo
  29+ 8EE8
  30+ 8EE8              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EE8              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EE8              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EE8              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EE8              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EE8              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EE8              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EE8
  38+ 8EE8              ; Exclusiones:
  39+ 8EE8
  40+ 8EE8 3A CD 89         ld a,(Vel_down)
  41+ 8EEB 47               ld b,a
  42+ 8EEC 3A 3F 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EEF B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EF0 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EF1 3A F2 89         ld a,(Columnas)
  46+ 8EF4 47               ld b,a
  47+ 8EF5 3A B6 89         ld a,(Columns)
  48+ 8EF8 B8               cp b
  49+ 8EF9 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EFA
  51+ 8EFA              ; ----- ----- -----
  52+ 8EFA
  53+ 8EFA 3A E3 89         ld a,(Ctrl_0)
  54+ 8EFD CB 77            bit 6,a
  55+ 8EFF 20 06            jr nz,14F
  56+ 8F01
  57+ 8F01 3A BC 89         ld a,(Coordenada_y)
  58+ 8F04 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F06 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F07
  61+ 8F07 21 00 80     14 ld hl,Indice_disparo
  62+ 8F0A 3A BD 89         ld a,(CTRL_DESPLZ)
  63+ 8F0D 4F               ld c,a
  64+ 8F0E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F10              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F10              ;                                            ""        ""       "f9", B="1"
  67+ 8F10              ;                                            ""        ""       "fb", B="2"
  68+ 8F10              ;                                            ""        ""       "fb", B="3"
  69+ 8F10 A7               and a
  70+ 8F11 28 10            jr z,1F
  71+ 8F13 E6 01            and 1
  72+ 8F15 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F16
  74+ 8F16 79               ld a,c
  75+ 8F17 16 F9            ld d,$f9
  76+ 8F19 23           2 inc hl
  77+ 8F1A 23               inc hl
  78+ 8F1B 04               inc b
  79+ 8F1C BA               cp d
  80+ 8F1D 28 04            jr z,1F
  81+ 8F1F 14               inc d
  82+ 8F20 14               inc d
  83+ 8F21 18 F6            jr 2B
  84+ 8F23
  85+ 8F23 CD 8B 8D     1 call Extrae_address
  86+ 8F26 E5               push hl
  87+ 8F27 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F29 DD 21 6D 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F2D
  90+ 8F2D              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F2D              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F2D
  93+ 8F2D 3A E3 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F30 CB 77            bit 6,a
  95+ 8F32 20 04            jr nz,19F
  96+ 8F34
  97+ 8F34 AF               xor a
  98+ 8F35 32 47 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F38
 100+ 8F38 3A C9 89     19 ld a,(Cuad_objeto)
 101+ 8F3B FE 02            cp 2
 102+ 8F3D 38 66            jr c,3F
 103+ 8F3F 28 64            jr z,3F
 104+ 8F41
 105+ 8F41              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F41
 107+ 8F41 E6 01            and 1
 108+ 8F43 28 30            jr z,4F
 109+ 8F45
 110+ 8F45              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F45              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F45              ;
 113+ 8F45              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F45              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F45              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F45
 117+ 8F45 2A B7 89     	ld hl,(Posicion_actual)
 118+ 8F48
 119+ 8F48              ;   Amadeus o entidad ???.
 120+ 8F48
 121+ 8F48 3A E3 89         ld a,(Ctrl_0)
 122+ 8F4B CB 77            bit 6,a
 123+ 8F4D 28 0A            jr z,8F
 124+ 8F4F
 125+ 8F4F              ; 	Dispara Amadeus.
 126+ 8F4F
 127+ 8F4F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F51 CD DD 96         call PreviousScan
 129+ 8F54 CD DD 96         call PreviousScan
 130+ 8F57
 131+ 8F57              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F57              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F57              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F57              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F57
 136+ 8F57 18 11            jr 10F
 137+ 8F59
 138+ 8F59              ; 	Dispara Entidad.
 139+ 8F59
 140+ 8F59 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F5C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F5C
 143+ 8F5C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F5C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F5C
 146+ 8F5C C5               push bc
 147+ 8F5D 06 10            ld b,16
 148+ 8F5F CD CE 96     9 call NextScan
 149+ 8F62 10 FB            djnz 9B
 150+ 8F64 C1               pop bc
 151+ 8F65 CD CF 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F68 18 06            jr 17F
 153+ 8F6A
 154+ 8F6A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F6A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F6A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F6A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F6A
 159+ 8F6A CD CF 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F6D CD 44 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F70              ;                                                      ; _al generar el disparo.
 162+ 8F70
 163+ 8F70              ; 	LLegados a este punto tendremos:
 164+ 8F70              ;
 165+ 8F70              ;       Puntero_objeto_disparo en IY.
 166+ 8F70              ;       Rutinas_de_impresion en IX.
 167+ 8F70              ;       Puntero_de_impresion en HL.
 168+ 8F70              ;       Impacto/Dirección en BC.
 169+ 8F70
 170+ 8F70 CD D7 8F     17 call Almacena_disparo
 171+ 8F73 18 52            jr 6F                                             ; RET.
 172+ 8F75
 173+ 8F75              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F75              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F75              ;
 176+ 8F75              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F75              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F75              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F75
 180+ 8F75 2A B7 89     4 ld hl,(Posicion_actual)
 181+ 8F78
 182+ 8F78              ;   Amadeus o entidad ???.
 183+ 8F78
 184+ 8F78 3A E3 89         ld a,(Ctrl_0)
 185+ 8F7B CB 77            bit 6,a
 186+ 8F7D 28 0A            jr z,11F
 187+ 8F7F
 188+ 8F7F              ; 	Dispara Amadeus.
 189+ 8F7F
 190+ 8F7F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F81 CD DD 96         call PreviousScan
 192+ 8F84 CD DD 96         call PreviousScan
 193+ 8F87
 194+ 8F87              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F87              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F87              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F87              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F87
 199+ 8F87 18 11            jr 13F
 200+ 8F89
 201+ 8F89              ; 	Dispara Entidad.
 202+ 8F89
 203+ 8F89 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F8C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F8C
 206+ 8F8C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F8C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F8C
 209+ 8F8C C5               push bc
 210+ 8F8D 06 10            ld b,16
 211+ 8F8F CD CE 96     12 call NextScan
 212+ 8F92 10 FB            djnz 12B
 213+ 8F94 C1               pop bc
 214+ 8F95
 215+ 8F95 CD C8 8F         call Ajusta_disparo_parte_derecha
 216+ 8F98 18 06            jr 18F
 217+ 8F9A
 218+ 8F9A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F9A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F9A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F9A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F9A
 223+ 8F9A CD C8 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F9D CD 44 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FA0              ;                                                       ; _al generar el disparo.
 226+ 8FA0
 227+ 8FA0              ; LLegados a este punto tendremos:
 228+ 8FA0              ;
 229+ 8FA0              ;       Puntero_objeto_disparo en IY.
 230+ 8FA0              ;       Rutinas_de_impresion en IX.
 231+ 8FA0              ;       Puntero_de_impresion en HL.
 232+ 8FA0              ;       Impacto/Dirección en BC.
 233+ 8FA0
 234+ 8FA0 CD D7 8F     18 call Almacena_disparo
 235+ 8FA3 18 22            jr 6F                                               ; RET.
 236+ 8FA5
 237+ 8FA5              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FA5
 239+ 8FA5 28 11        3 jr z,5F
 240+ 8FA7
 241+ 8FA7              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FA7              ;
 243+ 8FA7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FA7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FA7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FA7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FA7
 248+ 8FA7              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FA7              ;	   ""        ""       "f9", B="1"
 250+ 8FA7              ;	   ""        ""       "fb", B="2"
 251+ 8FA7              ; 	   ""        ""       "fb", B="3"
 252+ 8FA7
 253+ 8FA7 2A B7 89     	ld hl,(Posicion_actual)
 254+ 8FAA CD CE 96     	call NextScan
 255+ 8FAD
 256+ 8FAD              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FAD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FAD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FAD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FAD
 261+ 8FAD CD CF 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FB0
 263+ 8FB0              ; 	No se produce impacto. B="$80"
 264+ 8FB0              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FB0
 266+ 8FB0 01 80 80         ld bc,$8080
 267+ 8FB3
 268+ 8FB3              ; 	LLegados a este punto tendremos:
 269+ 8FB3              ;
 270+ 8FB3              ;       Puntero_objeto_disparo en IY.
 271+ 8FB3              ;       Rutinas_de_impresion en IX.
 272+ 8FB3              ;       Puntero_de_impresion en HL.
 273+ 8FB3              ;       Impacto/Dirección en BC.
 274+ 8FB3
 275+ 8FB3 CD D7 8F         call Almacena_disparo
 276+ 8FB6 18 0F            jr 6F                                           ; RET.
 277+ 8FB8
 278+ 8FB8              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FB8              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FB8              ;
 281+ 8FB8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FB8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FB8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FB8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FB8
 286+ 8FB8 2A B7 89     5 ld hl,(Posicion_actual)
 287+ 8FBB CD CE 96     	call NextScan
 288+ 8FBE
 289+ 8FBE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FBE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FBE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FBE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FBE
 294+ 8FBE CD C8 8F         call Ajusta_disparo_parte_derecha
 295+ 8FC1
 296+ 8FC1              ; 	No se produce impacto. B="$80"
 297+ 8FC1              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FC1
 299+ 8FC1 01 80 80     15 ld bc,$8080
 300+ 8FC4
 301+ 8FC4              ; 	LLegados a este punto tendremos:
 302+ 8FC4              ;
 303+ 8FC4              ;       Puntero_objeto_disparo en IY.
 304+ 8FC4              ;       Rutinas_de_impresion en IX.
 305+ 8FC4              ;       Puntero_de_impresion en HL.
 306+ 8FC4              ;       Impacto/Dirección en BC.
 307+ 8FC4
 308+ 8FC4 CD D7 8F         call Almacena_disparo
 309+ 8FC7
 310+ 8FC7 C9           6 ret
 311+ 8FC8
 312+ 8FC8              ; ----------------------------------------------------------------
 313+ 8FC8              ;
 314+ 8FC8              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FC8              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FC8              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FC8
 318+ 8FC8 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FC9 FE 02            cp 2
 320+ 8FCB 38 01            jr c,1F
 321+ 8FCD 23               inc hl
 322+ 8FCE C9           1 ret
 323+ 8FCF
 324+ 8FCF 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FD0 FE 01        	cp 1
 326+ 8FD2 20 01        	jr nz,1F
 327+ 8FD4 2B           	dec hl
 328+ 8FD5 2B           1 dec hl
 329+ 8FD6 C9               ret
 330+ 8FD7
 331+ 8FD7              ; ----------------------------------------------------------------
 332+ 8FD7              ;
 333+ 8FD7              ;   25/02/23
 334+ 8FD7              ;
 335+ 8FD7              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FD7              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FD7              ;
 338+ 8FD7              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FD7              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FD7
 341+ 8FD7              Almacena_disparo
 342+ 8FD7
 343+ 8FD7 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FD8 F1               pop af
 345+ 8FD9 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FDA
 347+ 8FDA 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FDB E6 01            and 1
 349+ 8FDD 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FDF              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FDF              ; 	Dispara AMADEUS.
 352+ 8FDF
 353+ 8FDF              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FDF              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FDF              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FDF              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FDF
 358+ 8FDF C5               push bc
 359+ 8FE0 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FE3 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FE6 A7               and a
 362+ 8FE7 ED 42            sbc hl,bc
 363+ 8FE9 CC 54 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FEC C1               pop bc
 365+ 8FED 28 54            jr z,4F
 366+ 8FEF
 367+ 8FEF 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FF2 23               inc hl
 369+ 8FF3 23               inc hl
 370+ 8FF4 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FF7              ;                                                   ; _ Disparo_(+1).
 372+ 8FF7 18 18            jr 2F
 373+ 8FF9
 374+ 8FF9              ; Dispara una entidad.
 375+ 8FF9
 376+ 8FF9 C5           1 push bc
 377+ 8FFA 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FFD 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9000 A7               and a
 380+ 9001 ED 42            sbc hl,bc
 381+ 9003 CC 4D 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9006 C1               pop bc
 383+ 9007 28 3A            jr z,4F
 384+ 9009
 385+ 9009 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 900C 23               inc hl
 387+ 900D 23               inc hl
 388+ 900E 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9011              ;                                                   ; _ Disparo_(+1).
 390+ 9011 CD 8B 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9014              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9014              ;
 393+ 9014              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9014              ;                                                     Rutinas_de_impresion en IX.
 395+ 9014              ;                                                     Puntero_de_impresion en HL.
 396+ 9014              ;                                                     Impacto/Dirección en BC.
 397+ 9014
 398+ 9014 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9015 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9016 23               inc hl                                          ; _ al siguiente.
 401+ 9017 A7               and a
 402+ 9018 20 C0            jr nz,3B
 403+ 901A
 404+ 901A 08               ex af,af
 405+ 901B ED 73 09 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 901F F9               ld sp,hl
 407+ 9020
 408+ 9020 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9022 F5               push af                                         ; Puntero de impresión.
 410+ 9023 FD E5            push iy                                         ; Puntero objeto.
 411+ 9025 C5               push bc                                         ; Control.
 412+ 9026
 413+ 9026 ED 7B 09 8A      ld sp,(Stack)
 414+ 902A
 415+ 902A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 902A
 417+ 902A 21 F8 89     	ld hl,Ctrl_1
 418+ 902D CB C6        	set 0,(hl)
 419+ 902F
 420+ 902F DD E5        	push ix
 421+ 9031 E1               pop hl
 422+ 9032 F5               push af
 423+ 9033 DD E1            pop ix
 424+ 9035
 425+ 9035 CD A0 7F     	call Guarda_foto_registros
 426+ 9038
 427+ 9038 21 F8 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 903B CB 86        	res 0,(hl)
 429+ 903D
 430+ 903D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 903D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 903D
 433+ 903D CD 54 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9040 CD 4D 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 9043
 436+ 9043 C9           4 ret
 437+ 9044
 438+ 9044              ; ----------------------------------------------------------------
 439+ 9044              ;
 440+ 9044              ;   4/3/23
 441+ 9044              ;
 442+ 9044              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9044              ;   _ al generarse el disparo.
 444+ 9044              ;
 445+ 9044              ;       "$80" ..... No se produce colisión.
 446+ 9044              ;       "$81" ..... Se produce colisión.
 447+ 9044              ;
 448+ 9044              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9044              ;         _ que forman el disparo.
 450+ 9044
 451+ 9044
 452+ 9044              Comprueba_Colision
 453+ 9044
 454+ 9044              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9044
 456+ 9044 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9046 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9047
 459+ 9047 CD 7D 90         call Modifica_H_Velocidad_disparo
 460+ 904A
 461+ 904A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 904B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 904D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 904F
 465+ 904F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9051 CD 6D 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9054
 468+ 9054 7B               ld a,e
 469+ 9055 E6 01            and 1
 470+ 9057 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9059              ;                                                  ; _ para activar IMPACTO.
 472+ 9059 E1               pop hl
 473+ 905A E5               push hl
 474+ 905B CD CE 96         call NextScan
 475+ 905E
 476+ 905E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 905F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9061 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9063              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9063 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9065 CD 6D 90         call Bucle_2
 482+ 9068
 483+ 9068 43           1 ld b,e
 484+ 9069 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 906A FD E1            pop iy
 486+ 906C C9               ret
 487+ 906D
 488+ 906D              ; ---------- ----------
 489+ 906D
 490+ 906D 06 02        Bucle_2 ld b,2
 491+ 906F FD 7E 00     2 ld a,(iy)
 492+ 9072 A6               and (hl)
 493+ 9073 28 02            jr z,1F
 494+ 9075 1E 81            ld e,$81
 495+ 9077 23           1 inc hl
 496+ 9078 FD 23            inc iy
 497+ 907A 10 F3            djnz 2B
 498+ 907C C9               ret
 499+ 907D
 500+ 907D              ; ---------- ----------
 501+ 907D              ;
 502+ 907D              ;   21/7/23
 503+ 907D
 504+ 907D              Modifica_H_Velocidad_disparo
 505+ 907D
 506+ 907D 3A 3F 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9080 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9082 D0               ret nc                                         ; _ incrementamos H.
 509+ 9083 24               inc h
 510+ 9084
 511+ 9084 C9               ret
 512+ 9085
 513+ 9085              ; -------------------------------------------------------------------------------------------------------------
 514+ 9085              ;
 515+ 9085              ;   11/04/23
 516+ 9085              ;
 517+ 9085              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9085              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9085              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9085              ;
 521+ 9085              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9085
 523+ 9085              Compara_coordenadas_X
 524+ 9085
 525+ 9085              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9085              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9085
 528+ 9085              ; Preparamos registros:
 529+ 9085
 530+ 9085 21 BB 89         ld hl,Filas+6
 531+ 9088 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9089 23               inc hl
 533+ 908A 23               inc hl
 534+ 908B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 908C 43               ld b,e
 536+ 908D
 537+ 908D 21 C9 89         ld hl,Filas+20
 538+ 9090 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9091 21 3A 8A         ld hl,Coordenadas_X_Entidad
 540+ 9094 CD B0 92         call Guarda_coordenadas_X
 541+ 9097
 542+ 9097              ; Preparamos registros:
 543+ 9097
 544+ 9097 21 AA 85         ld hl,Amadeus_db+6
 545+ 909A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 909B 23               inc hl
 547+ 909C 23               inc hl
 548+ 909D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 909E 7B               ld a,e
 550+ 909F 08               ex af,af'
 551+ 90A0 21 B8 85         ld hl,Amadeus_db+20
 552+ 90A3 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90A4 21 37 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90A7 CD B0 92         call Guarda_coordenadas_X
 555+ 90AA
 556+ 90AA              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90AA              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90AA
 559+ 90AA 04               inc b
 560+ 90AB 05               dec b
 561+ 90AC 28 04            jr z,1F
 562+ 90AE 06 03            ld b,3
 563+ 90B0 18 02            jr 2F
 564+ 90B2 06 02        1 ld b,2
 565+ 90B4 08           2 ex af,af'
 566+ 90B5 3C               inc a
 567+ 90B6 3D               dec a
 568+ 90B7 28 04            jr z,5F
 569+ 90B9 0E 03            ld c,3
 570+ 90BB 18 02            jr 6F
 571+ 90BD 0E 02        5 ld c,2
 572+ 90BF 79           6 ld a,c
 573+ 90C0 08               ex af,af'
 574+ 90C1 11 3A 8A         ld de,Coordenadas_X_Entidad
 575+ 90C4 1A           4 ld a,(de)
 576+ 90C5 21 37 8A         ld hl,Coordenadas_X_Amadeus
 577+ 90C8 BE           3 cp (hl)
 578+ 90C9 28 0E            jr z,7F
 579+ 90CB 23               inc hl
 580+ 90CC 0D               dec c
 581+ 90CD 20 F9            jr nz,3B
 582+ 90CF 13               inc de
 583+ 90D0 08               ex af,af'
 584+ 90D1 4F               ld c,a
 585+ 90D2 08               ex af,af'
 586+ 90D3 10 EF            djnz 4B
 587+ 90D5
 588+ 90D5              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90D5
 590+ 90D5 CD EC 92     8 call Limpia_Coordenadas_X
 591+ 90D8 C9               ret
 592+ 90D9
 593+ 90D9 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90DB 32 CE 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90DE 21 32 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90E1 CB D6            set 2,(hl)
 597+ 90E3 18 F0            jr 8B
 598+ 90E5
 599+ 90E5              ; -----------------------------------------------------------------------
 600+ 90E5              ;
 601+ 90E5              ;   17/04/23
 602+ 90E5              ;
 603+ 90E5
 604+ 90E5              Detecta_colision_nave_entidad
 605+ 90E5
 606+ 90E5              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90E5
 608+ 90E5 2A B7 89         ld hl,(Posicion_actual)
 609+ 90E8 CD 29 96         call Calcula_puntero_de_impresion
 610+ 90EB
 611+ 90EB              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90EB              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90EB
 614+ 90EB DD E5            push ix
 615+ 90ED E1               pop hl
 616+ 90EE E5               push hl
 617+ 90EF
 618+ 90EF              ; ----- ----- -----
 619+ 90EF 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90F1 06 0A            ld b,10
 621+ 90F3 CD 23 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90F6 7B               ld a,e
 623+ 90F7 FE 05            cp 5
 624+ 90F9 38 0E            jr c,3F
 625+ 90FB
 626+ 90FB              ; LLegados a este punto:
 627+ 90FB              ;
 628+ 90FB              ;   HAY COLISIÓN !!!!!.
 629+ 90FB              ;
 630+ 90FB              ;   .db (Impacto) de Amadeus a "1".
 631+ 90FB              ;   SET el bit3 de (Impacto2).
 632+ 90FB              ;
 633+ 90FB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90FB
 635+ 90FB 21 BD 85         ld hl,Amadeus_db+25
 636+ 90FE 36 01            ld (hl),1
 637+ 9100 21 32 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9103 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9105 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9107 18 18            jr 1F
 641+ 9109
 642+ 9109              ; -----
 643+ 9109
 644+ 9109 E1           3 pop hl
 645+ 910A CD CE 96         call NextScan
 646+ 910D E5               push hl
 647+ 910E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 910F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9111 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9113 30 0C            jr nc,1F
 651+ 9115              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9115 10 DC            djnz 2B
 653+ 9117
 654+ 9117              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9117
 656+ 9117              ; LLegados a este punto:
 657+ 9117              ;
 658+ 9117              ;   NO HAY COLISIÓN !!!!!.
 659+ 9117              ;
 660+ 9117              ;   .db (Impacto) de Amadeus a "0".
 661+ 9117              ;   RES el bit2 de (Impacto2).
 662+ 9117              ;
 663+ 9117              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9117              ;   Lo colocamos a "0".
 665+ 9117
 666+ 9117 21 32 8A         ld hl,Impacto2
 667+ 911A CB 96            res 2,(hl)
 668+ 911C 2A 33 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 911F 36 00            ld (hl),0
 670+ 9121
 671+ 9121 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9122 C9               ret
 673+ 9123
 674+ 9123               ; ---------- ----------
 675+ 9123
 676+ 9123 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9124 3A B6 89         ld a,(Columns)
 678+ 9127 47               ld b,a
 679+ 9128 FD 7E 00     2 ld a,(iy)
 680+ 912B BE               cp (hl)
 681+ 912C 28 01            jr z,1F
 682+ 912E
 683+ 912E 1C               inc e
 684+ 912F
 685+ 912F 23           1 inc hl
 686+ 9130 FD 23            inc iy
 687+ 9132 10 F4            djnz 2B
 688+ 9134 C1               pop bc
 689+ 9135 C9               ret
 690+ 9136
 691+ 9136              ; -------------------------------------------------------------------------------------------------------------
 692+ 9136              ;
 693+ 9136              ;   13/03/23
 694+ 9136              ;
 695+ 9136              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9136              ;
 697+ 9136              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9136
 699+ 9136 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9139 7E               ld a,(hl)
 701+ 913A A7               and a
 702+ 913B C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 913C
 704+ 913C 44               ld b,h
 705+ 913D 4D               ld c,l
 706+ 913E 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
 707+ 9141 E5               push hl
 708+ 9142 A7               and a
 709+ 9143 ED 42            sbc hl,bc
 710+ 9145 E5               push hl
 711+ 9146 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9147
 713+ 9147 E1               pop hl
 714+ 9148 54               ld d,h
 715+ 9149 5D               ld e,l
 716+ 914A 1B               dec de
 717+ 914B ED B8            lddr                                                ; Limpiamos.
 718+ 914D
 719+ 914D 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 9150 22 0F 8A         ld (Stack_snapshot_disparos),hl
 721+ 9153
 722+ 9153 C9               ret
 723+ 9154
 724+ 9154              ; -------------------------------------------------------------------------------------------------------------
 725+ 9154              ;
 726+ 9154              ;   18/07/23
 727+ 9154              ;
 728+ 9154
 729+ 9154              Motor_de_disparos
 730+ 9154
 731+ 9154              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9154
 733+ 9154 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9157 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 915A
 736+ 915A CD 8B 8D     2 call Extrae_address
 737+ 915D 7E               ld a,(hl)
 738+ 915E A7               and a
 739+ 915F 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9161
 741+ 9161              ; ----- ----- ----- ----- ----- -----
 742+ 9161
 743+ 9161 C5               push bc
 744+ 9162 CD 26 92         call foto_disparo_a_borrar
 745+ 9165
 746+ 9165              ; Existe colisión con este disparo???
 747+ 9165
 748+ 9165 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9166 7E               ld a,(hl)
 750+ 9167 2B               dec hl
 751+ 9168 E6 01            and 1
 752+ 916A 28 1D            jr z,9F
 753+ 916C
 754+ 916C              ;   En este punto:
 755+ 916C              ;
 756+ 916C              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 916C              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 916C              ;   _con la entidad).
 759+ 916C              ;
 760+ 916C              ;   Disparo_2A defw 0                                ; Control.
 761+ 916C              ;    defw 0                                          ; Puntero objeto.
 762+ 916C              ;    defw 0                                          ; Puntero de impresión.
 763+ 916C              ;    defw 0                                          ; Rutina de impresión.
 764+ 916C
 765+ 916C E5               push hl
 766+ 916D
 767+ 916D 06 04            ld b,4
 768+ 916F 23           19 inc hl
 769+ 9170 10 FD            djnz 19B
 770+ 9172
 771+ 9172 CD 8B 8D         call Extrae_address
 772+ 9175 CD 50 9D         call Genera_coordenadas_disparo
 773+ 9178
 774+ 9178              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9178
 776+ 9178 21 35 8A         ld hl,Coordenadas_disparo_certero
 777+ 917B 72               ld (hl),d
 778+ 917C 23               inc hl
 779+ 917D 73               ld (hl),e
 780+ 917E
 781+ 917E              ; Elimino el disparo de la base de datos.
 782+ 917E
 783+ 917E E1               pop hl
 784+ 917F CD A5 92         call Elimina_disparo_de_base_de_datos
 785+ 9182 21 32 8A         ld hl,Impacto2
 786+ 9185 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9187
 788+ 9187 18 06            jr 11F
 789+ 9189
 790+ 9189 CD 4F 92     9 call Mueve_disparo
 791+ 918C CD 26 92         call foto_disparo_a_borrar
 792+ 918F
 793+ 918F C1           11 pop bc
 794+ 9190 18 04            jr 7F
 795+ 9192
 796+ 9192              ; ----- ----- ----- ----- ----- -----
 797+ 9192
 798+ 9192 ED 42        1 sbc hl,bc
 799+ 9194 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9196
 801+ 9196 2A 30 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9199 23               inc hl
 803+ 919A 23               inc hl
 804+ 919B 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 919E 18 BA            jr 2B
 806+ 91A0
 807+ 91A0 CD 54 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91A3              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91A3
 810+ 91A3              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91A3
 812+ 91A3 01 8A 85         ld bc,Disparo_11
 813+ 91A6 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91A9
 815+ 91A9 CD 8B 8D     5 call Extrae_address
 816+ 91AC 7E               ld a,(hl)
 817+ 91AD A7               and a
 818+ 91AE 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91B0
 820+ 91B0              ; ----- ----- ----- ----- ----- -----
 821+ 91B0
 822+ 91B0 C5               push bc
 823+ 91B1 CD 26 92         call foto_disparo_a_borrar
 824+ 91B4
 825+ 91B4              ; Existe colisión con este disparo???
 826+ 91B4
 827+ 91B4 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91B5 7E               ld a,(hl)
 829+ 91B6 2B               dec hl
 830+ 91B7 E6 01            and 1
 831+ 91B9 28 4D            jr z,10F
 832+ 91BB
 833+ 91BB              ;! La colisión se produce con Amadeus???
 834+ 91BB              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91BB
 836+ 91BB E5               push hl
 837+ 91BC
 838+ 91BC 06 04            ld b,4
 839+ 91BE 23           16 inc hl
 840+ 91BF 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91C1
 842+ 91C1 CD 8B 8D         call Extrae_address
 843+ 91C4 CD 50 9D         call Genera_coordenadas_disparo
 844+ 91C7
 845+ 91C7 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91C8 FE 16            cp $16
 847+ 91CA 38 2A            jr c,15F
 848+ 91CC
 849+ 91CC
 850+ 91CC              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91CC
 852+ 91CC D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91CD
 854+ 91CD              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91CD
 856+ 91CD
 857+ 91CD 2A 3D 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91D0
 859+ 91D0              ; Coordenada X de Amadeus en D.
 860+ 91D0
 861+ 91D0 7D               ld a,l
 862+ 91D1 E6 1F            and $1F
 863+ 91D3 57               ld d,a
 864+ 91D4
 865+ 91D4 21 AC 85         ld hl,Amadeus_db+8
 866+ 91D7 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91D8
 868+ 91D8 21 37 8A         ld hl,Coordenadas_X_Amadeus
 869+ 91DB CD B0 92         call Guarda_coordenadas_X
 870+ 91DE
 871+ 91DE D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91DF
 873+ 91DF              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91DF
 875+ 91DF 06 02            ld b,2
 876+ 91E1 C5           20 push bc
 877+ 91E2
 878+ 91E2 06 03            ld b,3
 879+ 91E4 21 37 8A         ld hl,Coordenadas_X_Amadeus
 880+ 91E7 7E           18 ld a,(hl)
 881+ 91E8 BA               cp d
 882+ 91E9 20 04            jr nz,17F
 883+ 91EB
 884+ 91EB              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91EB
 886+ 91EB C1               pop bc
 887+ 91EC E1               pop hl
 888+ 91ED 18 0D            jr 14F
 889+ 91EF
 890+ 91EF 23           17 inc hl
 891+ 91F0 10 F5            djnz 18B
 892+ 91F2
 893+ 91F2 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91F3
 895+ 91F3 C1               pop bc
 896+ 91F4 10 EB            djnz 20B
 897+ 91F6
 898+ 91F6
 899+ 91F6              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91F6              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91F6
 902+ 91F6 E1           15 pop hl
 903+ 91F7 23               inc hl
 904+ 91F8 35               dec (hl)
 905+ 91F9 2B               dec hl
 906+ 91FA 18 0C            jr 10F
 907+ 91FC
 908+ 91FC              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91FC              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91FC
 911+ 91FC E5           14 push hl
 912+ 91FD CD A5 92         call Elimina_disparo_de_base_de_datos
 913+ 9200 21 32 8A         ld hl,Impacto2
 914+ 9203 CB CE            set 1,(hl)
 915+ 9205 E1               pop hl
 916+ 9206 18 06            jr 12F
 917+ 9208
 918+ 9208              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9208
 920+ 9208 CD 4F 92     10 call Mueve_disparo
 921+ 920B CD 26 92         call foto_disparo_a_borrar
 922+ 920E C1           12 pop bc
 923+ 920F
 924+ 920F 18 04            jr 8F
 925+ 9211
 926+ 9211              ; ----- ----- ----- ----- ----- -----
 927+ 9211
 928+ 9211 ED 42        4 sbc hl,bc
 929+ 9213 28 0A            jr z,6F
 930+ 9215
 931+ 9215 2A 2E 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9218 23               inc hl
 933+ 9219 23               inc hl
 934+ 921A 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 921D 18 8A            jr 5B
 936+ 921F
 937+ 921F CD 4D 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9222 CD EC 92         call Limpia_Coordenadas_X
 939+ 9225 C9               ret
 940+ 9226
 941+ 9226              ; ------------------------------------------------------------------
 942+ 9226
 943+ 9226              foto_disparo_a_borrar
 944+ 9226
 945+ 9226 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9227 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9228 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9229
 949+ 9229 E5               push hl
 950+ 922A 23               inc hl
 951+ 922B 23               inc hl
 952+ 922C ED 73 09 8A      ld (Stack),sp
 953+ 9230 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9231 FD E1            pop iy
 955+ 9233 DD E1            pop ix
 956+ 9235 E1               pop hl
 957+ 9236 ED 7B 09 8A      ld sp,(Stack)
 958+ 923A 3A F8 89         ld a,(Ctrl_1)
 959+ 923D CB C7            set 0,a
 960+ 923F 32 F8 89         ld (Ctrl_1),a
 961+ 9242 CD A0 7F         call Guarda_foto_registros
 962+ 9245 3A F8 89         ld a,(Ctrl_1)
 963+ 9248 CB 87            res 0,a
 964+ 924A 32 F8 89         ld (Ctrl_1),a
 965+ 924D E1               pop hl
 966+ 924E C9               ret
 967+ 924F
 968+ 924F              ;---------------------------------------------------
 969+ 924F              ;
 970+ 924F              ;   18/07/23
 971+ 924F              ;
 972+ 924F
 973+ 924F              Mueve_disparo
 974+ 924F
 975+ 924F              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 924F              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 924F              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 924F
 979+ 924F E5               push hl
 980+ 9250
 981+ 9250 7E               ld a,(hl)
 982+ 9251
 983+ 9251 06 04            ld b,4
 984+ 9253 23           1 inc hl
 985+ 9254 10 FD            djnz 1B
 986+ 9256
 987+ 9256              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9256
 989+ 9256 CD 8B 8D         call Extrae_address
 990+ 9259
 991+ 9259 E6 01            and 1
 992+ 925B 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 925D
 994+ 925D              ; Disparo hacia arriba, (Amadeus).
 995+ 925D
 996+ 925D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 925D              ; _ de la dificultad.
 998+ 925D
 999+ 925D CD DD 96         call PreviousScan
1000+ 9260 CD DD 96         call PreviousScan
1001+ 9263 CD DD 96         call PreviousScan
1002+ 9266 CD DD 96         call PreviousScan
1003+ 9269
1004+ 9269              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9269
1006+ 9269 7C               ld a,h
1007+ 926A FE 40            cp $40
1008+ 926C 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 926E
1010+ 926E              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 926E
1012+ 926E EB               ex de,hl
1013+ 926F 06 04            ld b,4
1014+ 9271 2B           6 dec hl
1015+ 9272 10 FD            djnz 6B
1016+ 9274
1017+ 9274 CD A5 92         call Elimina_disparo_de_base_de_datos
1018+ 9277 E1               pop hl
1019+ 9278 18 10            jr 7F
1020+ 927A
1021+ 927A              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 927A              ; HL contiene el puntero de impresión del disparo.
1023+ 927A              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 927A
1025+ 927A D5           3 push de
1026+ 927B C5               push bc
1027+ 927C
1028+ 927C CD 44 90         call Comprueba_Colision
1029+ 927F
1030+ 927F              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 927F
1032+ 927F 78               ld a,b
1033+ 9280
1034+ 9280 C1               pop bc
1035+ 9281 D1               pop de
1036+ 9282
1037+ 9282 EB               ex de,hl
1038+ 9283
1039+ 9283 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9284 23               inc hl                                      ; _ movimiento.
1041+ 9285 72               ld (hl),d
1042+ 9286
1043+ 9286 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9287
1045+ 9287 23               inc hl                                      ; _ en curso.
1046+ 9288 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9289 2B               dec hl
1048+ 928A
1049+ 928A C9           7 ret
1050+ 928B
1051+ 928B              ; Disparo hacia abajo, (Entidad).
1052+ 928B
1053+ 928B 3A 3F 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 928E 47               ld b,a
1055+ 928F
1056+ 928F CD CE 96     4 call NextScan
1057+ 9292 10 FB            djnz 4B
1058+ 9294
1059+ 9294              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9294
1061+ 9294 7C               ld a,h
1062+ 9295 FE 58            cp $58
1063+ 9297 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9299
1065+ 9299 EB               ex de,hl
1066+ 929A 06 04            ld b,4
1067+ 929C 2B           5 dec hl
1068+ 929D 10 FD            djnz 5B
1069+ 929F
1070+ 929F CD A5 92         call Elimina_disparo_de_base_de_datos
1071+ 92A2 E1               pop hl
1072+ 92A3 18 E5            jr 7B
1073+ 92A5
1074+ 92A5              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92A5
1076+ 92A5 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92A8 AF               xor a
1078+ 92A9 77               ld (hl),a
1079+ 92AA 54               ld d,h
1080+ 92AB 5D               ld e,l
1081+ 92AC 13               inc de
1082+ 92AD ED B0            ldir
1083+ 92AF C9               ret
1084+ 92B0
1085+ 92B0              ; -----------------------------------------------------------------
1086+ 92B0              ;
1087+ 92B0              ;   19/7/23
1088+ 92B0              ;
1089+ 92B0              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92B0              ;
1091+ 92B0              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92B0              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92B0              ;
1094+ 92B0              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92B0              ;
1096+ 92B0              ;   INPUTS:
1097+ 92B0              ;
1098+ 92B0              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92B0              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92B0
1101+ 92B0              ;   MODIFICA: A, HL, BC y DE.
1102+ 92B0
1103+ 92B0              Guarda_coordenadas_X
1104+ 92B0
1105+ 92B0 7B               ld a,e
1106+ 92B1 A7               and a
1107+ 92B2 20 04            jr nz,1F
1108+ 92B4
1109+ 92B4 06 02            ld b,2
1110+ 92B6 18 02            jr 2F
1111+ 92B8
1112+ 92B8 06 03        1 ld b,3
1113+ 92BA 72           2 ld (hl),d
1114+ 92BB 23               inc hl
1115+ 92BC 14               inc d
1116+ 92BD 10 FB            djnz 2B
1117+ 92BF
1118+ 92BF C9               ret
1119+ 92C0
1120+ 92C0              ; -----------------------------------------------------------------
1121+ 92C0              ;
1122+ 92C0              ;   12/04/23
1123+ 92C0              ;
1124+ 92C0
1125+ 92C0 3A 32 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92C3 A7               and a
1127+ 92C4 C8               ret z
1128+ 92C5
1129+ 92C5 FE 04            cp 4
1130+ 92C7 20 09            jr nz,1F
1131+ 92C9
1132+ 92C9
1133+ 92C9              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92C9
1135+ 92C9 CD E5 90         call Detecta_colision_nave_entidad
1136+ 92CC
1137+ 92CC 21 32 8A         ld hl,Impacto2
1138+ 92CF CB 5E            bit 3,(hl)
1139+ 92D1 C0               ret nz                                               ; Existe colisión, RET.
1140+ 92D2
1141+ 92D2              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92D2              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92D2
1144+ 92D2 21 32 8A     1 ld hl,Impacto2
1145+ 92D5 CB 4E            bit 1,(hl)
1146+ 92D7 28 07            jr z,2F
1147+ 92D9
1148+ 92D9 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92DC 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92DE 18 0B            jr 3F
1151+ 92E0
1152+ 92E0 21 32 8A     2 ld hl,Impacto2
1153+ 92E3 CB 46            bit 0,(hl)
1154+ 92E5 C8               ret z
1155+ 92E6
1156+ 92E6              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92E6
1158+ 92E6 21 F8 89         ld hl,Ctrl_1
1159+ 92E9 CB D6            set 2,(hl)
1160+ 92EB
1161+ 92EB C9           3 ret
1162+ 92EC
1163+ 92EC              ; -----------------------------------------------------------------
1164+ 92EC              ;
1165+ 92EC              ;   19/7/23
1166+ 92EC              ;
1167+ 92EC              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92EC
1169+ 92EC AF           Limpia_Coordenadas_X xor a
1170+ 92ED 06 06            ld b,6
1171+ 92EF 21 37 8A         ld hl,Coordenadas_X_Amadeus
1172+ 92F2 77           1 ld (hl),a
1173+ 92F3 23               inc hl
1174+ 92F4 10 FC            djnz 1B
1175+ 92F6 C9               ret
1176+ 92F7
1177+ 92F7              ; -----------------------------------------------------------------
1178+ 92F7              ;
1179+ 92F7              ;   25/04/23
1180+ 92F7              ;
1181+ 92F7
1182+ 92F7              Determina_resultado_comparativa
1183+ 92F7
1184+ 92F7              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92F7              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92F7              ;
1187+ 92F7              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92F7              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92F7              ;
1190+ 92F7              ;   SBC HL,DE
1191+ 92F7
1192+ 92F7              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92F7              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92F7
1195+ 92F7              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92F7              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92F7
1198+ 92F7
1199+ 92F7 3A C9 89         ld a,(Cuad_objeto)
1200+ 92FA FE 02            cp 2
1201+ 92FC 28 26            jr z,2F
1202+ 92FE 38 24            jr c,2F
1203+ 9300
1204+ 9300              ; Cuadrantes 3º y 4º
1205+ 9300
1206+ 9300 E6 01            and 1
1207+ 9302 28 10            jr z,4F
1208+ 9304
1209+ 9304              ; Cuadrante 3º
1210+ 9304
1211+ 9304 7C               ld a,h
1212+ 9305 06 00            ld b,0
1213+ 9307
1214+ 9307 CD 92 93         call Compara_cositas_H3
1215+ 930A
1216+ 930A 04               inc b
1217+ 930B 05               dec b
1218+ 930C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 930D
1220+ 930D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 930E 06 00            ld b,0
1222+ 9310
1223+ 9310 CD A4 93         call Compara_cositas_L3
1224+ 9313 C9               ret
1225+ 9314
1226+ 9314              ; Cuadrante 4º
1227+ 9314
1228+ 9314 7C           4 ld a,h
1229+ 9315 06 00            ld b,0
1230+ 9317
1231+ 9317 CD B6 93         call Compara_cositas_H4
1232+ 931A
1233+ 931A 04               inc b
1234+ 931B 05               dec b
1235+ 931C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 931D
1237+ 931D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 931E 06 00            ld b,0
1239+ 9320
1240+ 9320 CD CC 93         call Compara_cositas_L4
1241+ 9323 C9               ret
1242+ 9324
1243+ 9324              ; Cuadrantes 1º y 2º.
1244+ 9324
1245+ 9324 28 10        2 jr z,3F
1246+ 9326
1247+ 9326              ; 1er Cuadrante
1248+ 9326
1249+ 9326 7C               ld a,h
1250+ 9327 06 00            ld b,0
1251+ 9329
1252+ 9329 CD 6A 93         call Compara_cositas_H1
1253+ 932C
1254+ 932C 04               inc b
1255+ 932D 05               dec b
1256+ 932E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 932F
1258+ 932F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9330 06 00            ld b,0
1260+ 9332
1261+ 9332 CD 80 93         call Compara_cositas_L1
1262+ 9335 C9               ret
1263+ 9336
1264+ 9336
1265+ 9336              ; 2º Cuadrante
1266+ 9336
1267+ 9336 7C           3 ld a,h
1268+ 9337 06 00            ld b,0
1269+ 9339
1270+ 9339 CD 46 93         call Compara_cositas_H2
1271+ 933C
1272+ 933C 04               inc b
1273+ 933D 05               dec b
1274+ 933E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 933F
1276+ 933F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9340 06 00            ld b,0
1278+ 9342
1279+ 9342 CD 58 93         call Compara_cositas_L2
1280+ 9345 C9               ret
1281+ 9346
1282+ 9346 A7           Compara_cositas_H2 and a
1283+ 9347 28 0D            jr z,1F
1284+ 9349              ;    cp $fd
1285+ 9349              ;    jr z,1F
1286+ 9349              ;    cp $fe
1287+ 9349              ;    jr z,1F
1288+ 9349 FE FF            cp $ff
1289+ 934B 28 09            jr z,1F
1290+ 934D FE 01            cp $01
1291+ 934F 28 05            jr z,1F
1292+ 9351 FE 02            cp $02
1293+ 9353 28 01            jr z,1F
1294+ 9355 C0               ret nz
1295+ 9356 04           1 inc b
1296+ 9357 C9               ret
1297+ 9358
1298+ 9358 A7           Compara_cositas_L2 and a
1299+ 9359 28 0D            jr z,1F
1300+ 935B              ;    cp $fd
1301+ 935B              ;    jr z,1F
1302+ 935B FE FE            cp $fe
1303+ 935D 28 09            jr z,1F
1304+ 935F FE FF            cp $ff
1305+ 9361 28 05            jr z,1F
1306+ 9363 FE 01            cp $01
1307+ 9365 28 01            jr z,1F
1308+ 9367              ;    cp $02
1309+ 9367              ;    jr z,1F
1310+ 9367 C0               ret nz
1311+ 9368 04           1 inc b
1312+ 9369 C9               ret
1313+ 936A
1314+ 936A A7           Compara_cositas_H1 and a
1315+ 936B 28 11            jr z,1F
1316+ 936D              ;    cp $fd
1317+ 936D              ;    jr z,1F
1318+ 936D              ;    cp $fe
1319+ 936D              ;    jr z,1F
1320+ 936D FE FF            cp $ff
1321+ 936F 28 0D            jr z,1F
1322+ 9371 FE 01            cp $01
1323+ 9373 28 09            jr z,1F
1324+ 9375 FE 02            cp $02
1325+ 9377 28 05            jr z,1F
1326+ 9379 FE 03            cp $03
1327+ 937B 28 01            jr z,1F
1328+ 937D C0               ret nz
1329+ 937E 04           1 inc b
1330+ 937F C9               ret
1331+ 9380
1332+ 9380 A7           Compara_cositas_L1 and a
1333+ 9381 28 0D            jr z,1F
1334+ 9383              ;    cp $fd
1335+ 9383              ;    jr z,1F
1336+ 9383              ;    cp $fe
1337+ 9383              ;    jr z,1F
1338+ 9383              ;    cp $ff
1339+ 9383              ;    jr z,1F
1340+ 9383 FE 01            cp $01
1341+ 9385 28 09            jr z,1F
1342+ 9387 FE 02            cp $02
1343+ 9389 28 05            jr z,1F
1344+ 938B FE 03            cp $03
1345+ 938D 28 01            jr z,1F
1346+ 938F C0               ret nz
1347+ 9390 04           1 inc b
1348+ 9391 C9               ret
1349+ 9392
1350+ 9392 A7           Compara_cositas_H3 and a
1351+ 9393 28 0D            jr z,1F
1352+ 9395              ;    cp $fd
1353+ 9395              ;    jr z,1F
1354+ 9395 FE FE            cp $fe
1355+ 9397 28 09            jr z,1F
1356+ 9399 FE FF            cp $ff
1357+ 939B 28 05            jr z,1F
1358+ 939D FE 01            cp $01
1359+ 939F 28 01            jr z,1F
1360+ 93A1              ;    cp $02
1361+ 93A1              ;    jr z,1F
1362+ 93A1              ;    cp $03
1363+ 93A1              ;    jr z,1F
1364+ 93A1 C0               ret nz
1365+ 93A2 04           1 inc b
1366+ 93A3 C9               ret
1367+ 93A4
1368+ 93A4 A7           Compara_cositas_L3 and a
1369+ 93A5 28 0D            jr z,1F
1370+ 93A7              ;    cp $fd
1371+ 93A7              ;    jr z,1F
1372+ 93A7              ;    cp $fe
1373+ 93A7              ;    jr z,1F
1374+ 93A7              ;    cp $ff
1375+ 93A7              ;    jr z,1F
1376+ 93A7 FE 01            cp $01
1377+ 93A9 28 09            jr z,1F
1378+ 93AB FE 02            cp $02
1379+ 93AD 28 05            jr z,1F
1380+ 93AF FE 03            cp $03
1381+ 93B1 28 01            jr z,1F
1382+ 93B3 C0               ret nz
1383+ 93B4 04           1 inc b
1384+ 93B5 C9               ret
1385+ 93B6
1386+ 93B6 A7           Compara_cositas_H4 and a
1387+ 93B7 28 11            jr z,1F
1388+ 93B9 FE FD            cp $fd
1389+ 93BB 28 0D            jr z,1F
1390+ 93BD FE FE            cp $fe
1391+ 93BF 28 09            jr z,1F
1392+ 93C1 FE FF            cp $ff
1393+ 93C3 28 05            jr z,1F
1394+ 93C5 FE 01            cp $01
1395+ 93C7 28 01            jr z,1F
1396+ 93C9              ;    cp $02
1397+ 93C9              ;    jr z,1F
1398+ 93C9              ;    cp $03
1399+ 93C9              ;    jr z,1F
1400+ 93C9 C0               ret nz
1401+ 93CA 04           1 inc b
1402+ 93CB C9               ret
1403+ 93CC
1404+ 93CC A7           Compara_cositas_L4 and a
1405+ 93CD 28 0D            jr z,1F
1406+ 93CF              ;    cp $fd
1407+ 93CF              ;    jr z,1F
1408+ 93CF FE FE            cp $fe
1409+ 93D1 28 09            jr z,1F
1410+ 93D3 FE FF            cp $ff
1411+ 93D5 28 05            jr z,1F
1412+ 93D7 FE 01            cp $01
1413+ 93D9 28 01            jr z,1F
1414+ 93DB              ;    cp $02
1415+ 93DB              ;    jr z,1F
1416+ 93DB              ;    cp $03
1417+ 93DB              ;    jr z,1F
1418+ 93DB C0               ret nz
1419+ 93DC 04           1 inc b
1420+ 93DD C9               ret
# file closed: Disparo.asm
1416  93DE              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93DE              ; ******************************************************************************************************************************************************************************************
   2+ 93DE              ;
   3+ 93DE              ; 26/06/23
   4+ 93DE              ;
   5+ 93DE              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93DE
   7+ 93DE CD C2 96     Draw call Prepara_draw
   8+ 93E1 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93E2 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93E3 28 05        	jr z,2F
  11+ 93E5
  12+ 93E5 3A C9 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93E8 18 0C        	jr 1F
  14+ 93EA
  15+ 93EA 2A C7 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93ED 22 B7 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93F0 CD 7F 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93F3              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93F3 CD CC 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93F6
  21+ 93F6 3A E3 89     1 ld a,(Ctrl_0)
  22+ 93F9 CB 6F        	bit 5,a
  23+ 93FB 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93FD
  25+ 93FD CD 15 94     	call Comprueba_limite_horizontal
  26+ 9400 CD A5 94     	call Comprueba_limite_vertical
  27+ 9403
  28+ 9403              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9403              ; -----------------------
  30+ 9403              ; -----------------------
  31+ 9403              ; -----------------------
  32+ 9403
  33+ 9403 CD F2 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9406 CD 29 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9409 CD 88 96     	call Define_rutina_de_impresion
  36+ 940C
  37+ 940C 3A E3 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 940F CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9411 32 E3 89     	ld (Ctrl_0),a
  40+ 9414
  41+ 9414 C9           	ret
  42+ 9415
  43+ 9415              ; *******************************************************************************************************************************************************************************************
  44+ 9415              ;	21/01/23
  45+ 9415              ;
  46+ 9415              ; 	Comprueba_limite_horizontal.
  47+ 9415              ;
  48+ 9415              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9415              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9415              ;
  51+ 9415              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9415              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9415              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9415              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9415
  56+ 9415
  57+ 9415
  58+ 9415 3A E3 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9418 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 941A 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 941C E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 941E 32 E3 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9421 18 09            jr 6F
  64+ 9423 CB 5F        1 bit 3,a
  65+ 9425 28 0A            jr z,2F
  66+ 9427 E6 F7            and $f7
  67+ 9429 32 E3 89         ld (Ctrl_0),a
  68+ 942C CD 7F 95     6 call Inicializacion
  69+ 942F 18 5B            jr 5F
  70+ 9431 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9432
  72+ 9432              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9432              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9432
  75+ 9432 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9433 2A F3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9436 CD 9A 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9439 67           	ld h,a
  79+ 943A EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 943B CD 9A 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 943E 67           	ld h,a
  82+ 943F A7           	and a
  83+ 9440 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9442 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9443 3A C9 89     	ld a,(Cuad_objeto)
  86+ 9446 FE 02        	cp 2
  87+ 9448 38 1E        	jr c,3F
  88+ 944A 28 1C        	jr z,3F
  89+ 944C 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 944D 28 23            jr z,7F
  91+ 944F 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9451 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9453 E1           	pop hl
  94+ 9454
  95+ 9454              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9454              ; _para indicar con E="2" en caso necesario.
  97+ 9454
  98+ 9454 E5               push hl
  99+ 9455 C5               push bc
 100+ 9456 CD 9A 99     	call calcula_tercio
 101+ 9459 FE 01        	cp 1
 102+ 945B 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 945D CD 8D 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9460 28 26            jr z,9F
 105+ 9462 38 24            jr c,9F
 106+ 9464 1E 00        11 ld e,0
 107+ 9466 18 22            jr 8F
 108+ 9468 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9469 28 07        	jr z, 7F
 110+ 946B 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 946D 1E 00         	ld e,0
 112+ 946F E1           	pop hl
 113+ 9470 18 04        	jr 4F
 114+ 9472 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9474 18 15            jr 10F
 116+ 9476
 117+ 9476              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9476              ; _para indicar con E="2" en caso necesario.
 119+ 9476
 120+ 9476 E5           4 push hl
 121+ 9477 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9478 CD 9A 99     	call calcula_tercio
 123+ 947B FE 01        	cp 1
 124+ 947D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 947F CD 8D 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9482 28 04            jr z,9F
 127+ 9484 30 02            jr nc,9F
 128+ 9486 18 02        	jr 8F
 129+ 9488 1E 02        9 ld e,2
 130+ 948A C1           8 pop bc
 131+ 948B E1           10 pop hl
 132+ 948C C9           5 ret
 133+ 948D
 134+ 948D              ; --------------------
 135+ 948D              ;
 136+ 948D              ; 25/08/22
 137+ 948D
 138+ 948D CD 9A 99     Comprueba_centro call calcula_tercio
 139+ 9490 67               ld h,a
 140+ 9491 08           	ex af,af
 141+ 9492 FE 02        	cp 2
 142+ 9494 38 07        	jr c,1F
 143+ 9496 28 05        	jr z,1F
 144+ 9498 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 949B 18 03        	jr 2F
 146+ 949D 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94A0 08           2 ex af,af
 148+ 94A1 A7               and a
 149+ 94A2 ED 42            sbc hl,bc
 150+ 94A4 C9               ret
 151+ 94A5
 152+ 94A5              ; *********************************************************************************************************************************************************************************************
 153+ 94A5              ;
 154+ 94A5              ;   16/8/22
 155+ 94A5              ;
 156+ 94A5              ;	Comprueba_limite_vertical
 157+ 94A5              ;
 158+ 94A5              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94A5              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94A5              ;
 161+ 94A5
 162+ 94A5 2A B7 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94A8 7D           	ld a,l
 164+ 94A9 E6 1F        	and $1F
 165+ 94AB 57           	ld d,a
 166+ 94AC 3A F5 89     	ld a,(Limite_vertical)
 167+ 94AF BA           	cp d 											; Límite - Posición.
 168+ 94B0 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94B1 3A C9 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94B4 CB 47        	bit 0,a
 171+ 94B6 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94B8
 173+ 94B8              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94B8
 175+ 94B8 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94B9 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94BB
 178+ 94BB              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94BB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94BB
 181+ 94BB 3A BB 89         ld a,(Coordenada_X)
 182+ 94BE 16 0F            ld d,Centro_izquierda
 183+ 94C0 A7               and a
 184+ 94C1 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94C2 28 1E            jr z,3F
 186+ 94C4 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94C6              ;                                                    ; _salimos sin modificar nada.
 188+ 94C6 18 0E            jr 2F
 189+ 94C8 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94C9 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94CB
 192+ 94CB              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94CB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94CB
 195+ 94CB 3A BB 89         ld a,(Coordenada_X)
 196+ 94CE 16 10            ld d,Centro_derecha
 197+ 94D0 A7               and a
 198+ 94D1 92               sub d
 199+ 94D2 28 0E            jr z,3F
 200+ 94D4 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94D6              ;                                                    ; _salimos sin modificar nada.
 202+ 94D6 CB 43        2 bit 0,e
 203+ 94D8 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94DA C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94DB CD 6F 95         call Modificaccionne
 206+ 94DE C1           	pop bc
 207+ 94DF CD 7F 95         call Inicializacion
 208+ 94E2 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94E3
 210+ 94E3              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94E3
 212+ 94E3 C5           4 push bc
 213+ 94E4 01 B6 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94E7 0A           	ld a,(bc)
 215+ 94E8 3D           	dec a
 216+ 94E9 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94EA 7D           	ld a,l
 218+ 94EB 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94EC CB 47        	bit 0,a
 220+ 94EE 28 03        	jr z,5F
 221+ 94F0 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94F1 18 2E        	jr 7F
 223+ 94F3
 224+ 94F3              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94F3
 226+ 94F3 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94F4 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94F5 3A E3 89     	ld a,(Ctrl_0)
 229+ 94F8 CB 4F        	bit 1,a
 230+ 94FA 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94FC F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94FD
 233+ 94FD              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94FD
 235+ 94FD 1C               inc e
 236+ 94FE 1D               dec e
 237+ 94FF 20 07            jr nz,12F
 238+ 9501 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9502 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9503 22 B7 89     	ld (Posicion_actual),hl
 241+ 9506 18 44        13 jr 9F
 242+ 9508 CB 43        12 bit 0,e
 243+ 950A 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 950C              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 950C C1           	pop bc
 246+ 950D 18 D3        	jr 3B
 247+ 950F 80           14 add b
 248+ 9510 6F               ld l,a
 249+ 9511 22 B7 89     	ld (Posicion_actual),hl
 250+ 9514 CD 6F 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9517 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9519 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 951B 32 E3 89         ld (Ctrl_0),a
 254+ 951E F1           	pop af
 255+ 951F 18 2B        	jr 9F
 256+ 9521
 257+ 9521              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9521
 259+ 9521 F5           7 push af
 260+ 9522 3A E3 89     	ld a,(Ctrl_0)
 261+ 9525 CB 47        	bit 0,a
 262+ 9527 20 1D        	jr nz,8F
 263+ 9529 F1           	pop af
 264+ 952A
 265+ 952A              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 952A
 267+ 952A 1C           	inc e
 268+ 952B 1D               dec e
 269+ 952C 20 07            jr nz,10F
 270+ 952E 90           	sub b
 271+ 952F 6F               ld l,a
 272+ 9530 22 B7 89     	ld (Posicion_actual),hl
 273+ 9533 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9535              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9535 CB 43        10 bit 0,e
 276+ 9537 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9539              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9539 C1           	pop bc
 279+ 953A 18 A6        	jr 3B
 280+ 953C 90           16 sub b
 281+ 953D 6F               ld l,a
 282+ 953E 22 B7 89     	ld (Posicion_actual),hl
 283+ 9541 CD 6F 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9544 18 06            jr 9F
 285+ 9546 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9548 32 E3 89         ld (Ctrl_0),a
 287+ 954B F1           	pop af
 288+ 954C C1           9 pop bc
 289+ 954D 1E 00        	ld e,0
 290+ 954F CD 7F 95         call Inicializacion
 291+ 9552 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9553 08           	ex af,af
 293+ 9554 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9555 18 8B            jr 3B
 295+ 9557
 296+ 9557              ; --------------------
 297+ 9557
 298+ 9557 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9559 CD DD 96     1 call PreviousScan
 300+ 955C 10 FB            djnz 1B
 301+ 955E 22 B7 89     	ld (Posicion_actual),hl
 302+ 9561 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9562 C9           	ret
 304+ 9563
 305+ 9563              ; --------------------
 306+ 9563
 307+ 9563 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9565 CD CE 96     1 call NextScan
 309+ 9568 10 FB            djnz 1B
 310+ 956A 22 B7 89     	ld (Posicion_actual),hl
 311+ 956D AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 956E C9           	ret
 313+ 956F
 314+ 956F              ; --------------------
 315+ 956F              ;
 316+ 956F              ;	22/01/23
 317+ 956F              ;
 318+ 956F              ;	E="1". Hemos cambiado de cuadrante.
 319+ 956F              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 956F              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 956F
 322+ 956F
 323+ 956F              Modificaccionne
 324+ 956F
 325+ 956F 3A C9 89     	ld a,(Cuad_objeto)
 326+ 9572 FE 02        	cp 2
 327+ 9574 CC 57 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9577 DC 57 95         call c,Modifica_Pos_actual
 329+ 957A C8           	ret z
 330+ 957B CD 63 95         call Modifica_Pos_actual2
 331+ 957E C9               ret
 332+ 957F
 333+ 957F              ; *************************************************************************************************************************************************************************************************
 334+ 957F              ;
 335+ 957F              ;	13/8/22
 336+ 957F              ;
 337+ 957F              ;	Inicializacion
 338+ 957F              ;
 339+ 957F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 957F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 957F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 957F              ;
 343+ 957F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 957F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 957F              ;	_ desaparece/aparece.
 346+ 957F
 347+ 957F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 957F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 957F              ;
 350+ 957F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 957F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 957F              ; 		   [E] ="0"
 353+ 957F
 354+ 957F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 957F
 356+ 957F CD 9A 99     Inicializacion call calcula_tercio
 357+ 9582 28 36        	jr z,primit
 358+ 9584 E6 02        	and 2
 359+ 9586 20 07        	jr nz,segmit
 360+ 9588 7D           	ld a,l
 361+ 9589 FE 7F        	cp $7f
 362+ 958B 38 2D        	jr c,primit
 363+ 958D 28 2B        	jr z,primit
 364+ 958F CD EC 95     segmit call column
 365+ 9592 38 13        	jr c,tercuad
 366+ 9594 3E 04        cuarcuad ld a,4
 367+ 9596 32 C9 89     	ld (Cuad_objeto),a
 368+ 9599 21 20 48     	ld hl,$4820
 369+ 959C 22 F3 89     	ld (Limite_horizontal),hl
 370+ 959F 21 F5 89     	ld hl,Limite_vertical
 371+ 95A2 36 0D        	ld (hl),$0d
 372+ 95A4 08           	ex af,af
 373+ 95A5 18 3C        	jr 1F
 374+ 95A7              tercuad
 375+ 95A7 3E 03        	ld a,3
 376+ 95A9 32 C9 89     	ld (Cuad_objeto),a
 377+ 95AC 21 20 48     	ld hl,$4820
 378+ 95AF 22 F3 89     	ld (Limite_horizontal),hl
 379+ 95B2 21 F5 89     	ld hl,Limite_vertical
 380+ 95B5 36 12        	ld (hl),$12
 381+ 95B7 08           	ex af,af
 382+ 95B8 18 29        	jr 1F
 383+ 95BA CD EC 95     primit call column
 384+ 95BD 38 13        	jr c, primcuad
 385+ 95BF              segcuad
 386+ 95BF 3E 02        	ld a,2
 387+ 95C1 32 C9 89     	ld (Cuad_objeto),a
 388+ 95C4 21 C0 4F     	ld hl,$4fc0
 389+ 95C7 22 F3 89     	ld (Limite_horizontal),hl
 390+ 95CA 21 F5 89     	ld hl,Limite_vertical
 391+ 95CD 36 0D        	ld (hl),$0d
 392+ 95CF 08           	ex af,af
 393+ 95D0 18 11        	jr 1F
 394+ 95D2              primcuad
 395+ 95D2 3E 01        	ld a,1
 396+ 95D4 32 C9 89     	ld (Cuad_objeto),a
 397+ 95D7 21 C0 4F     	ld hl,$4fc0
 398+ 95DA 22 F3 89     	ld (Limite_horizontal),hl
 399+ 95DD 21 F5 89     	ld hl,Limite_vertical
 400+ 95E0 36 12        	ld (hl),$12
 401+ 95E2 08           	ex af,af
 402+ 95E3 CD 25 9D     1 call Genera_coordenadas
 403+ 95E6 21 E3 89     	ld hl,Ctrl_0
 404+ 95E9 CB EE        	set 5,(hl)
 405+ 95EB C9           	ret
 406+ 95EC
 407+ 95EC              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95EC
 409+ 95EC              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95EC              ;
 411+ 95EC              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95EC
 413+ 95EC 7D           column ld a,l
 414+ 95ED E6 1F        	and $1f
 415+ 95EF FE 10         	cp $10
 416+ 95F1 C9            	ret
 417+ 95F2
 418+ 95F2              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95F2              ;
 420+ 95F2              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95F2              ;
 422+ 95F2              ; 14/12/22
 423+ 95F2              ;
 424+ 95F2              ;	Modifica: A y BC.
 425+ 95F2
 426+ 95F2 3A C9 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95F5 E6 01        	and 1
 428+ 95F7 28 17        	jr z,1F
 429+ 95F9
 430+ 95F9              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95F9
 432+ 95F9 3A BB 89     	ld a,(Coordenada_X)
 433+ 95FC 47           	ld b,a
 434+ 95FD 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95FE 79           	ld a,c
 436+ 95FF 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9600 38 08        	jr c,2F
 438+ 9602 47           	ld b,a
 439+ 9603 79           	ld a,c
 440+ 9604 90           	sub b
 441+ 9605 32 F2 89     	ld (Columnas),a
 442+ 9608 18 1B        	jr 4F
 443+ 960A 79           2 ld a,c
 444+ 960B 32 F2 89     	ld (Columnas),a
 445+ 960E 18 15        	jr 4F
 446+ 9610
 447+ 9610              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9610
 449+ 9610 3A BB 89     1 ld a,(Coordenada_X)
 450+ 9613 81           	add c
 451+ 9614 3D           	dec a
 452+ 9615 D6 1F        	sub $1f
 453+ 9617 38 08        	jr c,3F
 454+ 9619 47           	ld b,a
 455+ 961A 79           	ld a,c
 456+ 961B 90           	sub b
 457+ 961C 32 F2 89     	ld (Columnas),a
 458+ 961F 18 04        	jr 4F
 459+ 9621 79           3 ld a,c
 460+ 9622 32 F2 89     	ld (Columnas),a
 461+ 9625 D9           4 exx
 462+ 9626 4F           	ld c,a
 463+ 9627 D9           	exx
 464+ 9628 C9            ret
 465+ 9629
 466+ 9629              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9629              ;
 468+ 9629              ;   19/7/23
 469+ 9629              ;
 470+ 9629              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9629              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9629              ;
 473+ 9629              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9629              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9629              ;
 476+ 9629              ;	DESTRUYE: HL,B Y A.
 477+ 9629
 478+ 9629 3A C9 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 962C FE 02        	cp 2
 480+ 962E 38 18        	jr c,1F
 481+ 9630 28 16        	jr z,1F
 482+ 9632 E6 01        	and 1
 483+ 9634 28 0D        	jr z,3F
 484+ 9636
 485+ 9636              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9636
 487+ 9636 CD 7C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9639
 489+ 9639 7D           9 ld a,l
 490+ 963A E6 1F        	and $1f
 491+ 963C 28 2A        	jr z,7F
 492+ 963E 2B           	dec hl
 493+ 963F 10 F8        	djnz 9B
 494+ 9641 18 25        	jr 7F
 495+ 9643
 496+ 9643              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9643
 498+ 9643 2A B7 89     3 ld hl,(Posicion_actual)
 499+ 9646 18 20        	jr 7F
 500+ 9648
 501+ 9648 28 14        1 jr z,2F
 502+ 964A
 503+ 964A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 964A
 505+ 964A CD 7C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 964D
 507+ 964D 7D           4 ld a,l
 508+ 964E E6 1F        	and $1f
 509+ 9650 28 03        	jr z,6F
 510+ 9652 2B           	dec hl
 511+ 9653 10 F8        	djnz 4B
 512+ 9655 06 0F        6 ld b,15
 513+ 9657 CD DD 96     5 call PreviousScan
 514+ 965A 10 FB        	djnz 5B
 515+ 965C 18 0A        	jr 7F
 516+ 965E
 517+ 965E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 965E
 519+ 965E CD 7C 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9661 06 0F        	ld b,15
 521+ 9663 CD DD 96     8 call PreviousScan
 522+ 9666 10 FB        	djnz 8B
 523+ 9668
 524+ 9668 E5           7 push hl
 525+ 9669 DD E1        	pop ix
 526+ 966B
 527+ 966B 2A B9 89     	ld hl,(Puntero_objeto)
 528+ 966E E5           	push hl
 529+ 966F FD E1        	pop iy
 530+ 9671
 531+ 9671              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9671
 533+ 9671 3A E3 89     	ld a,(Ctrl_0)
 534+ 9674 CB 77        	bit 6,a
 535+ 9676 C8           	ret z
 536+ 9677
 537+ 9677              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9677              ; _ entidad / Amadeus´.
 539+ 9677
 540+ 9677 DD 22 3D 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 967B
 542+ 967B C9           	ret
 543+ 967C
 544+ 967C              ; --------------------------------------------------------------------------------------------------------------------
 545+ 967C              ;
 546+ 967C              ;	2/1/23
 547+ 967C              ;
 548+ 967C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 967C              ;
 550+ 967C              ;	Tras esta rutina tenemos:
 551+ 967C              ;
 552+ 967C              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 967C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 967C              ;
 555+ 967C              ;	DESTRUYE!!!!! HL,B y A.
 556+ 967C
 557+ 967C 2A B7 89     Operandos ld hl,(Posicion_actual)
 558+ 967F 3A F2 89     	ld a,(Columnas)
 559+ 9682 3D           	dec a
 560+ 9683 20 01        	jr nz,1F
 561+ 9685 3C           	inc a
 562+ 9686 47           1 ld b,a
 563+ 9687 C9           	ret
 564+ 9688
 565+ 9688              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9688              ;
 567+ 9688              ;	3/1/23
 568+ 9688              ;
 569+ 9688              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9688              ;
 571+ 9688              ;	Destruye: A,B,HL y DE.
 572+ 9688
 573+ 9688              Define_rutina_de_impresion
 574+ 9688
 575+ 9688 3A B6 89     	ld a,(Columns)
 576+ 968B 47           	ld b,a
 577+ 968C 3A F2 89     	ld a,(Columnas)
 578+ 968F B8           	cp b
 579+ 9690 20 0D        	jr nz,2f
 580+ 9692
 581+ 9692              ;	La entidad se imprime entera.
 582+ 9692
 583+ 9692 21 6A 97     	ld hl, Indice_entidades_completas
 584+ 9695 E6 01        	and 1
 585+ 9697 28 02        	jr z,1F
 586+ 9699
 587+ 9699 23           	inc hl
 588+ 969A 23           	inc hl
 589+ 969B
 590+ 969B CD 8B 8D     1 call Extrae_address
 591+ 969E C9           	ret		;	ret
 592+ 969F
 593+ 969F              ;	La entidad no se imprime entera en pantalla.
 594+ 969F
 595+ 969F 3A C9 89     2 ld a,(Cuad_objeto)
 596+ 96A2 E6 01        	and 1
 597+ 96A4 28 17        	jr z,3F
 598+ 96A6
 599+ 96A6              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96A6
 601+ 96A6 21 6E 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96A9 3A B6 89     4 ld a,(Columns)
 603+ 96AC E6 01        	and 1
 604+ 96AE 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96B0
 606+ 96B0 23           	inc hl
 607+ 96B1 23           	inc hl
 608+ 96B2
 609+ 96B2 3A F2 89     	ld a,(Columnas)
 610+ 96B5 E6 01        	and 1
 611+ 96B7 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96B9
 613+ 96B9 23           	inc hl
 614+ 96BA 23           	inc hl
 615+ 96BB
 616+ 96BB 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96BD
 618+ 96BD 21 74 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96C0 18 E7        	jr 4B
 620+ 96C2
 621+ 96C2              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96C2              ;
 623+ 96C2              ;	Prepara_draw
 624+ 96C2              ;
 625+ 96C2              ;	Es una rutina de carga.
 626+ 96C2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96C2              ;
 628+ 96C2              ;	FUNCIONAMIENTO:
 629+ 96C2              ;
 630+ 96C2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96C2              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96C2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96C2              ;
 634+ 96C2              ;	DESTRUYE:
 635+ 96C2              ;
 636+ 96C2              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96C2
 638+ 96C2 21 B5 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96C5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96C6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96C7 4E           	ld c,(hl)
 642+ 96C8 2A B7 89     	ld hl,(Posicion_actual)
 643+ 96CB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96CD C9           	ret
 645+ 96CE
 646+ 96CE              ;----------------------------------------------------------------------------------------------------------------
 647+ 96CE              ;
 648+ 96CE              ;	5/08/22
 649+ 96CE              ;
 650+ 96CE              ;   NextScan.
 651+ 96CE              ;
 652+ 96CE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96CE              ;
 654+ 96CE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96CE              ;
 656+ 96CE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96CE              ;
 658+ 96CE              ;       DESTRUIDOS: AF y HL !!!
 659+ 96CE              ;
 660+ 96CE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96CE              ;
 662+ 96CE
 663+ 96CE 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96CF 7C               ld a,h
 665+ 96D0 E6 07            and 7
 666+ 96D2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96D3
 668+ 96D3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96D4 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96D6 6F               ld l,a
 671+ 96D7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96D8
 673+ 96D8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96D9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96DB 67               ld h,a
 676+ 96DC C9               ret
 677+ 96DD
 678+ 96DD              ;----------------------------------------------------------------------------------------------------------------
 679+ 96DD              ;
 680+ 96DD              ;	5/08/22
 681+ 96DD              ;
 682+ 96DD              ;   PreviousScan.
 683+ 96DD              ;
 684+ 96DD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96DD              ;
 686+ 96DD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96DD              ;
 688+ 96DD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96DD              ;
 690+ 96DD              ;       DESTRUIDOS: AF y HL !!!
 691+ 96DD              ;
 692+ 96DD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96DD              ;
 694+ 96DD
 695+ 96DD 7C           PreviousScan ld a,h
 696+ 96DE 25               dec h               ; Dec H.
 697+ 96DF E6 07            and 7
 698+ 96E1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96E2
 700+ 96E2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96E3 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96E5 6F               ld l,a
 703+ 96E6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96E7
 705+ 96E7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96E8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96EA 67               ld h,a
 708+ 96EB C9               ret
 709+ 96EC
 710+ 96EC              ; -----------------------------------------------------------------------------------
 711+ 96EC              ;
 712+ 96EC              ;	31/7/23
 713+ 96EC              ;
 714+ 96EC              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96EC              ;	Extrae fotos de Album_de_fotos.
 716+ 96EC
 717+ 96EC              Extrae_foto_entidades
 718+ 96EC
 719+ 96EC              ;	ld a,(Contador_de_frames)
 720+ 96EC              ;	cp $1e
 721+ 96EC              ;	jr z,$
 722+ 96EC
 723+ 96EC 21 01 70     	ld hl,Album_de_fotos+1
 724+ 96EF 7E           	ld a,(hl)
 725+ 96F0 A7           	and a
 726+ 96F1 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 96F2
 728+ 96F2 3A 04 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96F5 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 730+ 96F6 C8           	ret z
 731+ 96F7
 732+ 96F7              ; -----------------------------------
 733+ 96F7
 734+ 96F7 ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96FB 31 00 70     	ld sp,Album_de_fotos
 736+ 96FE
 737+ 96FE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 9700 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 9701 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 9702
 741+ 9702 ED 73 0B 8A  	ld (Stack_2),sp
 742+ 9706 ED 7B 09 8A  	ld sp,(Stack)
 743+ 970A
 744+ 970A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 970A
 746+ 970A 3E CD        	ld a,$cd
 747+ 970C 32 14 97     	ld (Imprime),a
 748+ 970F EB           	ex de,hl
 749+ 9710 22 15 97     	ld (Imprime+1),hl
 750+ 9713 EB           	ex de,hl
 751+ 9714
 752+ 9714              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 9714
 754+ 9714 00 00 00     Imprime db 0,0,0
 755+ 9717
 756+ 9717 3A 04 8A     	ld a,(Numero_de_malotes)
 757+ 971A 3D           	dec a
 758+ 971B 28 09        	jr z,1F
 759+ 971D 32 04 8A      	ld (Numero_de_malotes),a
 760+ 9720
 761+ 9720 ED 7B 0B 8A   	ld sp,(Stack_2)
 762+ 9724 18 D8        	jr 2B
 763+ 9726
 764+ 9726 AF           1 xor a
 765+ 9727 32 0B 8A     	ld (Stack_2),a
 766+ 972A C9           	ret
 767+ 972B
 768+ 972B              ; -----------------------------------------------------------------------------------
 769+ 972B              ;
 770+ 972B              ;	28/2/23
 771+ 972B              ;
 772+ 972B              ;	Pinta los disparos generados.
 773+ 972B
 774+ 972B              Extrae_foto_disparos
 775+ 972B
 776+ 972B 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 777+ 972E 7E               ld a,(hl)
 778+ 972F A7               and a
 779+ 9730 C8               ret z
 780+ 9731
 781+ 9731 3A 2D 8A     	ld a,(Numero_de_disparotes)
 782+ 9734 A7           	and a
 783+ 9735 C8           	ret z
 784+ 9736 ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 785+ 973A 31 0D 72     	ld sp,Album_de_fotos_disparos
 786+ 973D
 787+ 973D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 788+ 973F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 789+ 9740 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 790+ 9741
 791+ 9741 ED 73 0B 8A  	ld (Stack_2),sp
 792+ 9745 ED 7B 09 8A  	ld sp,(Stack)
 793+ 9749
 794+ 9749              ; Fabrica la llamada a la correspondiente rutina de impresión.
 795+ 9749
 796+ 9749 3E CD        	ld a,$cd
 797+ 974B 32 53 97     	ld (Imprime2),a
 798+ 974E EB           	ex de,hl
 799+ 974F 22 54 97     	ld (Imprime2+1),hl
 800+ 9752 EB           	ex de,hl
 801+ 9753
 802+ 9753              ; Ejecuta la llamada:	CALL $xx,xx
 803+ 9753
 804+ 9753 00 00 00     Imprime2 db 0,0,0
 805+ 9756
 806+ 9756 3A 2D 8A     	ld a,(Numero_de_disparotes)
 807+ 9759 3D           	dec a
 808+ 975A 28 09        	jr z,1F
 809+ 975C 32 2D 8A      	ld (Numero_de_disparotes),a
 810+ 975F
 811+ 975F ED 7B 0B 8A  	ld sp,(Stack_2)
 812+ 9763 18 D8        	jr 2B
 813+ 9765
 814+ 9765 AF           1 xor a
 815+ 9766 32 0B 8A     	ld (Stack_2),a
 816+ 9769 C9           	ret
 817+ 976A
# file closed: Draw_XOR.asm
1417  976A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 976A              ;   índices de Rutinas de impresión.
   2+ 976A
   3+ 976A 7A 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 976C A7 97            defw Pinta_Amadeus_3x2
   5+ 976E
   6+ 976E FD 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9770 9D 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9772 51 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9774
  10+ 9774 27 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9776 2B 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9778 DF 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 977A
  14+ 977A
  15+ 977A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 977A              ;
  17+ 977A              ;   12/12/22
  18+ 977A              ;
  19+ 977A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 977A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 977A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 977A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 977A              ;
  24+ 977A              ;   Modifica: DE y HL.
  25+ 977A
  26+ 977A ED 73 09 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 977E FD F9        	ld sp,iy
  28+ 9780 06 10            ld b,16
  29+ 9782 D1           1 pop de
  30+ 9783 7B               ld a,e
  31+ 9784 AE               xor (hl)
  32+ 9785 77           	ld (hl),a
  33+ 9786 23           	inc hl
  34+ 9787 7A               ld a,d
  35+ 9788 AE               xor (hl)
  36+ 9789 77           	ld (hl),a
  37+ 978A 2B           	dec hl
  38+ 978B 24           	inc h
  39+ 978C 7C               ld a,h
  40+ 978D E6 07            and 7
  41+ 978F 20 0A            jr nz,2F
  42+ 9791 7D               ld a,l
  43+ 9792 C6 20            add a,$20
  44+ 9794 6F               ld l,a
  45+ 9795 38 04            jr c,2F
  46+ 9797 7C               ld a,h
  47+ 9798 D6 08            sub 8
  48+ 979A 67               ld h,a
  49+ 979B 7C           2 ld a,h
  50+ 979C FE 58            cp $58
  51+ 979E 28 02            jr z,3F
  52+ 97A0 10 E0            djnz 1B
  53+ 97A2 ED 7B 09 8A  3 ld sp,(Stack)
  54+ 97A6 C9           	ret
  55+ 97A7
  56+ 97A7 ED 73 09 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97AB FD F9        	ld sp,iy
  58+ 97AD 06 08            ld b,8
  59+ 97AF D1           1 pop de
  60+ 97B0 7B               ld a,e
  61+ 97B1 AE               xor (hl)
  62+ 97B2 77           	ld (hl),a
  63+ 97B3 23           	inc hl
  64+ 97B4 7A               ld a,d
  65+ 97B5 AE               xor (hl)
  66+ 97B6 77           	ld (hl),a
  67+ 97B7 23           	inc hl
  68+ 97B8 D1           	pop de
  69+ 97B9 7B               ld a,e
  70+ 97BA AE               xor (hl)
  71+ 97BB 77           	ld (hl),a
  72+ 97BC 2B           	dec hl
  73+ 97BD 2B           	dec hl
  74+ 97BE 24           	inc h
  75+ 97BF 7C               ld a,h
  76+ 97C0 E6 07            and 7
  77+ 97C2 20 0A            jr nz,2F
  78+ 97C4 7D               ld a,l
  79+ 97C5 C6 20            add a,$20
  80+ 97C7 6F               ld l,a
  81+ 97C8 38 04            jr c,2F
  82+ 97CA 7C               ld a,h
  83+ 97CB D6 08            sub 8
  84+ 97CD 67               ld h,a
  85+ 97CE 7C           2 ld a,h
  86+ 97CF FE 58            cp $58
  87+ 97D1 28 25            jr z,4F
  88+ 97D3 7A               ld a,d
  89+ 97D4 AE               xor (hl)
  90+ 97D5 77               ld (hl),a
  91+ 97D6 D1           	pop de
  92+ 97D7 23           	inc hl
  93+ 97D8 7B               ld a,e
  94+ 97D9 AE               xor (hl)
  95+ 97DA 77           	ld (hl),a
  96+ 97DB 23           	inc hl
  97+ 97DC 7A               ld a,d
  98+ 97DD AE               xor (hl)
  99+ 97DE 77           	ld (hl),a
 100+ 97DF 2B           	dec hl
 101+ 97E0 2B           	dec hl
 102+ 97E1 24           	inc h
 103+ 97E2 7C               ld a,h
 104+ 97E3 E6 07            and 7
 105+ 97E5 20 0A            jr nz,3F
 106+ 97E7 7D               ld a,l
 107+ 97E8 C6 20            add a,$20
 108+ 97EA 6F               ld l,a
 109+ 97EB 38 04            jr c,3F
 110+ 97ED 7C               ld a,h
 111+ 97EE D6 08            sub 8
 112+ 97F0 67               ld h,a
 113+ 97F1 7C           3 ld a,h
 114+ 97F2 FE 58            cp $58
 115+ 97F4 28 02            jr z,4F
 116+ 97F6 10 B7            djnz 1B
 117+ 97F8 ED 7B 09 8A  4 ld sp,(Stack)
 118+ 97FC C9           	ret
 119+ 97FD
 120+ 97FD              ; ---------------------------------------------------
 121+ 97FD
 122+ 97FD ED 73 09 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9801 FD F9        	ld sp,iy
 124+ 9803
 125+ 9803              ; >>>
 126+ 9803
 127+ 9803 06 10            ld b,16
 128+ 9805 D1           1 pop de
 129+ 9806 7A           	ld a,d
 130+ 9807 AE           	xor (hl)
 131+ 9808 77           	ld (hl),a
 132+ 9809 24           	inc h
 133+ 980A 7C               ld a,h
 134+ 980B E6 07            and 7
 135+ 980D 20 0C            jr nz,2F
 136+ 980F 7D               ld a,l
 137+ 9810 C6 20            add a,$20
 138+ 9812 6F               ld l,a
 139+ 9813 38 06            jr c,2F
 140+ 9815 7C               ld a,h
 141+ 9816 D6 08            sub 8
 142+ 9818 67               ld h,a
 143+ 9819 18 00            jr 2F
 144+ 981B 7C           2 ld a,h
 145+ 981C FE 58            cp $58
 146+ 981E 28 02            jr z,3F
 147+ 9820 10 E3            djnz 1B
 148+ 9822 ED 7B 09 8A  3 ld sp,(Stack)
 149+ 9826 C9           	ret
 150+ 9827
 151+ 9827 ED 73 09 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 982B FD F9        	ld sp,iy
 153+ 982D
 154+ 982D              ; >>>
 155+ 982D
 156+ 982D 06 10            ld b,16
 157+ 982F D1           1 pop de
 158+ 9830 7B           	ld a,e
 159+ 9831 AE           	xor (hl)
 160+ 9832 77           	ld (hl),a
 161+ 9833 24           	inc h
 162+ 9834 7C               ld a,h
 163+ 9835 E6 07            and 7
 164+ 9837 20 0C            jr nz,2F
 165+ 9839 7D               ld a,l
 166+ 983A C6 20            add a,$20
 167+ 983C 6F               ld l,a
 168+ 983D 38 06            jr c,2F
 169+ 983F 7C               ld a,h
 170+ 9840 D6 08            sub 8
 171+ 9842 67               ld h,a
 172+ 9843 18 00            jr 2F
 173+ 9845 7C           2 ld a,h
 174+ 9846 FE 58            cp $58
 175+ 9848 28 02            jr z,3F
 176+ 984A 10 E3            djnz 1B
 177+ 984C ED 7B 09 8A  3 ld sp,(Stack)
 178+ 9850 C9           	ret
 179+ 9851
 180+ 9851              ; ---------------------------------------------------
 181+ 9851
 182+ 9851 ED 73 09 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9855 FD F9        	ld sp,iy
 184+ 9857 06 08            ld b,8
 185+ 9859 D1           1 pop de
 186+ 985A 7A           	ld a,d
 187+ 985B AE           	xor (hl)
 188+ 985C 77           	ld (hl),a
 189+ 985D 23           	inc hl
 190+ 985E D1           	pop de
 191+ 985F 7B           	ld a,e
 192+ 9860 AE           	xor (hl)
 193+ 9861 77           	ld (hl),a
 194+ 9862 2B           	dec hl
 195+ 9863 24            	inc h
 196+ 9864 7C               ld a,h
 197+ 9865 E6 07            and 7
 198+ 9867 20 0A            jr nz,2F
 199+ 9869 7D               ld a,l
 200+ 986A C6 20            add a,$20
 201+ 986C 6F               ld l,a
 202+ 986D 38 04            jr c,2F
 203+ 986F 7C               ld a,h
 204+ 9870 D6 08            sub 8
 205+ 9872 67               ld h,a
 206+ 9873 7C           2 ld a,h
 207+ 9874 FE 58            cp $58
 208+ 9876 28 20            jr z,4F
 209+ 9878 D1               pop de
 210+ 9879 7B           	ld a,e
 211+ 987A AE           	xor (hl)
 212+ 987B 77           	ld (hl),a
 213+ 987C 23           	inc hl
 214+ 987D 7A           	ld a,d
 215+ 987E AE           	xor (hl)
 216+ 987F 77           	ld (hl),a
 217+ 9880 2B           	dec hl
 218+ 9881 24           	inc h
 219+ 9882 7C               ld a,h
 220+ 9883 E6 07            and 7
 221+ 9885 20 0A            jr nz,3F
 222+ 9887 7D               ld a,l
 223+ 9888 C6 20            add a,$20
 224+ 988A 6F               ld l,a
 225+ 988B 38 04            jr c,3F
 226+ 988D 7C               ld a,h
 227+ 988E D6 08            sub 8
 228+ 9890 67               ld h,a
 229+ 9891 7C           3 ld a,h
 230+ 9892 FE 58            cp $58
 231+ 9894 28 02            jr z,4F
 232+ 9896 10 C1            djnz 1B
 233+ 9898 ED 7B 09 8A  4 ld sp,(Stack)
 234+ 989C C9           	ret
 235+ 989D
 236+ 989D ED 73 09 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98A1 FD F9        	ld sp,iy
 238+ 98A3 06 08            ld b,8
 239+ 98A5 D1           1 pop de
 240+ 98A6 D1           	pop de
 241+ 98A7 7B           	ld a,e
 242+ 98A8 AE           	xor (hl)
 243+ 98A9 77           	ld (hl),a
 244+ 98AA 24            	inc h
 245+ 98AB 7C               ld a,h
 246+ 98AC E6 07            and 7
 247+ 98AE 20 0A            jr nz,2F
 248+ 98B0 7D               ld a,l
 249+ 98B1 C6 20            add a,$20
 250+ 98B3 6F               ld l,a
 251+ 98B4 38 04            jr c,2F
 252+ 98B6 7C               ld a,h
 253+ 98B7 D6 08            sub 8
 254+ 98B9 67               ld h,a
 255+ 98BA 7C           2 ld a,h
 256+ 98BB FE 58            cp $58
 257+ 98BD 28 1B            jr z,4F
 258+ 98BF D1               pop de
 259+ 98C0 7A           	ld a,d
 260+ 98C1 AE           	xor (hl)
 261+ 98C2 77           	ld (hl),a
 262+ 98C3 24           	inc h
 263+ 98C4 7C               ld a,h
 264+ 98C5 E6 07            and 7
 265+ 98C7 20 0A            jr nz,3F
 266+ 98C9 7D               ld a,l
 267+ 98CA C6 20            add a,$20
 268+ 98CC 6F               ld l,a
 269+ 98CD 38 04            jr c,3F
 270+ 98CF 7C               ld a,h
 271+ 98D0 D6 08            sub 8
 272+ 98D2 67               ld h,a
 273+ 98D3 7C           3 ld a,h
 274+ 98D4 FE 58            cp $58
 275+ 98D6 28 02            jr z,4F
 276+ 98D8 10 CB            djnz 1B
 277+ 98DA ED 7B 09 8A  4 ld sp,(Stack)
 278+ 98DE C9           	ret
 279+ 98DF
 280+ 98DF ED 73 09 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98E3 FD F9        	ld sp,iy
 282+ 98E5 06 08            ld b,8
 283+ 98E7 D1           1 pop de
 284+ 98E8 7B           	ld a,e
 285+ 98E9 AE           	xor (hl)
 286+ 98EA 77           	ld (hl),a
 287+ 98EB 23           	inc hl
 288+ 98EC 7A           	ld a,d
 289+ 98ED AE           	xor (hl)
 290+ 98EE 77           	ld (hl),a
 291+ 98EF 2B           	dec hl
 292+ 98F0 24             	inc h
 293+ 98F1 7C               ld a,h
 294+ 98F2 E6 07            and 7
 295+ 98F4 20 0A            jr nz,2F
 296+ 98F6 7D               ld a,l
 297+ 98F7 C6 20            add a,$20
 298+ 98F9 6F               ld l,a
 299+ 98FA 38 04            jr c,2F
 300+ 98FC 7C               ld a,h
 301+ 98FD D6 08            sub 8
 302+ 98FF 67               ld h,a
 303+ 9900 7C           2 ld a,h
 304+ 9901 FE 58            cp $58
 305+ 9903 28 21            jr z,4F
 306+ 9905 D1               pop de
 307+ 9906 7A           	ld a,d
 308+ 9907 AE           	xor (hl)
 309+ 9908 77           	ld (hl),a
 310+ 9909 23           	inc hl
 311+ 990A D1               pop de
 312+ 990B 7B           	ld a,e
 313+ 990C AE           	xor (hl)
 314+ 990D 77           	ld (hl),a
 315+ 990E 2B           	dec hl
 316+ 990F 24           	inc h
 317+ 9910 7C               ld a,h
 318+ 9911 E6 07            and 7
 319+ 9913 20 0A            jr nz,3F
 320+ 9915 7D               ld a,l
 321+ 9916 C6 20            add a,$20
 322+ 9918 6F               ld l,a
 323+ 9919 38 04            jr c,3F
 324+ 991B 7C               ld a,h
 325+ 991C D6 08            sub 8
 326+ 991E 67               ld h,a
 327+ 991F 7C           3 ld a,h
 328+ 9920 FE 58            cp $58
 329+ 9922 28 02            jr z,4F
 330+ 9924 10 C1            djnz 1B
 331+ 9926 ED 7B 09 8A  4 ld sp,(Stack)
 332+ 992A C9           	ret
 333+ 992B
 334+ 992B ED 73 09 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 992F FD F9        	ld sp,iy
 336+ 9931 06 08            ld b,8
 337+ 9933 D1           1 pop de
 338+ 9934 7B           	ld a,e
 339+ 9935 AE           	xor (hl)
 340+ 9936 77           	ld (hl),a
 341+ 9937 24            	inc h
 342+ 9938 7C               ld a,h
 343+ 9939 E6 07            and 7
 344+ 993B 20 0A            jr nz,2F
 345+ 993D 7D               ld a,l
 346+ 993E C6 20            add a,$20
 347+ 9940 6F               ld l,a
 348+ 9941 38 04            jr c,2F
 349+ 9943 7C               ld a,h
 350+ 9944 D6 08            sub 8
 351+ 9946 67               ld h,a
 352+ 9947 7C           2 ld a,h
 353+ 9948 FE 58            cp $58
 354+ 994A 28 1C            jr z,4F
 355+ 994C D1               pop de
 356+ 994D 7A           	ld a,d
 357+ 994E AE           	xor (hl)
 358+ 994F 77           	ld (hl),a
 359+ 9950 24           	inc h
 360+ 9951 7C               ld a,h
 361+ 9952 E6 07            and 7
 362+ 9954 20 0A            jr nz,3F
 363+ 9956 7D               ld a,l
 364+ 9957 C6 20            add a,$20
 365+ 9959 6F               ld l,a
 366+ 995A 38 04            jr c,3F
 367+ 995C 7C               ld a,h
 368+ 995D D6 08            sub 8
 369+ 995F 67               ld h,a
 370+ 9960 7C           3 ld a,h
 371+ 9961 FE 58            cp $58
 372+ 9963 28 03            jr z,4F
 373+ 9965 D1               pop de
 374+ 9966 10 CB            djnz 1B
 375+ 9968 ED 7B 09 8A  4 ld sp,(Stack)
 376+ 996C C9           	ret
 377+ 996D
 378+ 996D              ; ---------------------------------------------------
 379+ 996D              ;
 380+ 996D              ;   27/02/23
 381+ 996D              ;
 382+ 996D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 996D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 996D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 996D
 386+ 996D ED 73 09 8A  Pinta_Disparo ld (Stack),sp
 387+ 9971 FD F9            ld sp,iy
 388+ 9973 06 03            ld b,3
 389+ 9975 D1           1 pop de
 390+ 9976 7B               ld a,e
 391+ 9977 AE               xor (hl)
 392+ 9978 77               ld (hl),a
 393+ 9979 23               inc hl
 394+ 997A 7A               ld a,d
 395+ 997B AE               xor (hl)
 396+ 997C 77               ld (hl),a
 397+ 997D 2B               dec hl
 398+ 997E
 399+ 997E 24               inc h
 400+ 997F 7C               ld a,h
 401+ 9980 E6 07            and 7
 402+ 9982 20 0A            jr nz,2F
 403+ 9984 7D               ld a,l
 404+ 9985 C6 20            add a,$20
 405+ 9987 6F               ld l,a
 406+ 9988 38 04            jr c,2F
 407+ 998A 7C               ld a,h
 408+ 998B D6 08            sub 8
 409+ 998D 67               ld h,a
 410+ 998E 7C           2 ld a,h
 411+ 998F FE 58            cp $58
 412+ 9991 28 02            jr z,3F
 413+ 9993
 414+ 9993 10 E0            djnz 1B
 415+ 9995 ED 7B 09 8A  3 ld sp,(Stack)
 416+ 9999 C9               ret
 417+ 999A
# file closed: Rutinas_de_impresion_sprites.asm
1418  999A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 999A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 999A              ;
   3+ 999A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 999A              ;
   5+ 999A              ; *****************************************************************************************************************************************************************************************
   6+ 999A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 999A
   8+ 999A 7C           calcula_tercio ld a,h
   9+ 999B E6 18        	and $18
  10+ 999D CB 2F        	sra a
  11+ 999F CB 2F        	sra a
  12+ 99A1 CB 2F        	sra a
  13+ 99A3 C9           	ret
  14+ 99A4
# file closed: calcula_tercio.asm
1419  99A4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99A4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99A4              ;
   3+ 99A4              ;
   4+ 99A4              ;	CLS.
   5+ 99A4              ;
   6+ 99A4              ;	Limpia la pantalla y define sus atributos.
   7+ 99A4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99A4              ;
   9+ 99A4              ;	COLORES: 0 ..... NEGRO
  10+ 99A4              ;    		 1 ..... AZUL
  11+ 99A4              ; 			 2 ..... ROJO
  12+ 99A4              ;			 3 ..... MAGENTA
  13+ 99A4              ; 			 4 ..... VERDE
  14+ 99A4              ; 			 5 ..... CIAN
  15+ 99A4              ;			 6 ..... AMARILLO
  16+ 99A4              ; 			 7 ..... BLANCO
  17+ 99A4              ;
  18+ 99A4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99A4              ;
  20+ 99A4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99A4
  22+ 99A4
  23+ 99A4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99A7 11 01 40     	LD DE,$4001
  25+ 99AA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99AD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99AF ED B0        	LDIR
  28+ 99B1 01 FF 02     	LD BC,767
  29+ 99B4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99B5 ED B0        	LDIR
  31+ 99B7 C9           	ret
  32+ 99B8
# file closed: Cls.asm
1420  99B8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99B8              ; ******************************************************************************************************************************************************************************************
   2+ 99B8              ;
   3+ 99B8              ;   20/05/23
   4+ 99B8              ;
   5+ 99B8              ;	Recompone_posicion_inicio
   6+ 99B8              ;
   7+ 99B8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99B8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99B8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99B8              ;	_ a una u otra rutina.
  11+ 99B8
  12+ 99B8              Recompone_posicion_inicio
  13+ 99B8
  14+ 99B8 2A C7 89     	ld hl,(Posicion_inicio)
  15+ 99BB 7D           	ld a,l
  16+ 99BC E6 1F        	and $1f
  17+ 99BE 28 16        	jr z,1F
  18+ 99C0
  19+ 99C0 FE 1F        	cp $1f
  20+ 99C2 28 0D        	jr z,3F
  21+ 99C4
  22+ 99C4 21 F6 89     	ld hl,Ctrl_2
  23+ 99C7 CB C6        	set 0,(hl)
  24+ 99C9 2A B9 89     	ld hl,(Puntero_objeto)
  25+ 99CC 22 F9 89     	ld (Repone_puntero_objeto),hl
  26+ 99CF 18 08        	jr 2F
  27+ 99D1
  28+ 99D1 CD 72 9B     3 call Mov_left
  29+ 99D4 18 03        	jr 2F
  30+ 99D6
  31+ 99D6 CD 54 9A     1 call Mov_right
  32+ 99D9 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99DC 22 B9 89     	ld (Puntero_objeto),hl
  34+ 99DF C9           	ret
  35+ 99E0
  36+ 99E0              ; ******************************************************************************************************************************************************************************************
  37+ 99E0              ;
  38+ 99E0              ;   27/05/23
  39+ 99E0              ;
  40+ 99E0              ;	Mov_down
  41+ 99E0              ;
  42+ 99E0              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99E0              ;
  44+ 99E0              ;
  45+ 99E0              Mov_down
  46+ 99E0
  47+ 99E0 CD 42 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99E3              ;																	; _ repone (Puntero_objeto).
  49+ 99E3 21 E3 89     	ld hl,Ctrl_0
  50+ 99E6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99E8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99E8              ; 																	; _ en el caso de que no lo haya.
  53+ 99E8 3A CD 89     	ld a,(Vel_down)
  54+ 99EB 47           	ld b,a
  55+ 99EC 2A B7 89         ld hl,(Posicion_actual)
  56+ 99EF CD 9A 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99F2 E6 02        	and 2
  58+ 99F4 28 0F        	jr z,1F
  59+ 99F6
  60+ 99F6              ; Nos encontramos en el último tercio de pantalla.
  61+ 99F6              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99F6
  63+ 99F6 7C           	ld a,h
  64+ 99F7 FE 57        	cp $57
  65+ 99F9 20 0A        	jr nz,1F
  66+ 99FB
  67+ 99FB 7D           	ld a,l
  68+ 99FC C6 20        	add $20
  69+ 99FE 30 05        	jr nc,1F
  70+ 9A00
  71+ 9A00              ; ------------------------------
  72+ 9A00              ;	call Reaparece_arriba
  73+ 9A00 CD FF 9C     	call Reinicio
  74+ 9A03              ; ------------------------------
  75+ 9A03
  76+ 9A03 18 08        	jr 3F
  77+ 9A05 CD CE 96     1 call NextScan
  78+ 9A08 22 B7 89     	ld (Posicion_actual),hl
  79+ 9A0B 10 E2            djnz 2B
  80+ 9A0D CD 25 9D     3 call Genera_coordenadas
  81+ 9A10 C9           	ret
  82+ 9A11
  83+ 9A11              ; ******************************************************************************************************************************************************************************************
  84+ 9A11              ;
  85+ 9A11              ;   27/05/23
  86+ 9A11              ;
  87+ 9A11              ;	Mov_up
  88+ 9A11              ;
  89+ 9A11              ; 	Mueve el Sprite hacia arriba.
  90+ 9A11              ;
  91+ 9A11              ;
  92+ 9A11              Mov_up
  93+ 9A11
  94+ 9A11 CD 42 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A14              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A14 21 E3 89     	ld hl,Ctrl_0
  97+ 9A17 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A19              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A19              ; 																		; _ en el caso de que no lo haya.
 100+ 9A19 3A CC 89     	ld a,(Vel_up)
 101+ 9A1C 47           	ld b,a
 102+ 9A1D 2A B7 89     	ld hl,(Posicion_actual)
 103+ 9A20 CD 9A 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A23 A7           	and a
 105+ 9A24 20 10        	jr nz,1F
 106+ 9A26
 107+ 9A26              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A26              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A26
 110+ 9A26 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A27 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A29 20 0B            jr nz,1F
 113+ 9A2B 7D               ld a,l
 114+ 9A2C D6 20            sub $20
 115+ 9A2E 30 06            jr nc,1F
 116+ 9A30 25               dec h
 117+ 9A31
 118+ 9A31              ; -----------------------------
 119+ 9A31 CD E0 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A34              ;	call Reinicio
 121+ 9A34              ; -----------------------------
 122+ 9A34
 123+ 9A34 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A36 CD DD 96     1 call PreviousScan
 125+ 9A39 22 B7 89     	ld (Posicion_actual),hl
 126+ 9A3C 10 E2            djnz 3B
 127+ 9A3E CD 25 9D     2 call Genera_coordenadas
 128+ 9A41 C9           	ret
 129+ 9A42
 130+ 9A42              ; -----------------------------
 131+ 9A42              ;
 132+ 9A42              ;	27/5/23
 133+ 9A42              ;
 134+ 9A42              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A42              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A42              ;
 137+ 9A42              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A42              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A42              ;
 140+ 9A42              ;	Modifica: A y (Puntero_objeto).
 141+ 9A42
 142+ 9A42 3A F6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A45 CB 47        	bit 0,a
 144+ 9A47 C8           	ret z
 145+ 9A48 CB 87        	res 0,a
 146+ 9A4A 32 F6 89     	ld (Ctrl_2),a
 147+ 9A4D 2A F9 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A50 22 B9 89     	ld (Puntero_objeto),hl
 149+ 9A53 C9           	ret
 150+ 9A54
 151+ 9A54              ; ******************************************************************************************************************************************************************************************
 152+ 9A54              ;
 153+ 9A54              ;	19/10/22
 154+ 9A54              ;
 155+ 9A54              ;	Mov_right.
 156+ 9A54              ;
 157+ 9A54              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A54              ;
 159+ 9A54
 160+ 9A54 21 E3 89     Mov_right ld hl,Ctrl_0
 161+ 9A57 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A59              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A59              ; 																	; _ en el caso de que no lo haya.
 164+ 9A59 3A E3 89     	ld a,(Ctrl_0)
 165+ 9A5C CB 77        	bit 6,a
 166+ 9A5E 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A60
 168+ 9A60 CD 8E 9C     	call Stop_Amadeus_right
 169+ 9A63 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A64 18 4D        	jr 8F
 171+ 9A66
 172+ 9A66 3A BB 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A69 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A6B 20 46        	jr nz,8F
 175+ 9A6D
 176+ 9A6D 3A BD 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A70 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A71 28 40        	jr z,8F
 179+ 9A73
 180+ 9A73              ; ---------- ---------- ----------
 181+ 9A73              ;
 182+ 9A73              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A73
 184+ 9A73 3A CB 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A76 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A78 28 11        	jr z,1F
 187+ 9A7A 38 06        	jr c,6F
 188+ 9A7C FE 04        	cp 4
 189+ 9A7E 28 14        	jr z,7F
 190+ 9A80 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A82
 192+ 9A82              ; ---------- ---------- ----------
 193+ 9A82              ;
 194+ 9A82              ; Perfiles de velocidad
 195+ 9A82              ;
 196+ 9A82
 197+ 9A82 3A BD 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A85 FE FE        	cp $fe
 199+ 9A87 20 2A        	jr nz,8F
 200+ 9A89 18 10        	jr 3F
 201+ 9A8B 3A BD 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A8E FE FD        	cp $fd
 203+ 9A90 20 21        	jr nz,8F
 204+ 9A92 18 07        	jr 3F
 205+ 9A94 3A BD 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A97 FE FB        	cp $fb
 207+ 9A99 20 18        	jr nz,8F
 208+ 9A9B
 209+ 9A9B              ; ---------- ---------- ----------
 210+ 9A9B
 211+ 9A9B              3
 212+ 9A9B CD CE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A9E              ;	call Reinicio
 214+ 9A9E
 215+ 9A9E              ; ---------- ---------- ----------
 216+ 9A9E              ;
 217+ 9A9E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A9E
 219+ 9A9E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AA0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AA1 CD BA 9A     	call DESPLZ_DER
 222+ 9AA4 C1           	pop bc
 223+ 9AA5 10 F9        	djnz 5B
 224+ 9AA7 2A B7 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AAA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AAB 22 B7 89     	ld (Posicion_actual),hl
 227+ 9AAE CD 25 9D     	call Genera_coordenadas
 228+ 9AB1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AB3
 230+ 9AB3              ; ---------- ---------- ----------
 231+ 9AB3
 232+ 9AB3 2A B7 89     8 ld hl,(Posicion_actual)
 233+ 9AB6 CD BA 9A     	call DESPLZ_DER
 234+ 9AB9 C9           2 ret
 235+ 9ABA
 236+ 9ABA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9ABA              ;
 238+ 9ABA              ;	22/9/22
 239+ 9ABA              ;
 240+ 9ABA
 241+ 9ABA CD C9 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9ABD CD 15 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AC0 CD 3E 9B         call Ciclo_completo
 244+ 9AC3 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AC6 CB FE        	set 7,(hl)
 246+ 9AC8 C9           	ret
 247+ 9AC9
 248+ 9AC9              ; ******************************************************************************************************************************************************************************************
 249+ 9AC9              ;	15/02/23
 250+ 9AC9              ;
 251+ 9AC9
 252+ 9AC9 3A CB 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9ACC 47           	ld b,a
 254+ 9ACD 2A C3 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AD0 23           1 inc hl
 256+ 9AD1 23           	inc hl
 257+ 9AD2 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AD4 22 C3 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AD7 CD 8B 8D     	call Extrae_address
 260+ 9ADA 22 B9 89     	ld (Puntero_objeto),hl
 261+ 9ADD
 262+ 9ADD              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9ADD
 264+ 9ADD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9ADD              ; Cuántos movimientos hemos hecho ??
 266+ 9ADD              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9ADD
 268+ 9ADD 2A BF 89     7 ld hl,(Indice_Sprite_der)
 269+ 9AE0 EB           	ex de,hl
 270+ 9AE1 A7           	and a
 271+ 9AE2 ED 52        	sbc hl,de
 272+ 9AE4 CB 3D        	srl l
 273+ 9AE6 3E 08        6 ld a,8
 274+ 9AE8 95           	sub l
 275+ 9AE9 30 1E        	jr nc,3F
 276+ 9AEB
 277+ 9AEB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AEB              ; B="0".
 279+ 9AEB
 280+ 9AEB 04           4 inc b
 281+ 9AEC 3C           	inc a
 282+ 9AED 20 FC        	jr nz,4B
 283+ 9AEF 78           	ld a,b
 284+ 9AF0 08           	ex af,af
 285+ 9AF1 2A BF 89     	ld hl,(Indice_Sprite_der)
 286+ 9AF4 23           5 inc hl
 287+ 9AF5 23           	inc hl
 288+ 9AF6 10 FC        	djnz 5B
 289+ 9AF8 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9AFB CD 8B 8D     	call Extrae_address
 291+ 9AFE 22 B9 89     	ld (Puntero_objeto),hl
 292+ 9B01
 293+ 9B01              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B01              ; _(Posicion_actual).
 295+ 9B01
 296+ 9B01 21 B7 89     	ld hl,Posicion_actual
 297+ 9B04 34           	inc (hl)
 298+ 9B05 08               ex af,af
 299+ 9B06 6F           	ld l,a
 300+ 9B07 18 DD        	jr 6B
 301+ 9B09
 302+ 9B09              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B09
 304+ 9B09 47           3 ld b,a
 305+ 9B0A 2A C1 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B0D 23           2 inc hl
 307+ 9B0E 23           	inc hl
 308+ 9B0F 10 FC        	djnz 2B
 309+ 9B11 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B14 C9           8 ret
 311+ 9B15
 312+ 9B15              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B15              ;
 314+ 9B15              ;	24/7/22
 315+ 9B15              ;
 316+ 9B15              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B15              ;
 318+ 9B15              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B15              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B15              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B15
 322+ 9B15 3A BD 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B18 A7           	and a
 324+ 9B19 20 1F        	jr nz,1F
 325+ 9B1B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B1D 32 BD 89         ld (CTRL_DESPLZ),a
 327+ 9B20
 328+ 9B20 21 B6 89     	ld hl,Columns
 329+ 9B23 34           	inc (hl)
 330+ 9B24 3A C9 89     	ld a,(Cuad_objeto)
 331+ 9B27 E6 01        	and 1
 332+ 9B29 28 0F        	jr z,1F
 333+ 9B2B 2A B7 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B2E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B2F 22 B7 89     	ld (Posicion_actual),hl
 336+ 9B32 CD 25 9D     	call Genera_coordenadas
 337+ 9B35 CD 9A 9C     	call Inc_CTRL_DESPLZ
 338+ 9B38 18 03        	jr 2F
 339+ 9B3A CD 9A 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B3D C9           2 ret
 341+ 9B3E
 342+ 9B3E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B3E              ;
 344+ 9B3E              ;	24/7/22
 345+ 9B3E              ;
 346+ 9B3E              ;	Ciclo_completo.
 347+ 9B3E              ;
 348+ 9B3E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B3E              ;
 350+ 9B3E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B3E              ; 	Decrementamos (Columns).
 352+ 9B3E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B3E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B3E
 355+ 9B3E
 356+ 9B3E 3A BD 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B41 FE FF        	cp $ff
 358+ 9B43 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B45 E6 F0        	and $f0
 360+ 9B47 20 28        	jr nz,3F
 361+ 9B49
 362+ 9B49              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B49
 364+ 9B49 3A BD 89     	ld a,(CTRL_DESPLZ)
 365+ 9B4C 47           	ld b,a
 366+ 9B4D 3E F8        	ld a,$f8
 367+ 9B4F 80           	add b
 368+ 9B50 32 BD 89     	ld (CTRL_DESPLZ),a
 369+ 9B53 18 1C        	jr 3F
 370+ 9B55 21 B6 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B58 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B59 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B5A 32 BD 89     	ld (CTRL_DESPLZ),a
 374+ 9B5D 3A C9 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B60 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B62 20 0A        	jr nz,2F
 377+ 9B64 2A B7 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B67 23           	inc hl
 379+ 9B68 22 B7 89     	ld (Posicion_actual),hl
 380+ 9B6B CD 25 9D     	call Genera_coordenadas
 381+ 9B6E
 382+ 9B6E              ; Inicia el puntero de Sprite.
 383+ 9B6E
 384+ 9B6E CD A2 8D     2 call Inicia_puntero_objeto_der
 385+ 9B71 C9           3 ret
 386+ 9B72
 387+ 9B72              ; ******************************************************************************************************************************************************************************************
 388+ 9B72              ;
 389+ 9B72              ;	15/02/23
 390+ 9B72              ;
 391+ 9B72              ;	Mov_left.
 392+ 9B72              ;
 393+ 9B72              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B72              ;
 395+ 9B72 21 E3 89     Mov_left ld hl,Ctrl_0
 396+ 9B75 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B77              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B77              ; 																	; _ en el caso de que no lo haya.
 399+ 9B77 3A E3 89     	ld a,(Ctrl_0)
 400+ 9B7A CB 77        	bit 6,a
 401+ 9B7C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B7E
 403+ 9B7E CD 94 9C     	call Stop_Amadeus_left
 404+ 9B81 C8           	ret z
 405+ 9B82 20 4A        	jr nz,8F
 406+ 9B84
 407+ 9B84 3A BB 89     11 ld a,(Coordenada_X)
 408+ 9B87 A7           	and a
 409+ 9B88 20 44        	jr nz,8F
 410+ 9B8A
 411+ 9B8A 3A BD 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B8D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B8E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B90
 415+ 9B90              ; ---------- ---------- ----------
 416+ 9B90
 417+ 9B90 3A CA 89     	ld a,(Vel_left)
 418+ 9B93 FE 02        	cp 2
 419+ 9B95 28 0F        	jr z,1F
 420+ 9B97 38 04        	jr c,6F
 421+ 9B99 FE 04        	cp 4
 422+ 9B9B 28 12        	jr z,7F
 423+ 9B9D
 424+ 9B9D              ; ---------- ---------- ----------
 425+ 9B9D
 426+ 9B9D 3A BD 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BA0 FE F8        	cp $f8
 428+ 9BA2 20 2A        	jr nz,8F
 429+ 9BA4 18 10        	jr 4F
 430+ 9BA6 3A BD 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BA9 FE F9        	cp $f9
 432+ 9BAB 20 21        	jr nz,8F
 433+ 9BAD 18 07        	jr 4F
 434+ 9BAF 3A BD 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BB2 FE FB        	cp $fb
 436+ 9BB4 20 18        	jr nz,8F
 437+ 9BB6
 438+ 9BB6              ; ---------- ---------- ----------
 439+ 9BB6
 440+ 9BB6              4
 441+ 9BB6 CD BC 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BB9              ;	call Reinicio
 443+ 9BB9
 444+ 9BB9              ; ---------- ---------- ----------
 445+ 9BB9
 446+ 9BB9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BBB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BBC
 449+ 9BBC              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BBC              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BBC
 452+ 9BBC CD D5 9B     	call DESPLZ_IZQ
 453+ 9BBF C1           	pop bc
 454+ 9BC0 10 F9        	djnz 5B
 455+ 9BC2 2A B7 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BC5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BC6 22 B7 89     	ld (Posicion_actual),hl
 458+ 9BC9 CD 25 9D     	call Genera_coordenadas
 459+ 9BCC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BCE
 461+ 9BCE              ; ---------- ---------- ----------
 462+ 9BCE
 463+ 9BCE              ; Movemos, no hay recolocación.
 464+ 9BCE
 465+ 9BCE 2A B7 89     8 ld hl,(Posicion_actual)
 466+ 9BD1 CD D5 9B     	call DESPLZ_IZQ
 467+ 9BD4 C9           2 ret
 468+ 9BD5
 469+ 9BD5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9BD5              ;
 471+ 9BD5              ;	22/9/22
 472+ 9BD5
 473+ 9BD5              DESPLZ_IZQ
 474+ 9BD5
 475+ 9BD5 CD E4 9B     	call Desplaza_izquierda
 476+ 9BD8 CD 30 9C         call modifica_parametros_1er_DESPLZ
 477+ 9BDB CD 58 9C     	call Ciclo_completo_2
 478+ 9BDE 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9BE1 CB BE        	res 7,(hl)
 480+ 9BE3 C9           	ret
 481+ 9BE4
 482+ 9BE4              Desplaza_izquierda
 483+ 9BE4
 484+ 9BE4 3A CA 89     	ld a,(Vel_left)
 485+ 9BE7 47           	ld b,a
 486+ 9BE8 2A C5 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9BEB 23           1 inc hl
 488+ 9BEC 23           	inc hl
 489+ 9BED 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9BEF 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9BF2 CD 8B 8D     	call Extrae_address
 492+ 9BF5 22 B9 89     	ld (Puntero_objeto),hl
 493+ 9BF8
 494+ 9BF8              ; Modifica (Puntero_DESPLZ_der).
 495+ 9BF8
 496+ 9BF8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9BF8              ; Cuántos movimientos hemos hecho ??
 498+ 9BF8              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9BF8
 500+ 9BF8 2A C1 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9BFB EB           	ex de,hl
 502+ 9BFC A7           	and a
 503+ 9BFD ED 52        	sbc hl,de
 504+ 9BFF CB 3D        	srl l
 505+ 9C01 3E 08        6 ld a,8
 506+ 9C03 95           	sub l
 507+ 9C04 30 1E        	jr nc,3F
 508+ 9C06
 509+ 9C06              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C06              ; B="0".
 511+ 9C06
 512+ 9C06 04           4 inc b
 513+ 9C07 3C           	inc a
 514+ 9C08 20 FC        	jr nz,4B
 515+ 9C0A 78           	ld a,b
 516+ 9C0B 08           	ex af,af
 517+ 9C0C 2A C1 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C0F 23           5 inc hl
 519+ 9C10 23           	inc hl
 520+ 9C11 10 FC        	djnz 5B
 521+ 9C13 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C16 CD 8B 8D     	call Extrae_address
 523+ 9C19 22 B9 89     	ld (Puntero_objeto),hl
 524+ 9C1C
 525+ 9C1C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C1C              ; _(Posicion_actual).
 527+ 9C1C
 528+ 9C1C 21 B7 89     	ld hl,Posicion_actual
 529+ 9C1F 35           	dec (hl)
 530+ 9C20 08           	ex af,af
 531+ 9C21 6F           	ld l,a
 532+ 9C22 18 DD        	jr 6B
 533+ 9C24
 534+ 9C24              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C24
 536+ 9C24 47           3 ld b,a
 537+ 9C25 2A BF 89     	ld hl,(Indice_Sprite_der)
 538+ 9C28 23           2 inc hl
 539+ 9C29 23           	inc hl
 540+ 9C2A 10 FC        	djnz 2B
 541+ 9C2C 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C2F C9           8 ret
 543+ 9C30
 544+ 9C30              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C30              ;
 546+ 9C30              ;	modifica_parametros_1er_DESPLZ
 547+ 9C30              ;
 548+ 9C30              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C30              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C30              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C30
 552+ 9C30 3A BD 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C33 A7           	and a
 554+ 9C34 20 1E        	jr nz,1F
 555+ 9C36 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C37 32 BD 89         ld (CTRL_DESPLZ),a
 557+ 9C3A 21 B6 89     	ld hl,Columns
 558+ 9C3D 34           	inc (hl)
 559+ 9C3E 3A C9 89     	ld a,(Cuad_objeto)
 560+ 9C41 E6 01        	and 1
 561+ 9C43 20 0F        	jr nz,1F
 562+ 9C45 2A B7 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C48 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C49 22 B7 89     	ld (Posicion_actual),hl
 565+ 9C4C CD 25 9D     	call Genera_coordenadas
 566+ 9C4F CD AB 9C     	call Dec_CTRL_DESPLZ
 567+ 9C52 18 03        	jr 2F
 568+ 9C54 CD AB 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C57 C9           2 ret
 570+ 9C58
 571+ 9C58              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C58
 573+ 9C58 3A BD 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C5B FE F7        	cp $f7
 575+ 9C5D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C5F 30 2C        	jr nc,3F
 577+ 9C61
 578+ 9C61              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C61
 580+ 9C61 06 00        	ld b,0
 581+ 9C63 04           4 inc b
 582+ 9C64 3C           	inc a
 583+ 9C65 FE F7        	cp $f7
 584+ 9C67 20 FA        	jr nz,4B
 585+ 9C69 3E FF        	ld a,$ff
 586+ 9C6B 90           	sub b
 587+ 9C6C 32 BD 89     	ld (CTRL_DESPLZ),a
 588+ 9C6F 18 1C        	jr 3F
 589+ 9C71
 590+ 9C71              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C71
 592+ 9C71 21 B6 89     1 ld hl,Columns
 593+ 9C74 35           	dec (hl)
 594+ 9C75 AF           	xor a
 595+ 9C76 32 BD 89     	ld (CTRL_DESPLZ),a
 596+ 9C79 3A C9 89     	ld a,(Cuad_objeto)
 597+ 9C7C E6 01        	and 1
 598+ 9C7E 28 0A        	jr z,2F
 599+ 9C80 2A B7 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C83 2B           	dec hl
 601+ 9C84 22 B7 89     	ld (Posicion_actual),hl
 602+ 9C87 CD 25 9D     	call Genera_coordenadas
 603+ 9C8A
 604+ 9C8A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C8A
 606+ 9C8A CD B5 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C8D C9           3 ret
 608+ 9C8E
 609+ 9C8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C8E              ;
 611+ 9C8E              ;	19/10/22
 612+ 9C8E              ;
 613+ 9C8E              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C8E              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C8E
 616+ 9C8E 3A BB 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C91 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C93 C9           	ret
 619+ 9C94
 620+ 9C94              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C94              ;
 622+ 9C94              ;	19/10/22
 623+ 9C94              ;
 624+ 9C94              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C94              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C94
 627+ 9C94 3A BB 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C97 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C99 C9           	ret
 630+ 9C9A
 631+ 9C9A              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C9A              ;
 633+ 9C9A              ;	24/7/22
 634+ 9C9A              ;
 635+ 9C9A              ;	Inc_CTRL_DESPLZ
 636+ 9C9A              ;
 637+ 9C9A              ;
 638+ 9C9A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C9A
 640+ 9C9A 21 BD 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C9D 3A CB 89     	ld a,(Vel_right)
 642+ 9CA0 A7           	and a
 643+ 9CA1 28 06        	jr z,1F
 644+ 9CA3 47           	ld b,a
 645+ 9CA4 34           3 inc (hl)
 646+ 9CA5 10 FD        	djnz 3B
 647+ 9CA7 18 01        	jr 2F
 648+ 9CA9 34           1 inc (hl)
 649+ 9CAA C9           2 ret
 650+ 9CAB
 651+ 9CAB              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CAB              ;
 653+ 9CAB              ;	5/2/23
 654+ 9CAB              ;
 655+ 9CAB              ;	Dec_CTRL_DESPLZ
 656+ 9CAB              ;
 657+ 9CAB              ;
 658+ 9CAB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CAB
 660+ 9CAB 21 BD 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CAE 3A CA 89     	ld a,(Vel_left)
 662+ 9CB1 A7           	and a
 663+ 9CB2 28 06        	jr z,1F
 664+ 9CB4 47           	ld b,a
 665+ 9CB5 35           3 dec (hl)
 666+ 9CB6 10 FD        	djnz 3B
 667+ 9CB8 18 01        	jr 2F
 668+ 9CBA 35           1 dec (hl)
 669+ 9CBB C9           2 ret
 670+ 9CBC
 671+ 9CBC              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CBC
 673+ 9CBC 2A B7 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CBF 01 1F 00     	ld bc,31
 675+ 9CC2 A7           	and a
 676+ 9CC3 ED 4A        	adc hl,bc
 677+ 9CC5 22 B7 89     	ld (Posicion_actual),hl
 678+ 9CC8 21 E3 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CCB CB C6        	set 0,(hl)
 680+ 9CCD C9           	ret
 681+ 9CCE
 682+ 9CCE              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CCE
 684+ 9CCE 2A B7 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CD1 01 1F 00     	ld bc,31
 686+ 9CD4 A7           	and a
 687+ 9CD5 ED 42        	sbc hl,bc
 688+ 9CD7 22 B7 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9CDA 21 E3 89     	ld hl,Ctrl_0
 690+ 9CDD CB CE        	set 1,(hl)
 691+ 9CDF C9           	ret
 692+ 9CE0
 693+ 9CE0              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9CE0
 695+ 9CE0 24           Reaparece_abajo inc h
 696+ 9CE1 01 E0 17     	ld bc,$17e0
 697+ 9CE4 A7           	and a
 698+ 9CE5 ED 4A        	adc hl,bc
 699+ 9CE7 22 B7 89     	ld (Posicion_actual),hl
 700+ 9CEA 21 E3 89     	ld hl,Ctrl_0
 701+ 9CED CB D6        	set 2,(hl)
 702+ 9CEF C9           	ret
 703+ 9CF0
 704+ 9CF0              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9CF0
 706+ 9CF0 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9CF3 A7           	and a
 708+ 9CF4 ED 42        	sbc hl,bc
 709+ 9CF6 22 B7 89     	ld (Posicion_actual),hl
 710+ 9CF9 21 E3 89     	ld hl,Ctrl_0
 711+ 9CFC CB DE        	set 3,(hl)
 712+ 9CFE C9           	ret
 713+ 9CFF
 714+ 9CFF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9CFF              ;
 716+ 9CFF              ;	15/07/23
 717+ 9CFF
 718+ 9CFF              Reinicio
 719+ 9CFF
 720+ 9CFF              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9CFF
 722+ 9CFF AF           	xor a
 723+ 9D00 21 EA 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D03 CD 21 9D     	call Limpia_contenido_hl
 725+ 9D06
 726+ 9D06 21 B7 89     	ld hl,Posicion_actual
 727+ 9D09 CD 21 9D     	call Limpia_contenido_hl
 728+ 9D0C
 729+ 9D0C CD 42 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D0F CD CC 9F     	call Inicia_Puntero_mov
 731+ 9D12
 732+ 9D12 21 EC 89     	ld hl,Incrementa_puntero
 733+ 9D15 06 05        	ld b,5
 734+ 9D17 77           1 ld (hl),a
 735+ 9D18 23           	inc hl
 736+ 9D19 10 FC        	djnz 1B
 737+ 9D1B
 738+ 9D1B 21 F6 89     	ld hl,Ctrl_2
 739+ 9D1E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D20
 741+ 9D20 C9           	ret
 742+ 9D21
 743+ 9D21 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D22 23           	inc hl
 745+ 9D23 77           	ld (hl),a
 746+ 9D24 C9           	ret
 747+ 9D25
 748+ 9D25
# file closed: Direcciones.asm
1421  9D25              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D25              ; ------------------------------------------------------------------------
   2+ 9D25              ;
   3+ 9D25              ;	02/04/23
   4+ 9D25              ;
   5+ 9D25              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D25              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D25              ;
   8+ 9D25              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D25              ;
  10+ 9D25              ;	Modifica: A,BC y DE.
  11+ 9D25
  12+ 9D25 C5           Genera_coordenadas push bc
  13+ 9D26 E5           	push hl
  14+ 9D27 D5           	push de
  15+ 9D28
  16+ 9D28 2A B7 89     	ld hl,(Posicion_actual)
  17+ 9D2B
  18+ 9D2B 7D           	ld a,l
  19+ 9D2C E6 1F        	and $1f
  20+ 9D2E 32 BB 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D31
  22+ 9D31 CD 9A 99     	call calcula_tercio
  23+ 9D34 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D35
  25+ 9D35 1E 00        	ld e,0
  26+ 9D37 7D           	ld a,l
  27+ 9D38 E6 E0        	and $e0
  28+ 9D3A 28 01        	jr z,1F
  29+ 9D3C 04           	inc b
  30+ 9D3D
  31+ 9D3D 04           1 inc b
  32+ 9D3E 05           	dec b
  33+ 9D3F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D41              ;														; _ , salimos.
  35+ 9D41 1C           3 inc e
  36+ 9D42 D6 20        	sub 32
  37+ 9D44 20 FB        	jr nz,3B
  38+ 9D46 10 F5        	djnz 1B
  39+ 9D48
  40+ 9D48 7B           2 ld a,e
  41+ 9D49 32 BC 89     	ld (Coordenada_y),a
  42+ 9D4C
  43+ 9D4C D1           	pop de
  44+ 9D4D E1           	pop hl
  45+ 9D4E C1           	pop bc
  46+ 9D4F
  47+ 9D4F C9           	ret
  48+ 9D50
  49+ 9D50              ; ------------------------------------------------------------------------
  50+ 9D50              ;	28/05/23
  51+ 9D50              ;
  52+ 9D50              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D50              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D50              ;
  55+ 9D50              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D50              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D50              ;
  58+ 9D50              ;		DE="$120d"
  59+ 9D50              ;
  60+ 9D50              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D50              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D50              ;
  63+ 9D50              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D50
  65+ 9D50              ;	Modifica: A,BC y DE.
  66+ 9D50
  67+ 9D50
  68+ 9D50              Genera_coordenadas_disparo
  69+ 9D50
  70+ 9D50              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D50
  72+ 9D50 7D           	ld a,l
  73+ 9D51 E6 1F        	and $1f
  74+ 9D53 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D54 CD 9A 99     	call calcula_tercio
  76+ 9D57 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D58 1E 00        	ld e,0
  78+ 9D5A 7D           	ld a,l
  79+ 9D5B E6 E0        	and $e0
  80+ 9D5D 28 01        	jr z,1F
  81+ 9D5F 04           	inc b
  82+ 9D60 1C           1 inc e
  83+ 9D61 D6 20        	sub 32
  84+ 9D63 20 FB        	jr nz,1B
  85+ 9D65 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D67 C9           	ret
  87+ 9D68
# file closed: Genera_coordenadas.asm
1422  9D68              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D68
   2+ 9D68
   3+ 9D68              ;   07/07/23
   4+ 9D68              ;
   5+ 9D68              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D68              ;
   7+ 9D68              ;   Codificación:
   8+ 9D68              ;
   9+ 9D68              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D68              ;
  11+ 9D68              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D68              ;
  13+ 9D68              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D68              ;
  15+ 9D68              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D68              ;
  17+ 9D68              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D68              ;                               ..... %01000010 Vel_up 4
  19+ 9D68              ;                                               Vel_down 2
  20+ 9D68              ;                               ..... $42
  21+ 9D68              ;
  22+ 9D68              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D68              ;
  24+ 9D68              ;                               ..... %01000010 Vel_left 4
  25+ 9D68              ;                                               Vel_right 2
  26+ 9D68              ;                               ..... $42
  27+ 9D68              ;
  28+ 9D68              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D68              ;
  30+ 9D68              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D68              ;
  32+ 9D68              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D68              ;
  34+ 9D68              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D68              ;                                     $53
  36+ 9D68              ;
  37+ 9D68              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D68              ;
  39+ 9D68              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D68              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D68              ;
  42+ 9D68              ;                       Arriba ..... $81
  43+ 9D68              ;                       Arriba - izquierda ..... $a1
  44+ 9D68              ;                       Arriba - derecha ..... $91
  45+ 9D68              ;
  46+ 9D68              ;                       Abajo ..... $41
  47+ 9D68              ;                       Abajo - izquierda ..... $61
  48+ 9D68              ;                       Abajo - derecha ..... $51
  49+ 9D68              ;
  50+ 9D68              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D68              ;
  52+ 9D68              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D68              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D68              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D68              ;
  56+ 9D68              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D68              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D68              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D68              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D68              ;
  61+ 9D68              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D68              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D68              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D68              ;
  65+ 9D68              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D68              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D68              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D68              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D68
  70+ 9D68              ; ----- ----- ----- ----- -----
  71+ 9D68
  72+ 9D68 94 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D6A 9C 9D            defw F_1
  74+ 9D6C A6 9D            defw F_2
  75+ 9D6E B0 9D            defw Codo_abajo_derecha
  76+ 9D70 E4 9D            defw Derecha_y_subiendo
  77+ 9D72 EE 9D            defw Derecha_y_subiendo_1
  78+ 9D74 F8 9D            defw F_3
  79+ 9D76 02 9E            defw F_4
  80+ 9D78 0C 9E            defw Derecha_y_bajando
  81+ 9D7A 16 9E            defw Derecha_y_bajando_1
  82+ 9D7C 20 9E            defw Derecha_y_bajando_2
  83+ 9D7E 2A 9E            defw Codo_derecha_abajo
  84+ 9D80 5A 9E            defw Codo_abajo_izq.
  85+ 9D82 8E 9E            defw Izquierda_y_subiendo
  86+ 9D84 98 9E            defw Izquierda_y_subiendo_1
  87+ 9D86 A2 9E            defw F_5
  88+ 9D88 AC 9E            defw F_6
  89+ 9D8A B6 9E            defw Izquierda_y_bajando
  90+ 9D8C C0 9E            defw Izquierda_y_bajando_1
  91+ 9D8E CA 9E            defw Izquierda_y_bajando_2
  92+ 9D90 D4 9E            defw Codo_izquierda_abajo
  93+ 9D92 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D94
  95+ 9D94 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D98 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D9C
  98+ 9D9C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DA0 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DA4 08 00
 100+ 9DA6 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DAA 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DAE 0F FE
 102+ 9DB0
 103+ 9DB0 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DB4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DB8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DBC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DC0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DC4 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DC8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DCC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DD0 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DD4 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DD8 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DDC 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DE0 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DE4
 117+ 9DE4 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DE8 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DEC 06 00
 119+ 9DEE
 120+ 9DEE 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DF2 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DF6 02 00
 122+ 9DF8
 123+ 9DF8 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DFC 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E00 04 00
 125+ 9E02 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E06 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E0A 08 00
 127+ 9E0C
 128+ 9E0C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E10 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E14 02 00
 130+ 9E16
 131+ 9E16 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E1A 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E1E 06 00
 133+ 9E20
 134+ 9E20 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E24 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E28 06 00
 136+ 9E2A
 137+ 9E2A              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E2A
 139+ 9E2A 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E2E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E32 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E36 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E3A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E3E 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E42 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E46 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E4A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E4E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E52 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E56 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E5A
 152+ 9E5A 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E5E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E62 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E66 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E6A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E6E 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E72 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E76 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E7A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E7E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E82 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E86 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E8A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E8E
 166+ 9E8E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E92 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E96 06 00
 168+ 9E98
 169+ 9E98 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E9C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EA0 02 00
 171+ 9EA2
 172+ 9EA2 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EA6 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EAA 04 00
 174+ 9EAC 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EB0 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EB4 08 00
 176+ 9EB6
 177+ 9EB6 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EBA 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EBE 02 00
 179+ 9EC0
 180+ 9EC0 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EC4 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EC8 06 00
 182+ 9ECA
 183+ 9ECA 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9ECE 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9ED2 06 00
 185+ 9ED4
 186+ 9ED4 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9ED8 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EDC 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EE0 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EE4 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EE8 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EEC 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EF0 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EF4 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EF8 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EFC 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F00 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F04
 199+ 9F04              ; ----- ----- ----- ----- -----
 200+ 9F04              ;
 201+ 9F04              ;   27/06/23
 202+ 9F04
 203+ 9F04              Movimiento
 204+ 9F04
 205+ 9F04              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F04
 207+ 9F04              ;    ld hl,(Posicion_actual)
 208+ 9F04
 209+ 9F04 3A F6 89         ld a,(Ctrl_2)
 210+ 9F07 CB 57            bit 2,a
 211+ 9F09 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F0B
 213+ 9F0B 2A E8 89         ld hl,(Puntero_mov)
 214+ 9F0E 7E               ld a,(hl)
 215+ 9F0F
 216+ 9F0F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F0F
 218+ 9F0F              Inicia_desplazamiento.
 219+ 9F0F
 220+ 9F0F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F0F
 222+ 9F0F CD 03 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F12
 224+ 9F12              ; Iniciamos (Repetimos_mov).
 225+ 9F12
 226+ 9F12 7E               ld a,(hl)
 227+ 9F13 E6 0F            and $0f
 228+ 9F15 32 EE 89         ld (Repetimos_desplazamiento),a
 229+ 9F18 32 EF 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F1B
 231+ 9F1B              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F1B
 233+ 9F1B 23               inc hl
 234+ 9F1C 7E               ld a,(hl)
 235+ 9F1D 32 F1 89         ld (Cola_de_desplazamiento),a
 236+ 9F20 2B               dec hl
 237+ 9F21
 238+ 9F21 21 F6 89         ld hl,Ctrl_2
 239+ 9F24 CB D6            set 2,(hl)
 240+ 9F26
 241+ 9F26              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F26              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F26
 244+ 9F26              Desplazamiento_iniciado
 245+ 9F26
 246+ 9F26 CD D7 9F         call Aplica_desplazamiento
 247+ 9F29
 248+ 9F29 3A F6 89         ld a,(Ctrl_2)
 249+ 9F2C CB 67            bit 4,a
 250+ 9F2E C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F2F
 252+ 9F2F 21 EE 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F32 35               dec (hl)
 254+ 9F33 C0               ret nz
 255+ 9F34
 256+ 9F34              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F34              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F34              ; Analiza (Cola_de_desplazamiento).
 259+ 9F34
 260+ 9F34 3A F1 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F37 A7               and a
 262+ 9F38 CC 2C A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F3B 28 30            jr z,Reinicia_el_movimiento
 264+ 9F3D
 265+ 9F3D FE FF            cp $ff
 266+ 9F3F 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F41
 268+ 9F41 FE FE            cp $fe
 269+ 9F43 CC B0 9F         call z,Fijamos_bucle
 270+ 9F46 28 25            jr z,Reinicia_el_movimiento
 271+ 9F48
 272+ 9F48 FE FD            cp $fd
 273+ 9F4A 20 11            jr nz,1F
 274+ 9F4C
 275+ 9F4C              ; ---
 276+ 9F4C              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F4C
 278+ 9F4C 3A F6 89         ld a,(Ctrl_2)
 279+ 9F4F CB 5F            bit 3,a
 280+ 9F51 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F53
 282+ 9F53              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F53
 284+ 9F53 21 F6 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F56 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F58
 287+ 9F58 CD C1 9F         call Inicia_Repetimos_movimiento
 288+ 9F5B 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F5D              ; ---
 290+ 9F5D
 291+ 9F5D FE 01        1 cp 1
 292+ 9F5F CA 9A 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F62
 294+ 9F62 3D               dec a
 295+ 9F63 32 F1 89         ld (Cola_de_desplazamiento),a
 296+ 9F66
 297+ 9F66 3A EF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F69 32 EE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F6C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F6C C9               ret
 301+ 9F6D
 302+ 9F6D              Reinicia_el_movimiento
 303+ 9F6D
 304+ 9F6D 3A F6 89         ld a,(Ctrl_2)
 305+ 9F70 CB 5F            bit 3,a
 306+ 9F72 28 1B            jr z,2F
 307+ 9F74
 308+ 9F74              ; (Cola_de_desplazamiento)="254".
 309+ 9F74
 310+ 9F74 21 F0 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F77 35               dec (hl)
 312+ 9F78 20 15            jr nz,2F
 313+ 9F7A
 314+ 9F7A              ; Fin de las repeticiones del último movimiento.
 315+ 9F7A
 316+ 9F7A 21 F6 89         ld hl,Ctrl_2
 317+ 9F7D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F7F
 319+ 9F7F 2A E8 89         ld hl,(Puntero_mov)
 320+ 9F82 23               inc hl
 321+ 9F83 23               inc hl
 322+ 9F84 23               inc hl
 323+ 9F85 22 E8 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F88              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F88 7E               ld a,(hl)
 326+ 9F89 32 F1 89         ld (Cola_de_desplazamiento),a
 327+ 9F8C
 328+ 9F8C C3 34 9F         jp Cola
 329+ 9F8F
 330+ 9F8F
 331+ 9F8F CD CC 9F     2 call Inicia_Puntero_mov
 332+ 9F92
 333+ 9F92 21 F6 89         ld hl,Ctrl_2
 334+ 9F95 CB 96            res 2,(hl)
 335+ 9F97
 336+ 9F97 C3 04 9F         jp Movimiento
 337+ 9F9A
 338+ 9F9A              Siguiente_desplazamiento
 339+ 9F9A
 340+ 9F9A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F9A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F9A
 343+ 9F9A 21 F6 89         ld hl,Ctrl_2
 344+ 9F9D CB 96            res 2,(hl)
 345+ 9F9F
 346+ 9F9F 2A E8 89         ld hl,(Puntero_mov)
 347+ 9FA2 23               inc hl
 348+ 9FA3 23               inc hl
 349+ 9FA4 22 E8 89         ld (Puntero_mov),hl
 350+ 9FA7
 351+ 9FA7 7E               ld a,(hl)
 352+ 9FA8 A7               and a
 353+ 9FA9 CC 2C A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FAC CA 6D 9F         jp z,Reinicia_el_movimiento
 355+ 9FAF
 356+ 9FAF C9               ret
 357+ 9FB0              ; Subrutinas -----------------------------------------
 358+ 9FB0              ; ---------- --------- --------- ---------- ----------
 359+ 9FB0              ;
 360+ 9FB0              ;   24/07/23
 361+ 9FB0              ;
 362+ 9FB0              ;   Fijamos_bucle
 363+ 9FB0              ;
 364+ 9FB0              ;
 365+ 9FB0
 366+ 9FB0              Fijamos_bucle
 367+ 9FB0
 368+ 9FB0 3A EC 89         ld a,(Incrementa_puntero)
 369+ 9FB3 3C               inc a
 370+ 9FB4 32 ED 89         ld (Incrementa_puntero_backup),a
 371+ 9FB7
 372+ 9FB7 CD 2C A0         call Incrementa_Puntero_indice_mov
 373+ 9FBA 2A E6 89         ld hl,(Puntero_indice_mov)
 374+ 9FBD 22 EA 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FC0 C9               ret
 376+ 9FC1
 377+ 9FC1              ; ---------- --------- --------- ---------- ----------
 378+ 9FC1              ;
 379+ 9FC1              ;   07/7/23
 380+ 9FC1              ;
 381+ 9FC1              ;   Inicia_Repetimos_movimiento
 382+ 9FC1              ;
 383+ 9FC1              ;
 384+ 9FC1
 385+ 9FC1              Inicia_Repetimos_movimiento
 386+ 9FC1
 387+ 9FC1              ; Iniciamos (Repetimos_movimiento).
 388+ 9FC1
 389+ 9FC1 DD 2A E8 89      ld ix,(Puntero_mov)
 390+ 9FC5 DD 7E 02         ld a,(ix+2)
 391+ 9FC8 32 F0 89         ld (Repetimos_movimiento),a
 392+ 9FCB
 393+ 9FCB C9               ret
 394+ 9FCC
 395+ 9FCC              ; ---------- --------- --------- ---------- ----------
 396+ 9FCC              ;
 397+ 9FCC              ;   26/6/23
 398+ 9FCC              ;
 399+ 9FCC              ;   Inicia_Puntero_mov
 400+ 9FCC              ;
 401+ 9FCC              ;
 402+ 9FCC
 403+ 9FCC 2A E6 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FCF 5E               ld e,(hl)
 405+ 9FD0 23               inc hl
 406+ 9FD1 56               ld d,(hl)
 407+ 9FD2 EB               ex de,hl
 408+ 9FD3 22 E8 89         ld (Puntero_mov),hl
 409+ 9FD6 C9               ret
 410+ 9FD7
 411+ 9FD7              ; ---------- --------- --------- ---------- ----------
 412+ 9FD7              ;
 413+ 9FD7              ;   27/06/23
 414+ 9FD7              ;
 415+ 9FD7              ;   Aplica_movimiento.
 416+ 9FD7
 417+ 9FD7              Aplica_desplazamiento
 418+ 9FD7
 419+ 9FD7              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9FD7
 421+ 9FD7 2A E8 89         ld hl, (Puntero_mov)
 422+ 9FDA
 423+ 9FDA 7E               ld a,(hl)
 424+ 9FDB E6 F0            and $f0
 425+ 9FDD C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9FDE
 427+ 9FDE CB 7E            bit 7,(hl)
 428+ 9FE0 28 03            jr z,1F
 429+ 9FE2 CD 11 9A         call Mov_up
 430+ 9FE5 2A E8 89     1 ld hl, (Puntero_mov)
 431+ 9FE8 CB 76            bit 6,(hl)
 432+ 9FEA 28 03            jr z,2F
 433+ 9FEC CD E0 99         call Mov_down
 434+ 9FEF 2A E8 89     2 ld hl, (Puntero_mov)
 435+ 9FF2 CB 6E            bit 5,(hl)
 436+ 9FF4 28 03            jr z,3F
 437+ 9FF6 CD 72 9B         call Mov_left
 438+ 9FF9 2A E8 89     3 ld hl, (Puntero_mov)
 439+ 9FFC CB 66            bit 4,(hl)
 440+ 9FFE C8               ret z
 441+ 9FFF CD 54 9A         call Mov_right
 442+ A002 C9               ret
 443+ A003
 444+ A003              ; ---------- --------- --------- ---------- ----------
 445+ A003              ;
 446+ A003              ;   26/06/23
 447+ A003              ;
 448+ A003              ;   Ajusta_velocidad_desplazamiento.
 449+ A003
 450+ A003              Ajusta_velocidad_desplazamiento
 451+ A003
 452+ A003              ; 1er byte de la cadena de movimiento.
 453+ A003              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A003
 455+ A003 CD 21 A0         call Extrae_nibble_alto
 456+ A006
 457+ A006 32 CC 89         ld (Vel_up),a
 458+ A009 79               ld a,c
 459+ A00A E6 0F            and $0f
 460+ A00C 32 CD 89         ld (Vel_down),a
 461+ A00F
 462+ A00F              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A00F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A00F
 465+ A00F 23               inc hl
 466+ A010 CD 21 A0         call Extrae_nibble_alto
 467+ A013
 468+ A013 32 CA 89         ld (Vel_left),a
 469+ A016 79               ld a,c
 470+ A017 E6 0F            and $0f
 471+ A019 32 CB 89         ld (Vel_right),a
 472+ A01C
 473+ A01C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A01C
 475+ A01C 23               inc hl
 476+ A01D 22 E8 89         ld (Puntero_mov),hl
 477+ A020 C9               ret
 478+ A021
 479+ A021 06 04        Extrae_nibble_alto ld b,4
 480+ A023 7E               ld a,(hl)
 481+ A024 4F               ld c,a
 482+ A025 E6 F0            and $f0
 483+ A027 CB 3F        1 srl a
 484+ A029 10 FC            djnz 1B
 485+ A02B C9               ret
 486+ A02C
 487+ A02C              ; ---------- --------- --------- ---------- ----------
 488+ A02C              ;
 489+ A02C              ;   5/7/23
 490+ A02C              ;
 491+ A02C              ;   Incrementa_Puntero_indice_mov
 492+ A02C
 493+ A02C              Incrementa_Puntero_indice_mov
 494+ A02C
 495+ A02C 21 EC 89         ld hl,Incrementa_puntero
 496+ A02F 34               inc (hl)
 497+ A030
 498+ A030 2A E6 89         ld hl,(Puntero_indice_mov)
 499+ A033 01 02 00         ld bc,2
 500+ A036 A7               and a
 501+ A037 09               add hl,bc
 502+ A038 22 E6 89         ld (Puntero_indice_mov),hl
 503+ A03B
 504+ A03B 7E               ld a,(hl)
 505+ A03C A7               and a
 506+ A03D
 507+ A03D              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A03D
 509+ A03D              ;    jr z,$
 510+ A03D
 511+ A03D              ;! Reinicia el Patrón de movimiento.
 512+ A03D
 513+ A03D CC 42 A0         call z,Inicializa_Puntero_indice_mov
 514+ A040
 515+ A040 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A041
 517+ A041 C9               ret
 518+ A042
 519+ A042
 520+ A042              ; ---------- --------- --------- ---------- ----------
 521+ A042              ;
 522+ A042              ;   24/07/23
 523+ A042              ;
 524+ A042              ;   Inicializa_Puntero_indice_mov
 525+ A042
 526+ A042              Inicializa_Puntero_indice_mov
 527+ A042
 528+ A042              ; Existe etiqueta de bucle principal???
 529+ A042
 530+ A042 2A EA 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A045 24               inc h
 532+ A046 25               dec h
 533+ A047 28 05            jr z,2F
 534+ A049
 535+ A049 22 E6 89         ld (Puntero_indice_mov),hl
 536+ A04C 18 14            jr 3F
 537+ A04E
 538+ A04E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A04E
 540+ A04E 3A EC 89     2 ld a,(Incrementa_puntero)
 541+ A051 47               ld b,a
 542+ A052
 543+ A052 2A E6 89         ld hl,(Puntero_indice_mov)
 544+ A055 2B           1 dec hl
 545+ A056 2B               dec hl
 546+ A057 10 FC            djnz 1B
 547+ A059 22 E6 89         ld (Puntero_indice_mov),hl
 548+ A05C
 549+ A05C AF               xor a
 550+ A05D 32 EC 89         ld (Incrementa_puntero),a
 551+ A060 18 06            jr 4F
 552+ A062
 553+ A062 3A ED 89     3 ld a,(Incrementa_puntero_backup)
 554+ A065 32 EC 89         ld (Incrementa_puntero),a
 555+ A068 C9           4 ret
 556+ A069
 557+ A069
 558+ A069
# file closed: Patrones_de_mov.asm
1423  A069              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A069              ; Relojes y temporizaciones.
   2+ A069
   3+ A069              ; ------------------------------------------------------
   4+ A069              ;
   5+ A069              ;	16/7/23
   6+ A069              ;
   7+ A069              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A069              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A069              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A069              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A069              ;
  12+ A069              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A069              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A069
  15+ A069              ; Disparo_entidad db 1
  16+ A069              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A069              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A069
  19+ A069              Habilita_disparos
  20+ A069
  21+ A069 7E           	ld a,(hl)
  22+ A06A A7           	and a
  23+ A06B C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A06C
  25+ A06C EB           	ex de,hl
  26+ A06D
  27+ A06D 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A06E C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A06F
  30+ A06F              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A06F
  32+ A06F 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A070 7E           	ld a,(hl)
  34+ A071 23           	inc hl
  35+ A072 77           	ld (hl),a
  36+ A073
  37+ A073 EB           	ex de,hl						; Habilitamos disparo.
  38+ A074 3E 01        	ld a,1
  39+ A076 77           	ld (hl),a
  40+ A077 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1424  A078              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A078              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A078              ;
   3+ A078              ;	9/8/23
   4+ A078              ;
   5+ A078              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A078
   7+ A078              ;	ADC HL,SP	LD (addr),SP
   8+ A078              ;	ADD HL,SP	LD SP,(addr)
   9+ A078              ;	ADD IX,SP	LD SP,nn
  10+ A078              ; 	ADD IY,SP	LD SP,HL
  11+ A078              ;				LD SP,IX
  12+ A078              ;	DEC SP		LD SP,IY
  13+ A078
  14+ A078              ;	EX (SP),HL
  15+ A078              ;	EX (SP),IX
  16+ A078              ;	EX (SP),IY
  17+ A078
  18+ A078              ;	INC SP
  19+ A078
  20+ A078                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;    ld a,(Contador_de_frames)
  32+ 7FA0              ;    jr $
  33+ 7FA0
  34+ 7FA0
  35+ 7FA0 ED 73 09 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  36+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  37+ 7FA7
  38+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  39+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  40+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  41+ 7FAC
  42+ 7FAC 3A F8 89         ld a,(Ctrl_1)
  43+ 7FAF CB 47            bit 0,a
  44+ 7FB1 28 05            jr z,2F
  45+ 7FB3
  46+ 7FB3 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
  47+ 7FB6 18 03            jr 4F
  48+ 7FB8
  49+ 7FB8 2A 0D 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  50+ 7FBB
  51+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  52+ 7FBD
  53+ 7FBD D1           1 pop de
  54+ 7FBE 73               ld (hl),e
  55+ 7FBF 23               inc hl
  56+ 7FC0 72               ld (hl),d
  57+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  58+ 7FC2 10 F9            djnz 1B
  59+ 7FC4
  60+ 7FC4 CB 47            bit 0,a
  61+ 7FC6 28 05            jr z,5F
  62+ 7FC8
  63+ 7FC8 22 0F 8A         ld (Stack_snapshot_disparos),hl
  64+ 7FCB 18 03            jr 6F
  65+ 7FCD
  66+ 7FCD 22 0D 8A     5 ld (Stack_snapshot),hl
  67+ 7FD0 ED 7B 09 8A  6 ld sp,(Stack)
  68+ 7FD4
  69+ 7FD4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  70+ 7FD4
  71+ 7FD4 5D               ld e,l
  72+ 7FD5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  73+ 7FD6
  74+ 7FD6 2A 29 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  75+ 7FD9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  76+ 7FDA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  77+ 7FDB 72               ld (hl),d                                     ; _ álbum a otro.
  78+ 7FDC
  79+ 7FDC C9               ret
  80+ 7FDD
  81+ 7FDD              ; ------------------------------------------------
  82+ 7FDD              ;
  83+ 7FDD              ;   3/08/23
  84+ 7FDD              ;
  85+ 7FDD              ;   La rutina estará situada justo después de:
  86+ 7FDD              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDD              ;
  88+ 7FDD              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDD              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDD
  91+ 7FDD                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 11 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 11 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 15 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 11 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 15 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 15 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 19 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 15 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 19 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 19 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 1D 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 19 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 1D 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 1D 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1425  74C8
1426  74C8              	SAVESNA "Pruebas.sna", START
1427  74C8
1428  74C8
1429  74C8
1430  74C8
# file closed: Banco_de_pruebas.asm
