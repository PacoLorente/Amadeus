# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E1 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A E9 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 10        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20 CB 57        	bit 2,a
  41  AA22 28 0C        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  42  AA24
  43  AA24              ; Borramos:
  44  AA24
  45  AA24 CD ED 9A     	call Pinta_Sprites
  46  AA27
  47  AA27              ; Pintamos:
  48  AA27
  49  AA27 2A E3 89     	ld hl,(Album_de_pintado)
  50  AA2A 22 E7 89     	ld (Scanlines_album_SP),hl
  51  AA2D
  52  AA2D CD ED 9A     	call Pinta_Sprites
  53  AA30
  54  AA30              ;	ld a,6
  55  AA30              ;	out ($fe),a
  56  AA30              ;	call Pinta_Amadeus										; Borde amarillo.
  57  AA30
  58  AA30              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  59  AA30              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  60  AA30
  61  AA30              ;	ld a,7
  62  AA30              ;	out ($fe),a												; Borde blanco.
  63  AA30              ;	call Guarda_parametros_DRAW
  64  AA30              ;	call Restore_Amadeus
  65  AA30
  66  AA30              ; Posible colisión Entidad-Amadeus ???
  67  AA30
  68  AA30              ;	ld a,(Impacto2)
  69  AA30              ;	bit 2,a
  70  AA30              ;	jr z,1F
  71  AA30
  72  AA30              ;	call Detecta_colision_nave_entidad
  73  AA30
  74  AA30              ;1 ld a,4
  75  AA30              ;	out ($fe),a
  76  AA30              ;	call Gestiona_Amadeus
  77  AA30
  78  AA30              ;	ld a,7
  79  AA30              ;	out ($fe),a											; Borde blanco.
  80  AA30              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  81  AA30              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  82  AA30
  83  AA30              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  84  AA30
  85  AA30              ;	call Recupera_parametros_DRAW
  86  AA30
  87  AA30 CD 0B 8C     1 call Actualiza_relojes
  88  AA33
  89  AA33 21 E9 89     	ld hl,Ctrl_3
  90  AA36 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  91  AA38 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
  92  AA3A
  93  AA3A FD E1        	pop iy
  94  AA3C DD E1        	pop ix
  95  AA3E F1           	pop af
  96  AA3F C1           	pop bc
  97  AA40 D1           	pop de
  98  AA41 E1           	pop hl
  99  AA42 D9           	exx
 100  AA43 C1           	pop bc
 101  AA44 D1           	pop de
 102  AA45 E1           	pop hl
 103  AA46 08           	ex af,af'
 104  AA47 F1           	pop af
 105  AA48 08           	ex af,af'
 106  AA49 D9           	exx
 107  AA4A
 108  AA4A ED 7B E1 89  	ld sp,(Stack_3)
 109  AA4E
 110  AA4E FB           	ei
 111  AA4F
 112  AA4F 3E 01        	ld a,1												; Borde azul.
 113  AA51 D3 FE        	out ($fe),a
 114  AA53
 115  AA53 C9           	ret
 116  AA54
 117  AA54              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 118  AA54
 119  AA54              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA54              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA54              ;
   3+ AA54              ;	17/02/23
   4+ AA54              ;
   5+ AA54              ;	Sprites e índices.
   6+ AA54
   7+ AA54              	org $8319
   8+ 8319
   9+ 8319              ; Disparo.
  10+ 8319
  11+ 8319 21 83        Indice_disparo defw Disparo_0
  12+ 831B 27 83        	defw Disparo_f9
  13+ 831D 2D 83        	defw Disparo_fb
  14+ 831F 33 83        	defw Disparo_fd
  15+ 8321
  16+ 8321              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8321 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8325 01 80
  18+ 8327              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8327 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 832B 00 60
  20+ 832D              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 832D 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8331 18 00
  22+ 8333              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8333 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8337 06 00
  24+ 8339
  25+ 8339              ; ----------------------------------------------------------------------------------------
  26+ 8339
  27+ 8339              ; Badsat_izq. 2x2.
  28+ 8339
  29+ 8339 49 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 833B 90 84        	defw Badsat_izq_fe
  31+ 833D 60 84        	defw Badsat_izq_fd
  32+ 833F 30 84        	defw Badsat_izq_fc
  33+ 8341 00 84        	defw Badsat_izq_fb
  34+ 8343 C9 83        	defw Badsat_izq_fa
  35+ 8345 99 83        	defw Badsat_izq_f9
  36+ 8347 69 83        	defw Badsat_izq_f8
  37+ 8349
  38+ 8349 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 834D 02 2A 02 55
  39+ 8351 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8355 7F E8 03 60
  40+ 8359 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 835D 2B E8 54 40
  41+ 8361 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8365 28 00 10 00
  42+ 8369
  43+ 8369 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 836D 0A 00 01 15
  44+ 8371 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8375 01 55 00 01
  45+ 8379 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 837D 00 01 B0 00
  46+ 8381 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8385 FC 00 15 F4
  47+ 8389 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 838D 55 30 00 2A
  48+ 8391 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8395 00 08 00 00
  49+ 8399
  50+ 8399 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 839D 85 00 00 8A
  51+ 83A1 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 83A5 00 AA 80 00
  52+ 83A9 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 83AD 00 00 D8 00
  53+ 83B1 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 83B5 FE 00 0A FA
  54+ 83B9 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 83BD 2A 98 00 15
  55+ 83C1 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 83C5 00 04 00 00
  56+ 83C9
  57+ 83C9 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 83CD 42 80 00 45
  58+ 83D1 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 83D5 00 55 40 00
  59+ 83D9 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 83DD 00 00 6C 00
  60+ 83E1 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 83E5 FF 00 05 7D
  61+ 83E9 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 83ED 15 4C 00 0A
  62+ 83F1 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 83F5 00 02 00 00
  63+ 83F9
  64+ 83F9              ;! 7 bytes libres aquí !!!!!
  65+ 83F9
  66+ 83F9              	org $8400
  67+ 8400
  68+ 8400 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  68+ 8404 21 40 00 22
  69+ 8408 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  69+ 840C 00 2A A0 00
  70+ 8410 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  70+ 8414 80 00 36 00
  71+ 8418 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  71+ 841C 7F 80 02 BE
  72+ 8420 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  72+ 8424 0A A6 00 05
  73+ 8428 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  73+ 842C 00 01 00 00
  74+ 8430
  75+ 8430 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  75+ 8434 10 A0 00 11
  76+ 8438 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  76+ 843C 00 15 50 00
  77+ 8440 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  77+ 8444 40 00 1B 00
  78+ 8448 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  78+ 844C BF C0 01 5F
  79+ 8450 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  79+ 8454 05 53 00 02
  80+ 8458 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  80+ 845C 00 00 80 00
  81+ 8460
  82+ 8460 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  82+ 8464 08 50 00 08
  83+ 8468 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  83+ 846C 00 0A A8 00
  84+ 8470 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  84+ 8474 A0 00 0D 80
  85+ 8478 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  85+ 847C 5F F8 00 AF
  86+ 8480 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  86+ 8484 02 A9 00 01
  87+ 8488 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  87+ 848C 00 00 40 00
  88+ 8490
  89+ 8490 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  89+ 8494 04 28 00 04
  90+ 8498 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  90+ 849C 00 05 54 00
  91+ 84A0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  91+ 84A4 D0 00 06 C0
  92+ 84A8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  92+ 84AC 2F FC 00 57
  93+ 84B0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  93+ 84B4 01 54 80 00
  94+ 84B8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  94+ 84BC 00 00 20 00
  95+ 84C0
  96+ 84C0
  97+ 84C0 D0 84        Indice_Badsat_der defw Badsat_derecha
  98+ 84C2 00 85        	defw Badsat_der_f8
  99+ 84C4 30 85        	defw Badsat_der_f9
 100+ 84C6 60 85        	defw Badsat_der_fa
 101+ 84C8 90 85        	defw Badsat_der_fb
 102+ 84CA C0 85        	defw Badsat_der_fc
 103+ 84CC 00 86        	defw Badsat_der_fd
 104+ 84CE 30 86        	defw Badsat_der_fe
 105+ 84D0
 106+ 84D0 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 107+ 84D3 28 40 00     	DEFB    $28,$40,$00
 108+ 84D6 54 40 00     	DEFB	$54,$40,$00
 109+ 84D9 AA 40 00     	DEFB	$AA,$40,$00
 110+ 84DC 55 40 00     	DEFB	$55,$40,$00
 111+ 84DF 2A 40 00     	DEFB	$2A,$40,$00
 112+ 84E2 17 FE 00     	DEFB	$17,$FE,$00
 113+ 84E5 06 C0 00     	DEFB	$06,$C0,$00
 114+ 84E8 07 50 00     	DEFB	$07,$50,$00
 115+ 84EB 1F E8 00     	DEFB	$1F,$E8,$00
 116+ 84EE 17 D4 00     	DEFB	$17,$D4,$00
 117+ 84F1 02 2A 00     	DEFB	$02,$2A,$00
 118+ 84F4 06 55 00     	DEFB	$06,$55,$00
 119+ 84F7 00 2A 00     	DEFB	$00,$2A,$00
 120+ 84FA 00 14 00     	DEFB	$00,$14,$00
 121+ 84FD 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 122+ 8500
 123+ 8500 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 123+ 8504 20 00 2A 20
 124+ 8508 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 124+ 850C 2A A0 00 15
 125+ 8510 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 125+ 8514 00 03 60 00
 126+ 8518 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 126+ 851C F4 00 0B EA
 127+ 8520 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 127+ 8524 03 2A 80 00
 128+ 8528 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 128+ 852C 00 00 04 00
 129+ 8530
 130+ 8530 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 130+ 8534 10 00 15 10
 131+ 8538 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 131+ 853C 15 50 00 0A
 132+ 8540 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 132+ 8544 80 01 B0 00
 133+ 8548 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 133+ 854C FA 00 05 F5
 134+ 8550 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 134+ 8554 01 95 40 00
 135+ 8558 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 135+ 855C 00 00 02 00
 136+ 8560
 137+ 8560 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 137+ 8564 08 00 0A 88
 138+ 8568 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 138+ 856C 0A A8 00 05
 139+ 8570 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 139+ 8574 C0 00 D8 00
 140+ 8578 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 140+ 857C FD 00 02 FA
 141+ 8580 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 141+ 8584 00 CA A0 00
 142+ 8588 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 142+ 858C 80 00 01 00
 143+ 8590
 144+ 8590 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 144+ 8594 84 00 05 44
 145+ 8598 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 145+ 859C 05 54 00 02
 146+ 85A0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 146+ 85A4 E0 00 6C 00
 147+ 85A8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 147+ 85AC FE 80 01 7D
 148+ 85B0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 148+ 85B4 00 65 50 00
 149+ 85B8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 149+ 85BC 40 00 00 80
 150+ 85C0
 151+ 85C0 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 151+ 85C4 42 00 02 A2
 152+ 85C8 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 152+ 85CC 02 AA 00 01
 153+ 85D0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 153+ 85D4 F0 00 36 00
 154+ 85D8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 154+ 85DC FF 40 00 BE
 155+ 85E0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 155+ 85E4 00 32 A8 00
 156+ 85E8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 156+ 85EC A0 00 00 40
 157+ 85F0
 158+ 85F0              ;! 16 bytes libres aquí !!!!!
 159+ 85F0
 160+ 85F0              	org $8600
 161+ 8600
 162+ 8600 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 162+ 8604 A1 00 01 51
 163+ 8608 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 163+ 860C 01 55 00 00
 164+ 8610 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 164+ 8614 F8 00 1B 00
 165+ 8618 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 165+ 861C FF A0 00 1F
 166+ 8620 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 166+ 8624 00 09 54 00
 167+ 8628 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 167+ 862C 50 00 00 20
 168+ 8630
 169+ 8630 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 169+ 8634 50 80 00 A8
 170+ 8638 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 170+ 863C 00 AA 80 00
 171+ 8640 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 171+ 8644 FC 00 0D 80
 172+ 8648 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 172+ 864C FF D0 00 0F
 173+ 8650 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 173+ 8654 00 04 AA 00
 174+ 8658 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 174+ 865C 28 00 00 10
 175+ 8660
 176+ 8660              ; ----------------------------------------------------------------------------------------
 177+ 8660
 178+ 8660              ; Amadeus. 2x2.
 179+ 8660
 180+ 8660              	org $8119
 181+ 8119
 182+ 8119 39 81        Indice_Amadeus_der defw Amadeus
 183+ 811B 00 00        	defw 0
 184+ 811D 59 81        	defw Amadeus_F9							; [$F9] right - [$FA] left
 185+ 811F 00 00        	defw 0
 186+ 8121 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 187+ 8123 00 00        	defw 0
 188+ 8125 B9 81        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 189+ 8127 00 00        	defw 0	 								; (Fín de índice).
 190+ 8129
 191+ 8129 39 81        Indice_Amadeus_izq defw Amadeus
 192+ 812B 00 00        	defw 0
 193+ 812D B9 81        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 194+ 812F 00 00        	defw 0
 195+ 8131 89 81        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 196+ 8133 00 00        	defw 0
 197+ 8135 59 81        	defw Amadeus_F9							; [$FD] right - [$FE] left
 198+ 8137 00 00        	defw 0	 								; (Fín de índice).
 199+ 8139
 200+ 8139 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 200+ 813D 26 64 24 24
 201+ 8141 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 201+ 8145 6F F6 67 E6
 202+ 8149 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 202+ 814D F7 EF FF FF
 203+ 8151 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 203+ 8155 8B D1 71 8E
 204+ 8159
 205+ 8159 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 205+ 815D F1 00 09 99
 206+ 8161 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 206+ 8165 0B 0D 00 1B
 207+ 8169 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 207+ 816D 80 19 F9 80
 208+ 8171 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 208+ 8175 F3 C0 3D FB
 209+ 8179 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 209+ 817D 3E F7 C0 3E
 210+ 8181 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 210+ 8185 40 1C 63 80
 211+ 8189
 212+ 8189 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 212+ 818D 3C 40 02 66
 213+ 8191 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 213+ 8195 02 C3 40 06
 214+ 8199 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 214+ 819D 60 06 7E 60
 215+ 81A1 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 215+ 81A5 3C F0 0F 7E
 216+ 81A9 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 216+ 81AD 0F BD F0 0F
 217+ 81B1 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 217+ 81B5 10 07 18 E0
 218+ 81B9
 219+ 81B9 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 219+ 81BD 8F 10 00 99
 220+ 81C1 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 220+ 81C5 00 B0 D0 01
 221+ 81C9 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 221+ 81CD D8 01 9F 98
 222+ 81D1 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 222+ 81D5 CF 3C 03 DF
 223+ 81D9 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 223+ 81DD 03 EF 7C 03
 224+ 81E1 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 224+ 81E5 44 01 C6 38
 225+ 81E9
 226+ 81E9              ; ----------------------------------------------------------------------------------------
 227+ 81E9
 228+ 81E9              	org $8660
 229+ 8660
 230+ 8660 66 86        Indice_Explosion_2x3 defw Explosion_2x3_1
 231+ 8662 96 86        	defw Explosion_2x3_2
 232+ 8664 C6 86        	defw Explosion_2x3_3
 233+ 8666
 234+ 8666 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 234+ 866A 10 00 04 38
 235+ 866E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 235+ 8672 02 E6 80 01
 236+ 8676 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 236+ 867A 00 03 DD 80
 237+ 867E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 237+ 8682 3B 80 01 9D
 238+ 8686 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 238+ 868A 02 FD 80 03
 239+ 868E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 239+ 8692 00 08 00 00
 240+ 8696
 241+ 8696 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 241+ 869A 38 10 03 BC
 242+ 869E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 242+ 86A2 04 06 C0 00
 243+ 86A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 243+ 86AA 00 03 DD 80
 244+ 86AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 244+ 86B2 3A 70 01 9C
 245+ 86B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 245+ 86BA 04 F8 80 06
 246+ 86BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 246+ 86C2 00 00 00 00
 247+ 86C6
 248+ 86C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 248+ 86CA 00 20 08 00
 249+ 86CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 249+ 86D2 00 06 00 00
 250+ 86D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 250+ 86DA 00 00 14 30
 251+ 86DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 251+ 86E2 38 00 01 08
 252+ 86E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 252+ 86EA 00 80 00 04
 253+ 86EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 253+ 86F2 10 08 00 20
 254+ 86F6
 255+ 86F6              ; ------------------------------------------
 256+ 86F6
 257+ 86F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 258+ 86F8 20 86        	defw Explosion_2x2_2
 259+ 86FA 40 86        	defw Explosion_2x2_3
 260+ 86FC
 261+ 86FC              	org $8600
 262+ 8600
 263+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 263+ 8604 43 84 37 D8
 264+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 264+ 860C 17 F0 3D D8
 265+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 265+ 8614 19 D0 1F 60
 266+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 266+ 861C 40 00 80 00
 267+ 8620
 268+ 8620
 269+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 269+ 8624 3B C2 60 0C
 270+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 270+ 862C 07 F0 3D D8
 271+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 271+ 8634 19 C6 1F 64
 272+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 272+ 863C 80 00 00 00
 273+ 8640
 274+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 274+ 8644 88 04 10 0C
 275+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 275+ 864C 81 E0 01 43
 276+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 276+ 8654 10 80 18 00
 277+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 277+ 865C 60 01 80 02
 278+ 8660
 279+ 8660
 280+ 8660
 281+ 8660
 282+ 8660
# file closed: Sprites_e_indices.asm
 120  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 19 81        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 29 81        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8715 00 00        	defw 0
 141+ 8717
 142+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8719 40           	db $40												; (Ctrl_0).
 144+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 871E 00 00
 145+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8726 00           	db 0 												; (Columnas).
 149+ 8727 00 00        	defw 0												; (Limite_horizontal).
 150+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 872C
 152+ 872C              ; ---------- ---------- ---------- ---------- ----------
 153+ 872C              ;
 154+ 872C              ;	22/01/24
 155+ 872C              ;
 156+ 872C              ; 	Cada caja tiene 19 bytes !!!
 157+ 872C
 158+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 872F 00           	db %00000000										; (Attr).
 160+ 8730              ;	db 0												; (Cuad_objeto).
 161+ 8730 00           	db 0												; (Impacto).
 162+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 873D 00           	db 0												; (Ctrl_0).
 167+ 873E 00           	db 0												; (Ctrl_2).
 168+ 873F
 169+ 873F              ; ---------- ---------- ---------- ---------- ----------
 170+ 873F
 171+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 8742 00           	db %00000000										; (Attr).
 173+ 8743              ;	db 0												; (Cuad_objeto).
 174+ 8743 00           	db 0												; (Impacto).
 175+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 8750 00           	db 0												; (Ctrl_0).
 180+ 8751 00           	db 0												; (Ctrl_2).
 181+ 8752
 182+ 8752              ; ---------- ---------- ---------- ---------- ----------
 183+ 8752
 184+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8755 00           	db %00000000										; (Attr).
 186+ 8756              ;	db 0												; (Cuad_objeto).
 187+ 8756 00           	db 0												; (Impacto).
 188+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8763 00           	db 0												; (Ctrl_0).
 193+ 8764 00           	db 0												; (Ctrl_2).
 194+ 8765
 195+ 8765              ; ---------- ---------- ---------- ---------- ----------
 196+ 8765
 197+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8768 00           	db %00000000										; (Attr).
 199+ 8769              ;	db 0												; (Cuad_objeto).
 200+ 8769 00           	db 0												; (Impacto).
 201+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 8776 00           	db 0												; (Ctrl_0).
 206+ 8777 00           	db 0												; (Ctrl_2).
 207+ 8778
 208+ 8778              ; ---------- ---------- ---------- ---------- ----------
 209+ 8778
 210+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 877B 00           	db %00000000										; (Attr).
 212+ 877C              ;	db 0												; (Cuad_objeto).
 213+ 877C 00           	db 0												; (Impacto).
 214+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 8789 00           	db 0												; (Ctrl_0).
 219+ 878A 00           	db 0												; (Ctrl_2).
 220+ 878B
 221+ 878B              ; ---------- ---------- ---------- ---------- ----------
 222+ 878B
 223+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 878E 00           	db %00000000										; (Attr).
 225+ 878F              ;	db 0												; (Cuad_objeto).
 226+ 878F 00           	db 0												; (Impacto).
 227+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 879C 00           	db 0												; (Ctrl_0).
 232+ 879D 00           	db 0												; (Ctrl_2).
 233+ 879E
 234+ 879E              ; ---------- ---------- ---------- ---------- ----------
 235+ 879E
 236+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 87A1 00           	db %00000000										; (Attr).
 238+ 87A2              ;	db 0												; (Cuad_objeto).
 239+ 87A2 00           	db 0												; (Impacto).
 240+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 87AF 00           	db 0												; (Ctrl_0).
 245+ 87B0 00           	db 0												; (Ctrl_2).
 246+ 87B1
 247+ 87B1              ; -------------------------------------------------------------------------------------
 248+ 87B1              ;
 249+ 87B1              ;	11/1/24
 250+ 87B1              ;
 251+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 87B1              ;
 253+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 87B1
 258+ 87B1              Indice_de_definiciones_de_entidades
 259+ 87B1
 260+ 87B1 B5 87        	defw Entidad_1
 261+ 87B3 C2 87        	defw Entidad_2
 262+ 87B5
 263+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 87B5
 265+ 87B5              ;	BADSAT, (Satélite malvado).
 266+ 87B5
 267+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87B8 04           	db %00000100										; (Attr).
 269+ 87B9 C0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87BB 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87BD 03 40        	defw $4003	                                     	; (Posicion_inicio).
 272+ 87BF 01           	db 1												; (Cuad_objeto).
 273+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87C2
 275+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87C5 02           	db %00000010										; (Attr).
 277+ 87C6 C0 84        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87C8 39 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87CC 01           	db 1												; (Cuad_objeto).
 281+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87CF
# file closed: Cajas_y_disparos.asm
 121  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 122  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
# file closed: Niveles.asm
 123  898A
 124  898A              ; ******************************************************************************************************************************************************************************************
 125  898A              ; Constantes.
 126  898A              ; ******************************************************************************************************************************************************************************************
 127  898A              ;
 128  898A              ; 09/03/24
 129  898A
 130  898A              ;
 131  898A              ; Constantes.
 132  898A              ;
 133  898A
 134  898A              Sprite_vacio equ $eae0
 135  898A
 136  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 137  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 138  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 139  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 140  898A
 141  898A              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 142  898A              ;Almacen_de_scanlines_masticados equ $e900
 143  898A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 144  898A              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 145  898A              ;
 146  898A              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 147  898A
 148  898A              ;	($8119 - $81e8) = Índice y datos de Amadeus. "$d0", 208 bytes.
 149  898A
 150  898A
 151  898A              ;                                                       ;	35 bytes por entidad.
 152  898A              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 153  898A              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 154  898A              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 155  898A              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 156  898A
 157  898A              Scanlines_album_2 equ $8200    ;    (8200h - 8318h)
 158  898A
 159  898A              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 160  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 161  898A              ;														; 55 Bytes.
 162  898A
 163  898A              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 164  898A
 165  898A              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 166  898A
 167  898A
 168  898A              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 169  898A
 170  898A              ; ******************************************************************************************************************************************************************************************
 171  898A              ; Variables.
 172  898A              ; ******************************************************************************************************************************************************************************************
 173  898A              ;
 174  898A              ; 18/01/24
 175  898A              ;
 176  898A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 177  898A              ;
 178  898A
 179  898A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 180  898A
 181  898A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 182  898B              ;															- Patrón de movimiento.
 183  898B              ;															- Aspecto
 184  898B 00           Filas db 0												; Filas. [DRAW]
 185  898C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 186  898D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 187  898F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 188  8991 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 189  8992 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 190  8993
 191  8993              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 192  8993
 193  8993 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 194  8994              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 195  8994              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 196  8994 00           Attr db 0												; Atributos de la entidad:
 197  8995
 198  8995              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 199  8995              ;
 200  8995              ;	COLORES: 0 ..... NEGRO
 201  8995              ;    		 1 ..... AZUL
 202  8995              ; 			 2 ..... ROJO
 203  8995              ;			 3 ..... MAGENTA
 204  8995              ; 			 4 ..... VERDE
 205  8995              ; 			 5 ..... CIAN
 206  8995              ;			 6 ..... AMARILLO
 207  8995              ; 			 7 ..... BLANCO
 208  8995
 209  8995 00 00        Indice_Sprite_der defw 0
 210  8997 00 00        Indice_Sprite_izq defw 0
 211  8999 00 00        Puntero_DESPLZ_der defw 0
 212  899B 00 00        Puntero_DESPLZ_izq defw 0
 213  899D
 214  899D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 215  899F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 216  89A0
 217  89A0              ; Variables de objeto. (Características).
 218  89A0
 219  89A0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 220  89A1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 221  89A1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 222  89A1 00 00 00...  Variables_de_borrado ds 6
 223  89A7
 224  89A7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 225  89A9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 226  89A9
 227  89A9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 228  89AB
 229  89AB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 230  89AB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 231  89AB
 232  89AB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 233  89AD              ;														; _palabras que componen el "movimiento_masticado".
 234  89AD
 235  89AD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 236  89AD
 237  89AD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 238  89AE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 239  89AE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 240  89AE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 241  89AE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 242  89AE              ;
 243  89AE              ; 														DESCRIPCIÖN:
 244  89AE              ;
 245  89AE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 246  89AE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 247  89AE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 248  89AE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 249  89AE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 250  89AE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 251  89AE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 252  89AE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 253  89AE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 254  89AE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 255  89AE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 256  89AE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 257  89AE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 258  89AE              ;
 259  89AE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 260  89AE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 261  89AE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 262  89AE
 263  89AE              ; Variables de funcionamiento. [DRAW].
 264  89AE
 265  89AE 00           Columnas db 0
 266  89AF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 267  89B1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 268  89B1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 269  89B2
 270  89B2              ; variables de control general.
 271  89B2
 272  89B2 00           Ctrl_2 db 0
 273  89B3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 274  89B3              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 275  89B3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 276  89B3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 277  89B3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 278  89B3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 279  89B3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 280  89B3              ;
 281  89B3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 282  89B3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 283  89B3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 284  89B3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 285  89B3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 286  89B3              ;														BIT 4, ???
 287  89B3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 288  89B3
 289  89B3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 290  89B4
 291  89B4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 292  89B4
 293  89B4              ;					         		---------;      ;---------
 294  89B4
 295  89B4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 296  89B4
 297  89B4              Perfiles_de_velocidad
 298  89B4
 299  89B4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 300  89B5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 301  89B6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 302  89B7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 303  89B8
 304  89B8              ; Contadores de 16 bits.
 305  89B8
 306  89B8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 307  89BA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 308  89BC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 309  89BE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 310  89C0
 311  89C0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 312  89C0
 313  89C0              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 314  89C0              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 315  89C0              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 316  89C0
 317  89C0              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 318  89C0
 319  89C0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 320  89C2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 321  89C4 00 00        Puntero_indice_mov_bucle defw 0							;
 322  89C6              ;
 323  89C6              ;
 324  89C6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 325  89C7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 326  89C7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 327  89C7 00           Incrementa_puntero_backup db 0
 328  89C8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 329  89C9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 330  89C9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 331  89CA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 332  89CB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 333  89CC              ;
 334  89CC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 335  89CC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 336  89CC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 337  89CC              ;
 338  89CC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 339  89CC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 340  89CC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 341  89CC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 342  89CC              ;
 343  89CC              ;														;	"$ff" ..... Bucle infinito de repetición.
 344  89CC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 345  89CC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 346  89CC              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 347  89CC
 348  89CC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 349  89CD
 350  89CD              ;														DESCRIPCIÓN:
 351  89CD              ;
 352  89CD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 353  89CD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 354  89CD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 355  89CD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 356  89CD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 357  89CD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 358  89CD
 359  89CD              ;														BIT 3, Recarga de nueva oleada.
 360  89CD              ;														BIT 4, Recarga de nueva oleada.
 361  89CD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 362  89CD              ;														BIT 6, **** Frame completo.
 363  89CD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 364  89CD
 365  89CD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 366  89CF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 367  89CF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 368  89CF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 369  89CF
 370  89CF              ; Gestión de ENTIDADES y CAJAS.
 371  89CF
 372  89CF 00 00        Puntero_store_caja defw 0
 373  89D1 00 00        Puntero_restore_caja defw 0
 374  89D3 00 00        Indice_restore_caja defw 0
 375  89D5 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 376  89D6 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 377  89D7 00           Entidades_en_curso db 0									; ..... ..... .....
 378  89D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 379  89D9              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 380  89D9              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 381  89D9              ;														; _ (Numero_de_malotes)="0".
 382  89D9 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 383  89DB 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 384  89DD              ;														; _ puntero (Indice_entidades).
 385  89DD
 386  89DD              ;---------------------------------------------------------------------------------------------------------------
 387  89DD              ;
 388  89DD              ;	11/01/24
 389  89DD              ;
 390  89DD              ;	Álbumes.
 391  89DD
 392  89DD 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 393  89DF              ;														; _variable para almacenar lo posición del puntero_
 394  89DF              ; 														; _de pila, SP.
 395  89DF 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 396  89E1              ;														; La utiliza la rutina [Extrae_foto_registros].
 397  89E1 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 398  89E3
 399  89E3 00 00        Album_de_pintado defw 0
 400  89E5 00 00        Album_de_borrado defw 0
 401  89E7              ;Techo_Scanlines_album defw 0
 402  89E7              ;Techo_Scanlines_album_2 defw 0
 403  89E7
 404  89E7              ;Techo defw 0
 405  89E7 00 00        Scanlines_album_SP defw 0
 406  89E9
 407  89E9 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 408  89EA              ;
 409  89EA              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 410  89EA              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 411  89EA              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 412  89EA              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 413  89EA              ;																Habilita el borrado/pintado de sprites.
 414  89EA
 415  89EA 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 416  89EB              ;
 417  89EB              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 418  89EB              ;
 419  89EB              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 420  89EB              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 421  89EB              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 422  89EB              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 423  89EB              ;
 424  89EB              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 425  89EB              ;															_ masticados ya generados.
 426  89EB              ;
 427  89EB              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 428  89EB              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 429  89EB              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 430  89EB              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 431  89EB
 432  89EB
 433  89EB              ; Gestión de Disparos.
 434  89EB
 435  89EB              ;;Numero_de_disparotes db 0
 436  89EB              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 437  89EB              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 438  89EB              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 439  89EB              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 440  89EB              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 441  89EB              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 442  89EB              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 443  89EB              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 444  89EB              ;														; _produzca colisión.
 445  89EB              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 446  89EB              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 447  89EB              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 448  89EB              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 449  89EB 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 450  89EE              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 451  89EE              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 452  89EE
 453  89EE              ;---------------------------------------------------------------------------------------------------------------
 454  89EE
 455  89EE              ; Relojes y temporizaciones.
 456  89EE
 457  89EE 00           Contador_de_frames db 0
 458  89EF 00           Contador_de_frames_2 db 0
 459  89F0
 460  89F0              ;Clock_explosion db 4
 461  89F0 14           Clock_Entidades_en_curso db 20
 462  89F1 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 463  89F2              ;														; Repite la oleada de entidades.
 464  89F2              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 465  89F2              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 466  89F2              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 467  89F2
 468  89F2              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 469  89F2              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 470  89F2              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 471  89F2
 472  89F2              ;---------------------------------------------------------------------------------------------------------------
 473  89F2
 474  89F2              ; Gestión de NIVELES.
 475  89F2
 476  89F2 00           Nivel db 0												; Nivel actual del juego.
 477  89F3 00 00        Puntero_indice_NIVELES defw 0
 478  89F5 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 479  89F7              ; 														; _ que definen el NIVEL.
 480  89F7              ; Y todo comienza aquí .....
 481  89F7              ;
 482  89F7              ; 	INICIO  *************************************************************************************************************************************************************************
 483  89F7              ;
 484  89F7              ;	5/1/24
 485  89F7
 486  89F7              START
 487  89F7
 488  89F7 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 489  89FA 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 490  89FC ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 491  89FE ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 492  8A00 F3           	DI
 493  8A01
 494  8A01              ;	ld a,%00000111
 495  8A01              ;	call Cls
 496  8A01 CD F7 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 497  8A04
 498  8A04              ; INICIALIZACIÓN.
 499  8A04
 500  8A04              ;	Inicializa 1er Nivel.
 501  8A04
 502  8A04 21 6B 89     	ld hl,Indice_de_niveles
 503  8A07 22 F3 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 504  8A0A CD 1D 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 505  8A0D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 506  8A0D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 507  8A0D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 508  8A0D
 509  8A0D              ;	Provisional, (para desarrollo).
 510  8A0D              	;-
 511  8A0D              ;	ld hl,Numero_parcial_de_entidades
 512  8A0D              ;	ld b,(hl)
 513  8A0D              ;	inc b
 514  8A0D              ;	dec b
 515  8A0D              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 516  8A0D
 517  8A0D CD 3D 8B     	call Inicia_albumes_de_lineas
 518  8A10
 519  8A10 CD 62 8C     4 call Inicia_Entidades
 520  8A13
 521  8A13 CD 4D 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 522  8A16              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 523  8A16              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 524  8A16              ; (Esto se dá cuando se inicia una nueva oleada).
 525  8A16
 526  8A16              ;	ld a,(Ctrl_1)
 527  8A16              ;	bit 3,a
 528  8A16              ;	jr nz,5F											 ; Loop
 529  8A16
 530  8A16              ; 	INICIA AMADEUS !!!!!
 531  8A16
 532  8A16              ;3 call Restore_Amadeus
 533  8A16              ;	call Inicia_Puntero_objeto
 534  8A16              ;	call Draw
 535  8A16
 536  8A16              ;	call Guarda_movimiento_masticado	;! Provisional
 537  8A16
 538  8A16              ;	call Genera_datos_de_impresion
 539  8A16              ;	call Guarda_datos_de_borrado_Amadeus
 540  8A16
 541  8A16              ;	ld de,Amadeus_db
 542  8A16              ;	call Store_Amadeus
 543  8A16
 544  8A16              ; 	INICIA DISPAROS !!!!!
 545  8A16
 546  8A16              ;	call Inicia_Puntero_Disparo_Entidades
 547  8A16              ;	call Inicia_Puntero_Disparo_Amadeus
 548  8A16
 549  8A16              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 550  8A16
 551  8A16              ;5 call Inicia_punteros_de_cajas
 552  8A16              ;	call Restore_entidad
 553  8A16
 554  8A16              ;	ld a,(Ctrl_1)
 555  8A16              ;	bit 3,a
 556  8A16              ;	jr z,6F
 557  8A16
 558  8A16              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 559  8A16
 560  8A16              ;	ld hl,Ctrl_1
 561  8A16              ;	res 3,(hl)
 562  8A16              ;	jr Main
 563  8A16
 564  8A16              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 565  8A16
 566  8A16              6
 567  8A16
 568  8A16              ;	call Calcula_numero_de_malotes
 569  8A16
 570  8A16              ; Damos por concluida la construcción del FRAME.
 571  8A16              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 572  8A16
 573  8A16              ;	ld hl,(Scanlines_album_SP)
 574  8A16              ;	ld (Techo),hl
 575  8A16              ;	ld (Techo_Scanlines_album),hl
 576  8A16
 577  8A16 2A E5 89     	ld hl,(Album_de_borrado)
 578  8A19 22 E7 89     	ld (Scanlines_album_SP),hl
 579  8A1C
 580  8A1C 21 E9 89     	ld hl,Ctrl_3
 581  8A1F CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 582  8A21 CB D6        	set 2,(hl)
 583  8A23
 584  8A23 FB           	ei
 585  8A24 76           	halt
 586  8A25
 587  8A25              ; ------------------------------------
 588  8A25
 589  8A25              Main
 590  8A25              ;
 591  8A25              ;	11/12/23
 592  8A25
 593  8A25              ; Aparece nueva entidad ???
 594  8A25
 595  8A25              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 596  8A25              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 597  8A25              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 598  8A25              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 599  8A25              ;														; _un 2º bloque.
 600  8A25
 601  8A25              ;	call Genera_scanlines_masticados_a_borrar
 602  8A25              ;	call Limpia_Almacen_de_scanlines_masticados
 603  8A25
 604  8A25              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 605  8A25              ; 													 	; _(Scanlines_album_SP).
 606  8A25
 607  8A25 3A F0 89     	ld a,(Clock_Entidades_en_curso)
 608  8A28 47           	ld b,a
 609  8A29 3A EE 89     	ld a,(Contador_de_frames)
 610  8A2C B8           	cp b
 611  8A2D 20 18        	jr nz,13F
 612  8A2F
 613  8A2F              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 614  8A2F              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 615  8A2F
 616  8A2F 3A D6 89     21 ld a,(Numero_parcial_de_entidades)
 617  8A32 47           	ld b,a
 618  8A33 3A D7 89     	ld a,(Entidades_en_curso)
 619  8A36 B8           	cp b
 620  8A37 28 0E        	jr z,13F
 621  8A39 30 0C        	jr nc,13F
 622  8A3B
 623  8A3B 3C           	inc a
 624  8A3C 32 D7 89     	ld (Entidades_en_curso),a
 625  8A3F
 626  8A3F              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 627  8A3F
 628  8A3F 3A F0 89     	ld a,(Clock_Entidades_en_curso)
 629  8A42              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 630  8A42              ;! _ IMPREDECIBLE !!!!
 631  8A42 C6 64        	add 100
 632  8A44 32 F0 89     	ld (Clock_Entidades_en_curso),a
 633  8A47
 634  8A47              ; -------------------------------------------------------------------------------------------------------------
 635  8A47
 636  8A47              ; Habilita disparos.
 637  8A47
 638  8A47              13
 639  8A47
 640  8A47              ;	ld hl,Disparo_Amadeus
 641  8A47              ;	ld de,CLOCK_repone_disparo_Amadeus
 642  8A47              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 643  8A47
 644  8A47              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 645  8A47              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 646  8A47              ;	call Habilita_disparos
 647  8A47
 648  8A47              ; COLISIONES.
 649  8A47
 650  8A47              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 651  8A47
 652  8A47              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 653  8A47              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 654  8A47              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 655  8A47
 656  8A47              ;	xor a
 657  8A47              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 658  8A47
 659  8A47              ;	call Inicia_punteros_de_cajas
 660  8A47              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 661  8A47              ; 														; _ en DRAW.
 662  8A47
 663  8A47              ;	ld a,(Filas)
 664  8A47              ;	and a
 665  8A47              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 666  8A47              ;	call Incrementa_punteros_de_cajas
 667  8A47              ;	jr 12B
 668  8A47
 669  8A47              ; ---------------------------------------------------------------------------------------
 670  8A47
 671  8A47 3A D6 89     10 ld a,(Numero_parcial_de_entidades)
 672  8A4A 47               ld b,a
 673  8A4B A7           	and a
 674  8A4C 20 00        	jr nz,11F
 675  8A4E
 676  8A4E              ;	ld hl,Ctrl_1;
 677  8A4E              ;	bit 4,(hl)
 678  8A4E              ;	jp nz,16F
 679  8A4E
 680  8A4E              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 681  8A4E
 682  8A4E              ;	ld hl,Ctrl_1
 683  8A4E              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 684  8A4E
 685  8A4E              ;	ld a,(Contador_de_frames)
 686  8A4E              ;	inc a
 687  8A4E              ;	ld (Activa_recarga_cajas),a
 688  8A4E
 689  8A4E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 690  8A4E
 691  8A4E 3A D7 89     11 ld a,(Entidades_en_curso)
 692  8A51 A7           	and a
 693  8A52 28 1C        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 694  8A54 47           	ld b,a												; No hay entidades que gestionar.
 695  8A55
 696  8A55              ; ( Código que ejecutamos con cada entidad: ).
 697  8A55
 698  8A55              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 699  8A55              ;
 700  8A55              ;	Se produce MOVIMIENTO.
 701  8A55
 702  8A55 C5           15 push bc 												; Nº de entidades en curso.
 703  8A56
 704  8A56 21 E9 89     	ld hl,Ctrl_3
 705  8A59 CB D6        	set 2,(hl)
 706  8A5B CD 84 8A     	call Change
 707  8A5E
 708  8A5E CD B6 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 709  8A61
 710  8A61              ; Existe "Entidad_guía" ???.
 711  8A61              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 712  8A61
 713  8A61              ;	ld a,(Ctrl_3)
 714  8A61              ;	bit 1,a
 715  8A61              ;	jr nz,22F
 716  8A61
 717  8A61              ; Almacén de "Movimientos_masticados" lleno ???
 718  8A61              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 719  8A61              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 720  8A61
 721  8A61              ;;	ld a,(Ctrl_3)
 722  8A61              ;;	bit 3,a
 723  8A61              ;;	jr nz,22F
 724  8A61
 725  8A61              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 726  8A61
 727  8A61              ;	ld hl,Ctrl_2
 728  8A61              ;	set 5,(hl)
 729  8A61              ;	ld hl,Ctrl_3
 730  8A61              ;	set 1,(hl)
 731  8A61
 732  8A61              ; Impacto ???
 733  8A61
 734  8A61              ;22 ld a,(Impacto)
 735  8A61              ;	and a
 736  8A61              ;	jr z,8F
 737  8A61
 738  8A61              ; Hay Impacto en esta entidad.
 739  8A61
 740  8A61              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 741  8A61              ;	dec (hl)
 742  8A61              ;	jp nz,17F
 743  8A61
 744  8A61              ;! Velocidad de la animación de la explosión.
 745  8A61
 746  8A61              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 747  8A61              ;														; _,(velocidad de la explosión).
 748  8A61              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 749  8A61
 750  8A61              ;	call Repone_datos_de_borrado
 751  8A61              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 752  8A61
 753  8A61              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 754  8A61
 755  8A61              ;	ld a,(Ctrl_2)
 756  8A61              ;	bit 1,a
 757  8A61              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 758  8A61
 759  8A61              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 760  8A61
 761  8A61              ;	ld a,(CTRL_DESPLZ)
 762  8A61              ;	and a
 763  8A61              ;	jr nz,18F
 764  8A61
 765  8A61              ;	ld hl,Indice_Explosion_2x2-2
 766  8A61              ;	ld (Puntero_DESPLZ_der),hl
 767  8A61              ;	jr 19F
 768  8A61
 769  8A61              ;18 ld hl,Indice_Explosion_2x3-2
 770  8A61              ;	ld (Puntero_DESPLZ_der),hl
 771  8A61
 772  8A61              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 773  8A61              ;	set 1,(hl)
 774  8A61              ;	jr 7F
 775  8A61
 776  8A61              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 777  8A61              ; _con las coordenadas de la entidad almacenada en DRAW.
 778  8A61
 779  8A61              ;8 ld a,(Ctrl_1)
 780  8A61              ;	bit 2,a
 781  8A61              ;	jr z,7F
 782  8A61
 783  8A61              ;	ld hl,(Coordenadas_disparo_certero)
 784  8A61              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 785  8A61              ;														; E contiene la coordenada_X del disparo.
 786  8A61              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 787  8A61              ;														; H FILA, (Coordenada_y de la entidad).
 788  8A61              ;	and a
 789  8A61              ;	sbc hl,de
 790  8A61
 791  8A61              ;	call Determina_resultado_comparativa
 792  8A61
 793  8A61              ;	ld a,b
 794  8A61              ;	and a
 795  8A61              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 796  8A61
 797  8A61              ; ----- ----- -----
 798  8A61
 799  8A61              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 800  8A61              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 801  8A61
 802  8A61              ;	ld hl,Ctrl_1
 803  8A61              ;	res 2,(hl)
 804  8A61
 805  8A61 CD 83 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 806  8A64
 807  8A64              ;	ld a,(Ctrl_0)
 808  8A64              ;	bit 4,a
 809  8A64              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 810  8A64
 811  8A64              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 812  8A64              ; [[[
 813  8A64              ;	call Detecta_disparo_entidad
 814  8A64              ; ]]]
 815  8A64
 816  8A64 CD CC 8C     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 817  8A67
 818  8A67              ;	ld hl,Ctrl_0
 819  8A67              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 820  8A67
 821  8A67 CD BC 8C     17 call Store_Restore_cajas
 822  8A6A
 823  8A6A C1           	pop bc
 824  8A6B
 825  8A6B 10 E8        	djnz 15B
 826  8A6D
 827  8A6D CD 4D 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 828  8A70
 829  8A70              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 830  8A70              ; Hemos gestionado todas las unidades.
 831  8A70              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 832  8A70
 833  8A70              ;	ld hl,Ctrl_1
 834  8A70              ;	res 2,(hl)
 835  8A70
 836  8A70              ;	di
 837  8A70              ;	jr $
 838  8A70              ;	ei
 839  8A70
 840  8A70
 841  8A70 2A E5 89     16 ld hl,(Album_de_borrado)
 842  8A73 22 E7 89     	ld (Scanlines_album_SP),hl
 843  8A76
 844  8A76 21 E9 89     	ld hl,Ctrl_3
 845  8A79 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 846  8A7B
 847  8A7B AF           	xor a
 848  8A7C D3 FE        	out ($fe),a
 849  8A7E 76           	halt
 850  8A7F
 851  8A7F              ; ----------------------------------------
 852  8A7F
 853  8A7F              ;	ld a,(Ctrl_1) 										; Existe Loop?
 854  8A7F              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 855  8A7F CA 25 8A     	jp z,Main
 856  8A82
 857  8A82              ; RECARGA DE NUEVA OLEADA.
 858  8A82
 859  8A82              ;	ld a,(Contador_de_frames)
 860  8A82              ;	ld b,a
 861  8A82              ;	ld a,(Activa_recarga_cajas)
 862  8A82              ;	cp b
 863  8A82              ;	jr z,20F
 864  8A82
 865  8A82              ;	ld hl,Ctrl_1
 866  8A82              ;	set 4,(hl)
 867  8A82              ;	jp Main
 868  8A82
 869  8A82              ;20 ld hl,Ctrl_1
 870  8A82              ;	res 4,(hl)
 871  8A82
 872  8A82              ;	ld a,(Contador_de_frames)
 873  8A82
 874  8A82              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 875  8A82              ;! _ IMPREDECIBLE !!!!
 876  8A82
 877  8A82              ;	add 10
 878  8A82              ;	ld (Clock_Entidades_en_curso),a
 879  8A82
 880  8A82              ;	jp 4B
 881  8A82
 882  8A82 C9           	ret
 883  8A83
 884  8A83              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 885  8A83              ;
 886  8A83              ;	16/11/23
 887  8A83
 888  8A83              ;;Gestiona_Amadeus
 889  8A83
 890  8A83              ;! Activa/desactiva impacto con Amadeus.
 891  8A83
 892  8A83              ;	ld a,(Impacto)
 893  8A83              ;	and a
 894  8A83              ;	jr nz,2F
 895  8A83
 896  8A83              ;;	call Mov_Amadeus
 897  8A83
 898  8A83              ;;2 ld a,(Ctrl_0)
 899  8A83              ;;	bit 4,a
 900  8A83              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 901  8A83
 902  8A83              ;;	call Guarda_foto_entidad_a_pintar
 903  8A83              ;;	call Guarda_datos_de_borrado_Amadeus
 904  8A83
 905  8A83              ;;1 ld hl,Ctrl_0
 906  8A83              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 907  8A83
 908  8A83              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 909  8A83
 910  8A83              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 911  8A83
 912  8A83              ;	call Calcula_numero_de_disparotes
 913  8A83
 914  8A83              ;;	ret
 915  8A83
 916  8A83              ; -----------------------------
 917  8A83              ;
 918  8A83              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 919  8A83              ;
 920  8A83              ;	INPUTS: B a de estar a "0".
 921  8A83
 922  8A83              ;Prepara_Borra_sprites
 923  8A83
 924  8A83              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 925  8A83              ;	ld a,l
 926  8A83              ;	ret z
 927  8A83
 928  8A83              ;	srl a
 929  8A83
 930  8A83              ;2 sub 16
 931  8A83              ;	jr z,1F
 932  8A83              ;	inc b
 933  8A83              ;	jr 2B
 934  8A83
 935  8A83              ;1 inc b
 936  8A83
 937  8A83              ;	exx
 938  8A83              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 939  8A83              ;	exx
 940  8A83
 941  8A83              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 942  8A83              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 943  8A83
 944  8A83              ;	ret
 945  8A83
 946  8A83              ; --------------------------------------------------------------------------------------------------------------
 947  8A83              ;
 948  8A83              ;	15/12/23
 949  8A83
 950  8A83              Mov_obj
 951  8A83
 952  8A83              ;	ld a,(Ctrl_2)
 953  8A83              ;	bit 1,a
 954  8A83              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 955  8A83
 956  8A83              ; Explosión:
 957  8A83
 958  8A83              ;	ld a,(Frames_explosion)
 959  8A83              ;	and a
 960  8A83              ;	jr nz,4F
 961  8A83
 962  8A83              ;!  Una alimaña menos!!!!!!!!!1
 963  8A83
 964  8A83              ; Se trataba de una Entidad_guía ???
 965  8A83
 966  8A83              ;	ld a,(Ctrl_2)
 967  8A83              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 968  8A83              ;	jr z,5F
 969  8A83
 970  8A83              ;	ld hl,Ctrl_3
 971  8A83              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 972  8A83
 973  8A83              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 974  8A83              ;!! _generado puede ser distinto, (aletoriedad).
 975  8A83
 976  8A83              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 977  8A83              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 978  8A83              ;	dec (hl)
 979  8A83              ;	ld hl,Entidades_en_curso
 980  8A83              ;	dec (hl)
 981  8A83              ;	ld hl,Numero_de_entidades
 982  8A83              ;	dec (hl)
 983  8A83              ;	jr 3F
 984  8A83
 985  8A83              ; -----
 986  8A83
 987  8A83              ;	`Movemos´ la explosión.
 988  8A83
 989  8A83              ;4 ld hl,(Puntero_DESPLZ_der)
 990  8A83              ;	inc hl
 991  8A83              ;	inc hl
 992  8A83              ;	call Extrae_address
 993  8A83              ;;	ld (Puntero_objeto),hl
 994  8A83
 995  8A83              ;;	ld hl,Frames_explosion
 996  8A83              ;;	dec (hl)
 997  8A83
 998  8A83              ;;	ld hl,Ctrl_0
 999  8A83              ;;	set 4,(hl);;
1000  8A83
1001  8A83              ;;	jr 3F
1002  8A83
1003  8A83              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1004  8A83
1005  8A83              ;2 xor a
1006  8A83              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1007  8A83
1008  8A83              ; Movemos Entidades malignas.
1009  8A83              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1010  8A83
1011  8A83              ;	ld a,(Ctrl_2)
1012  8A83              ;	bit 5,a
1013  8A83              ;	jr nz,8F
1014  8A83
1015  8A83              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1016  8A83              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1017  8A83              ;	jr 7F
1018  8A83
1019  8A83              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1020  8A83
1021  8A83              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1022  8A83              ;	bit 4,a
1023  8A83              ;	ret z
1024  8A83
1025  8A83              ; Ha habido desplazamiento de la entidad maligna.
1026  8A83              ; Ha llegado a zona de AMADEUS ???
1027  8A83
1028  8A83              ;7 ld a,(Coordenada_y)
1029  8A83              ;	cp $14
1030  8A83              ;	jr c,1F
1031  8A83
1032  8A83              ; ---------
1033  8A83
1034  8A83              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1035  8A83              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1036  8A83
1037  8A83              ;	di
1038  8A83              ;	call Genera_coordenadas_X
1039  8A83              ;	call Compara_coordenadas_X
1040  8A83              ;	ei
1041  8A83
1042  8A83              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1043  8A83
1044  8A83              ; ---------
1045  8A83
1046  8A83              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1047  8A83              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1048  8A83              ;	call Limpia_Variables_de_borrado
1049  8A83
1050  8A83 C9           3 ret
1051  8A84
1052  8A84              ; --------------------------------------------------------------------------------------------------------------
1053  8A84              ;
1054  8A84              ;	29/1/23
1055  8A84
1056  8A84              ;Mov_Amadeus
1057  8A84
1058  8A84              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1059  8A84
1060  8A84              ;	call Mov_right
1061  8A84
1062  8A84              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1063  8A84              ;	bit 4,a
1064  8A84              ;	ret z
1065  8A84
1066  8A84              ; ---------
1067  8A84
1068  8A84              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1069  8A84              ;	call Repone_datos_de_borrado_Amadeus
1070  8A84              ;	call Limpia_Variables_de_borrado
1071  8A84
1072  8A84              ;	ret
1073  8A84
1074  8A84              ; --------------------------------------------------------------------------------------------------------------
1075  8A84              ;
1076  8A84              ;	17/3/24
1077  8A84
1078  8A84              Change
1079  8A84
1080  8A84 2A E3 89     	ld hl,(Album_de_pintado)
1081  8A87 ED 5B E5 89  	ld de,(Album_de_borrado)
1082  8A8B EB           	ex de,hl
1083  8A8C 22 E3 89     	ld (Album_de_pintado),hl
1084  8A8F 22 E7 89     	ld (Scanlines_album_SP),hl
1085  8A92
1086  8A92              ;	push hl
1087  8A92
1088  8A92 ED 53 E5 89  	ld (Album_de_borrado),de
1089  8A96
1090  8A96              ;	ld hl,(Techo)
1091  8A96              ;	ld de,(Techo_Scanlines_album_2)
1092  8A96
1093  8A96              ;	ld a,e
1094  8A96              ;	sub l
1095  8A96              ;	call nc,Borra_diferencia
1096  8A96
1097  8A96              ;	ld e,l
1098  8A96              ;	ld (Techo_Scanlines_album_2),de
1099  8A96
1100  8A96              ;	pop hl
1101  8A96
1102  8A96              ;	ld (Techo),hl
1103  8A96
1104  8A96 C9           	ret
1105  8A97
1106  8A97              ; ------------------------------------
1107  8A97
1108  8A97              Borra_diferencia
1109  8A97
1110  8A97 18 FE        	jr $
1111  8A99
1112  8A99 C9           	ret
1113  8A9A
1114  8A9A              ; -----------------------------------------------------------------------------------
1115  8A9A              ;
1116  8A9A              ;	20/01/24
1117  8A9A              ;
1118  8A9A              ;
1119  8A9A
1120  8A9A              Construye_movimientos_masticados_entidad
1121  8A9A
1122  8A9A 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1123  8A9D E5           	push hl
1124  8A9E CD E1 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1125  8AA1              ;															; _ el (Contador_de_mov_masticados).
1126  8AA1 CD 81 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1127  8AA4              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1128  8AA4 CD 7F 94     	call Recompone_posicion_inicio
1129  8AA7
1130  8AA7 CD 13 8E     1 call Draw
1131  8AAA CD C6 8A     	call Guarda_movimiento_masticado
1132  8AAD
1133  8AAD CD F9 97     	call Movimiento
1134  8AB0
1135  8AB0 3A E9 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1136  8AB3 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1137  8AB5 28 F0        	jr z,1B
1138  8AB7
1139  8AB7              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1140  8AB7              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1141  8AB7
1142  8AB7 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1143  8AB8 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1144  8ABB
1145  8ABB              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1146  8ABB
1147  8ABB CD 5D 99     	call Situa_en_contador_general_de_mov_masticados
1148  8ABE
1149  8ABE              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1150  8ABE              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1151  8ABE
1152  8ABE ED 4B AB 89  	ld bc,(Contador_de_mov_masticados)
1153  8AC2 71           	ld (hl),c
1154  8AC3 23           	inc hl
1155  8AC4 70           	ld (hl),b
1156  8AC5
1157  8AC5 C9           	ret
1158  8AC6
1159  8AC6              ; -----------------------------------------------------------------------------------
1160  8AC6              ;
1161  8AC6              ;	28/12/23
1162  8AC6              ;
1163  8AC6              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1164  8AC6              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1165  8AC6
1166  8AC6              Guarda_movimiento_masticado
1167  8AC6
1168  8AC6 ED 73 DD 89  	ld (Stack),sp
1169  8ACA ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1170  8ACE
1171  8ACE              ;	push hl
1172  8ACE DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1173  8AD0 FD E5            push iy 												; Pushea Puntero_objeto.
1174  8AD2
1175  8AD2 ED 7B DD 89      ld sp,(Stack)
1176  8AD6
1177  8AD6 2A AB 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1178  8AD9 23           	inc hl
1179  8ADA 22 AB 89     	ld (Contador_de_mov_masticados),hl
1180  8ADD
1181  8ADD CD E1 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1182  8AE0              ;															; _ el (Contador_de_mov_masticados).
1183  8AE0 C9               ret
1184  8AE1
1185  8AE1              ; --------------------------------------------------------------------------------------------------------------
1186  8AE1              ;
1187  8AE1              ;	12/1/24
1188  8AE1              ;
1189  8AE1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1190  8AE1
1191  8AE1              Actualiza_Puntero_de_almacen_de_mov_masticados
1192  8AE1
1193  8AE1 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1194  8AE4 01 04 00     	ld bc,4
1195  8AE7 A7           	and a
1196  8AE8 ED 4A        	adc hl,bc
1197  8AEA 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1198  8AED C9           	ret
1199  8AEE
1200  8AEE              ; --------------------------------------------------------------------------------------------------------------
1201  8AEE              ;
1202  8AEE              ;	09/03/24
1203  8AEE              ;
1204  8AEE              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1205  8AEE              ;
1206  8AEE              ;	IX contiene el puntero de impresión.
1207  8AEE              ;	DE contiene (Puntero_objeto).
1208  8AEE
1209  8AEE
1210  8AEE ED 73 DD 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1211  8AF2 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1212  8AF6
1213  8AF6 D1           	pop de 															; DE contiene Puntero_objeto
1214  8AF7 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1215  8AF9
1216  8AF9 ED 73 A9 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1217  8AFD
1218  8AFD ED 7B DD 89  	ld sp,(Stack)
1219  8B01
1220  8B01 C9           	ret
1221  8B02
1222  8B02              ; --------------------------------------------------------------------------------------------------------------
1223  8B02              ;
1224  8B02              ;	28/12/23
1225  8B02              ;
1226  8B02              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1227  8B02              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1228  8B02
1229  8B02              Guarda_foto_entidad_a_pintar
1230  8B02
1231  8B02 3A AD 89     	ld a,(Ctrl_0)
1232  8B05 CB 77        	bit 6,a
1233  8B07 28 04        	jr z,5F
1234  8B09
1235  8B09              ;	Guarda la foto de Amadeus.
1236  8B09
1237  8B09              ;	call Draw
1238  8B09              ;	call Guarda_movimiento_masticado	;! Provisional
1239  8B09 CD E4 99     	call Genera_datos_de_impresion
1240  8B0C C9           	ret
1241  8B0D
1242  8B0D              ; ENTIDADES!
1243  8B0D              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1244  8B0D
1245  8B0D 3A E9 89     5 ld a,(Ctrl_3)
1246  8B10 CB 5F        	bit 3,a
1247  8B12 28 01        	jr z,1F
1248  8B14
1249  8B14              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1250  8B14
1251  8B14              4
1252  8B14              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1253  8B14 C9           	ret
1254  8B15
1255  8B15              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1256  8B15
1257  8B15 3A E9 89     1 ld a,(Ctrl_3)
1258  8B18 CB 57        	bit 2,a
1259  8B1A 20 10        	jr nz,6F
1260  8B1C
1261  8B1C              ; Entidad guía o fantasma ???
1262  8B1C
1263  8B1C 3A B2 89     	ld a,(Ctrl_2)
1264  8B1F CB 6F        	bit 5,a
1265  8B21 20 10        	jr nz,3F
1266  8B23
1267  8B23              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1268  8B23
1269  8B23 18 EF        	jr 4B
1270  8B25
1271  8B25              ; ENTIDAD_GUÍA:
1272  8B25              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1273  8B25              ; _guardando "movimientos_masticados".
1274  8B25
1275  8B25 3A E9 89     2 ld a,(Ctrl_3)
1276  8B28 CB 57        	bit 2,a
1277  8B2A 28 07        	jr z,3F
1278  8B2C
1279  8B2C              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1280  8B2C              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1281  8B2C
1282  8B2C CB 97        6 res 2,a
1283  8B2E CB DF        	set 3,a
1284  8B30 32 E9 89     	ld (Ctrl_3),a
1285  8B33
1286  8B33
1287  8B33              ;	Esto sólo lo ejecuta una entidad guía.
1288  8B33
1289  8B33 CD 13 8E     3 	call Draw
1290  8B36 CD C6 8A     	call Guarda_movimiento_masticado
1291  8B39 CD E4 99     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1292  8B3C
1293  8B3C              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1294  8B3C              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1295  8B3C
1296  8B3C              ;	call Convierte_guia_en_fantasma
1297  8B3C C9           	ret
1298  8B3D
1299  8B3D              ; ---------------------------------------------------------------------------------------------------------------------
1300  8B3D              ;
1301  8B3D              ;	13/03/24
1302  8B3D              ;
1303  8B3D
1304  8B3D              Inicia_albumes_de_lineas
1305  8B3D
1306  8B3D 21 00 80     	ld hl,Scanlines_album
1307  8B40 22 E3 89     	ld (Album_de_pintado),hl
1308  8B43 22 E7 89     	ld (Scanlines_album_SP),hl
1309  8B46              ;	ld (Techo_Scanlines_album),hl
1310  8B46              ;	ld (Techo),hl
1311  8B46
1312  8B46 21 00 82     	ld hl,Scanlines_album_2
1313  8B49 22 E5 89     	ld (Album_de_borrado),hl
1314  8B4C              ;	ld (Techo_Scanlines_album_2),hl
1315  8B4C
1316  8B4C C9           	ret
1317  8B4D
1318  8B4D
1319  8B4D
1320  8B4D              ; ---------------------------------------------------------------------------------------------------------------------
1321  8B4D              ;
1322  8B4D              ; 8/1/23
1323  8B4D              ;
1324  8B4D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1325  8B4D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1326  8B4D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1327  8B4D
1328  8B4D              ; Destruye HL y DE !!!!!
1329  8B4D
1330  8B4D              Inicia_punteros_de_cajas
1331  8B4D
1332  8B4D 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1333  8B50 CD 7B 8B         call Extrae_address
1334  8B53 22 CF 89         ld (Puntero_store_caja),hl
1335  8B56 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1336  8B59 22 D3 89     	ld (Indice_restore_caja),hl
1337  8B5C CD 7B 8B     	call Extrae_address
1338  8B5F 22 D1 89     	ld (Puntero_restore_caja),hl
1339  8B62 C9               ret
1340  8B63
1341  8B63              ; *************************************************************************************************************************************************************
1342  8B63              ;
1343  8B63              ; 8/1/23
1344  8B63              ;
1345  8B63              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1346  8B63
1347  8B63              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1348  8B63              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1349  8B63              ;	ret
1350  8B63              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1351  8B63              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1352  8B63              ;	ret
1353  8B63
1354  8B63              ; -------------------------------------------------------------------------------------------------------------
1355  8B63              ;
1356  8B63              ; 21/9/23
1357  8B63              ;
1358  8B63
1359  8B63              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1360  8B63
1361  8B63              ;;Limpia_album_Amadeus
1362  8B63              ;
1363  8B63              ;;	ld hl,Scanlines_album_Amadeus
1364  8B63              ;;	ld a,(hl)
1365  8B63              ;;	and a
1366  8B63              ;;	ret z
1367  8B63
1368  8B63              ;;	ld hl,Scanlines_album_Amadeus;
1369  8B63              ;;	ld de,Scanlines_album_Amadeus+1
1370  8B63              ;;	ld bc,11
1371  8B63              ;;	xor a
1372  8B63              ;;	ld (hl),a
1373  8B63              ;;	ldir
1374  8B63
1375  8B63              ;;	ld hl,Scanlines_album_Amadeus
1376  8B63              ;;	ld (End_Snapshot_Amadeus),hl
1377  8B63
1378  8B63              ;;	ret
1379  8B63
1380  8B63              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1381  8B63              ;	ld de,Variables_de_borrado+1
1382  8B63              ;	ld bc,5
1383  8B63              ;	xor a
1384  8B63              ;	ld (hl),a
1385  8B63              ;	ldir
1386  8B63              ;	ret
1387  8B63
1388  8B63              ; -------------------------------------------------------------------------------------------------------------
1389  8B63              ;
1390  8B63              ; 	21/02/24
1391  8B63              ;
1392  8B63              ;	MODIFICA: AF,HL,BC,DE
1393  8B63              ;
1394  8B63              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1395  8B63              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1396  8B63
1397  8B63              Calcula_numero_de_malotes
1398  8B63
1399  8B63 21 00 80     	ld hl,Scanlines_album
1400  8B66 EB           	ex de,hl
1401  8B67 2A E7 89     	ld hl,(Scanlines_album_SP)
1402  8B6A
1403  8B6A 06 00        	ld b,0
1404  8B6C 7D           	ld a,l
1405  8B6D 93           	sub e
1406  8B6E 28 07        	jr z,1F
1407  8B70
1408  8B70              ; Nº de malotes no es "0".
1409  8B70
1410  8B70 D6 06        2 sub 6
1411  8B72 04           	inc b
1412  8B73 A7           	and a
1413  8B74 20 FA        	jr nz,2B
1414  8B76 78           	ld a,b
1415  8B77
1416  8B77 32 D8 89     1 ld (Numero_de_malotes),a
1417  8B7A C9           	ret
1418  8B7B
1419  8B7B              ; *************************************************************************************************************************************************************
1420  8B7B              ;
1421  8B7B              ; 20/10/22
1422  8B7B              ;
1423  8B7B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1424  8B7B              ;
1425  8B7B              ; Destruye el puntero y DE !!!!!
1426  8B7B
1427  8B7B 5E           Extrae_address ld e,(hl)
1428  8B7C 23           	inc hl
1429  8B7D 56           	ld d,(hl)
1430  8B7E 2B           	dec hl
1431  8B7F EB           	ex de,hl
1432  8B80 C9           	ret
1433  8B81
1434  8B81              ; *************************************************************************************************************************************************************
1435  8B81              ;
1436  8B81              ;	20/1/24
1437  8B81              ;
1438  8B81              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1439  8B81              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1440  8B81              ;
1441  8B81              ;   Destruye HL y BC !!!!!,
1442  8B81              ;
1443  8B81              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1444  8B81              ;					"0" ..... Izquierda.
1445  8B81
1446  8B81              Inicia_Puntero_objeto
1447  8B81
1448  8B81 3A 9F 89     	ld a,(Cuad_objeto)
1449  8B84 E6 01        	and 1
1450  8B86 F5           	push af
1451  8B87 CC A3 8B     	call z,Inicia_puntero_objeto_izq
1452  8B8A F1           	pop af
1453  8B8B C8           	ret z
1454  8B8C CD 90 8B     	call Inicia_puntero_objeto_der
1455  8B8F C9           	ret
1456  8B90
1457  8B90              ; Arrancamos desde la parte izquierda de la pantalla.
1458  8B90              ; Iniciamos (Indice_Sprite_der).
1459  8B90
1460  8B90 2A 95 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1461  8B93 22 99 89     	ld (Puntero_DESPLZ_der),hl
1462  8B96 CD 7B 8B     	call Extrae_address
1463  8B99 22 8F 89     	ld (Puntero_objeto),hl
1464  8B9C
1465  8B9C 2A 97 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1466  8B9F 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1467  8BA2 C9           	ret
1468  8BA3
1469  8BA3              ; Arrancamos desde la parte derecha de la pantalla.
1470  8BA3              ; Iniciamos (Indice_Sprite_izq).
1471  8BA3
1472  8BA3 2A 97 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1473  8BA6 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1474  8BA9 CD 7B 8B     	call Extrae_address
1475  8BAC 22 8F 89     	ld (Puntero_objeto),hl
1476  8BAF
1477  8BAF 2A 95 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1478  8BB2 22 99 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1479  8BB5 C9           	ret
1480  8BB6
1481  8BB6              ; **************************************************************************************************
1482  8BB6              ;
1483  8BB6              ;	31/01/24
1484  8BB6              ;
1485  8BB6              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1486  8BB6
1487  8BB6              Restore_entidad
1488  8BB6
1489  8BB6 2A CF 89     	ld hl,(Puntero_store_caja)
1490  8BB9 11 8A 89     	ld de,Bandeja_DRAW
1491  8BBC 7E           	ld a,(hl)
1492  8BBD 12           	ld (de),a
1493  8BBE 23           	inc hl 											; (Tipo).
1494  8BBF
1495  8BBF 11 91 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1496  8BC2 01 02 00     	ld bc,2
1497  8BC5 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1498  8BC7
1499  8BC7 13           	inc de
1500  8BC8 7E           	ld a,(hl)
1501  8BC9 12           	ld (de),a 										; Transferimos (Attr).
1502  8BCA 23           	inc hl
1503  8BCB
1504  8BCB 11 A0 89     	ld de,Impacto
1505  8BCE
1506  8BCE 7E           	ld a,(hl)
1507  8BCF 12           	ld (de),a 										; Transferimos (Impacto).
1508  8BD0 23           	inc hl
1509  8BD1
1510  8BD1 13           	inc de
1511  8BD2
1512  8BD2 01 06 00     	ld bc,6
1513  8BD5 ED B0        	ldir
1514  8BD7
1515  8BD7 01 07 00     	ld bc,7
1516  8BDA ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1517  8BDC              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1518  8BDC 11 B2 89     	ld de,Ctrl_2
1519  8BDF
1520  8BDF 7E           	ld a,(hl)
1521  8BE0 12           	ld (de),a 										; Transferimos (Ctrl_2).
1522  8BE1
1523  8BE1 C9           	ret
1524  8BE2
1525  8BE2              ; **************************************************************************************************
1526  8BE2              ;
1527  8BE2              ;	08/05/23
1528  8BE2              ;
1529  8BE2              ;	Incrementamos los dos punteros de entidades. (+1).
1530  8BE2
1531  8BE2              Incrementa_punteros_de_cajas
1532  8BE2
1533  8BE2 2A D1 89     	ld hl,(Puntero_restore_caja)
1534  8BE5 22 CF 89     	ld (Puntero_store_caja),hl
1535  8BE8 2A D3 89     	ld hl,(Indice_restore_caja)
1536  8BEB 23           	inc hl
1537  8BEC 23           	inc hl
1538  8BED 22 D3 89     	ld (Indice_restore_caja),hl
1539  8BF0 CD 7B 8B         call Extrae_address
1540  8BF3 22 D1 89         ld (Puntero_restore_caja),hl
1541  8BF6 C9               ret
1542  8BF7
1543  8BF7              ; **************************************************************************************************
1544  8BF7              ;
1545  8BF7              ;	21/12/23
1546  8BF7              ;
1547  8BF7              ;	Restore_Amadeus
1548  8BF7              ;
1549  8BF7              ;	Cargamos en DRAW los parámetros de Amadeus.
1550  8BF7              ;
1551  8BF7
1552  8BF7              ;Restore_Amadeus	push hl
1553  8BF7              ;	push de
1554  8BF7              ; 	push bc
1555  8BF7              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1556  8BF7              ;	ld de,Bandeja_DRAW
1557  8BF7              ;	ld bc,42
1558  8BF7              ;	ldir
1559  8BF7              ;	pop bc
1560  8BF7              ;	pop de
1561  8BF7              ;	pop hl
1562  8BF7              ;	ret
1563  8BF7
1564  8BF7              ; *************************************************************************************************************************************************************
1565  8BF7              ;
1566  8BF7              ;	21/12/23
1567  8BF7              ;
1568  8BF7              ;	Store_Amadeus
1569  8BF7              ;
1570  8BF7              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1571  8BF7              ;
1572  8BF7              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1573  8BF7              ;
1574  8BF7              ;	DESTRUYE: HL y BC y DE.
1575  8BF7
1576  8BF7              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1577  8BF7              ;	ld bc,42
1578  8BF7              ;	ldir
1579  8BF7              ;	ret
1580  8BF7
1581  8BF7              ; -----------------------------------------------------------
1582  8BF7              ;
1583  8BF7              ;	21/12/23
1584  8BF7              ;
1585  8BF7              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1586  8BF7              ;
1587  8BF7              ;	Destruye: HL,BC,DE,A
1588  8BF7
1589  8BF7              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1590  8BF7              ;	ld bc,41
1591  8BF7              ;	xor a
1592  8BF7              ;	ld (hl),a;
1593  8BF7              ;	ld de,Bandeja_DRAW+1
1594  8BF7              ;	ldir
1595  8BF7              ;	ret
1596  8BF7
1597  8BF7              ; -----------------------------------------------------------
1598  8BF7
1599  8BF7              ; Teclado.
1600  8BF7
1601  8BF7 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1602  8BF9 DB FE        	in a,($fe)
1603  8BFB E6 01        	and $01
1604  8BFD 28 02        	jr z,1f
1605  8BFF 18 F6        	jr Pulsa_ENTER
1606  8C01 C9           1 ret
1607  8C02
1608  8C02              ; **************************************************************************************************
1609  8C02              ;
1610  8C02              ; Temporización.
1611  8C02
1612  8C02              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1613  8C02              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1614  8C02              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1615  8C02              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1616  8C02
1617  8C02              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1618  8C02              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1619  8C02              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1620  8C02
1621  8C02              ; A partir de $4f61 no hace falta DELAY.
1622  8C02
1623  8C02              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1624  8C02
1625  8C02 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1626  8C05 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1627  8C06 78           	LD A,B
1628  8C07 A7           	AND A
1629  8C08 20 FB        	JR NZ,wait
1630  8C0A C9           	RET
1631  8C0B
1632  8C0B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1633  8C0B              ;
1634  8C0B              ;	5/3/23
1635  8C0B              ;
1636  8C0B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1637  8C0B
1638  8C0B              ;Movimiento_Amadeus
1639  8C0B
1640  8C0B              ; Disparo.
1641  8C0B
1642  8C0B              ;	ld a,(Disparo_Amadeus)
1643  8C0B              ;	and a
1644  8C0B              ;	jr nz,1F
1645  8C0B              ;	jr 2F
1646  8C0B
1647  8C0B              ;1 ld a,$f7													; "5" para disparar.
1648  8C0B              ;	in a,($fe)
1649  8C0B              ;	and $10
1650  8C0B
1651  8C0B              ;	push af
1652  8C0B              ;	call z,Genera_disparo
1653  8C0B              ;	pop af
1654  8C0B              ;	jr nz,2F
1655  8C0B
1656  8C0B              ;	ld a,(Disparo_Amadeus)
1657  8C0B              ;	xor 1
1658  8C0B              ;	ld (Disparo_Amadeus),a
1659  8C0B              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1660  8C0B              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1661  8C0B              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1662  8C0B              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1663  8C0B
1664  8C0B              ;	ld a,$f7
1665  8C0B              ;	in a,($fe)
1666  8C0B              ;	and $01
1667  8C0B              ;	ret z
1668  8C0B
1669  8C0B              ;	ld a,$f7
1670  8C0B              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1671  8C0B              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1672  8C0B              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1673  8C0B              ;	ret
1674  8C0B
1675  8C0B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1676  8C0B              ;
1677  8C0B              ;	Rutina provisional para que los malotes cagen balas.
1678  8C0B
1679  8C0B              ;Detecta_disparo_entidad
1680  8C0B
1681  8C0B              ;	ld a,(Disparo_entidad)
1682  8C0B              ;	and a
1683  8C0B              ;	ret z
1684  8C0B
1685  8C0B              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1686  8C0B
1687  8C0B              ;	ld a,$7f				; Detecta SPACE.
1688  8C0B              ;	in a,($fe)
1689  8C0B              ;	and 1
1690  8C0B              ;	ret nz
1691  8C0B
1692  8C0B              ;	call Genera_disparo
1693  8C0B              ;	ret
1694  8C0B
1695  8C0B              ; ----------------------------------------------------------------------
1696  8C0B              ;
1697  8C0B              ;	8/9/23
1698  8C0B
1699  8C0B              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1700  8C0B              ; 	dec hl
1701  8C0B              ;	ld a,(hl)
1702  8C0B              ;	and a
1703  8C0B              ;	ret z										; Salimos si es álbum está vacío.
1704  8C0B
1705  8C0B              ;	ld de,Variables_de_borrado+5
1706  8C0B              ;	ld bc,6
1707  8C0B              ;	lddr
1708  8C0B              ;	ret
1709  8C0B
1710  8C0B              ; ----------------------------------------------------------------------
1711  8C0B              ;
1712  8C0B              ;	9/9/23
1713  8C0B
1714  8C0B              ;Repone_datos_de_borrado_Amadeus
1715  8C0B
1716  8C0B              ;	ld hl,Variables_de_borrado
1717  8C0B              ;	ld de,Scanlines_album_Amadeus
1718  8C0B              ;	ld bc,6
1719  8C0B              ;	ldir
1720  8C0B
1721  8C0B              ;	ex de,hl
1722  8C0B              ;	ld (End_Snapshot_Amadeus),hl
1723  8C0B
1724  8C0B              ;	ret
1725  8C0B
1726  8C0B              ; ----------------------------------------------------------------------
1727  8C0B              ;
1728  8C0B              ;	27/10/23
1729  8C0B              ;
1730  8C0B
1731  8C0B              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1732  8C0B              ;	_ Scanlines_album correspondiente.
1733  8C0B
1734  8C0B              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1735  8C0B              ;	_ durante el proceso de escritura.
1736  8C0B
1737  8C0B              ;Repone_datos_de_borrado
1738  8C0B
1739  8C0B              ;	ld de,(Scanlines_album_SP)
1740  8C0B              ;	ld hl,Variables_de_borrado
1741  8C0B              ;	ld bc,6
1742  8C0B              ;	ldir
1743  8C0B
1744  8C0B              ;	ex de,hl
1745  8C0B              ;	ld (Scanlines_album_SP),hl
1746  8C0B
1747  8C0B              ;	ret
1748  8C0B
1749  8C0B              ; --------------------------------------------------------------------------------------
1750  8C0B
1751  8C0B              ;Pinta_Amadeus
1752  8C0B
1753  8C0B              ;   	call Calcula_malotes_Amadeus
1754  8C0B              ;	call Extrae_foto_Amadeus
1755  8C0B              ;	call Limpia_album_Amadeus
1756  8C0B
1757  8C0B              ;	ret
1758  8C0B
1759  8C0B              ; -----------------------------------------------------------------------------------
1760  8C0B              ;
1761  8C0B              ;	10/12/23
1762  8C0B              ;
1763  8C0B              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1764  8C0B
1765  8C0B              Actualiza_relojes
1766  8C0B
1767  8C0B 3A E9 89     	ld a,(Ctrl_3)
1768  8C0E CB 47        	bit 0,a
1769  8C10 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1770  8C11
1771  8C11 21 EE 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1772  8C14 34           	inc (hl)
1773  8C15
1774  8C15 34           	inc (hl)
1775  8C16 35           	dec (hl)
1776  8C17 C0           	ret nz
1777  8C18
1778  8C18 21 EF 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1779  8C1B 34           	inc (hl)
1780  8C1C C9           	ret
1781  8C1D
1782  8C1D              ; ---------------------------------------------------------------
1783  8C1D
1784  8C1D              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8C1D              ;---------------------------------------------------------------------------------------------------------------
   2+ 8C1D              ;
   3+ 8C1D              ;   8/3/24
   4+ 8C1D              ;
   5+ 8C1D              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8C1D              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8C1D              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8C1D              ;	_ de la 1ª entidad del Nivel.
   9+ 8C1D              ;
  10+ 8C1D              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8C1D
  12+ 8C1D              ;	MODIFICA: HL,DE y A.
  13+ 8C1D              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8C1D
  15+ 8C1D              Inicializa_Nivel
  16+ 8C1D
  17+ 8C1D 2A F3 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8C20 CD 7B 8B     	call Extrae_address
  19+ 8C23 7E           	ld a,(hl)
  20+ 8C24 32 D5 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8C27 23           	inc hl
  22+ 8C28 CD 35 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8C2B 22 F5 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C2E CD 3E 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C31
  26+ 8C31 CD 4F 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C34 C9           	ret
  28+ 8C35
  29+ 8C35              ; ----------------------
  30+ 8C35
  31+ 8C35 11 B4 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C38 01 04 00     	ld bc,4
  33+ 8C3B ED B0        	ldir
  34+ 8C3D C9           	ret
  35+ 8C3E
  36+ 8C3E 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C3F CD 8F 8D         call Calcula_salto_en_BC
  38+ 8C42 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C45 A7               and a
  40+ 8C46 ED 4A            adc hl,bc
  41+ 8C48 CD 7B 8B         call Extrae_address
  42+ 8C4B 22 C0 89         ld (Puntero_indice_mov),hl
  43+ 8C4E C9               ret
  44+ 8C4F
  45+ 8C4F 3A 8A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8C52 CD 8F 8D     	call Calcula_salto_en_BC
  47+ 8C55 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8C58 A7               and a
  49+ 8C59 ED 4A            adc hl,bc
  50+ 8C5B CD 7B 8B         call Extrae_address
  51+ 8C5E 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8C61 C9           	ret
  53+ 8C62
  54+ 8C62              ;---------------------------------------------------------------------------------------------------------------
  55+ 8C62              ;
  56+ 8C62              ;   5/1/24
  57+ 8C62              ;
  58+ 8C62              ;	Destruye A,BC,HL,DE
  59+ 8C62
  60+ 8C62              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8C62              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8C62
  63+ 8C62              Inicia_Entidades
  64+ 8C62
  65+ 8C62              ; Preparamos los punteros de las cajas de entidades:
  66+ 8C62
  67+ 8C62 CD 4D 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8C65              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8C65 CD F6 8D     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8C68
  71+ 8C68 2A F5 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8C6B
  73+ 8C6B 22 F5 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8C6E
  75+ 8C6E CD 3D 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8C71
  77+ 8C71 2A F5 89     	ld hl,(Datos_de_nivel)
  78+ 8C74
  79+ 8C74              ; En este punto:
  80+ 8C74              ;
  81+ 8C74              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8C74              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8C74
  84+ 8C74 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8C75
  86+ 8C75 7E           	ld a,(hl)
  87+ 8C76 CD B2 8C     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8C79
  89+ 8C79 CD A1 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8C7C
  91+ 8C7C              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8C7C
  93+ 8C7C CD 5F 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8C7F
  95+ 8C7F A7           	and a
  96+ 8C80 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8C82
  98+ 8C82              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8C82
 100+ 8C82              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8C82              ;	_ de este tipo de entidad.
 102+ 8C82
 103+ 8C82 CD 5D 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8C85 CD 6A 99     	call Transfiere_datos_de_contadores
 105+ 8C88
 106+ 8C88 18 06        	jr 4F
 107+ 8C8A
 108+ 8C8A CD 9A 8A     3 call Construye_movimientos_masticados_entidad
 109+ 8C8D
 110+ 8C8D              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8C8D              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8C8D              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8C8D              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8C8D              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8C8D
 116+ 8C8D CD 1D 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8C90              ;																; _ Mov_masticados ya generados.
 118+ 8C90 CD CC 8C     4 call Guarda_foto_de_mov_masticado
 119+ 8C93
 120+ 8C93              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8C93
 122+ 8C93 2A A7 89     	ld hl,(Puntero_de_impresion)
 123+ 8C96 CD A0 99     	call Genera_coordenadas
 124+ 8C99 CD C8 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8C9C CD D6 8C     	call Limpiamos_bandeja_DRAW
 126+ 8C9F CD E2 8B     	call Incrementa_punteros_de_cajas
 127+ 8CA2
 128+ 8CA2              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8CA2              ; _ entidad del Nivel.
 130+ 8CA2
 131+ 8CA2 3A EA 89     	ld a,(Ctrl_4)
 132+ 8CA5 E6 F0        	and $f0
 133+ 8CA7 32 EA 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8CAA
 135+ 8CAA              ; Siguiente entidad del Nivel.
 136+ 8CAA
 137+ 8CAA 2A F5 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8CAD 23           	inc hl 														; _ entidad del Nivel.
 139+ 8CAE
 140+ 8CAE C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8CAF
 142+ 8CAF 10 BA        	djnz 2B
 143+ 8CB1
 144+ 8CB1 C9           	ret
 145+ 8CB2
 146+ 8CB2              ; ---------------------------------------------------------------------
 147+ 8CB2              ;
 148+ 8CB2              ;	10/02/24
 149+ 8CB2              ;
 150+ 8CB2              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8CB2              ;
 152+ 8CB2              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8CB2
 154+ 8CB2              Definicion_segun_tipo
 155+ 8CB2
 156+ 8CB2 CD 8F 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8CB5 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8CB8 CD 97 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8CBB C9           	ret
 160+ 8CBC
 161+ 8CBC              ; ---------------------------------------------------------------------
 162+ 8CBC              ;
 163+ 8CBC              ;	30/01/24
 164+ 8CBC
 165+ 8CBC
 166+ 8CBC              Store_Restore_cajas
 167+ 8CBC
 168+ 8CBC              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8CBC
 170+ 8CBC 2A A7 89     	ld hl,(Puntero_de_impresion)
 171+ 8CBF CD A0 99     	call Genera_coordenadas
 172+ 8CC2
 173+ 8CC2 CD C8 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8CC5 CD D6 8C     	call Limpiamos_bandeja_DRAW
 175+ 8CC8
 176+ 8CC8              ; 	Entidad_sospechosa. 20/4/23
 177+ 8CC8
 178+ 8CC8              ;	ld a,(Impacto)
 179+ 8CC8              ;	and a
 180+ 8CC8              ;	jr z,1F
 181+ 8CC8
 182+ 8CC8              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8CC8              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8CC8              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8CC8              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8CC8              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8CC8
 188+ 8CC8
 189+ 8CC8              ;1 ld hl,(Puntero_restore_caja)
 190+ 8CC8              ;	ld a,(hl)
 191+ 8CC8              ;	and a
 192+ 8CC8              ;	push af
 193+ 8CC8              ;	jr z,2F
 194+ 8CC8
 195+ 8CC8              ;	di
 196+ 8CC8              ;	ld de,Bandeja_DRAW
 197+ 8CC8              ;	ld bc,42
 198+ 8CC8              ;	ldir
 199+ 8CC8              ;	ei
 200+ 8CC8
 201+ 8CC8 CD E2 8B     2 call Incrementa_punteros_de_cajas
 202+ 8CCB C9           	ret
 203+ 8CCC
 204+ 8CCC
 205+ 8CCC              ; ---------------------------------------------------------------------
 206+ 8CCC              ;
 207+ 8CCC              ;	29/01/24
 208+ 8CCC
 209+ 8CCC              Guarda_foto_de_mov_masticado
 210+ 8CCC
 211+ 8CCC CD EE 8A     	call Cargamos_registros_con_mov_masticado
 212+ 8CCF CD E4 99     	call Genera_datos_de_impresion
 213+ 8CD2              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8CD2              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8CD2              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8CD2              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8CD2
 218+ 8CD2 CD E1 8C     	call Decrementa_Contador_de_mov_masticados
 219+ 8CD5 C9           	ret
 220+ 8CD6
 221+ 8CD6              ; ---------------------------------------------------------------------
 222+ 8CD6              ;
 223+ 8CD6              ;	25/01/24
 224+ 8CD6
 225+ 8CD6 21 8A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8CD9 06 2A        	ld b,42
 227+ 8CDB AF           	xor a
 228+ 8CDC
 229+ 8CDC 77           1 ld (hl),a
 230+ 8CDD 23           	inc hl
 231+ 8CDE 10 FC        	djnz 1B
 232+ 8CE0
 233+ 8CE0 C9           	ret
 234+ 8CE1
 235+ 8CE1              ; ---------------------------------------------------------------------
 236+ 8CE1              ;
 237+ 8CE1              ;	22/01/24
 238+ 8CE1
 239+ 8CE1 2A AB 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8CE4 2B           	dec hl
 241+ 8CE5
 242+ 8CE5 24           	inc h
 243+ 8CE6 25           	dec h
 244+ 8CE7
 245+ 8CE7 FC EE 8C     	call m,Reinicia_entidad_maliciosa
 246+ 8CEA
 247+ 8CEA              ;	jr nz,1F
 248+ 8CEA
 249+ 8CEA              ;	inc l
 250+ 8CEA              ;	dec l
 251+ 8CEA
 252+ 8CEA              ;	di
 253+ 8CEA              ;	jr z,$
 254+ 8CEA              ;	ei
 255+ 8CEA
 256+ 8CEA 22 AB 89     1 ld (Contador_de_mov_masticados),hl
 257+ 8CED C9           	ret
 258+ 8CEE
 259+ 8CEE              ; ---------------------------------------------------------------------
 260+ 8CEE              ;
 261+ 8CEE              ;	10/2/24
 262+ 8CEE
 263+ 8CEE              Reinicia_entidad_maliciosa
 264+ 8CEE
 265+ 8CEE              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8CEE
 267+ 8CEE CD 5D 99     	call Situa_en_contador_general_de_mov_masticados
 268+ 8CF1 CD 6A 99     	call Transfiere_datos_de_contadores
 269+ 8CF4
 270+ 8CF4              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8CF4
 272+ 8CF4 3A 8A 89     	ld a,(Tipo)
 273+ 8CF7 CD B2 8C     	call Definicion_segun_tipo
 274+ 8CFA
 275+ 8CFA E5           	push hl
 276+ 8CFB DD E1        	pop ix
 277+ 8CFD
 278+ 8CFD DD 6E 0B     	ld l,(ix+11)
 279+ 8D00 DD 66 0C     	ld h,(ix+12)
 280+ 8D03
 281+ 8D03 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8D06
 283+ 8D06              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8D06              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8D06
 286+ 8D06 2A E7 89     	ld hl,(Scanlines_album_SP)
 287+ 8D09 01 06 00     	ld bc,6
 288+ 8D0C A7           	and a
 289+ 8D0D ED 42        	sbc hl,bc
 290+ 8D0F 22 E7 89     	ld (Scanlines_album_SP),hl
 291+ 8D12
 292+ 8D12 CD EE 8A     	call Cargamos_registros_con_mov_masticado
 293+ 8D15 CD E4 99     	call Genera_datos_de_impresion
 294+ 8D18
 295+ 8D18 2A AB 89     	ld hl,(Contador_de_mov_masticados)
 296+ 8D1B 2B           	dec hl
 297+ 8D1C
 298+ 8D1C C9           	ret
 299+ 8D1D
 300+ 8D1D
 301+ 8D1D
 302+ 8D1D
 303+ 8D1D              ; ---------------------------------------------------------------------
 304+ 8D1D              ;
 305+ 8D1D              ;	22/01/24
 306+ 8D1D
 307+ 8D1D 21 EA 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8D20 CB 46        	bit 0,(hl)
 309+ 8D22 20 0D        	jr nz,1F
 310+ 8D24 CB 4E        	bit 1,(hl)
 311+ 8D26 20 0C        	jr nz,2F
 312+ 8D28 CB 56        	bit 2,(hl)
 313+ 8D2A 20 0B        	jr nz,3F
 314+ 8D2C CB 5E        	bit 3,(hl)
 315+ 8D2E 20 0A        	jr nz,4F
 316+ 8D30 C9           	ret
 317+ 8D31
 318+ 8D31 CB E6        1 set 4,(hl)
 319+ 8D33 C9           	ret
 320+ 8D34 CB EE        2 set 5,(hl)
 321+ 8D36 C9           	ret
 322+ 8D37 CB F6        3 set 6,(hl)
 323+ 8D39 C9           	ret
 324+ 8D3A CB FE        4 set 7,(hl)
 325+ 8D3C C9           	ret
 326+ 8D3D
 327+ 8D3D              ; ---------------------------------------------------------------------
 328+ 8D3D              ;
 329+ 8D3D              ;	23/01/24
 330+ 8D3D              ;
 331+ 8D3D              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8D3D              ;
 333+ 8D3D              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8D3D              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8D3D              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8D3D              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8D3D
 338+ 8D3D              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8D3D
 340+ 8D3D 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8D3E 3D           	dec a
 342+ 8D3F 20 06        	jr nz,1F
 343+ 8D41
 344+ 8D41              ; --- Tipo_1
 345+ 8D41
 346+ 8D41 21 EA 89     	ld hl,Ctrl_4
 347+ 8D44 CB C6        	set 0,(hl)
 348+ 8D46 C9           	ret
 349+ 8D47
 350+ 8D47 3D           1 dec a
 351+ 8D48 20 06        	jr nz,2F
 352+ 8D4A
 353+ 8D4A              ; --- Tipo_2
 354+ 8D4A
 355+ 8D4A 21 EA 89     	ld hl,Ctrl_4
 356+ 8D4D CB CE        	set 1,(hl)
 357+ 8D4F C9           	ret
 358+ 8D50
 359+ 8D50 3D           2 dec a
 360+ 8D51 20 06        	jr nz,3F
 361+ 8D53
 362+ 8D53              ; --- Tipo_3
 363+ 8D53
 364+ 8D53 21 EA 89     	ld hl,Ctrl_4
 365+ 8D56 CB D6        	set 2,(hl)
 366+ 8D58 C9           	ret
 367+ 8D59
 368+ 8D59              ; --- Tipo_3
 369+ 8D59
 370+ 8D59 21 EA 89     3 ld hl,Ctrl_4
 371+ 8D5C CB D6        	set 2,(hl)
 372+ 8D5E C9           	ret
 373+ 8D5F
 374+ 8D5F              ; ---------------------------------------------------------------------
 375+ 8D5F              ;
 376+ 8D5F              ;	22/01/24
 377+ 8D5F
 378+ 8D5F 21 EA 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8D62 CB 46        	bit 0,(hl)
 380+ 8D64 20 0E        	jr nz,1F
 381+ 8D66
 382+ 8D66 CB 4E        	bit 1,(hl)
 383+ 8D68 20 10        	jr nz,2F
 384+ 8D6A
 385+ 8D6A CB 56        	bit 2,(hl)
 386+ 8D6C 20 12        	jr nz,3F
 387+ 8D6E
 388+ 8D6E CB 5E        	bit 3,(hl)
 389+ 8D70 20 14        	jr nz,4F
 390+ 8D72 18 19        	jr 6F
 391+ 8D74
 392+ 8D74              ; Entidad_de_Tipo_1.
 393+ 8D74
 394+ 8D74 CB 66        1 bit 4,(hl)
 395+ 8D76 28 15        	jr z,6F
 396+ 8D78 18 10        	jr 5F
 397+ 8D7A
 398+ 8D7A              ; Entidad_de_Tipo_2.
 399+ 8D7A
 400+ 8D7A CB 6E        2 bit 5,(hl)
 401+ 8D7C 28 0F        	jr z,6F
 402+ 8D7E 18 0A        	jr 5F
 403+ 8D80
 404+ 8D80              ; Entidad_de_Tipo_3.
 405+ 8D80
 406+ 8D80 CB 76        3 bit 6,(hl)
 407+ 8D82 28 09        	jr z,6F
 408+ 8D84 18 04        	jr 5F
 409+ 8D86
 410+ 8D86              ; Entidad_de_Tipo_4.
 411+ 8D86
 412+ 8D86 CB 7E        4 bit 7,(hl)
 413+ 8D88 28 03        	jr z,6F
 414+ 8D8A
 415+ 8D8A              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8D8A
 417+ 8D8A AF           5 xor a
 418+ 8D8B 3C           	inc a
 419+ 8D8C C9           	ret
 420+ 8D8D
 421+ 8D8D              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8D8D
 423+ 8D8D AF           6 xor a
 424+ 8D8E C9           	ret
 425+ 8D8F
 426+ 8D8F              ;	------------------------------------------------------------------------------------
 427+ 8D8F              ;
 428+ 8D8F              ;	12/01/24
 429+ 8D8F              ;
 430+ 8D8F              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8D8F              ;
 432+ 8D8F              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8D8F              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8D8F
 435+ 8D8F CB 27        Calcula_salto_en_BC sla a
 436+ 8D91 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8D93 4F           	ld c,a
 438+ 8D94 06 00        	ld b,0
 439+ 8D96 C9           	ret
 440+ 8D97
 441+ 8D97              ; ------------------------------------------------------------------
 442+ 8D97              ;
 443+ 8D97              ;	19/1/24
 444+ 8D97              ;
 445+ 8D97              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8D97              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8D97
 448+ 8D97 A7           Situa_en_datos_de_definicion and a
 449+ 8D98 ED 4A        	adc hl,bc
 450+ 8D9A CD 7B 8B     	call Extrae_address
 451+ 8D9D 22 DB 89         ld (Datos_de_entidad),hl
 452+ 8DA0 C9           	ret
 453+ 8DA1
 454+ 8DA1              ; ------------------------------------------------------------------
 455+ 8DA1
 456+ 8DA1              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8DA1              ; 	inc de
 458+ 8DA1              ; 	inc de
 459+ 8DA1              ; 	ex de,hl
 460+ 8DA1              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8DA1              ; 	ret
 462+ 8DA1
 463+ 8DA1              ; ----------------------------------------------------------------------------------------------------------
 464+ 8DA1              ;
 465+ 8DA1              ;	31/1/24
 466+ 8DA1              ;
 467+ 8DA1              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8DA1              ;	_ de entidad.
 469+ 8DA1              ;
 470+ 8DA1              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8DA1              ;
 472+ 8DA1              ;
 473+ 8DA1              ;	MODIFICA: HL,DE y BC
 474+ 8DA1
 475+ 8DA1
 476+ 8DA1              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8DA1
 478+ 8DA1 11 8A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8DA4 01 03 00     	ld bc,3
 480+ 8DA7 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8DA9              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8DA9 11 94 89     	ld de,Attr									; DE en (Attr).
 483+ 8DAC 01 05 00     	ld bc,5
 484+ 8DAF ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8DB1              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8DB1 11 9D 89     	ld de,Posicion_inicio
 487+ 8DB4 01 03 00     	ld bc,3
 488+ 8DB7 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8DB9              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8DB9 11 A9 89     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8DBC 01 02 00     	ld bc,2
 492+ 8DBF ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8DC1
 494+ 8DC1 11 B3 89     	ld de,Frames_explosion
 495+ 8DC4 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8DC6 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8DC7
 498+ 8DC7 C9           	ret
 499+ 8DC8
 500+ 8DC8              ; ----------------------------------------------------------------------------------------------------------
 501+ 8DC8              ;
 502+ 8DC8              ;	22/01/24
 503+ 8DC8              ;
 504+ 8DC8              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8DC8              ;
 506+ 8DC8              ;	Las cajas contienen entidades iniciadas:
 507+ 8DC8              ;
 508+ 8DC8              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8DC8              ;
 510+ 8DC8              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8DC8              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8DC8              ;
 513+ 8DC8              ;	MODIFICA: HL,DE y BC
 514+ 8DC8
 515+ 8DC8 21 8A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8DCB ED 5B CF 89  	ld de,(Puntero_store_caja)
 517+ 8DCF 7E           	ld a,(hl)
 518+ 8DD0 12           	ld (de),a
 519+ 8DD1 13           	inc de 													; (Tipo).
 520+ 8DD2
 521+ 8DD2 21 91 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8DD5 01 02 00     	ld bc,2
 523+ 8DD8 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8DDA              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8DDA 23           	inc hl
 526+ 8DDB 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8DDC 12           	ld (de),a
 528+ 8DDD 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8DDE
 530+ 8DDE 21 A0 89     	ld hl,Impacto
 531+ 8DE1 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8DE2 12           	ld (de),a
 533+ 8DE3 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8DE4              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8DE4 23           	inc hl
 536+ 8DE5 01 06 00     	ld bc,6
 537+ 8DE8 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8DEA              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8DEA 01 07 00     	ld bc,7
 540+ 8DED ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8DEF              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8DEF              ;															; HL apunta ahora a (Columnas).
 543+ 8DEF 21 B2 89     	ld hl,Ctrl_2
 544+ 8DF2 7E           	ld a,(hl)
 545+ 8DF3 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8DF4 13           	inc de
 547+ 8DF5
 548+ 8DF5 C9           	ret
 549+ 8DF6
 550+ 8DF6              ;---------------------------------------------------------------------------------------------------------------
 551+ 8DF6              ;
 552+ 8DF6              ;	5/1/24
 553+ 8DF6              ;
 554+ 8DF6              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8DF6              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8DF6              ;
 557+ 8DF6              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8DF6              ;
 559+ 8DF6              ;	(Numero_parcial_de_entidades)="7".
 560+ 8DF6              ;
 561+ 8DF6              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8DF6              ;
 563+ 8DF6              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8DF6              ;
 565+ 8DF6              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8DF6              ;	MODIFICA: A y B.
 567+ 8DF6              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8DF6
 569+ 8DF6              Inicializa_Numero_parcial_de_entidades
 570+ 8DF6
 571+ 8DF6              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8DF6
 573+ 8DF6 3A D5 89     	ld a,(Numero_de_entidades)
 574+ 8DF9 A7           	and a
 575+ 8DFA
 576+ 8DFA              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8DFA              ;	jr z,$
 578+ 8DFA              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8DFA
 580+ 8DFA 20 03        	jr nz,3F
 581+ 8DFC
 582+ 8DFC              ; ---------- ---------- ----------
 583+ 8DFC
 584+ 8DFC              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8DFC              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8DFC
 587+ 8DFC CD 1D 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8DFF
 589+ 8DFF              ; ---------- ---------- ----------
 590+ 8DFF
 591+ 8DFF 3A D5 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8E02 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8E04 38 08        	jr c,1F
 594+ 8E06
 595+ 8E06              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8E06              ; Actualizamos variables.
 597+ 8E06
 598+ 8E06 3E 07        	ld a,7
 599+ 8E08 32 D6 89     	ld (Numero_parcial_de_entidades),a
 600+ 8E0B 47           	ld b,a
 601+ 8E0C 18 04        	jr 2F
 602+ 8E0E
 603+ 8E0E              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8E0E              ; (Numero_de_entidades)="0".
 605+ 8E0E
 606+ 8E0E 32 D6 89     1 ld (Numero_parcial_de_entidades),a
 607+ 8E11 47           	ld b,a
 608+ 8E12 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1785  8E13              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8E13              ; ******************************************************************************************************************************************************************************************
   2+ 8E13              ;
   3+ 8E13              ; 26/06/23
   4+ 8E13              ;
   5+ 8E13              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8E13
   7+ 8E13              Draw
   8+ 8E13
   9+ 8E13 CD FD 90     	call Prepara_draw
  10+ 8E16 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8E17 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8E18 28 05        	jr z,2F
  13+ 8E1A
  14+ 8E1A 3A 9F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8E1D 18 0C        	jr 1F
  16+ 8E1F
  17+ 8E1F 2A 9D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8E22 22 8D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8E25 CD B1 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8E28              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8E28
  22+ 8E28 CD C1 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8E2B
  24+ 8E2B 3A AD 89     1 ld a,(Ctrl_0)
  25+ 8E2E CB 6F        	bit 5,a
  26+ 8E30 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8E32
  28+ 8E32 CD 47 8E     	call Comprueba_limite_horizontal
  29+ 8E35 CD D7 8E     	call Comprueba_limite_vertical
  30+ 8E38
  31+ 8E38              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8E38              ; -----------------------
  33+ 8E38              ; -----------------------
  34+ 8E38              ; -----------------------
  35+ 8E38
  36+ 8E38 CD 2D 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8E3B CD 64 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8E3E              ;	call Define_rutina_de_impresion
  39+ 8E3E
  40+ 8E3E 3A AD 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8E41 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8E43 32 AD 89     	ld (Ctrl_0),a
  43+ 8E46
  44+ 8E46 C9           	ret
  45+ 8E47
  46+ 8E47              ; *******************************************************************************************************************************************************************************************
  47+ 8E47              ;	21/01/23
  48+ 8E47              ;
  49+ 8E47              ; 	Comprueba_limite_horizontal.
  50+ 8E47              ;
  51+ 8E47              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8E47              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8E47              ;
  54+ 8E47              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8E47              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8E47              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8E47              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8E47
  59+ 8E47
  60+ 8E47
  61+ 8E47 3A AD 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8E4A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8E4C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8E4E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8E50 32 AD 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8E53 18 09            jr 6F
  67+ 8E55 CB 5F        1 bit 3,a
  68+ 8E57 28 0A            jr z,2F
  69+ 8E59 E6 F7            and $f7
  70+ 8E5B 32 AD 89         ld (Ctrl_0),a
  71+ 8E5E CD B1 8F     6 call Inicializacion
  72+ 8E61 18 5B            jr 5F
  73+ 8E63 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8E64
  75+ 8E64              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8E64              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8E64
  78+ 8E64 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8E65 2A AF 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8E68 CD 82 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8E6B 67           	ld h,a
  82+ 8E6C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8E6D CD 82 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8E70 67           	ld h,a
  85+ 8E71 A7           	and a
  86+ 8E72 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8E74 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8E75 3A 9F 89     	ld a,(Cuad_objeto)
  89+ 8E78 FE 02        	cp 2
  90+ 8E7A 38 1E        	jr c,3F
  91+ 8E7C 28 1C        	jr z,3F
  92+ 8E7E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8E7F 28 23            jr z,7F
  94+ 8E81 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8E83 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8E85 E1           	pop hl
  97+ 8E86
  98+ 8E86              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8E86              ; _para indicar con E="2" en caso necesario.
 100+ 8E86
 101+ 8E86 E5               push hl
 102+ 8E87 C5               push bc
 103+ 8E88 CD 82 99     	call calcula_tercio
 104+ 8E8B FE 01        	cp 1
 105+ 8E8D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8E8F CD BF 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8E92 28 26            jr z,9F
 108+ 8E94 38 24            jr c,9F
 109+ 8E96 1E 00        11 ld e,0
 110+ 8E98 18 22            jr 8F
 111+ 8E9A 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8E9B 28 07        	jr z, 7F
 113+ 8E9D 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8E9F 1E 00         	ld e,0
 115+ 8EA1 E1           	pop hl
 116+ 8EA2 18 04        	jr 4F
 117+ 8EA4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8EA6 18 15            jr 10F
 119+ 8EA8
 120+ 8EA8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8EA8              ; _para indicar con E="2" en caso necesario.
 122+ 8EA8
 123+ 8EA8 E5           4 push hl
 124+ 8EA9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8EAA CD 82 99     	call calcula_tercio
 126+ 8EAD FE 01        	cp 1
 127+ 8EAF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8EB1 CD BF 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8EB4 28 04            jr z,9F
 130+ 8EB6 30 02            jr nc,9F
 131+ 8EB8 18 02        	jr 8F
 132+ 8EBA 1E 02        9 ld e,2
 133+ 8EBC C1           8 pop bc
 134+ 8EBD E1           10 pop hl
 135+ 8EBE C9           5 ret
 136+ 8EBF
 137+ 8EBF              ; --------------------
 138+ 8EBF              ;
 139+ 8EBF              ; 25/08/22
 140+ 8EBF
 141+ 8EBF CD 82 99     Comprueba_centro call calcula_tercio
 142+ 8EC2 67               ld h,a
 143+ 8EC3 08           	ex af,af
 144+ 8EC4 FE 02        	cp 2
 145+ 8EC6 38 07        	jr c,1F
 146+ 8EC8 28 05        	jr z,1F
 147+ 8ECA 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8ECD 18 03        	jr 2F
 149+ 8ECF 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8ED2 08           2 ex af,af
 151+ 8ED3 A7               and a
 152+ 8ED4 ED 42            sbc hl,bc
 153+ 8ED6 C9               ret
 154+ 8ED7
 155+ 8ED7              ; *********************************************************************************************************************************************************************************************
 156+ 8ED7              ;
 157+ 8ED7              ;   16/8/22
 158+ 8ED7              ;
 159+ 8ED7              ;	Comprueba_limite_vertical
 160+ 8ED7              ;
 161+ 8ED7              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8ED7              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8ED7              ;
 164+ 8ED7
 165+ 8ED7 2A 8D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8EDA 7D           	ld a,l
 167+ 8EDB E6 1F        	and $1F
 168+ 8EDD 57           	ld d,a
 169+ 8EDE 3A B1 89     	ld a,(Limite_vertical)
 170+ 8EE1 BA           	cp d 											; Límite - Posición.
 171+ 8EE2 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8EE3 3A 9F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8EE6 CB 47        	bit 0,a
 174+ 8EE8 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8EEA
 176+ 8EEA              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8EEA
 178+ 8EEA 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8EEB 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8EED
 181+ 8EED              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8EED              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8EED
 184+ 8EED 3A 91 89         ld a,(Coordenada_X)
 185+ 8EF0 16 0F            ld d,Centro_izquierda
 186+ 8EF2 A7               and a
 187+ 8EF3 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8EF4 28 1E            jr z,3F
 189+ 8EF6 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8EF8              ;                                                    ; _salimos sin modificar nada.
 191+ 8EF8 18 0E            jr 2F
 192+ 8EFA 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8EFB 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8EFD
 195+ 8EFD              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8EFD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8EFD
 198+ 8EFD 3A 91 89         ld a,(Coordenada_X)
 199+ 8F00 16 10            ld d,Centro_derecha
 200+ 8F02 A7               and a
 201+ 8F03 92               sub d
 202+ 8F04 28 0E            jr z,3F
 203+ 8F06 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8F08              ;                                                    ; _salimos sin modificar nada.
 205+ 8F08 CB 43        2 bit 0,e
 206+ 8F0A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8F0C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8F0D CD A1 8F         call Modificaccionne
 209+ 8F10 C1           	pop bc
 210+ 8F11 CD B1 8F         call Inicializacion
 211+ 8F14 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8F15
 213+ 8F15              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8F15
 215+ 8F15 C5           4 push bc
 216+ 8F16 01 8C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8F19 0A           	ld a,(bc)
 218+ 8F1A 3D           	dec a
 219+ 8F1B 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8F1C 7D           	ld a,l
 221+ 8F1D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8F1E CB 47        	bit 0,a
 223+ 8F20 28 03        	jr z,5F
 224+ 8F22 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8F23 18 2E        	jr 7F
 226+ 8F25
 227+ 8F25              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8F25
 229+ 8F25 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8F26 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8F27 3A AD 89     	ld a,(Ctrl_0)
 232+ 8F2A CB 4F        	bit 1,a
 233+ 8F2C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8F2E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8F2F
 236+ 8F2F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8F2F
 238+ 8F2F 1C               inc e
 239+ 8F30 1D               dec e
 240+ 8F31 20 07            jr nz,12F
 241+ 8F33 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8F34 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8F35 22 8D 89     	ld (Posicion_actual),hl
 244+ 8F38 18 44        13 jr 9F
 245+ 8F3A CB 43        12 bit 0,e
 246+ 8F3C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8F3E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8F3E C1           	pop bc
 249+ 8F3F 18 D3        	jr 3B
 250+ 8F41 80           14 add b
 251+ 8F42 6F               ld l,a
 252+ 8F43 22 8D 89     	ld (Posicion_actual),hl
 253+ 8F46 CD A1 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8F49 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8F4B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8F4D 32 AD 89         ld (Ctrl_0),a
 257+ 8F50 F1           	pop af
 258+ 8F51 18 2B        	jr 9F
 259+ 8F53
 260+ 8F53              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8F53
 262+ 8F53 F5           7 push af
 263+ 8F54 3A AD 89     	ld a,(Ctrl_0)
 264+ 8F57 CB 47        	bit 0,a
 265+ 8F59 20 1D        	jr nz,8F
 266+ 8F5B F1           	pop af
 267+ 8F5C
 268+ 8F5C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8F5C
 270+ 8F5C 1C           	inc e
 271+ 8F5D 1D               dec e
 272+ 8F5E 20 07            jr nz,10F
 273+ 8F60 90           	sub b
 274+ 8F61 6F               ld l,a
 275+ 8F62 22 8D 89     	ld (Posicion_actual),hl
 276+ 8F65 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8F67              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8F67 CB 43        10 bit 0,e
 279+ 8F69 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8F6B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8F6B C1           	pop bc
 282+ 8F6C 18 A6        	jr 3B
 283+ 8F6E 90           16 sub b
 284+ 8F6F 6F               ld l,a
 285+ 8F70 22 8D 89     	ld (Posicion_actual),hl
 286+ 8F73 CD A1 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 8F76 18 06            jr 9F
 288+ 8F78 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 8F7A 32 AD 89         ld (Ctrl_0),a
 290+ 8F7D F1           	pop af
 291+ 8F7E C1           9 pop bc
 292+ 8F7F 1E 00        	ld e,0
 293+ 8F81 CD B1 8F         call Inicializacion
 294+ 8F84 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 8F85 08           	ex af,af
 296+ 8F86 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 8F87 18 8B            jr 3B
 298+ 8F89
 299+ 8F89              ; --------------------
 300+ 8F89
 301+ 8F89 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 8F8B CD 18 91     1 call PreviousScan
 303+ 8F8E 10 FB            djnz 1B
 304+ 8F90 22 8D 89     	ld (Posicion_actual),hl
 305+ 8F93 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 8F94 C9           	ret
 307+ 8F95
 308+ 8F95              ; --------------------
 309+ 8F95
 310+ 8F95 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 8F97 CD 09 91     1 call NextScan
 312+ 8F9A 10 FB            djnz 1B
 313+ 8F9C 22 8D 89     	ld (Posicion_actual),hl
 314+ 8F9F AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 8FA0 C9           	ret
 316+ 8FA1
 317+ 8FA1              ; --------------------
 318+ 8FA1              ;
 319+ 8FA1              ;	22/01/23
 320+ 8FA1              ;
 321+ 8FA1              ;	E="1". Hemos cambiado de cuadrante.
 322+ 8FA1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 8FA1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 8FA1
 325+ 8FA1
 326+ 8FA1              Modificaccionne
 327+ 8FA1
 328+ 8FA1 3A 9F 89     	ld a,(Cuad_objeto)
 329+ 8FA4 FE 02        	cp 2
 330+ 8FA6 CC 89 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 8FA9 DC 89 8F         call c,Modifica_Pos_actual
 332+ 8FAC C8           	ret z
 333+ 8FAD CD 95 8F         call Modifica_Pos_actual2
 334+ 8FB0 C9               ret
 335+ 8FB1
 336+ 8FB1              ; *************************************************************************************************************************************************************************************************
 337+ 8FB1              ;
 338+ 8FB1              ;	13/8/22
 339+ 8FB1              ;
 340+ 8FB1              ;	Inicializacion
 341+ 8FB1              ;
 342+ 8FB1              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 8FB1              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 8FB1              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 8FB1              ;
 346+ 8FB1              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 8FB1              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 8FB1              ;	_ desaparece/aparece.
 349+ 8FB1
 350+ 8FB1              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 8FB1              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 8FB1              ;
 353+ 8FB1              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 8FB1              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 8FB1              ; 		   [E] ="0"
 356+ 8FB1
 357+ 8FB1              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 8FB1
 359+ 8FB1 CD 82 99     Inicializacion call calcula_tercio
 360+ 8FB4 28 36        	jr z,primit
 361+ 8FB6 E6 02        	and 2
 362+ 8FB8 20 07        	jr nz,segmit
 363+ 8FBA 7D           	ld a,l
 364+ 8FBB FE 7F        	cp $7f
 365+ 8FBD 38 2D        	jr c,primit
 366+ 8FBF 28 2B        	jr z,primit
 367+ 8FC1 CD 27 90     segmit call column
 368+ 8FC4 38 13        	jr c,tercuad
 369+ 8FC6 3E 04        cuarcuad ld a,4
 370+ 8FC8 32 9F 89     	ld (Cuad_objeto),a
 371+ 8FCB 21 20 48     	ld hl,$4820
 372+ 8FCE 22 AF 89     	ld (Limite_horizontal),hl
 373+ 8FD1 21 B1 89     	ld hl,Limite_vertical
 374+ 8FD4 36 0D        	ld (hl),$0d
 375+ 8FD6 08           	ex af,af
 376+ 8FD7 18 3C        	jr 1F
 377+ 8FD9              tercuad
 378+ 8FD9 3E 03        	ld a,3
 379+ 8FDB 32 9F 89     	ld (Cuad_objeto),a
 380+ 8FDE 21 20 48     	ld hl,$4820
 381+ 8FE1 22 AF 89     	ld (Limite_horizontal),hl
 382+ 8FE4 21 B1 89     	ld hl,Limite_vertical
 383+ 8FE7 36 12        	ld (hl),$12
 384+ 8FE9 08           	ex af,af
 385+ 8FEA 18 29        	jr 1F
 386+ 8FEC CD 27 90     primit call column
 387+ 8FEF 38 13        	jr c, primcuad
 388+ 8FF1              segcuad
 389+ 8FF1 3E 02        	ld a,2
 390+ 8FF3 32 9F 89     	ld (Cuad_objeto),a
 391+ 8FF6 21 C0 4F     	ld hl,$4fc0
 392+ 8FF9 22 AF 89     	ld (Limite_horizontal),hl
 393+ 8FFC 21 B1 89     	ld hl,Limite_vertical
 394+ 8FFF 36 0D        	ld (hl),$0d
 395+ 9001 08           	ex af,af
 396+ 9002 18 11        	jr 1F
 397+ 9004              primcuad
 398+ 9004 3E 01        	ld a,1
 399+ 9006 32 9F 89     	ld (Cuad_objeto),a
 400+ 9009 21 C0 4F     	ld hl,$4fc0
 401+ 900C 22 AF 89     	ld (Limite_horizontal),hl
 402+ 900F 21 B1 89     	ld hl,Limite_vertical
 403+ 9012 36 12        	ld (hl),$12
 404+ 9014 08           	ex af,af
 405+ 9015
 406+ 9015 C5           1 push bc
 407+ 9016 E5           	push hl
 408+ 9017 D5           	push de
 409+ 9018
 410+ 9018 2A 8D 89     	ld hl,(Posicion_actual)
 411+ 901B CD A0 99     	call Genera_coordenadas
 412+ 901E
 413+ 901E D1           	pop de
 414+ 901F E1           	pop hl
 415+ 9020 C1           	pop bc
 416+ 9021
 417+ 9021 21 AD 89     	ld hl,Ctrl_0
 418+ 9024 CB EE        	set 5,(hl)
 419+ 9026 C9           	ret
 420+ 9027
 421+ 9027              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9027
 423+ 9027              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9027              ;
 425+ 9027              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9027
 427+ 9027 7D           column ld a,l
 428+ 9028 E6 1F        	and $1f
 429+ 902A FE 10         	cp $10
 430+ 902C C9            	ret
 431+ 902D
 432+ 902D              ; --------------------------------------------------------------------------------------------------------------------
 433+ 902D              ;
 434+ 902D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 902D              ;
 436+ 902D              ; 14/12/22
 437+ 902D              ;
 438+ 902D              ;	Modifica: A y BC.
 439+ 902D
 440+ 902D 3A 9F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9030 E6 01        	and 1
 442+ 9032 28 17        	jr z,1F
 443+ 9034
 444+ 9034              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9034
 446+ 9034 3A 91 89     	ld a,(Coordenada_X)
 447+ 9037 47           	ld b,a
 448+ 9038 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9039 79           	ld a,c
 450+ 903A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 903B 38 08        	jr c,2F
 452+ 903D 47           	ld b,a
 453+ 903E 79           	ld a,c
 454+ 903F 90           	sub b
 455+ 9040 32 AE 89     	ld (Columnas),a
 456+ 9043 18 1B        	jr 4F
 457+ 9045 79           2 ld a,c
 458+ 9046 32 AE 89     	ld (Columnas),a
 459+ 9049 18 15        	jr 4F
 460+ 904B
 461+ 904B              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 904B
 463+ 904B 3A 91 89     1 ld a,(Coordenada_X)
 464+ 904E 81           	add c
 465+ 904F 3D           	dec a
 466+ 9050 D6 1F        	sub $1f
 467+ 9052 38 08        	jr c,3F
 468+ 9054 47           	ld b,a
 469+ 9055 79           	ld a,c
 470+ 9056 90           	sub b
 471+ 9057 32 AE 89     	ld (Columnas),a
 472+ 905A 18 04        	jr 4F
 473+ 905C 79           3 ld a,c
 474+ 905D 32 AE 89     	ld (Columnas),a
 475+ 9060 D9           4 exx
 476+ 9061 4F           	ld c,a
 477+ 9062 D9           	exx
 478+ 9063 C9            ret
 479+ 9064
 480+ 9064              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9064              ;
 482+ 9064              ;   19/7/23
 483+ 9064              ;
 484+ 9064              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9064              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9064              ;
 487+ 9064              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9064              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9064              ;
 490+ 9064              ;	DESTRUYE: HL,B Y A.
 491+ 9064
 492+ 9064 3A 9F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9067 FE 02        	cp 2
 494+ 9069 38 18        	jr c,1F
 495+ 906B 28 16        	jr z,1F
 496+ 906D E6 01        	and 1
 497+ 906F 28 0D        	jr z,3F
 498+ 9071
 499+ 9071              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9071
 501+ 9071 CD B7 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9074
 503+ 9074 7D           9 ld a,l
 504+ 9075 E6 1F        	and $1f
 505+ 9077 28 2A        	jr z,7F
 506+ 9079 2B           	dec hl
 507+ 907A 10 F8        	djnz 9B
 508+ 907C 18 25        	jr 7F
 509+ 907E
 510+ 907E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 907E
 512+ 907E 2A 8D 89     3 ld hl,(Posicion_actual)
 513+ 9081 18 20        	jr 7F
 514+ 9083
 515+ 9083 28 14        1 jr z,2F
 516+ 9085
 517+ 9085              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9085
 519+ 9085 CD B7 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9088
 521+ 9088 7D           4 ld a,l
 522+ 9089 E6 1F        	and $1f
 523+ 908B 28 03        	jr z,6F
 524+ 908D 2B           	dec hl
 525+ 908E 10 F8        	djnz 4B
 526+ 9090 06 0F        6 ld b,15
 527+ 9092 CD 18 91     5 call PreviousScan
 528+ 9095 10 FB        	djnz 5B
 529+ 9097 18 0A        	jr 7F
 530+ 9099
 531+ 9099              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9099
 533+ 9099 CD B7 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 909C 06 0F        	ld b,15
 535+ 909E CD 18 91     8 call PreviousScan
 536+ 90A1 10 FB        	djnz 8B
 537+ 90A3
 538+ 90A3 E5           7 push hl
 539+ 90A4 DD E1        	pop ix
 540+ 90A6
 541+ 90A6 2A 8F 89     	ld hl,(Puntero_objeto)
 542+ 90A9 E5           	push hl
 543+ 90AA FD E1        	pop iy
 544+ 90AC
 545+ 90AC              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 90AC
 547+ 90AC 3A AD 89     	ld a,(Ctrl_0)
 548+ 90AF CB 77        	bit 6,a
 549+ 90B1 C8           	ret z
 550+ 90B2
 551+ 90B2              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 90B2              ; _ entidad / Amadeus´.
 553+ 90B2
 554+ 90B2 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 90B6
 556+ 90B6 C9           	ret
 557+ 90B7
 558+ 90B7              ; --------------------------------------------------------------------------------------------------------------------
 559+ 90B7              ;
 560+ 90B7              ;	2/1/23
 561+ 90B7              ;
 562+ 90B7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 90B7              ;
 564+ 90B7              ;	Tras esta rutina tenemos:
 565+ 90B7              ;
 566+ 90B7              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 90B7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 90B7              ;
 569+ 90B7              ;	DESTRUYE!!!!! HL,B y A.
 570+ 90B7
 571+ 90B7 2A 8D 89     Operandos ld hl,(Posicion_actual)
 572+ 90BA 3A AE 89     	ld a,(Columnas)
 573+ 90BD 3D           	dec a
 574+ 90BE 20 01        	jr nz,1F
 575+ 90C0 3C           	inc a
 576+ 90C1 47           1 ld b,a
 577+ 90C2 C9           	ret
 578+ 90C3
 579+ 90C3              ; --------------------------------------------------------------------------------------------------------------------
 580+ 90C3              ;
 581+ 90C3              ;	3/1/23
 582+ 90C3              ;
 583+ 90C3              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 90C3              ;
 585+ 90C3              ;	Destruye: A,B,HL y DE.
 586+ 90C3
 587+ 90C3              Define_rutina_de_impresion
 588+ 90C3
 589+ 90C3 3A 8C 89     	ld a,(Columns)
 590+ 90C6 47           	ld b,a
 591+ 90C7 3A AE 89     	ld a,(Columnas)
 592+ 90CA B8           	cp b
 593+ 90CB 20 0D        	jr nz,2f
 594+ 90CD
 595+ 90CD              ;	La entidad se imprime entera.
 596+ 90CD
 597+ 90CD 21 6A 91     	ld hl, Indice_entidades_completas
 598+ 90D0 E6 01        	and 1
 599+ 90D2 28 02        	jr z,1F
 600+ 90D4
 601+ 90D4 23           	inc hl
 602+ 90D5 23           	inc hl
 603+ 90D6
 604+ 90D6 CD 7B 8B     1 call Extrae_address
 605+ 90D9 C9           	ret		;	ret
 606+ 90DA
 607+ 90DA              ;	La entidad no se imprime entera en pantalla.
 608+ 90DA
 609+ 90DA 3A 9F 89     2 ld a,(Cuad_objeto)
 610+ 90DD E6 01        	and 1
 611+ 90DF 28 17        	jr z,3F
 612+ 90E1
 613+ 90E1              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 90E1
 615+ 90E1 21 6E 91     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 90E4 3A 8C 89     4 ld a,(Columns)
 617+ 90E7 E6 01        	and 1
 618+ 90E9 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 90EB
 620+ 90EB 23           	inc hl
 621+ 90EC 23           	inc hl
 622+ 90ED
 623+ 90ED 3A AE 89     	ld a,(Columnas)
 624+ 90F0 E6 01        	and 1
 625+ 90F2 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 90F4
 627+ 90F4 23           	inc hl
 628+ 90F5 23           	inc hl
 629+ 90F6
 630+ 90F6 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 90F8
 632+ 90F8 21 74 91     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 90FB 18 E7        	jr 4B
 634+ 90FD
 635+ 90FD              ; --------------------------------------------------------------------------------------------------------------------
 636+ 90FD              ;
 637+ 90FD              ;	Prepara_draw
 638+ 90FD              ;
 639+ 90FD              ;	Es una rutina de carga.
 640+ 90FD              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 90FD              ;
 642+ 90FD              ;	FUNCIONAMIENTO:
 643+ 90FD              ;
 644+ 90FD              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 90FD              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 90FD              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 90FD              ;
 648+ 90FD              ;	DESTRUYE:
 649+ 90FD              ;
 650+ 90FD              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 90FD
 652+ 90FD 21 8B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9100 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9101 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9102 4E           	ld c,(hl)
 656+ 9103 2A 8D 89     	ld hl,(Posicion_actual)
 657+ 9106 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9108 C9           	ret
 659+ 9109
 660+ 9109              ;----------------------------------------------------------------------------------------------------------------
 661+ 9109              ;
 662+ 9109              ;	5/08/22
 663+ 9109              ;
 664+ 9109              ;   NextScan.
 665+ 9109              ;
 666+ 9109              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 9109              ;
 668+ 9109              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 9109              ;
 670+ 9109              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9109              ;
 672+ 9109              ;       DESTRUIDOS: AF y HL !!!
 673+ 9109              ;
 674+ 9109              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9109              ;
 676+ 9109
 677+ 9109 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 910A 7C               ld a,h
 679+ 910B E6 07            and 7
 680+ 910D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 910E
 682+ 910E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 910F C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9111 6F               ld l,a
 685+ 9112 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9113
 687+ 9113 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9114 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9116 67               ld h,a
 690+ 9117 C9               ret
 691+ 9118
 692+ 9118              ;----------------------------------------------------------------------------------------------------------------
 693+ 9118              ;
 694+ 9118              ;	5/08/22
 695+ 9118              ;
 696+ 9118              ;   PreviousScan.
 697+ 9118              ;
 698+ 9118              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9118              ;
 700+ 9118              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9118              ;
 702+ 9118              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9118              ;
 704+ 9118              ;       DESTRUIDOS: AF y HL !!!
 705+ 9118              ;
 706+ 9118              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9118              ;
 708+ 9118
 709+ 9118 7C           PreviousScan ld a,h
 710+ 9119 25               dec h               ; Dec H.
 711+ 911A E6 07            and 7
 712+ 911C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 911D
 714+ 911D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 911E D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9120 6F               ld l,a
 717+ 9121 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9122
 719+ 9122 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9123 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9125 67               ld h,a
 722+ 9126 C9               ret
 723+ 9127
 724+ 9127              ; -----------------------------------------------------------------------------------
 725+ 9127              ;
 726+ 9127              ;	31/7/23
 727+ 9127              ;
 728+ 9127              ;	Rutina principal de pintado de entidades.
 729+ 9127              ;	Extrae la foto del frame, (entidades).
 730+ 9127
 731+ 9127              Extrae_Scanlines_album
 732+ 9127
 733+ 9127 21 01 80     	ld hl,Scanlines_album+1
 734+ 912A 7E           	ld a,(hl)
 735+ 912B A7           	and a
 736+ 912C C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 912D
 738+ 912D              ;	No hay datos, (entidades para pintar en este frame).
 739+ 912D
 740+ 912D 3A D8 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9130 A7           	and a
 742+ 9131 C8           	ret z
 743+ 9132
 744+ 9132              ; -----------------------------------
 745+ 9132
 746+ 9132 ED 73 DD 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 9136 31 00 80     	ld sp,Scanlines_album
 748+ 9139
 749+ 9139 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 913B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 913C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 913D
 753+ 913D ED 73 DF 89  	ld (Stack_2),sp
 754+ 9141 ED 7B DD 89  	ld sp,(Stack)
 755+ 9145
 756+ 9145              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9145
 758+ 9145 3E CD        	ld a,$cd
 759+ 9147 32 4F 91     	ld (Imprime),a
 760+ 914A EB           	ex de,hl
 761+ 914B 22 50 91     	ld (Imprime+1),hl
 762+ 914E EB           	ex de,hl
 763+ 914F
 764+ 914F              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 914F
 766+ 914F 00 00 00     Imprime db 0,0,0
 767+ 9152
 768+ 9152 ED 73 DD 89  	ld (Stack),sp
 769+ 9156
 770+ 9156 3A D8 89     	ld a,(Numero_de_malotes)
 771+ 9159 3D           	dec a
 772+ 915A 28 09        	jr z,1F
 773+ 915C 32 D8 89      	ld (Numero_de_malotes),a
 774+ 915F
 775+ 915F ED 7B DF 89  	ld sp,(Stack_2)
 776+ 9163 18 D4        	jr 2B
 777+ 9165
 778+ 9165 AF           1 xor a
 779+ 9166 32 DF 89     	ld (Stack_2),a
 780+ 9169
 781+ 9169 C9           	ret
 782+ 916A
 783+ 916A              ; -----------------------------------------------------------------------------------
 784+ 916A              ;
 785+ 916A              ;	28/2/23
 786+ 916A              ;
 787+ 916A              ;	Pinta los disparos generados.
 788+ 916A
 789+ 916A              ;Extrae_foto_disparos
 790+ 916A
 791+ 916A              ;	ld hl,Scanlines_album_disparos+1
 792+ 916A              ;    ld a,(hl)
 793+ 916A              ;    and a
 794+ 916A              ;    ret z
 795+ 916A
 796+ 916A              ;	ld a,(Numero_de_disparotes)
 797+ 916A              ;	and a
 798+ 916A              ;	ret z
 799+ 916A              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 916A              ;	ld sp,Scanlines_album_disparos
 801+ 916A
 802+ 916A              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 916A              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 916A              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 916A
 806+ 916A              ;	ld (Stack_2),sp
 807+ 916A              ;	ld sp,(Stack)
 808+ 916A
 809+ 916A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 916A
 811+ 916A              ;	ld a,$cd
 812+ 916A              ;	ld (Imprime2),a
 813+ 916A              ;	ex de,hl
 814+ 916A              ;	ld (Imprime2+1),hl
 815+ 916A              ;	ex de,hl
 816+ 916A
 817+ 916A              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 916A
 819+ 916A              ;Imprime2 db 0,0,0
 820+ 916A
 821+ 916A              ;	ld a,(Numero_de_disparotes)
 822+ 916A              ;	dec a
 823+ 916A              ;	jr z,1F
 824+ 916A              ; 	ld (Numero_de_disparotes),a
 825+ 916A
 826+ 916A              ;	ld sp,(Stack_2)
 827+ 916A              ;	jr 2B
 828+ 916A
 829+ 916A              ;1 xor a
 830+ 916A              ;	ld (Stack_2),a
 831+ 916A              ;	ret
 832+ 916A
 833+ 916A              ; -----------------------------------------------------------------------------------
 834+ 916A              ;
 835+ 916A              ;	4/9/23
 836+ 916A              ;
 837+ 916A              ;	Rutina principal de pintado de Amadeus.
 838+ 916A              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 916A
 840+ 916A              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 916A              ;	ld a,(hl)
 842+ 916A              ;	and a
 843+ 916A              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 916A
 845+ 916A              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 916A              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 916A              ;	ret z
 848+ 916A
 849+ 916A              ; -----------------------------------
 850+ 916A
 851+ 916A              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 916A              ;	ld sp,Scanlines_album_Amadeus
 853+ 916A
 854+ 916A              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 916A              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 916A              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 916A
 858+ 916A              ;	ld (Stack_2),sp
 859+ 916A              ;	ld sp,(Stack)
 860+ 916A
 861+ 916A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 916A
 863+ 916A              ;	ld a,$cd
 864+ 916A              ;	ld (Imprime_Amadeus),a
 865+ 916A              ;	ex de,hl
 866+ 916A              ;	ld (Imprime_Amadeus+1),hl
 867+ 916A              ;	ex de,hl
 868+ 916A
 869+ 916A              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 916A
 871+ 916A              ;Imprime_Amadeus db 0,0,0
 872+ 916A
 873+ 916A              ;	ld (Stack),sp
 874+ 916A
 875+ 916A              ;	ld a,(Numero_de_malotes)
 876+ 916A              ;	dec a
 877+ 916A              ;	jr z,1F
 878+ 916A              ; 	ld (Numero_de_malotes),a
 879+ 916A
 880+ 916A              ;	ld sp,(Stack_2)
 881+ 916A              ;	jr 2B
 882+ 916A
 883+ 916A              ;1 xor a
 884+ 916A              ;	ld (Stack_2),a
 885+ 916A
 886+ 916A              ;	ret
 887+ 916A
 888+ 916A
 889+ 916A
 890+ 916A
 891+ 916A
 892+ 916A
# file closed: Draw_XOR.asm
1786  916A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 916A              ;   índices de Rutinas de impresión.
   2+ 916A
   3+ 916A 7A 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 916C 0E 92            defw Pinta_Amadeus_3x2
   5+ 916E
   6+ 916E E2 92        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9170 82 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9172 36 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9174
  10+ 9174 0C 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9176 10 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9178 C4 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 917A
  14+ 917A
  15+ 917A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 917A              ;
  17+ 917A              ;   28/2/24
  18+ 917A              ;
  19+ 917A              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 917A              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 917A              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 917A              ;
  23+ 917A              ;   Modifica: AF,HL,BC y DE.
  24+ 917A
  25+ 917A              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 917A
  27+ 917A D9               exx
  28+ 917B 36 01            ld (hl),1
  29+ 917D 2C               inc l
  30+ 917E D9               exx
  31+ 917F
  32+ 917F FD E5            push iy
  33+ 9181 D1               pop de
  34+ 9182
  35+ 9182 ED 73 DD 89      ld (Stack),sp
  36+ 9186 F9           	ld sp,hl
  37+ 9187 06 10            ld b,16
  38+ 9189
  39+ 9189 E1               pop hl
  40+ 918A 1A               ld a,(de)
  41+ 918B 77               ld (hl),a
  42+ 918C 1C           	inc e
  43+ 918D 2C               inc l
  44+ 918E 1A               ld a,(de)
  45+ 918F 77               ld (hl),a
  46+ 9190 1C               inc e
  47+ 9191
  48+ 9191 E1               pop hl
  49+ 9192 1A               ld a,(de)
  50+ 9193 77               ld (hl),a
  51+ 9194 1C           	inc e
  52+ 9195 2C               inc l
  53+ 9196 1A               ld a,(de)
  54+ 9197 77               ld (hl),a
  55+ 9198 1C               inc e
  56+ 9199
  57+ 9199 E1               pop hl
  58+ 919A 1A               ld a,(de)
  59+ 919B 77               ld (hl),a
  60+ 919C 1C           	inc e
  61+ 919D 2C               inc l
  62+ 919E 1A               ld a,(de)
  63+ 919F 77               ld (hl),a
  64+ 91A0 1C               inc e
  65+ 91A1
  66+ 91A1 E1               pop hl
  67+ 91A2 1A               ld a,(de)
  68+ 91A3 77               ld (hl),a
  69+ 91A4 1C           	inc e
  70+ 91A5 2C               inc l
  71+ 91A6 1A               ld a,(de)
  72+ 91A7 77               ld (hl),a
  73+ 91A8 1C               inc e
  74+ 91A9
  75+ 91A9 E1               pop hl
  76+ 91AA 1A               ld a,(de)
  77+ 91AB 77               ld (hl),a
  78+ 91AC 1C           	inc e
  79+ 91AD 2C               inc l
  80+ 91AE 1A               ld a,(de)
  81+ 91AF 77               ld (hl),a
  82+ 91B0 1C               inc e
  83+ 91B1
  84+ 91B1 E1               pop hl
  85+ 91B2 1A               ld a,(de)
  86+ 91B3 77               ld (hl),a
  87+ 91B4 1C           	inc e
  88+ 91B5 2C               inc l
  89+ 91B6 1A               ld a,(de)
  90+ 91B7 77               ld (hl),a
  91+ 91B8 1C               inc e
  92+ 91B9
  93+ 91B9 E1               pop hl
  94+ 91BA 1A               ld a,(de)
  95+ 91BB 77               ld (hl),a
  96+ 91BC 1C           	inc e
  97+ 91BD 2C               inc l
  98+ 91BE 1A               ld a,(de)
  99+ 91BF 77               ld (hl),a
 100+ 91C0 1C               inc e
 101+ 91C1
 102+ 91C1 E1               pop hl
 103+ 91C2 1A               ld a,(de)
 104+ 91C3 77               ld (hl),a
 105+ 91C4 1C           	inc e
 106+ 91C5 2C               inc l
 107+ 91C6 1A               ld a,(de)
 108+ 91C7 77               ld (hl),a
 109+ 91C8 1C               inc e
 110+ 91C9
 111+ 91C9 E1               pop hl
 112+ 91CA 1A               ld a,(de)
 113+ 91CB 77               ld (hl),a
 114+ 91CC 1C           	inc e
 115+ 91CD 2C               inc l
 116+ 91CE 1A               ld a,(de)
 117+ 91CF 77               ld (hl),a
 118+ 91D0 1C               inc e
 119+ 91D1
 120+ 91D1 E1               pop hl
 121+ 91D2 1A               ld a,(de)
 122+ 91D3 77               ld (hl),a
 123+ 91D4 1C           	inc e
 124+ 91D5 2C               inc l
 125+ 91D6 1A               ld a,(de)
 126+ 91D7 77               ld (hl),a
 127+ 91D8 1C               inc e
 128+ 91D9
 129+ 91D9 E1               pop hl
 130+ 91DA 1A               ld a,(de)
 131+ 91DB 77               ld (hl),a
 132+ 91DC 1C           	inc e
 133+ 91DD 2C               inc l
 134+ 91DE 1A               ld a,(de)
 135+ 91DF 77               ld (hl),a
 136+ 91E0 1C               inc e
 137+ 91E1
 138+ 91E1 E1               pop hl
 139+ 91E2 1A               ld a,(de)
 140+ 91E3 77               ld (hl),a
 141+ 91E4 1C           	inc e
 142+ 91E5 2C               inc l
 143+ 91E6 1A               ld a,(de)
 144+ 91E7 77               ld (hl),a
 145+ 91E8 1C               inc e
 146+ 91E9
 147+ 91E9 E1               pop hl
 148+ 91EA 1A               ld a,(de)
 149+ 91EB 77               ld (hl),a
 150+ 91EC 1C           	inc e
 151+ 91ED 2C               inc l
 152+ 91EE 1A               ld a,(de)
 153+ 91EF 77               ld (hl),a
 154+ 91F0 1C               inc e
 155+ 91F1
 156+ 91F1 E1               pop hl
 157+ 91F2 1A               ld a,(de)
 158+ 91F3 77               ld (hl),a
 159+ 91F4 1C           	inc e
 160+ 91F5 2C               inc l
 161+ 91F6 1A               ld a,(de)
 162+ 91F7 77               ld (hl),a
 163+ 91F8 1C               inc e
 164+ 91F9
 165+ 91F9 E1               pop hl
 166+ 91FA 1A               ld a,(de)
 167+ 91FB 77               ld (hl),a
 168+ 91FC 1C           	inc e
 169+ 91FD 2C               inc l
 170+ 91FE 1A               ld a,(de)
 171+ 91FF 77               ld (hl),a
 172+ 9200 1C               inc e
 173+ 9201
 174+ 9201 E1               pop hl
 175+ 9202 1A               ld a,(de)
 176+ 9203 77               ld (hl),a
 177+ 9204 1C           	inc e
 178+ 9205 2C               inc l
 179+ 9206 1A               ld a,(de)
 180+ 9207 77               ld (hl),a
 181+ 9208 1C               inc e
 182+ 9209
 183+ 9209 ED 7B DD 89      ld sp,(Stack)
 184+ 920D
 185+ 920D C9           	ret
 186+ 920E
 187+ 920E              Pinta_Amadeus_3x2
 188+ 920E
 189+ 920E D9               exx
 190+ 920F 36 02            ld (hl),2
 191+ 9211 2C               inc l
 192+ 9212 D9               exx
 193+ 9213
 194+ 9213 FD E5            push iy
 195+ 9215 D1               pop de
 196+ 9216
 197+ 9216 ED 73 DD 89      ld (Stack),sp
 198+ 921A F9               ld sp,hl
 199+ 921B 06 10            ld b,16
 200+ 921D
 201+ 921D E1               pop hl
 202+ 921E 1A               ld a,(de)
 203+ 921F 77               ld (hl),a
 204+ 9220 1C               inc e
 205+ 9221 2C               inc l
 206+ 9222 1A               ld a,(de)
 207+ 9223 77               ld (hl),a
 208+ 9224 1C               inc e
 209+ 9225 2C               inc l
 210+ 9226 1A               ld a,(de)
 211+ 9227 77               ld (hl),a
 212+ 9228 1C               inc e
 213+ 9229
 214+ 9229 E1               pop hl
 215+ 922A 1A               ld a,(de)
 216+ 922B 77               ld (hl),a
 217+ 922C 1C               inc e
 218+ 922D 2C               inc l
 219+ 922E 1A               ld a,(de)
 220+ 922F 77               ld (hl),a
 221+ 9230 1C               inc e
 222+ 9231 2C               inc l
 223+ 9232 1A               ld a,(de)
 224+ 9233 77               ld (hl),a
 225+ 9234 1C               inc e
 226+ 9235
 227+ 9235 E1               pop hl
 228+ 9236 1A               ld a,(de)
 229+ 9237 77               ld (hl),a
 230+ 9238 1C               inc e
 231+ 9239 2C               inc l
 232+ 923A 1A               ld a,(de)
 233+ 923B 77               ld (hl),a
 234+ 923C 1C               inc e
 235+ 923D 2C               inc l
 236+ 923E 1A               ld a,(de)
 237+ 923F 77               ld (hl),a
 238+ 9240 1C               inc e
 239+ 9241
 240+ 9241 E1               pop hl
 241+ 9242 1A               ld a,(de)
 242+ 9243 77               ld (hl),a
 243+ 9244 1C               inc e
 244+ 9245 2C               inc l
 245+ 9246 1A               ld a,(de)
 246+ 9247 77               ld (hl),a
 247+ 9248 1C               inc e
 248+ 9249 2C               inc l
 249+ 924A 1A               ld a,(de)
 250+ 924B 77               ld (hl),a
 251+ 924C 1C               inc e
 252+ 924D
 253+ 924D E1               pop hl
 254+ 924E 1A               ld a,(de)
 255+ 924F 77               ld (hl),a
 256+ 9250 1C               inc e
 257+ 9251 2C               inc l
 258+ 9252 1A               ld a,(de)
 259+ 9253 77               ld (hl),a
 260+ 9254 1C               inc e
 261+ 9255 2C               inc l
 262+ 9256 1A               ld a,(de)
 263+ 9257 77               ld (hl),a
 264+ 9258 1C               inc e
 265+ 9259
 266+ 9259 E1               pop hl
 267+ 925A 1A               ld a,(de)
 268+ 925B 77               ld (hl),a
 269+ 925C 1C               inc e
 270+ 925D 2C               inc l
 271+ 925E 1A               ld a,(de)
 272+ 925F 77               ld (hl),a
 273+ 9260 1C               inc e
 274+ 9261 2C               inc l
 275+ 9262 1A               ld a,(de)
 276+ 9263 77               ld (hl),a
 277+ 9264 1C               inc e
 278+ 9265
 279+ 9265 E1               pop hl
 280+ 9266 1A               ld a,(de)
 281+ 9267 77               ld (hl),a
 282+ 9268 1C               inc e
 283+ 9269 2C               inc l
 284+ 926A 1A               ld a,(de)
 285+ 926B 77               ld (hl),a
 286+ 926C 1C               inc e
 287+ 926D 2C               inc l
 288+ 926E 1A               ld a,(de)
 289+ 926F 77               ld (hl),a
 290+ 9270 1C               inc e
 291+ 9271
 292+ 9271 E1               pop hl
 293+ 9272 1A               ld a,(de)
 294+ 9273 77               ld (hl),a
 295+ 9274 1C               inc e
 296+ 9275 2C               inc l
 297+ 9276 1A               ld a,(de)
 298+ 9277 77               ld (hl),a
 299+ 9278 1C               inc e
 300+ 9279 2C               inc l
 301+ 927A 1A               ld a,(de)
 302+ 927B 77               ld (hl),a
 303+ 927C 1C               inc e
 304+ 927D
 305+ 927D E1               pop hl
 306+ 927E 1A               ld a,(de)
 307+ 927F 77               ld (hl),a
 308+ 9280 1C               inc e
 309+ 9281 2C               inc l
 310+ 9282 1A               ld a,(de)
 311+ 9283 77               ld (hl),a
 312+ 9284 1C               inc e
 313+ 9285 2C               inc l
 314+ 9286 1A               ld a,(de)
 315+ 9287 77               ld (hl),a
 316+ 9288 1C               inc e
 317+ 9289
 318+ 9289 E1               pop hl
 319+ 928A 1A               ld a,(de)
 320+ 928B 77               ld (hl),a
 321+ 928C 1C               inc e
 322+ 928D 2C               inc l
 323+ 928E 1A               ld a,(de)
 324+ 928F 77               ld (hl),a
 325+ 9290 1C               inc e
 326+ 9291 2C               inc l
 327+ 9292 1A               ld a,(de)
 328+ 9293 77               ld (hl),a
 329+ 9294 1C               inc e
 330+ 9295
 331+ 9295 E1               pop hl
 332+ 9296 1A               ld a,(de)
 333+ 9297 77               ld (hl),a
 334+ 9298 1C               inc e
 335+ 9299 2C               inc l
 336+ 929A 1A               ld a,(de)
 337+ 929B 77               ld (hl),a
 338+ 929C 1C               inc e
 339+ 929D 2C               inc l
 340+ 929E 1A               ld a,(de)
 341+ 929F 77               ld (hl),a
 342+ 92A0 1C               inc e
 343+ 92A1
 344+ 92A1 E1               pop hl
 345+ 92A2 1A               ld a,(de)
 346+ 92A3 77               ld (hl),a
 347+ 92A4 1C               inc e
 348+ 92A5 2C               inc l
 349+ 92A6 1A               ld a,(de)
 350+ 92A7 77               ld (hl),a
 351+ 92A8 1C               inc e
 352+ 92A9 2C               inc l
 353+ 92AA 1A               ld a,(de)
 354+ 92AB 77               ld (hl),a
 355+ 92AC 1C               inc e
 356+ 92AD
 357+ 92AD E1               pop hl
 358+ 92AE 1A               ld a,(de)
 359+ 92AF 77               ld (hl),a
 360+ 92B0 1C               inc e
 361+ 92B1 2C               inc l
 362+ 92B2 1A               ld a,(de)
 363+ 92B3 77               ld (hl),a
 364+ 92B4 1C               inc e
 365+ 92B5 2C               inc l
 366+ 92B6 1A               ld a,(de)
 367+ 92B7 77               ld (hl),a
 368+ 92B8 1C               inc e
 369+ 92B9
 370+ 92B9 E1               pop hl
 371+ 92BA 1A               ld a,(de)
 372+ 92BB 77               ld (hl),a
 373+ 92BC 1C               inc e
 374+ 92BD 2C               inc l
 375+ 92BE 1A               ld a,(de)
 376+ 92BF 77               ld (hl),a
 377+ 92C0 1C               inc e
 378+ 92C1 2C               inc l
 379+ 92C2 1A               ld a,(de)
 380+ 92C3 77               ld (hl),a
 381+ 92C4 1C               inc e
 382+ 92C5
 383+ 92C5 E1               pop hl
 384+ 92C6 1A               ld a,(de)
 385+ 92C7 77               ld (hl),a
 386+ 92C8 1C               inc e
 387+ 92C9 2C               inc l
 388+ 92CA 1A               ld a,(de)
 389+ 92CB 77               ld (hl),a
 390+ 92CC 1C               inc e
 391+ 92CD 2C               inc l
 392+ 92CE 1A               ld a,(de)
 393+ 92CF 77               ld (hl),a
 394+ 92D0 1C               inc e
 395+ 92D1
 396+ 92D1 E1               pop hl
 397+ 92D2 1A               ld a,(de)
 398+ 92D3 77               ld (hl),a
 399+ 92D4 1C               inc e
 400+ 92D5 2C               inc l
 401+ 92D6 1A               ld a,(de)
 402+ 92D7 77               ld (hl),a
 403+ 92D8 1C               inc e
 404+ 92D9 2C               inc l
 405+ 92DA 1A               ld a,(de)
 406+ 92DB 77               ld (hl),a
 407+ 92DC 1C               inc e
 408+ 92DD
 409+ 92DD ED 7B DD 89      ld sp,(Stack)
 410+ 92E1
 411+ 92E1 C9               ret
 412+ 92E2
 413+ 92E2              ; ---------------------------------------------------
 414+ 92E2
 415+ 92E2 ED 73 DD 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 92E6 FD F9        	ld sp,iy
 417+ 92E8
 418+ 92E8              ; >>>
 419+ 92E8
 420+ 92E8 06 10            ld b,16
 421+ 92EA D1           1 pop de
 422+ 92EB 7A           	ld a,d
 423+ 92EC AE           	xor (hl)
 424+ 92ED 77           	ld (hl),a
 425+ 92EE 24           	inc h
 426+ 92EF 7C               ld a,h
 427+ 92F0 E6 07            and 7
 428+ 92F2 20 0C            jr nz,2F
 429+ 92F4 7D               ld a,l
 430+ 92F5 C6 20            add a,$20
 431+ 92F7 6F               ld l,a
 432+ 92F8 38 06            jr c,2F
 433+ 92FA 7C               ld a,h
 434+ 92FB D6 08            sub 8
 435+ 92FD 67               ld h,a
 436+ 92FE 18 00            jr 2F
 437+ 9300 7C           2 ld a,h
 438+ 9301 FE 58            cp $58
 439+ 9303 28 02            jr z,3F
 440+ 9305 10 E3            djnz 1B
 441+ 9307 ED 7B DD 89  3 ld sp,(Stack)
 442+ 930B C9           	ret
 443+ 930C
 444+ 930C ED 73 DD 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 9310 FD F9        	ld sp,iy
 446+ 9312
 447+ 9312              ; >>>
 448+ 9312
 449+ 9312 06 10            ld b,16
 450+ 9314 D1           1 pop de
 451+ 9315 7B           	ld a,e
 452+ 9316 AE           	xor (hl)
 453+ 9317 77           	ld (hl),a
 454+ 9318 24           	inc h
 455+ 9319 7C               ld a,h
 456+ 931A E6 07            and 7
 457+ 931C 20 0C            jr nz,2F
 458+ 931E 7D               ld a,l
 459+ 931F C6 20            add a,$20
 460+ 9321 6F               ld l,a
 461+ 9322 38 06            jr c,2F
 462+ 9324 7C               ld a,h
 463+ 9325 D6 08            sub 8
 464+ 9327 67               ld h,a
 465+ 9328 18 00            jr 2F
 466+ 932A 7C           2 ld a,h
 467+ 932B FE 58            cp $58
 468+ 932D 28 02            jr z,3F
 469+ 932F 10 E3            djnz 1B
 470+ 9331 ED 7B DD 89  3 ld sp,(Stack)
 471+ 9335 C9           	ret
 472+ 9336
 473+ 9336              ; ---------------------------------------------------
 474+ 9336
 475+ 9336 ED 73 DD 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 933A FD F9        	ld sp,iy
 477+ 933C 06 08            ld b,8
 478+ 933E D1           1 pop de
 479+ 933F 7A           	ld a,d
 480+ 9340 AE           	xor (hl)
 481+ 9341 77           	ld (hl),a
 482+ 9342 23           	inc hl
 483+ 9343 D1           	pop de
 484+ 9344 7B           	ld a,e
 485+ 9345 AE           	xor (hl)
 486+ 9346 77           	ld (hl),a
 487+ 9347 2B           	dec hl
 488+ 9348 24            	inc h
 489+ 9349 7C               ld a,h
 490+ 934A E6 07            and 7
 491+ 934C 20 0A            jr nz,2F
 492+ 934E 7D               ld a,l
 493+ 934F C6 20            add a,$20
 494+ 9351 6F               ld l,a
 495+ 9352 38 04            jr c,2F
 496+ 9354 7C               ld a,h
 497+ 9355 D6 08            sub 8
 498+ 9357 67               ld h,a
 499+ 9358 7C           2 ld a,h
 500+ 9359 FE 58            cp $58
 501+ 935B 28 20            jr z,4F
 502+ 935D D1               pop de
 503+ 935E 7B           	ld a,e
 504+ 935F AE           	xor (hl)
 505+ 9360 77           	ld (hl),a
 506+ 9361 23           	inc hl
 507+ 9362 7A           	ld a,d
 508+ 9363 AE           	xor (hl)
 509+ 9364 77           	ld (hl),a
 510+ 9365 2B           	dec hl
 511+ 9366 24           	inc h
 512+ 9367 7C               ld a,h
 513+ 9368 E6 07            and 7
 514+ 936A 20 0A            jr nz,3F
 515+ 936C 7D               ld a,l
 516+ 936D C6 20            add a,$20
 517+ 936F 6F               ld l,a
 518+ 9370 38 04            jr c,3F
 519+ 9372 7C               ld a,h
 520+ 9373 D6 08            sub 8
 521+ 9375 67               ld h,a
 522+ 9376 7C           3 ld a,h
 523+ 9377 FE 58            cp $58
 524+ 9379 28 02            jr z,4F
 525+ 937B 10 C1            djnz 1B
 526+ 937D ED 7B DD 89  4 ld sp,(Stack)
 527+ 9381 C9           	ret
 528+ 9382
 529+ 9382 ED 73 DD 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 9386 FD F9        	ld sp,iy
 531+ 9388 06 08            ld b,8
 532+ 938A D1           1 pop de
 533+ 938B D1           	pop de
 534+ 938C 7B           	ld a,e
 535+ 938D AE           	xor (hl)
 536+ 938E 77           	ld (hl),a
 537+ 938F 24            	inc h
 538+ 9390 7C               ld a,h
 539+ 9391 E6 07            and 7
 540+ 9393 20 0A            jr nz,2F
 541+ 9395 7D               ld a,l
 542+ 9396 C6 20            add a,$20
 543+ 9398 6F               ld l,a
 544+ 9399 38 04            jr c,2F
 545+ 939B 7C               ld a,h
 546+ 939C D6 08            sub 8
 547+ 939E 67               ld h,a
 548+ 939F 7C           2 ld a,h
 549+ 93A0 FE 58            cp $58
 550+ 93A2 28 1B            jr z,4F
 551+ 93A4 D1               pop de
 552+ 93A5 7A           	ld a,d
 553+ 93A6 AE           	xor (hl)
 554+ 93A7 77           	ld (hl),a
 555+ 93A8 24           	inc h
 556+ 93A9 7C               ld a,h
 557+ 93AA E6 07            and 7
 558+ 93AC 20 0A            jr nz,3F
 559+ 93AE 7D               ld a,l
 560+ 93AF C6 20            add a,$20
 561+ 93B1 6F               ld l,a
 562+ 93B2 38 04            jr c,3F
 563+ 93B4 7C               ld a,h
 564+ 93B5 D6 08            sub 8
 565+ 93B7 67               ld h,a
 566+ 93B8 7C           3 ld a,h
 567+ 93B9 FE 58            cp $58
 568+ 93BB 28 02            jr z,4F
 569+ 93BD 10 CB            djnz 1B
 570+ 93BF ED 7B DD 89  4 ld sp,(Stack)
 571+ 93C3 C9           	ret
 572+ 93C4
 573+ 93C4 ED 73 DD 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 93C8 FD F9        	ld sp,iy
 575+ 93CA 06 08            ld b,8
 576+ 93CC D1           1 pop de
 577+ 93CD 7B           	ld a,e
 578+ 93CE AE           	xor (hl)
 579+ 93CF 77           	ld (hl),a
 580+ 93D0 23           	inc hl
 581+ 93D1 7A           	ld a,d
 582+ 93D2 AE           	xor (hl)
 583+ 93D3 77           	ld (hl),a
 584+ 93D4 2B           	dec hl
 585+ 93D5 24             	inc h
 586+ 93D6 7C               ld a,h
 587+ 93D7 E6 07            and 7
 588+ 93D9 20 0A            jr nz,2F
 589+ 93DB 7D               ld a,l
 590+ 93DC C6 20            add a,$20
 591+ 93DE 6F               ld l,a
 592+ 93DF 38 04            jr c,2F
 593+ 93E1 7C               ld a,h
 594+ 93E2 D6 08            sub 8
 595+ 93E4 67               ld h,a
 596+ 93E5 7C           2 ld a,h
 597+ 93E6 FE 58            cp $58
 598+ 93E8 28 21            jr z,4F
 599+ 93EA D1               pop de
 600+ 93EB 7A           	ld a,d
 601+ 93EC AE           	xor (hl)
 602+ 93ED 77           	ld (hl),a
 603+ 93EE 23           	inc hl
 604+ 93EF D1               pop de
 605+ 93F0 7B           	ld a,e
 606+ 93F1 AE           	xor (hl)
 607+ 93F2 77           	ld (hl),a
 608+ 93F3 2B           	dec hl
 609+ 93F4 24           	inc h
 610+ 93F5 7C               ld a,h
 611+ 93F6 E6 07            and 7
 612+ 93F8 20 0A            jr nz,3F
 613+ 93FA 7D               ld a,l
 614+ 93FB C6 20            add a,$20
 615+ 93FD 6F               ld l,a
 616+ 93FE 38 04            jr c,3F
 617+ 9400 7C               ld a,h
 618+ 9401 D6 08            sub 8
 619+ 9403 67               ld h,a
 620+ 9404 7C           3 ld a,h
 621+ 9405 FE 58            cp $58
 622+ 9407 28 02            jr z,4F
 623+ 9409 10 C1            djnz 1B
 624+ 940B ED 7B DD 89  4 ld sp,(Stack)
 625+ 940F C9           	ret
 626+ 9410
 627+ 9410 ED 73 DD 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 9414 FD F9        	ld sp,iy
 629+ 9416 06 08            ld b,8
 630+ 9418 D1           1 pop de
 631+ 9419 7B           	ld a,e
 632+ 941A AE           	xor (hl)
 633+ 941B 77           	ld (hl),a
 634+ 941C 24            	inc h
 635+ 941D 7C               ld a,h
 636+ 941E E6 07            and 7
 637+ 9420 20 0A            jr nz,2F
 638+ 9422 7D               ld a,l
 639+ 9423 C6 20            add a,$20
 640+ 9425 6F               ld l,a
 641+ 9426 38 04            jr c,2F
 642+ 9428 7C               ld a,h
 643+ 9429 D6 08            sub 8
 644+ 942B 67               ld h,a
 645+ 942C 7C           2 ld a,h
 646+ 942D FE 58            cp $58
 647+ 942F 28 1C            jr z,4F
 648+ 9431 D1               pop de
 649+ 9432 7A           	ld a,d
 650+ 9433 AE           	xor (hl)
 651+ 9434 77           	ld (hl),a
 652+ 9435 24           	inc h
 653+ 9436 7C               ld a,h
 654+ 9437 E6 07            and 7
 655+ 9439 20 0A            jr nz,3F
 656+ 943B 7D               ld a,l
 657+ 943C C6 20            add a,$20
 658+ 943E 6F               ld l,a
 659+ 943F 38 04            jr c,3F
 660+ 9441 7C               ld a,h
 661+ 9442 D6 08            sub 8
 662+ 9444 67               ld h,a
 663+ 9445 7C           3 ld a,h
 664+ 9446 FE 58            cp $58
 665+ 9448 28 03            jr z,4F
 666+ 944A D1               pop de
 667+ 944B 10 CB            djnz 1B
 668+ 944D ED 7B DD 89  4 ld sp,(Stack)
 669+ 9451 C9           	ret
 670+ 9452
 671+ 9452              ; ---------------------------------------------------
 672+ 9452              ;
 673+ 9452              ;   27/02/23
 674+ 9452              ;
 675+ 9452              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 9452              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 9452              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 9452
 679+ 9452 ED 73 DD 89  Pinta_Disparo ld (Stack),sp
 680+ 9456 FD F9            ld sp,iy
 681+ 9458 06 03            ld b,3
 682+ 945A D1           1 pop de
 683+ 945B 7B               ld a,e
 684+ 945C AE               xor (hl)
 685+ 945D 77               ld (hl),a
 686+ 945E 23               inc hl
 687+ 945F 7A               ld a,d
 688+ 9460 AE               xor (hl)
 689+ 9461 77               ld (hl),a
 690+ 9462 2B               dec hl
 691+ 9463
 692+ 9463 24               inc h
 693+ 9464 7C               ld a,h
 694+ 9465 E6 07            and 7
 695+ 9467 20 0A            jr nz,2F
 696+ 9469 7D               ld a,l
 697+ 946A C6 20            add a,$20
 698+ 946C 6F               ld l,a
 699+ 946D 38 04            jr c,2F
 700+ 946F 7C               ld a,h
 701+ 9470 D6 08            sub 8
 702+ 9472 67               ld h,a
 703+ 9473 7C           2 ld a,h
 704+ 9474 FE 58            cp $58
 705+ 9476 28 02            jr z,3F
 706+ 9478
 707+ 9478 10 E0            djnz 1B
 708+ 947A ED 7B DD 89  3 ld sp,(Stack)
 709+ 947E C9               ret
 710+ 947F
# file closed: Rutinas_de_impresion_sprites.asm
1787  947F              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 947F
   2+ 947F              ; ******************************************************************************************************************************************************************************************
   3+ 947F              ;
   4+ 947F              ;   20/05/23
   5+ 947F              ;
   6+ 947F              ;	Recompone_posicion_inicio
   7+ 947F              ;
   8+ 947F              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 947F              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 947F              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 947F              ;	_ a una u otra rutina.
  12+ 947F
  13+ 947F              Recompone_posicion_inicio
  14+ 947F
  15+ 947F 2A 9D 89     	ld hl,(Posicion_inicio)
  16+ 9482 7D           	ld a,l
  17+ 9483 E6 1F        	and $1f
  18+ 9485 28 16        	jr z,1F
  19+ 9487
  20+ 9487 FE 1F        	cp $1f
  21+ 9489 28 0D        	jr z,3F
  22+ 948B
  23+ 948B 21 B2 89     	ld hl,Ctrl_2
  24+ 948E CB C6        	set 0,(hl)
  25+ 9490 2A 8F 89     	ld hl,(Puntero_objeto)
  26+ 9493 22 CD 89     	ld (Repone_puntero_objeto),hl
  27+ 9496 18 08        	jr 2F
  28+ 9498
  29+ 9498 CD 46 96     3 call Mov_left
  30+ 949B 18 03        	jr 2F
  31+ 949D
  32+ 949D CD 23 95     1 call Mov_right
  33+ 94A0 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 94A3 22 8F 89     	ld (Puntero_objeto),hl
  35+ 94A6 C9           	ret
  36+ 94A7
  37+ 94A7              ; ******************************************************************************************************************************************************************************************
  38+ 94A7              ;
  39+ 94A7              ;   27/05/23
  40+ 94A7              ;
  41+ 94A7              ;	Mov_down
  42+ 94A7              ;
  43+ 94A7              ; 	Mueve el Sprite X px hacia abajo.
  44+ 94A7              ;
  45+ 94A7              ;
  46+ 94A7              Mov_down
  47+ 94A7
  48+ 94A7 CD 11 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 94AA              ;																	; _ repone (Puntero_objeto).
  50+ 94AA 21 AD 89     	ld hl,Ctrl_0
  51+ 94AD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 94AF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 94AF              ; 																	; _ en el caso de que no lo haya.
  54+ 94AF 3A B7 89     	ld a,(Vel_down)
  55+ 94B2 47           	ld b,a
  56+ 94B3 2A 8D 89         ld hl,(Posicion_actual)
  57+ 94B6 CD 82 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 94B9 E6 02        	and 2
  59+ 94BB 28 17        	jr z,1F
  60+ 94BD
  61+ 94BD              ; Nos encontramos en el último tercio de pantalla.
  62+ 94BD              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 94BD
  64+ 94BD 7C           	ld a,h
  65+ 94BE FE 57        	cp $57
  66+ 94C0 20 12        	jr nz,1F
  67+ 94C2
  68+ 94C2 7D           	ld a,l
  69+ 94C3 C6 20        	add $20
  70+ 94C5 30 0D        	jr nc,1F
  71+ 94C7
  72+ 94C7              ; ------------------------------
  73+ 94C7              ;
  74+ 94C7              ;	12/01/24
  75+ 94C7
  76+ 94C7              ;	call Reaparece_arriba
  77+ 94C7 CD D3 97     	call Reinicio
  78+ 94CA
  79+ 94CA              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 94CA
  81+ 94CA 3A E9 89     	ld a,(Ctrl_3)
  82+ 94CD CB CF        	set 1,a
  83+ 94CF 32 E9 89     	ld (Ctrl_3),a
  84+ 94D2
  85+ 94D2 18 08        	jr 3F
  86+ 94D4              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 94D4              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 94D4              ; ------------------------------
  89+ 94D4
  90+ 94D4 CD 09 91     1 call NextScan
  91+ 94D7 22 8D 89     	ld (Posicion_actual),hl
  92+ 94DA 10 DA            djnz 2B
  93+ 94DC CD A0 99     3 call Genera_coordenadas
  94+ 94DF C9           	ret
  95+ 94E0
  96+ 94E0              ; ******************************************************************************************************************************************************************************************
  97+ 94E0              ;
  98+ 94E0              ;   27/05/23
  99+ 94E0              ;
 100+ 94E0              ;	Mov_up
 101+ 94E0              ;
 102+ 94E0              ; 	Mueve el Sprite hacia arriba.
 103+ 94E0              ;
 104+ 94E0              ;
 105+ 94E0              Mov_up
 106+ 94E0
 107+ 94E0 CD 11 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 94E3              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 94E3 21 AD 89     	ld hl,Ctrl_0
 110+ 94E6 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 94E8              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 94E8              ; 																		; _ en el caso de que no lo haya.
 113+ 94E8 3A B6 89     	ld a,(Vel_up)
 114+ 94EB 47           	ld b,a
 115+ 94EC 2A 8D 89     	ld hl,(Posicion_actual)
 116+ 94EF CD 82 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 94F2 A7           	and a
 118+ 94F3 20 10        	jr nz,1F
 119+ 94F5
 120+ 94F5              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 94F5              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 94F5
 123+ 94F5 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 94F6 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 94F8 20 0B            jr nz,1F
 126+ 94FA 7D               ld a,l
 127+ 94FB D6 20            sub $20
 128+ 94FD 30 06            jr nc,1F
 129+ 94FF 25               dec h
 130+ 9500
 131+ 9500              ; -----------------------------
 132+ 9500 CD B4 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9503              ;	call Reinicio
 134+ 9503              ; -----------------------------
 135+ 9503
 136+ 9503 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9505 CD 18 91     1 call PreviousScan
 138+ 9508 22 8D 89     	ld (Posicion_actual),hl
 139+ 950B 10 E2            djnz 3B
 140+ 950D CD A0 99     2 call Genera_coordenadas
 141+ 9510 C9           	ret
 142+ 9511
 143+ 9511              ; -----------------------------
 144+ 9511              ;
 145+ 9511              ;	27/5/23
 146+ 9511              ;
 147+ 9511              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9511              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9511              ;
 150+ 9511              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9511              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9511              ;
 153+ 9511              ;	Modifica: A y (Puntero_objeto).
 154+ 9511
 155+ 9511 3A B2 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9514 CB 47        	bit 0,a
 157+ 9516 C8           	ret z
 158+ 9517 CB 87        	res 0,a
 159+ 9519 32 B2 89     	ld (Ctrl_2),a
 160+ 951C 2A CD 89     	ld hl,(Repone_puntero_objeto)
 161+ 951F 22 8F 89     	ld (Puntero_objeto),hl
 162+ 9522 C9           	ret
 163+ 9523
 164+ 9523              ; ******************************************************************************************************************************************************************************************
 165+ 9523              ;
 166+ 9523              ;	19/10/22
 167+ 9523              ;
 168+ 9523              ;	Mov_right.
 169+ 9523              ;
 170+ 9523              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9523              ;
 172+ 9523
 173+ 9523 3A AD 89     Mov_right ld a,(Ctrl_0)
 174+ 9526 CB 77        	bit 6,a
 175+ 9528 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 952A
 177+ 952A CD 62 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 952D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 952E
 180+ 952E 21 AD 89     	ld hl,Ctrl_0
 181+ 9531 CB E6        	set 4,(hl)
 182+ 9533 18 52        	jr 8F
 183+ 9535
 184+ 9535 21 AD 89     10 ld hl,Ctrl_0
 185+ 9538 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 953A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 953A              ; 																	; _ en el caso de que no lo haya.
 188+ 953A 3A 91 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 953D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 953F 20 46        	jr nz,8F
 191+ 9541
 192+ 9541 3A 93 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9544 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9545 28 40        	jr z,8F
 195+ 9547
 196+ 9547              ; ---------- ---------- ----------
 197+ 9547              ;
 198+ 9547              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9547
 200+ 9547 3A B5 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 954A FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 954C 28 11        	jr z,1F
 203+ 954E 38 06        	jr c,6F
 204+ 9550 FE 04        	cp 4
 205+ 9552 28 14        	jr z,7F
 206+ 9554 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9556
 208+ 9556              ; ---------- ---------- ----------
 209+ 9556              ;
 210+ 9556              ; Perfiles de velocidad
 211+ 9556              ;
 212+ 9556
 213+ 9556 3A 93 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9559 FE FE        	cp $fe
 215+ 955B 20 2A        	jr nz,8F
 216+ 955D 18 10        	jr 3F
 217+ 955F 3A 93 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9562 FE FD        	cp $fd
 219+ 9564 20 21        	jr nz,8F
 220+ 9566 18 07        	jr 3F
 221+ 9568 3A 93 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 956B FE FB        	cp $fb
 223+ 956D 20 18        	jr nz,8F
 224+ 956F
 225+ 956F              ; ---------- ---------- ----------
 226+ 956F
 227+ 956F              3
 228+ 956F CD A2 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9572              ;	call Reinicio
 230+ 9572
 231+ 9572              ; ---------- ---------- ----------
 232+ 9572              ;
 233+ 9572              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9572
 235+ 9572 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9574 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9575 CD 8E 95     	call DESPLZ_DER
 238+ 9578 C1           	pop bc
 239+ 9579 10 F9        	djnz 5B
 240+ 957B 2A 8D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 957E 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 957F 22 8D 89     	ld (Posicion_actual),hl
 243+ 9582 CD A0 99     	call Genera_coordenadas
 244+ 9585 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9587
 246+ 9587              ; ---------- ---------- ----------
 247+ 9587
 248+ 9587 2A 8D 89     8 ld hl,(Posicion_actual)
 249+ 958A CD 8E 95     	call DESPLZ_DER
 250+ 958D C9           2 ret
 251+ 958E
 252+ 958E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 958E              ;
 254+ 958E              ;	22/9/22
 255+ 958E              ;
 256+ 958E
 257+ 958E CD 9D 95     DESPLZ_DER call Desplaza_derecha
 258+ 9591 CD E9 95         call modifica_parametros_1er_DESPLZ_2
 259+ 9594 CD 12 96         call Ciclo_completo
 260+ 9597 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 959A CB FE        	set 7,(hl)
 262+ 959C C9           	ret
 263+ 959D
 264+ 959D              ; ******************************************************************************************************************************************************************************************
 265+ 959D              ;	15/02/23
 266+ 959D              ;
 267+ 959D
 268+ 959D 3A B5 89     Desplaza_derecha ld a,(Vel_right)
 269+ 95A0 47           	ld b,a
 270+ 95A1 2A 99 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 95A4 23           1 inc hl
 272+ 95A5 23           	inc hl
 273+ 95A6 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 95A8 22 99 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 95AB CD 7B 8B     	call Extrae_address
 276+ 95AE 22 8F 89     	ld (Puntero_objeto),hl
 277+ 95B1
 278+ 95B1              ; Modifica (Puntero_DESPLZ_izq).
 279+ 95B1
 280+ 95B1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 95B1              ; Cuántos movimientos hemos hecho ??
 282+ 95B1              ; DE contiene (Puntero_DESPLZ_der).
 283+ 95B1
 284+ 95B1 2A 95 89     7 ld hl,(Indice_Sprite_der)
 285+ 95B4 EB           	ex de,hl
 286+ 95B5 A7           	and a
 287+ 95B6 ED 52        	sbc hl,de
 288+ 95B8 CB 3D        	srl l
 289+ 95BA 3E 08        6 ld a,8
 290+ 95BC 95           	sub l
 291+ 95BD 30 1E        	jr nc,3F
 292+ 95BF
 293+ 95BF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 95BF              ; B="0".
 295+ 95BF
 296+ 95BF 04           4 inc b
 297+ 95C0 3C           	inc a
 298+ 95C1 20 FC        	jr nz,4B
 299+ 95C3 78           	ld a,b
 300+ 95C4 08           	ex af,af
 301+ 95C5 2A 95 89     	ld hl,(Indice_Sprite_der)
 302+ 95C8 23           5 inc hl
 303+ 95C9 23           	inc hl
 304+ 95CA 10 FC        	djnz 5B
 305+ 95CC 22 99 89     	ld (Puntero_DESPLZ_der),hl
 306+ 95CF CD 7B 8B     	call Extrae_address
 307+ 95D2 22 8F 89     	ld (Puntero_objeto),hl
 308+ 95D5
 309+ 95D5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 95D5              ; _(Posicion_actual).
 311+ 95D5
 312+ 95D5 21 8D 89     	ld hl,Posicion_actual
 313+ 95D8 34           	inc (hl)
 314+ 95D9 08               ex af,af
 315+ 95DA 6F           	ld l,a
 316+ 95DB 18 DD        	jr 6B
 317+ 95DD
 318+ 95DD              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 95DD
 320+ 95DD 47           3 ld b,a
 321+ 95DE 2A 97 89     	ld hl,(Indice_Sprite_izq)
 322+ 95E1 23           2 inc hl
 323+ 95E2 23           	inc hl
 324+ 95E3 10 FC        	djnz 2B
 325+ 95E5 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 95E8 C9           8 ret
 327+ 95E9
 328+ 95E9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 95E9              ;
 330+ 95E9              ;	24/7/22
 331+ 95E9              ;
 332+ 95E9              ;	modifica_parametros_1er_DESPLZ_2
 333+ 95E9              ;
 334+ 95E9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 95E9              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 95E9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 95E9
 338+ 95E9 3A 93 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 95EC A7           	and a
 340+ 95ED 20 1F        	jr nz,1F
 341+ 95EF D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 95F1 32 93 89         ld (CTRL_DESPLZ),a
 343+ 95F4
 344+ 95F4 21 8C 89     	ld hl,Columns
 345+ 95F7 34           	inc (hl)
 346+ 95F8 3A 9F 89     	ld a,(Cuad_objeto)
 347+ 95FB E6 01        	and 1
 348+ 95FD 28 0F        	jr z,1F
 349+ 95FF 2A 8D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9602 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9603 22 8D 89     	ld (Posicion_actual),hl
 352+ 9606 CD A0 99     	call Genera_coordenadas
 353+ 9609 CD 6E 97     	call Inc_CTRL_DESPLZ
 354+ 960C 18 03        	jr 2F
 355+ 960E CD 6E 97     1 call Inc_CTRL_DESPLZ
 356+ 9611 C9           2 ret
 357+ 9612
 358+ 9612              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9612              ;
 360+ 9612              ;	24/7/22
 361+ 9612              ;
 362+ 9612              ;	Ciclo_completo.
 363+ 9612              ;
 364+ 9612              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9612              ;
 366+ 9612              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9612              ; 	Decrementamos (Columns).
 368+ 9612              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9612              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9612
 371+ 9612
 372+ 9612 3A 93 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9615 FE FF        	cp $ff
 374+ 9617 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9619 E6 F0        	and $f0
 376+ 961B 20 28        	jr nz,3F
 377+ 961D
 378+ 961D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 961D
 380+ 961D 3A 93 89     	ld a,(CTRL_DESPLZ)
 381+ 9620 47           	ld b,a
 382+ 9621 3E F8        	ld a,$f8
 383+ 9623 80           	add b
 384+ 9624 32 93 89     	ld (CTRL_DESPLZ),a
 385+ 9627 18 1C        	jr 3F
 386+ 9629 21 8C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 962C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 962D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 962E 32 93 89     	ld (CTRL_DESPLZ),a
 390+ 9631 3A 9F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9634 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9636 20 0A        	jr nz,2F
 393+ 9638 2A 8D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 963B 23           	inc hl
 395+ 963C 22 8D 89     	ld (Posicion_actual),hl
 396+ 963F CD A0 99     	call Genera_coordenadas
 397+ 9642
 398+ 9642              ; Inicia el puntero de Sprite.
 399+ 9642
 400+ 9642 CD 90 8B     2 call Inicia_puntero_objeto_der
 401+ 9645 C9           3 ret
 402+ 9646
 403+ 9646              ; ******************************************************************************************************************************************************************************************
 404+ 9646              ;
 405+ 9646              ;	15/02/23
 406+ 9646              ;
 407+ 9646              ;	Mov_left.
 408+ 9646              ;
 409+ 9646              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9646              ;
 411+ 9646              Mov_left
 412+ 9646
 413+ 9646 21 AD 89     	ld hl,Ctrl_0
 414+ 9649 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 964B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 964B              ; 																	; _ en el caso de que no lo haya.
 417+ 964B 3A AD 89     	ld a,(Ctrl_0)
 418+ 964E CB 77        	bit 6,a
 419+ 9650 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9652
 421+ 9652 CD 68 97     	call Stop_Amadeus_left
 422+ 9655 C8           	ret z
 423+ 9656 20 4A        	jr nz,8F
 424+ 9658
 425+ 9658 3A 91 89     11 ld a,(Coordenada_X)
 426+ 965B A7           	and a
 427+ 965C 20 44        	jr nz,8F
 428+ 965E
 429+ 965E 3A 93 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9661 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9662 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9664
 433+ 9664              ; ---------- ---------- ----------
 434+ 9664
 435+ 9664 3A B4 89     	ld a,(Vel_left)
 436+ 9667 FE 02        	cp 2
 437+ 9669 28 0F        	jr z,1F
 438+ 966B 38 04        	jr c,6F
 439+ 966D FE 04        	cp 4
 440+ 966F 28 12        	jr z,7F
 441+ 9671
 442+ 9671              ; ---------- ---------- ----------
 443+ 9671
 444+ 9671 3A 93 89     6 ld a,(CTRL_DESPLZ)
 445+ 9674 FE F8        	cp $f8
 446+ 9676 20 2A        	jr nz,8F
 447+ 9678 18 10        	jr 4F
 448+ 967A 3A 93 89     1 ld a,(CTRL_DESPLZ)
 449+ 967D FE F9        	cp $f9
 450+ 967F 20 21        	jr nz,8F
 451+ 9681 18 07        	jr 4F
 452+ 9683 3A 93 89     7 ld a,(CTRL_DESPLZ)
 453+ 9686 FE FB        	cp $fb
 454+ 9688 20 18        	jr nz,8F
 455+ 968A
 456+ 968A              ; ---------- ---------- ----------
 457+ 968A
 458+ 968A              4
 459+ 968A CD 90 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 968D              ;	call Reinicio
 461+ 968D
 462+ 968D              ; ---------- ---------- ----------
 463+ 968D
 464+ 968D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 968F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9690
 467+ 9690              ;	ld hl,(Indice_Sprite_izq)
 468+ 9690              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9690
 470+ 9690 CD A9 96     	call DESPLZ_IZQ
 471+ 9693 C1           	pop bc
 472+ 9694 10 F9        	djnz 5B
 473+ 9696 2A 8D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9699 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 969A 22 8D 89     	ld (Posicion_actual),hl
 476+ 969D CD A0 99     	call Genera_coordenadas
 477+ 96A0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 96A2
 479+ 96A2              ; ---------- ---------- ----------
 480+ 96A2
 481+ 96A2              ; Movemos, no hay recolocación.
 482+ 96A2
 483+ 96A2 2A 8D 89     8 ld hl,(Posicion_actual)
 484+ 96A5 CD A9 96     	call DESPLZ_IZQ
 485+ 96A8 C9           2 ret
 486+ 96A9
 487+ 96A9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 96A9              ;
 489+ 96A9              ;	22/9/22
 490+ 96A9
 491+ 96A9              DESPLZ_IZQ
 492+ 96A9
 493+ 96A9 CD B8 96     	call Desplaza_izquierda
 494+ 96AC CD 04 97         call modifica_parametros_1er_DESPLZ
 495+ 96AF CD 2C 97     	call Ciclo_completo_2
 496+ 96B2 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 96B5 CB BE        	res 7,(hl)
 498+ 96B7 C9           	ret
 499+ 96B8
 500+ 96B8              Desplaza_izquierda
 501+ 96B8
 502+ 96B8 3A B4 89     	ld a,(Vel_left)
 503+ 96BB 47           	ld b,a
 504+ 96BC 2A 9B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 96BF 23           1 inc hl
 506+ 96C0 23           	inc hl
 507+ 96C1 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 96C3 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 96C6 CD 7B 8B     	call Extrae_address
 510+ 96C9 22 8F 89     	ld (Puntero_objeto),hl
 511+ 96CC
 512+ 96CC              ; Modifica (Puntero_DESPLZ_der).
 513+ 96CC
 514+ 96CC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96CC              ; Cuántos movimientos hemos hecho ??
 516+ 96CC              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96CC
 518+ 96CC 2A 97 89     7 ld hl,(Indice_Sprite_izq)
 519+ 96CF EB           	ex de,hl
 520+ 96D0 A7           	and a
 521+ 96D1 ED 52        	sbc hl,de
 522+ 96D3 CB 3D        	srl l
 523+ 96D5 3E 08        6 ld a,8
 524+ 96D7 95           	sub l
 525+ 96D8 30 1E        	jr nc,3F
 526+ 96DA
 527+ 96DA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 96DA              ; B="0".
 529+ 96DA
 530+ 96DA 04           4 inc b
 531+ 96DB 3C           	inc a
 532+ 96DC 20 FC        	jr nz,4B
 533+ 96DE 78           	ld a,b
 534+ 96DF 08           	ex af,af
 535+ 96E0 2A 97 89     	ld hl,(Indice_Sprite_izq)
 536+ 96E3 23           5 inc hl
 537+ 96E4 23           	inc hl
 538+ 96E5 10 FC        	djnz 5B
 539+ 96E7 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 96EA CD 7B 8B     	call Extrae_address
 541+ 96ED 22 8F 89     	ld (Puntero_objeto),hl
 542+ 96F0
 543+ 96F0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 96F0              ; _(Posicion_actual).
 545+ 96F0
 546+ 96F0 21 8D 89     	ld hl,Posicion_actual
 547+ 96F3 35           	dec (hl)
 548+ 96F4 08           	ex af,af
 549+ 96F5 6F           	ld l,a
 550+ 96F6 18 DD        	jr 6B
 551+ 96F8
 552+ 96F8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 96F8
 554+ 96F8 47           3 ld b,a
 555+ 96F9 2A 95 89     	ld hl,(Indice_Sprite_der)
 556+ 96FC 23           2 inc hl
 557+ 96FD 23           	inc hl
 558+ 96FE 10 FC        	djnz 2B
 559+ 9700 22 99 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9703 C9           8 ret
 561+ 9704
 562+ 9704              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9704              ;
 564+ 9704              ;	modifica_parametros_1er_DESPLZ
 565+ 9704              ;
 566+ 9704              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9704              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9704              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9704
 570+ 9704 3A 93 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9707 A7           	and a
 572+ 9708 20 1E        	jr nz,1F
 573+ 970A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 970B 32 93 89         ld (CTRL_DESPLZ),a
 575+ 970E 21 8C 89     	ld hl,Columns
 576+ 9711 34           	inc (hl)
 577+ 9712 3A 9F 89     	ld a,(Cuad_objeto)
 578+ 9715 E6 01        	and 1
 579+ 9717 20 0F        	jr nz,1F
 580+ 9719 2A 8D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 971C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 971D 22 8D 89     	ld (Posicion_actual),hl
 583+ 9720 CD A0 99     	call Genera_coordenadas
 584+ 9723 CD 7F 97     	call Dec_CTRL_DESPLZ
 585+ 9726 18 03        	jr 2F
 586+ 9728 CD 7F 97     1 call Dec_CTRL_DESPLZ
 587+ 972B C9           2 ret
 588+ 972C
 589+ 972C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 972C
 591+ 972C 3A 93 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 972F FE F7        	cp $f7
 593+ 9731 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9733 30 2C        	jr nc,3F
 595+ 9735
 596+ 9735              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9735
 598+ 9735 06 00        	ld b,0
 599+ 9737 04           4 inc b
 600+ 9738 3C           	inc a
 601+ 9739 FE F7        	cp $f7
 602+ 973B 20 FA        	jr nz,4B
 603+ 973D 3E FF        	ld a,$ff
 604+ 973F 90           	sub b
 605+ 9740 32 93 89     	ld (CTRL_DESPLZ),a
 606+ 9743 18 1C        	jr 3F
 607+ 9745
 608+ 9745              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9745
 610+ 9745 21 8C 89     1 ld hl,Columns
 611+ 9748 35           	dec (hl)
 612+ 9749 AF           	xor a
 613+ 974A 32 93 89     	ld (CTRL_DESPLZ),a
 614+ 974D 3A 9F 89     	ld a,(Cuad_objeto)
 615+ 9750 E6 01        	and 1
 616+ 9752 28 0A        	jr z,2F
 617+ 9754 2A 8D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9757 2B           	dec hl
 619+ 9758 22 8D 89     	ld (Posicion_actual),hl
 620+ 975B CD A0 99     	call Genera_coordenadas
 621+ 975E
 622+ 975E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 975E
 624+ 975E CD A3 8B     2 call Inicia_puntero_objeto_izq
 625+ 9761 C9           3 ret
 626+ 9762
 627+ 9762              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9762              ;
 629+ 9762              ;	19/10/22
 630+ 9762              ;
 631+ 9762              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9762              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9762
 634+ 9762 3A 91 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9765 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9767 C9           	ret
 637+ 9768
 638+ 9768              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9768              ;
 640+ 9768              ;	19/10/22
 641+ 9768              ;
 642+ 9768              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9768              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9768
 645+ 9768 3A 91 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 976B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 976D C9           	ret
 648+ 976E
 649+ 976E              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 976E              ;
 651+ 976E              ;	24/7/22
 652+ 976E              ;
 653+ 976E              ;	Inc_CTRL_DESPLZ
 654+ 976E              ;
 655+ 976E              ;
 656+ 976E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 976E
 658+ 976E 21 93 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9771 3A B5 89     	ld a,(Vel_right)
 660+ 9774 A7           	and a
 661+ 9775 28 06        	jr z,1F
 662+ 9777 47           	ld b,a
 663+ 9778 34           3 inc (hl)
 664+ 9779 10 FD        	djnz 3B
 665+ 977B 18 01        	jr 2F
 666+ 977D 34           1 inc (hl)
 667+ 977E C9           2 ret
 668+ 977F
 669+ 977F              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 977F              ;
 671+ 977F              ;	5/2/23
 672+ 977F              ;
 673+ 977F              ;	Dec_CTRL_DESPLZ
 674+ 977F              ;
 675+ 977F              ;
 676+ 977F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 977F
 678+ 977F 21 93 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9782 3A B4 89     	ld a,(Vel_left)
 680+ 9785 A7           	and a
 681+ 9786 28 06        	jr z,1F
 682+ 9788 47           	ld b,a
 683+ 9789 35           3 dec (hl)
 684+ 978A 10 FD        	djnz 3B
 685+ 978C 18 01        	jr 2F
 686+ 978E 35           1 dec (hl)
 687+ 978F C9           2 ret
 688+ 9790
 689+ 9790              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9790
 691+ 9790 2A 8D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9793 01 1F 00     	ld bc,31
 693+ 9796 A7           	and a
 694+ 9797 ED 4A        	adc hl,bc
 695+ 9799 22 8D 89     	ld (Posicion_actual),hl
 696+ 979C 21 AD 89     	ld hl,Ctrl_0														; $xxx1
 697+ 979F CB C6        	set 0,(hl)
 698+ 97A1 C9           	ret
 699+ 97A2
 700+ 97A2              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 97A2
 702+ 97A2 2A 8D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 97A5 01 1F 00     	ld bc,31
 704+ 97A8 A7           	and a
 705+ 97A9 ED 42        	sbc hl,bc
 706+ 97AB 22 8D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 97AE 21 AD 89     	ld hl,Ctrl_0
 708+ 97B1 CB CE        	set 1,(hl)
 709+ 97B3 C9           	ret
 710+ 97B4
 711+ 97B4              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 97B4
 713+ 97B4 24           Reaparece_abajo inc h
 714+ 97B5 01 E0 17     	ld bc,$17e0
 715+ 97B8 A7           	and a
 716+ 97B9 ED 4A        	adc hl,bc
 717+ 97BB 22 8D 89     	ld (Posicion_actual),hl
 718+ 97BE 21 AD 89     	ld hl,Ctrl_0
 719+ 97C1 CB D6        	set 2,(hl)
 720+ 97C3 C9           	ret
 721+ 97C4
 722+ 97C4              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 97C4
 724+ 97C4 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 97C7 A7           	and a
 726+ 97C8 ED 42        	sbc hl,bc
 727+ 97CA 22 8D 89     	ld (Posicion_actual),hl
 728+ 97CD 21 AD 89     	ld hl,Ctrl_0
 729+ 97D0 CB DE        	set 3,(hl)
 730+ 97D2 C9           	ret
 731+ 97D3
 732+ 97D3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 97D3              ;
 734+ 97D3              ;	15/07/23
 735+ 97D3
 736+ 97D3              Reinicio
 737+ 97D3
 738+ 97D3              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 97D3
 740+ 97D3 AF           	xor a
 741+ 97D4 21 C4 89     	ld hl,Puntero_indice_mov_bucle
 742+ 97D7 CD F5 97     	call Limpia_contenido_hl
 743+ 97DA
 744+ 97DA 21 8D 89     	ld hl,Posicion_actual
 745+ 97DD CD F5 97     	call Limpia_contenido_hl
 746+ 97E0
 747+ 97E0 CD 3E 8C     	call Inicializa_Puntero_indice_mov
 748+ 97E3 CD C1 98     	call Inicia_Puntero_mov
 749+ 97E6
 750+ 97E6 21 C6 89     	ld hl,Incrementa_puntero
 751+ 97E9 06 05        	ld b,5
 752+ 97EB 77           1 ld (hl),a
 753+ 97EC 23           	inc hl
 754+ 97ED 10 FC        	djnz 1B
 755+ 97EF
 756+ 97EF 21 B2 89     	ld hl,Ctrl_2
 757+ 97F2 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 97F4
 759+ 97F4 C9           	ret
 760+ 97F5
 761+ 97F5 77           Limpia_contenido_hl	ld (hl),a
 762+ 97F6 23           	inc hl
 763+ 97F7 77           	ld (hl),a
 764+ 97F8 C9           	ret
 765+ 97F9
 766+ 97F9
# file closed: Direcciones.asm
1788  97F9              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 97F9              ; ----- ----- ----- ----- -----
   2+ 97F9              ;
   3+ 97F9              ;   28/12/23
   4+ 97F9
   5+ 97F9              Movimiento
   6+ 97F9
   7+ 97F9              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 97F9
   9+ 97F9 3A B2 89         ld a,(Ctrl_2)
  10+ 97FC CB 57            bit 2,a
  11+ 97FE 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9800
  13+ 9800 2A C2 89         ld hl,(Puntero_mov)
  14+ 9803 7E               ld a,(hl)
  15+ 9804
  16+ 9804              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9804
  18+ 9804              Inicia_desplazamiento.
  19+ 9804
  20+ 9804              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9804
  22+ 9804 CD F7 98         call Ajusta_velocidad_desplazamiento
  23+ 9807
  24+ 9807              ; Iniciamos (Repetimos_mov).
  25+ 9807
  26+ 9807 7E               ld a,(hl)
  27+ 9808 E6 0F            and $0f
  28+ 980A 32 C8 89         ld (Repetimos_desplazamiento),a
  29+ 980D 32 C9 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9810
  31+ 9810              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9810
  33+ 9810 23               inc hl
  34+ 9811 7E               ld a,(hl)
  35+ 9812 32 CB 89         ld (Cola_de_desplazamiento),a
  36+ 9815 2B               dec hl
  37+ 9816
  38+ 9816 21 B2 89         ld hl,Ctrl_2
  39+ 9819 CB D6            set 2,(hl)
  40+ 981B
  41+ 981B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 981B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 981B
  44+ 981B              Desplazamiento_iniciado
  45+ 981B
  46+ 981B CD CB 98         call Aplica_desplazamiento
  47+ 981E
  48+ 981E              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 981E
  50+ 981E 3A E9 89         ld a,(Ctrl_3)
  51+ 9821 CB 4F            bit 1,a
  52+ 9823 C0               ret nz
  53+ 9824
  54+ 9824 21 C8 89     3 ld hl,Repetimos_desplazamiento
  55+ 9827 35               dec (hl)
  56+ 9828 C0               ret nz
  57+ 9829
  58+ 9829              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9829              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9829              ; Analiza (Cola_de_desplazamiento).
  61+ 9829
  62+ 9829 3A CB 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 982C A7               and a
  64+ 982D CC 20 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9830 28 30            jr z,Reinicia_el_movimiento
  66+ 9832
  67+ 9832 FE FF            cp $ff
  68+ 9834 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9836
  70+ 9836 FE FE            cp $fe
  71+ 9838 CC A5 98         call z,Fijamos_bucle
  72+ 983B 28 25            jr z,Reinicia_el_movimiento
  73+ 983D
  74+ 983D FE FD            cp $fd
  75+ 983F 20 11            jr nz,1F
  76+ 9841
  77+ 9841              ; ---
  78+ 9841              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9841
  80+ 9841 3A B2 89         ld a,(Ctrl_2)
  81+ 9844 CB 5F            bit 3,a
  82+ 9846 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9848
  84+ 9848              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9848
  86+ 9848 21 B2 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 984B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 984D
  89+ 984D CD B6 98         call Inicia_Repetimos_movimiento
  90+ 9850 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9852              ; ---
  92+ 9852
  93+ 9852 FE 01        1 cp 1
  94+ 9854 CA 8F 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9857
  96+ 9857 3D               dec a
  97+ 9858 32 CB 89         ld (Cola_de_desplazamiento),a
  98+ 985B
  99+ 985B 3A C9 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 985E 32 C8 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9861              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9861 C9               ret
 103+ 9862
 104+ 9862              Reinicia_el_movimiento
 105+ 9862
 106+ 9862 3A B2 89         ld a,(Ctrl_2)
 107+ 9865 CB 5F            bit 3,a
 108+ 9867 28 1B            jr z,2F
 109+ 9869
 110+ 9869              ; (Cola_de_desplazamiento)="254".
 111+ 9869
 112+ 9869 21 CA 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 986C 35               dec (hl)
 114+ 986D 20 15            jr nz,2F
 115+ 986F
 116+ 986F              ; Fin de las repeticiones del último movimiento.
 117+ 986F
 118+ 986F 21 B2 89         ld hl,Ctrl_2
 119+ 9872 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9874
 121+ 9874 2A C2 89         ld hl,(Puntero_mov)
 122+ 9877 23               inc hl
 123+ 9878 23               inc hl
 124+ 9879 23               inc hl
 125+ 987A 22 C2 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 987D              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 987D 7E               ld a,(hl)
 128+ 987E 32 CB 89         ld (Cola_de_desplazamiento),a
 129+ 9881
 130+ 9881 C3 29 98         jp Cola
 131+ 9884
 132+ 9884 CD C1 98     2 call Inicia_Puntero_mov
 133+ 9887
 134+ 9887 21 B2 89         ld hl,Ctrl_2
 135+ 988A CB 96            res 2,(hl)
 136+ 988C
 137+ 988C C3 F9 97         jp Movimiento
 138+ 988F
 139+ 988F              Siguiente_desplazamiento
 140+ 988F
 141+ 988F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 988F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 988F
 144+ 988F 21 B2 89         ld hl,Ctrl_2
 145+ 9892 CB 96            res 2,(hl)
 146+ 9894
 147+ 9894 2A C2 89         ld hl,(Puntero_mov)
 148+ 9897 23               inc hl
 149+ 9898 23               inc hl
 150+ 9899 22 C2 89         ld (Puntero_mov),hl
 151+ 989C
 152+ 989C 7E               ld a,(hl)
 153+ 989D A7               and a
 154+ 989E CC 20 99         call z,Incrementa_Puntero_indice_mov
 155+ 98A1 CA 62 98         jp z,Reinicia_el_movimiento
 156+ 98A4
 157+ 98A4 C9               ret
 158+ 98A5
 159+ 98A5              ; Subrutinas -----------------------------------------
 160+ 98A5              ; ---------- --------- --------- ---------- ----------
 161+ 98A5              ;
 162+ 98A5              ;   24/07/23
 163+ 98A5              ;
 164+ 98A5              ;   Fijamos_bucle
 165+ 98A5              ;
 166+ 98A5              ;
 167+ 98A5
 168+ 98A5              Fijamos_bucle
 169+ 98A5
 170+ 98A5 3A C6 89         ld a,(Incrementa_puntero)
 171+ 98A8 3C               inc a
 172+ 98A9 32 C7 89         ld (Incrementa_puntero_backup),a
 173+ 98AC
 174+ 98AC CD 20 99         call Incrementa_Puntero_indice_mov
 175+ 98AF 2A C0 89         ld hl,(Puntero_indice_mov)
 176+ 98B2 22 C4 89         ld (Puntero_indice_mov_bucle),hl
 177+ 98B5 C9               ret
 178+ 98B6
 179+ 98B6              ; ---------- --------- --------- ---------- ----------
 180+ 98B6              ;
 181+ 98B6              ;   07/7/23
 182+ 98B6              ;
 183+ 98B6              ;   Inicia_Repetimos_movimiento
 184+ 98B6              ;
 185+ 98B6              ;
 186+ 98B6
 187+ 98B6              Inicia_Repetimos_movimiento
 188+ 98B6
 189+ 98B6              ; Iniciamos (Repetimos_movimiento).
 190+ 98B6
 191+ 98B6 DD 2A C2 89      ld ix,(Puntero_mov)
 192+ 98BA DD 7E 02         ld a,(ix+2)
 193+ 98BD 32 CA 89         ld (Repetimos_movimiento),a
 194+ 98C0
 195+ 98C0 C9               ret
 196+ 98C1
 197+ 98C1              ; ---------- --------- --------- ---------- ----------
 198+ 98C1              ;
 199+ 98C1              ;   26/6/23
 200+ 98C1              ;
 201+ 98C1              ;   Inicia_Puntero_mov
 202+ 98C1              ;
 203+ 98C1              ;
 204+ 98C1
 205+ 98C1 2A C0 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 98C4 CD 7B 8B         call Extrae_address
 207+ 98C7 22 C2 89         ld (Puntero_mov),hl
 208+ 98CA C9               ret
 209+ 98CB
 210+ 98CB              ; ---------- --------- --------- ---------- ----------
 211+ 98CB              ;
 212+ 98CB              ;   27/06/23
 213+ 98CB              ;
 214+ 98CB              ;   Aplica_movimiento.
 215+ 98CB
 216+ 98CB              Aplica_desplazamiento
 217+ 98CB
 218+ 98CB              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98CB
 220+ 98CB 2A C2 89         ld hl, (Puntero_mov)
 221+ 98CE
 222+ 98CE 7E               ld a,(hl)
 223+ 98CF E6 F0            and $f0
 224+ 98D1 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 98D2
 226+ 98D2 CB 7E            bit 7,(hl)
 227+ 98D4 28 03            jr z,1F
 228+ 98D6 CD E0 94         call Mov_up
 229+ 98D9 2A C2 89     1 ld hl, (Puntero_mov)
 230+ 98DC CB 76            bit 6,(hl)
 231+ 98DE 28 03            jr z,2F
 232+ 98E0 CD A7 94         call Mov_down
 233+ 98E3
 234+ 98E3              ; Se ha aplicado reinicio ???
 235+ 98E3              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 98E3
 237+ 98E3              ;    ld a,(Ctrl_3)
 238+ 98E3              ;    bit 1,a
 239+ 98E3              ;    ret nz
 240+ 98E3
 241+ 98E3 2A C2 89     2 ld hl, (Puntero_mov)
 242+ 98E6 CB 6E            bit 5,(hl)
 243+ 98E8 28 03            jr z,3F
 244+ 98EA CD 46 96         call Mov_left
 245+ 98ED 2A C2 89     3 ld hl, (Puntero_mov)
 246+ 98F0 CB 66            bit 4,(hl)
 247+ 98F2 C8               ret z
 248+ 98F3 CD 23 95         call Mov_right
 249+ 98F6 C9               ret
 250+ 98F7
 251+ 98F7              ; ---------- --------- --------- ---------- ----------
 252+ 98F7              ;
 253+ 98F7              ;   26/06/23
 254+ 98F7              ;
 255+ 98F7              ;   Ajusta_velocidad_desplazamiento.
 256+ 98F7
 257+ 98F7              Ajusta_velocidad_desplazamiento
 258+ 98F7
 259+ 98F7              ; 1er byte de la cadena de movimiento.
 260+ 98F7              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 98F7
 262+ 98F7 CD 15 99         call Extrae_nibble_alto
 263+ 98FA
 264+ 98FA 32 B6 89         ld (Vel_up),a
 265+ 98FD 79               ld a,c
 266+ 98FE E6 0F            and $0f
 267+ 9900 32 B7 89         ld (Vel_down),a
 268+ 9903
 269+ 9903              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9903              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9903
 272+ 9903 23               inc hl
 273+ 9904 CD 15 99         call Extrae_nibble_alto
 274+ 9907
 275+ 9907 32 B4 89         ld (Vel_left),a
 276+ 990A 79               ld a,c
 277+ 990B E6 0F            and $0f
 278+ 990D 32 B5 89         ld (Vel_right),a
 279+ 9910
 280+ 9910              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9910
 282+ 9910 23               inc hl
 283+ 9911 22 C2 89         ld (Puntero_mov),hl
 284+ 9914 C9               ret
 285+ 9915
 286+ 9915 06 04        Extrae_nibble_alto ld b,4
 287+ 9917 7E               ld a,(hl)
 288+ 9918 4F               ld c,a
 289+ 9919 E6 F0            and $f0
 290+ 991B CB 3F        1 srl a
 291+ 991D 10 FC            djnz 1B
 292+ 991F C9               ret
 293+ 9920
 294+ 9920              ; ---------- --------- --------- ---------- ----------
 295+ 9920              ;
 296+ 9920              ;   5/7/23
 297+ 9920              ;
 298+ 9920              ;   Incrementa_Puntero_indice_mov
 299+ 9920
 300+ 9920              Incrementa_Puntero_indice_mov
 301+ 9920
 302+ 9920 21 C6 89         ld hl,Incrementa_puntero
 303+ 9923 34               inc (hl)
 304+ 9924
 305+ 9924 2A C0 89         ld hl,(Puntero_indice_mov)
 306+ 9927 01 02 00         ld bc,2
 307+ 992A A7               and a
 308+ 992B 09               add hl,bc
 309+ 992C 22 C0 89         ld (Puntero_indice_mov),hl
 310+ 992F
 311+ 992F 7E               ld a,(hl)
 312+ 9930 A7               and a
 313+ 9931
 314+ 9931              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9931
 316+ 9931              ;    jr z,$
 317+ 9931
 318+ 9931              ;! Reinicia el Patrón de movimiento.
 319+ 9931
 320+ 9931 CC 36 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 9934
 322+ 9934 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9935
 324+ 9935 C9               ret
 325+ 9936
 326+ 9936              ; ---------- --------- --------- ---------- ----------
 327+ 9936              ;
 328+ 9936              ;   15/01/24
 329+ 9936              ;
 330+ 9936              ;   Inicializa_Puntero_indice_mov
 331+ 9936
 332+ 9936              Inicializa_Puntero_indice_mov_2
 333+ 9936
 334+ 9936              ; Existe etiqueta de bucle principal???
 335+ 9936
 336+ 9936 2A C4 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9939 24               inc h
 338+ 993A 25               dec h
 339+ 993B 28 05            jr z,2F
 340+ 993D
 341+ 993D 22 C0 89         ld (Puntero_indice_mov),hl
 342+ 9940 18 14            jr 3F
 343+ 9942
 344+ 9942              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9942
 346+ 9942 3A C6 89     2 ld a,(Incrementa_puntero)
 347+ 9945 47               ld b,a
 348+ 9946
 349+ 9946 2A C0 89         ld hl,(Puntero_indice_mov)
 350+ 9949 2B           1 dec hl
 351+ 994A 2B               dec hl
 352+ 994B 10 FC            djnz 1B
 353+ 994D 22 C0 89         ld (Puntero_indice_mov),hl
 354+ 9950
 355+ 9950 AF               xor a
 356+ 9951 32 C6 89         ld (Incrementa_puntero),a
 357+ 9954 18 06            jr 4F
 358+ 9956
 359+ 9956 3A C7 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9959 32 C6 89         ld (Incrementa_puntero),a
 361+ 995C C9           4 ret
 362+ 995D
 363+ 995D              ; ----------------------------------------------------------------------
 364+ 995D              ;
 365+ 995D              ;   30/01/24
 366+ 995D              ;
 367+ 995D              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 995D
 369+ 995D 3A 8A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9960 CD 8F 8D         call Calcula_salto_en_BC
 371+ 9963 21 B8 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9966 A7               and a
 373+ 9967 ED 4A            adc hl,bc
 374+ 9969 C9               ret
 375+ 996A
 376+ 996A              ; ----------------------------------------------------------------------
 377+ 996A              ;
 378+ 996A              ;   30/01/24
 379+ 996A              ;
 380+ 996A              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 996A              ;
 382+ 996A              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 996A
 384+ 996A 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 996B 23               inc hl
 386+ 996C 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 996D 69               ld l,c
 388+ 996E 60               ld h,b
 389+ 996F 22 AB 89         ld (Contador_de_mov_masticados),hl
 390+ 9972 C9               ret
 391+ 9973
# file closed: Movimiento.asm
1789  9973              ;	include "Disparo.asm"
1790  9973              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9973              ; Relojes y temporizaciones.
   2+ 9973
   3+ 9973              ; ------------------------------------------------------
   4+ 9973              ;
   5+ 9973              ;	16/7/23
   6+ 9973              ;
   7+ 9973              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9973              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9973              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9973              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9973              ;
  12+ 9973              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9973              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9973
  15+ 9973              ; Disparo_entidad db 1
  16+ 9973              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9973              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9973
  19+ 9973              Habilita_disparos
  20+ 9973
  21+ 9973 7E           	ld a,(hl)
  22+ 9974 A7           	and a
  23+ 9975 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9976
  25+ 9976 EB           	ex de,hl
  26+ 9977
  27+ 9977 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9978 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9979
  30+ 9979              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9979
  32+ 9979 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 997A 7E           	ld a,(hl)
  34+ 997B 23           	inc hl
  35+ 997C 77           	ld (hl),a
  36+ 997D
  37+ 997D EB           	ex de,hl						; Habilitamos disparo.
  38+ 997E 3E 01        	ld a,1
  39+ 9980 77           	ld (hl),a
  40+ 9981 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1791  9982              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9982              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9982              ;
   3+ 9982              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9982              ;
   5+ 9982              ; *****************************************************************************************************************************************************************************************
   6+ 9982              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9982
   8+ 9982 7C           calcula_tercio ld a,h
   9+ 9983 E6 18        	and $18
  10+ 9985 CB 2F        	sra a
  11+ 9987 CB 2F        	sra a
  12+ 9989 CB 2F        	sra a
  13+ 998B C9           	ret
  14+ 998C
# file closed: calcula_tercio.asm
1792  998C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 998C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 998C              ;
   3+ 998C              ;
   4+ 998C              ;	CLS.
   5+ 998C              ;
   6+ 998C              ;	Limpia la pantalla y define sus atributos.
   7+ 998C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 998C              ;
   9+ 998C              ;	COLORES: 0 ..... NEGRO
  10+ 998C              ;    		 1 ..... AZUL
  11+ 998C              ; 			 2 ..... ROJO
  12+ 998C              ;			 3 ..... MAGENTA
  13+ 998C              ; 			 4 ..... VERDE
  14+ 998C              ; 			 5 ..... CIAN
  15+ 998C              ;			 6 ..... AMARILLO
  16+ 998C              ; 			 7 ..... BLANCO
  17+ 998C              ;
  18+ 998C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 998C              ;
  20+ 998C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 998C
  22+ 998C
  23+ 998C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 998F 11 01 40     	LD DE,$4001
  25+ 9992 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9995 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9997 ED B0        	LDIR
  28+ 9999 01 FF 02     	LD BC,767
  29+ 999C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 999D ED B0        	LDIR
  31+ 999F C9           	ret
  32+ 99A0
# file closed: Cls.asm
1793  99A0              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 99A0              ; ------------------------------------------------------------------------
   2+ 99A0              ;
   3+ 99A0              ;	30/1/24
   4+ 99A0              ;
   5+ 99A0              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 99A0              ;	Fila superior "0", Columna izquierda "0".
   7+ 99A0              ;
   8+ 99A0              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 99A0              ;
  10+ 99A0              ;	Modifica: A,BC y DE.
  11+ 99A0
  12+ 99A0 7D           Genera_coordenadas ld a,l
  13+ 99A1 E6 1F        	and $1f
  14+ 99A3 32 91 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 99A6
  16+ 99A6 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 99A7 FE 40        	cp $40
  18+ 99A9 38 1C        	jr c,4F
  19+ 99AB
  20+ 99AB CD 82 99     	call calcula_tercio
  21+ 99AE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 99AF
  23+ 99AF 1E 00        	ld e,0
  24+ 99B1 7D           	ld a,l
  25+ 99B2 E6 E0        	and $e0
  26+ 99B4 28 01        	jr z,1F
  27+ 99B6 04           	inc b
  28+ 99B7
  29+ 99B7 04           1 inc b
  30+ 99B8 05           	dec b
  31+ 99B9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 99BB              ;														; _ , salimos.
  33+ 99BB 1C           3 inc e
  34+ 99BC D6 20        	sub 32
  35+ 99BE 20 FB        	jr nz,3B
  36+ 99C0 10 F5        	djnz 1B
  37+ 99C2
  38+ 99C2 7B           2 ld a,e
  39+ 99C3 32 92 89     	ld (Coordenada_y),a
  40+ 99C6 C9           	ret
  41+ 99C7
  42+ 99C7 AF           4 xor a
  43+ 99C8 32 92 89     	ld (Coordenada_y),a
  44+ 99CB C9           	ret
  45+ 99CC
  46+ 99CC              ; ------------------------------------------------------------------------
  47+ 99CC              ;	28/05/23
  48+ 99CC              ;
  49+ 99CC              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 99CC              ;	Fila superior "0", Columna izquierda "0".
  51+ 99CC              ;
  52+ 99CC              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 99CC              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 99CC              ;
  55+ 99CC              ;		DE="$120d"
  56+ 99CC              ;
  57+ 99CC              ;		D, (Coordenada_X), Columnas, $12
  58+ 99CC              ;		E, (Coordenada_y), Filas, $0d
  59+ 99CC              ;
  60+ 99CC              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 99CC
  62+ 99CC              ;	Modifica: A,BC y DE.
  63+ 99CC
  64+ 99CC
  65+ 99CC              Genera_coordenadas_disparo
  66+ 99CC
  67+ 99CC              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 99CC
  69+ 99CC 7D           	ld a,l
  70+ 99CD E6 1F        	and $1f
  71+ 99CF 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 99D0 CD 82 99     	call calcula_tercio
  73+ 99D3 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 99D4 1E 00        	ld e,0
  75+ 99D6 7D           	ld a,l
  76+ 99D7 E6 E0        	and $e0
  77+ 99D9 28 01        	jr z,1F
  78+ 99DB 04           	inc b
  79+ 99DC 1C           1 inc e
  80+ 99DD D6 20        	sub 32
  81+ 99DF 20 FB        	jr nz,1B
  82+ 99E1 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 99E3 C9           	ret
  84+ 99E4
# file closed: Genera_coordenadas.asm
1794  99E4              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 99E4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 99E4              ;
   3+ 99E4              ;	11/03/24
   4+ 99E4              ;
   5+ 99E4              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 99E4              ;   DE contiene Puntero_objeto.
   7+ 99E4              ;   IX contiene el Puntero de impresión.
   8+ 99E4
   9+ 99E4              Genera_datos_de_impresion
  10+ 99E4
  11+ 99E4 ED 73 DD 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 99E8 31 A9 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ 99EB DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ 99ED
  15+ 99ED 2A E7 89         ld hl,(Scanlines_album_SP)
  16+ 99F0
  17+ 99F0 3E 05            ld a,5
  18+ 99F2 85               add l
  19+ 99F3 6F               ld l,a
  20+ 99F4
  21+ 99F4 F9               ld sp,hl
  22+ 99F5 22 E7 89         ld (Scanlines_album_SP),hl
  23+ 99F8
  24+ 99F8 21 00 00         ld hl,0
  25+ 99FB
  26+ 99FB DD E5            push ix
  27+ 99FD 3B               dec sp
  28+ 99FE ED 7A            adc hl,sp
  29+ 9A00 D5               push de
  30+ 9A01
  31+ 9A01              ; Recuperamos SP.
  32+ 9A01
  33+ 9A01 ED 7B DD 89      ld sp,(Stack)
  34+ 9A05
  35+ 9A05 E5               push hl
  36+ 9A06 F1               pop af
  37+ 9A07 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ 9A08
  39+ 9A08              ; Tenemos el encabezado listo.
  40+ 9A08              ; Preparamos registros para generar los scanlines.
  41+ 9A08
  42+ 9A08 DD E5            push ix
  43+ 9A0A E1               pop hl                                          ; 1er scanline en HL.
  44+ 9A0B
  45+ 9A0B ED 5B E7 89      ld de,(Scanlines_album_SP)
  46+ 9A0F
  47+ 9A0F              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ 9A0F              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ 9A0F
  50+ 9A0F 7C               ld a,h
  51+ 9A10 FE 50            cp $50
  52+ 9A12 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ 9A14
  54+ 9A14 20 05            jr nz,2F
  55+ 9A16
  56+ 9A16 7D               ld a,l
  57+ 9A17 FE E0            cp $e0
  58+ 9A19 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ 9A1B
  60+ 9A1B 7D           2 ld a,l
  61+ 9A1C FE C0            cp $c0
  62+ 9A1E D2 B0 9A         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ 9A21
  64+ 9A21              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ 9A21
  66+ 9A21 CD 09 91         call NextScan
  67+ 9A24 EB               ex de,hl
  68+ 9A25
  69+ 9A25 73               ld (hl),e
  70+ 9A26 2C               inc l
  71+ 9A27 72               ld (hl),d
  72+ 9A28 2C               inc l
  73+ 9A29
  74+ 9A29 EB               ex de,hl
  75+ 9A2A
  76+ 9A2A CD 09 91         call NextScan
  77+ 9A2D EB               ex de,hl
  78+ 9A2E
  79+ 9A2E 73               ld (hl),e
  80+ 9A2F 2C               inc l
  81+ 9A30 72               ld (hl),d
  82+ 9A31 2C               inc l
  83+ 9A32
  84+ 9A32 EB               ex de,hl
  85+ 9A33
  86+ 9A33 CD 09 91         call NextScan
  87+ 9A36 EB               ex de,hl
  88+ 9A37
  89+ 9A37 73               ld (hl),e
  90+ 9A38 2C               inc l
  91+ 9A39 72               ld (hl),d
  92+ 9A3A 2C               inc l
  93+ 9A3B
  94+ 9A3B EB               ex de,hl
  95+ 9A3C
  96+ 9A3C CD 09 91         call NextScan
  97+ 9A3F EB               ex de,hl
  98+ 9A40
  99+ 9A40 73               ld (hl),e
 100+ 9A41 2C               inc l
 101+ 9A42 72               ld (hl),d
 102+ 9A43 2C               inc l
 103+ 9A44
 104+ 9A44 EB               ex de,hl
 105+ 9A45
 106+ 9A45 CD 09 91         call NextScan
 107+ 9A48 EB               ex de,hl
 108+ 9A49
 109+ 9A49 73               ld (hl),e
 110+ 9A4A 2C               inc l
 111+ 9A4B 72               ld (hl),d
 112+ 9A4C 2C               inc l
 113+ 9A4D
 114+ 9A4D EB               ex de,hl
 115+ 9A4E
 116+ 9A4E CD 09 91         call NextScan
 117+ 9A51 EB               ex de,hl
 118+ 9A52
 119+ 9A52 73               ld (hl),e
 120+ 9A53 2C               inc l
 121+ 9A54 72               ld (hl),d
 122+ 9A55 2C               inc l
 123+ 9A56
 124+ 9A56 EB               ex de,hl
 125+ 9A57
 126+ 9A57 CD 09 91         call NextScan
 127+ 9A5A EB               ex de,hl
 128+ 9A5B
 129+ 9A5B 73               ld (hl),e
 130+ 9A5C 2C               inc l
 131+ 9A5D 72               ld (hl),d
 132+ 9A5E 2C               inc l
 133+ 9A5F
 134+ 9A5F EB               ex de,hl
 135+ 9A60
 136+ 9A60 CD 09 91         call NextScan
 137+ 9A63 EB               ex de,hl
 138+ 9A64
 139+ 9A64 73               ld (hl),e
 140+ 9A65 2C               inc l
 141+ 9A66 72               ld (hl),d
 142+ 9A67 2C               inc l
 143+ 9A68
 144+ 9A68 EB               ex de,hl
 145+ 9A69
 146+ 9A69 CD 09 91         call NextScan
 147+ 9A6C EB               ex de,hl
 148+ 9A6D
 149+ 9A6D 73               ld (hl),e
 150+ 9A6E 2C               inc l
 151+ 9A6F 72               ld (hl),d
 152+ 9A70 2C               inc l
 153+ 9A71
 154+ 9A71 EB               ex de,hl
 155+ 9A72
 156+ 9A72 CD 09 91         call NextScan
 157+ 9A75 EB               ex de,hl
 158+ 9A76
 159+ 9A76 73               ld (hl),e
 160+ 9A77 2C               inc l
 161+ 9A78 72               ld (hl),d
 162+ 9A79 2C               inc l
 163+ 9A7A
 164+ 9A7A EB               ex de,hl
 165+ 9A7B
 166+ 9A7B CD 09 91         call NextScan
 167+ 9A7E EB               ex de,hl
 168+ 9A7F
 169+ 9A7F 73               ld (hl),e
 170+ 9A80 2C               inc l
 171+ 9A81 72               ld (hl),d
 172+ 9A82 2C               inc l
 173+ 9A83
 174+ 9A83 EB               ex de,hl
 175+ 9A84
 176+ 9A84 CD 09 91         call NextScan
 177+ 9A87 EB               ex de,hl
 178+ 9A88
 179+ 9A88 73               ld (hl),e
 180+ 9A89 2C               inc l
 181+ 9A8A 72               ld (hl),d
 182+ 9A8B 2C               inc l
 183+ 9A8C
 184+ 9A8C EB               ex de,hl
 185+ 9A8D
 186+ 9A8D CD 09 91         call NextScan
 187+ 9A90 EB               ex de,hl
 188+ 9A91
 189+ 9A91 73               ld (hl),e
 190+ 9A92 2C               inc l
 191+ 9A93 72               ld (hl),d
 192+ 9A94 2C               inc l
 193+ 9A95
 194+ 9A95 EB               ex de,hl
 195+ 9A96
 196+ 9A96 CD 09 91         call NextScan
 197+ 9A99 EB               ex de,hl
 198+ 9A9A
 199+ 9A9A 73               ld (hl),e
 200+ 9A9B 2C               inc l
 201+ 9A9C 72               ld (hl),d
 202+ 9A9D 2C               inc l
 203+ 9A9E
 204+ 9A9E EB               ex de,hl
 205+ 9A9F
 206+ 9A9F CD 09 91         call NextScan
 207+ 9AA2 EB               ex de,hl
 208+ 9AA3
 209+ 9AA3 73               ld (hl),e
 210+ 9AA4 2C               inc l
 211+ 9AA5 72               ld (hl),d
 212+ 9AA6 2C               inc l
 213+ 9AA7
 214+ 9AA7              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ 9AA7
 216+ 9AA7 22 E7 89         ld (Scanlines_album_SP),hl
 217+ 9AAA
 218+ 9AAA              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ 9AAA
 220+ 9AAA 08               ex af,af
 221+ 9AAB
 222+ 9AAB F5               push af
 223+ 9AAC E1               pop hl
 224+ 9AAD
 225+ 9AAD 36 10            ld (hl),16
 226+ 9AAF
 227+ 9AAF C9               ret
 228+ 9AB0
 229+ 9AB0              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ 9AB0
 231+ 9AB0              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ 9AB0
 233+ 9AB0 3E 57            ld a,$57
 234+ 9AB2 94               sub h
 235+ 9AB3 20 04            jr nz,4F
 236+ 9AB5
 237+ 9AB5 0E 01            ld c,1
 238+ 9AB7 18 1B            jr 5F
 239+ 9AB9
 240+ 9AB9 47           4 ld b,a
 241+ 9ABA
 242+ 9ABA 3E DF            ld a,$df
 243+ 9ABC BD               cp l
 244+ 9ABD 38 04            jr c,1F
 245+ 9ABF
 246+ 9ABF 3E 08            ld a,8
 247+ 9AC1 80               add b
 248+ 9AC2 47               ld b,a
 249+ 9AC3
 250+ 9AC3              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 251+ 9AC3              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 252+ 9AC3
 253+ 9AC3 48           1 ld c,b
 254+ 9AC4 0C               inc c
 255+ 9AC5
 256+ 9AC5 CD 09 91     3 call NextScan
 257+ 9AC8 EB               ex de,hl
 258+ 9AC9
 259+ 9AC9 73               ld (hl),e
 260+ 9ACA 2C               inc l
 261+ 9ACB 72               ld (hl),d
 262+ 9ACC 2C               inc l
 263+ 9ACD
 264+ 9ACD EB               ex de,hl
 265+ 9ACE
 266+ 9ACE 10 F5            djnz 3B
 267+ 9AD0
 268+ 9AD0 ED 53 E7 89      ld (Scanlines_album_SP),de
 269+ 9AD4
 270+ 9AD4 08           5 ex af,af
 271+ 9AD5 F5               push af
 272+ 9AD6 E1               pop hl
 273+ 9AD7
 274+ 9AD7 71               ld (hl),c
 275+ 9AD8
 276+ 9AD8 C9               ret
 277+ 9AD9
 278+ 9AD9              ; -----------------------------------------------------------------------------
 279+ 9AD9              ;
 280+ 9AD9              ;   21/11/23
 281+ 9AD9
 282+ 9AD9              Limpia_y_reinicia_Scanlines_album
 283+ 9AD9
 284+ 9AD9              ;   Limpia Scanlines_album.
 285+ 9AD9
 286+ 9AD9 2A E7 89         ld hl,(Scanlines_album_SP)
 287+ 9ADC 7D               ld a,l
 288+ 9ADD A7               and a
 289+ 9ADE C8               ret z   ;   Salimos si el álbum está vacío.
 290+ 9ADF
 291+ 9ADF 47               ld b,a
 292+ 9AE0 04               inc b
 293+ 9AE1
 294+ 9AE1 36 00        1 ld (hl),0
 295+ 9AE3 2D               dec l
 296+ 9AE4 10 FB            djnz 1B
 297+ 9AE6
 298+ 9AE6              ;   Reinicializa (Scanlines_album_SP).
 299+ 9AE6
 300+ 9AE6 21 00 80         ld hl,Scanlines_album
 301+ 9AE9 22 E7 89         ld (Scanlines_album_SP),hl
 302+ 9AEC
 303+ 9AEC C9               ret
 304+ 9AED
 305+ 9AED              ; -----------------------------------------------------------------------------
 306+ 9AED              ;
 307+ 9AED              ;   11/03/24
 308+ 9AED              ;
 309+ 9AED
 310+ 9AED              Pinta_Sprites
 311+ 9AED
 312+ 9AED 2A E7 89         ld hl,(Scanlines_album_SP)
 313+ 9AF0 CD 7B 8B         call Extrae_address
 314+ 9AF3
 315+ 9AF3 24               inc h
 316+ 9AF4 25               dec h
 317+ 9AF5 C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
 318+ 9AF6
 319+ 9AF6 ED 73 DD 89      ld (Stack),sp
 320+ 9AFA
 321+ 9AFA EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
 322+ 9AFB              ;                                       ; DE se encuentra en los datos del sprite.
 323+ 9AFB 2C               inc l
 324+ 9AFC 2C               inc l
 325+ 9AFD
 326+ 9AFD 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
 327+ 9AFE
 328+ 9AFE 2C               inc l
 329+ 9AFF F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
 330+ 9B00
 331+ 9B00              ;   Seleccionamos rutina de impresión:
 332+ 9B00
 333+ 9B00 3E 10            ld a,16
 334+ 9B02 B8               cp b
 335+ 9B03 C2 01 9C         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 336+ 9B06
 337+ 9B06              ;   Rutinas:
 338+ 9B06
 339+ 9B06              Pinta_rapido    ;   1520 t/states.
 340+ 9B06
 341+ 9B06 E1               pop hl
 342+ 9B07
 343+ 9B07 1A               ld a,(de)
 344+ 9B08 AE               xor (hl)
 345+ 9B09 77               ld (hl),a
 346+ 9B0A 2C               inc l
 347+ 9B0B 1C               inc e
 348+ 9B0C 1A               ld a,(de)
 349+ 9B0D AE               xor (hl)
 350+ 9B0E 77               ld (hl),a
 351+ 9B0F 2C               inc l
 352+ 9B10 1C               inc e
 353+ 9B11 1A               ld a,(de)
 354+ 9B12 AE               xor (hl)
 355+ 9B13 77               ld (hl),a
 356+ 9B14 13               inc de
 357+ 9B15
 358+ 9B15 E1               pop hl
 359+ 9B16
 360+ 9B16 1A               ld a,(de)
 361+ 9B17 AE               xor (hl)
 362+ 9B18 77               ld (hl),a
 363+ 9B19 2C               inc l
 364+ 9B1A 1C               inc e
 365+ 9B1B 1A               ld a,(de)
 366+ 9B1C AE               xor (hl)
 367+ 9B1D 77               ld (hl),a
 368+ 9B1E 2C               inc l
 369+ 9B1F 1C               inc e
 370+ 9B20 1A               ld a,(de)
 371+ 9B21 AE               xor (hl)
 372+ 9B22 77               ld (hl),a
 373+ 9B23 13               inc de
 374+ 9B24
 375+ 9B24 E1               pop hl
 376+ 9B25
 377+ 9B25 1A               ld a,(de)
 378+ 9B26 AE               xor (hl)
 379+ 9B27 77               ld (hl),a
 380+ 9B28 2C               inc l
 381+ 9B29 1C               inc e
 382+ 9B2A 1A               ld a,(de)
 383+ 9B2B AE               xor (hl)
 384+ 9B2C 77               ld (hl),a
 385+ 9B2D 2C               inc l
 386+ 9B2E 1C               inc e
 387+ 9B2F 1A               ld a,(de)
 388+ 9B30 AE               xor (hl)
 389+ 9B31 77               ld (hl),a
 390+ 9B32 13               inc de
 391+ 9B33
 392+ 9B33 E1               pop hl
 393+ 9B34
 394+ 9B34 1A               ld a,(de)
 395+ 9B35 AE               xor (hl)
 396+ 9B36 77               ld (hl),a
 397+ 9B37 2C               inc l
 398+ 9B38 1C               inc e
 399+ 9B39 1A               ld a,(de)
 400+ 9B3A AE               xor (hl)
 401+ 9B3B 77               ld (hl),a
 402+ 9B3C 2C               inc l
 403+ 9B3D 1C               inc e
 404+ 9B3E 1A               ld a,(de)
 405+ 9B3F AE               xor (hl)
 406+ 9B40 77               ld (hl),a
 407+ 9B41 13               inc de
 408+ 9B42
 409+ 9B42 E1               pop hl
 410+ 9B43
 411+ 9B43 1A               ld a,(de)
 412+ 9B44 AE               xor (hl)
 413+ 9B45 77               ld (hl),a
 414+ 9B46 2C               inc l
 415+ 9B47 1C               inc e
 416+ 9B48 1A               ld a,(de)
 417+ 9B49 AE               xor (hl)
 418+ 9B4A 77               ld (hl),a
 419+ 9B4B 2C               inc l
 420+ 9B4C 1C               inc e
 421+ 9B4D 1A               ld a,(de)
 422+ 9B4E AE               xor (hl)
 423+ 9B4F 77               ld (hl),a
 424+ 9B50 13               inc de
 425+ 9B51
 426+ 9B51 E1               pop hl
 427+ 9B52
 428+ 9B52 1A               ld a,(de)
 429+ 9B53 AE               xor (hl)
 430+ 9B54 77               ld (hl),a
 431+ 9B55 2C               inc l
 432+ 9B56 1C               inc e
 433+ 9B57 1A               ld a,(de)
 434+ 9B58 AE               xor (hl)
 435+ 9B59 77               ld (hl),a
 436+ 9B5A 2C               inc l
 437+ 9B5B 1C               inc e
 438+ 9B5C 1A               ld a,(de)
 439+ 9B5D AE               xor (hl)
 440+ 9B5E 77               ld (hl),a
 441+ 9B5F 13               inc de
 442+ 9B60
 443+ 9B60 E1               pop hl
 444+ 9B61
 445+ 9B61 1A               ld a,(de)
 446+ 9B62 AE               xor (hl)
 447+ 9B63 77               ld (hl),a
 448+ 9B64 2C               inc l
 449+ 9B65 1C               inc e
 450+ 9B66 1A               ld a,(de)
 451+ 9B67 AE               xor (hl)
 452+ 9B68 77               ld (hl),a
 453+ 9B69 2C               inc l
 454+ 9B6A 1C               inc e
 455+ 9B6B 1A               ld a,(de)
 456+ 9B6C AE               xor (hl)
 457+ 9B6D 77               ld (hl),a
 458+ 9B6E 13               inc de
 459+ 9B6F
 460+ 9B6F E1               pop hl
 461+ 9B70
 462+ 9B70 1A               ld a,(de)
 463+ 9B71 AE               xor (hl)
 464+ 9B72 77               ld (hl),a
 465+ 9B73 2C               inc l
 466+ 9B74 1C               inc e
 467+ 9B75 1A               ld a,(de)
 468+ 9B76 AE               xor (hl)
 469+ 9B77 77               ld (hl),a
 470+ 9B78 2C               inc l
 471+ 9B79 1C               inc e
 472+ 9B7A 1A               ld a,(de)
 473+ 9B7B AE               xor (hl)
 474+ 9B7C 77               ld (hl),a
 475+ 9B7D 13               inc de
 476+ 9B7E
 477+ 9B7E E1               pop hl
 478+ 9B7F
 479+ 9B7F 1A               ld a,(de)
 480+ 9B80 AE               xor (hl)
 481+ 9B81 77               ld (hl),a
 482+ 9B82 2C               inc l
 483+ 9B83 1C               inc e
 484+ 9B84 1A               ld a,(de)
 485+ 9B85 AE               xor (hl)
 486+ 9B86 77               ld (hl),a
 487+ 9B87 2C               inc l
 488+ 9B88 1C               inc e
 489+ 9B89 1A               ld a,(de)
 490+ 9B8A AE               xor (hl)
 491+ 9B8B 77               ld (hl),a
 492+ 9B8C 13               inc de
 493+ 9B8D
 494+ 9B8D E1               pop hl
 495+ 9B8E
 496+ 9B8E 1A               ld a,(de)
 497+ 9B8F AE               xor (hl)
 498+ 9B90 77               ld (hl),a
 499+ 9B91 2C               inc l
 500+ 9B92 1C               inc e
 501+ 9B93 1A               ld a,(de)
 502+ 9B94 AE               xor (hl)
 503+ 9B95 77               ld (hl),a
 504+ 9B96 2C               inc l
 505+ 9B97 1C               inc e
 506+ 9B98 1A               ld a,(de)
 507+ 9B99 AE               xor (hl)
 508+ 9B9A 77               ld (hl),a
 509+ 9B9B 13               inc de
 510+ 9B9C
 511+ 9B9C E1               pop hl
 512+ 9B9D
 513+ 9B9D 1A               ld a,(de)
 514+ 9B9E AE               xor (hl)
 515+ 9B9F 77               ld (hl),a
 516+ 9BA0 2C               inc l
 517+ 9BA1 1C               inc e
 518+ 9BA2 1A               ld a,(de)
 519+ 9BA3 AE               xor (hl)
 520+ 9BA4 77               ld (hl),a
 521+ 9BA5 2C               inc l
 522+ 9BA6 1C               inc e
 523+ 9BA7 1A               ld a,(de)
 524+ 9BA8 AE               xor (hl)
 525+ 9BA9 77               ld (hl),a
 526+ 9BAA 13               inc de
 527+ 9BAB
 528+ 9BAB E1               pop hl
 529+ 9BAC
 530+ 9BAC 1A               ld a,(de)
 531+ 9BAD AE               xor (hl)
 532+ 9BAE 77               ld (hl),a
 533+ 9BAF 2C               inc l
 534+ 9BB0 1C               inc e
 535+ 9BB1 1A               ld a,(de)
 536+ 9BB2 AE               xor (hl)
 537+ 9BB3 77               ld (hl),a
 538+ 9BB4 2C               inc l
 539+ 9BB5 1C               inc e
 540+ 9BB6 1A               ld a,(de)
 541+ 9BB7 AE               xor (hl)
 542+ 9BB8 77               ld (hl),a
 543+ 9BB9 13               inc de
 544+ 9BBA
 545+ 9BBA E1               pop hl
 546+ 9BBB
 547+ 9BBB 1A               ld a,(de)
 548+ 9BBC AE               xor (hl)
 549+ 9BBD 77               ld (hl),a
 550+ 9BBE 2C               inc l
 551+ 9BBF 1C               inc e
 552+ 9BC0 1A               ld a,(de)
 553+ 9BC1 AE               xor (hl)
 554+ 9BC2 77               ld (hl),a
 555+ 9BC3 2C               inc l
 556+ 9BC4 1C               inc e
 557+ 9BC5 1A               ld a,(de)
 558+ 9BC6 AE               xor (hl)
 559+ 9BC7 77               ld (hl),a
 560+ 9BC8 13               inc de
 561+ 9BC9
 562+ 9BC9 E1               pop hl
 563+ 9BCA
 564+ 9BCA 1A               ld a,(de)
 565+ 9BCB AE               xor (hl)
 566+ 9BCC 77               ld (hl),a
 567+ 9BCD 2C               inc l
 568+ 9BCE 1C               inc e
 569+ 9BCF 1A               ld a,(de)
 570+ 9BD0 AE               xor (hl)
 571+ 9BD1 77               ld (hl),a
 572+ 9BD2 2C               inc l
 573+ 9BD3 1C               inc e
 574+ 9BD4 1A               ld a,(de)
 575+ 9BD5 AE               xor (hl)
 576+ 9BD6 77               ld (hl),a
 577+ 9BD7 13               inc de
 578+ 9BD8
 579+ 9BD8 E1               pop hl
 580+ 9BD9
 581+ 9BD9 1A               ld a,(de)
 582+ 9BDA AE               xor (hl)
 583+ 9BDB 77               ld (hl),a
 584+ 9BDC 2C               inc l
 585+ 9BDD 1C               inc e
 586+ 9BDE 1A               ld a,(de)
 587+ 9BDF AE               xor (hl)
 588+ 9BE0 77               ld (hl),a
 589+ 9BE1 2C               inc l
 590+ 9BE2 1C               inc e
 591+ 9BE3 1A               ld a,(de)
 592+ 9BE4 AE               xor (hl)
 593+ 9BE5 77               ld (hl),a
 594+ 9BE6 13               inc de
 595+ 9BE7
 596+ 9BE7 E1               pop hl
 597+ 9BE8
 598+ 9BE8 1A               ld a,(de)
 599+ 9BE9 AE               xor (hl)
 600+ 9BEA 77               ld (hl),a
 601+ 9BEB 2C               inc l
 602+ 9BEC 1C               inc e
 603+ 9BED 1A               ld a,(de)
 604+ 9BEE AE               xor (hl)
 605+ 9BEF 77               ld (hl),a
 606+ 9BF0 2C               inc l
 607+ 9BF1 1C               inc e
 608+ 9BF2 1A               ld a,(de)
 609+ 9BF3 AE               xor (hl)
 610+ 9BF4 77               ld (hl),a
 611+ 9BF5 13               inc de
 612+ 9BF6
 613+ 9BF6 ED 73 E7 89  2 ld (Scanlines_album_SP),sp
 614+ 9BFA ED 7B DD 89      ld sp,(Stack)
 615+ 9BFE C3 ED 9A         jp Pinta_Sprites
 616+ 9C01
 617+ 9C01              Pinta_lento
 618+ 9C01
 619+ 9C01 E1           1 pop hl
 620+ 9C02
 621+ 9C02 1A               ld a,(de)
 622+ 9C03 AE               xor (hl)
 623+ 9C04 77               ld (hl),a
 624+ 9C05 2C               inc l
 625+ 9C06 1C               inc e
 626+ 9C07 1A               ld a,(de)
 627+ 9C08 AE               xor (hl)
 628+ 9C09 77               ld (hl),a
 629+ 9C0A 2C               inc l
 630+ 9C0B 1C               inc e
 631+ 9C0C 1A               ld a,(de)
 632+ 9C0D AE               xor (hl)
 633+ 9C0E 77               ld (hl),a
 634+ 9C0F 13               inc de
 635+ 9C10
 636+ 9C10 10 EF            djnz 1B
 637+ 9C12
 638+ 9C12 18 E2            jr 2B
# file closed: Genera_datos_de_impresion.asm
1795  9C14
1796  9C14              	SAVESNA "Pruebas.sna", START
1797  9C14
1798  9C14
1799  9C14
1800  9C14
# file closed: Banco_de_pruebas.asm
