# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 94 8A     	call Frame
  15  A104
  16  A104 3A C8 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8
 206+ 83E8 EE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83EA 1E 84        	defw Explosion_2x3_2
 208+ 83EC 4E 84        	defw Explosion_2x3_3
 209+ 83EE
 210+ 83EE 0D ED E0 0D  Explosion_2x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 210+ 83F2 ED E0 0D ED
 211+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 211+ 83FA 0D ED E0 0D
 212+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 212+ 8402 E0 0D ED E0
 213+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 213+ 840A ED E0 0D ED
 214+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 214+ 8412 0D ED E0 0D
 215+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 215+ 841A E0 0D ED E0
 216+ 841E
 217+ 841E 01 8F 80 01  Explosion_2x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 217+ 8422 8F 80 01 8F
 218+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 218+ 842A 01 8F 80 01
 219+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 219+ 8432 80 01 8F 80
 220+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 220+ 843A 8F 80 01 8F
 221+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 221+ 8442 01 8F 80 01
 222+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 222+ 844A 80 01 8F 80
 223+ 844E
 224+ 844E 01 11 10 01  Explosion_2x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 224+ 8452 11 10 01 11
 225+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 225+ 845A 01 11 10 01
 226+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 226+ 8462 10 01 11 10
 227+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 227+ 846A 11 10 01 11
 228+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 228+ 8472 01 11 10 01
 229+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 229+ 847A 10 01 11 10
 230+ 847E
 231+ 847E              ; ------------------------------------------
 232+ 847E
 233+ 847E 84 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8480 A4 84        	defw Explosion_2x2_2
 235+ 8482 C4 84        	defw Explosion_2x2_3
 236+ 8484
 237+ 8484 DE DE DE DE  Explosion_2x2_1 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 237+ 8488 DE DE DE DE
 238+ 848C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 238+ 8490 DE DE DE DE
 239+ 8494 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 239+ 8498 DE DE DE DE
 240+ 849C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 240+ 84A0 DE DE DE DE
 241+ 84A4
 242+ 84A4 DE DE DE DE  Explosion_2x2_2	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 242+ 84A8 DE DE DE DE
 243+ 84AC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 243+ 84B0 DE DE DE DE
 244+ 84B4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 244+ 84B8 DE DE DE DE
 245+ 84BC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 245+ 84C0 DE DE DE DE
 246+ 84C4
 247+ 84C4 DE DE DE DE  Explosion_2x2_3	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 247+ 84C8 DE DE DE DE
 248+ 84CC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 248+ 84D0 DE DE DE DE
 249+ 84D4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 249+ 84D8 DE DE DE DE
 250+ 84DC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 250+ 84E0 DE DE DE DE
 251+ 84E4
# file closed: Sprites_e_indices.asm
  23  84E4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84E4
   2+ 84E4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84E4
   4+ 84E4              ; 13/05/23
   5+ 84E4
   6+ 84E4              ; Control. %00000001 00000001
   7+ 84E4              ;
   8+ 84E4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84E4              ;                    _ hacen las entidades hacia abajo.
  10+ 84E4              ;
  11+ 84E4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84E4
  13+ 84E4 EA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84E6 F2 84        	defw Disparo_2A
  15+ 84E8 FA 84        	defw Disparo_3A
  16+ 84EA
  17+ 84EA 00 00        Disparo_1A defw 0									; Control.
  18+ 84EC 00 00        	defw 0											; Puntero objeto.
  19+ 84EE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F0 00 00        	defw 0											; Rutina de impresión.
  21+ 84F2
  22+ 84F2 00 00        Disparo_2A defw 0									; Control.
  23+ 84F4 00 00        	defw 0											; Puntero objeto.
  24+ 84F6 00 00        	defw 0											; Puntero de impresión.
  25+ 84F8 00 00        	defw 0											; Rutina de impresión.
  26+ 84FA
  27+ 84FA 00 00        Disparo_3A defw 0
  28+ 84FC
  29+ 84FC 12 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 84FE 1A 85        	defw Disparo_2
  31+ 8500 22 85        	defw Disparo_3
  32+ 8502 2A 85        	defw Disparo_4
  33+ 8504 32 85        	defw Disparo_5
  34+ 8506 3A 85        	defw Disparo_6
  35+ 8508 42 85        	defw Disparo_7
  36+ 850A 4A 85        	defw Disparo_8
  37+ 850C 52 85        	defw Disparo_9
  38+ 850E 5A 85        	defw Disparo_10
  39+ 8510 62 85        	defw Disparo_11
  40+ 8512
  41+ 8512 00 00        Disparo_1 defw 0									; Control.
  42+ 8514 00 00        	defw 0											; Puntero objeto.
  43+ 8516 00 00        	defw 0											; Puntero de impresión.
  44+ 8518 00 00        	defw 0											; Rutina de impresión.
  45+ 851A
  46+ 851A 00 00        Disparo_2 defw 0									; Control.
  47+ 851C 00 00        	defw 0											; Puntero objeto.
  48+ 851E 00 00        	defw 0											; Puntero de impresión.
  49+ 8520 00 00        	defw 0											; Rutina de impresión.
  50+ 8522
  51+ 8522 00 00        Disparo_3 defw 0									; Control.
  52+ 8524 00 00        	defw 0											; Puntero objeto.
  53+ 8526 00 00        	defw 0											; Puntero de impresión.
  54+ 8528 00 00        	defw 0											; Rutina de impresión.
  55+ 852A
  56+ 852A 00 00        Disparo_4 defw 0									; Control.
  57+ 852C 00 00        	defw 0											; Puntero objeto.
  58+ 852E 00 00        	defw 0											; Puntero de impresión.
  59+ 8530 00 00        	defw 0											; Rutina de impresión.
  60+ 8532
  61+ 8532 00 00        Disparo_5 defw 0									; Control.
  62+ 8534 00 00        	defw 0											; Puntero objeto.
  63+ 8536 00 00        	defw 0											; Puntero de impresión.
  64+ 8538 00 00        	defw 0											; Rutina de impresión.
  65+ 853A
  66+ 853A 00 00        Disparo_6 defw 0									; Control.
  67+ 853C 00 00        	defw 0											; Puntero objeto.
  68+ 853E 00 00        	defw 0											; Puntero de impresión.
  69+ 8540 00 00        	defw 0											; Rutina de impresión.
  70+ 8542
  71+ 8542 00 00        Disparo_7 defw 0									; Control.
  72+ 8544 00 00        	defw 0											; Puntero objeto.
  73+ 8546 00 00        	defw 0											; Puntero de impresión.
  74+ 8548 00 00        	defw 0											; Rutina de impresión.
  75+ 854A
  76+ 854A 00 00        Disparo_8 defw 0									; Control.
  77+ 854C 00 00        	defw 0											; Puntero objeto.
  78+ 854E 00 00        	defw 0											; Puntero de impresión.
  79+ 8550 00 00        	defw 0											; Rutina de impresión.
  80+ 8552
  81+ 8552 00 00        Disparo_9 defw 0									; Control.
  82+ 8554 00 00        	defw 0											; Puntero objeto.
  83+ 8556 00 00        	defw 0											; Puntero de impresión.
  84+ 8558 00 00        	defw 0											; Rutina de impresión.
  85+ 855A
  86+ 855A 00 00        Disparo_10 defw 0									; Control.
  87+ 855C 00 00        	defw 0											; Puntero objeto.
  88+ 855E 00 00        	defw 0											; Puntero de impresión.
  89+ 8560 00 00        	defw 0											; Rutina de impresión.
  90+ 8562
  91+ 8562 00 00        Disparo_11 defw 0
  92+ 8564
  93+ 8564              ; -------------------------------------------------------------------------------------
  94+ 8564
  95+ 8564              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8564
  97+ 8564 BA 85        	defw Caja_1
  98+ 8566 F8 85        	defw Caja_2
  99+ 8568 36 86        	defw Caja_3
 100+ 856A 74 86        	defw Caja_4
 101+ 856C B2 86        	defw Caja_5
 102+ 856E F0 86        	defw Caja_6
 103+ 8570 2E 87        	defw Caja_7
 104+ 8572 6C 87        	defw Caja_8
 105+ 8574 AA 87        	defw Caja_9
 106+ 8576 E8 87        	defw Caja_10
 107+ 8578              ;	...
 108+ 8578              ;	...
 109+ 8578              ;	+ entidades ...
 110+ 8578 00 00        	defw 0
 111+ 857A 00 00        	defw 0
 112+ 857C
 113+ 857C              ; ---------- ---------- ---------- ---------- ----------
 114+ 857C
 115+ 857C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 857E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8580 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8582 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8585
 120+ 8585 05           	db %00000101									; (Attr).
 121+ 8586 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8588 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 858A
 124+ 858A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 858C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 858E
 127+ 858E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8590 04           	db 4 											; (Cuad_objeto).
 129+ 8591 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8595
 131+ 8595 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 8596
 133+ 8596 00 00        	db 0,0											; Variables_de_borrado
 134+ 8598 00 00        	defw 0											;	" " " " " " "
 135+ 859A 00 00        	defw 0											;	" " " " " " "
 136+ 859C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A0
 138+ 85A0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00        	defw 0											;	" " " " " " "
 141+ 85A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85AA
 143+ 85AA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85AD
 145+ 85AD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85B4
 148+ 85B4 00           	db 0 											; (Columnas).
 149+ 85B5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85BA
 152+ 85BA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85BA
 154+ 85BA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85BC 00 00        	defw 0											; (Posicion_actual).
 156+ 85BE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85C3
 159+ 85C3 00           	db %00000000 									; (Attr).
 160+ 85C4
 161+ 85C4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85C6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85CC
 166+ 85CC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85CE 00           	db 0											; (Cuad_objeto).
 168+ 85CF
 169+ 85CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85D3
 171+ 85D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85D4
 173+ 85D4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85D6 00 00        	defw 0											;	" " " " " " "
 175+ 85D8 00 00        	defw 0											;	" " " " " " "
 176+ 85DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85DE
 178+ 85DE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85E0 00 00        	defw 0											;	" " " " " " "
 180+ 85E2 00 00        	defw 0											;	" " " " " " "
 181+ 85E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85E8
 183+ 85E8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85EB
 185+ 85EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85F2
 188+ 85F2 00           	db 0 											; (Columnas).
 189+ 85F3 00 00        	defw 0											; (Limite_horizontal).
 190+ 85F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 191+ 85F8
 192+ 85F8              ; ---------- ---------- ---------- ---------- ----------
 193+ 85F8
 194+ 85F8 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85FA 00 00        	defw 0											; (Posicion_actual).
 196+ 85FC 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8601
 199+ 8601 00           	db %00000000 									; (Attr).
 200+ 8602
 201+ 8602 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8604 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8606 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 8608 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Posicion_inicio).
 207+ 860C 00           	db 0											; (Cuad_objeto).
 208+ 860D
 209+ 860D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8611
 211+ 8611 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8612
 213+ 8612 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8614 00 00        	defw 0											;	" " " " " " "
 215+ 8616 00 00        	defw 0											;	" " " " " " "
 216+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 861C
 218+ 861C 00 00        	db 0,0											; Variables_de_pintado
 219+ 861E 00 00        	defw 0											;	" " " " " " "
 220+ 8620 00 00        	defw 0											;	" " " " " " "
 221+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8626
 223+ 8626 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 8629
 225+ 8629 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 862D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8630
 228+ 8630 00           	db 0 											; (Columnas).
 229+ 8631 00 00        	defw 0											; (Limite_horizontal).
 230+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 8636
 232+ 8636              ; ---------- ---------- ---------- ---------- ----------
 233+ 8636
 234+ 8636 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8638 00 00        	defw 0											; (Posicion_actual).
 236+ 863A 00 00        	defw 0 											; (Puntero_objeto).
 237+ 863C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 863F
 239+ 863F 00           	db %00000000 									; (Attr).
 240+ 8640
 241+ 8640 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8642 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8644 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8646 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8648
 246+ 8648 00 00        	defw 0											; (Posicion_inicio).
 247+ 864A 00           	db 0											; (Cuad_objeto).
 248+ 864B
 249+ 864B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 864F
 251+ 864F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8650
 253+ 8650 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8652 00 00        	defw 0											;	" " " " " " "
 255+ 8654 00 00        	defw 0											;	" " " " " " "
 256+ 8656 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 865A
 258+ 865A 00 00        	db 0,0											; Variables_de_pintado
 259+ 865C 00 00        	defw 0											;	" " " " " " "
 260+ 865E 00 00        	defw 0											;	" " " " " " "
 261+ 8660 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8664
 263+ 8664 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8667
 265+ 8667 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 866B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 866E
 268+ 866E 00           	db 0 											; (Columnas).
 269+ 866F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8671 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 271+ 8674
 272+ 8674              ; ---------- ---------- ---------- ---------- ----------
 273+ 8674
 274+ 8674 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8676 00 00        	defw 0											; (Posicion_actual).
 276+ 8678 00 00        	defw 0 											; (Puntero_objeto).
 277+ 867A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 867D
 279+ 867D 00           	db %00000000 									; (Attr).
 280+ 867E
 281+ 867E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8680 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8682 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8684 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8686
 286+ 8686 00 00        	defw 0											; (Posicion_inicio).
 287+ 8688 00           	db 0											; (Cuad_objeto).
 288+ 8689
 289+ 8689 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 868D
 291+ 868D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 868E
 293+ 868E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8690 00 00        	defw 0											;	" " " " " " "
 295+ 8692 00 00        	defw 0											;	" " " " " " "
 296+ 8694 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8698
 298+ 8698 00 00        	db 0,0											; Variables_de_pintado
 299+ 869A 00 00        	defw 0											;	" " " " " " "
 300+ 869C 00 00        	defw 0											;	" " " " " " "
 301+ 869E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 86A2
 303+ 86A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 86A5
 305+ 86A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 86A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 86AC
 308+ 86AC 00           	db 0 											; (Columnas).
 309+ 86AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 86AF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86B2
 312+ 86B2              ; ---------- ---------- ---------- ---------- ----------
 313+ 86B2
 314+ 86B2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86B4 00 00        	defw 0											; (Posicion_actual).
 316+ 86B6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86BB
 319+ 86BB 00           	db %00000000 									; (Attr).
 320+ 86BC
 321+ 86BC 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86BE 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86C4
 326+ 86C4 00 00        	defw 0											; (Posicion_inicio).
 327+ 86C6 00           	db 0											; (Cuad_objeto).
 328+ 86C7
 329+ 86C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86CB
 331+ 86CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86CC
 333+ 86CC 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 86CE 00 00        	defw 0											;	" " " " " " "
 335+ 86D0 00 00        	defw 0											;	" " " " " " "
 336+ 86D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 86D6
 338+ 86D6 00 00        	db 0,0											; Variables_de_pintado
 339+ 86D8 00 00        	defw 0											;	" " " " " " "
 340+ 86DA 00 00        	defw 0											;	" " " " " " "
 341+ 86DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 86E0
 343+ 86E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 86E3
 345+ 86E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86EA
 348+ 86EA 00           	db 0 											; (Columnas).
 349+ 86EB 00 00        	defw 0											; (Limite_horizontal).
 350+ 86ED 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 351+ 86F0
 352+ 86F0              ; ---------- ---------- ---------- ---------- ----------
 353+ 86F0
 354+ 86F0 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86F2 00 00        	defw 0											; (Posicion_actual).
 356+ 86F4 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86F9
 359+ 86F9 00           	db %00000000 									; (Attr).
 360+ 86FA
 361+ 86FA 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86FC 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 8700 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8702
 366+ 8702 00 00        	defw 0											; (Posicion_inicio).
 367+ 8704 00           	db 0											; (Cuad_objeto).
 368+ 8705
 369+ 8705 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8709
 371+ 8709 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 870A
 373+ 870A 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 870C 00 00        	defw 0											;	" " " " " " "
 375+ 870E 00 00        	defw 0											;	" " " " " " "
 376+ 8710 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8714
 378+ 8714 00 00        	db 0,0											; Variables_de_pintado
 379+ 8716 00 00        	defw 0											;	" " " " " " "
 380+ 8718 00 00        	defw 0											;	" " " " " " "
 381+ 871A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 871E
 383+ 871E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 8721
 385+ 8721 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8725 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8728
 388+ 8728 00           	db 0 											; (Columnas).
 389+ 8729 00 00        	defw 0											; (Limite_horizontal).
 390+ 872B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 391+ 872E
 392+ 872E              ; ---------- ---------- ---------- ---------- ----------
 393+ 872E
 394+ 872E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 8730 00 00        	defw 0											; (Posicion_actual).
 396+ 8732 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8734 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8737
 399+ 8737 00           	db %00000000 									; (Attr).
 400+ 8738
 401+ 8738 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 873A 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 873C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 8740
 406+ 8740 00 00        	defw 0											; (Posicion_inicio).
 407+ 8742 00           	db 0											; (Cuad_objeto).
 408+ 8743
 409+ 8743 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8747
 411+ 8747 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8748
 413+ 8748 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 874A 00 00        	defw 0											;	" " " " " " "
 415+ 874C 00 00        	defw 0											;	" " " " " " "
 416+ 874E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8752
 418+ 8752 00 00        	db 0,0											; Variables_de_pintado
 419+ 8754 00 00        	defw 0											;	" " " " " " "
 420+ 8756 00 00        	defw 0											;	" " " " " " "
 421+ 8758 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 875C
 423+ 875C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 875F
 425+ 875F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8763 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8766
 428+ 8766 00           	db 0 											; (Columnas).
 429+ 8767 00 00        	defw 0											; (Limite_horizontal).
 430+ 8769 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 431+ 876C
 432+ 876C              ; ---------- ---------- ---------- ---------- ----------
 433+ 876C
 434+ 876C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 876E 00 00        	defw 0											; (Posicion_actual).
 436+ 8770 00 00        	defw 0 											; (Puntero_objeto).
 437+ 8772 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8775
 439+ 8775 00           	db %00000000 									; (Attr).
 440+ 8776
 441+ 8776 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8778 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 877A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 877C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 877E
 446+ 877E 00 00        	defw 0											; (Posicion_inicio).
 447+ 8780 00           	db 0											; (Cuad_objeto).
 448+ 8781
 449+ 8781 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8785
 451+ 8785 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8786
 453+ 8786 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8788 00 00        	defw 0											;	" " " " " " "
 455+ 878A 00 00        	defw 0											;	" " " " " " "
 456+ 878C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 8790
 458+ 8790 00 00        	db 0,0											; Variables_de_pintado
 459+ 8792 00 00        	defw 0											;	" " " " " " "
 460+ 8794 00 00        	defw 0											;	" " " " " " "
 461+ 8796 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 879A
 463+ 879A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 879D
 465+ 879D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 87A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 87A4
 468+ 87A4 00           	db 0 											; (Columnas).
 469+ 87A5 00 00        	defw 0											; (Limite_horizontal).
 470+ 87A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 471+ 87AA
 472+ 87AA              ; ---------- ---------- ---------- ---------- ----------
 473+ 87AA
 474+ 87AA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 87AC 00 00        	defw 0											; (Posicion_actual).
 476+ 87AE 00 00        	defw 0 											; (Puntero_objeto).
 477+ 87B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 87B3
 479+ 87B3 00           	db %00000000 									; (Attr).
 480+ 87B4
 481+ 87B4 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 87B6 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 87B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 87BC
 486+ 87BC 00 00        	defw 0											; (Posicion_inicio).
 487+ 87BE 00           	db 0											; (Cuad_objeto).
 488+ 87BF
 489+ 87BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 87C3
 491+ 87C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 87C4
 493+ 87C4 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 87C6 00 00        	defw 0											;	" " " " " " "
 495+ 87C8 00 00        	defw 0											;	" " " " " " "
 496+ 87CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 87CE
 498+ 87CE 00 00        	db 0,0											; Variables_de_pintado
 499+ 87D0 00 00        	defw 0											;	" " " " " " "
 500+ 87D2 00 00        	defw 0											;	" " " " " " "
 501+ 87D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 87D8
 503+ 87D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 87DB
 505+ 87DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 87DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 87E2
 508+ 87E2 00           	db 0 											; (Columnas).
 509+ 87E3 00 00        	defw 0											; (Limite_horizontal).
 510+ 87E5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 511+ 87E8
 512+ 87E8              ; ---------- ---------- ---------- ---------- ----------
 513+ 87E8
 514+ 87E8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87EA 00 00        	defw 0											; (Posicion_actual).
 516+ 87EC 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87F1
 519+ 87F1 00           	db %00000000 									; (Attr).
 520+ 87F2
 521+ 87F2 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87F4 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87FA
 526+ 87FA 00 00        	defw 0											; (Posicion_inicio).
 527+ 87FC 00           	db 0											; (Cuad_objeto).
 528+ 87FD
 529+ 87FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 8801
 531+ 8801 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 8802
 533+ 8802 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 8804 00 00        	defw 0											;	" " " " " " "
 535+ 8806 00 00        	defw 0											;	" " " " " " "
 536+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 880C
 538+ 880C 00 00        	db 0,0											; Variables_de_pintado
 539+ 880E 00 00        	defw 0											;	" " " " " " "
 540+ 8810 00 00        	defw 0											;	" " " " " " "
 541+ 8812 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8816
 543+ 8816 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8819
 545+ 8819 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 881D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 8820
 548+ 8820 00           	db 0 											; (Columnas).
 549+ 8821 00 00        	defw 0											; (Limite_horizontal).
 550+ 8823 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8826
 552+ 8826              ; -------------------------------------------------------------------------------------
 553+ 8826              ;
 554+ 8826              ;	20/05/23
 555+ 8826              ;
 556+ 8826              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 8826              ;
 558+ 8826              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 8826              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 8826              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 8826              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 8826
 563+ 8826              Indice_de_entidades
 564+ 8826
 565+ 8826 30 88        	defw Entidad_1
 566+ 8828 40 88        	defw Entidad_2
 567+ 882A 50 88        	defw Entidad_3
 568+ 882C 60 88        	defw Entidad_4
 569+ 882E 70 88        	defw Entidad_5
 570+ 8830
 571+ 8830              ;	BADSAT, (Satélite malvado).
 572+ 8830
 573+ 8830 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 8832 04           	db %00000100									; (Attr).
 575+ 8833 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 8835 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8837 3F 50        	defw $503f	                             	    ; (Posicion_inicio).
 578+ 8839 01           	db 1											; (Cuad_objeto).
 579+ 883A 02 02 01 02  	db 2,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 883E C3 9C        	defw Indice_mov_Escaloncitos_izquierda_arriba   ; (Puntero_indice_mov)
 581+ 8840
 582+ 8840 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 8842 02           	db %00000010									; (Attr).
 584+ 8843 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 8845 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8847 40 50        	defw $5040                                      ; (Posicion_inicio).
 587+ 8849 01           	db 1											; (Cuad_objeto).
 588+ 884A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 884E C7 9C        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 590+ 8850
 591+ 8850 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 8852 04           	db %00000100									; (Attr).
 593+ 8853 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 8855 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8857 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8859 01           	db 1											; (Cuad_objeto).
 597+ 885A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 885E C7 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 599+ 8860
 600+ 8860 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 8862 01           	db %00000001									; (Attr).
 602+ 8863 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 8865 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8867 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8869 01           	db 1											; (Cuad_objeto).
 606+ 886A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 886E C5 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8870
 609+ 8870 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 8872 01           	db %00000001									; (Attr).
 611+ 8873 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 8875 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8877 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8879 01           	db 1											; (Cuad_objeto).
 615+ 887A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 887E C1 9C        	defw Indice_mov_Escaloncitos_derecha_abajo							; (Puntero_indice_mov)
 617+ 8880
# file closed: Cajas_y_disparos.asm
  24  8880              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8880              ; 13/05/23
   2+ 8880
   3+ 8880              Indice_de_niveles
   4+ 8880
   5+ 8880 8E 88        	defw Nivel_1
   6+ 8882 90 88        	defw Nivel_2
   7+ 8884 9D 88        	defw Nivel_3
   8+ 8886 AD 88        	defw Nivel_4
   9+ 8888 BF 88        	defw Nivel_5
  10+ 888A
  11+ 888A              ;	...
  12+ 888A              ;	...
  13+ 888A              ;	+ Niveles ...
  14+ 888A
  15+ 888A 00 00        	defw 0
  16+ 888C 00 00        	defw 0
  17+ 888E
  18+ 888E 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 888F 05           	db 5
  20+ 8890 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 8891 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 8895 01 02
  22+ 8897 02 01 01 01  	db 2,1,1,1,1,2
  22+ 889B 01 02
  23+ 889D 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 889E 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88A2 01
  25+ 88A3 03 01 01 01  	db 3,1,1,1,1
  25+ 88A7 01
  26+ 88A8 03 01 01 01  	db 3,1,1,1,1
  26+ 88AC 01
  27+ 88AD 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88AE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88B2 01
  29+ 88B3 04 01 01 01  	db 4,1,1,1,1
  29+ 88B7 01
  30+ 88B8 04 01 01 01  	db 4,1,1,1,1
  30+ 88BC 01
  31+ 88BD 02 03        	db 2,3
  32+ 88BF 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88C0 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88C4 01
  34+ 88C5 05 01 01 01  	db 5,1,1,1,1
  34+ 88C9 01
  35+ 88CA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88CE 01
  36+ 88CF 05 01 01 01  	db 5,1,1,1,1
  36+ 88D3 01
  37+ 88D4
  38+ 88D4              ;---------------------------------------------------------------------------------------------------------------
  39+ 88D4              ;
  40+ 88D4              ;   21/5/23
  41+ 88D4              ;
  42+ 88D4              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88D4              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88D4              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88D4              ;	_en la caja DRAW correspondiente.
  46+ 88D4              ;
  47+ 88D4              ;	MODIFICA: HL,DE y A.
  48+ 88D4              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88D4
  50+ 88D4              Inicializa_Punteros_de_nivel
  51+ 88D4
  52+ 88D4 21 80 88     	ld hl,Indice_de_niveles
  53+ 88D7 22 FB 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 88DA CD E6 8C     	call Extrae_address
  55+ 88DD 7E           	ld a,(hl)
  56+ 88DE 32 D1 89     	ld (Numero_de_entidades),a
  57+ 88E1 23           	inc hl
  58+ 88E2 22 FD 89     	ld (Datos_de_nivel),hl
  59+ 88E5 C9           	ret
  60+ 88E6
  61+ 88E6              ;---------------------------------------------------------------------------------------------------------------
  62+ 88E6              ;
  63+ 88E6              ;   13/5/23
  64+ 88E6              ;
  65+ 88E6              ;	Destruye A,BC,HL,DE
  66+ 88E6
  67+ 88E6              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 88E6              ;	_del juego.
  69+ 88E6
  70+ 88E6              Prepara_cajas
  71+ 88E6
  72+ 88E6              ; Preparamos los punteros de las cajas.
  73+ 88E6
  74+ 88E6 21 64 85     	ld hl,Indice_de_cajas
  75+ 88E9 CD E6 8C     	call Extrae_address
  76+ 88EC CD 29 89     	call Avanza_caja
  77+ 88EF
  78+ 88EF CD 6D 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 88F2
  80+ 88F2 2A FD 89     	ld hl,(Datos_de_nivel)
  81+ 88F5
  82+ 88F5              ; HL está en los datos del nivel correspondiente.
  83+ 88F5              ; B actuará como contador de cajas.
  84+ 88F5
  85+ 88F5 C5           1 push bc
  86+ 88F6
  87+ 88F6 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 88F7 CD 1A 89     	call PreparaBC
  89+ 88FA
  90+ 88FA 21 26 88     	ld hl,Indice_de_entidades
  91+ 88FD CD 22 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8900 22 D7 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8903
  94+ 8903 CD 33 89     	call Datos_de_entidad_a_caja
  95+ 8906
  96+ 8906 2A CF 89     	ld hl,(Indice_restore_caja)
  97+ 8909 CD E6 8C     	call Extrae_address
  98+ 890C CD 29 89     	call Avanza_caja
  99+ 890F
 100+ 890F 2A FD 89     	ld hl,(Datos_de_nivel)
 101+ 8912 23           	inc hl
 102+ 8913 22 FD 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8916
 104+ 8916 C1           	pop bc
 105+ 8917 10 DC        	djnz 1B
 106+ 8919 C9           	ret
 107+ 891A
 108+ 891A CB 27        PreparaBC sla a
 109+ 891C D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 891E 4F           	ld c,a
 111+ 891F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8921 C9           	ret
 113+ 8922
 114+ 8922 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8923 ED 4A        	adc hl,bc
 116+ 8925 CD E6 8C     	call Extrae_address
 117+ 8928 C9           	ret
 118+ 8929
 119+ 8929 22 CB 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 892C 13           	inc de
 121+ 892D 13           	inc de
 122+ 892E EB           	ex de,hl
 123+ 892F 22 CF 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8932 C9           	ret
 125+ 8933
 126+ 8933              Datos_de_entidad_a_caja
 127+ 8933
 128+ 8933              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8933
 130+ 8933
 131+ 8933 ED 5B CB 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8937
 133+ 8937 01 02 00     	ld bc,2
 134+ 893A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 893C
 136+ 893C 01 07 00     	ld bc,7
 137+ 893F CD 67 89     	call Situa_DE
 138+ 8942
 139+ 8942 01 05 00     	ld bc,5
 140+ 8945 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8947
 142+ 8947 01 04 00     	ld bc,4
 143+ 894A CD 67 89     	call Situa_DE
 144+ 894D
 145+ 894D 01 07 00     	ld bc,7
 146+ 8950 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8952
 148+ 8952 01 18 00     	ld bc,24
 149+ 8955 CD 67 89     	call Situa_DE
 150+ 8958
 151+ 8958 01 02 00     	ld bc,2
 152+ 895B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 895D
 154+ 895D 01 0A 00     	ld bc,10
 155+ 8960 CD 67 89     	call Situa_DE
 156+ 8963
 157+ 8963 3E 03        	ld a,3
 158+ 8965 12           	ld (de),a 									; Vuelco (Frames_explosion).
 159+ 8966
 160+ 8966 C9           	ret
 161+ 8967
 162+ 8967 EB           Situa_DE ex de,hl
 163+ 8968 A7           	and a
 164+ 8969 ED 4A        	adc hl,bc
 165+ 896B EB           	ex de,hl
 166+ 896C C9           	ret
 167+ 896D
 168+ 896D              ;---------------------------------------------------------------------------------------------------------------
 169+ 896D              ;
 170+ 896D              ;	21/5/23
 171+ 896D              ;
 172+ 896D              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 173+ 896D              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 174+ 896D              ;
 175+ 896D              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 176+ 896D              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 177+ 896D              ;	_ total de entidades que contiene (Numero_de_entidades).
 178+ 896D              ;
 179+ 896D              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 180+ 896D              ;	MODIFICA: A y B.
 181+ 896D              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 182+ 896D
 183+ 896D              Admin_num_entidades
 184+ 896D
 185+ 896D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 186+ 896D
 187+ 896D 3A D1 89     	ld a,(Numero_de_entidades)
 188+ 8970 A7           	and a
 189+ 8971              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 190+ 8971              ;	jr z,$
 191+ 8971              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 8971
 193+ 8971 20 03        	jr nz,3F
 194+ 8973
 195+ 8973              ;! RESET para pruebas. Omitir esta línea en modo normal.
 196+ 8973
 197+ 8973 CD D4 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 198+ 8976
 199+ 8976
 200+ 8976 3A D1 89     3 ld a,(Numero_de_entidades)
 201+ 8979 FE 0A        	cp 10
 202+ 897B 38 08        	jr c,1F
 203+ 897D
 204+ 897D              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 205+ 897D              ; Actualizamos variables.
 206+ 897D
 207+ 897D 3E 0A        	ld a,10
 208+ 897F 32 D2 89     	ld (Numero_parcial_de_entidades),a
 209+ 8982 47           	ld b,a
 210+ 8983 18 04        	jr 2F
 211+ 8985
 212+ 8985              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 213+ 8985              ; (Numero_de_entidades)="0".
 214+ 8985
 215+ 8985 32 D2 89     1 ld (Numero_parcial_de_entidades),a
 216+ 8988 47           	ld b,a
 217+ 8989 C9           2 ret
# file closed: Niveles.asm
  25  898A
  26  898A              ; ******************************************************************************************************************************************************************************************
  27  898A              ; Constantes.
  28  898A              ; ******************************************************************************************************************************************************************************************
  29  898A              ;
  30  898A              ; 25/05/23
  31  898A              ;
  32  898A              ; Constantes generales.
  33  898A              ;
  34  898A
  35  898A              Sprite_vacio equ $f000
  36  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  898A
  41  898A              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  898A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  898A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  898A              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  898A              ;                               				        ; De momento situamos este almacén en $7060.
  47  898A
  48  898A              ; ******************************************************************************************************************************************************************************************
  49  898A              ; Variables.
  50  898A              ; ******************************************************************************************************************************************************************************************
  51  898A              ;
  52  898A              ; 30/05/23
  53  898A              ;
  54  898A              ; Variables de DRAW. (Motor principal).
  55  898A              ;
  56  898A              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  898A
  58  898A 00           Filas db 0												; Filas. [DRAW]
  59  898B 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  898C 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  898E 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8990 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  8991 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  8992
  65  8992              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  8992
  67  8992 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  8993              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  8993              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  8993 00           Attr db 0												; Atributos de la entidad:
  71  8994
  72  8994              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  8994              ;
  74  8994              ;	COLORES: 0 ..... NEGRO
  75  8994              ;    		 1 ..... AZUL
  76  8994              ; 			 2 ..... ROJO
  77  8994              ;			 3 ..... MAGENTA
  78  8994              ; 			 4 ..... VERDE
  79  8994              ; 			 5 ..... CIAN
  80  8994              ;			 6 ..... AMARILLO
  81  8994              ; 			 7 ..... BLANCO
  82  8994
  83  8994 00 00        Indice_Sprite_der defw 0
  84  8996 00 00        Indice_Sprite_izq defw 0
  85  8998 00 00        Puntero_DESPLZ_der defw 0
  86  899A 00 00        Puntero_DESPLZ_izq defw 0
  87  899C
  88  899C 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  899E 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  899F
  91  899F              ; Variables de objeto. (Características).
  92  899F
  93  899F 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89A0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89A1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89A2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89A3
  98  89A3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89A4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89A4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89A4
 102  89A4 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89A6 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89A8 00 00        	defw 0
 105  89AA 00 00 00 00  	db 0,0,0,0
 106  89AE
 107  89AE 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89B0 00 00        	defw 0
 109  89B2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89B4 00 00 00 00  	db 0,0,0,0
 111  89B8
 112  89B8              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89B8
 114  89B8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89B9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89B9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89B9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89B9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89B9              ;
 120  89B9              ; 														DESCRIPCIÖN:
 121  89B9              ;
 122  89B9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89B9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89B9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89B9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89B9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89B9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89B9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89B9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89B9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89B9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89B9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89B9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89B9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89B9              ;
 136  89B9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89B9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89B9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89B9
 140  89B9 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89BA
 142  89BA              ; Movimiento.
 143  89BA
 144  89BA 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89BB 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89BD 00 00        Puntero_mov defw 0
 147  89BF 00           Contador_db_mov db 0
 148  89C0 00           Incrementa_puntero db 0
 149  89C1 00           Repetimos_db db 0
 150  89C2
 151  89C2              ; Variables de funcionamiento. [DRAW].
 152  89C2
 153  89C2 00           Columnas db 0
 154  89C3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89C5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89C5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89C6
 158  89C6              ; variables de control general.
 159  89C6
 160  89C6 00           Ctrl_2 db 0
 161  89C7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89C7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89C7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89C7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89C7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89C7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89C7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89C7              ;
 169  89C7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89C7
 171  89C7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89C8
 173  89C8              ; 62 Bytes por entidad.
 174  89C8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89C8              ;					         		---------;      ;---------
 176  89C8
 177  89C8
 178  89C8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89C8
 180  89C8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89C9
 182  89C9              ;														DESCRIPCIÓN:
 183  89C9              ;
 184  89C9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89C9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89C9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89C9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89C9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89C9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89C9              ;														BIT 3, Recarga de nueva oleada.
 191  89C9              ;														BIT 4, Recarga de nueva oleada.
 192  89C9
 193  89C9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89CB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89CB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89CB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89CB
 198  89CB
 199  89CB
 200  89CB              ; Gestión de ENTIDADES y CAJAS.
 201  89CB
 202  89CB              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89CB 00 00        Puntero_store_caja defw 0
 204  89CD 00 00        Puntero_restore_caja defw 0
 205  89CF 00 00        Indice_restore_caja defw 0
 206  89D1 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89D2 00           Numero_parcial_de_entidades db 0
 208  89D3 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89D4 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89D5              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89D5              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89D5              ;														; _ (Numero_de_malotes)="0".
 213  89D5 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89D7 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89D9              ;														; _ puntero (Indice_entidades).
 216  89D9
 217  89D9
 218  89D9              ;---------------------------------------------------------------------------------------------------------------
 219  89D9              ;
 220  89D9              ; Sirven para PINTAR.
 221  89D9
 222  89D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89DB              ;														; _variable para almacenar lo posición del puntero_
 224  89DB              ; 														; _de pila, SP.
 225  89DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89DD              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89DF              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89DF 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89E1              ;														; _el snapshot de los registros del siguiente disparo.
 232  89E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89E1
 234  89E1              ;---------------------------------------------------------------------------------------------------------------
 235  89E1
 236  89E1              ; Gestión de Disparos.
 237  89E1
 238  89E1 00           Numero_de_disparotes db 0
 239  89E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  89E6 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  89E7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  89E7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  89E7 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  89E9              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  89E9              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  89E9              ;														; _produzca colisión.
 248  89E9 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  89EB              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  89EB 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89EE              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  89EE 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  89F1              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  89F1              ;---------------------------------------------------------------------------------------------------------------
 255  89F1
 256  89F1              ; Relojes y temporizaciones.
 257  89F1
 258  89F1 00           Contador_de_frames db 0
 259  89F2 00           Secundero db 0
 260  89F3 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 261  89F4              ;														; Repite la oleada de entidades.
 262  89F4 01           Habilita_disparo_Amadeus db 1
 263  89F5 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 264  89F6 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 265  89F7
 266  89F7 01           Habilita_disparo_entidad db 1
 267  89F8 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 268  89F9 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 269  89FA
 270  89FA              ;---------------------------------------------------------------------------------------------------------------
 271  89FA
 272  89FA              ; Gestión de FRAMES.
 273  89FA
 274  89FA              ;Switch db 0
 275  89FA
 276  89FA              ; Variables de Raster y localización en pantalla.
 277  89FA
 278  89FA              ;Temp_Raster defw $ff00
 279  89FA
 280  89FA              ;---------------------------------------------------------------------------------------------------------------
 281  89FA
 282  89FA              ; Gestión de NIVELES.
 283  89FA
 284  89FA 00           Nivel db 0												 ; Nivel actual del juego.
 285  89FB 00 00        Puntero_indice_NIVELES defw 0
 286  89FD 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 287  89FF              ; 														 ; _ que definen el NIVEL.
 288  89FF
 289  89FF
 290  89FF              ; Y todo comienza aquí .....
 291  89FF              ;
 292  89FF              ; Rutina principal *************************************************************************************************************************************************************************
 293  89FF              ;
 294  89FF              ;	14/11/22
 295  89FF
 296  89FF              START
 297  89FF
 298  89FF 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 299  8A02 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 300  8A04 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 301  8A06 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 302  8A08 F3           	DI
 303  8A09
 304  8A09 3E 07        	ld a,%00000111
 305  8A0B CD 9B 98     	call Cls
 306  8A0E
 307  8A0E              ;	call Pinta_marco
 308  8A0E
 309  8A0E CD D4 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 310  8A11
 311  8A11              ;!! Aqui llamaremos a la rutina que hace copia de seguridad de las variables generales.
 312  8A11
 313  8A11 CD BF 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 314  8A14
 315  8A14 CD E6 88     4 call Prepara_cajas
 316  8A17
 317  8A17 CD 92 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 318  8A1A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 319  8A1A CD 6F 8D     	call Restore_entidad
 320  8A1D
 321  8A1D 21 D2 89     	ld hl,Numero_parcial_de_entidades
 322  8A20 46           	ld b,(hl)
 323  8A21 04           	inc b
 324  8A22 05           	dec b
 325  8A23 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 326  8A25
 327  8A25              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 328  8A25              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 329  8A25              ;	Pintamos el resto de entidades:
 330  8A25
 331  8A25              ;	INICIA ENTIDADES !!!!!
 332  8A25
 333  8A25 C5           1 push bc  												; Guardo el contador de entidades.
 334  8A26 CD EC 8C     	call Inicia_Puntero_objeto
 335  8A29 CD AF 98     	call Recompone_posicion_inicio
 336  8A2C CD EB 92     	call Draw
 337  8A2F CD A0 7F     	call Guarda_foto_registros
 338  8A32 CD 34 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 339  8A35 C1           	pop bc
 340  8A36 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 341  8A38
 342  8A38              ;	call Pinta_marco
 343  8A38
 344  8A38              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 345  8A38
 346  8A38 3A C8 89     	ld a,(Ctrl_1)
 347  8A3B CB 5F        	bit 3,a
 348  8A3D 20 18        	jr nz,5F											; Loop
 349  8A3F
 350  8A3F              ; 	INICIA AMADEUS !!!!!
 351  8A3F
 352  8A3F CD 96 8D     3 call Restore_Amadeus
 353  8A42 CD EC 8C     	call Inicia_Puntero_objeto
 354  8A45 CD EB 92     	call Draw
 355  8A48 CD A0 7F     	call Guarda_foto_registros
 356  8A4B 11 7C 85     	ld de,Amadeus_db
 357  8A4E CD A8 8D     	call Store_Amadeus
 358  8A51
 359  8A51              ; 	INICIA DISPAROS !!!!!
 360  8A51
 361  8A51 CD A8 8C     	call Inicia_Puntero_Disparo_Entidades
 362  8A54 CD AF 8C     	call Inicia_Puntero_Disparo_Amadeus
 363  8A57
 364  8A57              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 365  8A57
 366  8A57 CD 92 8C     5 call Inicia_punteros_de_cajas
 367  8A5A CD 6F 8D     	call Restore_entidad
 368  8A5D
 369  8A5D 3A C8 89     	ld a,(Ctrl_1)
 370  8A60 CB 5F        	bit 3,a
 371  8A62 28 0A        	jr z,6F
 372  8A64
 373  8A64              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 374  8A64
 375  8A64 21 C8 89     	ld hl,Ctrl_1
 376  8A67 CB 9E        	res 3,(hl)
 377  8A69 CD B6 8C     	call Calcula_numero_de_malotes
 378  8A6C 18 07        	jr 7F
 379  8A6E
 380  8A6E              ; ----------
 381  8A6E
 382  8A6E 3A D2 89     6 ld a,(Numero_parcial_de_entidades)
 383  8A71 3C           	inc a
 384  8A72 32 D4 89     	ld (Numero_de_malotes),a
 385  8A75
 386  8A75 AF           7 xor a
 387  8A76 FB           2 ei
 388  8A77 28 FD        	jr z,2B
 389  8A79
 390  8A79 3A F2 89     	ld a,(Secundero)
 391  8A7C 47           	ld b,a
 392  8A7D 3A F3 89     	ld a,(Activa_recarga_cajas)
 393  8A80 B8           	cp b
 394  8A81 28 08        	jr z,8F
 395  8A83
 396  8A83 21 C8 89     	ld hl,Ctrl_1
 397  8A86 CB E6        	set 4,(hl)
 398  8A88 AF           	xor a
 399  8A89 18 EB        	jr 2B
 400  8A8B
 401  8A8B 21 C8 89     8 ld hl,Ctrl_1
 402  8A8E CB A6        	res 4,(hl)
 403  8A90 F3           	di
 404  8A91
 405  8A91 C3 14 8A     	jp 4B
 406  8A94
 407  8A94              ; -----------------------------------------------------------------------------------
 408  8A94
 409  8A94              Frame
 410  8A94
 411  8A94              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 412  8A94              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 413  8A94
 414  8A94              ; PINTAMOS.
 415  8A94
 416  8A94 3E 02            ld a,2
 417  8A96 D3 FE            out ($fe),a
 418  8A98 CD EF 95     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 419  8A9B CD 28 96     	call Extrae_foto_disparos
 420  8A9E 3E 01            ld a,1
 421  8AA0 D3 FE            out ($fe),a
 422  8AA2
 423  8AA2
 424  8AA2              ;    jr $
 425  8AA2
 426  8AA2              ; ----------------------------------------------------------------------
 427  8AA2
 428  8AA2              ; RELOJES.
 429  8AA2
 430  8AA2 21 F1 89     	ld hl,Contador_de_frames
 431  8AA5 34           	inc (hl)											; 0 - 255
 432  8AA6
 433  8AA6 3E 3C        	ld a,60
 434  8AA8 BE           	cp (hl)
 435  8AA9 20 22        	jr nz,13F
 436  8AAB
 437  8AAB 36 00        	ld (hl),0
 438  8AAD
 439  8AAD 21 F2 89     	ld hl,Secundero
 440  8AB0 34           	inc (hl)
 441  8AB1
 442  8AB1 7E           	ld a,(hl)
 443  8AB2 E6 01        	and %00000001
 444  8AB4 20 10        	jr nz,20F
 445  8AB6
 446  8AB6 3A D2 89     	ld a,(Numero_parcial_de_entidades)
 447  8AB9 47           	ld b,a
 448  8ABA 3A D3 89     	ld a,(Entidades_en_curso)
 449  8ABD B8           	cp b
 450  8ABE 28 06        	jr z,20F
 451  8AC0 30 04        	jr nc,20F
 452  8AC2
 453  8AC2 3C           	inc a
 454  8AC3 32 D3 89     	ld (Entidades_en_curso),a
 455  8AC6
 456  8AC6 3E 3C        20 ld a,60
 457  8AC8 BE           	cp (hl)
 458  8AC9 20 02        	jr nz,13F
 459  8ACB
 460  8ACB 36 00        	ld (hl),0
 461  8ACD
 462  8ACD 21 F4 89     13 ld hl,Habilita_disparo_Amadeus
 463  8AD0 11 F6 89     	ld de,Temporiza_disparo_Amadeus
 464  8AD3 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 465  8AD6
 466  8AD6 21 F7 89     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 467  8AD9 11 F9 89     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 468  8ADC CD D5 7F     	call Habilita_disparos
 469  8ADF
 470  8ADF              ; COLISIONES.
 471  8ADF
 472  8ADF CD D1 91     	call Selector_de_impactos
 473  8AE2
 474  8AE2              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 475  8AE2              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 476  8AE2              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 477  8AE2
 478  8AE2 AF           	xor a
 479  8AE3 32 E6 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 480  8AE6
 481  8AE6 CD 92 8C     	call Inicia_punteros_de_cajas
 482  8AE9 CD 6F 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 483  8AEC              ; 														; _ en DRAW.
 484  8AEC 3A 8A 89     	ld a,(Filas)
 485  8AEF A7           	and a
 486  8AF0 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 487  8AF2 CD 81 8D     	call Incrementa_punteros_de_cajas
 488  8AF5 18 F2        	jr 12B
 489  8AF7
 490  8AF7              ; ---------------------------------------------------------------------------------------
 491  8AF7
 492  8AF7 CD 4F 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 493  8AFA 21 00 70     	ld hl,Album_de_fotos
 494  8AFD 22 DD 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 495  8B00              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 496  8B00 3A D2 89     	ld a,(Numero_parcial_de_entidades)
 497  8B03 47               ld b,a
 498  8B04 A7           	and a
 499  8B05 20 17        	jr nz,2F
 500  8B07
 501  8B07 21 C8 89     	ld hl,Ctrl_1
 502  8B0A CB 66        	bit 4,(hl)
 503  8B0C C2 92 8B     	jp nz,4F
 504  8B0F
 505  8B0F 21 C8 89     	ld hl,Ctrl_1
 506  8B12 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 507  8B14 3A F2 89     	ld a,(Secundero)
 508  8B17 3C           	inc a
 509  8B18 32 F3 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 510  8B1B
 511  8B1B C3 92 8B     	jp 4F
 512  8B1E
 513  8B1E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 514  8B1E
 515  8B1E 3A D3 89     2 ld a,(Entidades_en_curso)
 516  8B21 A7           	and a
 517  8B22 28 6E        	jr z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 518  8B24 47           	ld b,a												; Entidades en curso en B.
 519  8B25
 520  8B25              ; Código que ejecutamos con cada entidad:
 521  8B25              ; Impacto ???
 522  8B25
 523  8B25 C5           15 push bc 												; Nº de entidades en curso.
 524  8B26
 525  8B26 3A A3 89     	ld a,(Impacto)
 526  8B29 A7           	and a
 527  8B2A 28 25        	jr z,8F
 528  8B2C
 529  8B2C              ; Hay Impacto en esta entidad.
 530  8B2C
 531  8B2C CD 49 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 532  8B2F
 533  8B2F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 534  8B2F
 535  8B2F 3A C6 89     	ld a,(Ctrl_2)
 536  8B32 CB 4F        	bit 1,a
 537  8B34 20 3D        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 538  8B36
 539  8B36 3A 92 89     	ld a,(CTRL_DESPLZ)
 540  8B39 A7           	and a
 541  8B3A 20 08        	jr nz,21F
 542  8B3C
 543  8B3C 21 7C 84     	ld hl,Indice_Explosion_2x2-2
 544  8B3F 22 98 89     	ld (Puntero_DESPLZ_der),hl
 545  8B42 18 06        	jr 22F
 546  8B44
 547  8B44 21 E6 83     21 ld hl,Indice_Explosion_2x3-2
 548  8B47 22 98 89     	ld (Puntero_DESPLZ_der),hl
 549  8B4A
 550  8B4A 21 C6 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 551  8B4D CB CE        	set 1,(hl)
 552  8B4F 18 22        	jr 7F
 553  8B51
 554  8B51              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 555  8B51              ; _con las coordenadas de la entidad almacenada en DRAW.
 556  8B51
 557  8B51 3A C8 89     8 ld a,(Ctrl_1)
 558  8B54 CB 57        	bit 2,a
 559  8B56 28 1B        	jr z,7F
 560  8B58
 561  8B58 2A E9 89     	ld hl,(Coordenadas_disparo_certero)
 562  8B5B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 563  8B5C              ;														; E contiene la coordenada_X del disparo.
 564  8B5C 2A 90 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 565  8B5F              ;														; H FILA, (Coordenada_y de la entidad).
 566  8B5F A7           	and a
 567  8B60 ED 52        	sbc hl,de
 568  8B62
 569  8B62 CD 08 92     	call Determina_resultado_comparativa
 570  8B65
 571  8B65              ;! Debug colisiones
 572  8B65 78           	ld a,b
 573  8B66 A7           	and a
 574  8B67              ;	ld a,(Cuad_objeto)
 575  8B67              ;	inc b
 576  8B67              ;	dec b
 577  8B67 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 578  8B69              ;	jr z,$
 579  8B69
 580  8B69              ;! Debug colisiones
 581  8B69
 582  8B69              ; ----- ----- -----
 583  8B69
 584  8B69 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 585  8B6B 32 A3 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 586  8B6E
 587  8B6E 21 C8 89     	ld hl,Ctrl_1
 588  8B71 CB 96        	res 2,(hl)
 589  8B73
 590  8B73              ; Limpiamos las coordenadas del disparo asesino. Ya tenemos víctima.
 591  8B73
 592  8B73              ;	ld hl,Coordenadas_disparo_certero
 593  8B73              ;	ld (hl),0
 594  8B73              ;	inc hl
 595  8B73              ;	ld (hl),0
 596  8B73
 597  8B73 CD C5 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 598  8B76
 599  8B76 3A B8 89     	ld a,(Ctrl_0)
 600  8B79 CB 67        	bit 4,a
 601  8B7B 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 602  8B7D
 603  8B7D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 604  8B7D              ; [[[
 605  8B7D CD 0A 8E     	call Detecta_disparo_entidad
 606  8B80              ; ]]]
 607  8B80 CD 59 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 608  8B83
 609  8B83 21 B8 89     	ld hl,Ctrl_0
 610  8B86 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 611  8B88 AF           	xor a
 612  8B89 32 B9 89     	ld (Obj_dibujado),a
 613  8B8C
 614  8B8C CD 34 8D     6 call Store_Restore_cajas
 615  8B8F
 616  8B8F C1           	pop bc
 617  8B90 10 93        	djnz 15B
 618  8B92
 619  8B92              ; ------------------------------------
 620  8B92
 621  8B92              ; Hemos gestionado todas las unidades.
 622  8B92              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 623  8B92
 624  8B92              ;	ld hl,Ctrl_1
 625  8B92              ;	res 2,(hl)
 626  8B92
 627  8B92              ; Limpiamos las coordenadas del disparo asesino.
 628  8B92
 629  8B92              ;	ld hl,Coordenadas_disparo_certero
 630  8B92              ;	ld (hl),0
 631  8B92              ;	inc hl
 632  8B92              ;	ld (hl),0
 633  8B92
 634  8B92              ; ------------------------------------
 635  8B92
 636  8B92              ; Tras la gestión de las entidades, ... AMADEUS.
 637  8B92
 638  8B92 CD 96 8D     4 call Restore_Amadeus
 639  8B95
 640  8B95 3A A3 89     	ld a,(Impacto)
 641  8B98 A7           	and a
 642  8B99 20 FE        	jr nz,$
 643  8B9B
 644  8B9B CD 2A 8C     	call Mov_Amadeus
 645  8B9E
 646  8B9E 3A B8 89     	ld a,(Ctrl_0)
 647  8BA1 CB 67        	bit 4,a
 648  8BA3 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 649  8BA5
 650  8BA5 CD 59 8C     	call Guarda_foto_entidad_a_pintar
 651  8BA8
 652  8BA8 21 B8 89     3 ld hl,Ctrl_0
 653  8BAB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 654  8BAD AF           	xor a
 655  8BAE 32 B9 89     	ld (Obj_dibujado),a
 656  8BB1
 657  8BB1 11 7C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 658  8BB4 CD A8 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 659  8BB7
 660  8BB7 CD 6D 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 661  8BBA
 662  8BBA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 663  8BBA
 664  8BBA CD CE 8C     	call Calcula_numero_de_disparotes
 665  8BBD CD B6 8C     9 call Calcula_numero_de_malotes
 666  8BC0
 667  8BC0 3E 04        	ld a,4
 668  8BC2 D3 FE        	out ($fe),a
 669  8BC4
 670  8BC4 C9           	ret
 671  8BC5
 672  8BC5              ; --------------------------------------------------------------------------------------------------------------
 673  8BC5              ;
 674  8BC5              ;	27/05/23
 675  8BC5
 676  8BC5              Mov_obj
 677  8BC5
 678  8BC5              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 679  8BC5
 680  8BC5 3A C6 89     	ld a,(Ctrl_2)
 681  8BC8 CB 4F        	bit 1,a
 682  8BCA 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 683  8BCC
 684  8BCC              ; Explosión:
 685  8BCC
 686  8BCC 3A C7 89     	ld a,(Frames_explosion)
 687  8BCF A7           	and a
 688  8BD0 20 11        	jr nz,4F
 689  8BD2
 690  8BD2              ; Una alimaña menos!!!!!!!!!1
 691  8BD2
 692  8BD2 CD B1 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 693  8BD5 21 D2 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 694  8BD8 35           	dec (hl)
 695  8BD9 21 D3 89     	ld hl,Entidades_en_curso
 696  8BDC 35           	dec (hl)
 697  8BDD 21 D1 89     	ld hl,Numero_de_entidades
 698  8BE0 35           	dec (hl)
 699  8BE1 18 46        	jr 3F
 700  8BE3
 701  8BE3              ; -----
 702  8BE3
 703  8BE3 2A 98 89     4 ld hl,(Puntero_DESPLZ_der)
 704  8BE6 23           	inc hl
 705  8BE7 23           	inc hl
 706  8BE8 22 98 89     	ld (Puntero_DESPLZ_der),hl
 707  8BEB CD E6 8C     	call Extrae_address
 708  8BEE 22 8E 89     	ld (Puntero_objeto),hl
 709  8BF1
 710  8BF1 21 C7 89     	ld hl,Frames_explosion
 711  8BF4 35           	dec (hl)
 712  8BF5
 713  8BF5 CD 49 8C     	call Guarda_foto_entidad_a_borrar
 714  8BF8 18 2F        	jr 3F
 715  8BFA
 716  8BFA AF           2 xor a
 717  8BFB 32 B9 89     	ld (Obj_dibujado),a
 718  8BFE 32 B8 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 719  8C01              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 720  8C01              ; 														; _de la entidad.
 721  8C01 CD 63 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 722  8C04              ;														; Obj_dibujado="0".
 723  8C04              ; Movemos Entidades malignas.
 724  8C04
 725  8C04 21 BB 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 726  8C07 34           	inc (hl)
 727  8C08 35           	dec (hl)                                            ; Salimos de la rutina.
 728  8C09 C8           	ret z
 729  8C0A
 730  8C0A CD C9 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 731  8C0D
 732  8C0D 3A B8 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 733  8C10 CB 67        	bit 4,a
 734  8C12 C8           	ret z
 735  8C13
 736  8C13              ; Ha habido desplazamiento de la entidad maligna.
 737  8C13              ; Ha llegado a zona de AMADEUS ???
 738  8C13
 739  8C13 3A 91 89     	ld a,(Coordenada_y)
 740  8C16 FE 14        	cp $14
 741  8C18 D4 9E 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 742  8C1B              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 743  8C1B              ; ---------
 744  8C1B
 745  8C1B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 746  8C1D 32 B9 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 747  8C20 CD 63 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 748  8C23 CD 7A 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 749  8C26 CD 49 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 750  8C29 C9           3 ret													; _de la misma.
 751  8C2A
 752  8C2A              ; --------------------------------------------------------------------------------------------------------------
 753  8C2A              ;
 754  8C2A              ;	29/1/23
 755  8C2A
 756  8C2A              Mov_Amadeus
 757  8C2A
 758  8C2A AF           	xor a
 759  8C2B 32 B9 89     	ld (Obj_dibujado),a
 760  8C2E CD 63 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 761  8C31              ;														; Obj_dibujado="0".
 762  8C31              ; Movemos Amadeus.
 763  8C31
 764  8C31 CD D3 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 765  8C34 3A B8 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 766  8C37 CB 67        	bit 4,a
 767  8C39 C8           	ret z
 768  8C3A
 769  8C3A              ; ---------
 770  8C3A
 771  8C3A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 772  8C3C 32 B9 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 773  8C3F CD 63 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 774  8C42 CD 7A 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 775  8C45 CD 49 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 776  8C48 C9           	ret													; _de la nave.
 777  8C49
 778  8C49              ; --------------------------------------------------------------------------------------------------------------
 779  8C49              ;
 780  8C49              ;	31/01/23
 781  8C49              ;
 782  8C49              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 783  8C49
 784  8C49              Guarda_foto_entidad_a_borrar
 785  8C49
 786  8C49 CD C5 95     	call Prepara_draw
 787  8C4C CD FF 94     	call calcula_CColumnass
 788  8C4F CD 36 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 789  8C52 CD 8B 95     	call Define_rutina_de_impresion
 790  8C55 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 791  8C58 C9           	ret
 792  8C59
 793  8C59              ; --------------------------------------------------------------------------------------------------------------
 794  8C59              ;
 795  8C59              ;	31/01/23
 796  8C59              ;
 797  8C59              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 798  8C59              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 799  8C59
 800  8C59              Guarda_foto_entidad_a_pintar
 801  8C59
 802  8C59 CD 86 8C     	call Repone_pintar
 803  8C5C CD EB 92     	call Draw
 804  8C5F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 805  8C62 C9           	ret
 806  8C63
 807  8C63              ; --------------------------------------------------------------------------------------------------------------
 808  8C63              ;
 809  8C63              ;
 810  8C63
 811  8C63 21 8A 89     Prepara_var_pintado_borrado	ld hl,Filas
 812  8C66 3A B9 89     	ld a,(Obj_dibujado)
 813  8C69 A7           	and a
 814  8C6A 28 05        	jr z,1F
 815  8C6C 11 AE 89     	ld de,Variables_de_pintado
 816  8C6F 18 03        	jr 2F
 817  8C71 11 A4 89     1 ld de,Variables_de_borrado
 818  8C74 01 08 00     2 ld bc,8
 819  8C77 ED B0        	ldir
 820  8C79 C9           	ret
 821  8C7A
 822  8C7A              ; --------------------------------------------------------------------------------------------------------------
 823  8C7A
 824  8C7A 21 A4 89     Repone_borrar ld hl,Variables_de_borrado
 825  8C7D 11 8A 89     	ld de,Filas
 826  8C80 01 08 00     	ld bc,8
 827  8C83 ED B0        	ldir
 828  8C85 C9           	ret
 829  8C86
 830  8C86 21 AE 89     Repone_pintar ld hl,Variables_de_pintado
 831  8C89 11 8A 89     	ld de,Filas
 832  8C8C 01 08 00     	ld bc,8
 833  8C8F ED B0        	ldir
 834  8C91 C9           	ret
 835  8C92
 836  8C92              ; *************************************************************************************************************************************************************
 837  8C92              ;
 838  8C92              ; 8/1/23
 839  8C92              ;
 840  8C92              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 841  8C92              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 842  8C92              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 843  8C92
 844  8C92              ; Destruye HL y DE !!!!!
 845  8C92
 846  8C92              Inicia_punteros_de_cajas
 847  8C92
 848  8C92 21 64 85     	ld hl,Indice_de_cajas
 849  8C95 CD E6 8C         call Extrae_address
 850  8C98 22 CB 89         ld (Puntero_store_caja),hl
 851  8C9B 21 66 85     	ld hl,Indice_de_cajas+2
 852  8C9E 22 CF 89     	ld (Indice_restore_caja),hl
 853  8CA1 CD E6 8C     	call Extrae_address
 854  8CA4 22 CD 89     	ld (Puntero_restore_caja),hl
 855  8CA7 C9               ret
 856  8CA8
 857  8CA8              ; *************************************************************************************************************************************************************
 858  8CA8              ;
 859  8CA8              ; 8/1/23
 860  8CA8              ;
 861  8CA8              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 862  8CA8
 863  8CA8 21 FC 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 864  8CAB 22 E2 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 865  8CAE C9           	ret
 866  8CAF 21 E4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 867  8CB2 22 E4 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 868  8CB5 C9           	ret
 869  8CB6
 870  8CB6              ; -------------------------------------------------------------------------------------------------------------
 871  8CB6              ;
 872  8CB6              ; 28/2/23
 873  8CB6              ;
 874  8CB6
 875  8CB6              Calcula_numero_de_malotes
 876  8CB6
 877  8CB6 21 00 70     	ld hl,Album_de_fotos
 878  8CB9 EB           	ex de,hl
 879  8CBA 2A DD 89     	ld hl,(Stack_snapshot)
 880  8CBD
 881  8CBD 06 00        	ld b,0
 882  8CBF 7D           	ld a,l
 883  8CC0 93           	sub e
 884  8CC1 28 07        	jr z,1F
 885  8CC3
 886  8CC3              ; Nº de malotes no es "0".
 887  8CC3
 888  8CC3 D6 06        2 sub 6
 889  8CC5 04           	inc b
 890  8CC6 A7           	and a
 891  8CC7 20 FA        	jr nz,2B
 892  8CC9 78           	ld a,b
 893  8CCA
 894  8CCA 32 D4 89     1 ld (Numero_de_malotes),a
 895  8CCD C9           	ret
 896  8CCE
 897  8CCE              ; -------------------------------------------------------------------------------------------------------------
 898  8CCE              ;
 899  8CCE              ; 28/2/23
 900  8CCE              ;
 901  8CCE
 902  8CCE              Calcula_numero_de_disparotes
 903  8CCE
 904  8CCE 21 85 70     	ld hl,Album_de_fotos_disparos
 905  8CD1 EB           	ex de,hl
 906  8CD2 2A DF 89     	ld hl,(Stack_snapshot_disparos)
 907  8CD5
 908  8CD5 06 00        	ld b,0
 909  8CD7 7D           	ld a,l
 910  8CD8 93           	sub e
 911  8CD9 28 07        	jr z,1F
 912  8CDB
 913  8CDB              ; Nº de malotes no es "0".
 914  8CDB
 915  8CDB D6 06        2 sub 6
 916  8CDD 04           	inc b
 917  8CDE A7           	and a
 918  8CDF 20 FA        	jr nz,2B
 919  8CE1 78           	ld a,b
 920  8CE2
 921  8CE2 32 E1 89     1 ld (Numero_de_disparotes),a
 922  8CE5 C9           	ret
 923  8CE6              ; *************************************************************************************************************************************************************
 924  8CE6              ;
 925  8CE6              ; 20/10/22
 926  8CE6              ;
 927  8CE6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 928  8CE6              ;
 929  8CE6              ; Destruye el puntero y DE !!!!!
 930  8CE6
 931  8CE6 5E           Extrae_address ld e,(hl)
 932  8CE7 23           	inc hl
 933  8CE8 56           	ld d,(hl)
 934  8CE9 2B           	dec hl
 935  8CEA EB           	ex de,hl
 936  8CEB C9           	ret
 937  8CEC
 938  8CEC              ; *************************************************************************************************************************************************************
 939  8CEC              ;
 940  8CEC              ;	7/2/23
 941  8CEC              ;
 942  8CEC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 943  8CEC              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 944  8CEC              ;
 945  8CEC              ;   Destruye HL y BC !!!!!,
 946  8CEC              ;
 947  8CEC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 948  8CEC              ;					"0" ..... Izquierda.
 949  8CEC
 950  8CEC              Inicia_Puntero_objeto
 951  8CEC
 952  8CEC 3A 9E 89     	ld a,(Cuad_objeto)
 953  8CEF E6 01        	and 1
 954  8CF1 F5           	push af
 955  8CF2 CC 10 8D     	call z,Inicia_puntero_objeto_izq
 956  8CF5 F1           	pop af
 957  8CF6 28 2B        	jr z,1F
 958  8CF8 CD FD 8C     	call Inicia_puntero_objeto_der
 959  8CFB 18 26        	jr 1F
 960  8CFD
 961  8CFD              ; Arrancamos desde la parte izquierda de la pantalla.
 962  8CFD              ; Iniciamos (Indice_Sprite_der).
 963  8CFD
 964  8CFD 2A 94 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 965  8D00 22 98 89     	ld (Puntero_DESPLZ_der),hl
 966  8D03 CD E6 8C     	call Extrae_address
 967  8D06 22 8E 89     	ld (Puntero_objeto),hl
 968  8D09
 969  8D09 2A 96 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 970  8D0C 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 971  8D0F C9           	ret
 972  8D10
 973  8D10              ; Arrancamos desde la parte derecha de la pantalla.
 974  8D10              ; Iniciamos (Indice_Sprite_izq).
 975  8D10
 976  8D10 2A 96 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 977  8D13 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 978  8D16 CD E6 8C     	call Extrae_address
 979  8D19 22 8E 89     	ld (Puntero_objeto),hl
 980  8D1C
 981  8D1C 2A 94 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 982  8D1F 22 98 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 983  8D22 C9           	ret
 984  8D23
 985  8D23              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 986  8D23
 987  8D23 21 38 83     1 ld hl,Amadeus
 988  8D26 ED 4B 8E 89  	ld bc,(Puntero_objeto)
 989  8D2A B7 ED 42     	sub hl,bc
 990  8D2D C0           	ret nz
 991  8D2E 21 B8 89     	ld hl,Ctrl_0
 992  8D31 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 993  8D33 C9           	ret 												; _de nuestra nave en los extremos.
 994  8D34
 995  8D34              ; *************************************************************************************************************************************************************
 996  8D34              ;
 997  8D34              ;	14/5/23
 998  8D34              ;
 999  8D34              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1000  8D34              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1001  8D34
1002  8D34              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1003  8D34              ;	_de la 2ª y 3ª entidad respectivamente.
1004  8D34
1005  8D34              Store_Restore_cajas
1006  8D34
1007  8D34 E5           	push hl
1008  8D35 D5           	push de
1009  8D36 C5            	push bc
1010  8D37
1011  8D37              ;	STORE !!!!!
1012  8D37              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1013  8D37
1014  8D37 21 8A 89     	ld hl,Filas
1015  8D3A ED 5B CB 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1016  8D3E 01 3E 00     	ld bc,62
1017  8D41 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1018  8D43
1019  8D43              ; 	Entidad_sospechosa. 20/4/23
1020  8D43
1021  8D43 3A A3 89     	ld a,(Impacto)
1022  8D46 A7           	and a
1023  8D47 28 0C        	jr z,1F
1024  8D49
1025  8D49 2A CB 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1026  8D4C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1027  8D4F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1028  8D50 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1029  8D52 22 E7 89     	ld (Entidad_sospechosa_de_colision),hl
1030  8D55
1031  8D55              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1032  8D55
1033  8D55 2A CD 89     1 ld hl,(Puntero_restore_caja)
1034  8D58 7E           	ld a,(hl)
1035  8D59 A7           	and a
1036  8D5A F5           	push af
1037  8D5B 28 08        	jr z,2F
1038  8D5D
1039  8D5D 11 8A 89     	ld de,Filas
1040  8D60 01 3E 00     	ld bc,62
1041  8D63 ED B0        	ldir
1042  8D65
1043  8D65 CD 81 8D     2 call Incrementa_punteros_de_cajas
1044  8D68 F1           	pop af
1045  8D69 28 EA        	jr z,1B
1046  8D6B
1047  8D6B C1           	pop bc
1048  8D6C D1           	pop de
1049  8D6D E1           	pop hl
1050  8D6E
1051  8D6E C9           	ret
1052  8D6F
1053  8D6F              ; **************************************************************************************************
1054  8D6F              ;
1055  8D6F              ;	12/05/23
1056  8D6F              ;
1057  8D6F              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1058  8D6F
1059  8D6F E5           Restore_entidad push hl
1060  8D70 D5           	push de
1061  8D71 C5            	push bc
1062  8D72
1063  8D72 2A CB 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1064  8D75 11 8A 89     	ld de,Filas
1065  8D78 01 3E 00     	ld bc,62
1066  8D7B ED B0        	ldir
1067  8D7D
1068  8D7D C1           	pop bc
1069  8D7E D1           	pop de
1070  8D7F E1           	pop hl
1071  8D80 C9           	ret
1072  8D81
1073  8D81
1074  8D81              ; **************************************************************************************************
1075  8D81              ;
1076  8D81              ;	08/05/23
1077  8D81              ;
1078  8D81              ;	Incrementamos los dos punteros de entidades. (+1).
1079  8D81
1080  8D81 2A CD 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1081  8D84 22 CB 89     	ld (Puntero_store_caja),hl
1082  8D87 2A CF 89     	ld hl,(Indice_restore_caja)
1083  8D8A 23           	inc hl
1084  8D8B 23           	inc hl
1085  8D8C 22 CF 89     	ld (Indice_restore_caja),hl
1086  8D8F CD E6 8C         call Extrae_address
1087  8D92 22 CD 89         ld (Puntero_restore_caja),hl
1088  8D95 C9               ret
1089  8D96
1090  8D96              ; **************************************************************************************************
1091  8D96              ;
1092  8D96              ;	25/01/23
1093  8D96              ;
1094  8D96              ;	Restore_Amadeus
1095  8D96              ;
1096  8D96              ;	Cargamos en DRAW los parámetros de Amadeus.
1097  8D96              ;
1098  8D96
1099  8D96 E5           Restore_Amadeus	push hl
1100  8D97 D5           	push de
1101  8D98 C5            	push bc
1102  8D99 21 7C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1103  8D9C 11 8A 89     	ld de,Filas
1104  8D9F 01 3E 00     	ld bc,62
1105  8DA2 ED B0        	ldir
1106  8DA4 C1           	pop bc
1107  8DA5 D1           	pop de
1108  8DA6 E1           	pop hl
1109  8DA7 C9           	ret
1110  8DA8
1111  8DA8              ; *************************************************************************************************************************************************************
1112  8DA8              ;
1113  8DA8              ;	29/04/23
1114  8DA8              ;
1115  8DA8              ;	Store_Amadeus
1116  8DA8              ;
1117  8DA8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1118  8DA8              ;
1119  8DA8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1120  8DA8              ;
1121  8DA8              ;	DESTRUYE: HL y BC y DE.
1122  8DA8
1123  8DA8 21 8A 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1124  8DAB 01 3E 00     	ld bc,62
1125  8DAE ED B0        	ldir
1126  8DB0 C9           	ret
1127  8DB1
1128  8DB1              ; -----------------------------------------------------------
1129  8DB1              ;
1130  8DB1              ;	27/04/23
1131  8DB1              ;
1132  8DB1              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1133  8DB1              ;
1134  8DB1              ;	Destruye: HL,BC,DE,A
1135  8DB1
1136  8DB1 21 8A 89     Borra_datos_entidad ld hl,Filas
1137  8DB4 01 3D 00     	ld bc,61
1138  8DB7 AF           	xor a
1139  8DB8 77           	ld (hl),a
1140  8DB9 11 8B 89     	ld de,Filas+1
1141  8DBC ED B0        	ldir
1142  8DBE C9           	ret
1143  8DBF
1144  8DBF              ; -----------------------------------------------------------
1145  8DBF
1146  8DBF              ; Teclado.
1147  8DBF
1148  8DBF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1149  8DC1 DB FE        	in a,($fe)
1150  8DC3 E6 01        	and $01
1151  8DC5 28 02        	jr z,1f
1152  8DC7 18 F6        	jr Pulsa_ENTER
1153  8DC9 C9           1 ret
1154  8DCA
1155  8DCA              ; **************************************************************************************************
1156  8DCA              ;
1157  8DCA              ; Temporización.
1158  8DCA
1159  8DCA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1160  8DCA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1161  8DCA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1162  8DCA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1163  8DCA
1164  8DCA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1165  8DCA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1166  8DCA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1167  8DCA
1168  8DCA              ; A partir de $4f61 no hace falta DELAY.
1169  8DCA
1170  8DCA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1171  8DCA
1172  8DCA 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1173  8DCD 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1174  8DCE 78           	LD A,B
1175  8DCF A7           	AND A
1176  8DD0 20 FB        	JR NZ,wait
1177  8DD2 C9           	RET
1178  8DD3
1179  8DD3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1180  8DD3              ;
1181  8DD3              ;	5/3/23
1182  8DD3              ;
1183  8DD3              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1184  8DD3
1185  8DD3              Movimiento_Amadeus
1186  8DD3
1187  8DD3              ; Disparo.
1188  8DD3
1189  8DD3 3A F4 89     	ld a,(Habilita_disparo_Amadeus)
1190  8DD6 A7           	and a
1191  8DD7 20 02        	jr nz,1F
1192  8DD9 18 15        	jr 2F
1193  8DDB
1194  8DDB 3E F7        1 ld a,$f7													; "5" para disparar.
1195  8DDD DB FE        	in a,($fe)
1196  8DDF E6 10        	and $10
1197  8DE1
1198  8DE1 F5           	push af
1199  8DE2 CC 1A 8E     	call z,Genera_disparo
1200  8DE5 F1           	pop af
1201  8DE6 20 08        	jr nz,2F
1202  8DE8
1203  8DE8 3A F4 89     	ld a,(Habilita_disparo_Amadeus)
1204  8DEB EE 01        	xor 1
1205  8DED 32 F4 89     	ld (Habilita_disparo_Amadeus),a
1206  8DF0
1207  8DF0 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1208  8DF2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1209  8DF4 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1210  8DF6 CC 69 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1211  8DF9 3E F7        	ld a,$f7
1212  8DFB DB FE        	in a,($fe)
1213  8DFD E6 01        	and $01
1214  8DFF C8           	ret z
1215  8E00
1216  8E00 3E F7        	ld a,$f7
1217  8E02 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1218  8E04 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1219  8E06 CC 4B 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1220  8E09 C9           	ret
1221  8E0A
1222  8E0A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1223  8E0A              ;
1224  8E0A              ;	Rutina provisional para que los malotes cagen balas.
1225  8E0A
1226  8E0A              Detecta_disparo_entidad
1227  8E0A
1228  8E0A 3A F7 89     	ld a,(Habilita_disparo_entidad)
1229  8E0D A7           	and a
1230  8E0E C8           	ret z
1231  8E0F 3E 7F        	ld a,$7f
1232  8E11 DB FE        	in a,($fe)
1233  8E13 E6 01        	and 1
1234  8E15 C0           	ret nz
1235  8E16 CD 1A 8E     	call Genera_disparo
1236  8E19 C9           	ret
1237  8E1A
1238  8E1A              ; ---------------------------------------------------------------
1239  8E1A
1240  8E1A              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E1A              ; ******************************************************************************************************************************************************************************************
   2+ 8E1A              ;
   3+ 8E1A              ;   17/04/23
   4+ 8E1A              ;
   5+ 8E1A              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E1A              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E1A              ;
   8+ 8E1A              ;
   9+ 8E1A              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E1A              ;
  11+ 8E1A              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E1A              ;               _ hacen las entidades hacia abajo.
  13+ 8E1A              ;
  14+ 8E1A              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E1A              ;
  16+ 8E1A              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E1A              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E1A              ;
  19+ 8E1A              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E1A              ;           _ la bala.
  21+ 8E1A              ;
  22+ 8E1A              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E1A              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E1A              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E1A              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E1A              ;           _ en el momento de generarse la bala)).
  27+ 8E1A
  28+ 8E1A              Genera_disparo
  29+ 8E1A
  30+ 8E1A              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E1A              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E1A              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E1A              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E1A              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E1A              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E1A              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E1A
  38+ 8E1A              ; Exclusiones:
  39+ 8E1A
  40+ 8E1A 3A C2 89         ld a,(Columnas)
  41+ 8E1D 47               ld b,a
  42+ 8E1E 3A 8B 89         ld a,(Columns)
  43+ 8E21 B8               cp b
  44+ 8E22 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E23
  46+ 8E23              ; ----- ----- -----
  47+ 8E23
  48+ 8E23 3A B8 89         ld a,(Ctrl_0)
  49+ 8E26 CB 77            bit 6,a
  50+ 8E28 20 06            jr nz,14F
  51+ 8E2A
  52+ 8E2A 3A 91 89         ld a,(Coordenada_y)
  53+ 8E2D FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E2F D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E30
  56+ 8E30 21 00 80     14 ld hl,Indice_disparo
  57+ 8E33 3A 92 89         ld a,(CTRL_DESPLZ)
  58+ 8E36 4F               ld c,a
  59+ 8E37 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E39              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E39              ;                                            ""        ""       "f9", B="1"
  62+ 8E39              ;                                            ""        ""       "fb", B="2"
  63+ 8E39              ;                                            ""        ""       "fb", B="3"
  64+ 8E39 A7               and a
  65+ 8E3A 28 10            jr z,1F
  66+ 8E3C E6 01            and 1
  67+ 8E3E C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E3F
  69+ 8E3F 79               ld a,c
  70+ 8E40 16 F9            ld d,$f9
  71+ 8E42 23           2 inc hl
  72+ 8E43 23               inc hl
  73+ 8E44 04               inc b
  74+ 8E45 BA               cp d
  75+ 8E46 28 04            jr z,1F
  76+ 8E48 14               inc d
  77+ 8E49 14               inc d
  78+ 8E4A 18 F6            jr 2B
  79+ 8E4C
  80+ 8E4C CD E6 8C     1 call Extrae_address
  81+ 8E4F E5               push hl
  82+ 8E50 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E52 DD 21 64 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E56
  85+ 8E56              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E56              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E56
  88+ 8E56 3A B8 89         ld a,(Ctrl_0)
  89+ 8E59 CB 77            bit 6,a
  90+ 8E5B 20 04            jr nz,19F
  91+ 8E5D
  92+ 8E5D AF               xor a
  93+ 8E5E 32 F7 89         ld (Habilita_disparo_entidad),a
  94+ 8E61
  95+ 8E61 3A 9E 89     19 ld a,(Cuad_objeto)
  96+ 8E64 FE 02            cp 2
  97+ 8E66 38 66            jr c,3F
  98+ 8E68 28 64            jr z,3F
  99+ 8E6A
 100+ 8E6A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E6A
 102+ 8E6A E6 01            and 1
 103+ 8E6C 28 30            jr z,4F
 104+ 8E6E
 105+ 8E6E              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E6E              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E6E              ;
 108+ 8E6E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E6E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E6E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E6E
 112+ 8E6E 2A 8C 89     	ld hl,(Posicion_actual)
 113+ 8E71
 114+ 8E71              ;   Amadeus o entidad ???.
 115+ 8E71
 116+ 8E71 3A B8 89         ld a,(Ctrl_0)
 117+ 8E74 CB 77            bit 6,a
 118+ 8E76 28 0A            jr z,8F
 119+ 8E78
 120+ 8E78              ; 	Dispara Amadeus.
 121+ 8E78
 122+ 8E78 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E7A CD E0 95         call PreviousScan
 124+ 8E7D CD E0 95         call PreviousScan
 125+ 8E80
 126+ 8E80              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E80              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E80              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E80              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E80
 131+ 8E80 18 11            jr 10F
 132+ 8E82
 133+ 8E82              ; 	Dispara Entidad.
 134+ 8E82
 135+ 8E82 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E85              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E85
 138+ 8E85              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E85              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E85
 141+ 8E85 C5               push bc
 142+ 8E86 06 10            ld b,16
 143+ 8E88 CD D1 95     9 call NextScan
 144+ 8E8B 10 FB            djnz 9B
 145+ 8E8D C1               pop bc
 146+ 8E8E CD F8 8E         call Ajusta_disparo_parte_izquierda
 147+ 8E91 18 06            jr 17F
 148+ 8E93
 149+ 8E93              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8E93              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8E93              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8E93              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8E93
 154+ 8E93 CD F8 8E     10 call Ajusta_disparo_parte_izquierda
 155+ 8E96 CD 6D 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8E99              ;                                                      ; _al generar el disparo.
 157+ 8E99
 158+ 8E99              ; 	LLegados a este punto tendremos:
 159+ 8E99              ;
 160+ 8E99              ;       Puntero_objeto_disparo en IY.
 161+ 8E99              ;       Rutinas_de_impresion en IX.
 162+ 8E99              ;       Puntero_de_impresion en HL.
 163+ 8E99              ;       Impacto/Dirección en BC.
 164+ 8E99
 165+ 8E99 CD 00 8F     17 call Almacena_disparo
 166+ 8E9C 18 52            jr 6F                                             ; RET.
 167+ 8E9E
 168+ 8E9E              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8E9E              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8E9E              ;
 171+ 8E9E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8E9E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8E9E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8E9E
 175+ 8E9E 2A 8C 89     4 ld hl,(Posicion_actual)
 176+ 8EA1
 177+ 8EA1              ;   Amadeus o entidad ???.
 178+ 8EA1
 179+ 8EA1 3A B8 89         ld a,(Ctrl_0)
 180+ 8EA4 CB 77            bit 6,a
 181+ 8EA6 28 0A            jr z,11F
 182+ 8EA8
 183+ 8EA8              ; 	Dispara Amadeus.
 184+ 8EA8
 185+ 8EA8 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EAA CD E0 95         call PreviousScan
 187+ 8EAD CD E0 95         call PreviousScan
 188+ 8EB0
 189+ 8EB0              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EB0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EB0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EB0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EB0
 194+ 8EB0 18 11            jr 13F
 195+ 8EB2
 196+ 8EB2              ; 	Dispara Entidad.
 197+ 8EB2
 198+ 8EB2 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EB5              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EB5
 201+ 8EB5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EB5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EB5
 204+ 8EB5 C5               push bc
 205+ 8EB6 06 10            ld b,16
 206+ 8EB8 CD D1 95     12 call NextScan
 207+ 8EBB 10 FB            djnz 12B
 208+ 8EBD C1               pop bc
 209+ 8EBE
 210+ 8EBE CD F1 8E         call Ajusta_disparo_parte_derecha
 211+ 8EC1 18 06            jr 18F
 212+ 8EC3
 213+ 8EC3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8EC3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8EC3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8EC3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8EC3
 218+ 8EC3 CD F1 8E     13 call Ajusta_disparo_parte_derecha
 219+ 8EC6 CD 6D 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EC9              ;                                                       ; _al generar el disparo.
 221+ 8EC9
 222+ 8EC9              ; LLegados a este punto tendremos:
 223+ 8EC9              ;
 224+ 8EC9              ;       Puntero_objeto_disparo en IY.
 225+ 8EC9              ;       Rutinas_de_impresion en IX.
 226+ 8EC9              ;       Puntero_de_impresion en HL.
 227+ 8EC9              ;       Impacto/Dirección en BC.
 228+ 8EC9
 229+ 8EC9 CD 00 8F     18 call Almacena_disparo
 230+ 8ECC 18 22            jr 6F                                               ; RET.
 231+ 8ECE
 232+ 8ECE              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8ECE
 234+ 8ECE 28 11        3 jr z,5F
 235+ 8ED0
 236+ 8ED0              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8ED0              ;
 238+ 8ED0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8ED0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8ED0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8ED0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8ED0
 243+ 8ED0              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8ED0              ;	   ""        ""       "f9", B="1"
 245+ 8ED0              ;	   ""        ""       "fb", B="2"
 246+ 8ED0              ; 	   ""        ""       "fb", B="3"
 247+ 8ED0
 248+ 8ED0 2A 8C 89     	ld hl,(Posicion_actual)
 249+ 8ED3 CD D1 95     	call NextScan
 250+ 8ED6
 251+ 8ED6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8ED6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8ED6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8ED6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8ED6
 256+ 8ED6 CD F8 8E         call Ajusta_disparo_parte_izquierda
 257+ 8ED9
 258+ 8ED9              ; 	No se produce impacto. B="$80"
 259+ 8ED9              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8ED9
 261+ 8ED9 01 80 80         ld bc,$8080
 262+ 8EDC
 263+ 8EDC              ; 	LLegados a este punto tendremos:
 264+ 8EDC              ;
 265+ 8EDC              ;       Puntero_objeto_disparo en IY.
 266+ 8EDC              ;       Rutinas_de_impresion en IX.
 267+ 8EDC              ;       Puntero_de_impresion en HL.
 268+ 8EDC              ;       Impacto/Dirección en BC.
 269+ 8EDC
 270+ 8EDC CD 00 8F         call Almacena_disparo
 271+ 8EDF 18 0F            jr 6F                                           ; RET.
 272+ 8EE1
 273+ 8EE1              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EE1              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EE1              ;
 276+ 8EE1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EE1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EE1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EE1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EE1
 281+ 8EE1 2A 8C 89     5 ld hl,(Posicion_actual)
 282+ 8EE4 CD D1 95     	call NextScan
 283+ 8EE7
 284+ 8EE7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EE7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EE7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EE7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EE7
 289+ 8EE7 CD F1 8E         call Ajusta_disparo_parte_derecha
 290+ 8EEA
 291+ 8EEA              ; 	No se produce impacto. B="$80"
 292+ 8EEA              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EEA
 294+ 8EEA 01 80 80     15 ld bc,$8080
 295+ 8EED
 296+ 8EED              ; 	LLegados a este punto tendremos:
 297+ 8EED              ;
 298+ 8EED              ;       Puntero_objeto_disparo en IY.
 299+ 8EED              ;       Rutinas_de_impresion en IX.
 300+ 8EED              ;       Puntero_de_impresion en HL.
 301+ 8EED              ;       Impacto/Dirección en BC.
 302+ 8EED
 303+ 8EED CD 00 8F         call Almacena_disparo
 304+ 8EF0
 305+ 8EF0 C9           6 ret
 306+ 8EF1
 307+ 8EF1              ; ----------------------------------------------------------------
 308+ 8EF1              ;
 309+ 8EF1              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8EF1              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8EF1              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8EF1
 313+ 8EF1 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8EF2 FE 02            cp 2
 315+ 8EF4 38 01            jr c,1F
 316+ 8EF6 23               inc hl
 317+ 8EF7 C9           1 ret
 318+ 8EF8
 319+ 8EF8 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8EF9 FE 01        	cp 1
 321+ 8EFB 20 01        	jr nz,1F
 322+ 8EFD 2B           	dec hl
 323+ 8EFE 2B           1 dec hl
 324+ 8EFF C9               ret
 325+ 8F00
 326+ 8F00              ; ----------------------------------------------------------------
 327+ 8F00              ;
 328+ 8F00              ;   25/02/23
 329+ 8F00              ;
 330+ 8F00              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F00              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F00              ;
 333+ 8F00              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F00              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F00
 336+ 8F00              Almacena_disparo
 337+ 8F00
 338+ 8F00 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F01 F1               pop af
 340+ 8F02 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F03
 342+ 8F03 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F04 E6 01            and 1
 344+ 8F06 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F08              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F08              ; 	Dispara AMADEUS.
 347+ 8F08
 348+ 8F08              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F08              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F08              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F08              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F08
 353+ 8F08 C5               push bc
 354+ 8F09 01 E8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F0C 2A E4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F0F A7               and a
 357+ 8F10 ED 42            sbc hl,bc
 358+ 8F12 CC AF 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F15 C1               pop bc
 360+ 8F16 28 54            jr z,4F
 361+ 8F18
 362+ 8F18 2A E4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F1B 23               inc hl
 364+ 8F1C 23               inc hl
 365+ 8F1D 22 E4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F20              ;                                                   ; _ Disparo_(+1).
 367+ 8F20 18 18            jr 2F
 368+ 8F22
 369+ 8F22              ; Dispara una entidad.
 370+ 8F22
 371+ 8F22 C5           1 push bc
 372+ 8F23 01 10 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F26 2A E2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F29 A7               and a
 375+ 8F2A ED 42            sbc hl,bc
 376+ 8F2C CC A8 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F2F C1               pop bc
 378+ 8F30 28 3A            jr z,4F
 379+ 8F32
 380+ 8F32 2A E2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F35 23               inc hl
 382+ 8F36 23               inc hl
 383+ 8F37 22 E2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F3A              ;                                                   ; _ Disparo_(+1).
 385+ 8F3A CD E6 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F3D              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F3D              ;
 388+ 8F3D              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F3D              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F3D              ;                                                     Puntero_de_impresion en HL.
 391+ 8F3D              ;                                                     Impacto/Dirección en BC.
 392+ 8F3D
 393+ 8F3D 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F3E 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F3F 23               inc hl                                          ; _ al siguiente.
 396+ 8F40 A7               and a
 397+ 8F41 20 C0            jr nz,3B
 398+ 8F43
 399+ 8F43 08               ex af,af
 400+ 8F44 ED 73 D9 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F48 F9               ld sp,hl
 402+ 8F49
 403+ 8F49 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F4B F5               push af                                         ; Puntero de impresión.
 405+ 8F4C FD E5            push iy                                         ; Puntero objeto.
 406+ 8F4E C5               push bc                                         ; Control.
 407+ 8F4F
 408+ 8F4F ED 7B D9 89      ld sp,(Stack)
 409+ 8F53
 410+ 8F53              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F53
 412+ 8F53 21 C8 89     	ld hl,Ctrl_1
 413+ 8F56 CB C6        	set 0,(hl)
 414+ 8F58
 415+ 8F58 DD E5        	push ix
 416+ 8F5A E1               pop hl
 417+ 8F5B F5               push af
 418+ 8F5C DD E1            pop ix
 419+ 8F5E
 420+ 8F5E CD A0 7F     	call Guarda_foto_registros
 421+ 8F61
 422+ 8F61 21 C8 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F64 CB 86        	res 0,(hl)
 424+ 8F66
 425+ 8F66              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F66              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F66
 428+ 8F66 CD AF 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F69 CD A8 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F6C
 431+ 8F6C C9           4 ret
 432+ 8F6D
 433+ 8F6D              ; ----------------------------------------------------------------
 434+ 8F6D              ;
 435+ 8F6D              ;   4/3/23
 436+ 8F6D              ;
 437+ 8F6D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F6D              ;   _ al generarse el disparo.
 439+ 8F6D              ;
 440+ 8F6D              ;       "$80" ..... No se produce colisión.
 441+ 8F6D              ;       "$81" ..... Se produce colisión.
 442+ 8F6D
 443+ 8F6D              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F6D              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F6D
 446+ 8F6D
 447+ 8F6D FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F6F E5               push hl                                        ; Puntero de impresión.
 449+ 8F70
 450+ 8F70 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F72 CD 8E 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F75
 453+ 8F75 7B               ld a,e
 454+ 8F76 E6 01            and 1
 455+ 8F78 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F7A
 457+ 8F7A E1               pop hl
 458+ 8F7B E5               push hl
 459+ 8F7C CD D1 95         call NextScan
 460+ 8F7F
 461+ 8F7F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F80 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F82 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F84              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F84 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F86 CD 8E 8F         call Bucle_2
 467+ 8F89
 468+ 8F89 43           2 ld b,e
 469+ 8F8A E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F8B FD E1            pop iy
 471+ 8F8D C9               ret
 472+ 8F8E
 473+ 8F8E               ; ---------- ----------
 474+ 8F8E
 475+ 8F8E 06 02        Bucle_2 ld b,2
 476+ 8F90 FD 7E 00     2 ld a,(iy)
 477+ 8F93 A6               and (hl)
 478+ 8F94 28 02            jr z,1F
 479+ 8F96 1E 81            ld e,$81
 480+ 8F98 23           1 inc hl
 481+ 8F99 FD 23            inc iy
 482+ 8F9B 10 F3            djnz 2B
 483+ 8F9D C9               ret
 484+ 8F9E
 485+ 8F9E              ; -------------------------------------------------------------------------------------------------------------
 486+ 8F9E              ;
 487+ 8F9E              ;   11/04/23
 488+ 8F9E              ;
 489+ 8F9E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8F9E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8F9E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8F9E              ;
 493+ 8F9E              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8F9E
 495+ 8F9E              Compara_coordenadas_X
 496+ 8F9E
 497+ 8F9E              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8F9E              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8F9E
 500+ 8F9E              ; Preparamos registros:
 501+ 8F9E
 502+ 8F9E 21 90 89         ld hl,Filas+6
 503+ 8FA1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FA2 23               inc hl
 505+ 8FA3 23               inc hl
 506+ 8FA4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FA5 43               ld b,e
 508+ 8FA6 21 9E 89         ld hl,Filas+20
 509+ 8FA9 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FAA 21 EE 89         ld hl,Coordenadas_X_Entidad
 511+ 8FAD CD BE 91         call Guarda_coordenadas_X
 512+ 8FB0
 513+ 8FB0              ; Preparamos registros:
 514+ 8FB0
 515+ 8FB0 21 82 85         ld hl,Amadeus_db+6
 516+ 8FB3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FB4 23               inc hl
 518+ 8FB5 23               inc hl
 519+ 8FB6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FB7 7B               ld a,e
 521+ 8FB8 08               ex af,af'
 522+ 8FB9 21 90 85         ld hl,Amadeus_db+20
 523+ 8FBC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FBD 21 EB 89         ld hl,Coordenadas_X_Amadeus
 525+ 8FC0 CD BE 91         call Guarda_coordenadas_X
 526+ 8FC3
 527+ 8FC3              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FC3              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FC3
 530+ 8FC3 04               inc b
 531+ 8FC4 05               dec b
 532+ 8FC5 28 04            jr z,1F
 533+ 8FC7 06 03            ld b,3
 534+ 8FC9 18 02            jr 2F
 535+ 8FCB 06 02        1 ld b,2
 536+ 8FCD 08           2 ex af,af'
 537+ 8FCE 3C               inc a
 538+ 8FCF 3D               dec a
 539+ 8FD0 28 04            jr z,5F
 540+ 8FD2 0E 03            ld c,3
 541+ 8FD4 18 02            jr 6F
 542+ 8FD6 0E 02        5 ld c,2
 543+ 8FD8 79           6 ld a,c
 544+ 8FD9 08               ex af,af'
 545+ 8FDA 11 EE 89         ld de,Coordenadas_X_Entidad
 546+ 8FDD 1A           4 ld a,(de)
 547+ 8FDE 21 EB 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FE1 BE           3 cp (hl)
 549+ 8FE2 28 0E            jr z,7F
 550+ 8FE4 23               inc hl
 551+ 8FE5 0D               dec c
 552+ 8FE6 20 F9            jr nz,3B
 553+ 8FE8 13               inc de
 554+ 8FE9 08               ex af,af'
 555+ 8FEA 4F               ld c,a
 556+ 8FEB 08               ex af,af'
 557+ 8FEC 10 EF            djnz 4B
 558+ 8FEE
 559+ 8FEE              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8FEE
 561+ 8FEE CD FD 91     8 call Limpia_Coordenadas_X
 562+ 8FF1 C9               ret
 563+ 8FF2
 564+ 8FF2              7
 565+ 8FF2 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8FF4 32 A3 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8FF7 21 E6 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8FFA CB D6            set 2,(hl)
 569+ 8FFC 18 F0            jr 8B
 570+ 8FFE
 571+ 8FFE              ; -----------------------------------------------------------------------
 572+ 8FFE              ;
 573+ 8FFE              ;   17/04/23
 574+ 8FFE              ;
 575+ 8FFE
 576+ 8FFE              Detecta_colision_nave_entidad
 577+ 8FFE
 578+ 8FFE              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8FFE
 580+ 8FFE 2A 8C 89         ld hl,(Posicion_actual)
 581+ 9001 CD 36 95         call Calcula_puntero_de_impresion
 582+ 9004
 583+ 9004              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9004              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9004
 586+ 9004 DD E5            push ix
 587+ 9006 E1               pop hl
 588+ 9007 E5               push hl
 589+ 9008
 590+ 9008              ; ----- ----- -----
 591+ 9008 1E 00            ld e,0                                         ; Indica impacto.
 592+ 900A 06 0A            ld b,10
 593+ 900C CD 3C 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 900F 7B               ld a,e
 595+ 9010 FE 05            cp 5
 596+ 9012 38 0E            jr c,3F
 597+ 9014
 598+ 9014              ; LLegados a este punto:
 599+ 9014              ;
 600+ 9014              ;   HAY COLISIÓN !!!!!.
 601+ 9014              ;
 602+ 9014              ;   .db (Impacto) de Amadeus a "1".
 603+ 9014              ;   SET el bit3 de (Impacto2).
 604+ 9014              ;
 605+ 9014              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9014
 607+ 9014 21 95 85         ld hl,Amadeus_db+25
 608+ 9017 36 01            ld (hl),1
 609+ 9019 21 E6 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 901C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 901E CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9020 18 18            jr 1F
 613+ 9022
 614+ 9022              ; -----
 615+ 9022
 616+ 9022 E1           3 pop hl
 617+ 9023 CD D1 95         call NextScan
 618+ 9026 E5               push hl
 619+ 9027 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9028 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 902A 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 902C 30 0C            jr nc,1F
 623+ 902E              ;                                                  ; _ 2º scanline si esto es así.
 624+ 902E 10 DC            djnz 2B
 625+ 9030
 626+ 9030              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9030
 628+ 9030              ; LLegados a este punto:
 629+ 9030              ;
 630+ 9030              ;   NO HAY COLISIÓN !!!!!.
 631+ 9030              ;
 632+ 9030              ;   .db (Impacto) de Amadeus a "0".
 633+ 9030              ;   RES el bit2 de (Impacto2).
 634+ 9030              ;
 635+ 9030              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9030              ;   Lo colocamos a "0".
 637+ 9030
 638+ 9030 21 E6 89         ld hl,Impacto2
 639+ 9033 CB 96            res 2,(hl)
 640+ 9035 2A E7 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9038 36 00            ld (hl),0
 642+ 903A
 643+ 903A E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 903B C9               ret
 645+ 903C
 646+ 903C               ; ---------- ----------
 647+ 903C
 648+ 903C C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 903D 3A 8B 89         ld a,(Columns)
 650+ 9040 47               ld b,a
 651+ 9041 FD 7E 00     2 ld a,(iy)
 652+ 9044 BE               cp (hl)
 653+ 9045 28 01            jr z,1F
 654+ 9047
 655+ 9047 1C               inc e
 656+ 9048
 657+ 9048 23           1 inc hl
 658+ 9049 FD 23            inc iy
 659+ 904B 10 F4            djnz 2B
 660+ 904D C1               pop bc
 661+ 904E C9               ret
 662+ 904F
 663+ 904F              ; -------------------------------------------------------------------------------------------------------------
 664+ 904F              ;
 665+ 904F              ;   13/03/23
 666+ 904F              ;
 667+ 904F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 904F              ;
 669+ 904F              ;   DESTRUYE: HL,BC,DE y A.
 670+ 904F
 671+ 904F 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9052 7E               ld a,(hl)
 673+ 9053 A7               and a
 674+ 9054 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9055
 676+ 9055 44               ld b,h
 677+ 9056 4D               ld c,l
 678+ 9057 2A DF 89         ld hl,(Stack_snapshot_disparos)
 679+ 905A E5               push hl
 680+ 905B A7               and a
 681+ 905C ED 42            sbc hl,bc
 682+ 905E E5               push hl
 683+ 905F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9060
 685+ 9060 E1               pop hl
 686+ 9061 54               ld d,h
 687+ 9062 5D               ld e,l
 688+ 9063 1B               dec de
 689+ 9064 ED B8            lddr                                                ; Limpiamos.
 690+ 9066
 691+ 9066 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 9069 22 DF 89         ld (Stack_snapshot_disparos),hl
 693+ 906C
 694+ 906C C9               ret
 695+ 906D
 696+ 906D              ; -------------------------------------------------------------------------------------------------------------
 697+ 906D              ;
 698+ 906D              ;   28/03/23
 699+ 906D              ;
 700+ 906D
 701+ 906D 01 FA 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 9070 2A E4 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9073
 704+ 9073 CD E6 8C     2 call Extrae_address
 705+ 9076 7E               ld a,(hl)
 706+ 9077 A7               and a
 707+ 9078 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 907A
 709+ 907A              ; ----- ----- ----- ----- ----- -----
 710+ 907A
 711+ 907A C5               push bc
 712+ 907B CD 37 91         call foto_disparo_a_borrar
 713+ 907E
 714+ 907E              ; Existe colisión con este disparo???
 715+ 907E
 716+ 907E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 907F 7E               ld a,(hl)
 718+ 9080 2B               dec hl
 719+ 9081 E6 01            and 1
 720+ 9083 28 1D            jr z,9F
 721+ 9085
 722+ 9085              ;   En este punto:
 723+ 9085              ;
 724+ 9085              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 9085              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 9085              ;   _con la entidad).
 727+ 9085              ;
 728+ 9085              ;   Disparo_2A defw 0                                ; Control.
 729+ 9085              ;    defw 0                                          ; Puntero objeto.
 730+ 9085              ;    defw 0                                          ; Puntero de impresión.
 731+ 9085              ;    defw 0                                          ; Rutina de impresión.
 732+ 9085
 733+ 9085 E5               push hl
 734+ 9086
 735+ 9086 06 04            ld b,4
 736+ 9088 23           19 inc hl
 737+ 9089 10 FD            djnz 19B
 738+ 908B
 739+ 908B CD E6 8C         call Extrae_address
 740+ 908E CD 28 9C         call Genera_coordenadas_disparo
 741+ 9091
 742+ 9091              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 9091
 744+ 9091 21 E9 89         ld hl,Coordenadas_disparo_certero
 745+ 9094 72               ld (hl),d
 746+ 9095 23               inc hl
 747+ 9096 73               ld (hl),e
 748+ 9097
 749+ 9097              ; Elimino el disparo de la base de datos.
 750+ 9097
 751+ 9097 E1               pop hl
 752+ 9098 CD B3 91         call Elimina_disparo_de_base_de_datos
 753+ 909B 21 E6 89         ld hl,Impacto2
 754+ 909E CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90A0
 756+ 90A0 18 06            jr 11F
 757+ 90A2
 758+ 90A2 CD 60 91     9 call Mueve_disparo
 759+ 90A5 CD 37 91         call foto_disparo_a_borrar
 760+ 90A8
 761+ 90A8 C1           11 pop bc
 762+ 90A9 18 04            jr 7F
 763+ 90AB
 764+ 90AB              ; ----- ----- ----- ----- ----- -----
 765+ 90AB
 766+ 90AB ED 42        1 sbc hl,bc
 767+ 90AD 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90AF 2A E4 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90B2 23               inc hl
 770+ 90B3 23               inc hl
 771+ 90B4 22 E4 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90B7 18 BA            jr 2B
 773+ 90B9 CD AF 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90BC
 775+ 90BC 01 62 85         ld bc,Disparo_11
 776+ 90BF 2A E2 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90C2
 778+ 90C2 CD E6 8C     5 call Extrae_address
 779+ 90C5 7E               ld a,(hl)
 780+ 90C6 A7               and a
 781+ 90C7 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90C9
 783+ 90C9              ; ----- ----- ----- ----- ----- -----
 784+ 90C9
 785+ 90C9 C5               push bc
 786+ 90CA CD 37 91         call foto_disparo_a_borrar
 787+ 90CD
 788+ 90CD              ; Existe colisión con este disparo???
 789+ 90CD
 790+ 90CD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90CE 7E               ld a,(hl)
 792+ 90CF 2B               dec hl
 793+ 90D0 E6 01            and 1
 794+ 90D2 28 48            jr z,10F
 795+ 90D4
 796+ 90D4              ; La colisión se produce con Amadeus???
 797+ 90D4              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90D4
 799+ 90D4 E5               push hl
 800+ 90D5
 801+ 90D5 06 04            ld b,4
 802+ 90D7 23           16 inc hl
 803+ 90D8 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90DA CD E6 8C         call Extrae_address
 805+ 90DD CD 28 9C         call Genera_coordenadas_disparo
 806+ 90E0
 807+ 90E0 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90E1 FE 16            cp $16
 809+ 90E3 38 22            jr c,15F
 810+ 90E5
 811+ 90E5              ; (Colisiones en filas 16 y 17).
 812+ 90E5
 813+ 90E5 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90E6
 815+ 90E6              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90E6
 817+ 90E6 21 82 85         ld hl,Amadeus_db+6
 818+ 90E9 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90EA 23               inc hl
 820+ 90EB 23               inc hl
 821+ 90EC 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 90ED 21 90 85         ld hl,Amadeus_db+20
 823+ 90F0 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 90F1 21 EB 89         ld hl,Coordenadas_X_Amadeus
 825+ 90F4 CD BE 91         call Guarda_coordenadas_X
 826+ 90F7
 827+ 90F7 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 90F8
 829+ 90F8              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 90F8
 831+ 90F8 06 03            ld b,3
 832+ 90FA 21 EB 89         ld hl,Coordenadas_X_Amadeus
 833+ 90FD 7E           18 ld a,(hl)
 834+ 90FE BA               cp d
 835+ 90FF 20 03            jr nz,17F
 836+ 9101
 837+ 9101              ; Colisión Amadeus !!!!!!!!!!
 838+ 9101
 839+ 9101 E1               pop hl
 840+ 9102 18 09            jr 14F
 841+ 9104
 842+ 9104 23           17 inc hl
 843+ 9105 10 F6            djnz 18B
 844+ 9107
 845+ 9107              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9107              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9107
 848+ 9107 E1           15 pop hl
 849+ 9108 23               inc hl
 850+ 9109 35               dec (hl)
 851+ 910A 2B               dec hl
 852+ 910B 18 0F            jr 10F
 853+ 910D
 854+ 910D              ; -----------------------debug
 855+ 910D
 856+ 910D              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 910D              ; _ almacén de coordenadas_X de Amadeus.
 858+ 910D
 859+ 910D E5           14 push hl
 860+ 910E CD B3 91         call Elimina_disparo_de_base_de_datos
 861+ 9111 21 E6 89         ld hl,Impacto2
 862+ 9114 CB CE            set 1,(hl)
 863+ 9116 CD FD 91         call Limpia_Coordenadas_X
 864+ 9119
 865+ 9119 E1               pop hl
 866+ 911A 18 06            jr 12F
 867+ 911C
 868+ 911C CD 60 91     10 call Mueve_disparo
 869+ 911F CD 37 91         call foto_disparo_a_borrar
 870+ 9122 C1           12 pop bc
 871+ 9123
 872+ 9123 18 04            jr 8F
 873+ 9125
 874+ 9125              ; ----- ----- ----- ----- ----- -----
 875+ 9125
 876+ 9125 ED 42        4 sbc hl,bc
 877+ 9127 28 0A            jr z,6F
 878+ 9129
 879+ 9129 2A E2 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 912C 23               inc hl
 881+ 912D 23               inc hl
 882+ 912E 22 E2 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9131 18 8F            jr 5B
 884+ 9133
 885+ 9133 CD A8 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9136 C9               ret
 887+ 9137
 888+ 9137              ; ------------------------------------------------------------------
 889+ 9137
 890+ 9137              foto_disparo_a_borrar
 891+ 9137
 892+ 9137 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9138 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9139 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 913A
 896+ 913A E5               push hl
 897+ 913B 23               inc hl
 898+ 913C 23               inc hl
 899+ 913D ED 73 D9 89      ld (Stack),sp
 900+ 9141 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9142 FD E1            pop iy
 902+ 9144 DD E1            pop ix
 903+ 9146 E1               pop hl
 904+ 9147 ED 7B D9 89      ld sp,(Stack)
 905+ 914B 3A C8 89         ld a,(Ctrl_1)
 906+ 914E CB C7            set 0,a
 907+ 9150 32 C8 89         ld (Ctrl_1),a
 908+ 9153 CD A0 7F         call Guarda_foto_registros
 909+ 9156 3A C8 89         ld a,(Ctrl_1)
 910+ 9159 CB 87            res 0,a
 911+ 915B 32 C8 89         ld (Ctrl_1),a
 912+ 915E E1               pop hl
 913+ 915F C9               ret
 914+ 9160
 915+ 9160 E5           Mueve_disparo push hl
 916+ 9161 7E               ld a,(hl)
 917+ 9162 06 04            ld b,4
 918+ 9164 23           1 inc hl
 919+ 9165 10 FD            djnz 1B
 920+ 9167
 921+ 9167              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9167
 923+ 9167 CD E6 8C         call Extrae_address
 924+ 916A
 925+ 916A E6 01            and 1
 926+ 916C 28 2B            jr z,2F
 927+ 916E
 928+ 916E              ; Disparo hacia arriba, (Amadeus).
 929+ 916E
 930+ 916E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 916E              ; _ de la dificultad.
 932+ 916E
 933+ 916E CD E0 95         call PreviousScan
 934+ 9171 CD E0 95         call PreviousScan
 935+ 9174 CD E0 95         call PreviousScan
 936+ 9177
 937+ 9177              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9177
 939+ 9177 7C               ld a,h
 940+ 9178 FE 40            cp $40
 941+ 917A 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 917C
 943+ 917C              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 917C
 945+ 917C EB               ex de,hl
 946+ 917D 06 04            ld b,4
 947+ 917F 2B           6 dec hl
 948+ 9180 10 FD            djnz 6B
 949+ 9182
 950+ 9182 CD B3 91         call Elimina_disparo_de_base_de_datos
 951+ 9185 E1               pop hl
 952+ 9186 18 10            jr 7F
 953+ 9188
 954+ 9188              ; Se ha desplazado la bala, compruebo colisión.
 955+ 9188
 956+ 9188 D5           3 push de
 957+ 9189 C5               push bc
 958+ 918A
 959+ 918A CD 6D 8F         call Comprueba_Colision
 960+ 918D
 961+ 918D              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 918D
 963+ 918D 78               ld a,b
 964+ 918E
 965+ 918E C1               pop bc
 966+ 918F D1               pop de
 967+ 9190
 968+ 9190 EB               ex de,hl
 969+ 9191
 970+ 9191 73               ld (hl),e
 971+ 9192 23               inc hl
 972+ 9193 72               ld (hl),d
 973+ 9194
 974+ 9194 E1           4 pop hl
 975+ 9195 23               inc hl
 976+ 9196 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 9197 2B               dec hl
 978+ 9198 C9           7 ret
 979+ 9199
 980+ 9199              ; Disparo hacia abajo, (Entidad).
 981+ 9199
 982+ 9199              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 9199              ; _ de la dificultad.
 984+ 9199
 985+ 9199 CD D1 95     2 call NextScan
 986+ 919C CD D1 95         call NextScan
 987+ 919F CD D1 95         call NextScan
 988+ 91A2
 989+ 91A2              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 91A2
 991+ 91A2 7C               ld a,h
 992+ 91A3 FE 58            cp $58
 993+ 91A5 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 91A7
 995+ 91A7 EB               ex de,hl
 996+ 91A8 06 04            ld b,4
 997+ 91AA 2B           5 dec hl
 998+ 91AB 10 FD            djnz 5B
 999+ 91AD
1000+ 91AD CD B3 91         call Elimina_disparo_de_base_de_datos
1001+ 91B0 E1               pop hl
1002+ 91B1 18 E5            jr 7B
1003+ 91B3
1004+ 91B3              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 91B3
1006+ 91B3 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 91B6 AF               xor a
1008+ 91B7 77               ld (hl),a
1009+ 91B8 54               ld d,h
1010+ 91B9 5D               ld e,l
1011+ 91BA 13               inc de
1012+ 91BB ED B0            ldir
1013+ 91BD C9               ret
1014+ 91BE
1015+ 91BE              ; -----------------------------------------------------------------
1016+ 91BE              ;
1017+ 91BE              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 91BE              ;
1019+ 91BE              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 91BE              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 91BE              ;
1022+ 91BE              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 91BE              ;
1024+ 91BE              ;   INPUTS:
1025+ 91BE              ;
1026+ 91BE              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 91BE              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 91BE              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 91BE
1030+ 91BE              ;   MODIFICA: A, HL, DE y C
1031+ 91BE
1032+ 91BE 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 91BF 79               ld a,c
1034+ 91C0 E6 01            and 1
1035+ 91C2 20 03            jr nz,1F
1036+ 91C4 14               inc d
1037+ 91C5 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 91C7
1039+ 91C7              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 91C7              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 91C7
1042+ 91C7 15           1 dec d
1043+ 91C8 23           2 inc hl
1044+ 91C9 72               ld (hl),d
1045+ 91CA
1046+ 91CA 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 91CB A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 91CC C8               ret z
1049+ 91CD
1050+ 91CD AF               xor a
1051+ 91CE 5F               ld e,a
1052+ 91CF 18 ED            jr Guarda_coordenadas_X
1053+ 91D1
1054+ 91D1              ; -----------------------------------------------------------------
1055+ 91D1              ;
1056+ 91D1              ;   12/04/23
1057+ 91D1              ;
1058+ 91D1
1059+ 91D1 3A E6 89     Selector_de_impactos ld a,(Impacto2)
1060+ 91D4 A7               and a
1061+ 91D5 C8               ret z
1062+ 91D6
1063+ 91D6 FE 04            cp 4
1064+ 91D8 20 09            jr nz,1F
1065+ 91DA
1066+ 91DA
1067+ 91DA              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 91DA
1069+ 91DA CD FE 8F         call Detecta_colision_nave_entidad
1070+ 91DD
1071+ 91DD 21 E6 89         ld hl,Impacto2
1072+ 91E0 CB 5E            bit 3,(hl)
1073+ 91E2 C0               ret nz                                               ; Existe colisión, RET.
1074+ 91E3
1075+ 91E3              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91E3              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91E3
1078+ 91E3 21 E6 89     1 ld hl,Impacto2
1079+ 91E6 CB 4E            bit 1,(hl)
1080+ 91E8 28 07            jr z,2F
1081+ 91EA
1082+ 91EA 21 95 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 91ED 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 91EF 18 0B            jr 3F
1085+ 91F1
1086+ 91F1 21 E6 89     2 ld hl,Impacto2
1087+ 91F4 CB 46            bit 0,(hl)
1088+ 91F6 C8               ret z
1089+ 91F7
1090+ 91F7              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 91F7
1092+ 91F7 21 C8 89         ld hl,Ctrl_1
1093+ 91FA CB D6            set 2,(hl)
1094+ 91FC
1095+ 91FC C9           3 ret
1096+ 91FD
1097+ 91FD              ; -----------------------------------------------------------------
1098+ 91FD              ;
1099+ 91FD              ;   16/04/23
1100+ 91FD              ;
1101+ 91FD
1102+ 91FD AF           Limpia_Coordenadas_X xor a
1103+ 91FE 06 06            ld b,6
1104+ 9200 21 EB 89         ld hl,Coordenadas_X_Amadeus
1105+ 9203 77           1 ld (hl),a
1106+ 9204 23               inc hl
1107+ 9205 10 FC            djnz 1B
1108+ 9207 C9               ret
1109+ 9208
1110+ 9208              ; -----------------------------------------------------------------
1111+ 9208              ;
1112+ 9208              ;   25/04/23
1113+ 9208              ;
1114+ 9208
1115+ 9208              Determina_resultado_comparativa
1116+ 9208
1117+ 9208              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 9208              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 9208              ;
1120+ 9208              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 9208              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 9208              ;
1123+ 9208              ;   SBC HL,DE
1124+ 9208
1125+ 9208              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1126+ 9208              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1127+ 9208
1128+ 9208              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1129+ 9208              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1130+ 9208
1131+ 9208
1132+ 9208 3A 9E 89         ld a,(Cuad_objeto)
1133+ 920B FE 02            cp 2
1134+ 920D 28 26            jr z,2F
1135+ 920F 38 24            jr c,2F
1136+ 9211
1137+ 9211              ; Cuadrantes 3º y 4º
1138+ 9211
1139+ 9211 E6 01            and 1
1140+ 9213 28 10            jr z,4F
1141+ 9215
1142+ 9215              ; Cuadrante 3º
1143+ 9215
1144+ 9215 7C               ld a,h
1145+ 9216 06 00            ld b,0
1146+ 9218
1147+ 9218 CD A3 92         call Compara_cositas_H3
1148+ 921B
1149+ 921B 04               inc b
1150+ 921C 05               dec b
1151+ 921D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1152+ 921E
1153+ 921E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1154+ 921F 06 00            ld b,0
1155+ 9221
1156+ 9221 CD B5 92         call Compara_cositas_L3
1157+ 9224 C9               ret
1158+ 9225
1159+ 9225              ; Cuadrante 4º
1160+ 9225
1161+ 9225 7C           4 ld a,h
1162+ 9226 06 00            ld b,0
1163+ 9228
1164+ 9228 CD C7 92         call Compara_cositas_H4
1165+ 922B
1166+ 922B 04               inc b
1167+ 922C 05               dec b
1168+ 922D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1169+ 922E
1170+ 922E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1171+ 922F 06 00            ld b,0
1172+ 9231
1173+ 9231 CD D9 92         call Compara_cositas_L4
1174+ 9234 C9               ret
1175+ 9235
1176+ 9235              ; Cuadrantes 1º y 2º.
1177+ 9235
1178+ 9235 28 10        2 jr z,3F
1179+ 9237
1180+ 9237              ; 1er Cuadrante
1181+ 9237
1182+ 9237 7C               ld a,h
1183+ 9238 06 00            ld b,0
1184+ 923A
1185+ 923A CD 7B 92         call Compara_cositas_H1
1186+ 923D
1187+ 923D 04               inc b
1188+ 923E 05               dec b
1189+ 923F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1190+ 9240
1191+ 9240 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1192+ 9241 06 00            ld b,0
1193+ 9243
1194+ 9243 CD 91 92         call Compara_cositas_L1
1195+ 9246 C9               ret
1196+ 9247
1197+ 9247
1198+ 9247              ; 2º Cuadrante
1199+ 9247
1200+ 9247 7C           3 ld a,h
1201+ 9248 06 00            ld b,0
1202+ 924A
1203+ 924A CD 57 92         call Compara_cositas_H2
1204+ 924D
1205+ 924D 04               inc b
1206+ 924E 05               dec b
1207+ 924F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1208+ 9250
1209+ 9250 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1210+ 9251 06 00            ld b,0
1211+ 9253
1212+ 9253 CD 69 92         call Compara_cositas_L2
1213+ 9256 C9               ret
1214+ 9257
1215+ 9257 A7           Compara_cositas_H2 and a
1216+ 9258 28 0D            jr z,1F
1217+ 925A              ;    cp $fd
1218+ 925A              ;    jr z,1F
1219+ 925A              ;    cp $fe
1220+ 925A              ;    jr z,1F
1221+ 925A FE FF            cp $ff
1222+ 925C 28 09            jr z,1F
1223+ 925E FE 01            cp $01
1224+ 9260 28 05            jr z,1F
1225+ 9262 FE 02            cp $02
1226+ 9264 28 01            jr z,1F
1227+ 9266 C0               ret nz
1228+ 9267 04           1 inc b
1229+ 9268 C9               ret
1230+ 9269
1231+ 9269 A7           Compara_cositas_L2 and a
1232+ 926A 28 0D            jr z,1F
1233+ 926C              ;    cp $fd
1234+ 926C              ;    jr z,1F
1235+ 926C FE FE            cp $fe
1236+ 926E 28 09            jr z,1F
1237+ 9270 FE FF            cp $ff
1238+ 9272 28 05            jr z,1F
1239+ 9274 FE 01            cp $01
1240+ 9276 28 01            jr z,1F
1241+ 9278              ;    cp $02
1242+ 9278              ;    jr z,1F
1243+ 9278 C0               ret nz
1244+ 9279 04           1 inc b
1245+ 927A C9               ret
1246+ 927B
1247+ 927B A7           Compara_cositas_H1 and a
1248+ 927C 28 11            jr z,1F
1249+ 927E              ;    cp $fd
1250+ 927E              ;    jr z,1F
1251+ 927E              ;    cp $fe
1252+ 927E              ;    jr z,1F
1253+ 927E FE FF            cp $ff
1254+ 9280 28 0D            jr z,1F
1255+ 9282 FE 01            cp $01
1256+ 9284 28 09            jr z,1F
1257+ 9286 FE 02            cp $02
1258+ 9288 28 05            jr z,1F
1259+ 928A FE 03            cp $03
1260+ 928C 28 01            jr z,1F
1261+ 928E C0               ret nz
1262+ 928F 04           1 inc b
1263+ 9290 C9               ret
1264+ 9291
1265+ 9291 A7           Compara_cositas_L1 and a
1266+ 9292 28 0D            jr z,1F
1267+ 9294              ;    cp $fd
1268+ 9294              ;    jr z,1F
1269+ 9294              ;    cp $fe
1270+ 9294              ;    jr z,1F
1271+ 9294              ;    cp $ff
1272+ 9294              ;    jr z,1F
1273+ 9294 FE 01            cp $01
1274+ 9296 28 09            jr z,1F
1275+ 9298 FE 02            cp $02
1276+ 929A 28 05            jr z,1F
1277+ 929C FE 03            cp $03
1278+ 929E 28 01            jr z,1F
1279+ 92A0 C0               ret nz
1280+ 92A1 04           1 inc b
1281+ 92A2 C9               ret
1282+ 92A3
1283+ 92A3 A7           Compara_cositas_H3 and a
1284+ 92A4 28 0D            jr z,1F
1285+ 92A6              ;    cp $fd
1286+ 92A6              ;    jr z,1F
1287+ 92A6 FE FE            cp $fe
1288+ 92A8 28 09            jr z,1F
1289+ 92AA FE FF            cp $ff
1290+ 92AC 28 05            jr z,1F
1291+ 92AE FE 01            cp $01
1292+ 92B0 28 01            jr z,1F
1293+ 92B2              ;    cp $02
1294+ 92B2              ;    jr z,1F
1295+ 92B2              ;    cp $03
1296+ 92B2              ;    jr z,1F
1297+ 92B2 C0               ret nz
1298+ 92B3 04           1 inc b
1299+ 92B4 C9               ret
1300+ 92B5
1301+ 92B5 A7           Compara_cositas_L3 and a
1302+ 92B6 28 0D            jr z,1F
1303+ 92B8              ;    cp $fd
1304+ 92B8              ;    jr z,1F
1305+ 92B8              ;    cp $fe
1306+ 92B8              ;    jr z,1F
1307+ 92B8              ;    cp $ff
1308+ 92B8              ;    jr z,1F
1309+ 92B8 FE 01            cp $01
1310+ 92BA 28 09            jr z,1F
1311+ 92BC FE 02            cp $02
1312+ 92BE 28 05            jr z,1F
1313+ 92C0 FE 03            cp $03
1314+ 92C2 28 01            jr z,1F
1315+ 92C4 C0               ret nz
1316+ 92C5 04           1 inc b
1317+ 92C6 C9               ret
1318+ 92C7
1319+ 92C7 A7           Compara_cositas_H4 and a
1320+ 92C8 28 0D            jr z,1F
1321+ 92CA FE FD            cp $fd
1322+ 92CC 28 09            jr z,1F
1323+ 92CE FE FE            cp $fe
1324+ 92D0 28 05            jr z,1F
1325+ 92D2 FE FF            cp $ff
1326+ 92D4 28 01            jr z,1F
1327+ 92D6              ;    cp $01
1328+ 92D6              ;    jr z,1F
1329+ 92D6              ;    cp $02
1330+ 92D6              ;    jr z,1F
1331+ 92D6              ;    cp $03
1332+ 92D6              ;    jr z,1F
1333+ 92D6 C0               ret nz
1334+ 92D7 04           1 inc b
1335+ 92D8 C9               ret
1336+ 92D9
1337+ 92D9 A7           Compara_cositas_L4 and a
1338+ 92DA 28 0D            jr z,1F
1339+ 92DC              ;    cp $fd
1340+ 92DC              ;    jr z,1F
1341+ 92DC FE FE            cp $fe
1342+ 92DE 28 09            jr z,1F
1343+ 92E0 FE FF            cp $ff
1344+ 92E2 28 05            jr z,1F
1345+ 92E4 FE 01            cp $01
1346+ 92E6 28 01            jr z,1F
1347+ 92E8              ;    cp $02
1348+ 92E8              ;    jr z,1F
1349+ 92E8              ;    cp $03
1350+ 92E8              ;    jr z,1F
1351+ 92E8 C0               ret nz
1352+ 92E9 04           1 inc b
1353+ 92EA C9               ret
# file closed: Disparo.asm
1241  92EB              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92EB              ; ******************************************************************************************************************************************************************************************
   2+ 92EB              ;
   3+ 92EB              ; 01/23
   4+ 92EB              ;
   5+ 92EB              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92EB
   7+ 92EB CD C5 95     Draw call Prepara_draw
   8+ 92EE 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92EF A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92F0 28 05        	jr z,2F
  11+ 92F2
  12+ 92F2 3A 9E 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92F5 18 0C        	jr 1F
  14+ 92F7 2A 9C 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 92FA 22 8C 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 92FD CD 8C 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9300              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9300 CD 4B 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9303 3A B8 89     1 ld a,(Ctrl_0)
  20+ 9306 CB 6F        	bit 5,a
  21+ 9308 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 930A
  23+ 930A CD 22 93     	call Comprueba_limite_horizontal
  24+ 930D CD B2 93     	call Comprueba_limite_vertical
  25+ 9310
  26+ 9310              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9310
  28+ 9310 CD FF 94     3 call calcula_CColumnass
  29+ 9313 CD 36 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9316 CD 8B 95     	call Define_rutina_de_impresion
  31+ 9319
  32+ 9319 3A B8 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 931C CB AF        	res 5,a											; _a ser de utilidad.
  34+ 931E 32 B8 89     	ld (Ctrl_0),a
  35+ 9321
  36+ 9321 C9           	ret
  37+ 9322
  38+ 9322              ; *******************************************************************************************************************************************************************************************
  39+ 9322              ;	21/01/23
  40+ 9322              ;
  41+ 9322              ; 	Comprueba_limite_horizontal.
  42+ 9322              ;
  43+ 9322              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9322              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9322              ;
  46+ 9322              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9322              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9322              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9322              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9322
  51+ 9322
  52+ 9322
  53+ 9322 3A B8 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9325 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9327 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9329 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 932B 32 B8 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 932E 18 09            jr 6F
  59+ 9330 CB 5F        1 bit 3,a
  60+ 9332 28 0A            jr z,2F
  61+ 9334 E6 F7            and $f7
  62+ 9336 32 B8 89         ld (Ctrl_0),a
  63+ 9339 CD 8C 94     6 call Inicializacion
  64+ 933C 18 5B            jr 5F
  65+ 933E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 933F
  67+ 933F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 933F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 933F
  70+ 933F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9340 2A C3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9343 CD 91 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9346 67           	ld h,a
  74+ 9347 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9348 CD 91 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 934B 67           	ld h,a
  77+ 934C A7           	and a
  78+ 934D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 934F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9350 3A 9E 89     	ld a,(Cuad_objeto)
  81+ 9353 FE 02        	cp 2
  82+ 9355 38 1E        	jr c,3F
  83+ 9357 28 1C        	jr z,3F
  84+ 9359 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 935A 28 23            jr z,7F
  86+ 935C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 935E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9360 E1           	pop hl
  89+ 9361
  90+ 9361              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9361              ; _para indicar con E="2" en caso necesario.
  92+ 9361
  93+ 9361 E5               push hl
  94+ 9362 C5               push bc
  95+ 9363 CD 91 98     	call calcula_tercio
  96+ 9366 FE 01        	cp 1
  97+ 9368 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 936A CD 9A 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 936D 28 26            jr z,9F
 100+ 936F 38 24            jr c,9F
 101+ 9371 1E 00        11 ld e,0
 102+ 9373 18 22            jr 8F
 103+ 9375 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 9376 28 07        	jr z, 7F
 105+ 9378 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 937A 1E 00         	ld e,0
 107+ 937C E1           	pop hl
 108+ 937D 18 04        	jr 4F
 109+ 937F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9381 18 15            jr 10F
 111+ 9383
 112+ 9383              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9383              ; _para indicar con E="2" en caso necesario.
 114+ 9383
 115+ 9383 E5           4 push hl
 116+ 9384 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9385 CD 91 98     	call calcula_tercio
 118+ 9388 FE 01        	cp 1
 119+ 938A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 938C CD 9A 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 938F 28 04            jr z,9F
 122+ 9391 30 02            jr nc,9F
 123+ 9393 18 02        	jr 8F
 124+ 9395 1E 02        9 ld e,2
 125+ 9397 C1           8 pop bc
 126+ 9398 E1           10 pop hl
 127+ 9399 C9           5 ret
 128+ 939A
 129+ 939A              ; --------------------
 130+ 939A              ;
 131+ 939A              ; 25/08/22
 132+ 939A
 133+ 939A CD 91 98     Comprueba_centro call calcula_tercio
 134+ 939D 67               ld h,a
 135+ 939E 08           	ex af,af
 136+ 939F FE 02        	cp 2
 137+ 93A1 38 07        	jr c,1F
 138+ 93A3 28 05        	jr z,1F
 139+ 93A5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93A8 18 03        	jr 2F
 141+ 93AA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93AD 08           2 ex af,af
 143+ 93AE A7               and a
 144+ 93AF ED 42            sbc hl,bc
 145+ 93B1 C9               ret
 146+ 93B2
 147+ 93B2              ; *********************************************************************************************************************************************************************************************
 148+ 93B2              ;
 149+ 93B2              ;   16/8/22
 150+ 93B2              ;
 151+ 93B2              ;	Comprueba_limite_vertical
 152+ 93B2              ;
 153+ 93B2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93B2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93B2              ;
 156+ 93B2
 157+ 93B2 2A 8C 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93B5 7D           	ld a,l
 159+ 93B6 E6 1F        	and $1F
 160+ 93B8 57           	ld d,a
 161+ 93B9 3A C5 89     	ld a,(Limite_vertical)
 162+ 93BC BA           	cp d 											; Límite - Posición.
 163+ 93BD 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93BE 3A 9E 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93C1 CB 47        	bit 0,a
 166+ 93C3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93C5
 168+ 93C5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93C5
 170+ 93C5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93C6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 93C8
 173+ 93C8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 93C8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 93C8
 176+ 93C8 3A 90 89         ld a,(Coordenada_X)
 177+ 93CB 16 0F            ld d,Centro_izquierda
 178+ 93CD A7               and a
 179+ 93CE 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 93CF 28 1E            jr z,3F
 181+ 93D1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 93D3              ;                                                    ; _salimos sin modificar nada.
 183+ 93D3 18 0E            jr 2F
 184+ 93D5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 93D6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 93D8
 187+ 93D8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 93D8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 93D8
 190+ 93D8 3A 90 89         ld a,(Coordenada_X)
 191+ 93DB 16 10            ld d,Centro_derecha
 192+ 93DD A7               and a
 193+ 93DE 92               sub d
 194+ 93DF 28 0E            jr z,3F
 195+ 93E1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 93E3              ;                                                    ; _salimos sin modificar nada.
 197+ 93E3 CB 43        2 bit 0,e
 198+ 93E5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 93E7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 93E8 CD 7C 94         call Modificaccionne
 201+ 93EB C1           	pop bc
 202+ 93EC CD 8C 94         call Inicializacion
 203+ 93EF C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 93F0
 205+ 93F0              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 93F0
 207+ 93F0 C5           4 push bc
 208+ 93F1 01 8B 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 93F4 0A           	ld a,(bc)
 210+ 93F5 3D           	dec a
 211+ 93F6 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 93F7 7D           	ld a,l
 213+ 93F8 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 93F9 CB 47        	bit 0,a
 215+ 93FB 28 03        	jr z,5F
 216+ 93FD 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 93FE 18 2E        	jr 7F
 218+ 9400
 219+ 9400              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9400
 221+ 9400 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9401 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9402 3A B8 89     	ld a,(Ctrl_0)
 224+ 9405 CB 4F        	bit 1,a
 225+ 9407 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9409 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 940A
 228+ 940A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 940A
 230+ 940A 1C               inc e
 231+ 940B 1D               dec e
 232+ 940C 20 07            jr nz,12F
 233+ 940E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 940F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9410 22 8C 89     	ld (Posicion_actual),hl
 236+ 9413 18 44        13 jr 9F
 237+ 9415 CB 43        12 bit 0,e
 238+ 9417 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9419              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9419 C1           	pop bc
 241+ 941A 18 D3        	jr 3B
 242+ 941C 80           14 add b
 243+ 941D 6F               ld l,a
 244+ 941E 22 8C 89     	ld (Posicion_actual),hl
 245+ 9421 CD 7C 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9424 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9426 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9428 32 B8 89         ld (Ctrl_0),a
 249+ 942B F1           	pop af
 250+ 942C 18 2B        	jr 9F
 251+ 942E
 252+ 942E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 942E
 254+ 942E F5           7 push af
 255+ 942F 3A B8 89     	ld a,(Ctrl_0)
 256+ 9432 CB 47        	bit 0,a
 257+ 9434 20 1D        	jr nz,8F
 258+ 9436 F1           	pop af
 259+ 9437
 260+ 9437              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9437
 262+ 9437 1C           	inc e
 263+ 9438 1D               dec e
 264+ 9439 20 07            jr nz,10F
 265+ 943B 90           	sub b
 266+ 943C 6F               ld l,a
 267+ 943D 22 8C 89     	ld (Posicion_actual),hl
 268+ 9440 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9442              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9442 CB 43        10 bit 0,e
 271+ 9444 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9446              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9446 C1           	pop bc
 274+ 9447 18 A6        	jr 3B
 275+ 9449 90           16 sub b
 276+ 944A 6F               ld l,a
 277+ 944B 22 8C 89     	ld (Posicion_actual),hl
 278+ 944E CD 7C 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9451 18 06            jr 9F
 280+ 9453 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9455 32 B8 89         ld (Ctrl_0),a
 282+ 9458 F1           	pop af
 283+ 9459 C1           9 pop bc
 284+ 945A 1E 00        	ld e,0
 285+ 945C CD 8C 94         call Inicializacion
 286+ 945F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9460 08           	ex af,af
 288+ 9461 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9462 18 8B            jr 3B
 290+ 9464
 291+ 9464              ; --------------------
 292+ 9464
 293+ 9464 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9466 CD E0 95     1 call PreviousScan
 295+ 9469 10 FB            djnz 1B
 296+ 946B 22 8C 89     	ld (Posicion_actual),hl
 297+ 946E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 946F C9           	ret
 299+ 9470
 300+ 9470              ; --------------------
 301+ 9470
 302+ 9470 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9472 CD D1 95     1 call NextScan
 304+ 9475 10 FB            djnz 1B
 305+ 9477 22 8C 89     	ld (Posicion_actual),hl
 306+ 947A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 947B C9           	ret
 308+ 947C
 309+ 947C              ; --------------------
 310+ 947C              ;
 311+ 947C              ;	22/01/23
 312+ 947C              ;
 313+ 947C              ;	E="1". Hemos cambiado de cuadrante.
 314+ 947C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 947C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 947C
 317+ 947C
 318+ 947C              Modificaccionne
 319+ 947C
 320+ 947C 3A 9E 89     	ld a,(Cuad_objeto)
 321+ 947F FE 02        	cp 2
 322+ 9481 CC 64 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9484 DC 64 94         call c,Modifica_Pos_actual
 324+ 9487 C8           	ret z
 325+ 9488 CD 70 94         call Modifica_Pos_actual2
 326+ 948B C9               ret
 327+ 948C
 328+ 948C              ; *************************************************************************************************************************************************************************************************
 329+ 948C              ;
 330+ 948C              ;	13/8/22
 331+ 948C              ;
 332+ 948C              ;	Inicializacion
 333+ 948C              ;
 334+ 948C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 948C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 948C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 948C              ;
 338+ 948C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 948C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 948C              ;	_ desaparece/aparece.
 341+ 948C
 342+ 948C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 948C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 948C              ;
 345+ 948C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 948C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 948C              ; 		   [E] ="0"
 348+ 948C
 349+ 948C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 948C
 351+ 948C CD 91 98     Inicializacion call calcula_tercio
 352+ 948F 28 36        	jr z,primit
 353+ 9491 E6 02        	and 2
 354+ 9493 20 07        	jr nz,segmit
 355+ 9495 7D           	ld a,l
 356+ 9496 FE 7F        	cp $7f
 357+ 9498 38 2D        	jr c,primit
 358+ 949A 28 2B        	jr z,primit
 359+ 949C CD F9 94     segmit call column
 360+ 949F 38 13        	jr c,tercuad
 361+ 94A1 3E 04        cuarcuad ld a,4
 362+ 94A3 32 9E 89     	ld (Cuad_objeto),a
 363+ 94A6 21 20 48     	ld hl,$4820
 364+ 94A9 22 C3 89     	ld (Limite_horizontal),hl
 365+ 94AC 21 C5 89     	ld hl,Limite_vertical
 366+ 94AF 36 0D        	ld (hl),$0d
 367+ 94B1 08           	ex af,af
 368+ 94B2 18 3C        	jr 1F
 369+ 94B4              tercuad
 370+ 94B4 3E 03        	ld a,3
 371+ 94B6 32 9E 89     	ld (Cuad_objeto),a
 372+ 94B9 21 20 48     	ld hl,$4820
 373+ 94BC 22 C3 89     	ld (Limite_horizontal),hl
 374+ 94BF 21 C5 89     	ld hl,Limite_vertical
 375+ 94C2 36 12        	ld (hl),$12
 376+ 94C4 08           	ex af,af
 377+ 94C5 18 29        	jr 1F
 378+ 94C7 CD F9 94     primit call column
 379+ 94CA 38 13        	jr c, primcuad
 380+ 94CC              segcuad
 381+ 94CC 3E 02        	ld a,2
 382+ 94CE 32 9E 89     	ld (Cuad_objeto),a
 383+ 94D1 21 C0 4F     	ld hl,$4fc0
 384+ 94D4 22 C3 89     	ld (Limite_horizontal),hl
 385+ 94D7 21 C5 89     	ld hl,Limite_vertical
 386+ 94DA 36 0D        	ld (hl),$0d
 387+ 94DC 08           	ex af,af
 388+ 94DD 18 11        	jr 1F
 389+ 94DF              primcuad
 390+ 94DF 3E 01        	ld a,1
 391+ 94E1 32 9E 89     	ld (Cuad_objeto),a
 392+ 94E4 21 C0 4F     	ld hl,$4fc0
 393+ 94E7 22 C3 89     	ld (Limite_horizontal),hl
 394+ 94EA 21 C5 89     	ld hl,Limite_vertical
 395+ 94ED 36 12        	ld (hl),$12
 396+ 94EF 08           	ex af,af
 397+ 94F0 CD FD 9B     1 call Genera_coordenadas
 398+ 94F3 21 B8 89     	ld hl,Ctrl_0
 399+ 94F6 CB EE        	set 5,(hl)
 400+ 94F8 C9           	ret
 401+ 94F9
 402+ 94F9              ; ------------------------------------------------------------------------------------------------------------------
 403+ 94F9
 404+ 94F9              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 94F9              ;
 406+ 94F9              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 94F9
 408+ 94F9 7D           column ld a,l
 409+ 94FA E6 1F        	and $1f
 410+ 94FC FE 10         	cp $10
 411+ 94FE C9            	ret
 412+ 94FF
 413+ 94FF              ; --------------------------------------------------------------------------------------------------------------------
 414+ 94FF              ;
 415+ 94FF              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 94FF              ;
 417+ 94FF              ; 14/12/22
 418+ 94FF              ;
 419+ 94FF              ;	Modifica: A y BC.
 420+ 94FF
 421+ 94FF 3A 9E 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9502 E6 01        	and 1
 423+ 9504 28 17        	jr z,1F
 424+ 9506
 425+ 9506              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9506
 427+ 9506 3A 90 89     	ld a,(Coordenada_X)
 428+ 9509 47           	ld b,a
 429+ 950A 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 950B 79           	ld a,c
 431+ 950C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 950D 38 08        	jr c,2F
 433+ 950F 47           	ld b,a
 434+ 9510 79           	ld a,c
 435+ 9511 90           	sub b
 436+ 9512 32 C2 89     	ld (Columnas),a
 437+ 9515 18 1B        	jr 4F
 438+ 9517 79           2 ld a,c
 439+ 9518 32 C2 89     	ld (Columnas),a
 440+ 951B 18 15        	jr 4F
 441+ 951D
 442+ 951D              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 951D
 444+ 951D 3A 90 89     1 ld a,(Coordenada_X)
 445+ 9520 81           	add c
 446+ 9521 3D           	dec a
 447+ 9522 D6 1F        	sub $1f
 448+ 9524 38 08        	jr c,3F
 449+ 9526 47           	ld b,a
 450+ 9527 79           	ld a,c
 451+ 9528 90           	sub b
 452+ 9529 32 C2 89     	ld (Columnas),a
 453+ 952C 18 04        	jr 4F
 454+ 952E 79           3 ld a,c
 455+ 952F 32 C2 89     	ld (Columnas),a
 456+ 9532 D9           4 exx
 457+ 9533 4F           	ld c,a
 458+ 9534 D9           	exx
 459+ 9535 C9            ret
 460+ 9536
 461+ 9536              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9536              ;
 463+ 9536              ; 7/1/23
 464+ 9536              ;
 465+ 9536              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9536              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9536              ;
 468+ 9536              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9536              ;	DESTRUYE: HL,B Y A.
 470+ 9536
 471+ 9536 3A 9E 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9539 FE 02        	cp 2
 473+ 953B 38 18        	jr c,1F
 474+ 953D 28 16        	jr z,1F
 475+ 953F E6 01        	and 1
 476+ 9541 28 0D        	jr z,3F
 477+ 9543
 478+ 9543              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9543
 480+ 9543 CD 7F 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9546
 482+ 9546 7D           9 ld a,l
 483+ 9547 E6 1F        	and $1f
 484+ 9549 28 2A        	jr z,7F
 485+ 954B 2B           	dec hl
 486+ 954C 10 F8        	djnz 9B
 487+ 954E 18 25        	jr 7F
 488+ 9550
 489+ 9550              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9550
 491+ 9550 2A 8C 89     3 ld hl,(Posicion_actual)
 492+ 9553 18 20        	jr 7F
 493+ 9555
 494+ 9555 28 14        1 jr z,2F
 495+ 9557
 496+ 9557              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9557
 498+ 9557 CD 7F 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 955A
 500+ 955A 7D           4 ld a,l
 501+ 955B E6 1F        	and $1f
 502+ 955D 28 03        	jr z,6F
 503+ 955F 2B           	dec hl
 504+ 9560 10 F8        	djnz 4B
 505+ 9562 06 0F        6 ld b,15
 506+ 9564 CD E0 95     5 call PreviousScan
 507+ 9567 10 FB        	djnz 5B
 508+ 9569 18 0A        	jr 7F
 509+ 956B
 510+ 956B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 956B
 512+ 956B CD 7F 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 956E 06 0F        	ld b,15
 514+ 9570 CD E0 95     8 call PreviousScan
 515+ 9573 10 FB        	djnz 8B
 516+ 9575
 517+ 9575 E5           7 push hl
 518+ 9576 DD E1        	pop ix
 519+ 9578
 520+ 9578 2A 8E 89     	ld hl,(Puntero_objeto)
 521+ 957B E5           	push hl
 522+ 957C FD E1        	pop iy
 523+ 957E
 524+ 957E C9           	ret
 525+ 957F
 526+ 957F              ; --------------------------------------------------------------------------------------------------------------------
 527+ 957F              ;
 528+ 957F              ;	2/1/23
 529+ 957F              ;
 530+ 957F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 957F              ;
 532+ 957F              ;	Tras esta rutina tenemos:
 533+ 957F              ;
 534+ 957F              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 957F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 957F              ;
 537+ 957F              ;	DESTRUYE!!!!! HL,B y A.
 538+ 957F
 539+ 957F 2A 8C 89     Operandos ld hl,(Posicion_actual)
 540+ 9582 3A C2 89     	ld a,(Columnas)
 541+ 9585 3D           	dec a
 542+ 9586 20 01        	jr nz,1F
 543+ 9588 3C           	inc a
 544+ 9589 47           1 ld b,a
 545+ 958A C9           	ret
 546+ 958B
 547+ 958B              ; --------------------------------------------------------------------------------------------------------------------
 548+ 958B              ;
 549+ 958B              ;	3/1/23
 550+ 958B              ;
 551+ 958B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 958B              ;
 553+ 958B              ;	Destruye: A,B,HL y DE.
 554+ 958B
 555+ 958B              Define_rutina_de_impresion
 556+ 958B
 557+ 958B 3A 8B 89     	ld a,(Columns)
 558+ 958E 47           	ld b,a
 559+ 958F 3A C2 89     	ld a,(Columnas)
 560+ 9592 B8           	cp b
 561+ 9593 20 0D        	jr nz,2f
 562+ 9595
 563+ 9595              ;	La entidad se imprime entera.
 564+ 9595
 565+ 9595 21 61 96     	ld hl, Indice_entidades_completas
 566+ 9598 E6 01        	and 1
 567+ 959A 28 02        	jr z,1F
 568+ 959C
 569+ 959C 23           	inc hl
 570+ 959D 23           	inc hl
 571+ 959E
 572+ 959E CD E6 8C     1 call Extrae_address
 573+ 95A1 C9           	ret		;	ret
 574+ 95A2
 575+ 95A2              ;	La entidad no se imprime entera en pantalla.
 576+ 95A2
 577+ 95A2 3A 9E 89     2 ld a,(Cuad_objeto)
 578+ 95A5 E6 01        	and 1
 579+ 95A7 28 17        	jr z,3F
 580+ 95A9
 581+ 95A9              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95A9
 583+ 95A9 21 65 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95AC 3A 8B 89     4 ld a,(Columns)
 585+ 95AF E6 01        	and 1
 586+ 95B1 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95B3
 588+ 95B3 23           	inc hl
 589+ 95B4 23           	inc hl
 590+ 95B5
 591+ 95B5 3A C2 89     	ld a,(Columnas)
 592+ 95B8 E6 01        	and 1
 593+ 95BA 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95BC
 595+ 95BC 23           	inc hl
 596+ 95BD 23           	inc hl
 597+ 95BE
 598+ 95BE 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95C0
 600+ 95C0 21 6B 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95C3 18 E7        	jr 4B
 602+ 95C5
 603+ 95C5              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95C5              ;
 605+ 95C5              ;	Prepara_draw
 606+ 95C5              ;
 607+ 95C5              ;	Es una rutina de carga.
 608+ 95C5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95C5              ;
 610+ 95C5              ;	FUNCIONAMIENTO:
 611+ 95C5              ;
 612+ 95C5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95C5              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95C5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95C5              ;
 616+ 95C5              ;	DESTRUYE:
 617+ 95C5              ;
 618+ 95C5              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95C5
 620+ 95C5 21 8A 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 95C8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 95C9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 95CA 4E           	ld c,(hl)
 624+ 95CB 2A 8C 89     	ld hl,(Posicion_actual)
 625+ 95CE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 95D0 C9           	ret
 627+ 95D1
 628+ 95D1              ;----------------------------------------------------------------------------------------------------------------
 629+ 95D1              ;
 630+ 95D1              ;	5/08/22
 631+ 95D1              ;
 632+ 95D1              ;   NextScan.
 633+ 95D1              ;
 634+ 95D1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 95D1              ;
 636+ 95D1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 95D1              ;
 638+ 95D1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 95D1              ;
 640+ 95D1              ;       DESTRUIDOS: AF y HL !!!
 641+ 95D1              ;
 642+ 95D1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 95D1              ;
 644+ 95D1
 645+ 95D1 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 95D2 7C               ld a,h
 647+ 95D3 E6 07            and 7
 648+ 95D5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 95D6
 650+ 95D6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 95D7 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 95D9 6F               ld l,a
 653+ 95DA D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 95DB
 655+ 95DB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 95DC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 95DE 67               ld h,a
 658+ 95DF C9               ret
 659+ 95E0
 660+ 95E0              ;----------------------------------------------------------------------------------------------------------------
 661+ 95E0              ;
 662+ 95E0              ;	5/08/22
 663+ 95E0              ;
 664+ 95E0              ;   PreviousScan.
 665+ 95E0              ;
 666+ 95E0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 95E0              ;
 668+ 95E0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 95E0              ;
 670+ 95E0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 95E0              ;
 672+ 95E0              ;       DESTRUIDOS: AF y HL !!!
 673+ 95E0              ;
 674+ 95E0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 95E0              ;
 676+ 95E0
 677+ 95E0 7C           PreviousScan ld a,h
 678+ 95E1 25               dec h               ; Dec H.
 679+ 95E2 E6 07            and 7
 680+ 95E4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 95E5
 682+ 95E5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 95E6 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 95E8 6F               ld l,a
 685+ 95E9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 95EA
 687+ 95EA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 95EB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 95ED 67               ld h,a
 690+ 95EE C9               ret
 691+ 95EF
 692+ 95EF              ; -----------------------------------------------------------------------------------
 693+ 95EF              ;
 694+ 95EF              ;	28/2/23
 695+ 95EF              ;
 696+ 95EF              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 95EF              ;	Extrae fotos de Album_de_fotos.
 698+ 95EF
 699+ 95EF 3A D4 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 95F2 A7           	and a
 701+ 95F3 C8           	ret z
 702+ 95F4 ED 73 D9 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 95F8 31 00 70     	ld sp,Album_de_fotos
 704+ 95FB
 705+ 95FB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 95FD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 95FE D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 95FF
 709+ 95FF ED 73 DB 89  	ld (Stack_2),sp
 710+ 9603 ED 7B D9 89  	ld sp,(Stack)
 711+ 9607
 712+ 9607              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9607
 714+ 9607 3E CD        	ld a,$cd
 715+ 9609 32 11 96     	ld (Imprime),a
 716+ 960C EB           	ex de,hl
 717+ 960D 22 12 96     	ld (Imprime+1),hl
 718+ 9610 EB           	ex de,hl
 719+ 9611
 720+ 9611              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9611
 722+ 9611 00 00 00     Imprime db 0,0,0
 723+ 9614
 724+ 9614 3A D4 89     	ld a,(Numero_de_malotes)
 725+ 9617 3D           	dec a
 726+ 9618 28 09        	jr z,1F
 727+ 961A 32 D4 89      	ld (Numero_de_malotes),a
 728+ 961D
 729+ 961D ED 7B DB 89   	ld sp,(Stack_2)
 730+ 9621 18 D8        	jr 2B
 731+ 9623
 732+ 9623 AF           1 xor a
 733+ 9624 32 DB 89     	ld (Stack_2),a
 734+ 9627 C9           	ret
 735+ 9628
 736+ 9628              ; -----------------------------------------------------------------------------------
 737+ 9628              ;
 738+ 9628              ;	28/2/23
 739+ 9628              ;
 740+ 9628              ;	Pinta los disparos generados.
 741+ 9628
 742+ 9628              Extrae_foto_disparos
 743+ 9628
 744+ 9628 3A E1 89     	ld a,(Numero_de_disparotes)
 745+ 962B A7           	and a
 746+ 962C C8           	ret z
 747+ 962D ED 73 D9 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9631 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9634
 750+ 9634 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9636 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9637 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9638
 754+ 9638 ED 73 DB 89  	ld (Stack_2),sp
 755+ 963C ED 7B D9 89  	ld sp,(Stack)
 756+ 9640
 757+ 9640              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9640
 759+ 9640 3E CD        	ld a,$cd
 760+ 9642 32 4A 96     	ld (Imprime2),a
 761+ 9645 EB           	ex de,hl
 762+ 9646 22 4B 96     	ld (Imprime2+1),hl
 763+ 9649 EB           	ex de,hl
 764+ 964A
 765+ 964A              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 964A
 767+ 964A 00 00 00     Imprime2 db 0,0,0
 768+ 964D
 769+ 964D 3A E1 89     	ld a,(Numero_de_disparotes)
 770+ 9650 3D           	dec a
 771+ 9651 28 09        	jr z,1F
 772+ 9653 32 E1 89      	ld (Numero_de_disparotes),a
 773+ 9656
 774+ 9656 ED 7B DB 89  	ld sp,(Stack_2)
 775+ 965A 18 D8        	jr 2B
 776+ 965C
 777+ 965C AF           1 xor a
 778+ 965D 32 DB 89     	ld (Stack_2),a
 779+ 9660 C9           	ret
 780+ 9661
# file closed: Draw_XOR.asm
1242  9661              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9661              ;   índices de Rutinas de impresión.
   2+ 9661
   3+ 9661 71 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9663 9E 96            defw Pinta_Amadeus_3x2
   5+ 9665
   6+ 9665 F4 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9667 94 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9669 48 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 966B
  10+ 966B 1E 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 966D 22 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 966F D6 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9671
  14+ 9671
  15+ 9671              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9671              ;
  17+ 9671              ;   12/12/22
  18+ 9671              ;
  19+ 9671              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9671              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9671              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9671              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9671              ;
  24+ 9671              ;   Modifica: DE y HL.
  25+ 9671
  26+ 9671 ED 73 D9 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9675 FD F9        	ld sp,iy
  28+ 9677 06 10            ld b,16
  29+ 9679 D1           1 pop de
  30+ 967A 7B               ld a,e
  31+ 967B AE               xor (hl)
  32+ 967C 77           	ld (hl),a
  33+ 967D 23           	inc hl
  34+ 967E 7A               ld a,d
  35+ 967F AE               xor (hl)
  36+ 9680 77           	ld (hl),a
  37+ 9681 2B           	dec hl
  38+ 9682 24           	inc h
  39+ 9683 7C               ld a,h
  40+ 9684 E6 07            and 7
  41+ 9686 20 0A            jr nz,2F
  42+ 9688 7D               ld a,l
  43+ 9689 C6 20            add a,$20
  44+ 968B 6F               ld l,a
  45+ 968C 38 04            jr c,2F
  46+ 968E 7C               ld a,h
  47+ 968F D6 08            sub 8
  48+ 9691 67               ld h,a
  49+ 9692 7C           2 ld a,h
  50+ 9693 FE 58            cp $58
  51+ 9695 28 02            jr z,3F
  52+ 9697 10 E0            djnz 1B
  53+ 9699 ED 7B D9 89  3 ld sp,(Stack)
  54+ 969D C9           	ret
  55+ 969E
  56+ 969E ED 73 D9 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96A2 FD F9        	ld sp,iy
  58+ 96A4 06 08            ld b,8
  59+ 96A6 D1           1 pop de
  60+ 96A7 7B               ld a,e
  61+ 96A8 AE               xor (hl)
  62+ 96A9 77           	ld (hl),a
  63+ 96AA 23           	inc hl
  64+ 96AB 7A               ld a,d
  65+ 96AC AE               xor (hl)
  66+ 96AD 77           	ld (hl),a
  67+ 96AE 23           	inc hl
  68+ 96AF D1           	pop de
  69+ 96B0 7B               ld a,e
  70+ 96B1 AE               xor (hl)
  71+ 96B2 77           	ld (hl),a
  72+ 96B3 2B           	dec hl
  73+ 96B4 2B           	dec hl
  74+ 96B5 24           	inc h
  75+ 96B6 7C               ld a,h
  76+ 96B7 E6 07            and 7
  77+ 96B9 20 0A            jr nz,2F
  78+ 96BB 7D               ld a,l
  79+ 96BC C6 20            add a,$20
  80+ 96BE 6F               ld l,a
  81+ 96BF 38 04            jr c,2F
  82+ 96C1 7C               ld a,h
  83+ 96C2 D6 08            sub 8
  84+ 96C4 67               ld h,a
  85+ 96C5 7C           2 ld a,h
  86+ 96C6 FE 58            cp $58
  87+ 96C8 28 25            jr z,4F
  88+ 96CA 7A               ld a,d
  89+ 96CB AE               xor (hl)
  90+ 96CC 77               ld (hl),a
  91+ 96CD D1           	pop de
  92+ 96CE 23           	inc hl
  93+ 96CF 7B               ld a,e
  94+ 96D0 AE               xor (hl)
  95+ 96D1 77           	ld (hl),a
  96+ 96D2 23           	inc hl
  97+ 96D3 7A               ld a,d
  98+ 96D4 AE               xor (hl)
  99+ 96D5 77           	ld (hl),a
 100+ 96D6 2B           	dec hl
 101+ 96D7 2B           	dec hl
 102+ 96D8 24           	inc h
 103+ 96D9 7C               ld a,h
 104+ 96DA E6 07            and 7
 105+ 96DC 20 0A            jr nz,3F
 106+ 96DE 7D               ld a,l
 107+ 96DF C6 20            add a,$20
 108+ 96E1 6F               ld l,a
 109+ 96E2 38 04            jr c,3F
 110+ 96E4 7C               ld a,h
 111+ 96E5 D6 08            sub 8
 112+ 96E7 67               ld h,a
 113+ 96E8 7C           3 ld a,h
 114+ 96E9 FE 58            cp $58
 115+ 96EB 28 02            jr z,4F
 116+ 96ED 10 B7            djnz 1B
 117+ 96EF ED 7B D9 89  4 ld sp,(Stack)
 118+ 96F3 C9           	ret
 119+ 96F4
 120+ 96F4              ; ---------------------------------------------------
 121+ 96F4
 122+ 96F4 ED 73 D9 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 96F8 FD F9        	ld sp,iy
 124+ 96FA
 125+ 96FA              ; >>>
 126+ 96FA
 127+ 96FA 06 10            ld b,16
 128+ 96FC D1           1 pop de
 129+ 96FD 7A           	ld a,d
 130+ 96FE AE           	xor (hl)
 131+ 96FF 77           	ld (hl),a
 132+ 9700 24           	inc h
 133+ 9701 7C               ld a,h
 134+ 9702 E6 07            and 7
 135+ 9704 20 0C            jr nz,2F
 136+ 9706 7D               ld a,l
 137+ 9707 C6 20            add a,$20
 138+ 9709 6F               ld l,a
 139+ 970A 38 06            jr c,2F
 140+ 970C 7C               ld a,h
 141+ 970D D6 08            sub 8
 142+ 970F 67               ld h,a
 143+ 9710 18 00            jr 2F
 144+ 9712 7C           2 ld a,h
 145+ 9713 FE 58            cp $58
 146+ 9715 28 02            jr z,3F
 147+ 9717 10 E3            djnz 1B
 148+ 9719 ED 7B D9 89  3 ld sp,(Stack)
 149+ 971D C9           	ret
 150+ 971E
 151+ 971E ED 73 D9 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9722 FD F9        	ld sp,iy
 153+ 9724
 154+ 9724              ; >>>
 155+ 9724
 156+ 9724 06 10            ld b,16
 157+ 9726 D1           1 pop de
 158+ 9727 7B           	ld a,e
 159+ 9728 AE           	xor (hl)
 160+ 9729 77           	ld (hl),a
 161+ 972A 24           	inc h
 162+ 972B 7C               ld a,h
 163+ 972C E6 07            and 7
 164+ 972E 20 0C            jr nz,2F
 165+ 9730 7D               ld a,l
 166+ 9731 C6 20            add a,$20
 167+ 9733 6F               ld l,a
 168+ 9734 38 06            jr c,2F
 169+ 9736 7C               ld a,h
 170+ 9737 D6 08            sub 8
 171+ 9739 67               ld h,a
 172+ 973A 18 00            jr 2F
 173+ 973C 7C           2 ld a,h
 174+ 973D FE 58            cp $58
 175+ 973F 28 02            jr z,3F
 176+ 9741 10 E3            djnz 1B
 177+ 9743 ED 7B D9 89  3 ld sp,(Stack)
 178+ 9747 C9           	ret
 179+ 9748
 180+ 9748              ; ---------------------------------------------------
 181+ 9748
 182+ 9748 ED 73 D9 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 974C FD F9        	ld sp,iy
 184+ 974E 06 08            ld b,8
 185+ 9750 D1           1 pop de
 186+ 9751 7A           	ld a,d
 187+ 9752 AE           	xor (hl)
 188+ 9753 77           	ld (hl),a
 189+ 9754 23           	inc hl
 190+ 9755 D1           	pop de
 191+ 9756 7B           	ld a,e
 192+ 9757 AE           	xor (hl)
 193+ 9758 77           	ld (hl),a
 194+ 9759 2B           	dec hl
 195+ 975A 24            	inc h
 196+ 975B 7C               ld a,h
 197+ 975C E6 07            and 7
 198+ 975E 20 0A            jr nz,2F
 199+ 9760 7D               ld a,l
 200+ 9761 C6 20            add a,$20
 201+ 9763 6F               ld l,a
 202+ 9764 38 04            jr c,2F
 203+ 9766 7C               ld a,h
 204+ 9767 D6 08            sub 8
 205+ 9769 67               ld h,a
 206+ 976A 7C           2 ld a,h
 207+ 976B FE 58            cp $58
 208+ 976D 28 20            jr z,4F
 209+ 976F D1               pop de
 210+ 9770 7B           	ld a,e
 211+ 9771 AE           	xor (hl)
 212+ 9772 77           	ld (hl),a
 213+ 9773 23           	inc hl
 214+ 9774 7A           	ld a,d
 215+ 9775 AE           	xor (hl)
 216+ 9776 77           	ld (hl),a
 217+ 9777 2B           	dec hl
 218+ 9778 24           	inc h
 219+ 9779 7C               ld a,h
 220+ 977A E6 07            and 7
 221+ 977C 20 0A            jr nz,3F
 222+ 977E 7D               ld a,l
 223+ 977F C6 20            add a,$20
 224+ 9781 6F               ld l,a
 225+ 9782 38 04            jr c,3F
 226+ 9784 7C               ld a,h
 227+ 9785 D6 08            sub 8
 228+ 9787 67               ld h,a
 229+ 9788 7C           3 ld a,h
 230+ 9789 FE 58            cp $58
 231+ 978B 28 02            jr z,4F
 232+ 978D 10 C1            djnz 1B
 233+ 978F ED 7B D9 89  4 ld sp,(Stack)
 234+ 9793 C9           	ret
 235+ 9794
 236+ 9794 ED 73 D9 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9798 FD F9        	ld sp,iy
 238+ 979A 06 08            ld b,8
 239+ 979C D1           1 pop de
 240+ 979D D1           	pop de
 241+ 979E 7B           	ld a,e
 242+ 979F AE           	xor (hl)
 243+ 97A0 77           	ld (hl),a
 244+ 97A1 24            	inc h
 245+ 97A2 7C               ld a,h
 246+ 97A3 E6 07            and 7
 247+ 97A5 20 0A            jr nz,2F
 248+ 97A7 7D               ld a,l
 249+ 97A8 C6 20            add a,$20
 250+ 97AA 6F               ld l,a
 251+ 97AB 38 04            jr c,2F
 252+ 97AD 7C               ld a,h
 253+ 97AE D6 08            sub 8
 254+ 97B0 67               ld h,a
 255+ 97B1 7C           2 ld a,h
 256+ 97B2 FE 58            cp $58
 257+ 97B4 28 1B            jr z,4F
 258+ 97B6 D1               pop de
 259+ 97B7 7A           	ld a,d
 260+ 97B8 AE           	xor (hl)
 261+ 97B9 77           	ld (hl),a
 262+ 97BA 24           	inc h
 263+ 97BB 7C               ld a,h
 264+ 97BC E6 07            and 7
 265+ 97BE 20 0A            jr nz,3F
 266+ 97C0 7D               ld a,l
 267+ 97C1 C6 20            add a,$20
 268+ 97C3 6F               ld l,a
 269+ 97C4 38 04            jr c,3F
 270+ 97C6 7C               ld a,h
 271+ 97C7 D6 08            sub 8
 272+ 97C9 67               ld h,a
 273+ 97CA 7C           3 ld a,h
 274+ 97CB FE 58            cp $58
 275+ 97CD 28 02            jr z,4F
 276+ 97CF 10 CB            djnz 1B
 277+ 97D1 ED 7B D9 89  4 ld sp,(Stack)
 278+ 97D5 C9           	ret
 279+ 97D6
 280+ 97D6 ED 73 D9 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97DA FD F9        	ld sp,iy
 282+ 97DC 06 08            ld b,8
 283+ 97DE D1           1 pop de
 284+ 97DF 7B           	ld a,e
 285+ 97E0 AE           	xor (hl)
 286+ 97E1 77           	ld (hl),a
 287+ 97E2 23           	inc hl
 288+ 97E3 7A           	ld a,d
 289+ 97E4 AE           	xor (hl)
 290+ 97E5 77           	ld (hl),a
 291+ 97E6 2B           	dec hl
 292+ 97E7 24             	inc h
 293+ 97E8 7C               ld a,h
 294+ 97E9 E6 07            and 7
 295+ 97EB 20 0A            jr nz,2F
 296+ 97ED 7D               ld a,l
 297+ 97EE C6 20            add a,$20
 298+ 97F0 6F               ld l,a
 299+ 97F1 38 04            jr c,2F
 300+ 97F3 7C               ld a,h
 301+ 97F4 D6 08            sub 8
 302+ 97F6 67               ld h,a
 303+ 97F7 7C           2 ld a,h
 304+ 97F8 FE 58            cp $58
 305+ 97FA 28 21            jr z,4F
 306+ 97FC D1               pop de
 307+ 97FD 7A           	ld a,d
 308+ 97FE AE           	xor (hl)
 309+ 97FF 77           	ld (hl),a
 310+ 9800 23           	inc hl
 311+ 9801 D1               pop de
 312+ 9802 7B           	ld a,e
 313+ 9803 AE           	xor (hl)
 314+ 9804 77           	ld (hl),a
 315+ 9805 2B           	dec hl
 316+ 9806 24           	inc h
 317+ 9807 7C               ld a,h
 318+ 9808 E6 07            and 7
 319+ 980A 20 0A            jr nz,3F
 320+ 980C 7D               ld a,l
 321+ 980D C6 20            add a,$20
 322+ 980F 6F               ld l,a
 323+ 9810 38 04            jr c,3F
 324+ 9812 7C               ld a,h
 325+ 9813 D6 08            sub 8
 326+ 9815 67               ld h,a
 327+ 9816 7C           3 ld a,h
 328+ 9817 FE 58            cp $58
 329+ 9819 28 02            jr z,4F
 330+ 981B 10 C1            djnz 1B
 331+ 981D ED 7B D9 89  4 ld sp,(Stack)
 332+ 9821 C9           	ret
 333+ 9822
 334+ 9822 ED 73 D9 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9826 FD F9        	ld sp,iy
 336+ 9828 06 08            ld b,8
 337+ 982A D1           1 pop de
 338+ 982B 7B           	ld a,e
 339+ 982C AE           	xor (hl)
 340+ 982D 77           	ld (hl),a
 341+ 982E 24            	inc h
 342+ 982F 7C               ld a,h
 343+ 9830 E6 07            and 7
 344+ 9832 20 0A            jr nz,2F
 345+ 9834 7D               ld a,l
 346+ 9835 C6 20            add a,$20
 347+ 9837 6F               ld l,a
 348+ 9838 38 04            jr c,2F
 349+ 983A 7C               ld a,h
 350+ 983B D6 08            sub 8
 351+ 983D 67               ld h,a
 352+ 983E 7C           2 ld a,h
 353+ 983F FE 58            cp $58
 354+ 9841 28 1C            jr z,4F
 355+ 9843 D1               pop de
 356+ 9844 7A           	ld a,d
 357+ 9845 AE           	xor (hl)
 358+ 9846 77           	ld (hl),a
 359+ 9847 24           	inc h
 360+ 9848 7C               ld a,h
 361+ 9849 E6 07            and 7
 362+ 984B 20 0A            jr nz,3F
 363+ 984D 7D               ld a,l
 364+ 984E C6 20            add a,$20
 365+ 9850 6F               ld l,a
 366+ 9851 38 04            jr c,3F
 367+ 9853 7C               ld a,h
 368+ 9854 D6 08            sub 8
 369+ 9856 67               ld h,a
 370+ 9857 7C           3 ld a,h
 371+ 9858 FE 58            cp $58
 372+ 985A 28 03            jr z,4F
 373+ 985C D1               pop de
 374+ 985D 10 CB            djnz 1B
 375+ 985F ED 7B D9 89  4 ld sp,(Stack)
 376+ 9863 C9           	ret
 377+ 9864
 378+ 9864              ; ---------------------------------------------------
 379+ 9864              ;
 380+ 9864              ;   27/02/23
 381+ 9864              ;
 382+ 9864              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9864              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9864              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9864
 386+ 9864 ED 73 D9 89  Pinta_Disparo ld (Stack),sp
 387+ 9868 FD F9            ld sp,iy
 388+ 986A 06 02            ld b,2
 389+ 986C D1           1 pop de
 390+ 986D 7B               ld a,e
 391+ 986E AE               xor (hl)
 392+ 986F 77               ld (hl),a
 393+ 9870 23               inc hl
 394+ 9871 7A               ld a,d
 395+ 9872 AE               xor (hl)
 396+ 9873 77               ld (hl),a
 397+ 9874 2B               dec hl
 398+ 9875
 399+ 9875 24               inc h
 400+ 9876 7C               ld a,h
 401+ 9877 E6 07            and 7
 402+ 9879 20 0A            jr nz,2F
 403+ 987B 7D               ld a,l
 404+ 987C C6 20            add a,$20
 405+ 987E 6F               ld l,a
 406+ 987F 38 04            jr c,2F
 407+ 9881 7C               ld a,h
 408+ 9882 D6 08            sub 8
 409+ 9884 67               ld h,a
 410+ 9885 7C           2 ld a,h
 411+ 9886 FE 58            cp $58
 412+ 9888 28 02            jr z,3F
 413+ 988A
 414+ 988A 10 E0            djnz 1B
 415+ 988C ED 7B D9 89  3 ld sp,(Stack)
 416+ 9890 C9               ret
 417+ 9891
# file closed: Rutinas_de_impresion_sprites.asm
1243  9891              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9891              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9891              ;
   3+ 9891              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9891              ;
   5+ 9891              ; *****************************************************************************************************************************************************************************************
   6+ 9891              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9891
   8+ 9891 7C           calcula_tercio ld a,h
   9+ 9892 E6 18        	and $18
  10+ 9894 CB 2F        	sra a
  11+ 9896 CB 2F        	sra a
  12+ 9898 CB 2F        	sra a
  13+ 989A C9           	ret
  14+ 989B
# file closed: calcula_tercio.asm
1244  989B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 989B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 989B              ;
   3+ 989B              ;
   4+ 989B              ;	CLS.
   5+ 989B              ;
   6+ 989B              ;	Limpia la pantalla y define sus atributos.
   7+ 989B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 989B              ;
   9+ 989B              ;	COLORES: 0 ..... NEGRO
  10+ 989B              ;    		 1 ..... AZUL
  11+ 989B              ; 			 2 ..... ROJO
  12+ 989B              ;			 3 ..... MAGENTA
  13+ 989B              ; 			 4 ..... VERDE
  14+ 989B              ; 			 5 ..... CIAN
  15+ 989B              ;			 6 ..... AMARILLO
  16+ 989B              ; 			 7 ..... BLANCO
  17+ 989B              ;
  18+ 989B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 989B              ;
  20+ 989B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 989B
  22+ 989B
  23+ 989B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 989E 11 01 40     	LD DE,$4001
  25+ 98A1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98A4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98A6 ED B0        	LDIR
  28+ 98A8 01 FF 02     	LD BC,767
  29+ 98AB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98AC ED B0        	LDIR
  31+ 98AE C9           	ret
  32+ 98AF
# file closed: Cls.asm
1245  98AF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98AF              ; ******************************************************************************************************************************************************************************************
   2+ 98AF              ;
   3+ 98AF              ;   20/05/23
   4+ 98AF              ;
   5+ 98AF              ;	Recompone_posicion_inicio
   6+ 98AF              ;
   7+ 98AF              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98AF              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98AF              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98AF              ;	_ a una u otra rutina.
  11+ 98AF
  12+ 98AF              Recompone_posicion_inicio
  13+ 98AF
  14+ 98AF 2A 9C 89     	ld hl,(Posicion_inicio)
  15+ 98B2 7D           	ld a,l
  16+ 98B3 E6 1F        	and $1f
  17+ 98B5 28 16        	jr z,1F
  18+ 98B7
  19+ 98B7 FE 1F        	cp $1f
  20+ 98B9 28 0D        	jr z,3F
  21+ 98BB
  22+ 98BB 21 C6 89     	ld hl,Ctrl_2
  23+ 98BE CB C6        	set 0,(hl)
  24+ 98C0 2A 8E 89     	ld hl,(Puntero_objeto)
  25+ 98C3 22 C9 89     	ld (Repone_puntero_objeto),hl
  26+ 98C6 18 08        	jr 2F
  27+ 98C8
  28+ 98C8 CD 69 9A     3 call Mov_left
  29+ 98CB 18 03        	jr 2F
  30+ 98CD
  31+ 98CD CD 4B 99     1 call Mov_right
  32+ 98D0 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98D3 22 8E 89     	ld (Puntero_objeto),hl
  34+ 98D6 C9           	ret
  35+ 98D7
  36+ 98D7              ; ******************************************************************************************************************************************************************************************
  37+ 98D7              ;
  38+ 98D7              ;   27/05/23
  39+ 98D7              ;
  40+ 98D7              ;	Mov_down
  41+ 98D7              ;
  42+ 98D7              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98D7              ;
  44+ 98D7              ;
  45+ 98D7              Mov_down
  46+ 98D7
  47+ 98D7 CD 39 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98DA              ;																	; _ repone (Puntero_objeto).
  49+ 98DA 21 B8 89     	ld hl,Ctrl_0
  50+ 98DD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98DF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98DF              ; 																	; _ en el caso de que no lo haya.
  53+ 98DF 3A A2 89     	ld a,(Vel_down)
  54+ 98E2 47           	ld b,a
  55+ 98E3 2A 8C 89         ld hl,(Posicion_actual)
  56+ 98E6 CD 91 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98E9 E6 02        	and 2
  58+ 98EB 28 0F        	jr z,1F
  59+ 98ED
  60+ 98ED              ; Nos encontramos en el último tercio de pantalla.
  61+ 98ED              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98ED
  63+ 98ED 7C           	ld a,h
  64+ 98EE FE 57        	cp $57
  65+ 98F0 20 0A        	jr nz,1F
  66+ 98F2 7D           	ld a,l
  67+ 98F3 C6 20        	add $20
  68+ 98F5 30 05        	jr nc,1F
  69+ 98F7
  70+ 98F7              ; ------------------------------
  71+ 98F7 CD E7 9B     	call Reaparece_arriba
  72+ 98FA              ;	call Reinicio
  73+ 98FA              ; ------------------------------
  74+ 98FA
  75+ 98FA 18 08        	jr 3F
  76+ 98FC CD D1 95     1 call NextScan
  77+ 98FF 22 8C 89     	ld (Posicion_actual),hl
  78+ 9902 10 E2            djnz 2B
  79+ 9904 CD FD 9B     3 call Genera_coordenadas
  80+ 9907 C9           	ret
  81+ 9908
  82+ 9908              ; ******************************************************************************************************************************************************************************************
  83+ 9908              ;
  84+ 9908              ;   27/05/23
  85+ 9908              ;
  86+ 9908              ;	Mov_up
  87+ 9908              ;
  88+ 9908              ; 	Mueve el Sprite hacia arriba.
  89+ 9908              ;
  90+ 9908              ;
  91+ 9908              Mov_up
  92+ 9908
  93+ 9908 CD 39 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 990B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 990B 21 B8 89     	ld hl,Ctrl_0
  96+ 990E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9910              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9910              ; 																		; _ en el caso de que no lo haya.
  99+ 9910 3A A1 89     	ld a,(Vel_up)
 100+ 9913 47           	ld b,a
 101+ 9914 2A 8C 89     	ld hl,(Posicion_actual)
 102+ 9917 CD 91 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 991A A7           	and a
 104+ 991B 20 10        	jr nz,1F
 105+ 991D
 106+ 991D              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 991D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 991D
 109+ 991D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 991E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9920 20 0B            jr nz,1F
 112+ 9922 7D               ld a,l
 113+ 9923 D6 20            sub $20
 114+ 9925 30 06            jr nc,1F
 115+ 9927 25               dec h
 116+ 9928
 117+ 9928              ; -----------------------------
 118+ 9928 CD D7 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 992B              ;	call Reinicio
 120+ 992B              ; -----------------------------
 121+ 992B
 122+ 992B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 992D CD E0 95     1 call PreviousScan
 124+ 9930 22 8C 89     	ld (Posicion_actual),hl
 125+ 9933 10 E2            djnz 3B
 126+ 9935 CD FD 9B     2 call Genera_coordenadas
 127+ 9938 C9           	ret
 128+ 9939
 129+ 9939              ; -----------------------------
 130+ 9939              ;
 131+ 9939              ;	27/5/23
 132+ 9939              ;
 133+ 9939              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9939              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9939              ;
 136+ 9939              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9939              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9939              ;
 139+ 9939              ;	Modifica: A y (Puntero_objeto).
 140+ 9939
 141+ 9939 3A C6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 993C CB 47        	bit 0,a
 143+ 993E C8           	ret z
 144+ 993F CB 87        	res 0,a
 145+ 9941 32 C6 89     	ld (Ctrl_2),a
 146+ 9944 2A C9 89     	ld hl,(Repone_puntero_objeto)
 147+ 9947 22 8E 89     	ld (Puntero_objeto),hl
 148+ 994A C9           	ret
 149+ 994B
 150+ 994B              ; ******************************************************************************************************************************************************************************************
 151+ 994B              ;
 152+ 994B              ;	19/10/22
 153+ 994B              ;
 154+ 994B              ;	Mov_right.
 155+ 994B              ;
 156+ 994B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 994B              ;
 158+ 994B
 159+ 994B 21 B8 89     Mov_right ld hl,Ctrl_0
 160+ 994E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9950              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9950              ; 																	; _ en el caso de que no lo haya.
 163+ 9950 3A B8 89     	ld a,(Ctrl_0)
 164+ 9953 CB 77        	bit 6,a
 165+ 9955 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9957
 167+ 9957 CD 85 9B     	call Stop_Amadeus_right
 168+ 995A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 995B 18 4D        	jr 8F
 170+ 995D
 171+ 995D 3A 90 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 9960 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 9962 20 46        	jr nz,8F
 174+ 9964
 175+ 9964 3A 92 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 9967 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 9968 28 40        	jr z,8F
 178+ 996A
 179+ 996A              ; ---------- ---------- ----------
 180+ 996A              ;
 181+ 996A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 996A
 183+ 996A 3A A0 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 996D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 996F 28 11        	jr z,1F
 186+ 9971 38 06        	jr c,6F
 187+ 9973 FE 04        	cp 4
 188+ 9975 28 14        	jr z,7F
 189+ 9977 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 9979
 191+ 9979              ; ---------- ---------- ----------
 192+ 9979              ;
 193+ 9979              ; Perfiles de velocidad
 194+ 9979              ;
 195+ 9979
 196+ 9979 3A 92 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 997C FE FE        	cp $fe
 198+ 997E 20 2A        	jr nz,8F
 199+ 9980 18 10        	jr 3F
 200+ 9982 3A 92 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 9985 FE FD        	cp $fd
 202+ 9987 20 21        	jr nz,8F
 203+ 9989 18 07        	jr 3F
 204+ 998B 3A 92 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 998E FE FB        	cp $fb
 206+ 9990 20 18        	jr nz,8F
 207+ 9992
 208+ 9992              ; ---------- ---------- ----------
 209+ 9992
 210+ 9992              3
 211+ 9992 CD C5 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 9995              ;	call Reinicio
 213+ 9995
 214+ 9995              ; ---------- ---------- ----------
 215+ 9995              ;
 216+ 9995              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 9995
 218+ 9995 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 9997 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 9998 CD B1 99     	call DESPLZ_DER
 221+ 999B C1           	pop bc
 222+ 999C 10 F9        	djnz 5B
 223+ 999E 2A 8C 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99A1 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99A2 22 8C 89     	ld (Posicion_actual),hl
 226+ 99A5 CD FD 9B     	call Genera_coordenadas
 227+ 99A8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99AA
 229+ 99AA              ; ---------- ---------- ----------
 230+ 99AA
 231+ 99AA 2A 8C 89     8 ld hl,(Posicion_actual)
 232+ 99AD CD B1 99     	call DESPLZ_DER
 233+ 99B0 C9           2 ret
 234+ 99B1
 235+ 99B1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99B1              ;
 237+ 99B1              ;	22/9/22
 238+ 99B1              ;
 239+ 99B1
 240+ 99B1 CD C0 99     DESPLZ_DER call Desplaza_derecha
 241+ 99B4 CD 0C 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99B7 CD 35 9A         call Ciclo_completo
 243+ 99BA 21 B8 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99BD CB FE        	set 7,(hl)
 245+ 99BF C9           	ret
 246+ 99C0
 247+ 99C0              ; ******************************************************************************************************************************************************************************************
 248+ 99C0              ;	15/02/23
 249+ 99C0              ;
 250+ 99C0
 251+ 99C0 3A A0 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99C3 47           	ld b,a
 253+ 99C4 2A 98 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 99C7 23           1 inc hl
 255+ 99C8 23           	inc hl
 256+ 99C9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 99CB 22 98 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 99CE CD E6 8C     	call Extrae_address
 259+ 99D1 22 8E 89     	ld (Puntero_objeto),hl
 260+ 99D4
 261+ 99D4              ; Modifica (Puntero_DESPLZ_izq).
 262+ 99D4
 263+ 99D4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 99D4              ; Cuántos movimientos hemos hecho ??
 265+ 99D4              ; DE contiene (Puntero_DESPLZ_der).
 266+ 99D4
 267+ 99D4 2A 94 89     7 ld hl,(Indice_Sprite_der)
 268+ 99D7 EB           	ex de,hl
 269+ 99D8 A7           	and a
 270+ 99D9 ED 52        	sbc hl,de
 271+ 99DB CB 3D        	srl l
 272+ 99DD 3E 08        6 ld a,8
 273+ 99DF 95           	sub l
 274+ 99E0 30 1E        	jr nc,3F
 275+ 99E2
 276+ 99E2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 99E2              ; B="0".
 278+ 99E2
 279+ 99E2 04           4 inc b
 280+ 99E3 3C           	inc a
 281+ 99E4 20 FC        	jr nz,4B
 282+ 99E6 78           	ld a,b
 283+ 99E7 08           	ex af,af
 284+ 99E8 2A 94 89     	ld hl,(Indice_Sprite_der)
 285+ 99EB 23           5 inc hl
 286+ 99EC 23           	inc hl
 287+ 99ED 10 FC        	djnz 5B
 288+ 99EF 22 98 89     	ld (Puntero_DESPLZ_der),hl
 289+ 99F2 CD E6 8C     	call Extrae_address
 290+ 99F5 22 8E 89     	ld (Puntero_objeto),hl
 291+ 99F8
 292+ 99F8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 99F8              ; _(Posicion_actual).
 294+ 99F8
 295+ 99F8 21 8C 89     	ld hl,Posicion_actual
 296+ 99FB 34           	inc (hl)
 297+ 99FC 08               ex af,af
 298+ 99FD 6F           	ld l,a
 299+ 99FE 18 DD        	jr 6B
 300+ 9A00
 301+ 9A00              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A00
 303+ 9A00 47           3 ld b,a
 304+ 9A01 2A 96 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A04 23           2 inc hl
 306+ 9A05 23           	inc hl
 307+ 9A06 10 FC        	djnz 2B
 308+ 9A08 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A0B C9           8 ret
 310+ 9A0C
 311+ 9A0C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A0C              ;
 313+ 9A0C              ;	24/7/22
 314+ 9A0C              ;
 315+ 9A0C              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A0C              ;
 317+ 9A0C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A0C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A0C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A0C
 321+ 9A0C 3A 92 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A0F A7           	and a
 323+ 9A10 20 1F        	jr nz,1F
 324+ 9A12 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A14 32 92 89         ld (CTRL_DESPLZ),a
 326+ 9A17
 327+ 9A17 21 8B 89     	ld hl,Columns
 328+ 9A1A 34           	inc (hl)
 329+ 9A1B 3A 9E 89     	ld a,(Cuad_objeto)
 330+ 9A1E E6 01        	and 1
 331+ 9A20 28 0F        	jr z,1F
 332+ 9A22 2A 8C 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A25 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A26 22 8C 89     	ld (Posicion_actual),hl
 335+ 9A29 CD FD 9B     	call Genera_coordenadas
 336+ 9A2C CD 91 9B     	call Inc_CTRL_DESPLZ
 337+ 9A2F 18 03        	jr 2F
 338+ 9A31 CD 91 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A34 C9           2 ret
 340+ 9A35
 341+ 9A35              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A35              ;
 343+ 9A35              ;	24/7/22
 344+ 9A35              ;
 345+ 9A35              ;	Ciclo_completo.
 346+ 9A35              ;
 347+ 9A35              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A35              ;
 349+ 9A35              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A35              ; 	Decrementamos (Columns).
 351+ 9A35              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A35              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A35
 354+ 9A35
 355+ 9A35 3A 92 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A38 FE FF        	cp $ff
 357+ 9A3A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A3C E6 F0        	and $f0
 359+ 9A3E 20 28        	jr nz,3F
 360+ 9A40
 361+ 9A40              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A40
 363+ 9A40 3A 92 89     	ld a,(CTRL_DESPLZ)
 364+ 9A43 47           	ld b,a
 365+ 9A44 3E F8        	ld a,$f8
 366+ 9A46 80           	add b
 367+ 9A47 32 92 89     	ld (CTRL_DESPLZ),a
 368+ 9A4A 18 1C        	jr 3F
 369+ 9A4C 21 8B 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A4F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A50 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A51 32 92 89     	ld (CTRL_DESPLZ),a
 373+ 9A54 3A 9E 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A57 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A59 20 0A        	jr nz,2F
 376+ 9A5B 2A 8C 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A5E 23           	inc hl
 378+ 9A5F 22 8C 89     	ld (Posicion_actual),hl
 379+ 9A62 CD FD 9B     	call Genera_coordenadas
 380+ 9A65
 381+ 9A65              ; Inicia el puntero de Sprite.
 382+ 9A65
 383+ 9A65 CD FD 8C     2 call Inicia_puntero_objeto_der
 384+ 9A68 C9           3 ret
 385+ 9A69
 386+ 9A69              ; ******************************************************************************************************************************************************************************************
 387+ 9A69              ;
 388+ 9A69              ;	15/02/23
 389+ 9A69              ;
 390+ 9A69              ;	Mov_left.
 391+ 9A69              ;
 392+ 9A69              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9A69              ;
 394+ 9A69 21 B8 89     Mov_left ld hl,Ctrl_0
 395+ 9A6C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9A6E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9A6E              ; 																	; _ en el caso de que no lo haya.
 398+ 9A6E 3A B8 89     	ld a,(Ctrl_0)
 399+ 9A71 CB 77        	bit 6,a
 400+ 9A73 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9A75
 402+ 9A75 CD 8B 9B     	call Stop_Amadeus_left
 403+ 9A78 C8           	ret z
 404+ 9A79 20 4A        	jr nz,8F
 405+ 9A7B
 406+ 9A7B 3A 90 89     11 ld a,(Coordenada_X)
 407+ 9A7E A7           	and a
 408+ 9A7F 20 44        	jr nz,8F
 409+ 9A81
 410+ 9A81 3A 92 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9A84 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9A85 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9A87
 414+ 9A87              ; ---------- ---------- ----------
 415+ 9A87
 416+ 9A87 3A 9F 89     	ld a,(Vel_left)
 417+ 9A8A FE 02        	cp 2
 418+ 9A8C 28 0F        	jr z,1F
 419+ 9A8E 38 04        	jr c,6F
 420+ 9A90 FE 04        	cp 4
 421+ 9A92 28 12        	jr z,7F
 422+ 9A94
 423+ 9A94              ; ---------- ---------- ----------
 424+ 9A94
 425+ 9A94 3A 92 89     6 ld a,(CTRL_DESPLZ)
 426+ 9A97 FE F8        	cp $f8
 427+ 9A99 20 2A        	jr nz,8F
 428+ 9A9B 18 10        	jr 4F
 429+ 9A9D 3A 92 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AA0 FE F9        	cp $f9
 431+ 9AA2 20 21        	jr nz,8F
 432+ 9AA4 18 07        	jr 4F
 433+ 9AA6 3A 92 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AA9 FE FB        	cp $fb
 435+ 9AAB 20 18        	jr nz,8F
 436+ 9AAD
 437+ 9AAD              ; ---------- ---------- ----------
 438+ 9AAD
 439+ 9AAD              4
 440+ 9AAD CD B3 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AB0              ;	call Reinicio
 442+ 9AB0
 443+ 9AB0              ; ---------- ---------- ----------
 444+ 9AB0
 445+ 9AB0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AB2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9AB3
 448+ 9AB3              ;	ld hl,(Indice_Sprite_izq)
 449+ 9AB3              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9AB3
 451+ 9AB3 CD CC 9A     	call DESPLZ_IZQ
 452+ 9AB6 C1           	pop bc
 453+ 9AB7 10 F9        	djnz 5B
 454+ 9AB9 2A 8C 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9ABC 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9ABD 22 8C 89     	ld (Posicion_actual),hl
 457+ 9AC0 CD FD 9B     	call Genera_coordenadas
 458+ 9AC3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9AC5
 460+ 9AC5              ; ---------- ---------- ----------
 461+ 9AC5
 462+ 9AC5              ; Movemos, no hay recolocación.
 463+ 9AC5
 464+ 9AC5 2A 8C 89     8 ld hl,(Posicion_actual)
 465+ 9AC8 CD CC 9A     	call DESPLZ_IZQ
 466+ 9ACB C9           2 ret
 467+ 9ACC
 468+ 9ACC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9ACC              ;
 470+ 9ACC              ;	22/9/22
 471+ 9ACC
 472+ 9ACC              DESPLZ_IZQ
 473+ 9ACC
 474+ 9ACC CD DB 9A     	call Desplaza_izquierda
 475+ 9ACF CD 27 9B         call modifica_parametros_1er_DESPLZ
 476+ 9AD2 CD 4F 9B     	call Ciclo_completo_2
 477+ 9AD5 21 B8 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9AD8 CB BE        	res 7,(hl)
 479+ 9ADA C9           	ret
 480+ 9ADB
 481+ 9ADB              Desplaza_izquierda
 482+ 9ADB
 483+ 9ADB 3A 9F 89     	ld a,(Vel_left)
 484+ 9ADE 47           	ld b,a
 485+ 9ADF 2A 9A 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9AE2 23           1 inc hl
 487+ 9AE3 23           	inc hl
 488+ 9AE4 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9AE6 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9AE9 CD E6 8C     	call Extrae_address
 491+ 9AEC 22 8E 89     	ld (Puntero_objeto),hl
 492+ 9AEF
 493+ 9AEF              ; Modifica (Puntero_DESPLZ_der).
 494+ 9AEF
 495+ 9AEF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9AEF              ; Cuántos movimientos hemos hecho ??
 497+ 9AEF              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9AEF
 499+ 9AEF 2A 96 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9AF2 EB           	ex de,hl
 501+ 9AF3 A7           	and a
 502+ 9AF4 ED 52        	sbc hl,de
 503+ 9AF6 CB 3D        	srl l
 504+ 9AF8 3E 08        6 ld a,8
 505+ 9AFA 95           	sub l
 506+ 9AFB 30 1E        	jr nc,3F
 507+ 9AFD
 508+ 9AFD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9AFD              ; B="0".
 510+ 9AFD
 511+ 9AFD 04           4 inc b
 512+ 9AFE 3C           	inc a
 513+ 9AFF 20 FC        	jr nz,4B
 514+ 9B01 78           	ld a,b
 515+ 9B02 08           	ex af,af
 516+ 9B03 2A 96 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B06 23           5 inc hl
 518+ 9B07 23           	inc hl
 519+ 9B08 10 FC        	djnz 5B
 520+ 9B0A 22 9A 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B0D CD E6 8C     	call Extrae_address
 522+ 9B10 22 8E 89     	ld (Puntero_objeto),hl
 523+ 9B13
 524+ 9B13              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B13              ; _(Posicion_actual).
 526+ 9B13
 527+ 9B13 21 8C 89     	ld hl,Posicion_actual
 528+ 9B16 35           	dec (hl)
 529+ 9B17 08           	ex af,af
 530+ 9B18 6F           	ld l,a
 531+ 9B19 18 DD        	jr 6B
 532+ 9B1B
 533+ 9B1B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B1B
 535+ 9B1B 47           3 ld b,a
 536+ 9B1C 2A 94 89     	ld hl,(Indice_Sprite_der)
 537+ 9B1F 23           2 inc hl
 538+ 9B20 23           	inc hl
 539+ 9B21 10 FC        	djnz 2B
 540+ 9B23 22 98 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B26 C9           8 ret
 542+ 9B27
 543+ 9B27              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B27              ;
 545+ 9B27              ;	modifica_parametros_1er_DESPLZ
 546+ 9B27              ;
 547+ 9B27              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B27              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B27              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B27
 551+ 9B27 3A 92 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B2A A7           	and a
 553+ 9B2B 20 1E        	jr nz,1F
 554+ 9B2D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B2E 32 92 89         ld (CTRL_DESPLZ),a
 556+ 9B31 21 8B 89     	ld hl,Columns
 557+ 9B34 34           	inc (hl)
 558+ 9B35 3A 9E 89     	ld a,(Cuad_objeto)
 559+ 9B38 E6 01        	and 1
 560+ 9B3A 20 0F        	jr nz,1F
 561+ 9B3C 2A 8C 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B3F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B40 22 8C 89     	ld (Posicion_actual),hl
 564+ 9B43 CD FD 9B     	call Genera_coordenadas
 565+ 9B46 CD A2 9B     	call Dec_CTRL_DESPLZ
 566+ 9B49 18 03        	jr 2F
 567+ 9B4B CD A2 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B4E C9           2 ret
 569+ 9B4F
 570+ 9B4F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B4F
 572+ 9B4F 3A 92 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B52 FE F7        	cp $f7
 574+ 9B54 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B56 30 2C        	jr nc,3F
 576+ 9B58
 577+ 9B58              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B58
 579+ 9B58 06 00        	ld b,0
 580+ 9B5A 04           4 inc b
 581+ 9B5B 3C           	inc a
 582+ 9B5C FE F7        	cp $f7
 583+ 9B5E 20 FA        	jr nz,4B
 584+ 9B60 3E FF        	ld a,$ff
 585+ 9B62 90           	sub b
 586+ 9B63 32 92 89     	ld (CTRL_DESPLZ),a
 587+ 9B66 18 1C        	jr 3F
 588+ 9B68
 589+ 9B68              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9B68
 591+ 9B68 21 8B 89     1 ld hl,Columns
 592+ 9B6B 35           	dec (hl)
 593+ 9B6C AF           	xor a
 594+ 9B6D 32 92 89     	ld (CTRL_DESPLZ),a
 595+ 9B70 3A 9E 89     	ld a,(Cuad_objeto)
 596+ 9B73 E6 01        	and 1
 597+ 9B75 28 0A        	jr z,2F
 598+ 9B77 2A 8C 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9B7A 2B           	dec hl
 600+ 9B7B 22 8C 89     	ld (Posicion_actual),hl
 601+ 9B7E CD FD 9B     	call Genera_coordenadas
 602+ 9B81
 603+ 9B81              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9B81
 605+ 9B81 CD 10 8D     2 call Inicia_puntero_objeto_izq
 606+ 9B84 C9           3 ret
 607+ 9B85
 608+ 9B85              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9B85              ;
 610+ 9B85              ;	19/10/22
 611+ 9B85              ;
 612+ 9B85              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9B85              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9B85
 615+ 9B85 3A 90 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9B88 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9B8A C9           	ret
 618+ 9B8B
 619+ 9B8B              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9B8B              ;
 621+ 9B8B              ;	19/10/22
 622+ 9B8B              ;
 623+ 9B8B              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9B8B              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9B8B
 626+ 9B8B 3A 90 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9B8E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9B90 C9           	ret
 629+ 9B91
 630+ 9B91              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9B91              ;
 632+ 9B91              ;	24/7/22
 633+ 9B91              ;
 634+ 9B91              ;	Inc_CTRL_DESPLZ
 635+ 9B91              ;
 636+ 9B91              ;
 637+ 9B91              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9B91
 639+ 9B91 21 92 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9B94 3A A0 89     	ld a,(Vel_right)
 641+ 9B97 A7           	and a
 642+ 9B98 28 06        	jr z,1F
 643+ 9B9A 47           	ld b,a
 644+ 9B9B 34           3 inc (hl)
 645+ 9B9C 10 FD        	djnz 3B
 646+ 9B9E 18 01        	jr 2F
 647+ 9BA0 34           1 inc (hl)
 648+ 9BA1 C9           2 ret
 649+ 9BA2
 650+ 9BA2              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BA2              ;
 652+ 9BA2              ;	5/2/23
 653+ 9BA2              ;
 654+ 9BA2              ;	Dec_CTRL_DESPLZ
 655+ 9BA2              ;
 656+ 9BA2              ;
 657+ 9BA2              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BA2
 659+ 9BA2 21 92 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BA5 3A 9F 89     	ld a,(Vel_left)
 661+ 9BA8 A7           	and a
 662+ 9BA9 28 06        	jr z,1F
 663+ 9BAB 47           	ld b,a
 664+ 9BAC 35           3 dec (hl)
 665+ 9BAD 10 FD        	djnz 3B
 666+ 9BAF 18 01        	jr 2F
 667+ 9BB1 35           1 dec (hl)
 668+ 9BB2 C9           2 ret
 669+ 9BB3
 670+ 9BB3              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BB3
 672+ 9BB3 2A 8C 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BB6 01 1F 00     	ld bc,31
 674+ 9BB9 A7           	and a
 675+ 9BBA ED 4A        	adc hl,bc
 676+ 9BBC 22 8C 89     	ld (Posicion_actual),hl
 677+ 9BBF 21 B8 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BC2 CB C6        	set 0,(hl)
 679+ 9BC4 C9           	ret
 680+ 9BC5
 681+ 9BC5              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BC5
 683+ 9BC5 2A 8C 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9BC8 01 1F 00     	ld bc,31
 685+ 9BCB A7           	and a
 686+ 9BCC ED 42        	sbc hl,bc
 687+ 9BCE 22 8C 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9BD1 21 B8 89     	ld hl,Ctrl_0
 689+ 9BD4 CB CE        	set 1,(hl)
 690+ 9BD6 C9           	ret
 691+ 9BD7
 692+ 9BD7              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9BD7
 694+ 9BD7 24           Reaparece_abajo inc h
 695+ 9BD8 01 E0 17     	ld bc,$17e0
 696+ 9BDB A7           	and a
 697+ 9BDC ED 4A        	adc hl,bc
 698+ 9BDE 22 8C 89     	ld (Posicion_actual),hl
 699+ 9BE1 21 B8 89     	ld hl,Ctrl_0
 700+ 9BE4 CB D6        	set 2,(hl)
 701+ 9BE6 C9           	ret
 702+ 9BE7
 703+ 9BE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9BE7
 705+ 9BE7 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9BEA A7           	and a
 707+ 9BEB ED 42        	sbc hl,bc
 708+ 9BED 22 8C 89     	ld (Posicion_actual),hl
 709+ 9BF0 21 B8 89     	ld hl,Ctrl_0
 710+ 9BF3 CB DE        	set 3,(hl)
 711+ 9BF5 C9           	ret
 712+ 9BF6
 713+ 9BF6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9BF6
 715+ 9BF6 2A 9C 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9BF9 22 8C 89     	ld (Posicion_actual),hl
 717+ 9BFC C9           	ret
# file closed: Direcciones.asm
1246  9BFD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BFD              ; ------------------------------------------------------------------------
   2+ 9BFD              ;
   3+ 9BFD              ;	02/04/23
   4+ 9BFD              ;
   5+ 9BFD              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BFD              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BFD              ;
   8+ 9BFD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BFD              ;
  10+ 9BFD              ;	Modifica: A,BC y DE.
  11+ 9BFD
  12+ 9BFD C5           Genera_coordenadas push bc
  13+ 9BFE E5           	push hl
  14+ 9BFF D5           	push de
  15+ 9C00
  16+ 9C00 2A 8C 89     	ld hl,(Posicion_actual)
  17+ 9C03
  18+ 9C03 7D           	ld a,l
  19+ 9C04 E6 1F        	and $1f
  20+ 9C06 32 90 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C09
  22+ 9C09 CD 91 98     	call calcula_tercio
  23+ 9C0C 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C0D
  25+ 9C0D 1E 00        	ld e,0
  26+ 9C0F 7D           	ld a,l
  27+ 9C10 E6 E0        	and $e0
  28+ 9C12 28 01        	jr z,1F
  29+ 9C14 04           	inc b
  30+ 9C15
  31+ 9C15 04           1 inc b
  32+ 9C16 05           	dec b
  33+ 9C17 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C19              ;														; _ , salimos.
  35+ 9C19 1C           3 inc e
  36+ 9C1A D6 20        	sub 32
  37+ 9C1C 20 FB        	jr nz,3B
  38+ 9C1E 10 F5        	djnz 1B
  39+ 9C20
  40+ 9C20 7B           2 ld a,e
  41+ 9C21 32 91 89     	ld (Coordenada_y),a
  42+ 9C24
  43+ 9C24 D1           	pop de
  44+ 9C25 E1           	pop hl
  45+ 9C26 C1           	pop bc
  46+ 9C27
  47+ 9C27 C9           	ret
  48+ 9C28
  49+ 9C28              ; ------------------------------------------------------------------------
  50+ 9C28              ;	28/05/23
  51+ 9C28              ;
  52+ 9C28              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C28              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C28              ;
  55+ 9C28              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C28              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C28              ;
  58+ 9C28              ;		DE="$120d"
  59+ 9C28              ;
  60+ 9C28              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C28              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C28              ;
  63+ 9C28              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C28
  65+ 9C28              ;	Modifica: A,BC y DE.
  66+ 9C28
  67+ 9C28
  68+ 9C28              Genera_coordenadas_disparo
  69+ 9C28
  70+ 9C28              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C28
  72+ 9C28 7D           	ld a,l
  73+ 9C29 E6 1F        	and $1f
  74+ 9C2B 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C2C CD 91 98     	call calcula_tercio
  76+ 9C2F 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C30 1E 00        	ld e,0
  78+ 9C32 7D           	ld a,l
  79+ 9C33 E6 E0        	and $e0
  80+ 9C35 28 01        	jr z,1F
  81+ 9C37 04           	inc b
  82+ 9C38 1C           1 inc e
  83+ 9C39 D6 20        	sub 32
  84+ 9C3B 20 FB        	jr nz,1B
  85+ 9C3D 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C3F C9           	ret
  87+ 9C40
# file closed: Genera_coordenadas.asm
1247  9C40              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C40
   2+ 9C40
   3+ 9C40              ;   11/8/22
   4+ 9C40              ;
   5+ 9C40              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C40              ;
   7+ 9C40              ;   Mov_obj.asm
   8+ 9C40              ;
   9+ 9C40              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C40              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C40              ;
  12+ 9C40              ;   Codificación:
  13+ 9C40              ;
  14+ 9C40              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C40
  16+ 9C40              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C40
  18+ 9C40 02 40 00     Arriba db 2,%01000000,0
  19+ 9C43 02 80 00     Abajo db 2,%10000000,0
  20+ 9C46 02 20 00     Derecha db 2,%00100000,0
  21+ 9C49 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C4C 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C50 60 42 60 40
  22+ 9C54 63
  23+ 9C55 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9C59 22 A3 80 A0
  24+ 9C5D 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9C61 84 A0 83 A0
  25+ 9C65 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9C69 80 A3 22 A0
  26+ 9C6D 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9C71 40 60 42 60
  27+ 9C75 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9C79
  29+ 9C79 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9C7D 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9C81 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9C85 84 00
  32+ 9C87 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9C8B 84 00
  33+ 9C8D 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9C91 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9C95 1F 1F 1F 1F
  35+ 9C99 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9C9D 1F 1F 1F 1F
  35+ 9CA1 1F
  36+ 9CA2 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CA6 2F 2F 2F 2F
  36+ 9CAA 2F 2F
  37+ 9CAC 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CB0 2F 2F 00
  38+ 9CB3
  39+ 9CB3              ; ----- ----- ----- ----- -----
  40+ 9CB3
  41+ 9CB3 91 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9CB5 8D 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9CB7 49 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9CB9 46 9C        Indice_mov_Derecha defw Derecha
  45+ 9CBB 43 9C        Indice_mov_Abajo defw Abajo
  46+ 9CBD 40 9C        Indice_mov_Arriba defw Arriba
  47+ 9CBF 7D 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9CC1 81 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9CC3 79 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9CC5 87 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9CC7 4C 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9CC9              ; ----- ----- ----- ----- -----
  53+ 9CC9
  54+ 9CC9 3A BF 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9CCC A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9CCD 28 02            jr z,1F
  57+ 9CCF 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9CD1 3A C0 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9CD4 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9CD6 32 C0 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9CD9              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9CD9 2A BD 89         ld hl,(Puntero_mov)
  63+ 9CDC 7E               ld a,(hl)
  64+ 9CDD 32 BF 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9CE0 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9CE1 22 BD 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9CE4
  68+ 9CE4 3A C1 89     Decoder ld a,(Repetimos_db)
  69+ 9CE7 A7               and a
  70+ 9CE8 20 0C            jr nz,12F
  71+ 9CEA 2A BD 89         ld hl,(Puntero_mov)
  72+ 9CED 7E               ld a,(hl)
  73+ 9CEE A7               and a
  74+ 9CEF 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9CF1 E6 0F            and $0f
  76+ 9CF3 32 C1 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9CF6              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9CF6 2A BD 89     12 ld hl,(Puntero_mov)
  79+ 9CF9 CB 7E            bit 7,(hl)
  80+ 9CFB 28 03            jr z,2F
  81+ 9CFD CD D7 98         call Mov_down
  82+ 9D00 2A BD 89     2 ld hl, (Puntero_mov)
  83+ 9D03 CB 76            bit 6,(hl)
  84+ 9D05 28 03            jr z,3F
  85+ 9D07 CD 08 99         call Mov_up
  86+ 9D0A 2A BD 89     3 ld hl, (Puntero_mov)
  87+ 9D0D CB 6E            bit 5,(hl)
  88+ 9D0F 28 03            jr z,4F
  89+ 9D11 CD 4B 99         call Mov_right
  90+ 9D14 2A BD 89     4 ld hl, (Puntero_mov)
  91+ 9D17 CB 66            bit 4,(hl)
  92+ 9D19 28 03            jr z,5F
  93+ 9D1B CD 69 9A         call Mov_left
  94+ 9D1E
  95+ 9D1E              ; ---------- --------- --------- ---------- ----------
  96+ 9D1E
  97+ 9D1E 3A C1 89     5 ld a,(Repetimos_db)
  98+ 9D21 A7               and a
  99+ 9D22 28 07            jr z,6F
 100+ 9D24 3D               dec a
 101+ 9D25 32 C1 89         ld (Repetimos_db),a
 102+ 9D28 28 01            jr z,6f
 103+ 9D2A C9           11 ret
 104+ 9D2B 21 BF 89     6 ld hl,Contador_db_mov
 105+ 9D2E 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D2F 2A BD 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D32 23               inc hl
 108+ 9D33 22 BD 89         ld (Puntero_mov),hl
 109+ 9D36 18 F2            jr 11B
 110+ 9D38 2A BB 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D3B 3A C0 89         ld a,(Incrementa_puntero)
 112+ 9D3E 47               ld b,a
 113+ 9D3F 23           8 inc hl
 114+ 9D40 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D42 5E               ld e,(hl)
 116+ 9D43 23               inc hl
 117+ 9D44 56               ld d,(hl)
 118+ 9D45 EB               ex de,hl
 119+ 9D46 22 BD 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D49 18 DF            jr 11B
 121+ 9D4B
 122+ 9D4B              ; ---------- --------- --------- ---------- ----------
 123+ 9D4B              ;
 124+ 9D4B              ;   11/8/22
 125+ 9D4B              ;
 126+ 9D4B              ;   Prepara_Puntero_mov
 127+ 9D4B
 128+ 9D4B E5           Prepara_Puntero_mov push hl
 129+ 9D4C D5               push de
 130+ 9D4D 2A BB 89         ld hl,(Puntero_indice_mov)
 131+ 9D50 5E               ld e,(hl)
 132+ 9D51 23               inc hl
 133+ 9D52 56               ld d,(hl)
 134+ 9D53 EB               ex de,hl
 135+ 9D54 22 BD 89         ld (Puntero_mov),hl
 136+ 9D57 D1               pop de
 137+ 9D58 E1               pop hl
 138+ 9D59 C9               ret
 139+ 9D5A
 140+ 9D5A              ; ---------- --------- --------- ---------- ----------
 141+ 9D5A              ;
 142+ 9D5A              ;   11/8/22
 143+ 9D5A              ;
 144+ 9D5A              ;   Reinicia_el_movimiento
 145+ 9D5A
 146+ 9D5A CD 4B 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9D5D AF               xor a
 148+ 9D5E 32 BF 89         ld (Contador_db_mov),a
 149+ 9D61 32 C0 89         ld (Incrementa_puntero),a
 150+ 9D64 C3 C9 9C         jp Movimiento
 151+ 9D67 C9               ret
 152+ 9D68              ; ---------- --------- --------- ---------- ----------
 153+ 9D68
 154+ 9D68
 155+ 9D68
 156+ 9D68
 157+ 9D68
 158+ 9D68
 159+ 9D68
 160+ 9D68
 161+ 9D68
 162+ 9D68
 163+ 9D68
 164+ 9D68
 165+ 9D68
 166+ 9D68
 167+ 9D68
 168+ 9D68
 169+ 9D68
 170+ 9D68
# file closed: Patrones_de_mov.asm
1248  9D68              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9D68              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9D68              ;
   3+ 9D68              ;	3/1/23
   4+ 9D68              ;
   5+ 9D68              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9D68
   7+ 9D68              ;	ADC HL,SP	LD (addr),SP
   8+ 9D68              ;	ADD HL,SP	LD SP,(addr)
   9+ 9D68              ;	ADD IX,SP	LD SP,nn
  10+ 9D68              ; 	ADD IY,SP	LD SP,HL
  11+ 9D68              ;				LD SP,IX
  12+ 9D68              ;	DEC SP		LD SP,IY
  13+ 9D68
  14+ 9D68              ;	EX (SP),HL
  15+ 9D68              ;	EX (SP),IX
  16+ 9D68              ;	EX (SP),IY
  17+ 9D68
  18+ 9D68              ;	INC SP
  19+ 9D68
  20+ 9D68
  21+ 9D68                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 D9 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A C8 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A DF 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A DD 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 DF 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 DD 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B D9 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1249  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1250  7FE6
1251  7FE6              	SAVESNA "Pruebas.sna", START
1252  7FE6
1253  7FE6
1254  7FE6
1255  7FE6
# file closed: Banco_de_pruebas.asm
