# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 B6 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD E4 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD F4 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 C0 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B B6 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D D1 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 878C              ; 19/1/24
   2+ 878C
   3+ 878C              Indice_de_niveles
   4+ 878C
   5+ 878C 94 87        	defw Nivel_1
   6+ 878E 9E 87        	defw Nivel_2
   7+ 8790
   8+ 8790              ;	...
   9+ 8790              ;	...
  10+ 8790              ;	+ Niveles ...
  11+ 8790
  12+ 8790 00 00        	defw 0
  13+ 8792 00 00        	defw 0
  14+ 8794
  15+ 8794 05           Nivel_1 db 5									; Nº de entidades.
  16+ 8795 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8799 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 879D 01
  18+ 879E
  19+ 879E 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 879F 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 87A3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 87A7 01 02
  22+ 87A9 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87AD 01 02
  23+ 87AF
  24+ 87AF              ;---------------------------------------------------------------------------------------------------------------
  25+ 87AF              ;
  26+ 87AF              ;   19/1/24
  27+ 87AF              ;
  28+ 87AF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 87AF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 87AF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 87AF              ;	_ de la 1ª entidad del Nivel.
  32+ 87AF              ;
  33+ 87AF              ;	MODIFICA: HL,DE y A.
  34+ 87AF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 87AF
  36+ 87AF              Inicializa_Nivel
  37+ 87AF
  38+ 87AF 2A DF 89     	ld hl,(Puntero_indice_NIVELES)
  39+ 87B2 CD B0 8B     	call Extrae_address
  40+ 87B5 7E           	ld a,(hl)
  41+ 87B6 32 AA 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 87B9 23           	inc hl
  43+ 87BA CD C4 87     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 87BD 22 E1 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 87C0 CD CD 87     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 87C3 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 87C4
  48+ 87C4              ; ----------------------
  49+ 87C4
  50+ 87C4 11 89 89     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 87C7 01 04 00     	ld bc,4
  52+ 87CA ED B0        	ldir
  53+ 87CC C9           	ret
  54+ 87CD
  55+ 87CD 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 87CE CD DB 88         call Calcula_salto_en_BC
  57+ 87D1 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 87D4 A7               and a
  59+ 87D5 ED 4A            adc hl,bc
  60+ 87D7 CD B0 8B         call Extrae_address
  61+ 87DA 22 95 89         ld (Puntero_indice_mov),hl
  62+ 87DD C9               ret
  63+ 87DE
  64+ 87DE              ;---------------------------------------------------------------------------------------------------------------
  65+ 87DE              ;
  66+ 87DE              ;   5/1/24
  67+ 87DE              ;
  68+ 87DE              ;	Destruye A,BC,HL,DE
  69+ 87DE
  70+ 87DE              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 87DE              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 87DE
  73+ 87DE              Inicia_Entidades
  74+ 87DE
  75+ 87DE              ; Preparamos los punteros de las cajas de entidades:
  76+ 87DE
  77+ 87DE CD 18 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 87E1              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 87E1 CD 42 89     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 87E4
  81+ 87E4 2A E1 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 87E7
  83+ 87E7 22 E1 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 87EA
  85+ 87EA CD 89 88     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 87ED
  87+ 87ED 2A E1 89     	ld hl,(Datos_de_nivel)
  88+ 87F0
  89+ 87F0              ; En este punto:
  90+ 87F0              ;
  91+ 87F0              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 87F0              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 87F0
  94+ 87F0 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 87F1
  96+ 87F1 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 87F2 CD DB 88     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 87F5
  99+ 87F5 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 100+ 87F8 CD E3 88     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 87FB
 102+ 87FB CD ED 88     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 87FE
 104+ 87FE              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 87FE
 106+ 87FE CD AB 88     	call Busca_mov_masticados_segun_tipo
 107+ 8801
 108+ 8801 A7           	and a
 109+ 8802 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 8804
 111+ 8804              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 8804
 113+ 8804              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 8804              ;	_ de este tipo de entidad.
 115+ 8804
 116+ 8804 CD DE 9E     	call Situa_en_contador_general_de_mov_masticados
 117+ 8807 CD EB 9E     	call Transfiere_datos_de_contadores
 118+ 880A
 119+ 880A 18 06        	jr 4F
 120+ 880C
 121+ 880C CD 72 8A     3 call Construye_movimientos_masticados_entidad
 122+ 880F
 123+ 880F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 124+ 880F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 125+ 880F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 126+ 880F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 127+ 880F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 128+ 880F
 129+ 880F CD 69 88     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 130+ 8812              ;																; _ Mov_masticados ya generados.
 131+ 8812 CD 44 88     4 call Guarda_foto_de_mov_masticado
 132+ 8815
 133+ 8815              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 134+ 8815
 135+ 8815 2A 7C 89     	ld hl,(Puntero_de_impresion)
 136+ 8818 CD 7E 9B     	call Genera_coordenadas
 137+ 881B CD 14 89     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 138+ 881E CD 4E 88     	call Limpiamos_bandeja_DRAW
 139+ 8821 CD 17 8C     	call Incrementa_punteros_de_cajas
 140+ 8824
 141+ 8824              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 142+ 8824              ; _ entidad del Nivel.
 143+ 8824
 144+ 8824 3A C1 89     	ld a,(Ctrl_4)
 145+ 8827 E6 F0        	and $f0
 146+ 8829 32 C1 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 147+ 882C
 148+ 882C              ; Siguiente entidad del Nivel.
 149+ 882C
 150+ 882C 2A E1 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 151+ 882F 23           	inc hl 														; _ entidad del Nivel.
 152+ 8830
 153+ 8830 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 154+ 8831 10 B4        	djnz 2B
 155+ 8833
 156+ 8833 C9           	ret
 157+ 8834
 158+ 8834              ; ---------------------------------------------------------------------
 159+ 8834              ;
 160+ 8834              ;	30/01/24
 161+ 8834
 162+ 8834
 163+ 8834              Store_Restore_cajas
 164+ 8834
 165+ 8834              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 166+ 8834
 167+ 8834 2A 7C 89     	ld hl,(Puntero_de_impresion)
 168+ 8837 CD 7E 9B     	call Genera_coordenadas
 169+ 883A CD 14 89     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 170+ 883D CD 4E 88     	call Limpiamos_bandeja_DRAW
 171+ 8840
 172+ 8840              ; 	Entidad_sospechosa. 20/4/23
 173+ 8840
 174+ 8840              ;	ld a,(Impacto)
 175+ 8840              ;	and a
 176+ 8840              ;	jr z,1F
 177+ 8840
 178+ 8840              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 179+ 8840              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 180+ 8840              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 181+ 8840              ;	adc hl,bc 											; _ "0" más adelante.
 182+ 8840              ;	ld (Entidad_sospechosa_de_colision),hl
 183+ 8840
 184+ 8840
 185+ 8840              ;1 ld hl,(Puntero_restore_caja)
 186+ 8840              ;	ld a,(hl)
 187+ 8840              ;	and a
 188+ 8840              ;	push af
 189+ 8840              ;	jr z,2F
 190+ 8840
 191+ 8840              ;	di
 192+ 8840              ;	ld de,Bandeja_DRAW
 193+ 8840              ;	ld bc,42
 194+ 8840              ;	ldir
 195+ 8840              ;	ei
 196+ 8840
 197+ 8840 CD 17 8C     2 call Incrementa_punteros_de_cajas
 198+ 8843 C9           	ret
 199+ 8844
 200+ 8844
 201+ 8844              ; ---------------------------------------------------------------------
 202+ 8844              ;
 203+ 8844              ;	29/01/24
 204+ 8844
 205+ 8844 CD C7 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 206+ 8847 CD BF 80     	call Guarda_foto_registros
 207+ 884A              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 208+ 884A              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 209+ 884A              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 210+ 884A              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 211+ 884A
 212+ 884A CD 59 88     	call Decrementa_Contador_de_mov_masticados
 213+ 884D C9           	ret
 214+ 884E
 215+ 884E              ; ---------------------------------------------------------------------
 216+ 884E              ;
 217+ 884E              ;	25/01/24
 218+ 884E
 219+ 884E 21 5F 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 220+ 8851 06 2A        	ld b,42
 221+ 8853 AF           	xor a
 222+ 8854
 223+ 8854 77           1 ld (hl),a
 224+ 8855 23           	inc hl
 225+ 8856 10 FC        	djnz 1B
 226+ 8858
 227+ 8858 C9           	ret
 228+ 8859
 229+ 8859              ; ---------------------------------------------------------------------
 230+ 8859              ;
 231+ 8859              ;	22/01/24
 232+ 8859
 233+ 8859 2A 80 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 234+ 885C 2B           	dec hl
 235+ 885D
 236+ 885D 24           	inc h
 237+ 885E 25           	dec h
 238+ 885F 20 04        	jr nz,1F
 239+ 8861
 240+ 8861 7D           	ld a,l
 241+ 8862 A7           	and a
 242+ 8863 28 FE        	jr z,$
 243+ 8865
 244+ 8865 22 80 89     1 ld (Contador_de_mov_masticados),hl
 245+ 8868 C9           	ret
 246+ 8869
 247+ 8869              ; ---------------------------------------------------------------------
 248+ 8869              ;
 249+ 8869              ;	22/01/24
 250+ 8869
 251+ 8869 21 C1 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 252+ 886C CB 46        	bit 0,(hl)
 253+ 886E 20 0D        	jr nz,1F
 254+ 8870 CB 4E        	bit 1,(hl)
 255+ 8872 20 0C        	jr nz,2F
 256+ 8874 CB 56        	bit 2,(hl)
 257+ 8876 20 0B        	jr nz,3F
 258+ 8878 CB 5E        	bit 3,(hl)
 259+ 887A 20 0A        	jr nz,4F
 260+ 887C C9           	ret
 261+ 887D
 262+ 887D CB E6        1 set 4,(hl)
 263+ 887F C9           	ret
 264+ 8880 CB EE        2 set 5,(hl)
 265+ 8882 C9           	ret
 266+ 8883 CB F6        3 set 6,(hl)
 267+ 8885 C9           	ret
 268+ 8886 CB FE        4 set 7,(hl)
 269+ 8888 C9           	ret
 270+ 8889
 271+ 8889              ; ---------------------------------------------------------------------
 272+ 8889              ;
 273+ 8889              ;	23/01/24
 274+ 8889              ;
 275+ 8889              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 276+ 8889              ;
 277+ 8889              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 278+ 8889              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 279+ 8889              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 280+ 8889              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 281+ 8889
 282+ 8889              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 283+ 8889
 284+ 8889 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 285+ 888A 3D           	dec a
 286+ 888B 20 06        	jr nz,1F
 287+ 888D
 288+ 888D              ; --- Tipo_1
 289+ 888D
 290+ 888D 21 C1 89     	ld hl,Ctrl_4
 291+ 8890 CB C6        	set 0,(hl)
 292+ 8892 C9           	ret
 293+ 8893
 294+ 8893 3D           1 dec a
 295+ 8894 20 06        	jr nz,2F
 296+ 8896
 297+ 8896              ; --- Tipo_2
 298+ 8896
 299+ 8896 21 C1 89     	ld hl,Ctrl_4
 300+ 8899 CB CE        	set 1,(hl)
 301+ 889B C9           	ret
 302+ 889C
 303+ 889C 3D           2 dec a
 304+ 889D 20 06        	jr nz,3F
 305+ 889F
 306+ 889F              ; --- Tipo_3
 307+ 889F
 308+ 889F 21 C1 89     	ld hl,Ctrl_4
 309+ 88A2 CB D6        	set 2,(hl)
 310+ 88A4 C9           	ret
 311+ 88A5
 312+ 88A5              ; --- Tipo_3
 313+ 88A5
 314+ 88A5 21 C1 89     3 ld hl,Ctrl_4
 315+ 88A8 CB D6        	set 2,(hl)
 316+ 88AA C9           	ret
 317+ 88AB
 318+ 88AB              ; ---------------------------------------------------------------------
 319+ 88AB              ;
 320+ 88AB              ;	22/01/24
 321+ 88AB
 322+ 88AB 21 C1 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 323+ 88AE CB 46        	bit 0,(hl)
 324+ 88B0 20 0E        	jr nz,1F
 325+ 88B2
 326+ 88B2 CB 4E        	bit 1,(hl)
 327+ 88B4 20 10        	jr nz,2F
 328+ 88B6
 329+ 88B6 CB 56        	bit 2,(hl)
 330+ 88B8 20 12        	jr nz,3F
 331+ 88BA
 332+ 88BA CB 5E        	bit 3,(hl)
 333+ 88BC 20 14        	jr nz,4F
 334+ 88BE 18 19        	jr 6F
 335+ 88C0
 336+ 88C0              ; Entidad_de_Tipo_1.
 337+ 88C0
 338+ 88C0 CB 66        1 bit 4,(hl)
 339+ 88C2 28 15        	jr z,6F
 340+ 88C4 18 10        	jr 5F
 341+ 88C6
 342+ 88C6              ; Entidad_de_Tipo_2.
 343+ 88C6
 344+ 88C6 CB 6E        2 bit 5,(hl)
 345+ 88C8 28 0F        	jr z,6F
 346+ 88CA 18 0A        	jr 5F
 347+ 88CC
 348+ 88CC              ; Entidad_de_Tipo_3.
 349+ 88CC
 350+ 88CC CB 76        3 bit 6,(hl)
 351+ 88CE 28 09        	jr z,6F
 352+ 88D0 18 04        	jr 5F
 353+ 88D2
 354+ 88D2              ; Entidad_de_Tipo_4.
 355+ 88D2
 356+ 88D2 CB 7E        4 bit 7,(hl)
 357+ 88D4 28 03        	jr z,6F
 358+ 88D6
 359+ 88D6              ; Esta entidad TIENE MOV_MASTICADOS.
 360+ 88D6
 361+ 88D6 AF           5 xor a
 362+ 88D7 3C           	inc a
 363+ 88D8 C9           	ret
 364+ 88D9
 365+ 88D9              ; Esta entidad NO TIENE MOV_MASTICADOS.
 366+ 88D9
 367+ 88D9 AF           6 xor a
 368+ 88DA C9           	ret
 369+ 88DB
 370+ 88DB              ;	------------------------------------------------------------------------------------
 371+ 88DB              ;
 372+ 88DB              ;	12/01/24
 373+ 88DB              ;
 374+ 88DB              ;	INPUTS:	A contiene el (Tipo) de entidad.
 375+ 88DB              ;
 376+ 88DB              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 377+ 88DB              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 378+ 88DB
 379+ 88DB CB 27        Calcula_salto_en_BC sla a
 380+ 88DD D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 381+ 88DF 4F           	ld c,a
 382+ 88E0 06 00        	ld b,0
 383+ 88E2 C9           	ret
 384+ 88E3
 385+ 88E3              ; ------------------------------------------------------------------
 386+ 88E3              ;
 387+ 88E3              ;	19/1/24
 388+ 88E3              ;
 389+ 88E3              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 390+ 88E3              ;	Actualiza (Datos_de_entidad) con esa dirección.
 391+ 88E3
 392+ 88E3 A7           Situa_en_datos_de_definicion and a
 393+ 88E4 ED 4A        	adc hl,bc
 394+ 88E6 CD B0 8B     	call Extrae_address
 395+ 88E9 22 B0 89         ld (Datos_de_entidad),hl
 396+ 88EC C9           	ret
 397+ 88ED
 398+ 88ED              ; ------------------------------------------------------------------
 399+ 88ED
 400+ 88ED              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 401+ 88ED              ; 	inc de
 402+ 88ED              ; 	inc de
 403+ 88ED              ; 	ex de,hl
 404+ 88ED              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 405+ 88ED              ; 	ret
 406+ 88ED
 407+ 88ED              ; ----------------------------------------------------------------------------------------------------------
 408+ 88ED              ;
 409+ 88ED              ;	31/1/24
 410+ 88ED              ;
 411+ 88ED              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 412+ 88ED              ;	_ de entidad.
 413+ 88ED              ;
 414+ 88ED              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 415+ 88ED              ;
 416+ 88ED              ;
 417+ 88ED              ;	MODIFICA: HL,DE y BC
 418+ 88ED
 419+ 88ED
 420+ 88ED              Definicion_de_entidad_a_bandeja_DRAW
 421+ 88ED
 422+ 88ED 11 5F 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 423+ 88F0 01 03 00     	ld bc,3
 424+ 88F3 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 425+ 88F5              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 426+ 88F5 11 69 89     	ld de,Attr									; DE en (Attr).
 427+ 88F8 01 05 00     	ld bc,5
 428+ 88FB ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 429+ 88FD              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 430+ 88FD 11 72 89     	ld de,Posicion_inicio
 431+ 8900 01 03 00     	ld bc,3
 432+ 8903 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 433+ 8905              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 434+ 8905 11 7E 89     	ld de,Puntero_de_almacen_de_mov_masticados
 435+ 8908 01 02 00     	ld bc,2
 436+ 890B ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 437+ 890D
 438+ 890D 11 88 89     	ld de,Frames_explosion
 439+ 8910 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 440+ 8912 12           	ld (de),a 									; Vuelco (Frames_explosion).
 441+ 8913
 442+ 8913 C9           	ret
 443+ 8914
 444+ 8914              ; ----------------------------------------------------------------------------------------------------------
 445+ 8914              ;
 446+ 8914              ;	22/01/24
 447+ 8914              ;
 448+ 8914              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 449+ 8914              ;
 450+ 8914              ;	Las cajas contienen entidades iniciadas:
 451+ 8914              ;
 452+ 8914              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 453+ 8914              ;
 454+ 8914              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 455+ 8914              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 456+ 8914              ;
 457+ 8914              ;	MODIFICA: HL,DE y BC
 458+ 8914
 459+ 8914 21 5F 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 460+ 8917 ED 5B A4 89  	ld de,(Puntero_store_caja)
 461+ 891B 7E           	ld a,(hl)
 462+ 891C 12           	ld (de),a
 463+ 891D 13           	inc de 													; (Tipo).
 464+ 891E
 465+ 891E 21 66 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 466+ 8921 01 02 00     	ld bc,2
 467+ 8924 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 468+ 8926              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 469+ 8926 23           	inc hl
 470+ 8927 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 471+ 8928 12           	ld (de),a
 472+ 8929 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 473+ 892A
 474+ 892A 21 75 89     	ld hl,Impacto
 475+ 892D 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 476+ 892E 12           	ld (de),a
 477+ 892F 13           	inc de 													; (Impacto), volcado a la caja.
 478+ 8930              ;															; DE situado ahora en (Variables_de_borrado).
 479+ 8930 23           	inc hl
 480+ 8931 01 06 00     	ld bc,6
 481+ 8934 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 482+ 8936              ; 															; DE situado ahora en (Puntero_de_impresión).
 483+ 8936 01 07 00     	ld bc,7
 484+ 8939 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 485+ 893B              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 486+ 893B              ;															; HL apunta ahora a (Columnas).
 487+ 893B 21 87 89     	ld hl,Ctrl_2
 488+ 893E 7E           	ld a,(hl)
 489+ 893F 12           	ld (de),a 												; Volcamos (Ctrl_2).
 490+ 8940 13           	inc de
 491+ 8941
 492+ 8941 C9           	ret
 493+ 8942
 494+ 8942              ;---------------------------------------------------------------------------------------------------------------
 495+ 8942              ;
 496+ 8942              ;	5/1/24
 497+ 8942              ;
 498+ 8942              ;	INICIALIZA (Numero_parcial_de_entidades).
 499+ 8942              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 500+ 8942              ;
 501+ 8942              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 502+ 8942              ;
 503+ 8942              ;	(Numero_parcial_de_entidades)="7".
 504+ 8942              ;
 505+ 8942              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 506+ 8942              ;
 507+ 8942              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 508+ 8942              ;
 509+ 8942              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 510+ 8942              ;	MODIFICA: A y B.
 511+ 8942              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 512+ 8942
 513+ 8942              Inicializa_Numero_parcial_de_entidades
 514+ 8942
 515+ 8942              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 516+ 8942
 517+ 8942 3A AA 89     	ld a,(Numero_de_entidades)
 518+ 8945 A7           	and a
 519+ 8946
 520+ 8946              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 521+ 8946              ;	jr z,$
 522+ 8946              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 523+ 8946
 524+ 8946 20 03        	jr nz,3F
 525+ 8948
 526+ 8948              ; ---------- ---------- ----------
 527+ 8948
 528+ 8948              ;! RESET para pruebas. Omitir esta línea en modo normal.
 529+ 8948              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 530+ 8948
 531+ 8948 CD AF 87     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 532+ 894B
 533+ 894B              ; ---------- ---------- ----------
 534+ 894B
 535+ 894B 3A AA 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 536+ 894E FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 537+ 8950 38 08        	jr c,1F
 538+ 8952
 539+ 8952              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 540+ 8952              ; Actualizamos variables.
 541+ 8952
 542+ 8952 3E 07        	ld a,7
 543+ 8954 32 AB 89     	ld (Numero_parcial_de_entidades),a
 544+ 8957 47           	ld b,a
 545+ 8958 18 04        	jr 2F
 546+ 895A
 547+ 895A              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 548+ 895A              ; (Numero_de_entidades)="0".
 549+ 895A
 550+ 895A 32 AB 89     1 ld (Numero_parcial_de_entidades),a
 551+ 895D 47           	ld b,a
 552+ 895E C9           2 ret
# file closed: Niveles.asm
 107  895F
 108  895F              ; ******************************************************************************************************************************************************************************************
 109  895F              ; Constantes.
 110  895F              ; ******************************************************************************************************************************************************************************************
 111  895F              ;
 112  895F              ; 25/12/23
 113  895F
 114  895F              ;
 115  895F              ; Constantes.
 116  895F              ;
 117  895F
 118  895F              Sprite_vacio equ $eae0
 119  895F              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  895F              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  895F              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  895F              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  895F
 124  895F              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  895F              ;														;
 126  895F              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  895F
 128  895F              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  895F              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  895F              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  895F              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  895F              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  895F
 134  895F              ;														; 55 Bytes.
 135  895F              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 136  895F              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 137  895F
 138  895F              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  895F
 140  895F              ; ******************************************************************************************************************************************************************************************
 141  895F              ; Variables.
 142  895F              ; ******************************************************************************************************************************************************************************************
 143  895F              ;
 144  895F              ; 18/01/24
 145  895F              ;
 146  895F              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  895F              ;
 148  895F
 149  895F              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  895F
 151  895F 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  8960              ;															- Patrón de movimiento.
 153  8960              ;															- Aspecto
 154  8960 00           Filas db 0												; Filas. [DRAW]
 155  8961 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  8962 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8964 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8966 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8967 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8968
 161  8968              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8968
 163  8968 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8969              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8969              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8969 00           Attr db 0												; Atributos de la entidad:
 167  896A
 168  896A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  896A              ;
 170  896A              ;	COLORES: 0 ..... NEGRO
 171  896A              ;    		 1 ..... AZUL
 172  896A              ; 			 2 ..... ROJO
 173  896A              ;			 3 ..... MAGENTA
 174  896A              ; 			 4 ..... VERDE
 175  896A              ; 			 5 ..... CIAN
 176  896A              ;			 6 ..... AMARILLO
 177  896A              ; 			 7 ..... BLANCO
 178  896A
 179  896A 00 00        Indice_Sprite_der defw 0
 180  896C 00 00        Indice_Sprite_izq defw 0
 181  896E 00 00        Puntero_DESPLZ_der defw 0
 182  8970 00 00        Puntero_DESPLZ_izq defw 0
 183  8972
 184  8972 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8974 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8975
 187  8975              ; Variables de objeto. (Características).
 188  8975
 189  8975 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8976              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8976              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8976 00 00 00...  Variables_de_borrado ds 6
 193  897C
 194  897C 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  897E              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  897E
 197  897E 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  8980
 199  8980              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  8980              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  8980
 202  8980 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  8982              ;														; _palabras que componen el "movimiento_masticado".
 204  8982
 205  8982              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  8982
 207  8982 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8983              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8983              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8983              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8983              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8983              ;
 213  8983              ; 														DESCRIPCIÖN:
 214  8983              ;
 215  8983              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8983              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8983              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8983              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8983              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8983              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8983              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8983              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8983              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8983              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8983              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8983              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8983              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8983              ;
 229  8983              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8983              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8983              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8983
 233  8983              ; Variables de funcionamiento. [DRAW].
 234  8983
 235  8983 00           Columnas db 0
 236  8984 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8986              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8986 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8987
 240  8987              ; variables de control general.
 241  8987
 242  8987 00           Ctrl_2 db 0
 243  8988              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8988              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8988              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8988              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8988              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8988              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8988              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8988              ;
 251  8988              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8988              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8988              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8988              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8988              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8988              ;														BIT 4, ???
 257  8988              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8988
 259  8988 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  8989
 261  8989              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  8989
 263  8989              ;					         		---------;      ;---------
 264  8989
 265  8989              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  8989
 267  8989              Perfiles_de_velocidad
 268  8989
 269  8989 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  898A 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  898B 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  898C 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  898D
 274  898D              ; Contadores de 16 bits.
 275  898D
 276  898D 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  898F 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  8991 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8993 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8995
 281  8995              ; Movimiento. ------------------------------------------------------------------------------------------------------
 282  8995
 283  8995 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 284  8997 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 285  8999 00 00        Puntero_indice_mov_bucle defw 0							;
 286  899B              ;
 287  899B              ;
 288  899B 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 289  899C              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 290  899C              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 291  899C 00           Incrementa_puntero_backup db 0
 292  899D 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 293  899E              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 294  899E 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 295  899F 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 296  89A0 00           Cola_de_desplazamiento db 0								; Este byte indica:
 297  89A1              ;
 298  89A1              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 299  89A1              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 300  89A1              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 301  89A1              ;
 302  89A1              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 303  89A1              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 304  89A1              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 305  89A1              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 306  89A1              ;
 307  89A1              ;														;	"$ff" ..... Bucle infinito de repetición.
 308  89A1              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 309  89A1              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 310  89A1              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 311  89A1
 312  89A1 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 313  89A2
 314  89A2              ;														DESCRIPCIÓN:
 315  89A2              ;
 316  89A2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 317  89A2              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 318  89A2              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 319  89A2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 320  89A2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 321  89A2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 322  89A2
 323  89A2              ;														BIT 3, Recarga de nueva oleada.
 324  89A2              ;														BIT 4, Recarga de nueva oleada.
 325  89A2              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 326  89A2              ;														BIT 6, **** Frame completo.
 327  89A2              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 328  89A2
 329  89A2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 330  89A4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 331  89A4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 332  89A4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 333  89A4
 334  89A4              ; Gestión de ENTIDADES y CAJAS.
 335  89A4
 336  89A4 00 00        Puntero_store_caja defw 0
 337  89A6 00 00        Puntero_restore_caja defw 0
 338  89A8 00 00        Indice_restore_caja defw 0
 339  89AA 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 340  89AB 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 341  89AC 00           Entidades_en_curso db 0									; ..... ..... .....
 342  89AD 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 343  89AE              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 344  89AE              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 345  89AE              ;														; _ (Numero_de_malotes)="0".
 346  89AE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 347  89B0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 348  89B2              ;														; _ puntero (Indice_entidades).
 349  89B2
 350  89B2              ;---------------------------------------------------------------------------------------------------------------
 351  89B2              ;
 352  89B2              ;	11/01/24
 353  89B2              ;
 354  89B2              ;	Álbumes.
 355  89B2
 356  89B2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 357  89B4              ;														; _variable para almacenar lo posición del puntero_
 358  89B4              ; 														; _de pila, SP.
 359  89B4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 360  89B6              ;														; La utiliza la rutina [Extrae_foto_registros].
 361  89B6 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 362  89B8 00 80        Stack_snapshot defw Album_de_fotos
 363  89BA 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 364  89BC
 365  89BC              ;End_Snapshot defw Album_de_fotos
 366  89BC              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 367  89BC 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 368  89BE              ;														; _el snapshot de los registros del siguiente disparo.
 369  89BE              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 370  89BE AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 371  89C0
 372  89C0 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 373  89C1              ;
 374  89C1              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 375  89C1              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 376  89C1              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 377  89C1
 378  89C1 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 379  89C2              ;
 380  89C2              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 381  89C2              ;
 382  89C2              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383  89C2              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384  89C2              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385  89C2              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386  89C2              ;
 387  89C2              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 388  89C2              ;															_ masticados ya generados.
 389  89C2              ;
 390  89C2              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 391  89C2              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 392  89C2              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 393  89C2              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 394  89C2
 395  89C2
 396  89C2              ; Gestión de Disparos.
 397  89C2
 398  89C2 00           Numero_de_disparotes db 0
 399  89C3 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 400  89C5 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 401  89C7 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 402  89C8              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 403  89C8              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 404  89C8 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 405  89CA              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 406  89CA              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 407  89CA              ;														; _produzca colisión.
 408  89CA 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 409  89CC              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 410  89CC 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  89CF              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 412  89CF 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 413  89D2              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 414  89D2 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 415  89D3
 416  89D3              ;---------------------------------------------------------------------------------------------------------------
 417  89D3
 418  89D3              ; Relojes y temporizaciones.
 419  89D3
 420  89D3 00           Contador_de_frames db 0
 421  89D4 00           Contador_de_frames_2 db 0
 422  89D5
 423  89D5 04           Clock_explosion db 4
 424  89D6 14           Clock_Entidades_en_curso db 20
 425  89D7 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 426  89D8              ;														; Repite la oleada de entidades.
 427  89D8 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 428  89D9 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 429  89DA 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 430  89DB
 431  89DB 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 432  89DC 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 433  89DD 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 434  89DE
 435  89DE              ;---------------------------------------------------------------------------------------------------------------
 436  89DE
 437  89DE              ; Gestión de NIVELES.
 438  89DE
 439  89DE 00           Nivel db 0												; Nivel actual del juego.
 440  89DF 00 00        Puntero_indice_NIVELES defw 0
 441  89E1 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 442  89E3              ; 														; _ que definen el NIVEL.
 443  89E3              ; Y todo comienza aquí .....
 444  89E3              ;
 445  89E3              ; 	INICIO  *************************************************************************************************************************************************************************
 446  89E3              ;
 447  89E3              ;	5/1/24
 448  89E3
 449  89E3              START
 450  89E3
 451  89E3 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 452  89E6 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 453  89E8 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 454  89EA ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 455  89EC F3           	DI
 456  89ED
 457  89ED 3E 07        	ld a,%00000111
 458  89EF CD F0 97     	call Cls
 459  89F2 CD 55 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  89F5
 461  89F5              ; INICIALIZACIÓN.
 462  89F5
 463  89F5              ;	Inicializa 1er Nivel.
 464  89F5
 465  89F5 21 8C 87     	ld hl,Indice_de_niveles
 466  89F8 22 DF 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 467  89FB CD AF 87     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 468  89FE
 469  89FE              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 470  89FE              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 471  89FE              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 472  89FE
 473  89FE              ;	Provisional, (para desarrollo).
 474  89FE
 475  89FE              	;-
 476  89FE              ;	ld hl,Numero_parcial_de_entidades
 477  89FE              ;	ld b,(hl)
 478  89FE              ;	inc b
 479  89FE              ;	dec b
 480  89FE              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 481  89FE
 482  89FE CD DE 87     4 call Inicia_Entidades
 483  8A01
 484  8A01 CD 18 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 485  8A04              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 486  8A04              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 487  8A04              ; (Esto se dá cuando se inicia una nueva oleada).
 488  8A04
 489  8A04              ;	ld a,(Ctrl_1)
 490  8A04              ;	bit 3,a
 491  8A04              ;	jr nz,5F											; Loop
 492  8A04
 493  8A04              ; 	INICIA AMADEUS !!!!!
 494  8A04
 495  8A04              ;3 call Restore_Amadeus
 496  8A04              ;	call Inicia_Puntero_objeto
 497  8A04              ;	call Draw
 498  8A04
 499  8A04              ;	call Guarda_movimiento_masticado	;! Provisional
 500  8A04
 501  8A04              ;	call Guarda_foto_registros
 502  8A04              ;	call Guarda_datos_de_borrado_Amadeus
 503  8A04
 504  8A04              ;	ld de,Amadeus_db
 505  8A04              ;	call Store_Amadeus
 506  8A04
 507  8A04              ; 	INICIA DISPAROS !!!!!
 508  8A04
 509  8A04              ;	call Inicia_Puntero_Disparo_Entidades
 510  8A04              ;	call Inicia_Puntero_Disparo_Amadeus
 511  8A04
 512  8A04              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 513  8A04
 514  8A04              ;5 call Inicia_punteros_de_cajas
 515  8A04              ;	call Restore_entidad
 516  8A04
 517  8A04              ;	ld a,(Ctrl_1)
 518  8A04              ;	bit 3,a
 519  8A04              ;	jr z,6F
 520  8A04
 521  8A04              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 522  8A04
 523  8A04              ;	ld hl,Ctrl_1
 524  8A04              ;	res 3,(hl)
 525  8A04              ;	jr Main
 526  8A04
 527  8A04              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 528  8A04
 529  8A04 21 C0 89     6 ld hl,Ctrl_3
 530  8A07 CB C6        	set 0,(hl)											; Frame completo.
 531  8A09 FB           	ei
 532  8A0A 76           	halt
 533  8A0B
 534  8A0B              ; ------------------------------------
 535  8A0B
 536  8A0B              Main
 537  8A0B              ;
 538  8A0B              ;	11/12/23
 539  8A0B
 540  8A0B              ; Aparece nueva entidad ???
 541  8A0B
 542  8A0B              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 543  8A0B              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 544  8A0B              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 545  8A0B              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 546  8A0B              ;														; _un 2º bloque.
 547  8A0B
 548  8A0B              ;	ld a,1
 549  8A0B              ;	out ($fe),a
 550  8A0B
 551  8A0B              ;	jr $
 552  8A0B
 553  8A0B 3A D6 89     	ld a,(Clock_Entidades_en_curso)
 554  8A0E 47           	ld b,a
 555  8A0F 3A D3 89     	ld a,(Contador_de_frames)
 556  8A12 B8           	cp b
 557  8A13 20 18        	jr nz,13F
 558  8A15
 559  8A15              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 560  8A15              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 561  8A15
 562  8A15 3A AB 89     21 ld a,(Numero_parcial_de_entidades)
 563  8A18 47           	ld b,a
 564  8A19 3A AC 89     	ld a,(Entidades_en_curso)
 565  8A1C B8           	cp b
 566  8A1D 28 0E        	jr z,13F
 567  8A1F 30 0C        	jr nc,13F
 568  8A21
 569  8A21 3C           	inc a
 570  8A22 32 AC 89     	ld (Entidades_en_curso),a
 571  8A25
 572  8A25              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 573  8A25
 574  8A25 3A D6 89     	ld a,(Clock_Entidades_en_curso)
 575  8A28              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 576  8A28              ;! _ IMPREDECIBLE !!!!
 577  8A28 C6 64        	add 100
 578  8A2A 32 D6 89     	ld (Clock_Entidades_en_curso),a
 579  8A2D
 580  8A2D              ; -------------------------------------------------------------------------------------------------------------
 581  8A2D
 582  8A2D              ; Habilita disparos.
 583  8A2D
 584  8A2D              13
 585  8A2D
 586  8A2D              ;	ld hl,Disparo_Amadeus
 587  8A2D              ;	ld de,CLOCK_repone_disparo_Amadeus
 588  8A2D              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 589  8A2D
 590  8A2D              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 591  8A2D              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 592  8A2D              ;	call Habilita_disparos
 593  8A2D
 594  8A2D              ; COLISIONES.
 595  8A2D
 596  8A2D              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 597  8A2D
 598  8A2D              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 599  8A2D              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 600  8A2D              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 601  8A2D
 602  8A2D              ;	xor a
 603  8A2D              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 604  8A2D
 605  8A2D              ;	call Inicia_punteros_de_cajas
 606  8A2D              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 607  8A2D              ; 														; _ en DRAW.
 608  8A2D
 609  8A2D              ;	ld a,(Filas)
 610  8A2D              ;	and a
 611  8A2D              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 612  8A2D              ;	call Incrementa_punteros_de_cajas
 613  8A2D              ;	jr 12B
 614  8A2D
 615  8A2D              ; ---------------------------------------------------------------------------------------
 616  8A2D
 617  8A2D 3A AB 89     10 ld a,(Numero_parcial_de_entidades)
 618  8A30 47               ld b,a
 619  8A31 A7           	and a
 620  8A32 20 00        	jr nz,11F
 621  8A34
 622  8A34              ;	ld hl,Ctrl_1;
 623  8A34              ;	bit 4,(hl)
 624  8A34              ;	jp nz,16F
 625  8A34
 626  8A34              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 627  8A34
 628  8A34              ;	ld hl,Ctrl_1
 629  8A34              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 630  8A34
 631  8A34              ;	ld a,(Contador_de_frames)
 632  8A34              ;	inc a
 633  8A34              ;	ld (Activa_recarga_cajas),a
 634  8A34
 635  8A34              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 636  8A34
 637  8A34 3A AC 89     11 ld a,(Entidades_en_curso)
 638  8A37 A7           	and a
 639  8A38 28 14        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 640  8A3A 47           	ld b,a												; No hay entidades que gestionar.
 641  8A3B
 642  8A3B              ; ( Código que ejecutamos con cada entidad: ).
 643  8A3B
 644  8A3B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 645  8A3B
 646  8A3B C5           15 push bc 												; Nº de entidades en curso.
 647  8A3C
 648  8A3C CD EB 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 649  8A3F
 650  8A3F              ; Existe "Entidad_guía" ???.
 651  8A3F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 652  8A3F
 653  8A3F              ;	ld a,(Ctrl_3)
 654  8A3F              ;	bit 1,a
 655  8A3F              ;	jr nz,22F
 656  8A3F
 657  8A3F              ; Almacén de "Movimientos_masticados" lleno ???
 658  8A3F              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 659  8A3F              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 660  8A3F
 661  8A3F              ;;	ld a,(Ctrl_3)
 662  8A3F              ;;	bit 3,a
 663  8A3F              ;;	jr nz,22F
 664  8A3F
 665  8A3F              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 666  8A3F
 667  8A3F              ;	ld hl,Ctrl_2
 668  8A3F              ;	set 5,(hl)
 669  8A3F              ;	ld hl,Ctrl_3
 670  8A3F              ;	set 1,(hl)
 671  8A3F
 672  8A3F              ; Impacto ???
 673  8A3F
 674  8A3F              ;22 ld a,(Impacto)
 675  8A3F              ;	and a
 676  8A3F              ;	jr z,8F
 677  8A3F
 678  8A3F              ; Hay Impacto en esta entidad.
 679  8A3F
 680  8A3F              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 681  8A3F              ;	dec (hl)
 682  8A3F              ;	jp nz,17F
 683  8A3F
 684  8A3F              ;! Velocidad de la animación de la explosión.
 685  8A3F
 686  8A3F              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 687  8A3F              ;														; _,(velocidad de la explosión).
 688  8A3F              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 689  8A3F
 690  8A3F              ;	call Repone_datos_de_borrado
 691  8A3F              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 692  8A3F
 693  8A3F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 694  8A3F
 695  8A3F              ;	ld a,(Ctrl_2)
 696  8A3F              ;	bit 1,a
 697  8A3F              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 698  8A3F
 699  8A3F              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 700  8A3F
 701  8A3F              ;	ld a,(CTRL_DESPLZ)
 702  8A3F              ;	and a
 703  8A3F              ;	jr nz,18F
 704  8A3F
 705  8A3F              ;	ld hl,Indice_Explosion_2x2-2
 706  8A3F              ;	ld (Puntero_DESPLZ_der),hl
 707  8A3F              ;	jr 19F
 708  8A3F
 709  8A3F              ;18 ld hl,Indice_Explosion_2x3-2
 710  8A3F              ;	ld (Puntero_DESPLZ_der),hl
 711  8A3F
 712  8A3F              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 713  8A3F              ;	set 1,(hl)
 714  8A3F              ;	jr 7F
 715  8A3F
 716  8A3F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 717  8A3F              ; _con las coordenadas de la entidad almacenada en DRAW.
 718  8A3F
 719  8A3F              ;8 ld a,(Ctrl_1)
 720  8A3F              ;	bit 2,a
 721  8A3F              ;	jr z,7F
 722  8A3F
 723  8A3F              ;	ld hl,(Coordenadas_disparo_certero)
 724  8A3F              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 725  8A3F              ;														; E contiene la coordenada_X del disparo.
 726  8A3F              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 727  8A3F              ;														; H FILA, (Coordenada_y de la entidad).
 728  8A3F              ;	and a
 729  8A3F              ;	sbc hl,de
 730  8A3F
 731  8A3F              ;	call Determina_resultado_comparativa
 732  8A3F
 733  8A3F              ;	ld a,b
 734  8A3F              ;	and a
 735  8A3F              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 736  8A3F
 737  8A3F              ; ----- ----- -----
 738  8A3F
 739  8A3F              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 740  8A3F              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 741  8A3F
 742  8A3F              ;	ld hl,Ctrl_1
 743  8A3F              ;	res 2,(hl)
 744  8A3F
 745  8A3F CD 5B 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 746  8A42
 747  8A42              ;	ld a,(Ctrl_0)
 748  8A42              ;	bit 4,a
 749  8A42              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 750  8A42
 751  8A42              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 752  8A42              ; [[[
 753  8A42              ;	call Detecta_disparo_entidad
 754  8A42              ; ]]]
 755  8A42
 756  8A42 CD 44 88     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 757  8A45
 758  8A45              ;	ld hl,Ctrl_0
 759  8A45              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 760  8A45
 761  8A45 CD 34 88     17 call Store_Restore_cajas
 762  8A48
 763  8A48 C1           	pop bc
 764  8A49
 765  8A49 10 F0        	djnz 15B
 766  8A4B
 767  8A4B CD 18 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 768  8A4E
 769  8A4E              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 770  8A4E              ; Hemos gestionado todas las unidades.
 771  8A4E              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 772  8A4E
 773  8A4E              ;	ld hl,Ctrl_1
 774  8A4E              ;	res 2,(hl)
 775  8A4E
 776  8A4E 21 C0 89     16 ld hl,Ctrl_3
 777  8A51 CB C6        	set 0,(hl)											; Frame completo.
 778  8A53
 779  8A53 AF           	xor a
 780  8A54 D3 FE        	out ($fe),a
 781  8A56
 782  8A56 76           	halt
 783  8A57
 784  8A57              ; ----------------------------------------
 785  8A57
 786  8A57              ;	ld a,(Ctrl_1) 										; Existe Loop?
 787  8A57              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 788  8A57 CA 0B 8A     	jp z,Main
 789  8A5A
 790  8A5A              ; RECARGA DE NUEVA OLEADA.
 791  8A5A
 792  8A5A              ;	ld a,(Contador_de_frames)
 793  8A5A              ;	ld b,a
 794  8A5A              ;	ld a,(Activa_recarga_cajas)
 795  8A5A              ;	cp b
 796  8A5A              ;	jr z,20F
 797  8A5A
 798  8A5A              ;	ld hl,Ctrl_1
 799  8A5A              ;	set 4,(hl)
 800  8A5A              ;	jp Main
 801  8A5A
 802  8A5A              ;20 ld hl,Ctrl_1
 803  8A5A              ;	res 4,(hl)
 804  8A5A
 805  8A5A              ;	ld a,(Contador_de_frames)
 806  8A5A
 807  8A5A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 808  8A5A              ;! _ IMPREDECIBLE !!!!
 809  8A5A
 810  8A5A              ;	add 10
 811  8A5A              ;	ld (Clock_Entidades_en_curso),a
 812  8A5A
 813  8A5A              ;	jp 4B
 814  8A5A
 815  8A5A C9           	ret
 816  8A5B
 817  8A5B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 818  8A5B              ;
 819  8A5B              ;	16/11/23
 820  8A5B
 821  8A5B              ;;Gestiona_Amadeus
 822  8A5B
 823  8A5B              ;! Activa/desactiva impacto con Amadeus.
 824  8A5B
 825  8A5B              ;	ld a,(Impacto)
 826  8A5B              ;	and a
 827  8A5B              ;	jr nz,2F
 828  8A5B
 829  8A5B              ;;	call Mov_Amadeus
 830  8A5B
 831  8A5B              ;;2 ld a,(Ctrl_0)
 832  8A5B              ;;	bit 4,a
 833  8A5B              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 834  8A5B
 835  8A5B              ;;	call Guarda_foto_entidad_a_pintar
 836  8A5B              ;;	call Guarda_datos_de_borrado_Amadeus
 837  8A5B
 838  8A5B              ;;1 ld hl,Ctrl_0
 839  8A5B              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 840  8A5B
 841  8A5B              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 842  8A5B
 843  8A5B              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 844  8A5B
 845  8A5B              ;	call Calcula_numero_de_disparotes
 846  8A5B
 847  8A5B              ;;	ret
 848  8A5B
 849  8A5B              ; --------------------------------------------------------------------------------------------------------------
 850  8A5B              ;
 851  8A5B              ;	15/12/23
 852  8A5B
 853  8A5B              Mov_obj
 854  8A5B
 855  8A5B              ;	ld a,(Ctrl_2)
 856  8A5B              ;	bit 1,a
 857  8A5B              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 858  8A5B
 859  8A5B              ; Explosión:
 860  8A5B
 861  8A5B              ;	ld a,(Frames_explosion)
 862  8A5B              ;	and a
 863  8A5B              ;	jr nz,4F
 864  8A5B
 865  8A5B              ;!  Una alimaña menos!!!!!!!!!1
 866  8A5B
 867  8A5B              ; Se trataba de una Entidad_guía ???
 868  8A5B
 869  8A5B              ;	ld a,(Ctrl_2)
 870  8A5B              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 871  8A5B              ;	jr z,5F
 872  8A5B
 873  8A5B              ;	ld hl,Ctrl_3
 874  8A5B              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 875  8A5B
 876  8A5B              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 877  8A5B              ;!! _generado puede ser distinto, (aletoriedad).
 878  8A5B
 879  8A5B              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 880  8A5B              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 881  8A5B              ;	dec (hl)
 882  8A5B              ;	ld hl,Entidades_en_curso
 883  8A5B              ;	dec (hl)
 884  8A5B              ;	ld hl,Numero_de_entidades
 885  8A5B              ;	dec (hl)
 886  8A5B              ;	jr 3F
 887  8A5B
 888  8A5B              ; -----
 889  8A5B
 890  8A5B              ;	`Movemos´ la explosión.
 891  8A5B
 892  8A5B              ;4 ld hl,(Puntero_DESPLZ_der)
 893  8A5B              ;	inc hl
 894  8A5B              ;	inc hl
 895  8A5B              ;	call Extrae_address
 896  8A5B              ;;	ld (Puntero_objeto),hl
 897  8A5B
 898  8A5B              ;;	ld hl,Frames_explosion
 899  8A5B              ;;	dec (hl)
 900  8A5B
 901  8A5B              ;;	ld hl,Ctrl_0
 902  8A5B              ;;	set 4,(hl);;
 903  8A5B
 904  8A5B              ;;	jr 3F
 905  8A5B
 906  8A5B              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 907  8A5B
 908  8A5B              ;2 xor a
 909  8A5B              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 910  8A5B
 911  8A5B              ; Movemos Entidades malignas.
 912  8A5B              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 913  8A5B
 914  8A5B              ;	ld a,(Ctrl_2)
 915  8A5B              ;	bit 5,a
 916  8A5B              ;	jr nz,8F
 917  8A5B
 918  8A5B              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 919  8A5B              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 920  8A5B              ;	jr 7F
 921  8A5B
 922  8A5B              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 923  8A5B
 924  8A5B              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 925  8A5B              ;	bit 4,a
 926  8A5B              ;	ret z
 927  8A5B
 928  8A5B              ; Ha habido desplazamiento de la entidad maligna.
 929  8A5B              ; Ha llegado a zona de AMADEUS ???
 930  8A5B
 931  8A5B              ;7 ld a,(Coordenada_y)
 932  8A5B              ;	cp $14
 933  8A5B              ;	jr c,1F
 934  8A5B
 935  8A5B              ; ---------
 936  8A5B
 937  8A5B              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 938  8A5B              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 939  8A5B
 940  8A5B              ;	di
 941  8A5B              ;	call Genera_coordenadas_X
 942  8A5B              ;	call Compara_coordenadas_X
 943  8A5B              ;	ei
 944  8A5B
 945  8A5B              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 946  8A5B
 947  8A5B              ; ---------
 948  8A5B
 949  8A5B              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 950  8A5B CD C9 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 951  8A5E CD 56 8B     	call Limpia_Variables_de_borrado
 952  8A61
 953  8A61 C9           3 ret
 954  8A62
 955  8A62              ; --------------------------------------------------------------------------------------------------------------
 956  8A62              ;
 957  8A62              ;	29/1/23
 958  8A62
 959  8A62              Mov_Amadeus
 960  8A62
 961  8A62              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 962  8A62
 963  8A62 CD A8 98     	call Mov_right
 964  8A65
 965  8A65 3A 82 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 966  8A68 CB 67        	bit 4,a
 967  8A6A C8           	ret z
 968  8A6B
 969  8A6B              ; ---------
 970  8A6B
 971  8A6B              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 972  8A6B CD B9 8C     	call Repone_datos_de_borrado_Amadeus
 973  8A6E CD 56 8B     	call Limpia_Variables_de_borrado
 974  8A71
 975  8A71 C9           	ret
 976  8A72
 977  8A72              ; -----------------------------------------------------------------------------------
 978  8A72              ;
 979  8A72              ;	20/01/24
 980  8A72              ;
 981  8A72              ;
 982  8A72
 983  8A72              Construye_movimientos_masticados_entidad
 984  8A72
 985  8A72 2A 7E 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 986  8A75 E5           	push hl
 987  8A76
 988  8A76 CD BA 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 989  8A79              ;															; _ el (Contador_de_mov_masticados).
 990  8A79 CD B6 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 991  8A7C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 992  8A7C CD 04 98     	call Recompone_posicion_inicio
 993  8A7F
 994  8A7F CD DA 91     1 call Draw
 995  8A82 CD 9E 8A     	call Guarda_movimiento_masticado
 996  8A85 CD 6D 9D     	call Movimiento
 997  8A88
 998  8A88 3A C0 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 999  8A8B CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1000  8A8D 28 F0        	jr z,1B
1001  8A8F
1002  8A8F              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1003  8A8F              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1004  8A8F
1005  8A8F E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1006  8A90 22 7E 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1007  8A93
1008  8A93              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1009  8A93
1010  8A93 CD DE 9E     	call Situa_en_contador_general_de_mov_masticados
1011  8A96
1012  8A96              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1013  8A96              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1014  8A96
1015  8A96 ED 4B 80 89  	ld bc,(Contador_de_mov_masticados)
1016  8A9A 71           	ld (hl),c
1017  8A9B 23           	inc hl
1018  8A9C 70           	ld (hl),b
1019  8A9D
1020  8A9D C9           	ret
1021  8A9E
1022  8A9E              ; -----------------------------------------------------------------------------------
1023  8A9E              ;
1024  8A9E              ;	28/12/23
1025  8A9E              ;
1026  8A9E              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1027  8A9E              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1028  8A9E
1029  8A9E              Guarda_movimiento_masticado
1030  8A9E
1031  8A9E ED 73 B2 89  	ld (Stack),sp
1032  8AA2 ED 7B 7E 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1033  8AA6
1034  8AA6 E5           	push hl
1035  8AA7 DD E5            push ix
1036  8AA9 FD E5            push iy
1037  8AAB
1038  8AAB ED 7B B2 89      ld sp,(Stack)
1039  8AAF
1040  8AAF              ;    push hl
1041  8AAF
1042  8AAF 2A 80 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1043  8AB2 23           	inc hl
1044  8AB3 22 80 89     	ld (Contador_de_mov_masticados),hl
1045  8AB6
1046  8AB6              ;	pop hl
1047  8AB6
1048  8AB6 CD BA 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1049  8AB9              ;															; _ el (Contador_de_mov_masticados).
1050  8AB9 C9               ret
1051  8ABA
1052  8ABA              ; --------------------------------------------------------------------------------------------------------------
1053  8ABA              ;
1054  8ABA              ;	12/1/24
1055  8ABA              ;
1056  8ABA              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1057  8ABA
1058  8ABA              Actualiza_Puntero_de_almacen_de_mov_masticados
1059  8ABA
1060  8ABA              ;	push hl
1061  8ABA              ;	push bc
1062  8ABA
1063  8ABA 2A 7E 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1064  8ABD 01 06 00     	ld bc,6
1065  8AC0 A7           	and a
1066  8AC1 ED 4A        	adc hl,bc
1067  8AC3 22 7E 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1068  8AC6
1069  8AC6              ;	pop bc
1070  8AC6              ;	pop hl
1071  8AC6
1072  8AC6 C9           	ret
1073  8AC7
1074  8AC7              ; --------------------------------------------------------------------------------------------------------------
1075  8AC7              ;
1076  8AC7              ;	15/01/24
1077  8AC7              ;
1078  8AC7              ;	Cargamos los registros_
1079  8AC7              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1080  8AC7              ;
1081  8AC7              ;	HL contiene la dirección de la rutina de impresión.
1082  8AC7              ;	IX contiene el puntero de impresión.
1083  8AC7              ;	IY contiene (Puntero_objeto).
1084  8AC7
1085  8AC7
1086  8AC7 ED 73 B2 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1087  8ACB ED 7B 7E 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1088  8ACF
1089  8ACF FD E1        	pop iy
1090  8AD1 DD E1        	pop ix
1091  8AD3 E1           	pop hl
1092  8AD4
1093  8AD4 ED 73 7E 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1094  8AD8
1095  8AD8 ED 7B B2 89  	ld sp,(Stack)
1096  8ADC
1097  8ADC C9           	ret
1098  8ADD
1099  8ADD              ; --------------------------------------------------------------------------------------------------------------
1100  8ADD              ;
1101  8ADD              ;	28/12/23
1102  8ADD              ;
1103  8ADD              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1104  8ADD              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1105  8ADD
1106  8ADD              Guarda_foto_entidad_a_pintar
1107  8ADD
1108  8ADD 3A 82 89     	ld a,(Ctrl_0)
1109  8AE0 CB 77        	bit 6,a
1110  8AE2 28 04        	jr z,5F
1111  8AE4
1112  8AE4              ;	Guarda la foto de Amadeus.
1113  8AE4
1114  8AE4              ;	call Draw
1115  8AE4              ;	call Guarda_movimiento_masticado	;! Provisional
1116  8AE4 CD BF 80     	call Guarda_foto_registros
1117  8AE7 C9           	ret
1118  8AE8
1119  8AE8              ; ENTIDADES!
1120  8AE8              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1121  8AE8
1122  8AE8 3A C0 89     5 ld a,(Ctrl_3)
1123  8AEB CB 5F        	bit 3,a
1124  8AED 28 01        	jr z,1F
1125  8AEF
1126  8AEF              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1127  8AEF
1128  8AEF              4
1129  8AEF              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1130  8AEF C9           	ret
1131  8AF0
1132  8AF0              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1133  8AF0
1134  8AF0 3A C0 89     1 ld a,(Ctrl_3)
1135  8AF3 CB 57        	bit 2,a
1136  8AF5 20 10        	jr nz,6F
1137  8AF7
1138  8AF7              ; Entidad guía o fantasma ???
1139  8AF7
1140  8AF7 3A 87 89     	ld a,(Ctrl_2)
1141  8AFA CB 6F        	bit 5,a
1142  8AFC 20 10        	jr nz,3F
1143  8AFE
1144  8AFE              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1145  8AFE
1146  8AFE 18 EF        	jr 4B
1147  8B00
1148  8B00              ; ENTIDAD_GUÍA:
1149  8B00              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1150  8B00              ; _guardando "movimientos_masticados".
1151  8B00
1152  8B00 3A C0 89     2 ld a,(Ctrl_3)
1153  8B03 CB 57        	bit 2,a
1154  8B05 28 07        	jr z,3F
1155  8B07
1156  8B07              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1157  8B07              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1158  8B07
1159  8B07 CB 97        6 res 2,a
1160  8B09 CB DF        	set 3,a
1161  8B0B 32 C0 89     	ld (Ctrl_3),a
1162  8B0E
1163  8B0E
1164  8B0E              ;	Esto sólo lo ejecuta una entidad guía.
1165  8B0E
1166  8B0E CD DA 91     3 	call Draw
1167  8B11 CD 9E 8A     	call Guarda_movimiento_masticado
1168  8B14 CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1169  8B17
1170  8B17              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1171  8B17              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1172  8B17
1173  8B17              ;	call Convierte_guia_en_fantasma
1174  8B17 C9           	ret
1175  8B18
1176  8B18              ; --------------------------------------------------------------------------------------------------------------
1177  8B18              ;
1178  8B18              ;	19/9/23
1179  8B18
1180  8B18              ;Prepara_var_pintado
1181  8B18
1182  8B18              ;	ld hl,Filas
1183  8B18              ;	ld de,Variables_de_pintado
1184  8B18              ;	ld bc,8
1185  8B18              ;	ldir
1186  8B18              ;	ret
1187  8B18
1188  8B18              ; --------------------------------------------------------------------------------------------------------------
1189  8B18
1190  8B18              ;Repone_pintar
1191  8B18
1192  8B18              ;	ld hl,Variables_de_pintado
1193  8B18              ;	ld de,Filas
1194  8B18              ;	ld bc,8
1195  8B18              ;	ldir
1196  8B18              ;	ret
1197  8B18
1198  8B18              ; *************************************************************************************************************************************************************
1199  8B18              ;
1200  8B18              ; 8/1/23
1201  8B18              ;
1202  8B18              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1203  8B18              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1204  8B18              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1205  8B18
1206  8B18              ; Destruye HL y DE !!!!!
1207  8B18
1208  8B18              Inicia_punteros_de_cajas
1209  8B18
1210  8B18 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1211  8B1B CD B0 8B         call Extrae_address
1212  8B1E 22 A4 89         ld (Puntero_store_caja),hl
1213  8B21 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1214  8B24 22 A8 89     	ld (Indice_restore_caja),hl
1215  8B27 CD B0 8B     	call Extrae_address
1216  8B2A 22 A6 89     	ld (Puntero_restore_caja),hl
1217  8B2D C9               ret
1218  8B2E
1219  8B2E              ; *************************************************************************************************************************************************************
1220  8B2E              ;
1221  8B2E              ; 8/1/23
1222  8B2E              ;
1223  8B2E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1224  8B2E
1225  8B2E 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1226  8B31 22 C3 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1227  8B34 C9           	ret
1228  8B35 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1229  8B38 22 C5 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1230  8B3B C9           	ret
1231  8B3C
1232  8B3C              ; -------------------------------------------------------------------------------------------------------------
1233  8B3C              ;
1234  8B3C              ; 21/9/23
1235  8B3C              ;
1236  8B3C
1237  8B3C              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1238  8B3C
1239  8B3C              Limpia_album_Amadeus
1240  8B3C
1241  8B3C 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1242  8B3F 7E           	ld a,(hl)
1243  8B40 A7           	and a
1244  8B41 C8           	ret z
1245  8B42
1246  8B42 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1247  8B45 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1248  8B48 01 0B 00     	ld bc,11
1249  8B4B AF           	xor a
1250  8B4C 77           	ld (hl),a
1251  8B4D ED B0        	ldir
1252  8B4F
1253  8B4F 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1254  8B52 22 BE 89     	ld (End_Snapshot_Amadeus),hl
1255  8B55
1256  8B55 C9           	ret
1257  8B56
1258  8B56 21 76 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1259  8B59 11 77 89     	ld de,Variables_de_borrado+1
1260  8B5C 01 05 00     	ld bc,5
1261  8B5F AF           	xor a
1262  8B60 77           	ld (hl),a
1263  8B61 ED B0        	ldir
1264  8B63 C9           	ret
1265  8B64
1266  8B64              ; -------------------------------------------------------------------------------------------------------------
1267  8B64              ;
1268  8B64              ; 8/9/23
1269  8B64              ;
1270  8B64
1271  8B64              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1272  8B64              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1273  8B64
1274  8B64              Calcula_numero_de_malotes
1275  8B64
1276  8B64 21 00 80     	ld hl,Album_de_fotos
1277  8B67 EB           	ex de,hl
1278  8B68 2A B8 89     	ld hl,(Stack_snapshot)
1279  8B6B
1280  8B6B 06 00        	ld b,0
1281  8B6D 7D           	ld a,l
1282  8B6E 93           	sub e
1283  8B6F 28 07        	jr z,1F
1284  8B71
1285  8B71              ; Nº de malotes no es "0".
1286  8B71
1287  8B71 D6 06        2 sub 6
1288  8B73 04           	inc b
1289  8B74 A7           	and a
1290  8B75 20 FA        	jr nz,2B
1291  8B77 78           	ld a,b
1292  8B78
1293  8B78 32 AD 89     1 ld (Numero_de_malotes),a
1294  8B7B C9           	ret
1295  8B7C
1296  8B7C              ; -------------------------------------------------------------------------------------------------------------
1297  8B7C              ;
1298  8B7C              ; 8/9/23
1299  8B7C              ;
1300  8B7C
1301  8B7C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1302  8B7C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1303  8B7C
1304  8B7C              Calcula_malotes_Amadeus
1305  8B7C
1306  8B7C 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1307  8B7F EB           	ex de,hl
1308  8B80 2A BE 89     	ld hl,(End_Snapshot_Amadeus)
1309  8B83
1310  8B83 7C           	ld a,h
1311  8B84 A7           	and a
1312  8B85 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1313  8B87
1314  8B87 06 00        	ld b,0
1315  8B89 7D           	ld a,l
1316  8B8A 93           	sub e
1317  8B8B 28 07        	jr z,1F
1318  8B8D
1319  8B8D              ; Nº de malotes no es "0".
1320  8B8D
1321  8B8D D6 06        2 sub 6
1322  8B8F 04           	inc b
1323  8B90 A7           	and a
1324  8B91 20 FA        	jr nz,2B
1325  8B93 78           	ld a,b
1326  8B94
1327  8B94 32 AD 89     1 ld (Numero_de_malotes),a
1328  8B97 C9           	ret
1329  8B98
1330  8B98              ; -------------------------------------------------------------------------------------------------------------
1331  8B98              ;
1332  8B98              ; 28/2/23
1333  8B98              ;
1334  8B98
1335  8B98              Calcula_numero_de_disparotes
1336  8B98
1337  8B98 21 56 80     	ld hl,Album_de_fotos_disparos
1338  8B9B EB           	ex de,hl
1339  8B9C 2A BC 89     	ld hl,(End_Snapshot_disparos)
1340  8B9F
1341  8B9F 06 00        	ld b,0
1342  8BA1 7D           	ld a,l
1343  8BA2 93           	sub e
1344  8BA3 28 07        	jr z,1F
1345  8BA5
1346  8BA5              ; Nº de malotes no es "0".
1347  8BA5
1348  8BA5 D6 06        2 sub 6
1349  8BA7 04           	inc b
1350  8BA8 A7           	and a
1351  8BA9 20 FA        	jr nz,2B
1352  8BAB 78           	ld a,b
1353  8BAC
1354  8BAC 32 C2 89     1 ld (Numero_de_disparotes),a
1355  8BAF C9           	ret
1356  8BB0
1357  8BB0              ; *************************************************************************************************************************************************************
1358  8BB0              ;
1359  8BB0              ; 20/10/22
1360  8BB0              ;
1361  8BB0              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1362  8BB0              ;
1363  8BB0              ; Destruye el puntero y DE !!!!!
1364  8BB0
1365  8BB0 5E           Extrae_address ld e,(hl)
1366  8BB1 23           	inc hl
1367  8BB2 56           	ld d,(hl)
1368  8BB3 2B           	dec hl
1369  8BB4 EB           	ex de,hl
1370  8BB5 C9           	ret
1371  8BB6
1372  8BB6              ; *************************************************************************************************************************************************************
1373  8BB6              ;
1374  8BB6              ;	20/1/24
1375  8BB6              ;
1376  8BB6              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1377  8BB6              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1378  8BB6              ;
1379  8BB6              ;   Destruye HL y BC !!!!!,
1380  8BB6              ;
1381  8BB6              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1382  8BB6              ;					"0" ..... Izquierda.
1383  8BB6
1384  8BB6              Inicia_Puntero_objeto
1385  8BB6
1386  8BB6 3A 74 89     	ld a,(Cuad_objeto)
1387  8BB9 E6 01        	and 1
1388  8BBB F5           	push af
1389  8BBC CC D8 8B     	call z,Inicia_puntero_objeto_izq
1390  8BBF F1           	pop af
1391  8BC0 C8           	ret z
1392  8BC1 CD C5 8B     	call Inicia_puntero_objeto_der
1393  8BC4 C9           	ret
1394  8BC5
1395  8BC5              ; Arrancamos desde la parte izquierda de la pantalla.
1396  8BC5              ; Iniciamos (Indice_Sprite_der).
1397  8BC5
1398  8BC5 2A 6A 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1399  8BC8 22 6E 89     	ld (Puntero_DESPLZ_der),hl
1400  8BCB CD B0 8B     	call Extrae_address
1401  8BCE 22 64 89     	ld (Puntero_objeto),hl
1402  8BD1
1403  8BD1 2A 6C 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1404  8BD4 22 70 89     	ld (Puntero_DESPLZ_izq),hl
1405  8BD7 C9           	ret
1406  8BD8
1407  8BD8              ; Arrancamos desde la parte derecha de la pantalla.
1408  8BD8              ; Iniciamos (Indice_Sprite_izq).
1409  8BD8
1410  8BD8 2A 6C 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1411  8BDB 22 70 89     	ld (Puntero_DESPLZ_izq),hl
1412  8BDE CD B0 8B     	call Extrae_address
1413  8BE1 22 64 89     	ld (Puntero_objeto),hl
1414  8BE4
1415  8BE4 2A 6A 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1416  8BE7 22 6E 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1417  8BEA C9           	ret
1418  8BEB
1419  8BEB              ; **************************************************************************************************
1420  8BEB              ;
1421  8BEB              ;	31/01/24
1422  8BEB              ;
1423  8BEB              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1424  8BEB
1425  8BEB              Restore_entidad
1426  8BEB
1427  8BEB 2A A4 89     	ld hl,(Puntero_store_caja)
1428  8BEE 11 5F 89     	ld de,Bandeja_DRAW
1429  8BF1 7E           	ld a,(hl)
1430  8BF2 12           	ld (de),a
1431  8BF3 23           	inc hl 											; (Tipo).
1432  8BF4
1433  8BF4 11 66 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1434  8BF7 01 02 00     	ld bc,2
1435  8BFA ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1436  8BFC
1437  8BFC 13           	inc de
1438  8BFD 7E           	ld a,(hl)
1439  8BFE 12           	ld (de),a 										; Transferimos (Attr).
1440  8BFF 23           	inc hl
1441  8C00
1442  8C00 11 75 89     	ld de,Impacto
1443  8C03
1444  8C03 7E           	ld a,(hl)
1445  8C04 12           	ld (de),a 										; Transferimos (Impacto).
1446  8C05 23           	inc hl
1447  8C06
1448  8C06 13           	inc de
1449  8C07
1450  8C07 01 06 00     	ld bc,6
1451  8C0A ED B0        	ldir
1452  8C0C
1453  8C0C 01 07 00     	ld bc,7
1454  8C0F ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1455  8C11              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1456  8C11 11 87 89     	ld de,Ctrl_2
1457  8C14
1458  8C14 7E           	ld a,(hl)
1459  8C15 12           	ld (de),a 										; Transferimos (Ctrl_2).
1460  8C16
1461  8C16 C9           	ret
1462  8C17
1463  8C17              ; **************************************************************************************************
1464  8C17              ;
1465  8C17              ;	08/05/23
1466  8C17              ;
1467  8C17              ;	Incrementamos los dos punteros de entidades. (+1).
1468  8C17
1469  8C17              Incrementa_punteros_de_cajas
1470  8C17
1471  8C17 2A A6 89     	ld hl,(Puntero_restore_caja)
1472  8C1A 22 A4 89     	ld (Puntero_store_caja),hl
1473  8C1D 2A A8 89     	ld hl,(Indice_restore_caja)
1474  8C20 23           	inc hl
1475  8C21 23           	inc hl
1476  8C22 22 A8 89     	ld (Indice_restore_caja),hl
1477  8C25 CD B0 8B         call Extrae_address
1478  8C28 22 A6 89         ld (Puntero_restore_caja),hl
1479  8C2B C9               ret
1480  8C2C
1481  8C2C              ; **************************************************************************************************
1482  8C2C              ;
1483  8C2C              ;	21/12/23
1484  8C2C              ;
1485  8C2C              ;	Restore_Amadeus
1486  8C2C              ;
1487  8C2C              ;	Cargamos en DRAW los parámetros de Amadeus.
1488  8C2C              ;
1489  8C2C
1490  8C2C E5           Restore_Amadeus	push hl
1491  8C2D D5           	push de
1492  8C2E C5            	push bc
1493  8C2F 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1494  8C32 11 5F 89     	ld de,Bandeja_DRAW
1495  8C35 01 2A 00     	ld bc,42
1496  8C38 ED B0        	ldir
1497  8C3A C1           	pop bc
1498  8C3B D1           	pop de
1499  8C3C E1           	pop hl
1500  8C3D C9           	ret
1501  8C3E
1502  8C3E              ; *************************************************************************************************************************************************************
1503  8C3E              ;
1504  8C3E              ;	21/12/23
1505  8C3E              ;
1506  8C3E              ;	Store_Amadeus
1507  8C3E              ;
1508  8C3E              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1509  8C3E              ;
1510  8C3E              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1511  8C3E              ;
1512  8C3E              ;	DESTRUYE: HL y BC y DE.
1513  8C3E
1514  8C3E 21 5F 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1515  8C41 01 2A 00     	ld bc,42
1516  8C44 ED B0        	ldir
1517  8C46 C9           	ret
1518  8C47
1519  8C47              ; -----------------------------------------------------------
1520  8C47              ;
1521  8C47              ;	21/12/23
1522  8C47              ;
1523  8C47              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1524  8C47              ;
1525  8C47              ;	Destruye: HL,BC,DE,A
1526  8C47
1527  8C47 21 5F 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1528  8C4A 01 29 00     	ld bc,41
1529  8C4D AF           	xor a
1530  8C4E 77           	ld (hl),a
1531  8C4F 11 60 89     	ld de,Bandeja_DRAW+1
1532  8C52 ED B0        	ldir
1533  8C54 C9           	ret
1534  8C55
1535  8C55              ; -----------------------------------------------------------
1536  8C55
1537  8C55              ; Teclado.
1538  8C55
1539  8C55 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1540  8C57 DB FE        	in a,($fe)
1541  8C59 E6 01        	and $01
1542  8C5B 28 02        	jr z,1f
1543  8C5D 18 F6        	jr Pulsa_ENTER
1544  8C5F C9           1 ret
1545  8C60
1546  8C60              ; **************************************************************************************************
1547  8C60              ;
1548  8C60              ; Temporización.
1549  8C60
1550  8C60              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1551  8C60              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1552  8C60              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1553  8C60              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1554  8C60
1555  8C60              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1556  8C60              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1557  8C60              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1558  8C60
1559  8C60              ; A partir de $4f61 no hace falta DELAY.
1560  8C60
1561  8C60              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1562  8C60
1563  8C60 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1564  8C63 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1565  8C64 78           	LD A,B
1566  8C65 A7           	AND A
1567  8C66 20 FB        	JR NZ,wait
1568  8C68 C9           	RET
1569  8C69
1570  8C69              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1571  8C69              ;
1572  8C69              ;	5/3/23
1573  8C69              ;
1574  8C69              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1575  8C69
1576  8C69              Movimiento_Amadeus
1577  8C69
1578  8C69              ; Disparo.
1579  8C69
1580  8C69 3A D8 89     	ld a,(Disparo_Amadeus)
1581  8C6C A7           	and a
1582  8C6D 20 02        	jr nz,1F
1583  8C6F 18 15        	jr 2F
1584  8C71
1585  8C71 3E F7        1 ld a,$f7													; "5" para disparar.
1586  8C73 DB FE        	in a,($fe)
1587  8C75 E6 10        	and $10
1588  8C77
1589  8C77 F5           	push af
1590  8C78 CC 06 8D     	call z,Genera_disparo
1591  8C7B F1           	pop af
1592  8C7C 20 08        	jr nz,2F
1593  8C7E
1594  8C7E 3A D8 89     	ld a,(Disparo_Amadeus)
1595  8C81 EE 01        	xor 1
1596  8C83 32 D8 89     	ld (Disparo_Amadeus),a
1597  8C86 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1598  8C88 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1599  8C8A E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1600  8C8C CC CB 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1601  8C8F
1602  8C8F 3E F7        	ld a,$f7
1603  8C91 DB FE        	in a,($fe)
1604  8C93 E6 01        	and $01
1605  8C95 C8           	ret z
1606  8C96
1607  8C96 3E F7        	ld a,$f7
1608  8C98 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1609  8C9A E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1610  8C9C CC A8 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1611  8C9F C9           	ret
1612  8CA0
1613  8CA0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1614  8CA0              ;
1615  8CA0              ;	Rutina provisional para que los malotes cagen balas.
1616  8CA0
1617  8CA0              Detecta_disparo_entidad
1618  8CA0
1619  8CA0 3A DB 89     	ld a,(Disparo_entidad)
1620  8CA3 A7           	and a
1621  8CA4 C8           	ret z
1622  8CA5
1623  8CA5              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1624  8CA5
1625  8CA5              ;	ld a,$7f				; Detecta SPACE.
1626  8CA5              ;	in a,($fe)
1627  8CA5              ;	and 1
1628  8CA5              ;	ret nz
1629  8CA5
1630  8CA5 CD 06 8D     	call Genera_disparo
1631  8CA8 C9           	ret
1632  8CA9
1633  8CA9              ; ----------------------------------------------------------------------
1634  8CA9              ;
1635  8CA9              ;	8/9/23
1636  8CA9
1637  8CA9 2A BE 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1638  8CAC 2B            	dec hl
1639  8CAD 7E           	ld a,(hl)
1640  8CAE A7           	and a
1641  8CAF C8           	ret z										; Salimos si es álbum está vacío.
1642  8CB0
1643  8CB0 11 7B 89     	ld de,Variables_de_borrado+5
1644  8CB3 01 06 00     	ld bc,6
1645  8CB6 ED B8        	lddr
1646  8CB8 C9           	ret
1647  8CB9
1648  8CB9              ; ----------------------------------------------------------------------
1649  8CB9              ;
1650  8CB9              ;	9/9/23
1651  8CB9
1652  8CB9              Repone_datos_de_borrado_Amadeus
1653  8CB9
1654  8CB9 21 76 89     	ld hl,Variables_de_borrado
1655  8CBC 11 AC 80     	ld de,Album_de_fotos_Amadeus
1656  8CBF 01 06 00     	ld bc,6
1657  8CC2 ED B0        	ldir
1658  8CC4
1659  8CC4 EB           	ex de,hl
1660  8CC5 22 BE 89     	ld (End_Snapshot_Amadeus),hl
1661  8CC8
1662  8CC8 C9           	ret
1663  8CC9
1664  8CC9              ; ----------------------------------------------------------------------
1665  8CC9              ;
1666  8CC9              ;	27/10/23
1667  8CC9              ;
1668  8CC9
1669  8CC9              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1670  8CC9              ;	_ Album_de_fotos correspondiente.
1671  8CC9
1672  8CC9              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1673  8CC9              ;	_ durante el proceso de escritura.
1674  8CC9
1675  8CC9              Repone_datos_de_borrado
1676  8CC9
1677  8CC9 ED 5B B8 89  	ld de,(Stack_snapshot)
1678  8CCD 21 76 89     	ld hl,Variables_de_borrado
1679  8CD0 01 06 00     	ld bc,6
1680  8CD3 ED B0        	ldir
1681  8CD5
1682  8CD5 EB           	ex de,hl
1683  8CD6 22 B8 89     	ld (Stack_snapshot),hl
1684  8CD9
1685  8CD9 C9           	ret
1686  8CDA
1687  8CDA              ; --------------------------------------------------------------------------------------
1688  8CDA
1689  8CDA              Pinta_Amadeus
1690  8CDA
1691  8CDA CD 7C 8B        	call Calcula_malotes_Amadeus
1692  8CDD CD 73 95     	call Extrae_foto_Amadeus
1693  8CE0 CD 3C 8B     	call Limpia_album_Amadeus
1694  8CE3
1695  8CE3 C9           	ret
1696  8CE4
1697  8CE4              Pinta_entidades
1698  8CE4
1699  8CE4              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1700  8CE4
1701  8CE4 3A C0 89     	ld a,(Ctrl_3)
1702  8CE7 CB 47        	bit 0,a
1703  8CE9 C8           	ret z
1704  8CEA
1705  8CEA CD 64 8B     	call Calcula_numero_de_malotes
1706  8CED CD F1 94     	call Extrae_foto_entidades
1707  8CF0 CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1708  8CF3
1709  8CF3 C9           	ret
1710  8CF4
1711  8CF4              ; -----------------------------------------------------------------------------------
1712  8CF4              ;
1713  8CF4              ;	10/12/23
1714  8CF4              ;
1715  8CF4              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1716  8CF4
1717  8CF4              Actualiza_relojes
1718  8CF4
1719  8CF4 3A C0 89     	ld a,(Ctrl_3)
1720  8CF7 CB 47        	bit 0,a
1721  8CF9 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1722  8CFA
1723  8CFA 21 D3 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1724  8CFD 34           	inc (hl)
1725  8CFE
1726  8CFE 34           	inc (hl)
1727  8CFF 35           	dec (hl)
1728  8D00 C0           	ret nz
1729  8D01
1730  8D01 21 D4 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1731  8D04 34           	inc (hl)
1732  8D05 C9           	ret
1733  8D06
1734  8D06              ; ---------------------------------------------------------------
1735  8D06              ;
1736  8D06              ;	21/12/23
1737  8D06
1738  8D06              ;Guarda_parametros_DRAW
1739  8D06
1740  8D06              ;	ld hl,Bandeja_DRAW
1741  8D06              ;	ld de,Almacen_de_parametros_DRAW
1742  8D06              ;	ld bc,42
1743  8D06              ;	ldir
1744  8D06              ;	ret
1745  8D06
1746  8D06              ;Recupera_parametros_DRAW
1747  8D06
1748  8D06              ;	ld hl,Almacen_de_parametros_DRAW
1749  8D06              ;	ld de,Bandeja_DRAW
1750  8D06              ;	ld bc,42
1751  8D06              ;	ldir
1752  8D06              ;	ret
1753  8D06
1754  8D06              ; ---------------------------------------------------------------
1755  8D06
1756  8D06              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D06              ; ******************************************************************************************************************************************************************************************
   2+ 8D06              ;
   3+ 8D06              ;   21/07/23
   4+ 8D06              ;
   5+ 8D06              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D06              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D06              ;
   8+ 8D06              ;
   9+ 8D06              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D06              ;
  11+ 8D06              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D06              ;               _ hacen las entidades hacia abajo.
  13+ 8D06              ;
  14+ 8D06              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D06              ;
  16+ 8D06              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D06              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D06              ;
  19+ 8D06              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D06              ;           _ la bala.
  21+ 8D06              ;
  22+ 8D06              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D06              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D06              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D06              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D06              ;           _ en el momento de generarse la bala)).
  27+ 8D06
  28+ 8D06              Genera_disparo
  29+ 8D06
  30+ 8D06              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D06              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D06              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D06              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D06              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D06              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D06              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D06
  38+ 8D06              ; Exclusiones:
  39+ 8D06
  40+ 8D06 3A 8C 89         ld a,(Vel_down)
  41+ 8D09 47               ld b,a
  42+ 8D0A 3A D2 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D0D B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D0E D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D0F 3A 83 89         ld a,(Columnas)
  46+ 8D12 47               ld b,a
  47+ 8D13 3A 61 89         ld a,(Columns)
  48+ 8D16 B8               cp b
  49+ 8D17 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D18
  51+ 8D18              ; ----- ----- -----
  52+ 8D18
  53+ 8D18 3A 82 89         ld a,(Ctrl_0)
  54+ 8D1B CB 77            bit 6,a
  55+ 8D1D 20 06            jr nz,14F
  56+ 8D1F
  57+ 8D1F 3A 67 89         ld a,(Coordenada_y)
  58+ 8D22 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D24 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D25
  61+ 8D25 21 31 81     14 ld hl,Indice_disparo
  62+ 8D28 3A 68 89         ld a,(CTRL_DESPLZ)
  63+ 8D2B 4F               ld c,a
  64+ 8D2C 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D2E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D2E              ;                                            ""        ""       "f9", B="1"
  67+ 8D2E              ;                                            ""        ""       "fb", B="2"
  68+ 8D2E              ;                                            ""        ""       "fb", B="3"
  69+ 8D2E A7               and a
  70+ 8D2F 28 10            jr z,1F
  71+ 8D31 E6 01            and 1
  72+ 8D33 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D34
  74+ 8D34 79               ld a,c
  75+ 8D35 16 F9            ld d,$f9
  76+ 8D37 23           2 inc hl
  77+ 8D38 23               inc hl
  78+ 8D39 04               inc b
  79+ 8D3A BA               cp d
  80+ 8D3B 28 04            jr z,1F
  81+ 8D3D 14               inc d
  82+ 8D3E 14               inc d
  83+ 8D3F 18 F6            jr 2B
  84+ 8D41
  85+ 8D41 CD B0 8B     1 call Extrae_address
  86+ 8D44 E5               push hl
  87+ 8D45 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D47 DD 21 B9 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D4B
  90+ 8D4B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D4B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D4B
  93+ 8D4B 3A 82 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D4E CB 77            bit 6,a
  95+ 8D50 20 04            jr nz,19F
  96+ 8D52
  97+ 8D52 AF               xor a
  98+ 8D53 32 DB 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D56
 100+ 8D56 3A 74 89     19 ld a,(Cuad_objeto)
 101+ 8D59 FE 02            cp 2
 102+ 8D5B 38 66            jr c,3F
 103+ 8D5D 28 64            jr z,3F
 104+ 8D5F
 105+ 8D5F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D5F
 107+ 8D5F E6 01            and 1
 108+ 8D61 28 30            jr z,4F
 109+ 8D63
 110+ 8D63              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D63              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D63              ;
 113+ 8D63              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D63              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D63              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D63
 117+ 8D63 2A 62 89     	ld hl,(Posicion_actual)
 118+ 8D66
 119+ 8D66              ;   Amadeus o entidad ???.
 120+ 8D66
 121+ 8D66 3A 82 89         ld a,(Ctrl_0)
 122+ 8D69 CB 77            bit 6,a
 123+ 8D6B 28 0A            jr z,8F
 124+ 8D6D
 125+ 8D6D              ; 	Dispara Amadeus.
 126+ 8D6D
 127+ 8D6D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D6F CD E2 94         call PreviousScan
 129+ 8D72 CD E2 94         call PreviousScan
 130+ 8D75
 131+ 8D75              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D75              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D75              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D75
 136+ 8D75 18 11            jr 10F
 137+ 8D77
 138+ 8D77              ; 	Dispara Entidad.
 139+ 8D77
 140+ 8D77 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D7A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D7A
 143+ 8D7A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D7A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D7A
 146+ 8D7A C5               push bc
 147+ 8D7B 06 10            ld b,16
 148+ 8D7D CD D3 94     9 call NextScan
 149+ 8D80 10 FB            djnz 9B
 150+ 8D82 C1               pop bc
 151+ 8D83 CD ED 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D86 18 06            jr 17F
 153+ 8D88
 154+ 8D88              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D88              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D88              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D88              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D88
 159+ 8D88 CD ED 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D8B CD 62 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8D8E              ;                                                      ; _al generar el disparo.
 162+ 8D8E
 163+ 8D8E              ; 	LLegados a este punto tendremos:
 164+ 8D8E              ;
 165+ 8D8E              ;       Puntero_objeto_disparo en IY.
 166+ 8D8E              ;       Rutinas_de_impresion en IX.
 167+ 8D8E              ;       Puntero_de_impresion en HL.
 168+ 8D8E              ;       Impacto/Dirección en BC.
 169+ 8D8E
 170+ 8D8E CD F5 8D     17 call Almacena_disparo
 171+ 8D91 18 52            jr 6F                                             ; RET.
 172+ 8D93
 173+ 8D93              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8D93              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8D93              ;
 176+ 8D93              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8D93              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8D93              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8D93
 180+ 8D93 2A 62 89     4 ld hl,(Posicion_actual)
 181+ 8D96
 182+ 8D96              ;   Amadeus o entidad ???.
 183+ 8D96
 184+ 8D96 3A 82 89         ld a,(Ctrl_0)
 185+ 8D99 CB 77            bit 6,a
 186+ 8D9B 28 0A            jr z,11F
 187+ 8D9D
 188+ 8D9D              ; 	Dispara Amadeus.
 189+ 8D9D
 190+ 8D9D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8D9F CD E2 94         call PreviousScan
 192+ 8DA2 CD E2 94         call PreviousScan
 193+ 8DA5
 194+ 8DA5              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DA5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DA5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DA5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DA5
 199+ 8DA5 18 11            jr 13F
 200+ 8DA7
 201+ 8DA7              ; 	Dispara Entidad.
 202+ 8DA7
 203+ 8DA7 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DAA              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DAA
 206+ 8DAA              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DAA              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DAA
 209+ 8DAA C5               push bc
 210+ 8DAB 06 10            ld b,16
 211+ 8DAD CD D3 94     12 call NextScan
 212+ 8DB0 10 FB            djnz 12B
 213+ 8DB2 C1               pop bc
 214+ 8DB3
 215+ 8DB3 CD E6 8D         call Ajusta_disparo_parte_derecha
 216+ 8DB6 18 06            jr 18F
 217+ 8DB8
 218+ 8DB8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DB8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DB8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DB8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DB8
 223+ 8DB8 CD E6 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8DBB CD 62 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DBE              ;                                                       ; _al generar el disparo.
 226+ 8DBE
 227+ 8DBE              ; LLegados a este punto tendremos:
 228+ 8DBE              ;
 229+ 8DBE              ;       Puntero_objeto_disparo en IY.
 230+ 8DBE              ;       Rutinas_de_impresion en IX.
 231+ 8DBE              ;       Puntero_de_impresion en HL.
 232+ 8DBE              ;       Impacto/Dirección en BC.
 233+ 8DBE
 234+ 8DBE CD F5 8D     18 call Almacena_disparo
 235+ 8DC1 18 22            jr 6F                                               ; RET.
 236+ 8DC3
 237+ 8DC3              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DC3
 239+ 8DC3 28 11        3 jr z,5F
 240+ 8DC5
 241+ 8DC5              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DC5              ;
 243+ 8DC5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DC5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DC5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DC5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DC5
 248+ 8DC5              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DC5              ;	   ""        ""       "f9", B="1"
 250+ 8DC5              ;	   ""        ""       "fb", B="2"
 251+ 8DC5              ; 	   ""        ""       "fb", B="3"
 252+ 8DC5
 253+ 8DC5 2A 62 89     	ld hl,(Posicion_actual)
 254+ 8DC8 CD D3 94     	call NextScan
 255+ 8DCB
 256+ 8DCB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DCB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DCB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DCB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DCB
 261+ 8DCB CD ED 8D         call Ajusta_disparo_parte_izquierda
 262+ 8DCE
 263+ 8DCE              ; 	No se produce impacto. B="$80"
 264+ 8DCE              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DCE
 266+ 8DCE 01 80 80         ld bc,$8080
 267+ 8DD1
 268+ 8DD1              ; 	LLegados a este punto tendremos:
 269+ 8DD1              ;
 270+ 8DD1              ;       Puntero_objeto_disparo en IY.
 271+ 8DD1              ;       Rutinas_de_impresion en IX.
 272+ 8DD1              ;       Puntero_de_impresion en HL.
 273+ 8DD1              ;       Impacto/Dirección en BC.
 274+ 8DD1
 275+ 8DD1 CD F5 8D         call Almacena_disparo
 276+ 8DD4 18 0F            jr 6F                                           ; RET.
 277+ 8DD6
 278+ 8DD6              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DD6              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DD6              ;
 281+ 8DD6              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DD6              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DD6              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DD6              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DD6
 286+ 8DD6 2A 62 89     5 ld hl,(Posicion_actual)
 287+ 8DD9 CD D3 94     	call NextScan
 288+ 8DDC
 289+ 8DDC              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DDC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DDC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DDC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DDC
 294+ 8DDC CD E6 8D         call Ajusta_disparo_parte_derecha
 295+ 8DDF
 296+ 8DDF              ; 	No se produce impacto. B="$80"
 297+ 8DDF              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8DDF
 299+ 8DDF 01 80 80     15 ld bc,$8080
 300+ 8DE2
 301+ 8DE2              ; 	LLegados a este punto tendremos:
 302+ 8DE2              ;
 303+ 8DE2              ;       Puntero_objeto_disparo en IY.
 304+ 8DE2              ;       Rutinas_de_impresion en IX.
 305+ 8DE2              ;       Puntero_de_impresion en HL.
 306+ 8DE2              ;       Impacto/Dirección en BC.
 307+ 8DE2
 308+ 8DE2 CD F5 8D         call Almacena_disparo
 309+ 8DE5
 310+ 8DE5 C9           6 ret
 311+ 8DE6
 312+ 8DE6              ; ----------------------------------------------------------------
 313+ 8DE6              ;
 314+ 8DE6              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8DE6              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8DE6              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8DE6
 318+ 8DE6 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8DE7 FE 02            cp 2
 320+ 8DE9 38 01            jr c,1F
 321+ 8DEB 23               inc hl
 322+ 8DEC C9           1 ret
 323+ 8DED
 324+ 8DED 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8DEE FE 01        	cp 1
 326+ 8DF0 20 01        	jr nz,1F
 327+ 8DF2 2B           	dec hl
 328+ 8DF3 2B           1 dec hl
 329+ 8DF4 C9               ret
 330+ 8DF5
 331+ 8DF5              ; ----------------------------------------------------------------
 332+ 8DF5              ;
 333+ 8DF5              ;   25/02/23
 334+ 8DF5              ;
 335+ 8DF5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8DF5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8DF5              ;
 338+ 8DF5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8DF5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8DF5
 341+ 8DF5              Almacena_disparo
 342+ 8DF5
 343+ 8DF5 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8DF6 F1               pop af
 345+ 8DF7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8DF8
 347+ 8DF8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8DF9 E6 01            and 1
 349+ 8DFB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8DFD              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8DFD              ; 	Dispara AMADEUS.
 352+ 8DFD
 353+ 8DFD              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8DFD              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8DFD              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8DFD              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8DFD
 358+ 8DFD C5               push bc
 359+ 8DFE 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E01 2A C5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E04 A7               and a
 362+ 8E05 ED 42            sbc hl,bc
 363+ 8E07 CC 35 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E0A C1               pop bc
 365+ 8E0B 28 54            jr z,4F
 366+ 8E0D
 367+ 8E0D 2A C5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E10 23               inc hl
 369+ 8E11 23               inc hl
 370+ 8E12 22 C5 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E15              ;                                                   ; _ Disparo_(+1).
 372+ 8E15 18 18            jr 2F
 373+ 8E17
 374+ 8E17              ; Dispara una entidad.
 375+ 8E17
 376+ 8E17 C5           1 push bc
 377+ 8E18 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E1B 2A C3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E1E A7               and a
 380+ 8E1F ED 42            sbc hl,bc
 381+ 8E21 CC 2E 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E24 C1               pop bc
 383+ 8E25 28 3A            jr z,4F
 384+ 8E27
 385+ 8E27 2A C3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E2A 23               inc hl
 387+ 8E2B 23               inc hl
 388+ 8E2C 22 C3 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E2F              ;                                                   ; _ Disparo_(+1).
 390+ 8E2F CD B0 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E32              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E32              ;
 393+ 8E32              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E32              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E32              ;                                                     Puntero_de_impresion en HL.
 396+ 8E32              ;                                                     Impacto/Dirección en BC.
 397+ 8E32
 398+ 8E32 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E33 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E34 23               inc hl                                          ; _ al siguiente.
 401+ 8E35 A7               and a
 402+ 8E36 20 C0            jr nz,3B
 403+ 8E38
 404+ 8E38 08               ex af,af
 405+ 8E39 ED 73 B2 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E3D F9               ld sp,hl
 407+ 8E3E
 408+ 8E3E DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E40 F5               push af                                         ; Puntero de impresión.
 410+ 8E41 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E43 C5               push bc                                         ; Control.
 412+ 8E44
 413+ 8E44 ED 7B B2 89      ld sp,(Stack)
 414+ 8E48
 415+ 8E48              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E48
 417+ 8E48 21 A1 89     	ld hl,Ctrl_1
 418+ 8E4B CB C6        	set 0,(hl)
 419+ 8E4D
 420+ 8E4D DD E5        	push ix
 421+ 8E4F E1               pop hl
 422+ 8E50 F5               push af
 423+ 8E51 DD E1            pop ix
 424+ 8E53
 425+ 8E53 CD BF 80     	call Guarda_foto_registros
 426+ 8E56
 427+ 8E56 21 A1 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E59 CB 86        	res 0,(hl)
 429+ 8E5B
 430+ 8E5B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E5B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E5B
 433+ 8E5B CD 35 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E5E CD 2E 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8E61
 436+ 8E61 C9           4 ret
 437+ 8E62
 438+ 8E62              ; ----------------------------------------------------------------
 439+ 8E62              ;
 440+ 8E62              ;   4/3/23
 441+ 8E62              ;
 442+ 8E62              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E62              ;   _ al generarse el disparo.
 444+ 8E62              ;
 445+ 8E62              ;       "$80" ..... No se produce colisión.
 446+ 8E62              ;       "$81" ..... Se produce colisión.
 447+ 8E62              ;
 448+ 8E62              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E62              ;         _ que forman el disparo.
 450+ 8E62
 451+ 8E62
 452+ 8E62              Comprueba_Colision
 453+ 8E62
 454+ 8E62              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E62
 456+ 8E62 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E64 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E65
 459+ 8E65 CD 9B 8E         call Modifica_H_Velocidad_disparo
 460+ 8E68
 461+ 8E68 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E69 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E6B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E6D
 465+ 8E6D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E6F CD 8B 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E72
 468+ 8E72 7B               ld a,e
 469+ 8E73 E6 01            and 1
 470+ 8E75 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E77              ;                                                  ; _ para activar IMPACTO.
 472+ 8E77 E1               pop hl
 473+ 8E78 E5               push hl
 474+ 8E79 CD D3 94         call NextScan
 475+ 8E7C
 476+ 8E7C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E7D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E7F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E81              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E81 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E83 CD 8B 8E         call Bucle_2
 482+ 8E86
 483+ 8E86 43           1 ld b,e
 484+ 8E87 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E88 FD E1            pop iy
 486+ 8E8A C9               ret
 487+ 8E8B
 488+ 8E8B              ; ---------- ----------
 489+ 8E8B
 490+ 8E8B 06 02        Bucle_2 ld b,2
 491+ 8E8D FD 7E 00     2 ld a,(iy)
 492+ 8E90 A6               and (hl)
 493+ 8E91 28 02            jr z,1F
 494+ 8E93 1E 81            ld e,$81
 495+ 8E95 23           1 inc hl
 496+ 8E96 FD 23            inc iy
 497+ 8E98 10 F3            djnz 2B
 498+ 8E9A C9               ret
 499+ 8E9B
 500+ 8E9B              ; ---------- ----------
 501+ 8E9B              ;
 502+ 8E9B              ;   21/7/23
 503+ 8E9B
 504+ 8E9B              Modifica_H_Velocidad_disparo
 505+ 8E9B
 506+ 8E9B 3A D2 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8E9E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EA0 D0               ret nc                                         ; _ incrementamos H.
 509+ 8EA1 24               inc h
 510+ 8EA2
 511+ 8EA2 C9               ret
 512+ 8EA3
 513+ 8EA3              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EA3              ;
 515+ 8EA3              ;   04/12/23
 516+ 8EA3              ;
 517+ 8EA3              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EA3              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EA3              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EA3              ;
 521+ 8EA3              ;   MODIFICA: HL,DE,B y A.
 522+ 8EA3
 523+ 8EA3              Genera_coordenadas_X
 524+ 8EA3
 525+ 8EA3              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EA3              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EA3
 528+ 8EA3              ;   Limpiamos almacenes.
 529+ 8EA3
 530+ 8EA3 CD D4 8E         call Limpia_Coordenadas_X
 531+ 8EA6
 532+ 8EA6              ;   Almacenamos coordenadas X.
 533+ 8EA6
 534+ 8EA6              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8EA6
 536+ 8EA6 2A 7C 89         ld hl,(Puntero_de_impresion)
 537+ 8EA9 11 CF 89         ld de,Coordenadas_X_Entidad
 538+ 8EAC 06 02            ld b,2
 539+ 8EAE
 540+ 8EAE 3A 68 89         ld a,(CTRL_DESPLZ)
 541+ 8EB1 A7               and a
 542+ 8EB2 28 01            jr z,1F
 543+ 8EB4 04               inc b
 544+ 8EB5
 545+ 8EB5 CD CB 8E     1 call Guarda_coordenadas_X
 546+ 8EB8
 547+ 8EB8              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8EB8
 549+ 8EB8 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 8EBB 11 CC 89         ld de,Coordenadas_X_Amadeus
 551+ 8EBE 06 02            ld b,2
 552+ 8EC0
 553+ 8EC0 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 8EC3 A7               and a
 555+ 8EC4 28 01            jr z,2F
 556+ 8EC6 04               inc b
 557+ 8EC7
 558+ 8EC7 CD CB 8E     2 call Guarda_coordenadas_X
 559+ 8ECA
 560+ 8ECA              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8ECA
 562+ 8ECA C9               ret
 563+ 8ECB
 564+ 8ECB              ; ----- ----- ----- ----- -----
 565+ 8ECB
 566+ 8ECB 7D           Guarda_coordenadas_X  ld a,l
 567+ 8ECC E6 1F            and $1f
 568+ 8ECE 12           1 ld (de),a
 569+ 8ECF 3C               inc a
 570+ 8ED0 13               inc de
 571+ 8ED1 10 FB            djnz 1B
 572+ 8ED3 C9               ret
 573+ 8ED4
 574+ 8ED4 AF           Limpia_Coordenadas_X xor a
 575+ 8ED5 06 06            ld b,6
 576+ 8ED7 21 CC 89         ld hl,Coordenadas_X_Amadeus
 577+ 8EDA 77           1 ld (hl),a
 578+ 8EDB 23               inc hl
 579+ 8EDC 10 FC            djnz 1B
 580+ 8EDE C9               ret
 581+ 8EDF
 582+ 8EDF              ; ----- ----- ----- ----- -----
 583+ 8EDF
 584+ 8EDF              Compara_coordenadas_X
 585+ 8EDF
 586+ 8EDF 06 03            ld b,3
 587+ 8EE1 11 D1 89         ld de,Coordenadas_X_Entidad+2
 588+ 8EE4
 589+ 8EE4 1A               ld a,(de)
 590+ 8EE5 A7               and a
 591+ 8EE6 20 01            jr nz,2F
 592+ 8EE8 05               dec b
 593+ 8EE9
 594+ 8EE9 1B           2 dec de
 595+ 8EEA 1B               dec de
 596+ 8EEB 21 CC 89         ld hl,Coordenadas_X_Amadeus
 597+ 8EEE
 598+ 8EEE D5           1 push de
 599+ 8EEF E5               push hl
 600+ 8EF0 C5               push bc
 601+ 8EF1
 602+ 8EF1 CD FB 8E         call Comparando
 603+ 8EF4
 604+ 8EF4 C1               pop bc
 605+ 8EF5 E1               pop hl
 606+ 8EF6 D1               pop de
 607+ 8EF7
 608+ 8EF7 13               inc de
 609+ 8EF8 10 F4            djnz 1B
 610+ 8EFA
 611+ 8EFA C9               ret
 612+ 8EFB
 613+ 8EFB              ; ----- ----- ----- ----- -----
 614+ 8EFB              ;
 615+ 8EFB              ;   4/12/23
 616+ 8EFB              ;
 617+ 8EFB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8EFB
 619+ 8EFB 06 03        Comparando ld b,3
 620+ 8EFD 1A               ld a,(de)
 621+ 8EFE 4E           2 ld c,(hl)
 622+ 8EFF B9               cp c
 623+ 8F00 28 04            jr z,1F
 624+ 8F02 23               inc hl
 625+ 8F03 10 F9            djnz 2B
 626+ 8F05 C9               ret
 627+ 8F06
 628+ 8F06 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F08 32 75 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F0B 21 C7 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F0E CB D6            set 2,(hl)
 632+ 8F10 C9               ret
 633+ 8F11
 634+ 8F11              ; -----------------------------------------------------------------------
 635+ 8F11              ;
 636+ 8F11              ;   7/12/23
 637+ 8F11              ;
 638+ 8F11
 639+ 8F11              Detecta_colision_nave_entidad
 640+ 8F11
 641+ 8F11              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F11
 643+ 8F11 FD 2A 64 89      ld iy,(Puntero_objeto)
 644+ 8F15 2A 7C 89         ld hl,(Puntero_de_impresion)
 645+ 8F18
 646+ 8F18 E5               push hl
 647+ 8F19
 648+ 8F19              ; ----- ----- -----
 649+ 8F19 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F1B 06 0A            ld b,10
 651+ 8F1D CD 4D 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F20 7B               ld a,e
 653+ 8F21 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F23 38 0E            jr c,3F
 655+ 8F25
 656+ 8F25              ; LLegados a este punto:
 657+ 8F25              ;
 658+ 8F25              ;   HAY COLISIÓN !!!!!.
 659+ 8F25              ;
 660+ 8F25              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F25              ;   SET el bit3 de (Impacto2).
 662+ 8F25              ;
 663+ 8F25              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F25
 665+ 8F25 21 75 89         ld hl,Impacto
 666+ 8F28 36 01            ld (hl),1
 667+ 8F2A 21 C7 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F2D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F2F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F31
 671+ 8F31 18 18            jr 1F
 672+ 8F33
 673+ 8F33              ; -----
 674+ 8F33
 675+ 8F33 E1           3 pop hl
 676+ 8F34 CD D3 94         call NextScan
 677+ 8F37 E5               push hl
 678+ 8F38 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F39 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F3B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F3D 30 0C            jr nc,1F
 682+ 8F3F              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F3F 10 DC            djnz 2B
 684+ 8F41
 685+ 8F41              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F41
 687+ 8F41              ; LLegados a este punto:
 688+ 8F41              ;
 689+ 8F41              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F41              ;
 691+ 8F41              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F41              ;   RES el bit2 de (Impacto2).
 693+ 8F41              ;
 694+ 8F41              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F41              ;   Lo colocamos a "0".
 696+ 8F41
 697+ 8F41 21 C7 89         ld hl,Impacto2
 698+ 8F44 CB 96            res 2,(hl)
 699+ 8F46 2A C8 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F49 36 00            ld (hl),0
 701+ 8F4B
 702+ 8F4B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F4C C9               ret
 704+ 8F4D
 705+ 8F4D               ; ---------- ----------
 706+ 8F4D
 707+ 8F4D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F4E 3A 61 89         ld a,(Columns)
 709+ 8F51 47               ld b,a
 710+ 8F52 FD 7E 00     2 ld a,(iy)
 711+ 8F55 BE               cp (hl)
 712+ 8F56 28 01            jr z,1F
 713+ 8F58
 714+ 8F58 1C               inc e
 715+ 8F59
 716+ 8F59 23           1 inc hl
 717+ 8F5A FD 23            inc iy
 718+ 8F5C 10 F4            djnz 2B
 719+ 8F5E C1               pop bc
 720+ 8F5F C9               ret
 721+ 8F60
 722+ 8F60              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F60              ;
 724+ 8F60              ;   13/03/23
 725+ 8F60              ;
 726+ 8F60              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F60              ;
 728+ 8F60              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F60
 730+ 8F60 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F63 7E               ld a,(hl)
 732+ 8F64 A7               and a
 733+ 8F65 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F66
 735+ 8F66 44               ld b,h
 736+ 8F67 4D               ld c,l
 737+ 8F68 2A BA 89         ld hl,(Stack_snapshot_disparos)
 738+ 8F6B E5               push hl
 739+ 8F6C A7               and a
 740+ 8F6D ED 42            sbc hl,bc
 741+ 8F6F E5               push hl
 742+ 8F70 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F71
 744+ 8F71 E1               pop hl
 745+ 8F72 54               ld d,h
 746+ 8F73 5D               ld e,l
 747+ 8F74 1B               dec de
 748+ 8F75 ED B8            lddr                                                ; Limpiamos.
 749+ 8F77
 750+ 8F77 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 8F7A 22 BA 89         ld (Stack_snapshot_disparos),hl
 752+ 8F7D
 753+ 8F7D C9               ret
 754+ 8F7E
 755+ 8F7E              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F7E              ;
 757+ 8F7E              ;   18/07/23
 758+ 8F7E              ;
 759+ 8F7E
 760+ 8F7E              Motor_de_disparos
 761+ 8F7E
 762+ 8F7E              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F7E
 764+ 8F7E 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F81 2A C5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F84
 767+ 8F84 CD B0 8B     2 call Extrae_address
 768+ 8F87 7E               ld a,(hl)
 769+ 8F88 A7               and a
 770+ 8F89 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F8B
 772+ 8F8B              ; ----- ----- ----- ----- ----- -----
 773+ 8F8B
 774+ 8F8B C5               push bc
 775+ 8F8C CD 50 90         call foto_disparo_a_borrar
 776+ 8F8F
 777+ 8F8F              ; Existe colisión con este disparo???
 778+ 8F8F
 779+ 8F8F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8F90 7E               ld a,(hl)
 781+ 8F91 2B               dec hl
 782+ 8F92 E6 01            and 1
 783+ 8F94 28 1D            jr z,9F
 784+ 8F96
 785+ 8F96              ;   En este punto:
 786+ 8F96              ;
 787+ 8F96              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8F96              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8F96              ;   _con la entidad).
 790+ 8F96              ;
 791+ 8F96              ;   Disparo_2A defw 0                                ; Control.
 792+ 8F96              ;    defw 0                                          ; Puntero objeto.
 793+ 8F96              ;    defw 0                                          ; Puntero de impresión.
 794+ 8F96              ;    defw 0                                          ; Rutina de impresión.
 795+ 8F96
 796+ 8F96 E5               push hl
 797+ 8F97
 798+ 8F97 06 04            ld b,4
 799+ 8F99 23           19 inc hl
 800+ 8F9A 10 FD            djnz 19B
 801+ 8F9C
 802+ 8F9C CD B0 8B         call Extrae_address
 803+ 8F9F CD AA 9B         call Genera_coordenadas_disparo
 804+ 8FA2
 805+ 8FA2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FA2
 807+ 8FA2 21 CA 89         ld hl,Coordenadas_disparo_certero
 808+ 8FA5 72               ld (hl),d
 809+ 8FA6 23               inc hl
 810+ 8FA7 73               ld (hl),e
 811+ 8FA8
 812+ 8FA8              ; Elimino el disparo de la base de datos.
 813+ 8FA8
 814+ 8FA8 E1               pop hl
 815+ 8FA9 CD CF 90         call Elimina_disparo_de_base_de_datos
 816+ 8FAC 21 C7 89         ld hl,Impacto2
 817+ 8FAF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FB1
 819+ 8FB1 18 06            jr 11F
 820+ 8FB3
 821+ 8FB3 CD 79 90     9 call Mueve_disparo
 822+ 8FB6 CD 50 90         call foto_disparo_a_borrar
 823+ 8FB9
 824+ 8FB9 C1           11 pop bc
 825+ 8FBA 18 04            jr 7F
 826+ 8FBC
 827+ 8FBC              ; ----- ----- ----- ----- ----- -----
 828+ 8FBC
 829+ 8FBC ED 42        1 sbc hl,bc
 830+ 8FBE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FC0
 832+ 8FC0 2A C5 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FC3 23               inc hl
 834+ 8FC4 23               inc hl
 835+ 8FC5 22 C5 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FC8 18 BA            jr 2B
 837+ 8FCA
 838+ 8FCA CD 35 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FCD              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FCD
 841+ 8FCD              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FCD
 843+ 8FCD 01 9F 86         ld bc,Disparo_11
 844+ 8FD0 2A C3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FD3
 846+ 8FD3 CD B0 8B     5 call Extrae_address
 847+ 8FD6 7E               ld a,(hl)
 848+ 8FD7 A7               and a
 849+ 8FD8 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FDA
 851+ 8FDA              ; ----- ----- ----- ----- ----- -----
 852+ 8FDA
 853+ 8FDA C5               push bc
 854+ 8FDB CD 50 90         call foto_disparo_a_borrar
 855+ 8FDE
 856+ 8FDE              ; Existe colisión con este disparo???
 857+ 8FDE
 858+ 8FDE 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8FDF 7E               ld a,(hl)
 860+ 8FE0 2B               dec hl
 861+ 8FE1 E6 01            and 1
 862+ 8FE3 28 4D            jr z,10F
 863+ 8FE5
 864+ 8FE5              ;! La colisión se produce con Amadeus???
 865+ 8FE5              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8FE5
 867+ 8FE5 E5               push hl
 868+ 8FE6
 869+ 8FE6 06 04            ld b,4
 870+ 8FE8 23           16 inc hl
 871+ 8FE9 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8FEB
 873+ 8FEB CD B0 8B         call Extrae_address
 874+ 8FEE CD AA 9B         call Genera_coordenadas_disparo
 875+ 8FF1
 876+ 8FF1 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8FF2 FE 16            cp $16
 878+ 8FF4 38 2A            jr c,15F
 879+ 8FF6
 880+ 8FF6
 881+ 8FF6              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8FF6
 883+ 8FF6 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8FF7
 885+ 8FF7              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8FF7
 887+ 8FF7 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 8FFA
 889+ 8FFA              ; Coordenada X de Amadeus en D.
 890+ 8FFA
 891+ 8FFA 7D               ld a,l
 892+ 8FFB E6 1F            and $1F
 893+ 8FFD 57               ld d,a
 894+ 8FFE
 895+ 8FFE 21 BB 86         ld hl,Amadeus_db+8
 896+ 9001 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9002
 898+ 9002 21 CC 89         ld hl,Coordenadas_X_Amadeus
 899+ 9005 CD CB 8E         call Guarda_coordenadas_X
 900+ 9008
 901+ 9008 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9009
 903+ 9009              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9009
 905+ 9009 06 02            ld b,2
 906+ 900B C5           20 push bc
 907+ 900C
 908+ 900C 06 03            ld b,3
 909+ 900E 21 CC 89         ld hl,Coordenadas_X_Amadeus
 910+ 9011 7E           18 ld a,(hl)
 911+ 9012 BA               cp d
 912+ 9013 20 04            jr nz,17F
 913+ 9015
 914+ 9015              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9015
 916+ 9015 C1               pop bc
 917+ 9016 E1               pop hl
 918+ 9017 18 0D            jr 14F
 919+ 9019
 920+ 9019 23           17 inc hl
 921+ 901A 10 F5            djnz 18B
 922+ 901C
 923+ 901C 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 901D
 925+ 901D C1               pop bc
 926+ 901E 10 EB            djnz 20B
 927+ 9020
 928+ 9020
 929+ 9020              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9020              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9020
 932+ 9020 E1           15 pop hl
 933+ 9021 23               inc hl
 934+ 9022 35               dec (hl)
 935+ 9023 2B               dec hl
 936+ 9024 18 0C            jr 10F
 937+ 9026
 938+ 9026              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9026              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9026
 941+ 9026 E5           14 push hl
 942+ 9027 CD CF 90         call Elimina_disparo_de_base_de_datos
 943+ 902A 21 C7 89         ld hl,Impacto2
 944+ 902D CB CE            set 1,(hl)
 945+ 902F E1               pop hl
 946+ 9030 18 06            jr 12F
 947+ 9032
 948+ 9032              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9032
 950+ 9032 CD 79 90     10 call Mueve_disparo
 951+ 9035 CD 50 90         call foto_disparo_a_borrar
 952+ 9038 C1           12 pop bc
 953+ 9039
 954+ 9039 18 04            jr 8F
 955+ 903B
 956+ 903B              ; ----- ----- ----- ----- ----- -----
 957+ 903B
 958+ 903B ED 42        4 sbc hl,bc
 959+ 903D 28 0A            jr z,6F
 960+ 903F
 961+ 903F 2A C3 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9042 23               inc hl
 963+ 9043 23               inc hl
 964+ 9044 22 C3 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9047 18 8A            jr 5B
 966+ 9049
 967+ 9049 CD 2E 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 904C CD D4 8E         call Limpia_Coordenadas_X
 969+ 904F C9               ret
 970+ 9050
 971+ 9050              ; ------------------------------------------------------------------
 972+ 9050
 973+ 9050              foto_disparo_a_borrar
 974+ 9050
 975+ 9050 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9051 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9052 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9053
 979+ 9053 E5               push hl
 980+ 9054 23               inc hl
 981+ 9055 23               inc hl
 982+ 9056 ED 73 B2 89      ld (Stack),sp
 983+ 905A F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 905B FD E1            pop iy
 985+ 905D DD E1            pop ix
 986+ 905F E1               pop hl
 987+ 9060 ED 7B B2 89      ld sp,(Stack)
 988+ 9064 3A A1 89         ld a,(Ctrl_1)
 989+ 9067 CB C7            set 0,a
 990+ 9069 32 A1 89         ld (Ctrl_1),a
 991+ 906C CD BF 80         call Guarda_foto_registros
 992+ 906F 3A A1 89         ld a,(Ctrl_1)
 993+ 9072 CB 87            res 0,a
 994+ 9074 32 A1 89         ld (Ctrl_1),a
 995+ 9077 E1               pop hl
 996+ 9078 C9               ret
 997+ 9079
 998+ 9079              ;---------------------------------------------------
 999+ 9079              ;
1000+ 9079              ;   18/07/23
1001+ 9079              ;
1002+ 9079
1003+ 9079              Mueve_disparo
1004+ 9079
1005+ 9079              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9079              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9079              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9079
1009+ 9079 E5               push hl
1010+ 907A
1011+ 907A 7E               ld a,(hl)
1012+ 907B
1013+ 907B 06 04            ld b,4
1014+ 907D 23           1 inc hl
1015+ 907E 10 FD            djnz 1B
1016+ 9080
1017+ 9080              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9080
1019+ 9080 CD B0 8B         call Extrae_address
1020+ 9083
1021+ 9083 E6 01            and 1
1022+ 9085 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9087
1024+ 9087              ; Disparo hacia arriba, (Amadeus).
1025+ 9087
1026+ 9087              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9087              ; _ de la dificultad.
1028+ 9087
1029+ 9087 CD E2 94         call PreviousScan
1030+ 908A CD E2 94         call PreviousScan
1031+ 908D CD E2 94         call PreviousScan
1032+ 9090 CD E2 94         call PreviousScan
1033+ 9093
1034+ 9093              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9093
1036+ 9093 7C               ld a,h
1037+ 9094 FE 40            cp $40
1038+ 9096 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9098
1040+ 9098              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9098
1042+ 9098 EB               ex de,hl
1043+ 9099 06 04            ld b,4
1044+ 909B 2B           6 dec hl
1045+ 909C 10 FD            djnz 6B
1046+ 909E
1047+ 909E CD CF 90         call Elimina_disparo_de_base_de_datos
1048+ 90A1 E1               pop hl
1049+ 90A2 18 10            jr 7F
1050+ 90A4
1051+ 90A4              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90A4              ; HL contiene el puntero de impresión del disparo.
1053+ 90A4              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90A4
1055+ 90A4 D5           3 push de
1056+ 90A5 C5               push bc
1057+ 90A6
1058+ 90A6 CD 62 8E         call Comprueba_Colision
1059+ 90A9
1060+ 90A9              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90A9
1062+ 90A9 78               ld a,b
1063+ 90AA
1064+ 90AA C1               pop bc
1065+ 90AB D1               pop de
1066+ 90AC
1067+ 90AC EB               ex de,hl
1068+ 90AD
1069+ 90AD 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90AE 23               inc hl                                      ; _ movimiento.
1071+ 90AF 72               ld (hl),d
1072+ 90B0
1073+ 90B0 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90B1
1075+ 90B1 23               inc hl                                      ; _ en curso.
1076+ 90B2 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90B3 2B               dec hl
1078+ 90B4
1079+ 90B4 C9           7 ret
1080+ 90B5
1081+ 90B5              ; Disparo hacia abajo, (Entidad).
1082+ 90B5
1083+ 90B5 3A D2 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 90B8 47               ld b,a
1085+ 90B9
1086+ 90B9 CD D3 94     4 call NextScan
1087+ 90BC 10 FB            djnz 4B
1088+ 90BE
1089+ 90BE              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90BE
1091+ 90BE 7C               ld a,h
1092+ 90BF FE 58            cp $58
1093+ 90C1 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90C3
1095+ 90C3 EB               ex de,hl
1096+ 90C4 06 04            ld b,4
1097+ 90C6 2B           5 dec hl
1098+ 90C7 10 FD            djnz 5B
1099+ 90C9
1100+ 90C9 CD CF 90         call Elimina_disparo_de_base_de_datos
1101+ 90CC E1               pop hl
1102+ 90CD 18 E5            jr 7B
1103+ 90CF
1104+ 90CF              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90CF
1106+ 90CF 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90D2 AF               xor a
1108+ 90D3 77               ld (hl),a
1109+ 90D4 54               ld d,h
1110+ 90D5 5D               ld e,l
1111+ 90D6 13               inc de
1112+ 90D7 ED B0            ldir
1113+ 90D9 C9               ret
1114+ 90DA
1115+ 90DA              ; -----------------------------------------------------------------
1116+ 90DA              ;
1117+ 90DA              ;   7/12/23
1118+ 90DA              ;
1119+ 90DA
1120+ 90DA 3A C7 89     Selector_de_impactos ld a,(Impacto2)
1121+ 90DD A7               and a
1122+ 90DE C8               ret z
1123+ 90DF
1124+ 90DF              ; Analizamos si hay impacto por disparos.
1125+ 90DF
1126+ 90DF              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 90DF
1128+ 90DF CB 4F            bit 1,a
1129+ 90E1 28 07            jr z,1F
1130+ 90E3
1131+ 90E3 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 90E6 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 90E8 18 08            jr 2F
1134+ 90EA
1135+ 90EA CB 47        1 bit 0,a
1136+ 90EC C8               ret z
1137+ 90ED
1138+ 90ED              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 90ED
1140+ 90ED 21 A1 89         ld hl,Ctrl_1
1141+ 90F0 CB D6            set 2,(hl)
1142+ 90F2
1143+ 90F2 C9           2 ret
1144+ 90F3
1145+ 90F3              ; -----------------------------------------------------------------
1146+ 90F3              ;
1147+ 90F3              ;   25/04/23
1148+ 90F3              ;
1149+ 90F3
1150+ 90F3              Determina_resultado_comparativa
1151+ 90F3
1152+ 90F3              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 90F3              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 90F3              ;
1155+ 90F3              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 90F3              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 90F3              ;
1158+ 90F3              ;   SBC HL,DE
1159+ 90F3
1160+ 90F3              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 90F3              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 90F3
1163+ 90F3              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 90F3              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 90F3
1166+ 90F3
1167+ 90F3 3A 74 89         ld a,(Cuad_objeto)
1168+ 90F6 FE 02            cp 2
1169+ 90F8 28 26            jr z,2F
1170+ 90FA 38 24            jr c,2F
1171+ 90FC
1172+ 90FC              ; Cuadrantes 3º y 4º
1173+ 90FC
1174+ 90FC E6 01            and 1
1175+ 90FE 28 10            jr z,4F
1176+ 9100
1177+ 9100              ; Cuadrante 3º
1178+ 9100
1179+ 9100 7C               ld a,h
1180+ 9101 06 00            ld b,0
1181+ 9103
1182+ 9103 CD 8E 91         call Compara_cositas_H3
1183+ 9106
1184+ 9106 04               inc b
1185+ 9107 05               dec b
1186+ 9108 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9109
1188+ 9109 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 910A 06 00            ld b,0
1190+ 910C
1191+ 910C CD A0 91         call Compara_cositas_L3
1192+ 910F C9               ret
1193+ 9110
1194+ 9110              ; Cuadrante 4º
1195+ 9110
1196+ 9110 7C           4 ld a,h
1197+ 9111 06 00            ld b,0
1198+ 9113
1199+ 9113 CD B2 91         call Compara_cositas_H4
1200+ 9116
1201+ 9116 04               inc b
1202+ 9117 05               dec b
1203+ 9118 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9119
1205+ 9119 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 911A 06 00            ld b,0
1207+ 911C
1208+ 911C CD C8 91         call Compara_cositas_L4
1209+ 911F C9               ret
1210+ 9120
1211+ 9120              ; Cuadrantes 1º y 2º.
1212+ 9120
1213+ 9120 28 10        2 jr z,3F
1214+ 9122
1215+ 9122              ; 1er Cuadrante
1216+ 9122
1217+ 9122 7C               ld a,h
1218+ 9123 06 00            ld b,0
1219+ 9125
1220+ 9125 CD 66 91         call Compara_cositas_H1
1221+ 9128
1222+ 9128 04               inc b
1223+ 9129 05               dec b
1224+ 912A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 912B
1226+ 912B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 912C 06 00            ld b,0
1228+ 912E
1229+ 912E CD 7C 91         call Compara_cositas_L1
1230+ 9131 C9               ret
1231+ 9132
1232+ 9132
1233+ 9132              ; 2º Cuadrante
1234+ 9132
1235+ 9132 7C           3 ld a,h
1236+ 9133 06 00            ld b,0
1237+ 9135
1238+ 9135 CD 42 91         call Compara_cositas_H2
1239+ 9138
1240+ 9138 04               inc b
1241+ 9139 05               dec b
1242+ 913A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 913B
1244+ 913B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 913C 06 00            ld b,0
1246+ 913E
1247+ 913E CD 54 91         call Compara_cositas_L2
1248+ 9141 C9               ret
1249+ 9142
1250+ 9142 A7           Compara_cositas_H2 and a
1251+ 9143 28 0D            jr z,1F
1252+ 9145              ;    cp $fd
1253+ 9145              ;    jr z,1F
1254+ 9145              ;    cp $fe
1255+ 9145              ;    jr z,1F
1256+ 9145 FE FF            cp $ff
1257+ 9147 28 09            jr z,1F
1258+ 9149 FE 01            cp $01
1259+ 914B 28 05            jr z,1F
1260+ 914D FE 02            cp $02
1261+ 914F 28 01            jr z,1F
1262+ 9151 C0               ret nz
1263+ 9152 04           1 inc b
1264+ 9153 C9               ret
1265+ 9154
1266+ 9154 A7           Compara_cositas_L2 and a
1267+ 9155 28 0D            jr z,1F
1268+ 9157              ;    cp $fd
1269+ 9157              ;    jr z,1F
1270+ 9157 FE FE            cp $fe
1271+ 9159 28 09            jr z,1F
1272+ 915B FE FF            cp $ff
1273+ 915D 28 05            jr z,1F
1274+ 915F FE 01            cp $01
1275+ 9161 28 01            jr z,1F
1276+ 9163              ;    cp $02
1277+ 9163              ;    jr z,1F
1278+ 9163 C0               ret nz
1279+ 9164 04           1 inc b
1280+ 9165 C9               ret
1281+ 9166
1282+ 9166 A7           Compara_cositas_H1 and a
1283+ 9167 28 11            jr z,1F
1284+ 9169              ;    cp $fd
1285+ 9169              ;    jr z,1F
1286+ 9169              ;    cp $fe
1287+ 9169              ;    jr z,1F
1288+ 9169 FE FF            cp $ff
1289+ 916B 28 0D            jr z,1F
1290+ 916D FE 01            cp $01
1291+ 916F 28 09            jr z,1F
1292+ 9171 FE 02            cp $02
1293+ 9173 28 05            jr z,1F
1294+ 9175 FE 03            cp $03
1295+ 9177 28 01            jr z,1F
1296+ 9179 C0               ret nz
1297+ 917A 04           1 inc b
1298+ 917B C9               ret
1299+ 917C
1300+ 917C A7           Compara_cositas_L1 and a
1301+ 917D 28 0D            jr z,1F
1302+ 917F              ;    cp $fd
1303+ 917F              ;    jr z,1F
1304+ 917F              ;    cp $fe
1305+ 917F              ;    jr z,1F
1306+ 917F              ;    cp $ff
1307+ 917F              ;    jr z,1F
1308+ 917F FE 01            cp $01
1309+ 9181 28 09            jr z,1F
1310+ 9183 FE 02            cp $02
1311+ 9185 28 05            jr z,1F
1312+ 9187 FE 03            cp $03
1313+ 9189 28 01            jr z,1F
1314+ 918B C0               ret nz
1315+ 918C 04           1 inc b
1316+ 918D C9               ret
1317+ 918E
1318+ 918E A7           Compara_cositas_H3 and a
1319+ 918F 28 0D            jr z,1F
1320+ 9191              ;    cp $fd
1321+ 9191              ;    jr z,1F
1322+ 9191 FE FE            cp $fe
1323+ 9193 28 09            jr z,1F
1324+ 9195 FE FF            cp $ff
1325+ 9197 28 05            jr z,1F
1326+ 9199 FE 01            cp $01
1327+ 919B 28 01            jr z,1F
1328+ 919D              ;    cp $02
1329+ 919D              ;    jr z,1F
1330+ 919D              ;    cp $03
1331+ 919D              ;    jr z,1F
1332+ 919D C0               ret nz
1333+ 919E 04           1 inc b
1334+ 919F C9               ret
1335+ 91A0
1336+ 91A0 A7           Compara_cositas_L3 and a
1337+ 91A1 28 0D            jr z,1F
1338+ 91A3              ;    cp $fd
1339+ 91A3              ;    jr z,1F
1340+ 91A3              ;    cp $fe
1341+ 91A3              ;    jr z,1F
1342+ 91A3              ;    cp $ff
1343+ 91A3              ;    jr z,1F
1344+ 91A3 FE 01            cp $01
1345+ 91A5 28 09            jr z,1F
1346+ 91A7 FE 02            cp $02
1347+ 91A9 28 05            jr z,1F
1348+ 91AB FE 03            cp $03
1349+ 91AD 28 01            jr z,1F
1350+ 91AF C0               ret nz
1351+ 91B0 04           1 inc b
1352+ 91B1 C9               ret
1353+ 91B2
1354+ 91B2 A7           Compara_cositas_H4 and a
1355+ 91B3 28 11            jr z,1F
1356+ 91B5 FE FD            cp $fd
1357+ 91B7 28 0D            jr z,1F
1358+ 91B9 FE FE            cp $fe
1359+ 91BB 28 09            jr z,1F
1360+ 91BD FE FF            cp $ff
1361+ 91BF 28 05            jr z,1F
1362+ 91C1 FE 01            cp $01
1363+ 91C3 28 01            jr z,1F
1364+ 91C5              ;    cp $02
1365+ 91C5              ;    jr z,1F
1366+ 91C5              ;    cp $03
1367+ 91C5              ;    jr z,1F
1368+ 91C5 C0               ret nz
1369+ 91C6 04           1 inc b
1370+ 91C7 C9               ret
1371+ 91C8
1372+ 91C8 A7           Compara_cositas_L4 and a
1373+ 91C9 28 0D            jr z,1F
1374+ 91CB              ;    cp $fd
1375+ 91CB              ;    jr z,1F
1376+ 91CB FE FE            cp $fe
1377+ 91CD 28 09            jr z,1F
1378+ 91CF FE FF            cp $ff
1379+ 91D1 28 05            jr z,1F
1380+ 91D3 FE 01            cp $01
1381+ 91D5 28 01            jr z,1F
1382+ 91D7              ;    cp $02
1383+ 91D7              ;    jr z,1F
1384+ 91D7              ;    cp $03
1385+ 91D7              ;    jr z,1F
1386+ 91D7 C0               ret nz
1387+ 91D8 04           1 inc b
1388+ 91D9 C9               ret
# file closed: Disparo.asm
1757  91DA              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91DA              ; ******************************************************************************************************************************************************************************************
   2+ 91DA              ;
   3+ 91DA              ; 26/06/23
   4+ 91DA              ;
   5+ 91DA              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91DA
   7+ 91DA              Draw
   8+ 91DA
   9+ 91DA CD C7 94     	call Prepara_draw
  10+ 91DD 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 91DE A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 91DF 28 05        	jr z,2F
  13+ 91E1
  14+ 91E1 3A 74 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 91E4 18 0C        	jr 1F
  16+ 91E6
  17+ 91E6 2A 72 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 91E9 22 62 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 91EC CD 7B 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 91EF              ;													; _la esquina superior izquierda de la pantalla.
  21+ 91EF
  22+ 91EF CD 3B 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 91F2
  24+ 91F2 3A 82 89     1 ld a,(Ctrl_0)
  25+ 91F5 CB 6F        	bit 5,a
  26+ 91F7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 91F9
  28+ 91F9 CD 11 92     	call Comprueba_limite_horizontal
  29+ 91FC CD A1 92     	call Comprueba_limite_vertical
  30+ 91FF
  31+ 91FF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 91FF              ; -----------------------
  33+ 91FF              ; -----------------------
  34+ 91FF              ; -----------------------
  35+ 91FF
  36+ 91FF CD F7 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9202 CD 2E 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9205 CD 8D 94     	call Define_rutina_de_impresion
  39+ 9208
  40+ 9208 3A 82 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 920B CB AF        	res 5,a											; _a ser de utilidad.
  42+ 920D 32 82 89     	ld (Ctrl_0),a
  43+ 9210
  44+ 9210 C9           	ret
  45+ 9211
  46+ 9211              ; *******************************************************************************************************************************************************************************************
  47+ 9211              ;	21/01/23
  48+ 9211              ;
  49+ 9211              ; 	Comprueba_limite_horizontal.
  50+ 9211              ;
  51+ 9211              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9211              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9211              ;
  54+ 9211              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9211              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9211              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9211              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9211
  59+ 9211
  60+ 9211
  61+ 9211 3A 82 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9214 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9216 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9218 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 921A 32 82 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 921D 18 09            jr 6F
  67+ 921F CB 5F        1 bit 3,a
  68+ 9221 28 0A            jr z,2F
  69+ 9223 E6 F7            and $f7
  70+ 9225 32 82 89         ld (Ctrl_0),a
  71+ 9228 CD 7B 93     6 call Inicializacion
  72+ 922B 18 5B            jr 5F
  73+ 922D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 922E
  75+ 922E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 922E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 922E
  78+ 922E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 922F 2A 84 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9232 CD E6 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9235 67           	ld h,a
  82+ 9236 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9237 CD E6 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 923A 67           	ld h,a
  85+ 923B A7           	and a
  86+ 923C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 923E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 923F 3A 74 89     	ld a,(Cuad_objeto)
  89+ 9242 FE 02        	cp 2
  90+ 9244 38 1E        	jr c,3F
  91+ 9246 28 1C        	jr z,3F
  92+ 9248 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9249 28 23            jr z,7F
  94+ 924B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 924D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 924F E1           	pop hl
  97+ 9250
  98+ 9250              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9250              ; _para indicar con E="2" en caso necesario.
 100+ 9250
 101+ 9250 E5               push hl
 102+ 9251 C5               push bc
 103+ 9252 CD E6 97     	call calcula_tercio
 104+ 9255 FE 01        	cp 1
 105+ 9257 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9259 CD 89 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 925C 28 26            jr z,9F
 108+ 925E 38 24            jr c,9F
 109+ 9260 1E 00        11 ld e,0
 110+ 9262 18 22            jr 8F
 111+ 9264 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9265 28 07        	jr z, 7F
 113+ 9267 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9269 1E 00         	ld e,0
 115+ 926B E1           	pop hl
 116+ 926C 18 04        	jr 4F
 117+ 926E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9270 18 15            jr 10F
 119+ 9272
 120+ 9272              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9272              ; _para indicar con E="2" en caso necesario.
 122+ 9272
 123+ 9272 E5           4 push hl
 124+ 9273 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9274 CD E6 97     	call calcula_tercio
 126+ 9277 FE 01        	cp 1
 127+ 9279 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 927B CD 89 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 927E 28 04            jr z,9F
 130+ 9280 30 02            jr nc,9F
 131+ 9282 18 02        	jr 8F
 132+ 9284 1E 02        9 ld e,2
 133+ 9286 C1           8 pop bc
 134+ 9287 E1           10 pop hl
 135+ 9288 C9           5 ret
 136+ 9289
 137+ 9289              ; --------------------
 138+ 9289              ;
 139+ 9289              ; 25/08/22
 140+ 9289
 141+ 9289 CD E6 97     Comprueba_centro call calcula_tercio
 142+ 928C 67               ld h,a
 143+ 928D 08           	ex af,af
 144+ 928E FE 02        	cp 2
 145+ 9290 38 07        	jr c,1F
 146+ 9292 28 05        	jr z,1F
 147+ 9294 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9297 18 03        	jr 2F
 149+ 9299 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 929C 08           2 ex af,af
 151+ 929D A7               and a
 152+ 929E ED 42            sbc hl,bc
 153+ 92A0 C9               ret
 154+ 92A1
 155+ 92A1              ; *********************************************************************************************************************************************************************************************
 156+ 92A1              ;
 157+ 92A1              ;   16/8/22
 158+ 92A1              ;
 159+ 92A1              ;	Comprueba_limite_vertical
 160+ 92A1              ;
 161+ 92A1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 92A1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 92A1              ;
 164+ 92A1
 165+ 92A1 2A 62 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 92A4 7D           	ld a,l
 167+ 92A5 E6 1F        	and $1F
 168+ 92A7 57           	ld d,a
 169+ 92A8 3A 86 89     	ld a,(Limite_vertical)
 170+ 92AB BA           	cp d 											; Límite - Posición.
 171+ 92AC 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 92AD 3A 74 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 92B0 CB 47        	bit 0,a
 174+ 92B2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 92B4
 176+ 92B4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 92B4
 178+ 92B4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 92B5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 92B7
 181+ 92B7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 92B7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 92B7
 184+ 92B7 3A 66 89         ld a,(Coordenada_X)
 185+ 92BA 16 0F            ld d,Centro_izquierda
 186+ 92BC A7               and a
 187+ 92BD 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 92BE 28 1E            jr z,3F
 189+ 92C0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 92C2              ;                                                    ; _salimos sin modificar nada.
 191+ 92C2 18 0E            jr 2F
 192+ 92C4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 92C5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 92C7
 195+ 92C7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 92C7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 92C7
 198+ 92C7 3A 66 89         ld a,(Coordenada_X)
 199+ 92CA 16 10            ld d,Centro_derecha
 200+ 92CC A7               and a
 201+ 92CD 92               sub d
 202+ 92CE 28 0E            jr z,3F
 203+ 92D0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 92D2              ;                                                    ; _salimos sin modificar nada.
 205+ 92D2 CB 43        2 bit 0,e
 206+ 92D4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 92D6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 92D7 CD 6B 93         call Modificaccionne
 209+ 92DA C1           	pop bc
 210+ 92DB CD 7B 93         call Inicializacion
 211+ 92DE C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 92DF
 213+ 92DF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 92DF
 215+ 92DF C5           4 push bc
 216+ 92E0 01 61 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 92E3 0A           	ld a,(bc)
 218+ 92E4 3D           	dec a
 219+ 92E5 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 92E6 7D           	ld a,l
 221+ 92E7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 92E8 CB 47        	bit 0,a
 223+ 92EA 28 03        	jr z,5F
 224+ 92EC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 92ED 18 2E        	jr 7F
 226+ 92EF
 227+ 92EF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 92EF
 229+ 92EF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 92F0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 92F1 3A 82 89     	ld a,(Ctrl_0)
 232+ 92F4 CB 4F        	bit 1,a
 233+ 92F6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 92F8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 92F9
 236+ 92F9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 92F9
 238+ 92F9 1C               inc e
 239+ 92FA 1D               dec e
 240+ 92FB 20 07            jr nz,12F
 241+ 92FD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 92FE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 92FF 22 62 89     	ld (Posicion_actual),hl
 244+ 9302 18 44        13 jr 9F
 245+ 9304 CB 43        12 bit 0,e
 246+ 9306 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9308              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9308 C1           	pop bc
 249+ 9309 18 D3        	jr 3B
 250+ 930B 80           14 add b
 251+ 930C 6F               ld l,a
 252+ 930D 22 62 89     	ld (Posicion_actual),hl
 253+ 9310 CD 6B 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9313 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9315 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9317 32 82 89         ld (Ctrl_0),a
 257+ 931A F1           	pop af
 258+ 931B 18 2B        	jr 9F
 259+ 931D
 260+ 931D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 931D
 262+ 931D F5           7 push af
 263+ 931E 3A 82 89     	ld a,(Ctrl_0)
 264+ 9321 CB 47        	bit 0,a
 265+ 9323 20 1D        	jr nz,8F
 266+ 9325 F1           	pop af
 267+ 9326
 268+ 9326              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9326
 270+ 9326 1C           	inc e
 271+ 9327 1D               dec e
 272+ 9328 20 07            jr nz,10F
 273+ 932A 90           	sub b
 274+ 932B 6F               ld l,a
 275+ 932C 22 62 89     	ld (Posicion_actual),hl
 276+ 932F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9331              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9331 CB 43        10 bit 0,e
 279+ 9333 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9335              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9335 C1           	pop bc
 282+ 9336 18 A6        	jr 3B
 283+ 9338 90           16 sub b
 284+ 9339 6F               ld l,a
 285+ 933A 22 62 89     	ld (Posicion_actual),hl
 286+ 933D CD 6B 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9340 18 06            jr 9F
 288+ 9342 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9344 32 82 89         ld (Ctrl_0),a
 290+ 9347 F1           	pop af
 291+ 9348 C1           9 pop bc
 292+ 9349 1E 00        	ld e,0
 293+ 934B CD 7B 93         call Inicializacion
 294+ 934E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 934F 08           	ex af,af
 296+ 9350 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9351 18 8B            jr 3B
 298+ 9353
 299+ 9353              ; --------------------
 300+ 9353
 301+ 9353 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9355 CD E2 94     1 call PreviousScan
 303+ 9358 10 FB            djnz 1B
 304+ 935A 22 62 89     	ld (Posicion_actual),hl
 305+ 935D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 935E C9           	ret
 307+ 935F
 308+ 935F              ; --------------------
 309+ 935F
 310+ 935F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9361 CD D3 94     1 call NextScan
 312+ 9364 10 FB            djnz 1B
 313+ 9366 22 62 89     	ld (Posicion_actual),hl
 314+ 9369 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 936A C9           	ret
 316+ 936B
 317+ 936B              ; --------------------
 318+ 936B              ;
 319+ 936B              ;	22/01/23
 320+ 936B              ;
 321+ 936B              ;	E="1". Hemos cambiado de cuadrante.
 322+ 936B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 936B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 936B
 325+ 936B
 326+ 936B              Modificaccionne
 327+ 936B
 328+ 936B 3A 74 89     	ld a,(Cuad_objeto)
 329+ 936E FE 02        	cp 2
 330+ 9370 CC 53 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9373 DC 53 93         call c,Modifica_Pos_actual
 332+ 9376 C8           	ret z
 333+ 9377 CD 5F 93         call Modifica_Pos_actual2
 334+ 937A C9               ret
 335+ 937B
 336+ 937B              ; *************************************************************************************************************************************************************************************************
 337+ 937B              ;
 338+ 937B              ;	13/8/22
 339+ 937B              ;
 340+ 937B              ;	Inicializacion
 341+ 937B              ;
 342+ 937B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 937B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 937B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 937B              ;
 346+ 937B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 937B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 937B              ;	_ desaparece/aparece.
 349+ 937B
 350+ 937B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 937B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 937B              ;
 353+ 937B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 937B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 937B              ; 		   [E] ="0"
 356+ 937B
 357+ 937B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 937B
 359+ 937B CD E6 97     Inicializacion call calcula_tercio
 360+ 937E 28 36        	jr z,primit
 361+ 9380 E6 02        	and 2
 362+ 9382 20 07        	jr nz,segmit
 363+ 9384 7D           	ld a,l
 364+ 9385 FE 7F        	cp $7f
 365+ 9387 38 2D        	jr c,primit
 366+ 9389 28 2B        	jr z,primit
 367+ 938B CD F1 93     segmit call column
 368+ 938E 38 13        	jr c,tercuad
 369+ 9390 3E 04        cuarcuad ld a,4
 370+ 9392 32 74 89     	ld (Cuad_objeto),a
 371+ 9395 21 20 48     	ld hl,$4820
 372+ 9398 22 84 89     	ld (Limite_horizontal),hl
 373+ 939B 21 86 89     	ld hl,Limite_vertical
 374+ 939E 36 0D        	ld (hl),$0d
 375+ 93A0 08           	ex af,af
 376+ 93A1 18 3C        	jr 1F
 377+ 93A3              tercuad
 378+ 93A3 3E 03        	ld a,3
 379+ 93A5 32 74 89     	ld (Cuad_objeto),a
 380+ 93A8 21 20 48     	ld hl,$4820
 381+ 93AB 22 84 89     	ld (Limite_horizontal),hl
 382+ 93AE 21 86 89     	ld hl,Limite_vertical
 383+ 93B1 36 12        	ld (hl),$12
 384+ 93B3 08           	ex af,af
 385+ 93B4 18 29        	jr 1F
 386+ 93B6 CD F1 93     primit call column
 387+ 93B9 38 13        	jr c, primcuad
 388+ 93BB              segcuad
 389+ 93BB 3E 02        	ld a,2
 390+ 93BD 32 74 89     	ld (Cuad_objeto),a
 391+ 93C0 21 C0 4F     	ld hl,$4fc0
 392+ 93C3 22 84 89     	ld (Limite_horizontal),hl
 393+ 93C6 21 86 89     	ld hl,Limite_vertical
 394+ 93C9 36 0D        	ld (hl),$0d
 395+ 93CB 08           	ex af,af
 396+ 93CC 18 11        	jr 1F
 397+ 93CE              primcuad
 398+ 93CE 3E 01        	ld a,1
 399+ 93D0 32 74 89     	ld (Cuad_objeto),a
 400+ 93D3 21 C0 4F     	ld hl,$4fc0
 401+ 93D6 22 84 89     	ld (Limite_horizontal),hl
 402+ 93D9 21 86 89     	ld hl,Limite_vertical
 403+ 93DC 36 12        	ld (hl),$12
 404+ 93DE 08           	ex af,af
 405+ 93DF
 406+ 93DF C5           1 push bc
 407+ 93E0 E5           	push hl
 408+ 93E1 D5           	push de
 409+ 93E2
 410+ 93E2 2A 62 89     	ld hl,(Posicion_actual)
 411+ 93E5 CD 7E 9B     	call Genera_coordenadas
 412+ 93E8
 413+ 93E8 D1           	pop de
 414+ 93E9 E1           	pop hl
 415+ 93EA C1           	pop bc
 416+ 93EB
 417+ 93EB 21 82 89     	ld hl,Ctrl_0
 418+ 93EE CB EE        	set 5,(hl)
 419+ 93F0 C9           	ret
 420+ 93F1
 421+ 93F1              ; ------------------------------------------------------------------------------------------------------------------
 422+ 93F1
 423+ 93F1              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 93F1              ;
 425+ 93F1              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 93F1
 427+ 93F1 7D           column ld a,l
 428+ 93F2 E6 1F        	and $1f
 429+ 93F4 FE 10         	cp $10
 430+ 93F6 C9            	ret
 431+ 93F7
 432+ 93F7              ; --------------------------------------------------------------------------------------------------------------------
 433+ 93F7              ;
 434+ 93F7              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 93F7              ;
 436+ 93F7              ; 14/12/22
 437+ 93F7              ;
 438+ 93F7              ;	Modifica: A y BC.
 439+ 93F7
 440+ 93F7 3A 74 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 93FA E6 01        	and 1
 442+ 93FC 28 17        	jr z,1F
 443+ 93FE
 444+ 93FE              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 93FE
 446+ 93FE 3A 66 89     	ld a,(Coordenada_X)
 447+ 9401 47           	ld b,a
 448+ 9402 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9403 79           	ld a,c
 450+ 9404 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9405 38 08        	jr c,2F
 452+ 9407 47           	ld b,a
 453+ 9408 79           	ld a,c
 454+ 9409 90           	sub b
 455+ 940A 32 83 89     	ld (Columnas),a
 456+ 940D 18 1B        	jr 4F
 457+ 940F 79           2 ld a,c
 458+ 9410 32 83 89     	ld (Columnas),a
 459+ 9413 18 15        	jr 4F
 460+ 9415
 461+ 9415              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9415
 463+ 9415 3A 66 89     1 ld a,(Coordenada_X)
 464+ 9418 81           	add c
 465+ 9419 3D           	dec a
 466+ 941A D6 1F        	sub $1f
 467+ 941C 38 08        	jr c,3F
 468+ 941E 47           	ld b,a
 469+ 941F 79           	ld a,c
 470+ 9420 90           	sub b
 471+ 9421 32 83 89     	ld (Columnas),a
 472+ 9424 18 04        	jr 4F
 473+ 9426 79           3 ld a,c
 474+ 9427 32 83 89     	ld (Columnas),a
 475+ 942A D9           4 exx
 476+ 942B 4F           	ld c,a
 477+ 942C D9           	exx
 478+ 942D C9            ret
 479+ 942E
 480+ 942E              ; --------------------------------------------------------------------------------------------------------------------
 481+ 942E              ;
 482+ 942E              ;   19/7/23
 483+ 942E              ;
 484+ 942E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 942E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 942E              ;
 487+ 942E              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 942E              ;			HL e IY Contienen (Puntero_objeto).
 489+ 942E              ;
 490+ 942E              ;	DESTRUYE: HL,B Y A.
 491+ 942E
 492+ 942E 3A 74 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9431 FE 02        	cp 2
 494+ 9433 38 18        	jr c,1F
 495+ 9435 28 16        	jr z,1F
 496+ 9437 E6 01        	and 1
 497+ 9439 28 0D        	jr z,3F
 498+ 943B
 499+ 943B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 943B
 501+ 943B CD 81 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 943E
 503+ 943E 7D           9 ld a,l
 504+ 943F E6 1F        	and $1f
 505+ 9441 28 2A        	jr z,7F
 506+ 9443 2B           	dec hl
 507+ 9444 10 F8        	djnz 9B
 508+ 9446 18 25        	jr 7F
 509+ 9448
 510+ 9448              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9448
 512+ 9448 2A 62 89     3 ld hl,(Posicion_actual)
 513+ 944B 18 20        	jr 7F
 514+ 944D
 515+ 944D 28 14        1 jr z,2F
 516+ 944F
 517+ 944F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 944F
 519+ 944F CD 81 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9452
 521+ 9452 7D           4 ld a,l
 522+ 9453 E6 1F        	and $1f
 523+ 9455 28 03        	jr z,6F
 524+ 9457 2B           	dec hl
 525+ 9458 10 F8        	djnz 4B
 526+ 945A 06 0F        6 ld b,15
 527+ 945C CD E2 94     5 call PreviousScan
 528+ 945F 10 FB        	djnz 5B
 529+ 9461 18 0A        	jr 7F
 530+ 9463
 531+ 9463              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9463
 533+ 9463 CD 81 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9466 06 0F        	ld b,15
 535+ 9468 CD E2 94     8 call PreviousScan
 536+ 946B 10 FB        	djnz 8B
 537+ 946D
 538+ 946D E5           7 push hl
 539+ 946E DD E1        	pop ix
 540+ 9470
 541+ 9470 2A 64 89     	ld hl,(Puntero_objeto)
 542+ 9473 E5           	push hl
 543+ 9474 FD E1        	pop iy
 544+ 9476
 545+ 9476              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9476
 547+ 9476 3A 82 89     	ld a,(Ctrl_0)
 548+ 9479 CB 77        	bit 6,a
 549+ 947B C8           	ret z
 550+ 947C
 551+ 947C              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 947C              ; _ entidad / Amadeus´.
 553+ 947C
 554+ 947C DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 9480
 556+ 9480 C9           	ret
 557+ 9481
 558+ 9481              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9481              ;
 560+ 9481              ;	2/1/23
 561+ 9481              ;
 562+ 9481              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9481              ;
 564+ 9481              ;	Tras esta rutina tenemos:
 565+ 9481              ;
 566+ 9481              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9481              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9481              ;
 569+ 9481              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9481
 571+ 9481 2A 62 89     Operandos ld hl,(Posicion_actual)
 572+ 9484 3A 83 89     	ld a,(Columnas)
 573+ 9487 3D           	dec a
 574+ 9488 20 01        	jr nz,1F
 575+ 948A 3C           	inc a
 576+ 948B 47           1 ld b,a
 577+ 948C C9           	ret
 578+ 948D
 579+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 580+ 948D              ;
 581+ 948D              ;	3/1/23
 582+ 948D              ;
 583+ 948D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 948D              ;
 585+ 948D              ;	Destruye: A,B,HL y DE.
 586+ 948D
 587+ 948D              Define_rutina_de_impresion
 588+ 948D
 589+ 948D 3A 61 89     	ld a,(Columns)
 590+ 9490 47           	ld b,a
 591+ 9491 3A 83 89     	ld a,(Columnas)
 592+ 9494 B8           	cp b
 593+ 9495 20 0D        	jr nz,2f
 594+ 9497
 595+ 9497              ;	La entidad se imprime entera.
 596+ 9497
 597+ 9497 21 B6 95     	ld hl, Indice_entidades_completas
 598+ 949A E6 01        	and 1
 599+ 949C 28 02        	jr z,1F
 600+ 949E
 601+ 949E 23           	inc hl
 602+ 949F 23           	inc hl
 603+ 94A0
 604+ 94A0 CD B0 8B     1 call Extrae_address
 605+ 94A3 C9           	ret		;	ret
 606+ 94A4
 607+ 94A4              ;	La entidad no se imprime entera en pantalla.
 608+ 94A4
 609+ 94A4 3A 74 89     2 ld a,(Cuad_objeto)
 610+ 94A7 E6 01        	and 1
 611+ 94A9 28 17        	jr z,3F
 612+ 94AB
 613+ 94AB              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 94AB
 615+ 94AB 21 BA 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 94AE 3A 61 89     4 ld a,(Columns)
 617+ 94B1 E6 01        	and 1
 618+ 94B3 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 94B5
 620+ 94B5 23           	inc hl
 621+ 94B6 23           	inc hl
 622+ 94B7
 623+ 94B7 3A 83 89     	ld a,(Columnas)
 624+ 94BA E6 01        	and 1
 625+ 94BC 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 94BE
 627+ 94BE 23           	inc hl
 628+ 94BF 23           	inc hl
 629+ 94C0
 630+ 94C0 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 94C2
 632+ 94C2 21 C0 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 94C5 18 E7        	jr 4B
 634+ 94C7
 635+ 94C7              ; --------------------------------------------------------------------------------------------------------------------
 636+ 94C7              ;
 637+ 94C7              ;	Prepara_draw
 638+ 94C7              ;
 639+ 94C7              ;	Es una rutina de carga.
 640+ 94C7              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 94C7              ;
 642+ 94C7              ;	FUNCIONAMIENTO:
 643+ 94C7              ;
 644+ 94C7              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 94C7              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 94C7              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 94C7              ;
 648+ 94C7              ;	DESTRUYE:
 649+ 94C7              ;
 650+ 94C7              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 94C7
 652+ 94C7 21 60 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 94CA 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 94CB 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 94CC 4E           	ld c,(hl)
 656+ 94CD 2A 62 89     	ld hl,(Posicion_actual)
 657+ 94D0 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 94D2 C9           	ret
 659+ 94D3
 660+ 94D3              ;----------------------------------------------------------------------------------------------------------------
 661+ 94D3              ;
 662+ 94D3              ;	5/08/22
 663+ 94D3              ;
 664+ 94D3              ;   NextScan.
 665+ 94D3              ;
 666+ 94D3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 94D3              ;
 668+ 94D3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 94D3              ;
 670+ 94D3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 94D3              ;
 672+ 94D3              ;       DESTRUIDOS: AF y HL !!!
 673+ 94D3              ;
 674+ 94D3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 94D3              ;
 676+ 94D3
 677+ 94D3 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 94D4 7C               ld a,h
 679+ 94D5 E6 07            and 7
 680+ 94D7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 94D8
 682+ 94D8 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 94D9 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 94DB 6F               ld l,a
 685+ 94DC D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 94DD
 687+ 94DD 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 94DE D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 94E0 67               ld h,a
 690+ 94E1 C9               ret
 691+ 94E2
 692+ 94E2              ;----------------------------------------------------------------------------------------------------------------
 693+ 94E2              ;
 694+ 94E2              ;	5/08/22
 695+ 94E2              ;
 696+ 94E2              ;   PreviousScan.
 697+ 94E2              ;
 698+ 94E2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 94E2              ;
 700+ 94E2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 94E2              ;
 702+ 94E2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 94E2              ;
 704+ 94E2              ;       DESTRUIDOS: AF y HL !!!
 705+ 94E2              ;
 706+ 94E2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 94E2              ;
 708+ 94E2
 709+ 94E2 7C           PreviousScan ld a,h
 710+ 94E3 25               dec h               ; Dec H.
 711+ 94E4 E6 07            and 7
 712+ 94E6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 94E7
 714+ 94E7 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 94E8 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 94EA 6F               ld l,a
 717+ 94EB D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 94EC
 719+ 94EC 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 94ED C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 94EF 67               ld h,a
 722+ 94F0 C9               ret
 723+ 94F1
 724+ 94F1              ; -----------------------------------------------------------------------------------
 725+ 94F1              ;
 726+ 94F1              ;	31/7/23
 727+ 94F1              ;
 728+ 94F1              ;	Rutina principal de pintado de entidades.
 729+ 94F1              ;	Extrae la foto del frame, (entidades).
 730+ 94F1
 731+ 94F1              Extrae_foto_entidades
 732+ 94F1
 733+ 94F1 21 01 80     	ld hl,Album_de_fotos+1
 734+ 94F4 7E           	ld a,(hl)
 735+ 94F5 A7           	and a
 736+ 94F6 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 94F7
 738+ 94F7              ;	No hay datos, (entidades para pintar en este frame).
 739+ 94F7
 740+ 94F7 3A AD 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 94FA A7           	and a
 742+ 94FB C8           	ret z
 743+ 94FC
 744+ 94FC              ; -----------------------------------
 745+ 94FC
 746+ 94FC ED 73 B2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9500 31 00 80     	ld sp,Album_de_fotos
 748+ 9503
 749+ 9503 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9505 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9506 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9507
 753+ 9507 ED 73 B4 89  	ld (Stack_2),sp
 754+ 950B ED 7B B2 89  	ld sp,(Stack)
 755+ 950F
 756+ 950F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 950F
 758+ 950F 3E CD        	ld a,$cd
 759+ 9511 32 19 95     	ld (Imprime),a
 760+ 9514 EB           	ex de,hl
 761+ 9515 22 1A 95     	ld (Imprime+1),hl
 762+ 9518 EB           	ex de,hl
 763+ 9519
 764+ 9519              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9519
 766+ 9519 00 00 00     Imprime db 0,0,0
 767+ 951C
 768+ 951C ED 73 B2 89  	ld (Stack),sp
 769+ 9520
 770+ 9520 3A AD 89     	ld a,(Numero_de_malotes)
 771+ 9523 3D           	dec a
 772+ 9524 28 09        	jr z,1F
 773+ 9526 32 AD 89      	ld (Numero_de_malotes),a
 774+ 9529
 775+ 9529 ED 7B B4 89  	ld sp,(Stack_2)
 776+ 952D 18 D4        	jr 2B
 777+ 952F
 778+ 952F AF           1 xor a
 779+ 9530 32 B4 89     	ld (Stack_2),a
 780+ 9533
 781+ 9533 C9           	ret
 782+ 9534
 783+ 9534              ; -----------------------------------------------------------------------------------
 784+ 9534              ;
 785+ 9534              ;	28/2/23
 786+ 9534              ;
 787+ 9534              ;	Pinta los disparos generados.
 788+ 9534
 789+ 9534              Extrae_foto_disparos
 790+ 9534
 791+ 9534 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9537 7E               ld a,(hl)
 793+ 9538 A7               and a
 794+ 9539 C8               ret z
 795+ 953A
 796+ 953A 3A C2 89     	ld a,(Numero_de_disparotes)
 797+ 953D A7           	and a
 798+ 953E C8           	ret z
 799+ 953F ED 73 B2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9543 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9546
 802+ 9546 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9548 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9549 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 954A
 806+ 954A ED 73 B4 89  	ld (Stack_2),sp
 807+ 954E ED 7B B2 89  	ld sp,(Stack)
 808+ 9552
 809+ 9552              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9552
 811+ 9552 3E CD        	ld a,$cd
 812+ 9554 32 5C 95     	ld (Imprime2),a
 813+ 9557 EB           	ex de,hl
 814+ 9558 22 5D 95     	ld (Imprime2+1),hl
 815+ 955B EB           	ex de,hl
 816+ 955C
 817+ 955C              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 955C
 819+ 955C 00 00 00     Imprime2 db 0,0,0
 820+ 955F
 821+ 955F 3A C2 89     	ld a,(Numero_de_disparotes)
 822+ 9562 3D           	dec a
 823+ 9563 28 09        	jr z,1F
 824+ 9565 32 C2 89      	ld (Numero_de_disparotes),a
 825+ 9568
 826+ 9568 ED 7B B4 89  	ld sp,(Stack_2)
 827+ 956C 18 D8        	jr 2B
 828+ 956E
 829+ 956E AF           1 xor a
 830+ 956F 32 B4 89     	ld (Stack_2),a
 831+ 9572 C9           	ret
 832+ 9573
 833+ 9573              ; -----------------------------------------------------------------------------------
 834+ 9573              ;
 835+ 9573              ;	4/9/23
 836+ 9573              ;
 837+ 9573              ;	Rutina principal de pintado de Amadeus.
 838+ 9573              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9573
 840+ 9573 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9576 7E           	ld a,(hl)
 842+ 9577 A7           	and a
 843+ 9578 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9579
 845+ 9579 3A AD 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 957C A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 957D C8           	ret z
 848+ 957E
 849+ 957E              ; -----------------------------------
 850+ 957E
 851+ 957E ED 73 B2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9582 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 9585
 854+ 9585 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9587 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9588 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9589
 858+ 9589 ED 73 B4 89  	ld (Stack_2),sp
 859+ 958D ED 7B B2 89  	ld sp,(Stack)
 860+ 9591
 861+ 9591              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9591
 863+ 9591 3E CD        	ld a,$cd
 864+ 9593 32 9B 95     	ld (Imprime_Amadeus),a
 865+ 9596 EB           	ex de,hl
 866+ 9597 22 9C 95     	ld (Imprime_Amadeus+1),hl
 867+ 959A EB           	ex de,hl
 868+ 959B
 869+ 959B              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 959B
 871+ 959B 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 959E
 873+ 959E ED 73 B2 89  	ld (Stack),sp
 874+ 95A2
 875+ 95A2 3A AD 89     	ld a,(Numero_de_malotes)
 876+ 95A5 3D           	dec a
 877+ 95A6 28 09        	jr z,1F
 878+ 95A8 32 AD 89      	ld (Numero_de_malotes),a
 879+ 95AB
 880+ 95AB ED 7B B4 89  	ld sp,(Stack_2)
 881+ 95AF 18 D4        	jr 2B
 882+ 95B1
 883+ 95B1 AF           1 xor a
 884+ 95B2 32 B4 89     	ld (Stack_2),a
 885+ 95B5
 886+ 95B5 C9           	ret
# file closed: Draw_XOR.asm
1758  95B6              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95B6              ;   índices de Rutinas de impresión.
   2+ 95B6
   3+ 95B6 C6 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95B8 F3 95            defw Pinta_Amadeus_3x2
   5+ 95BA
   6+ 95BA 49 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95BC E9 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95BE 9D 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95C0
  10+ 95C0 73 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95C2 77 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95C4 2B 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95C6
  14+ 95C6
  15+ 95C6              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95C6              ;
  17+ 95C6              ;   12/12/22
  18+ 95C6              ;
  19+ 95C6              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95C6              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95C6              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95C6              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95C6              ;
  24+ 95C6              ;   Modifica: DE y HL.
  25+ 95C6
  26+ 95C6 ED 73 B2 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95CA FD F9        	ld sp,iy
  28+ 95CC 06 10            ld b,16
  29+ 95CE D1           1 pop de
  30+ 95CF 7B               ld a,e
  31+ 95D0 AE               xor (hl)
  32+ 95D1 77           	ld (hl),a
  33+ 95D2 23           	inc hl
  34+ 95D3 7A               ld a,d
  35+ 95D4 AE               xor (hl)
  36+ 95D5 77           	ld (hl),a
  37+ 95D6 2B           	dec hl
  38+ 95D7 24           	inc h
  39+ 95D8 7C               ld a,h
  40+ 95D9 E6 07            and 7
  41+ 95DB 20 0A            jr nz,2F
  42+ 95DD 7D               ld a,l
  43+ 95DE C6 20            add a,$20
  44+ 95E0 6F               ld l,a
  45+ 95E1 38 04            jr c,2F
  46+ 95E3 7C               ld a,h
  47+ 95E4 D6 08            sub 8
  48+ 95E6 67               ld h,a
  49+ 95E7 7C           2 ld a,h
  50+ 95E8 FE 58            cp $58
  51+ 95EA 28 02            jr z,3F
  52+ 95EC 10 E0            djnz 1B
  53+ 95EE ED 7B B2 89  3 ld sp,(Stack)
  54+ 95F2 C9           	ret
  55+ 95F3
  56+ 95F3 ED 73 B2 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95F7 FD F9        	ld sp,iy
  58+ 95F9 06 08            ld b,8
  59+ 95FB D1           1 pop de
  60+ 95FC 7B               ld a,e
  61+ 95FD AE               xor (hl)
  62+ 95FE 77           	ld (hl),a
  63+ 95FF 23           	inc hl
  64+ 9600 7A               ld a,d
  65+ 9601 AE               xor (hl)
  66+ 9602 77           	ld (hl),a
  67+ 9603 23           	inc hl
  68+ 9604 D1           	pop de
  69+ 9605 7B               ld a,e
  70+ 9606 AE               xor (hl)
  71+ 9607 77           	ld (hl),a
  72+ 9608 2B           	dec hl
  73+ 9609 2B           	dec hl
  74+ 960A 24           	inc h
  75+ 960B 7C               ld a,h
  76+ 960C E6 07            and 7
  77+ 960E 20 0A            jr nz,2F
  78+ 9610 7D               ld a,l
  79+ 9611 C6 20            add a,$20
  80+ 9613 6F               ld l,a
  81+ 9614 38 04            jr c,2F
  82+ 9616 7C               ld a,h
  83+ 9617 D6 08            sub 8
  84+ 9619 67               ld h,a
  85+ 961A 7C           2 ld a,h
  86+ 961B FE 58            cp $58
  87+ 961D 28 25            jr z,4F
  88+ 961F 7A               ld a,d
  89+ 9620 AE               xor (hl)
  90+ 9621 77               ld (hl),a
  91+ 9622 D1           	pop de
  92+ 9623 23           	inc hl
  93+ 9624 7B               ld a,e
  94+ 9625 AE               xor (hl)
  95+ 9626 77           	ld (hl),a
  96+ 9627 23           	inc hl
  97+ 9628 7A               ld a,d
  98+ 9629 AE               xor (hl)
  99+ 962A 77           	ld (hl),a
 100+ 962B 2B           	dec hl
 101+ 962C 2B           	dec hl
 102+ 962D 24           	inc h
 103+ 962E 7C               ld a,h
 104+ 962F E6 07            and 7
 105+ 9631 20 0A            jr nz,3F
 106+ 9633 7D               ld a,l
 107+ 9634 C6 20            add a,$20
 108+ 9636 6F               ld l,a
 109+ 9637 38 04            jr c,3F
 110+ 9639 7C               ld a,h
 111+ 963A D6 08            sub 8
 112+ 963C 67               ld h,a
 113+ 963D 7C           3 ld a,h
 114+ 963E FE 58            cp $58
 115+ 9640 28 02            jr z,4F
 116+ 9642 10 B7            djnz 1B
 117+ 9644 ED 7B B2 89  4 ld sp,(Stack)
 118+ 9648 C9           	ret
 119+ 9649
 120+ 9649              ; ---------------------------------------------------
 121+ 9649
 122+ 9649 ED 73 B2 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 964D FD F9        	ld sp,iy
 124+ 964F
 125+ 964F              ; >>>
 126+ 964F
 127+ 964F 06 10            ld b,16
 128+ 9651 D1           1 pop de
 129+ 9652 7A           	ld a,d
 130+ 9653 AE           	xor (hl)
 131+ 9654 77           	ld (hl),a
 132+ 9655 24           	inc h
 133+ 9656 7C               ld a,h
 134+ 9657 E6 07            and 7
 135+ 9659 20 0C            jr nz,2F
 136+ 965B 7D               ld a,l
 137+ 965C C6 20            add a,$20
 138+ 965E 6F               ld l,a
 139+ 965F 38 06            jr c,2F
 140+ 9661 7C               ld a,h
 141+ 9662 D6 08            sub 8
 142+ 9664 67               ld h,a
 143+ 9665 18 00            jr 2F
 144+ 9667 7C           2 ld a,h
 145+ 9668 FE 58            cp $58
 146+ 966A 28 02            jr z,3F
 147+ 966C 10 E3            djnz 1B
 148+ 966E ED 7B B2 89  3 ld sp,(Stack)
 149+ 9672 C9           	ret
 150+ 9673
 151+ 9673 ED 73 B2 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9677 FD F9        	ld sp,iy
 153+ 9679
 154+ 9679              ; >>>
 155+ 9679
 156+ 9679 06 10            ld b,16
 157+ 967B D1           1 pop de
 158+ 967C 7B           	ld a,e
 159+ 967D AE           	xor (hl)
 160+ 967E 77           	ld (hl),a
 161+ 967F 24           	inc h
 162+ 9680 7C               ld a,h
 163+ 9681 E6 07            and 7
 164+ 9683 20 0C            jr nz,2F
 165+ 9685 7D               ld a,l
 166+ 9686 C6 20            add a,$20
 167+ 9688 6F               ld l,a
 168+ 9689 38 06            jr c,2F
 169+ 968B 7C               ld a,h
 170+ 968C D6 08            sub 8
 171+ 968E 67               ld h,a
 172+ 968F 18 00            jr 2F
 173+ 9691 7C           2 ld a,h
 174+ 9692 FE 58            cp $58
 175+ 9694 28 02            jr z,3F
 176+ 9696 10 E3            djnz 1B
 177+ 9698 ED 7B B2 89  3 ld sp,(Stack)
 178+ 969C C9           	ret
 179+ 969D
 180+ 969D              ; ---------------------------------------------------
 181+ 969D
 182+ 969D ED 73 B2 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96A1 FD F9        	ld sp,iy
 184+ 96A3 06 08            ld b,8
 185+ 96A5 D1           1 pop de
 186+ 96A6 7A           	ld a,d
 187+ 96A7 AE           	xor (hl)
 188+ 96A8 77           	ld (hl),a
 189+ 96A9 23           	inc hl
 190+ 96AA D1           	pop de
 191+ 96AB 7B           	ld a,e
 192+ 96AC AE           	xor (hl)
 193+ 96AD 77           	ld (hl),a
 194+ 96AE 2B           	dec hl
 195+ 96AF 24            	inc h
 196+ 96B0 7C               ld a,h
 197+ 96B1 E6 07            and 7
 198+ 96B3 20 0A            jr nz,2F
 199+ 96B5 7D               ld a,l
 200+ 96B6 C6 20            add a,$20
 201+ 96B8 6F               ld l,a
 202+ 96B9 38 04            jr c,2F
 203+ 96BB 7C               ld a,h
 204+ 96BC D6 08            sub 8
 205+ 96BE 67               ld h,a
 206+ 96BF 7C           2 ld a,h
 207+ 96C0 FE 58            cp $58
 208+ 96C2 28 20            jr z,4F
 209+ 96C4 D1               pop de
 210+ 96C5 7B           	ld a,e
 211+ 96C6 AE           	xor (hl)
 212+ 96C7 77           	ld (hl),a
 213+ 96C8 23           	inc hl
 214+ 96C9 7A           	ld a,d
 215+ 96CA AE           	xor (hl)
 216+ 96CB 77           	ld (hl),a
 217+ 96CC 2B           	dec hl
 218+ 96CD 24           	inc h
 219+ 96CE 7C               ld a,h
 220+ 96CF E6 07            and 7
 221+ 96D1 20 0A            jr nz,3F
 222+ 96D3 7D               ld a,l
 223+ 96D4 C6 20            add a,$20
 224+ 96D6 6F               ld l,a
 225+ 96D7 38 04            jr c,3F
 226+ 96D9 7C               ld a,h
 227+ 96DA D6 08            sub 8
 228+ 96DC 67               ld h,a
 229+ 96DD 7C           3 ld a,h
 230+ 96DE FE 58            cp $58
 231+ 96E0 28 02            jr z,4F
 232+ 96E2 10 C1            djnz 1B
 233+ 96E4 ED 7B B2 89  4 ld sp,(Stack)
 234+ 96E8 C9           	ret
 235+ 96E9
 236+ 96E9 ED 73 B2 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96ED FD F9        	ld sp,iy
 238+ 96EF 06 08            ld b,8
 239+ 96F1 D1           1 pop de
 240+ 96F2 D1           	pop de
 241+ 96F3 7B           	ld a,e
 242+ 96F4 AE           	xor (hl)
 243+ 96F5 77           	ld (hl),a
 244+ 96F6 24            	inc h
 245+ 96F7 7C               ld a,h
 246+ 96F8 E6 07            and 7
 247+ 96FA 20 0A            jr nz,2F
 248+ 96FC 7D               ld a,l
 249+ 96FD C6 20            add a,$20
 250+ 96FF 6F               ld l,a
 251+ 9700 38 04            jr c,2F
 252+ 9702 7C               ld a,h
 253+ 9703 D6 08            sub 8
 254+ 9705 67               ld h,a
 255+ 9706 7C           2 ld a,h
 256+ 9707 FE 58            cp $58
 257+ 9709 28 1B            jr z,4F
 258+ 970B D1               pop de
 259+ 970C 7A           	ld a,d
 260+ 970D AE           	xor (hl)
 261+ 970E 77           	ld (hl),a
 262+ 970F 24           	inc h
 263+ 9710 7C               ld a,h
 264+ 9711 E6 07            and 7
 265+ 9713 20 0A            jr nz,3F
 266+ 9715 7D               ld a,l
 267+ 9716 C6 20            add a,$20
 268+ 9718 6F               ld l,a
 269+ 9719 38 04            jr c,3F
 270+ 971B 7C               ld a,h
 271+ 971C D6 08            sub 8
 272+ 971E 67               ld h,a
 273+ 971F 7C           3 ld a,h
 274+ 9720 FE 58            cp $58
 275+ 9722 28 02            jr z,4F
 276+ 9724 10 CB            djnz 1B
 277+ 9726 ED 7B B2 89  4 ld sp,(Stack)
 278+ 972A C9           	ret
 279+ 972B
 280+ 972B ED 73 B2 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 972F FD F9        	ld sp,iy
 282+ 9731 06 08            ld b,8
 283+ 9733 D1           1 pop de
 284+ 9734 7B           	ld a,e
 285+ 9735 AE           	xor (hl)
 286+ 9736 77           	ld (hl),a
 287+ 9737 23           	inc hl
 288+ 9738 7A           	ld a,d
 289+ 9739 AE           	xor (hl)
 290+ 973A 77           	ld (hl),a
 291+ 973B 2B           	dec hl
 292+ 973C 24             	inc h
 293+ 973D 7C               ld a,h
 294+ 973E E6 07            and 7
 295+ 9740 20 0A            jr nz,2F
 296+ 9742 7D               ld a,l
 297+ 9743 C6 20            add a,$20
 298+ 9745 6F               ld l,a
 299+ 9746 38 04            jr c,2F
 300+ 9748 7C               ld a,h
 301+ 9749 D6 08            sub 8
 302+ 974B 67               ld h,a
 303+ 974C 7C           2 ld a,h
 304+ 974D FE 58            cp $58
 305+ 974F 28 21            jr z,4F
 306+ 9751 D1               pop de
 307+ 9752 7A           	ld a,d
 308+ 9753 AE           	xor (hl)
 309+ 9754 77           	ld (hl),a
 310+ 9755 23           	inc hl
 311+ 9756 D1               pop de
 312+ 9757 7B           	ld a,e
 313+ 9758 AE           	xor (hl)
 314+ 9759 77           	ld (hl),a
 315+ 975A 2B           	dec hl
 316+ 975B 24           	inc h
 317+ 975C 7C               ld a,h
 318+ 975D E6 07            and 7
 319+ 975F 20 0A            jr nz,3F
 320+ 9761 7D               ld a,l
 321+ 9762 C6 20            add a,$20
 322+ 9764 6F               ld l,a
 323+ 9765 38 04            jr c,3F
 324+ 9767 7C               ld a,h
 325+ 9768 D6 08            sub 8
 326+ 976A 67               ld h,a
 327+ 976B 7C           3 ld a,h
 328+ 976C FE 58            cp $58
 329+ 976E 28 02            jr z,4F
 330+ 9770 10 C1            djnz 1B
 331+ 9772 ED 7B B2 89  4 ld sp,(Stack)
 332+ 9776 C9           	ret
 333+ 9777
 334+ 9777 ED 73 B2 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 977B FD F9        	ld sp,iy
 336+ 977D 06 08            ld b,8
 337+ 977F D1           1 pop de
 338+ 9780 7B           	ld a,e
 339+ 9781 AE           	xor (hl)
 340+ 9782 77           	ld (hl),a
 341+ 9783 24            	inc h
 342+ 9784 7C               ld a,h
 343+ 9785 E6 07            and 7
 344+ 9787 20 0A            jr nz,2F
 345+ 9789 7D               ld a,l
 346+ 978A C6 20            add a,$20
 347+ 978C 6F               ld l,a
 348+ 978D 38 04            jr c,2F
 349+ 978F 7C               ld a,h
 350+ 9790 D6 08            sub 8
 351+ 9792 67               ld h,a
 352+ 9793 7C           2 ld a,h
 353+ 9794 FE 58            cp $58
 354+ 9796 28 1C            jr z,4F
 355+ 9798 D1               pop de
 356+ 9799 7A           	ld a,d
 357+ 979A AE           	xor (hl)
 358+ 979B 77           	ld (hl),a
 359+ 979C 24           	inc h
 360+ 979D 7C               ld a,h
 361+ 979E E6 07            and 7
 362+ 97A0 20 0A            jr nz,3F
 363+ 97A2 7D               ld a,l
 364+ 97A3 C6 20            add a,$20
 365+ 97A5 6F               ld l,a
 366+ 97A6 38 04            jr c,3F
 367+ 97A8 7C               ld a,h
 368+ 97A9 D6 08            sub 8
 369+ 97AB 67               ld h,a
 370+ 97AC 7C           3 ld a,h
 371+ 97AD FE 58            cp $58
 372+ 97AF 28 03            jr z,4F
 373+ 97B1 D1               pop de
 374+ 97B2 10 CB            djnz 1B
 375+ 97B4 ED 7B B2 89  4 ld sp,(Stack)
 376+ 97B8 C9           	ret
 377+ 97B9
 378+ 97B9              ; ---------------------------------------------------
 379+ 97B9              ;
 380+ 97B9              ;   27/02/23
 381+ 97B9              ;
 382+ 97B9              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97B9              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97B9              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97B9
 386+ 97B9 ED 73 B2 89  Pinta_Disparo ld (Stack),sp
 387+ 97BD FD F9            ld sp,iy
 388+ 97BF 06 03            ld b,3
 389+ 97C1 D1           1 pop de
 390+ 97C2 7B               ld a,e
 391+ 97C3 AE               xor (hl)
 392+ 97C4 77               ld (hl),a
 393+ 97C5 23               inc hl
 394+ 97C6 7A               ld a,d
 395+ 97C7 AE               xor (hl)
 396+ 97C8 77               ld (hl),a
 397+ 97C9 2B               dec hl
 398+ 97CA
 399+ 97CA 24               inc h
 400+ 97CB 7C               ld a,h
 401+ 97CC E6 07            and 7
 402+ 97CE 20 0A            jr nz,2F
 403+ 97D0 7D               ld a,l
 404+ 97D1 C6 20            add a,$20
 405+ 97D3 6F               ld l,a
 406+ 97D4 38 04            jr c,2F
 407+ 97D6 7C               ld a,h
 408+ 97D7 D6 08            sub 8
 409+ 97D9 67               ld h,a
 410+ 97DA 7C           2 ld a,h
 411+ 97DB FE 58            cp $58
 412+ 97DD 28 02            jr z,3F
 413+ 97DF
 414+ 97DF 10 E0            djnz 1B
 415+ 97E1 ED 7B B2 89  3 ld sp,(Stack)
 416+ 97E5 C9               ret
 417+ 97E6
# file closed: Rutinas_de_impresion_sprites.asm
1759  97E6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97E6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97E6              ;
   3+ 97E6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97E6              ;
   5+ 97E6              ; *****************************************************************************************************************************************************************************************
   6+ 97E6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97E6
   8+ 97E6 7C           calcula_tercio ld a,h
   9+ 97E7 E6 18        	and $18
  10+ 97E9 CB 2F        	sra a
  11+ 97EB CB 2F        	sra a
  12+ 97ED CB 2F        	sra a
  13+ 97EF C9           	ret
  14+ 97F0
# file closed: calcula_tercio.asm
1760  97F0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97F0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97F0              ;
   3+ 97F0              ;
   4+ 97F0              ;	CLS.
   5+ 97F0              ;
   6+ 97F0              ;	Limpia la pantalla y define sus atributos.
   7+ 97F0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97F0              ;
   9+ 97F0              ;	COLORES: 0 ..... NEGRO
  10+ 97F0              ;    		 1 ..... AZUL
  11+ 97F0              ; 			 2 ..... ROJO
  12+ 97F0              ;			 3 ..... MAGENTA
  13+ 97F0              ; 			 4 ..... VERDE
  14+ 97F0              ; 			 5 ..... CIAN
  15+ 97F0              ;			 6 ..... AMARILLO
  16+ 97F0              ; 			 7 ..... BLANCO
  17+ 97F0              ;
  18+ 97F0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97F0              ;
  20+ 97F0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97F0
  22+ 97F0
  23+ 97F0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97F3 11 01 40     	LD DE,$4001
  25+ 97F6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97F9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97FB ED B0        	LDIR
  28+ 97FD 01 FF 02     	LD BC,767
  29+ 9800 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9801 ED B0        	LDIR
  31+ 9803 C9           	ret
  32+ 9804
# file closed: Cls.asm
1761  9804              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9804
   2+ 9804              ; ******************************************************************************************************************************************************************************************
   3+ 9804              ;
   4+ 9804              ;   20/05/23
   5+ 9804              ;
   6+ 9804              ;	Recompone_posicion_inicio
   7+ 9804              ;
   8+ 9804              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9804              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9804              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9804              ;	_ a una u otra rutina.
  12+ 9804
  13+ 9804              Recompone_posicion_inicio
  14+ 9804
  15+ 9804 2A 72 89     	ld hl,(Posicion_inicio)
  16+ 9807 7D           	ld a,l
  17+ 9808 E6 1F        	and $1f
  18+ 980A 28 16        	jr z,1F
  19+ 980C
  20+ 980C FE 1F        	cp $1f
  21+ 980E 28 0D        	jr z,3F
  22+ 9810
  23+ 9810 21 87 89     	ld hl,Ctrl_2
  24+ 9813 CB C6        	set 0,(hl)
  25+ 9815 2A 64 89     	ld hl,(Puntero_objeto)
  26+ 9818 22 A2 89     	ld (Repone_puntero_objeto),hl
  27+ 981B 18 08        	jr 2F
  28+ 981D
  29+ 981D CD CB 99     3 call Mov_left
  30+ 9820 18 03        	jr 2F
  31+ 9822
  32+ 9822 CD A8 98     1 call Mov_right
  33+ 9825 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9828 22 64 89     	ld (Puntero_objeto),hl
  35+ 982B C9           	ret
  36+ 982C
  37+ 982C              ; ******************************************************************************************************************************************************************************************
  38+ 982C              ;
  39+ 982C              ;   27/05/23
  40+ 982C              ;
  41+ 982C              ;	Mov_down
  42+ 982C              ;
  43+ 982C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 982C              ;
  45+ 982C              ;
  46+ 982C              Mov_down
  47+ 982C
  48+ 982C CD 96 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 982F              ;																	; _ repone (Puntero_objeto).
  50+ 982F 21 82 89     	ld hl,Ctrl_0
  51+ 9832 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9834              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9834              ; 																	; _ en el caso de que no lo haya.
  54+ 9834 3A 8C 89     	ld a,(Vel_down)
  55+ 9837 47           	ld b,a
  56+ 9838 2A 62 89         ld hl,(Posicion_actual)
  57+ 983B CD E6 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 983E E6 02        	and 2
  59+ 9840 28 17        	jr z,1F
  60+ 9842
  61+ 9842              ; Nos encontramos en el último tercio de pantalla.
  62+ 9842              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9842
  64+ 9842 7C           	ld a,h
  65+ 9843 FE 57        	cp $57
  66+ 9845 20 12        	jr nz,1F
  67+ 9847
  68+ 9847 7D           	ld a,l
  69+ 9848 C6 20        	add $20
  70+ 984A 30 0D        	jr nc,1F
  71+ 984C
  72+ 984C              ; ------------------------------
  73+ 984C              ;
  74+ 984C              ;	12/01/24
  75+ 984C
  76+ 984C              ;	call Reaparece_arriba
  77+ 984C CD 58 9B     	call Reinicio
  78+ 984F
  79+ 984F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 984F
  81+ 984F 3A C0 89     	ld a,(Ctrl_3)
  82+ 9852 CB CF        	set 1,a
  83+ 9854 32 C0 89     	ld (Ctrl_3),a
  84+ 9857
  85+ 9857 18 08        	jr 3F
  86+ 9859              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9859              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9859              ; ------------------------------
  89+ 9859
  90+ 9859 CD D3 94     1 call NextScan
  91+ 985C 22 62 89     	ld (Posicion_actual),hl
  92+ 985F 10 DA            djnz 2B
  93+ 9861 CD 7E 9B     3 call Genera_coordenadas
  94+ 9864 C9           	ret
  95+ 9865
  96+ 9865              ; ******************************************************************************************************************************************************************************************
  97+ 9865              ;
  98+ 9865              ;   27/05/23
  99+ 9865              ;
 100+ 9865              ;	Mov_up
 101+ 9865              ;
 102+ 9865              ; 	Mueve el Sprite hacia arriba.
 103+ 9865              ;
 104+ 9865              ;
 105+ 9865              Mov_up
 106+ 9865
 107+ 9865 CD 96 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9868              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9868 21 82 89     	ld hl,Ctrl_0
 110+ 986B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 986D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 986D              ; 																		; _ en el caso de que no lo haya.
 113+ 986D 3A 8B 89     	ld a,(Vel_up)
 114+ 9870 47           	ld b,a
 115+ 9871 2A 62 89     	ld hl,(Posicion_actual)
 116+ 9874 CD E6 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9877 A7           	and a
 118+ 9878 20 10        	jr nz,1F
 119+ 987A
 120+ 987A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 987A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 987A
 123+ 987A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 987B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 987D 20 0B            jr nz,1F
 126+ 987F 7D               ld a,l
 127+ 9880 D6 20            sub $20
 128+ 9882 30 06            jr nc,1F
 129+ 9884 25               dec h
 130+ 9885
 131+ 9885              ; -----------------------------
 132+ 9885 CD 39 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9888              ;	call Reinicio
 134+ 9888              ; -----------------------------
 135+ 9888
 136+ 9888 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 988A CD E2 94     1 call PreviousScan
 138+ 988D 22 62 89     	ld (Posicion_actual),hl
 139+ 9890 10 E2            djnz 3B
 140+ 9892 CD 7E 9B     2 call Genera_coordenadas
 141+ 9895 C9           	ret
 142+ 9896
 143+ 9896              ; -----------------------------
 144+ 9896              ;
 145+ 9896              ;	27/5/23
 146+ 9896              ;
 147+ 9896              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9896              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9896              ;
 150+ 9896              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9896              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9896              ;
 153+ 9896              ;	Modifica: A y (Puntero_objeto).
 154+ 9896
 155+ 9896 3A 87 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9899 CB 47        	bit 0,a
 157+ 989B C8           	ret z
 158+ 989C CB 87        	res 0,a
 159+ 989E 32 87 89     	ld (Ctrl_2),a
 160+ 98A1 2A A2 89     	ld hl,(Repone_puntero_objeto)
 161+ 98A4 22 64 89     	ld (Puntero_objeto),hl
 162+ 98A7 C9           	ret
 163+ 98A8
 164+ 98A8              ; ******************************************************************************************************************************************************************************************
 165+ 98A8              ;
 166+ 98A8              ;	19/10/22
 167+ 98A8              ;
 168+ 98A8              ;	Mov_right.
 169+ 98A8              ;
 170+ 98A8              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 98A8              ;
 172+ 98A8
 173+ 98A8 3A 82 89     Mov_right ld a,(Ctrl_0)
 174+ 98AB CB 77        	bit 6,a
 175+ 98AD 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 98AF
 177+ 98AF CD E7 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 98B2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 98B3
 180+ 98B3 21 82 89     	ld hl,Ctrl_0
 181+ 98B6 CB E6        	set 4,(hl)
 182+ 98B8 18 52        	jr 8F
 183+ 98BA
 184+ 98BA 21 82 89     10 ld hl,Ctrl_0
 185+ 98BD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 98BF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 98BF              ; 																	; _ en el caso de que no lo haya.
 188+ 98BF 3A 66 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 98C2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 98C4 20 46        	jr nz,8F
 191+ 98C6
 192+ 98C6 3A 68 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 98C9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 98CA 28 40        	jr z,8F
 195+ 98CC
 196+ 98CC              ; ---------- ---------- ----------
 197+ 98CC              ;
 198+ 98CC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98CC
 200+ 98CC 3A 8A 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 98CF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98D1 28 11        	jr z,1F
 203+ 98D3 38 06        	jr c,6F
 204+ 98D5 FE 04        	cp 4
 205+ 98D7 28 14        	jr z,7F
 206+ 98D9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 98DB
 208+ 98DB              ; ---------- ---------- ----------
 209+ 98DB              ;
 210+ 98DB              ; Perfiles de velocidad
 211+ 98DB              ;
 212+ 98DB
 213+ 98DB 3A 68 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 98DE FE FE        	cp $fe
 215+ 98E0 20 2A        	jr nz,8F
 216+ 98E2 18 10        	jr 3F
 217+ 98E4 3A 68 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 98E7 FE FD        	cp $fd
 219+ 98E9 20 21        	jr nz,8F
 220+ 98EB 18 07        	jr 3F
 221+ 98ED 3A 68 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 98F0 FE FB        	cp $fb
 223+ 98F2 20 18        	jr nz,8F
 224+ 98F4
 225+ 98F4              ; ---------- ---------- ----------
 226+ 98F4
 227+ 98F4              3
 228+ 98F4 CD 27 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 98F7              ;	call Reinicio
 230+ 98F7
 231+ 98F7              ; ---------- ---------- ----------
 232+ 98F7              ;
 233+ 98F7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 98F7
 235+ 98F7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 98F9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 98FA CD 13 99     	call DESPLZ_DER
 238+ 98FD C1           	pop bc
 239+ 98FE 10 F9        	djnz 5B
 240+ 9900 2A 62 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9903 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9904 22 62 89     	ld (Posicion_actual),hl
 243+ 9907 CD 7E 9B     	call Genera_coordenadas
 244+ 990A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 990C
 246+ 990C              ; ---------- ---------- ----------
 247+ 990C
 248+ 990C 2A 62 89     8 ld hl,(Posicion_actual)
 249+ 990F CD 13 99     	call DESPLZ_DER
 250+ 9912 C9           2 ret
 251+ 9913
 252+ 9913              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9913              ;
 254+ 9913              ;	22/9/22
 255+ 9913              ;
 256+ 9913
 257+ 9913 CD 22 99     DESPLZ_DER call Desplaza_derecha
 258+ 9916 CD 6E 99         call modifica_parametros_1er_DESPLZ_2
 259+ 9919 CD 97 99         call Ciclo_completo
 260+ 991C 21 82 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 991F CB FE        	set 7,(hl)
 262+ 9921 C9           	ret
 263+ 9922
 264+ 9922              ; ******************************************************************************************************************************************************************************************
 265+ 9922              ;	15/02/23
 266+ 9922              ;
 267+ 9922
 268+ 9922 3A 8A 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9925 47           	ld b,a
 270+ 9926 2A 6E 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9929 23           1 inc hl
 272+ 992A 23           	inc hl
 273+ 992B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 992D 22 6E 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9930 CD B0 8B     	call Extrae_address
 276+ 9933 22 64 89     	ld (Puntero_objeto),hl
 277+ 9936
 278+ 9936              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9936
 280+ 9936              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9936              ; Cuántos movimientos hemos hecho ??
 282+ 9936              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9936
 284+ 9936 2A 6A 89     7 ld hl,(Indice_Sprite_der)
 285+ 9939 EB           	ex de,hl
 286+ 993A A7           	and a
 287+ 993B ED 52        	sbc hl,de
 288+ 993D CB 3D        	srl l
 289+ 993F 3E 08        6 ld a,8
 290+ 9941 95           	sub l
 291+ 9942 30 1E        	jr nc,3F
 292+ 9944
 293+ 9944              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9944              ; B="0".
 295+ 9944
 296+ 9944 04           4 inc b
 297+ 9945 3C           	inc a
 298+ 9946 20 FC        	jr nz,4B
 299+ 9948 78           	ld a,b
 300+ 9949 08           	ex af,af
 301+ 994A 2A 6A 89     	ld hl,(Indice_Sprite_der)
 302+ 994D 23           5 inc hl
 303+ 994E 23           	inc hl
 304+ 994F 10 FC        	djnz 5B
 305+ 9951 22 6E 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9954 CD B0 8B     	call Extrae_address
 307+ 9957 22 64 89     	ld (Puntero_objeto),hl
 308+ 995A
 309+ 995A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 995A              ; _(Posicion_actual).
 311+ 995A
 312+ 995A 21 62 89     	ld hl,Posicion_actual
 313+ 995D 34           	inc (hl)
 314+ 995E 08               ex af,af
 315+ 995F 6F           	ld l,a
 316+ 9960 18 DD        	jr 6B
 317+ 9962
 318+ 9962              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9962
 320+ 9962 47           3 ld b,a
 321+ 9963 2A 6C 89     	ld hl,(Indice_Sprite_izq)
 322+ 9966 23           2 inc hl
 323+ 9967 23           	inc hl
 324+ 9968 10 FC        	djnz 2B
 325+ 996A 22 70 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 996D C9           8 ret
 327+ 996E
 328+ 996E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 996E              ;
 330+ 996E              ;	24/7/22
 331+ 996E              ;
 332+ 996E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 996E              ;
 334+ 996E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 996E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 996E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 996E
 338+ 996E 3A 68 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9971 A7           	and a
 340+ 9972 20 1F        	jr nz,1F
 341+ 9974 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9976 32 68 89         ld (CTRL_DESPLZ),a
 343+ 9979
 344+ 9979 21 61 89     	ld hl,Columns
 345+ 997C 34           	inc (hl)
 346+ 997D 3A 74 89     	ld a,(Cuad_objeto)
 347+ 9980 E6 01        	and 1
 348+ 9982 28 0F        	jr z,1F
 349+ 9984 2A 62 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9987 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9988 22 62 89     	ld (Posicion_actual),hl
 352+ 998B CD 7E 9B     	call Genera_coordenadas
 353+ 998E CD F3 9A     	call Inc_CTRL_DESPLZ
 354+ 9991 18 03        	jr 2F
 355+ 9993 CD F3 9A     1 call Inc_CTRL_DESPLZ
 356+ 9996 C9           2 ret
 357+ 9997
 358+ 9997              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9997              ;
 360+ 9997              ;	24/7/22
 361+ 9997              ;
 362+ 9997              ;	Ciclo_completo.
 363+ 9997              ;
 364+ 9997              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9997              ;
 366+ 9997              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9997              ; 	Decrementamos (Columns).
 368+ 9997              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9997              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9997
 371+ 9997
 372+ 9997 3A 68 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 999A FE FF        	cp $ff
 374+ 999C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 999E E6 F0        	and $f0
 376+ 99A0 20 28        	jr nz,3F
 377+ 99A2
 378+ 99A2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 99A2
 380+ 99A2 3A 68 89     	ld a,(CTRL_DESPLZ)
 381+ 99A5 47           	ld b,a
 382+ 99A6 3E F8        	ld a,$f8
 383+ 99A8 80           	add b
 384+ 99A9 32 68 89     	ld (CTRL_DESPLZ),a
 385+ 99AC 18 1C        	jr 3F
 386+ 99AE 21 61 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 99B1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 99B2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 99B3 32 68 89     	ld (CTRL_DESPLZ),a
 390+ 99B6 3A 74 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 99B9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 99BB 20 0A        	jr nz,2F
 393+ 99BD 2A 62 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 99C0 23           	inc hl
 395+ 99C1 22 62 89     	ld (Posicion_actual),hl
 396+ 99C4 CD 7E 9B     	call Genera_coordenadas
 397+ 99C7
 398+ 99C7              ; Inicia el puntero de Sprite.
 399+ 99C7
 400+ 99C7 CD C5 8B     2 call Inicia_puntero_objeto_der
 401+ 99CA C9           3 ret
 402+ 99CB
 403+ 99CB              ; ******************************************************************************************************************************************************************************************
 404+ 99CB              ;
 405+ 99CB              ;	15/02/23
 406+ 99CB              ;
 407+ 99CB              ;	Mov_left.
 408+ 99CB              ;
 409+ 99CB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 99CB              ;
 411+ 99CB              Mov_left
 412+ 99CB
 413+ 99CB 21 82 89     	ld hl,Ctrl_0
 414+ 99CE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99D0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99D0              ; 																	; _ en el caso de que no lo haya.
 417+ 99D0 3A 82 89     	ld a,(Ctrl_0)
 418+ 99D3 CB 77        	bit 6,a
 419+ 99D5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 99D7
 421+ 99D7 CD ED 9A     	call Stop_Amadeus_left
 422+ 99DA C8           	ret z
 423+ 99DB 20 4A        	jr nz,8F
 424+ 99DD
 425+ 99DD 3A 66 89     11 ld a,(Coordenada_X)
 426+ 99E0 A7           	and a
 427+ 99E1 20 44        	jr nz,8F
 428+ 99E3
 429+ 99E3 3A 68 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 99E6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 99E7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 99E9
 433+ 99E9              ; ---------- ---------- ----------
 434+ 99E9
 435+ 99E9 3A 89 89     	ld a,(Vel_left)
 436+ 99EC FE 02        	cp 2
 437+ 99EE 28 0F        	jr z,1F
 438+ 99F0 38 04        	jr c,6F
 439+ 99F2 FE 04        	cp 4
 440+ 99F4 28 12        	jr z,7F
 441+ 99F6
 442+ 99F6              ; ---------- ---------- ----------
 443+ 99F6
 444+ 99F6 3A 68 89     6 ld a,(CTRL_DESPLZ)
 445+ 99F9 FE F8        	cp $f8
 446+ 99FB 20 2A        	jr nz,8F
 447+ 99FD 18 10        	jr 4F
 448+ 99FF 3A 68 89     1 ld a,(CTRL_DESPLZ)
 449+ 9A02 FE F9        	cp $f9
 450+ 9A04 20 21        	jr nz,8F
 451+ 9A06 18 07        	jr 4F
 452+ 9A08 3A 68 89     7 ld a,(CTRL_DESPLZ)
 453+ 9A0B FE FB        	cp $fb
 454+ 9A0D 20 18        	jr nz,8F
 455+ 9A0F
 456+ 9A0F              ; ---------- ---------- ----------
 457+ 9A0F
 458+ 9A0F              4
 459+ 9A0F CD 15 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9A12              ;	call Reinicio
 461+ 9A12
 462+ 9A12              ; ---------- ---------- ----------
 463+ 9A12
 464+ 9A12 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9A14 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9A15
 467+ 9A15              ;	ld hl,(Indice_Sprite_izq)
 468+ 9A15              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9A15
 470+ 9A15 CD 2E 9A     	call DESPLZ_IZQ
 471+ 9A18 C1           	pop bc
 472+ 9A19 10 F9        	djnz 5B
 473+ 9A1B 2A 62 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9A1E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9A1F 22 62 89     	ld (Posicion_actual),hl
 476+ 9A22 CD 7E 9B     	call Genera_coordenadas
 477+ 9A25 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9A27
 479+ 9A27              ; ---------- ---------- ----------
 480+ 9A27
 481+ 9A27              ; Movemos, no hay recolocación.
 482+ 9A27
 483+ 9A27 2A 62 89     8 ld hl,(Posicion_actual)
 484+ 9A2A CD 2E 9A     	call DESPLZ_IZQ
 485+ 9A2D C9           2 ret
 486+ 9A2E
 487+ 9A2E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A2E              ;
 489+ 9A2E              ;	22/9/22
 490+ 9A2E
 491+ 9A2E              DESPLZ_IZQ
 492+ 9A2E
 493+ 9A2E CD 3D 9A     	call Desplaza_izquierda
 494+ 9A31 CD 89 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A34 CD B1 9A     	call Ciclo_completo_2
 496+ 9A37 21 82 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A3A CB BE        	res 7,(hl)
 498+ 9A3C C9           	ret
 499+ 9A3D
 500+ 9A3D              Desplaza_izquierda
 501+ 9A3D
 502+ 9A3D 3A 89 89     	ld a,(Vel_left)
 503+ 9A40 47           	ld b,a
 504+ 9A41 2A 70 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A44 23           1 inc hl
 506+ 9A45 23           	inc hl
 507+ 9A46 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A48 22 70 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A4B CD B0 8B     	call Extrae_address
 510+ 9A4E 22 64 89     	ld (Puntero_objeto),hl
 511+ 9A51
 512+ 9A51              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A51
 514+ 9A51              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A51              ; Cuántos movimientos hemos hecho ??
 516+ 9A51              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A51
 518+ 9A51 2A 6C 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9A54 EB           	ex de,hl
 520+ 9A55 A7           	and a
 521+ 9A56 ED 52        	sbc hl,de
 522+ 9A58 CB 3D        	srl l
 523+ 9A5A 3E 08        6 ld a,8
 524+ 9A5C 95           	sub l
 525+ 9A5D 30 1E        	jr nc,3F
 526+ 9A5F
 527+ 9A5F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A5F              ; B="0".
 529+ 9A5F
 530+ 9A5F 04           4 inc b
 531+ 9A60 3C           	inc a
 532+ 9A61 20 FC        	jr nz,4B
 533+ 9A63 78           	ld a,b
 534+ 9A64 08           	ex af,af
 535+ 9A65 2A 6C 89     	ld hl,(Indice_Sprite_izq)
 536+ 9A68 23           5 inc hl
 537+ 9A69 23           	inc hl
 538+ 9A6A 10 FC        	djnz 5B
 539+ 9A6C 22 70 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A6F CD B0 8B     	call Extrae_address
 541+ 9A72 22 64 89     	ld (Puntero_objeto),hl
 542+ 9A75
 543+ 9A75              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A75              ; _(Posicion_actual).
 545+ 9A75
 546+ 9A75 21 62 89     	ld hl,Posicion_actual
 547+ 9A78 35           	dec (hl)
 548+ 9A79 08           	ex af,af
 549+ 9A7A 6F           	ld l,a
 550+ 9A7B 18 DD        	jr 6B
 551+ 9A7D
 552+ 9A7D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A7D
 554+ 9A7D 47           3 ld b,a
 555+ 9A7E 2A 6A 89     	ld hl,(Indice_Sprite_der)
 556+ 9A81 23           2 inc hl
 557+ 9A82 23           	inc hl
 558+ 9A83 10 FC        	djnz 2B
 559+ 9A85 22 6E 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9A88 C9           8 ret
 561+ 9A89
 562+ 9A89              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A89              ;
 564+ 9A89              ;	modifica_parametros_1er_DESPLZ
 565+ 9A89              ;
 566+ 9A89              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A89              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A89              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A89
 570+ 9A89 3A 68 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A8C A7           	and a
 572+ 9A8D 20 1E        	jr nz,1F
 573+ 9A8F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9A90 32 68 89         ld (CTRL_DESPLZ),a
 575+ 9A93 21 61 89     	ld hl,Columns
 576+ 9A96 34           	inc (hl)
 577+ 9A97 3A 74 89     	ld a,(Cuad_objeto)
 578+ 9A9A E6 01        	and 1
 579+ 9A9C 20 0F        	jr nz,1F
 580+ 9A9E 2A 62 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9AA1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9AA2 22 62 89     	ld (Posicion_actual),hl
 583+ 9AA5 CD 7E 9B     	call Genera_coordenadas
 584+ 9AA8 CD 04 9B     	call Dec_CTRL_DESPLZ
 585+ 9AAB 18 03        	jr 2F
 586+ 9AAD CD 04 9B     1 call Dec_CTRL_DESPLZ
 587+ 9AB0 C9           2 ret
 588+ 9AB1
 589+ 9AB1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9AB1
 591+ 9AB1 3A 68 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9AB4 FE F7        	cp $f7
 593+ 9AB6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9AB8 30 2C        	jr nc,3F
 595+ 9ABA
 596+ 9ABA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9ABA
 598+ 9ABA 06 00        	ld b,0
 599+ 9ABC 04           4 inc b
 600+ 9ABD 3C           	inc a
 601+ 9ABE FE F7        	cp $f7
 602+ 9AC0 20 FA        	jr nz,4B
 603+ 9AC2 3E FF        	ld a,$ff
 604+ 9AC4 90           	sub b
 605+ 9AC5 32 68 89     	ld (CTRL_DESPLZ),a
 606+ 9AC8 18 1C        	jr 3F
 607+ 9ACA
 608+ 9ACA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9ACA
 610+ 9ACA 21 61 89     1 ld hl,Columns
 611+ 9ACD 35           	dec (hl)
 612+ 9ACE AF           	xor a
 613+ 9ACF 32 68 89     	ld (CTRL_DESPLZ),a
 614+ 9AD2 3A 74 89     	ld a,(Cuad_objeto)
 615+ 9AD5 E6 01        	and 1
 616+ 9AD7 28 0A        	jr z,2F
 617+ 9AD9 2A 62 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9ADC 2B           	dec hl
 619+ 9ADD 22 62 89     	ld (Posicion_actual),hl
 620+ 9AE0 CD 7E 9B     	call Genera_coordenadas
 621+ 9AE3
 622+ 9AE3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9AE3
 624+ 9AE3 CD D8 8B     2 call Inicia_puntero_objeto_izq
 625+ 9AE6 C9           3 ret
 626+ 9AE7
 627+ 9AE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9AE7              ;
 629+ 9AE7              ;	19/10/22
 630+ 9AE7              ;
 631+ 9AE7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9AE7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9AE7
 634+ 9AE7 3A 66 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9AEA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9AEC C9           	ret
 637+ 9AED
 638+ 9AED              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9AED              ;
 640+ 9AED              ;	19/10/22
 641+ 9AED              ;
 642+ 9AED              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9AED              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9AED
 645+ 9AED 3A 66 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9AF0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9AF2 C9           	ret
 648+ 9AF3
 649+ 9AF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9AF3              ;
 651+ 9AF3              ;	24/7/22
 652+ 9AF3              ;
 653+ 9AF3              ;	Inc_CTRL_DESPLZ
 654+ 9AF3              ;
 655+ 9AF3              ;
 656+ 9AF3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9AF3
 658+ 9AF3 21 68 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9AF6 3A 8A 89     	ld a,(Vel_right)
 660+ 9AF9 A7           	and a
 661+ 9AFA 28 06        	jr z,1F
 662+ 9AFC 47           	ld b,a
 663+ 9AFD 34           3 inc (hl)
 664+ 9AFE 10 FD        	djnz 3B
 665+ 9B00 18 01        	jr 2F
 666+ 9B02 34           1 inc (hl)
 667+ 9B03 C9           2 ret
 668+ 9B04
 669+ 9B04              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9B04              ;
 671+ 9B04              ;	5/2/23
 672+ 9B04              ;
 673+ 9B04              ;	Dec_CTRL_DESPLZ
 674+ 9B04              ;
 675+ 9B04              ;
 676+ 9B04              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9B04
 678+ 9B04 21 68 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9B07 3A 89 89     	ld a,(Vel_left)
 680+ 9B0A A7           	and a
 681+ 9B0B 28 06        	jr z,1F
 682+ 9B0D 47           	ld b,a
 683+ 9B0E 35           3 dec (hl)
 684+ 9B0F 10 FD        	djnz 3B
 685+ 9B11 18 01        	jr 2F
 686+ 9B13 35           1 dec (hl)
 687+ 9B14 C9           2 ret
 688+ 9B15
 689+ 9B15              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9B15
 691+ 9B15 2A 62 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9B18 01 1F 00     	ld bc,31
 693+ 9B1B A7           	and a
 694+ 9B1C ED 4A        	adc hl,bc
 695+ 9B1E 22 62 89     	ld (Posicion_actual),hl
 696+ 9B21 21 82 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9B24 CB C6        	set 0,(hl)
 698+ 9B26 C9           	ret
 699+ 9B27
 700+ 9B27              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9B27
 702+ 9B27 2A 62 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9B2A 01 1F 00     	ld bc,31
 704+ 9B2D A7           	and a
 705+ 9B2E ED 42        	sbc hl,bc
 706+ 9B30 22 62 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B33 21 82 89     	ld hl,Ctrl_0
 708+ 9B36 CB CE        	set 1,(hl)
 709+ 9B38 C9           	ret
 710+ 9B39
 711+ 9B39              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B39
 713+ 9B39 24           Reaparece_abajo inc h
 714+ 9B3A 01 E0 17     	ld bc,$17e0
 715+ 9B3D A7           	and a
 716+ 9B3E ED 4A        	adc hl,bc
 717+ 9B40 22 62 89     	ld (Posicion_actual),hl
 718+ 9B43 21 82 89     	ld hl,Ctrl_0
 719+ 9B46 CB D6        	set 2,(hl)
 720+ 9B48 C9           	ret
 721+ 9B49
 722+ 9B49              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B49
 724+ 9B49 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B4C A7           	and a
 726+ 9B4D ED 42        	sbc hl,bc
 727+ 9B4F 22 62 89     	ld (Posicion_actual),hl
 728+ 9B52 21 82 89     	ld hl,Ctrl_0
 729+ 9B55 CB DE        	set 3,(hl)
 730+ 9B57 C9           	ret
 731+ 9B58
 732+ 9B58              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B58              ;
 734+ 9B58              ;	15/07/23
 735+ 9B58
 736+ 9B58              Reinicio
 737+ 9B58
 738+ 9B58              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B58
 740+ 9B58 AF           	xor a
 741+ 9B59 21 99 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9B5C CD 7A 9B     	call Limpia_contenido_hl
 743+ 9B5F
 744+ 9B5F 21 62 89     	ld hl,Posicion_actual
 745+ 9B62 CD 7A 9B     	call Limpia_contenido_hl
 746+ 9B65
 747+ 9B65 CD CD 87     	call Inicializa_Puntero_indice_mov
 748+ 9B68 CD 3B 9E     	call Inicia_Puntero_mov
 749+ 9B6B
 750+ 9B6B 21 9B 89     	ld hl,Incrementa_puntero
 751+ 9B6E 06 05        	ld b,5
 752+ 9B70 77           1 ld (hl),a
 753+ 9B71 23           	inc hl
 754+ 9B72 10 FC        	djnz 1B
 755+ 9B74
 756+ 9B74 21 87 89     	ld hl,Ctrl_2
 757+ 9B77 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B79
 759+ 9B79 C9           	ret
 760+ 9B7A
 761+ 9B7A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B7B 23           	inc hl
 763+ 9B7C 77           	ld (hl),a
 764+ 9B7D C9           	ret
 765+ 9B7E
 766+ 9B7E
# file closed: Direcciones.asm
1762  9B7E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B7E              ; ------------------------------------------------------------------------
   2+ 9B7E              ;
   3+ 9B7E              ;	30/1/24
   4+ 9B7E              ;
   5+ 9B7E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B7E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B7E              ;
   8+ 9B7E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B7E              ;
  10+ 9B7E              ;	Modifica: A,BC y DE.
  11+ 9B7E
  12+ 9B7E 7D           Genera_coordenadas ld a,l
  13+ 9B7F E6 1F        	and $1f
  14+ 9B81 32 66 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B84
  16+ 9B84 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9B85 FE 40        	cp $40
  18+ 9B87 38 1C        	jr c,4F
  19+ 9B89
  20+ 9B89 CD E6 97     	call calcula_tercio
  21+ 9B8C 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9B8D
  23+ 9B8D 1E 00        	ld e,0
  24+ 9B8F 7D           	ld a,l
  25+ 9B90 E6 E0        	and $e0
  26+ 9B92 28 01        	jr z,1F
  27+ 9B94 04           	inc b
  28+ 9B95
  29+ 9B95 04           1 inc b
  30+ 9B96 05           	dec b
  31+ 9B97 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9B99              ;														; _ , salimos.
  33+ 9B99 1C           3 inc e
  34+ 9B9A D6 20        	sub 32
  35+ 9B9C 20 FB        	jr nz,3B
  36+ 9B9E 10 F5        	djnz 1B
  37+ 9BA0
  38+ 9BA0 7B           2 ld a,e
  39+ 9BA1 32 67 89     	ld (Coordenada_y),a
  40+ 9BA4 C9           	ret
  41+ 9BA5
  42+ 9BA5 AF           4 xor a
  43+ 9BA6 32 67 89     	ld (Coordenada_y),a
  44+ 9BA9 C9           	ret
  45+ 9BAA
  46+ 9BAA              ; ------------------------------------------------------------------------
  47+ 9BAA              ;	28/05/23
  48+ 9BAA              ;
  49+ 9BAA              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9BAA              ;	Fila superior "0", Columna izquierda "0".
  51+ 9BAA              ;
  52+ 9BAA              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9BAA              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9BAA              ;
  55+ 9BAA              ;		DE="$120d"
  56+ 9BAA              ;
  57+ 9BAA              ;		D, (Coordenada_X), Columnas, $12
  58+ 9BAA              ;		E, (Coordenada_y), Filas, $0d
  59+ 9BAA              ;
  60+ 9BAA              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9BAA
  62+ 9BAA              ;	Modifica: A,BC y DE.
  63+ 9BAA
  64+ 9BAA
  65+ 9BAA              Genera_coordenadas_disparo
  66+ 9BAA
  67+ 9BAA              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9BAA
  69+ 9BAA 7D           	ld a,l
  70+ 9BAB E6 1F        	and $1f
  71+ 9BAD 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9BAE CD E6 97     	call calcula_tercio
  73+ 9BB1 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9BB2 1E 00        	ld e,0
  75+ 9BB4 7D           	ld a,l
  76+ 9BB5 E6 E0        	and $e0
  77+ 9BB7 28 01        	jr z,1F
  78+ 9BB9 04           	inc b
  79+ 9BBA 1C           1 inc e
  80+ 9BBB D6 20        	sub 32
  81+ 9BBD 20 FB        	jr nz,1B
  82+ 9BBF 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9BC1 C9           	ret
  84+ 9BC2
# file closed: Genera_coordenadas.asm
1763  9BC2              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BC2              ; Relojes y temporizaciones.
   2+ 9BC2
   3+ 9BC2              ; ------------------------------------------------------
   4+ 9BC2              ;
   5+ 9BC2              ;	16/7/23
   6+ 9BC2              ;
   7+ 9BC2              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BC2              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BC2              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BC2              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BC2              ;
  12+ 9BC2              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BC2              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BC2
  15+ 9BC2              ; Disparo_entidad db 1
  16+ 9BC2              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BC2              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BC2
  19+ 9BC2              Habilita_disparos
  20+ 9BC2
  21+ 9BC2 7E           	ld a,(hl)
  22+ 9BC3 A7           	and a
  23+ 9BC4 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BC5
  25+ 9BC5 EB           	ex de,hl
  26+ 9BC6
  27+ 9BC6 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BC7 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BC8
  30+ 9BC8              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BC8
  32+ 9BC8 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BC9 7E           	ld a,(hl)
  34+ 9BCA 23           	inc hl
  35+ 9BCB 77           	ld (hl),a
  36+ 9BCC
  37+ 9BCC EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BCD 3E 01        	ld a,1
  39+ 9BCF 77           	ld (hl),a
  40+ 9BD0 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1764  9BD1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BD1
   2+ 9BD1
   3+ 9BD1              ;   07/07/23
   4+ 9BD1              ;
   5+ 9BD1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BD1              ;
   7+ 9BD1              ;   Codificación:
   8+ 9BD1              ;
   9+ 9BD1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BD1              ;
  11+ 9BD1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BD1              ;
  13+ 9BD1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BD1              ;
  15+ 9BD1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BD1              ;
  17+ 9BD1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BD1              ;                               ..... %01000010 Vel_up 4
  19+ 9BD1              ;                                               Vel_down 2
  20+ 9BD1              ;                               ..... $42
  21+ 9BD1              ;
  22+ 9BD1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BD1              ;
  24+ 9BD1              ;                               ..... %01000010 Vel_left 4
  25+ 9BD1              ;                                               Vel_right 2
  26+ 9BD1              ;                               ..... $42
  27+ 9BD1              ;
  28+ 9BD1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BD1              ;
  30+ 9BD1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BD1              ;
  32+ 9BD1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BD1              ;
  34+ 9BD1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BD1              ;                                     $53
  36+ 9BD1              ;
  37+ 9BD1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BD1              ;
  39+ 9BD1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BD1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BD1              ;
  42+ 9BD1              ;                       Arriba ..... $81
  43+ 9BD1              ;                       Arriba - izquierda ..... $a1
  44+ 9BD1              ;                       Arriba - derecha ..... $91
  45+ 9BD1              ;
  46+ 9BD1              ;                       Abajo ..... $41
  47+ 9BD1              ;                       Abajo - izquierda ..... $61
  48+ 9BD1              ;                       Abajo - derecha ..... $51
  49+ 9BD1              ;
  50+ 9BD1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BD1              ;
  52+ 9BD1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BD1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BD1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BD1              ;
  56+ 9BD1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BD1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BD1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BD1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BD1              ;
  61+ 9BD1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BD1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BD1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BD1              ;
  65+ 9BD1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BD1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BD1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BD1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BD1
  70+ 9BD1              ; ----- ----- ----- ----- -----
  71+ 9BD1
  72+ 9BD1 FD 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BD3 05 9C            defw F_1
  74+ 9BD5 0F 9C            defw F_2
  75+ 9BD7 19 9C            defw Codo_abajo_derecha
  76+ 9BD9 4D 9C            defw Derecha_y_subiendo
  77+ 9BDB 57 9C            defw Derecha_y_subiendo_1
  78+ 9BDD 61 9C            defw F_3
  79+ 9BDF 6B 9C            defw F_4
  80+ 9BE1 75 9C            defw Derecha_y_bajando
  81+ 9BE3 7F 9C            defw Derecha_y_bajando_1
  82+ 9BE5 89 9C            defw Derecha_y_bajando_2
  83+ 9BE7 93 9C            defw Codo_derecha_abajo
  84+ 9BE9 C3 9C            defw Codo_abajo_izq.
  85+ 9BEB F7 9C            defw Izquierda_y_subiendo
  86+ 9BED 01 9D            defw Izquierda_y_subiendo_1
  87+ 9BEF 0B 9D            defw F_5
  88+ 9BF1 15 9D            defw F_6
  89+ 9BF3 1F 9D            defw Izquierda_y_bajando
  90+ 9BF5 29 9D            defw Izquierda_y_bajando_1
  91+ 9BF7 33 9D            defw Izquierda_y_bajando_2
  92+ 9BF9 3D 9D            defw Codo_izquierda_abajo
  93+ 9BFB 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9BFD
  95+ 9BFD 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C01 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C05
  98+ 9C05 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C09 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C0D 08 00
 100+ 9C0F 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C13 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C17 0F FE
 102+ 9C19
 103+ 9C19 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C21 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C25 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C29 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C2D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C31 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C35 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C39 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C3D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C41 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C45 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C49 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C4D
 117+ 9C4D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C51 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C55 06 00
 119+ 9C57
 120+ 9C57 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C5B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C5F 02 00
 122+ 9C61
 123+ 9C61 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C65 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C69 04 00
 125+ 9C6B 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C6F 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C73 08 00
 127+ 9C75
 128+ 9C75 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C79 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C7D 02 00
 130+ 9C7F
 131+ 9C7F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9C83 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9C87 06 00
 133+ 9C89
 134+ 9C89 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9C8D 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9C91 06 00
 136+ 9C93
 137+ 9C93              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9C93
 139+ 9C93 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9C97 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9C9B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9C9F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CA3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CA7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CAB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CAF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CB3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CB7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CBB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9CBF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9CC3
 152+ 9CC3 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9CC7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9CCB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9CCF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9CD3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9CD7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9CDB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CDF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9CE3 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9CE7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9CEB 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9CEF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9CF3 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9CF7
 166+ 9CF7 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9CFB 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9CFF 06 00
 168+ 9D01
 169+ 9D01 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D05 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D09 02 00
 171+ 9D0B
 172+ 9D0B 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D0F 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D13 04 00
 174+ 9D15 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D19 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D1D 08 00
 176+ 9D1F
 177+ 9D1F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D23 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D27 02 00
 179+ 9D29
 180+ 9D29 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D2D 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D31 06 00
 182+ 9D33
 183+ 9D33 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D37 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D3B 06 00
 185+ 9D3D
 186+ 9D3D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D41 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D45 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D49 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D4D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D51 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D55 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D59 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D5D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D61 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D65 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D69 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D6D
 199+ 9D6D              ; ----- ----- ----- ----- -----
 200+ 9D6D              ;
 201+ 9D6D              ;   28/12/23
 202+ 9D6D
 203+ 9D6D              Movimiento
 204+ 9D6D
 205+ 9D6D              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D6D
 207+ 9D6D 3A 87 89         ld a,(Ctrl_2)
 208+ 9D70 CB 57            bit 2,a
 209+ 9D72 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D74
 211+ 9D74 2A 97 89         ld hl,(Puntero_mov)
 212+ 9D77 7E               ld a,(hl)
 213+ 9D78
 214+ 9D78              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D78
 216+ 9D78              Inicia_desplazamiento.
 217+ 9D78
 218+ 9D78              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D78
 220+ 9D78 CD 78 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D7B
 222+ 9D7B              ; Iniciamos (Repetimos_mov).
 223+ 9D7B
 224+ 9D7B 7E               ld a,(hl)
 225+ 9D7C E6 0F            and $0f
 226+ 9D7E 32 9D 89         ld (Repetimos_desplazamiento),a
 227+ 9D81 32 9E 89         ld (Repetimos_desplazamiento_backup),a
 228+ 9D84
 229+ 9D84              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9D84
 231+ 9D84 23               inc hl
 232+ 9D85 7E               ld a,(hl)
 233+ 9D86 32 A0 89         ld (Cola_de_desplazamiento),a
 234+ 9D89 2B               dec hl
 235+ 9D8A
 236+ 9D8A 21 87 89         ld hl,Ctrl_2
 237+ 9D8D CB D6            set 2,(hl)
 238+ 9D8F
 239+ 9D8F              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9D8F              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9D8F
 242+ 9D8F              Desplazamiento_iniciado
 243+ 9D8F
 244+ 9D8F CD 46 9E         call Aplica_desplazamiento
 245+ 9D92
 246+ 9D92              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9D92
 248+ 9D92 3A C0 89         ld a,(Ctrl_3)
 249+ 9D95 CB 57            bit 2,a
 250+ 9D97 C0               ret nz
 251+ 9D98
 252+ 9D98 3A 87 89         ld a,(Ctrl_2)
 253+ 9D9B CB 67            bit 4,a
 254+ 9D9D C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9D9E
 256+ 9D9E 21 9D 89     3 ld hl,Repetimos_desplazamiento
 257+ 9DA1 35               dec (hl)
 258+ 9DA2 C0               ret nz
 259+ 9DA3
 260+ 9DA3              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DA3              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DA3              ; Analiza (Cola_de_desplazamiento).
 263+ 9DA3
 264+ 9DA3 3A A0 89     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DA6 A7               and a
 266+ 9DA7 CC A1 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DAA 28 30            jr z,Reinicia_el_movimiento
 268+ 9DAC
 269+ 9DAC FE FF            cp $ff
 270+ 9DAE 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DB0
 272+ 9DB0 FE FE            cp $fe
 273+ 9DB2 CC 1F 9E         call z,Fijamos_bucle
 274+ 9DB5 28 25            jr z,Reinicia_el_movimiento
 275+ 9DB7
 276+ 9DB7 FE FD            cp $fd
 277+ 9DB9 20 11            jr nz,1F
 278+ 9DBB
 279+ 9DBB              ; ---
 280+ 9DBB              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DBB
 282+ 9DBB 3A 87 89         ld a,(Ctrl_2)
 283+ 9DBE CB 5F            bit 3,a
 284+ 9DC0 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9DC2
 286+ 9DC2              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9DC2
 288+ 9DC2 21 87 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9DC5 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9DC7
 291+ 9DC7 CD 30 9E         call Inicia_Repetimos_movimiento
 292+ 9DCA 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9DCC              ; ---
 294+ 9DCC
 295+ 9DCC FE 01        1 cp 1
 296+ 9DCE CA 09 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9DD1
 298+ 9DD1 3D               dec a
 299+ 9DD2 32 A0 89         ld (Cola_de_desplazamiento),a
 300+ 9DD5
 301+ 9DD5 3A 9E 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9DD8 32 9D 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9DDB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9DDB C9               ret
 305+ 9DDC
 306+ 9DDC              Reinicia_el_movimiento
 307+ 9DDC
 308+ 9DDC 3A 87 89         ld a,(Ctrl_2)
 309+ 9DDF CB 5F            bit 3,a
 310+ 9DE1 28 1B            jr z,2F
 311+ 9DE3
 312+ 9DE3              ; (Cola_de_desplazamiento)="254".
 313+ 9DE3
 314+ 9DE3 21 9F 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9DE6 35               dec (hl)
 316+ 9DE7 20 15            jr nz,2F
 317+ 9DE9
 318+ 9DE9              ; Fin de las repeticiones del último movimiento.
 319+ 9DE9
 320+ 9DE9 21 87 89         ld hl,Ctrl_2
 321+ 9DEC CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9DEE
 323+ 9DEE 2A 97 89         ld hl,(Puntero_mov)
 324+ 9DF1 23               inc hl
 325+ 9DF2 23               inc hl
 326+ 9DF3 23               inc hl
 327+ 9DF4 22 97 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9DF7              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9DF7 7E               ld a,(hl)
 330+ 9DF8 32 A0 89         ld (Cola_de_desplazamiento),a
 331+ 9DFB
 332+ 9DFB C3 A3 9D         jp Cola
 333+ 9DFE
 334+ 9DFE CD 3B 9E     2 call Inicia_Puntero_mov
 335+ 9E01
 336+ 9E01 21 87 89         ld hl,Ctrl_2
 337+ 9E04 CB 96            res 2,(hl)
 338+ 9E06
 339+ 9E06 C3 6D 9D         jp Movimiento
 340+ 9E09
 341+ 9E09              Siguiente_desplazamiento
 342+ 9E09
 343+ 9E09              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E09              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E09
 346+ 9E09 21 87 89         ld hl,Ctrl_2
 347+ 9E0C CB 96            res 2,(hl)
 348+ 9E0E
 349+ 9E0E 2A 97 89         ld hl,(Puntero_mov)
 350+ 9E11 23               inc hl
 351+ 9E12 23               inc hl
 352+ 9E13 22 97 89         ld (Puntero_mov),hl
 353+ 9E16
 354+ 9E16 7E               ld a,(hl)
 355+ 9E17 A7               and a
 356+ 9E18 CC A1 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E1B CA DC 9D         jp z,Reinicia_el_movimiento
 358+ 9E1E
 359+ 9E1E C9               ret
 360+ 9E1F
 361+ 9E1F              ; Subrutinas -----------------------------------------
 362+ 9E1F              ; ---------- --------- --------- ---------- ----------
 363+ 9E1F              ;
 364+ 9E1F              ;   24/07/23
 365+ 9E1F              ;
 366+ 9E1F              ;   Fijamos_bucle
 367+ 9E1F              ;
 368+ 9E1F              ;
 369+ 9E1F
 370+ 9E1F              Fijamos_bucle
 371+ 9E1F
 372+ 9E1F 3A 9B 89         ld a,(Incrementa_puntero)
 373+ 9E22 3C               inc a
 374+ 9E23 32 9C 89         ld (Incrementa_puntero_backup),a
 375+ 9E26
 376+ 9E26 CD A1 9E         call Incrementa_Puntero_indice_mov
 377+ 9E29 2A 95 89         ld hl,(Puntero_indice_mov)
 378+ 9E2C 22 99 89         ld (Puntero_indice_mov_bucle),hl
 379+ 9E2F C9               ret
 380+ 9E30
 381+ 9E30              ; ---------- --------- --------- ---------- ----------
 382+ 9E30              ;
 383+ 9E30              ;   07/7/23
 384+ 9E30              ;
 385+ 9E30              ;   Inicia_Repetimos_movimiento
 386+ 9E30              ;
 387+ 9E30              ;
 388+ 9E30
 389+ 9E30              Inicia_Repetimos_movimiento
 390+ 9E30
 391+ 9E30              ; Iniciamos (Repetimos_movimiento).
 392+ 9E30
 393+ 9E30 DD 2A 97 89      ld ix,(Puntero_mov)
 394+ 9E34 DD 7E 02         ld a,(ix+2)
 395+ 9E37 32 9F 89         ld (Repetimos_movimiento),a
 396+ 9E3A
 397+ 9E3A C9               ret
 398+ 9E3B
 399+ 9E3B              ; ---------- --------- --------- ---------- ----------
 400+ 9E3B              ;
 401+ 9E3B              ;   26/6/23
 402+ 9E3B              ;
 403+ 9E3B              ;   Inicia_Puntero_mov
 404+ 9E3B              ;
 405+ 9E3B              ;
 406+ 9E3B
 407+ 9E3B 2A 95 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E3E 5E               ld e,(hl)
 409+ 9E3F 23               inc hl
 410+ 9E40 56               ld d,(hl)
 411+ 9E41 EB               ex de,hl
 412+ 9E42 22 97 89         ld (Puntero_mov),hl
 413+ 9E45 C9               ret
 414+ 9E46
 415+ 9E46              ; ---------- --------- --------- ---------- ----------
 416+ 9E46              ;
 417+ 9E46              ;   27/06/23
 418+ 9E46              ;
 419+ 9E46              ;   Aplica_movimiento.
 420+ 9E46
 421+ 9E46              Aplica_desplazamiento
 422+ 9E46
 423+ 9E46              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E46
 425+ 9E46 2A 97 89         ld hl, (Puntero_mov)
 426+ 9E49
 427+ 9E49 7E               ld a,(hl)
 428+ 9E4A E6 F0            and $f0
 429+ 9E4C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E4D
 431+ 9E4D CB 7E            bit 7,(hl)
 432+ 9E4F 28 03            jr z,1F
 433+ 9E51 CD 65 98         call Mov_up
 434+ 9E54 2A 97 89     1 ld hl, (Puntero_mov)
 435+ 9E57 CB 76            bit 6,(hl)
 436+ 9E59 28 09            jr z,2F
 437+ 9E5B CD 2C 98         call Mov_down
 438+ 9E5E
 439+ 9E5E              ; Se ha aplicado reinicio ???
 440+ 9E5E              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E5E
 442+ 9E5E 3A C0 89         ld a,(Ctrl_3)
 443+ 9E61 CB 57            bit 2,a
 444+ 9E63 C0               ret nz
 445+ 9E64
 446+ 9E64 2A 97 89     2 ld hl, (Puntero_mov)
 447+ 9E67 CB 6E            bit 5,(hl)
 448+ 9E69 28 03            jr z,3F
 449+ 9E6B CD CB 99         call Mov_left
 450+ 9E6E 2A 97 89     3 ld hl, (Puntero_mov)
 451+ 9E71 CB 66            bit 4,(hl)
 452+ 9E73 C8               ret z
 453+ 9E74 CD A8 98         call Mov_right
 454+ 9E77 C9               ret
 455+ 9E78
 456+ 9E78              ; ---------- --------- --------- ---------- ----------
 457+ 9E78              ;
 458+ 9E78              ;   26/06/23
 459+ 9E78              ;
 460+ 9E78              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E78
 462+ 9E78              Ajusta_velocidad_desplazamiento
 463+ 9E78
 464+ 9E78              ; 1er byte de la cadena de movimiento.
 465+ 9E78              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E78
 467+ 9E78 CD 96 9E         call Extrae_nibble_alto
 468+ 9E7B
 469+ 9E7B 32 8B 89         ld (Vel_up),a
 470+ 9E7E 79               ld a,c
 471+ 9E7F E6 0F            and $0f
 472+ 9E81 32 8C 89         ld (Vel_down),a
 473+ 9E84
 474+ 9E84              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9E84              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9E84
 477+ 9E84 23               inc hl
 478+ 9E85 CD 96 9E         call Extrae_nibble_alto
 479+ 9E88
 480+ 9E88 32 89 89         ld (Vel_left),a
 481+ 9E8B 79               ld a,c
 482+ 9E8C E6 0F            and $0f
 483+ 9E8E 32 8A 89         ld (Vel_right),a
 484+ 9E91
 485+ 9E91              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9E91
 487+ 9E91 23               inc hl
 488+ 9E92 22 97 89         ld (Puntero_mov),hl
 489+ 9E95 C9               ret
 490+ 9E96
 491+ 9E96 06 04        Extrae_nibble_alto ld b,4
 492+ 9E98 7E               ld a,(hl)
 493+ 9E99 4F               ld c,a
 494+ 9E9A E6 F0            and $f0
 495+ 9E9C CB 3F        1 srl a
 496+ 9E9E 10 FC            djnz 1B
 497+ 9EA0 C9               ret
 498+ 9EA1
 499+ 9EA1              ; ---------- --------- --------- ---------- ----------
 500+ 9EA1              ;
 501+ 9EA1              ;   5/7/23
 502+ 9EA1              ;
 503+ 9EA1              ;   Incrementa_Puntero_indice_mov
 504+ 9EA1
 505+ 9EA1              Incrementa_Puntero_indice_mov
 506+ 9EA1
 507+ 9EA1 21 9B 89         ld hl,Incrementa_puntero
 508+ 9EA4 34               inc (hl)
 509+ 9EA5
 510+ 9EA5 2A 95 89         ld hl,(Puntero_indice_mov)
 511+ 9EA8 01 02 00         ld bc,2
 512+ 9EAB A7               and a
 513+ 9EAC 09               add hl,bc
 514+ 9EAD 22 95 89         ld (Puntero_indice_mov),hl
 515+ 9EB0
 516+ 9EB0 7E               ld a,(hl)
 517+ 9EB1 A7               and a
 518+ 9EB2
 519+ 9EB2              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9EB2
 521+ 9EB2              ;    jr z,$
 522+ 9EB2
 523+ 9EB2              ;! Reinicia el Patrón de movimiento.
 524+ 9EB2
 525+ 9EB2 CC B7 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9EB5
 527+ 9EB5 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9EB6
 529+ 9EB6 C9               ret
 530+ 9EB7
 531+ 9EB7              ; ---------- --------- --------- ---------- ----------
 532+ 9EB7              ;
 533+ 9EB7              ;   15/01/24
 534+ 9EB7              ;
 535+ 9EB7              ;   Inicializa_Puntero_indice_mov
 536+ 9EB7
 537+ 9EB7              Inicializa_Puntero_indice_mov_2
 538+ 9EB7
 539+ 9EB7              ; Existe etiqueta de bucle principal???
 540+ 9EB7
 541+ 9EB7 2A 99 89         ld hl,(Puntero_indice_mov_bucle)
 542+ 9EBA 24               inc h
 543+ 9EBB 25               dec h
 544+ 9EBC 28 05            jr z,2F
 545+ 9EBE
 546+ 9EBE 22 95 89         ld (Puntero_indice_mov),hl
 547+ 9EC1 18 14            jr 3F
 548+ 9EC3
 549+ 9EC3              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9EC3
 551+ 9EC3 3A 9B 89     2 ld a,(Incrementa_puntero)
 552+ 9EC6 47               ld b,a
 553+ 9EC7
 554+ 9EC7 2A 95 89         ld hl,(Puntero_indice_mov)
 555+ 9ECA 2B           1 dec hl
 556+ 9ECB 2B               dec hl
 557+ 9ECC 10 FC            djnz 1B
 558+ 9ECE 22 95 89         ld (Puntero_indice_mov),hl
 559+ 9ED1
 560+ 9ED1 AF               xor a
 561+ 9ED2 32 9B 89         ld (Incrementa_puntero),a
 562+ 9ED5 18 06            jr 4F
 563+ 9ED7
 564+ 9ED7 3A 9C 89     3 ld a,(Incrementa_puntero_backup)
 565+ 9EDA 32 9B 89         ld (Incrementa_puntero),a
 566+ 9EDD C9           4 ret
 567+ 9EDE
 568+ 9EDE              ; ----------------------------------------------------------------------
 569+ 9EDE              ;
 570+ 9EDE              ;   30/01/24
 571+ 9EDE              ;
 572+ 9EDE              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 573+ 9EDE
 574+ 9EDE 3A 5F 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 575+ 9EE1 CD DB 88         call Calcula_salto_en_BC
 576+ 9EE4 21 8D 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 577+ 9EE7 A7               and a
 578+ 9EE8 ED 4A            adc hl,bc
 579+ 9EEA C9               ret
 580+ 9EEB
 581+ 9EEB              ; ----------------------------------------------------------------------
 582+ 9EEB              ;
 583+ 9EEB              ;   30/01/24
 584+ 9EEB              ;
 585+ 9EEB              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 586+ 9EEB              ;
 587+ 9EEB              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 588+ 9EEB
 589+ 9EEB 4E           Transfiere_datos_de_contadores ld c,(hl)
 590+ 9EEC 23               inc hl
 591+ 9EED 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 592+ 9EEE 69               ld l,c
 593+ 9EEF 60               ld h,b
 594+ 9EF0 22 80 89         ld (Contador_de_mov_masticados),hl
 595+ 9EF3 C9               ret
 596+ 9EF4
 597+ 9EF4
# file closed: Patrones_de_mov.asm
1765  9EF4              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9EF4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9EF4              ;
   3+ 9EF4              ;	12/12/23
   4+ 9EF4              ;
   5+ 9EF4              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9EF4
   7+ 9EF4              ;	ADC HL,SP	LD (addr),SP
   8+ 9EF4              ;	ADD HL,SP	LD SP,(addr)
   9+ 9EF4              ;	ADD IX,SP	LD SP,nn
  10+ 9EF4              ; 	ADD IY,SP	LD SP,HL
  11+ 9EF4              ;				LD SP,IX
  12+ 9EF4              ;	DEC SP		LD SP,IY
  13+ 9EF4
  14+ 9EF4              ;	EX (SP),HL
  15+ 9EF4              ;	EX (SP),IX
  16+ 9EF4              ;	EX (SP),IY
  17+ 9EF4
  18+ 9EF4              ;	INC SP
  19+ 9EF4
  20+ 9EF4                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 B2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 7C 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 7E 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A A1 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A BA 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 82 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A BE 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A B8 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A A1 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 BA 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 82 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 BE 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B B2 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 B8 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B B2 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A B8 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 B8 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1766  8131
1767  8131              	SAVESNA "Pruebas.sna", START
1768  8131
1769  8131
1770  8131
1771  8131
# file closed: Banco_de_pruebas.asm
