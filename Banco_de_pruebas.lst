# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD 60 8E     	call Frame
  15  AA04 FB           	ei
  16  AA05 ED 4D        	reti
  17  AA07
  18  AA07              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  AA07
  20  AA07              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA07              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA07              ;
   3+ AA07              ;	17/02/23
   4+ AA07              ;
   5+ AA07              ;	Sprites e índices.
   6+ AA07
   7+ AA07              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 43 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 49 89        	defw End_Snapshot_1
 267+ 8500 4D 89        	defw End_Snapshot_2
 268+ 8502 51 89        	defw End_Snapshot_3
 269+ 8504 45 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 4B 89        	defw End_Snapshot_disparos_1
 271+ 8508 4F 89        	defw End_Snapshot_disparos_2
 272+ 850A 53 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E1 85        	defw Caja_1
  98+ 858E 24 86        	defw Caja_2
  99+ 8590 67 86        	defw Caja_3
 100+ 8592 AA 86        	defw Caja_4
 101+ 8594 ED 86        	defw Caja_5
 102+ 8596 30 87        	defw Caja_6
 103+ 8598 73 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00        	db 0,0											; Variables_de_borrado
 129+ 85BA 00 00        	defw 0											;	" " " " " " "
 130+ 85BC 00 00        	defw 0											;	" " " " " " "
 131+ 85BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 132+ 85C2
 133+ 85C2 00 00        	db 0,0											; Variables_de_pintado
 134+ 85C4 00 00        	defw 0											;	" " " " " " "
 135+ 85C6 00 00        	defw 0											;	" " " " " " "
 136+ 85C8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85CC
 138+ 85CC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 139+ 85CE
 140+ 85CE 00           	db 0											; (Autoriza_movimiento).
 141+ 85CF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 141+ 85D3 00 00
 142+ 85D5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 143+ 85D8
 144+ 85D8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85DA 00           	db 0											; (Cola_de_desplazamiento).
 146+ 85DB
 147+ 85DB 00           	db 0 											; (Columnas).
 148+ 85DC 00 00        	defw 0											; (Limite_horizontal).
 149+ 85DE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 150+ 85E1
 151+ 85E1              ; ---------- ---------- ---------- ---------- ----------
 152+ 85E1
 153+ 85E1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 154+ 85E3 00 00        	defw 0											; (Posicion_actual).
 155+ 85E5 00 00        	defw 0 											; (Puntero_objeto).
 156+ 85E7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 157+ 85EA
 158+ 85EA 00           	db %00000000 									; (Attr).
 159+ 85EB
 160+ 85EB 00 00        	defw 0											; (Indice_Sprite_der).
 161+ 85ED 00 00        	defw 0											; (Indice_Sprite_izq).
 162+ 85EF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 163+ 85F1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 164+ 85F3
 165+ 85F3 00 00        	defw 0											; (Posicion_inicio).
 166+ 85F5 00           	db 0											; (Cuad_objeto).
 167+ 85F6
 168+ 85F6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 169+ 85FA
 170+ 85FA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 171+ 85FB
 172+ 85FB 00 00        	db 0,0										    ; Variables_de_borrado
 173+ 85FD 00 00        	defw 0											;	" " " " " " "
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 176+ 8605
 177+ 8605 00 00        	db 0,0											; Variables_de_pintado
 178+ 8607 00 00        	defw 0											;	" " " " " " "
 179+ 8609 00 00        	defw 0											;	" " " " " " "
 180+ 860B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860F
 182+ 860F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 183+ 8611
 184+ 8611 00           	db 0											; (Autoriza_movimiento).
 185+ 8612 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 185+ 8616 00 00
 186+ 8618 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 187+ 861B
 188+ 861B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 189+ 861D 00           	db 0											; (Cola_de_desplazamiento).
 190+ 861E
 191+ 861E 00           	db 0 											; (Columnas).
 192+ 861F 00 00        	defw 0											; (Limite_horizontal).
 193+ 8621 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 194+ 8624
 195+ 8624              ; ---------- ---------- ---------- ---------- ----------
 196+ 8624
 197+ 8624 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 198+ 8626 00 00        	defw 0											; (Posicion_actual).
 199+ 8628 00 00        	defw 0 											; (Puntero_objeto).
 200+ 862A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 201+ 862D
 202+ 862D 00           	db %00000000 									; (Attr).
 203+ 862E
 204+ 862E 00 00        	defw 0											; (Indice_Sprite_der).
 205+ 8630 00 00        	defw 0											; (Indice_Sprite_izq).
 206+ 8632 00 00        	defw 0											; (Puntero_DESPLZ_der).
 207+ 8634 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 208+ 8636
 209+ 8636 00 00        	defw 0											; (Posicion_inicio).
 210+ 8638 00           	db 0											; (Cuad_objeto).
 211+ 8639
 212+ 8639 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 213+ 863D
 214+ 863D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 215+ 863E
 216+ 863E 00 00        	db 0,0										    ; Variables_de_borrado
 217+ 8640 00 00        	defw 0											;	" " " " " " "
 218+ 8642 00 00        	defw 0											;	" " " " " " "
 219+ 8644 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 8648
 221+ 8648 00 00        	db 0,0											; Variables_de_pintado
 222+ 864A 00 00        	defw 0											;	" " " " " " "
 223+ 864C 00 00        	defw 0											;	" " " " " " "
 224+ 864E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 8652
 226+ 8652 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 227+ 8654
 228+ 8654 00           	db 0											; (Autoriza_movimiento).
 229+ 8655 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 229+ 8659 00 00
 230+ 865B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 231+ 865E
 232+ 865E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 233+ 8660 00           	db 0											; (Cola_de_desplazamiento).
 234+ 8661
 235+ 8661 00           	db 0 											; (Columnas).
 236+ 8662 00 00        	defw 0											; (Limite_horizontal).
 237+ 8664 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 238+ 8667
 239+ 8667              ; ---------- ---------- ---------- ---------- ----------
 240+ 8667
 241+ 8667 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 242+ 8669 00 00        	defw 0											; (Posicion_actual).
 243+ 866B 00 00        	defw 0 											; (Puntero_objeto).
 244+ 866D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 245+ 8670
 246+ 8670 00           	db %00000000 									; (Attr).
 247+ 8671
 248+ 8671 00 00        	defw 0											; (Indice_Sprite_der).
 249+ 8673 00 00        	defw 0											; (Indice_Sprite_izq).
 250+ 8675 00 00        	defw 0											; (Puntero_DESPLZ_der).
 251+ 8677 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 252+ 8679
 253+ 8679 00 00        	defw 0											; (Posicion_inicio).
 254+ 867B 00           	db 0											; (Cuad_objeto).
 255+ 867C
 256+ 867C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 257+ 8680
 258+ 8680 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 259+ 8681
 260+ 8681 00 00        	db 0,0										    ; Variables_de_borrado
 261+ 8683 00 00        	defw 0											;	" " " " " " "
 262+ 8685 00 00        	defw 0											;	" " " " " " "
 263+ 8687 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 868B
 265+ 868B 00 00        	db 0,0											; Variables_de_pintado
 266+ 868D 00 00        	defw 0											;	" " " " " " "
 267+ 868F 00 00        	defw 0											;	" " " " " " "
 268+ 8691 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8695
 270+ 8695 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 8697
 272+ 8697 00           	db 0											; (Autoriza_movimiento).
 273+ 8698 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 869C 00 00
 274+ 869E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 86A1
 276+ 86A1 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 86A3 00           	db 0											; (Cola_de_desplazamiento).
 278+ 86A4
 279+ 86A4 00           	db 0 											; (Columnas).
 280+ 86A5 00 00        	defw 0											; (Limite_horizontal).
 281+ 86A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 86AA
 283+ 86AA              ; ---------- ---------- ---------- ---------- ----------
 284+ 86AA
 285+ 86AA 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 86AC 00 00        	defw 0											; (Posicion_actual).
 287+ 86AE 00 00        	defw 0 											; (Puntero_objeto).
 288+ 86B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 86B3
 290+ 86B3 00           	db %00000000 									; (Attr).
 291+ 86B4
 292+ 86B4 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 86B6 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 86B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 86BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 86BC
 297+ 86BC 00 00        	defw 0											; (Posicion_inicio).
 298+ 86BE 00           	db 0											; (Cuad_objeto).
 299+ 86BF
 300+ 86BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 86C3
 302+ 86C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 86C4
 304+ 86C4 00 00        	db 0,0										    ; Variables_de_borrado
 305+ 86C6 00 00        	defw 0											;	" " " " " " "
 306+ 86C8 00 00        	defw 0											;	" " " " " " "
 307+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 308+ 86CE
 309+ 86CE 00 00        	db 0,0											; Variables_de_pintado
 310+ 86D0 00 00        	defw 0											;	" " " " " " "
 311+ 86D2 00 00        	defw 0											;	" " " " " " "
 312+ 86D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D8
 314+ 86D8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 315+ 86DA
 316+ 86DA 00           	db 0											; (Autoriza_movimiento).
 317+ 86DB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 317+ 86DF 00 00
 318+ 86E1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 319+ 86E4
 320+ 86E4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86E6 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86E7
 323+ 86E7 00           	db 0 											; (Columnas).
 324+ 86E8 00 00        	defw 0											; (Limite_horizontal).
 325+ 86EA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86ED
 327+ 86ED              ; ---------- ---------- ---------- ---------- ----------
 328+ 86ED
 329+ 86ED 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86EF 00 00        	defw 0											; (Posicion_actual).
 331+ 86F1 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86F3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86F6
 334+ 86F6 00           	db %00000000 									; (Attr).
 335+ 86F7
 336+ 86F7 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86F9 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86FB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86FD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86FF
 341+ 86FF 00 00        	defw 0											; (Posicion_inicio).
 342+ 8701 00           	db 0											; (Cuad_objeto).
 343+ 8702
 344+ 8702 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 8706
 346+ 8706 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 8707
 348+ 8707 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 8709 00 00        	defw 0											;	" " " " " " "
 350+ 870B 00 00        	defw 0											;	" " " " " " "
 351+ 870D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 8711
 353+ 8711 00 00        	db 0,0											; Variables_de_pintado
 354+ 8713 00 00        	defw 0											;	" " " " " " "
 355+ 8715 00 00        	defw 0											;	" " " " " " "
 356+ 8717 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 871B
 358+ 871B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 871D
 360+ 871D 00           	db 0											; (Autoriza_movimiento).
 361+ 871E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 8722 00 00
 362+ 8724 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 363+ 8727
 364+ 8727 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 365+ 8729 00           	db 0											; (Cola_de_desplazamiento).
 366+ 872A
 367+ 872A 00           	db 0 											; (Columnas).
 368+ 872B 00 00        	defw 0											; (Limite_horizontal).
 369+ 872D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 370+ 8730
 371+ 8730              ; ---------- ---------- ---------- ---------- ----------
 372+ 8730
 373+ 8730 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 374+ 8732 00 00        	defw 0											; (Posicion_actual).
 375+ 8734 00 00        	defw 0 											; (Puntero_objeto).
 376+ 8736 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 377+ 8739
 378+ 8739 00           	db %00000000 									; (Attr).
 379+ 873A
 380+ 873A 00 00        	defw 0											; (Indice_Sprite_der).
 381+ 873C 00 00        	defw 0											; (Indice_Sprite_izq).
 382+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 383+ 8740 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 384+ 8742
 385+ 8742 00 00        	defw 0											; (Posicion_inicio).
 386+ 8744 00           	db 0											; (Cuad_objeto).
 387+ 8745
 388+ 8745 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 389+ 8749
 390+ 8749 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 391+ 874A
 392+ 874A 00 00        	db 0,0										    ; Variables_de_borrado
 393+ 874C 00 00        	defw 0											;	" " " " " " "
 394+ 874E 00 00        	defw 0											;	" " " " " " "
 395+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 8754
 397+ 8754 00 00        	db 0,0											; Variables_de_pintado
 398+ 8756 00 00        	defw 0											;	" " " " " " "
 399+ 8758 00 00        	defw 0											;	" " " " " " "
 400+ 875A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875E
 402+ 875E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 403+ 8760
 404+ 8760 00           	db 0											; (Autoriza_movimiento).
 405+ 8761 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 405+ 8765 00 00
 406+ 8767 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 407+ 876A
 408+ 876A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 409+ 876C 00           	db 0											; (Cola_de_desplazamiento).
 410+ 876D
 411+ 876D 00           	db 0 											; (Columnas).
 412+ 876E 00 00        	defw 0											; (Limite_horizontal).
 413+ 8770 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 414+ 8773
 415+ 8773              ; ---------- ---------- ---------- ---------- ----------
 416+ 8773
 417+ 8773 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 418+ 8775 00 00        	defw 0											; (Posicion_actual).
 419+ 8777 00 00        	defw 0 											; (Puntero_objeto).
 420+ 8779 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 421+ 877C
 422+ 877C 00           	db %00000000 									; (Attr).
 423+ 877D
 424+ 877D 00 00        	defw 0											; (Indice_Sprite_der).
 425+ 877F 00 00        	defw 0											; (Indice_Sprite_izq).
 426+ 8781 00 00        	defw 0											; (Puntero_DESPLZ_der).
 427+ 8783 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 428+ 8785
 429+ 8785 00 00        	defw 0											; (Posicion_inicio).
 430+ 8787 00           	db 0											; (Cuad_objeto).
 431+ 8788
 432+ 8788 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 433+ 878C
 434+ 878C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 435+ 878D
 436+ 878D 00 00        	db 0,0										    ; Variables_de_borrado
 437+ 878F 00 00        	defw 0											;	" " " " " " "
 438+ 8791 00 00        	defw 0											;	" " " " " " "
 439+ 8793 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 440+ 8797
 441+ 8797 00 00        	db 0,0											; Variables_de_pintado
 442+ 8799 00 00        	defw 0											;	" " " " " " "
 443+ 879B 00 00        	defw 0											;	" " " " " " "
 444+ 879D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 87A1
 446+ 87A1 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 447+ 87A3
 448+ 87A3 00           	db 0											; (Autoriza_movimiento).
 449+ 87A4 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 449+ 87A8 00 00
 450+ 87AA 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 451+ 87AD
 452+ 87AD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 453+ 87AF 00           	db 0											; (Cola_de_desplazamiento).
 454+ 87B0
 455+ 87B0 00           	db 0 											; (Columnas).
 456+ 87B1 00 00        	defw 0											; (Limite_horizontal).
 457+ 87B3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 458+ 87B6
 459+ 87B6              ; -------------------------------------------------------------------------------------
 460+ 87B6              ;
 461+ 87B6              ;	20/05/23
 462+ 87B6              ;
 463+ 87B6              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 464+ 87B6              ;
 465+ 87B6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 466+ 87B6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 467+ 87B6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 468+ 87B6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 469+ 87B6
 470+ 87B6              Indice_de_entidades
 471+ 87B6
 472+ 87B6 BA 87        	defw Entidad_1
 473+ 87B8 CA 87        	defw Entidad_2
 474+ 87BA
 475+ 87BA              ;	BADSAT, (Satélite malvado).
 476+ 87BA
 477+ 87BA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 478+ 87BC 04           	db %00000100									; (Attr).
 479+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 480+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 481+ 87C1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 482+ 87C3 01           	db 1											; (Cuad_objeto).
 483+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 484+ 87C8 CE 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 485+ 87CA
 486+ 87CA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 487+ 87CC 02           	db %00000010									; (Attr).
 488+ 87CD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 489+ 87CF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 490+ 87D1 40 50        	defw $5040                                      ; (Posicion_inicio).
 491+ 87D3 01           	db 1											; (Cuad_objeto).
 492+ 87D4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 493+ 87D8 CE 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 494+ 87DA
# file closed: Cajas_y_disparos.asm
  22  87DA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87DA              ; 13/05/23
   2+ 87DA
   3+ 87DA              Indice_de_niveles
   4+ 87DA
   5+ 87DA E8 87        	defw Nivel_1
   6+ 87DC EB 87        	defw Nivel_2
   7+ 87DE F8 87        	defw Nivel_3
   8+ 87E0 08 88        	defw Nivel_4
   9+ 87E2 1A 88        	defw Nivel_5
  10+ 87E4              ;	...
  11+ 87E4              ;	...
  12+ 87E4              ;	+ Niveles ...
  13+ 87E4
  14+ 87E4 00 00        	defw 0
  15+ 87E6 00 00        	defw 0
  16+ 87E8
  17+ 87E8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87E9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87EB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87EC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87F0 01 02
  21+ 87F2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87F6 01 02
  22+ 87F8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87F9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87FD 01
  24+ 87FE 03 01 01 01  	db 3,1,1,1,1
  24+ 8802 01
  25+ 8803 03 01 01 01  	db 3,1,1,1,1
  25+ 8807 01
  26+ 8808 11           Nivel_4 db 17									; Nº de entidades.
  27+ 8809 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 880D 01
  28+ 880E 04 01 01 01  	db 4,1,1,1,1
  28+ 8812 01
  29+ 8813 04 01 01 01  	db 4,1,1,1,1
  29+ 8817 01
  30+ 8818 02 03        	db 2,3
  31+ 881A 14           Nivel_5 db 20									; Nº de entidades.
  32+ 881B 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 881F 01
  33+ 8820 05 01 01 01  	db 5,1,1,1,1
  33+ 8824 01
  34+ 8825 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8829 01
  35+ 882A 05 01 01 01  	db 5,1,1,1,1
  35+ 882E 01
  36+ 882F
  37+ 882F              ;---------------------------------------------------------------------------------------------------------------
  38+ 882F              ;
  39+ 882F              ;   3/9/23
  40+ 882F              ;
  41+ 882F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 882F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 882F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 882F              ;	_en la caja DRAW correspondiente.
  45+ 882F              ;
  46+ 882F              ;	MODIFICA: HL,DE y A.
  47+ 882F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 882F
  49+ 882F              Inicializa_Punteros_de_nivel
  50+ 882F
  51+ 882F 21 DA 87     	ld hl,Indice_de_niveles
  52+ 8832 22 80 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8835 CD 16 8D     	call Extrae_address
  54+ 8838 7E           	ld a,(hl)
  55+ 8839 32 31 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 883C 23           	inc hl
  57+ 883D 22 82 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8840 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8841
  60+ 8841              ;---------------------------------------------------------------------------------------------------------------
  61+ 8841              ;
  62+ 8841              ;   13/5/23
  63+ 8841              ;
  64+ 8841              ;	Destruye A,BC,HL,DE
  65+ 8841
  66+ 8841              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8841              ;	_del juego.
  68+ 8841
  69+ 8841              Prepara_cajas
  70+ 8841
  71+ 8841              ; Preparamos los punteros de las cajas.
  72+ 8841
  73+ 8841 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8844 CD 16 8D     	call Extrae_address
  75+ 8847 CD 84 88     	call Avanza_caja
  76+ 884A
  77+ 884A CD C8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 884D
  79+ 884D 2A 82 89     	ld hl,(Datos_de_nivel)
  80+ 8850
  81+ 8850              ; HL está en los datos del nivel correspondiente.
  82+ 8850              ; B actuará como contador de cajas.
  83+ 8850
  84+ 8850 C5           1 push bc
  85+ 8851
  86+ 8851 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8852 CD 75 88     	call PreparaBC
  88+ 8855
  89+ 8855 21 B6 87     	ld hl,Indice_de_entidades
  90+ 8858 CD 7D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 885B 22 37 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 885E
  93+ 885E CD 8E 88     	call Datos_de_entidad_a_caja
  94+ 8861
  95+ 8861 2A 2F 89     	ld hl,(Indice_restore_caja)
  96+ 8864 CD 16 8D     	call Extrae_address
  97+ 8867 CD 84 88     	call Avanza_caja
  98+ 886A
  99+ 886A 2A 82 89     	ld hl,(Datos_de_nivel)
 100+ 886D 23           	inc hl
 101+ 886E 22 82 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8871
 103+ 8871 C1           	pop bc
 104+ 8872 10 DC        	djnz 1B
 105+ 8874 C9           	ret
 106+ 8875
 107+ 8875 CB 27        PreparaBC sla a
 108+ 8877 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8879 4F           	ld c,a
 110+ 887A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 887C C9           	ret
 112+ 887D
 113+ 887D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 887E ED 4A        	adc hl,bc
 115+ 8880 CD 16 8D     	call Extrae_address
 116+ 8883 C9           	ret
 117+ 8884
 118+ 8884 22 2B 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8887 13           	inc de
 120+ 8888 13           	inc de
 121+ 8889 EB           	ex de,hl
 122+ 888A 22 2F 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 888D C9           	ret
 124+ 888E
 125+ 888E              Datos_de_entidad_a_caja
 126+ 888E
 127+ 888E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 888E
 129+ 888E
 130+ 888E ED 5B 2B 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8892
 132+ 8892 01 02 00     	ld bc,2
 133+ 8895 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8897
 135+ 8897 01 07 00     	ld bc,7
 136+ 889A CD C2 88     	call Situa_DE
 137+ 889D
 138+ 889D 01 05 00     	ld bc,5
 139+ 88A0 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 88A2
 141+ 88A2 01 04 00     	ld bc,4
 142+ 88A5 CD C2 88     	call Situa_DE
 143+ 88A8
 144+ 88A8 01 07 00     	ld bc,7
 145+ 88AB ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88AD
 147+ 88AD 01 18 00     	ld bc,24
 148+ 88B0 CD C2 88     	call Situa_DE
 149+ 88B3
 150+ 88B3 01 02 00     	ld bc,2
 151+ 88B6 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88B8
 153+ 88B8              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88B8              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88B8
 156+ 88B8 01 0F 00     	ld bc,15									; *****
 157+ 88BB CD C2 88     	call Situa_DE
 158+ 88BE
 159+ 88BE 3E 03        	ld a,3
 160+ 88C0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88C1
 162+ 88C1 C9           	ret
 163+ 88C2
 164+ 88C2 EB           Situa_DE ex de,hl
 165+ 88C3 A7           	and a
 166+ 88C4 ED 4A        	adc hl,bc
 167+ 88C6 EB           	ex de,hl
 168+ 88C7 C9           	ret
 169+ 88C8
 170+ 88C8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88C8              ;
 172+ 88C8              ;	21/5/23
 173+ 88C8              ;
 174+ 88C8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88C8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88C8              ;
 177+ 88C8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88C8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88C8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88C8              ;
 181+ 88C8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88C8              ;	MODIFICA: A y B.
 183+ 88C8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88C8
 185+ 88C8              Admin_num_entidades
 186+ 88C8
 187+ 88C8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88C8
 189+ 88C8 3A 31 89     	ld a,(Numero_de_entidades)
 190+ 88CB A7           	and a
 191+ 88CC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88CC              ;	jr z,$
 193+ 88CC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88CC
 195+ 88CC 20 03        	jr nz,3F
 196+ 88CE
 197+ 88CE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88CE
 199+ 88CE CD 2F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88D1
 201+ 88D1 3A 31 89     3 ld a,(Numero_de_entidades)
 202+ 88D4 FE 0A        	cp 10
 203+ 88D6 38 08        	jr c,1F
 204+ 88D8
 205+ 88D8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88D8              ; Actualizamos variables.
 207+ 88D8
 208+ 88D8 3E 0A        	ld a,10
 209+ 88DA 32 32 89     	ld (Numero_parcial_de_entidades),a
 210+ 88DD 47           	ld b,a
 211+ 88DE 18 04        	jr 2F
 212+ 88E0
 213+ 88E0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88E0              ; (Numero_de_entidades)="0".
 215+ 88E0
 216+ 88E0 32 32 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88E3 47           	ld b,a
 218+ 88E4 C9           2 ret
# file closed: Niveles.asm
  23  88E5
  24  88E5              ; ******************************************************************************************************************************************************************************************
  25  88E5              ; Constantes.
  26  88E5              ; ******************************************************************************************************************************************************************************************
  27  88E5              ;
  28  88E5              ; 4/9/23
  29  88E5              ;
  30  88E5              ; Constantes generales.
  31  88E5              ;
  32  88E5
  33  88E5              Sprite_vacio equ $f000
  34  88E5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  88E5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  88E5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  88E5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  88E5
  39  88E5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  88E5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  88E5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  42  88E5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  88E5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  88E5              ;
  45  88E5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  46  88E5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  47  88E5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  48  88E5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  49  88E5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  50  88E5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  51  88E5
  52  88E5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
  53  88E5              Almacen_de_borrado_Amadeus equ $72ad ; 6 bytes. ($72ad - $72b2).
  54  88E5
  55  88E5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  56  88E5
  57  88E5              ; ******************************************************************************************************************************************************************************************
  58  88E5              ; Variables.
  59  88E5              ; ******************************************************************************************************************************************************************************************
  60  88E5              ;
  61  88E5              ; 28/07/23
  62  88E5              ;
  63  88E5              ; Variables de DRAW. (Motor principal).
  64  88E5              ;
  65  88E5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  66  88E5
  67  88E5 00           Filas db 0												; Filas. [DRAW]
  68  88E6 00           Columns db 0  											; Nº de columnas. [DRAW]
  69  88E7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  70  88E9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  71  88EB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  72  88EC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  73  88ED
  74  88ED              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  75  88ED
  76  88ED 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  77  88EE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  78  88EE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  79  88EE 00           Attr db 0												; Atributos de la entidad:
  80  88EF
  81  88EF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  82  88EF              ;
  83  88EF              ;	COLORES: 0 ..... NEGRO
  84  88EF              ;    		 1 ..... AZUL
  85  88EF              ; 			 2 ..... ROJO
  86  88EF              ;			 3 ..... MAGENTA
  87  88EF              ; 			 4 ..... VERDE
  88  88EF              ; 			 5 ..... CIAN
  89  88EF              ;			 6 ..... AMARILLO
  90  88EF              ; 			 7 ..... BLANCO
  91  88EF
  92  88EF 00 00        Indice_Sprite_der defw 0
  93  88F1 00 00        Indice_Sprite_izq defw 0
  94  88F3 00 00        Puntero_DESPLZ_der defw 0
  95  88F5 00 00        Puntero_DESPLZ_izq defw 0
  96  88F7
  97  88F7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  98  88F9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  99  88FA
 100  88FA              ; Variables de objeto. (Características).
 101  88FA
 102  88FA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 103  88FB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 104  88FC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 105  88FD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 106  88FE
 107  88FE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 108  88FF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 109  88FF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 110  88FF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 111  8901 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 112  8903 00 00        	defw 0
 113  8905 00 00 00 00  	db 0,0,0,0
 114  8909
 115  8909 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 116  890B 00 00        	defw 0
 117  890D 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 118  890F 00 00 00 00  	db 0,0,0,0
 119  8913
 120  8913              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 121  8913
 122  8913 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 123  8914              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 124  8914              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 125  8914              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 126  8914              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 127  8914              ;
 128  8914              ; 														DESCRIPCIÖN:
 129  8914              ;
 130  8914              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 131  8914              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 132  8914              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 133  8914              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 134  8914              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 135  8914              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 136  8914              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 137  8914              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 138  8914              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 139  8914              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 140  8914              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 141  8914              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 142  8914              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 143  8914              ;
 144  8914              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 145  8914              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 146  8914              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 147  8914
 148  8914 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 149  8915
 150  8915              ; Movimiento. ------------------------------------------------------------------------------------------------------
 151  8915
 152  8915 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 153  8916 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 154  8918 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 155  891A 00 00        Puntero_indice_mov_bucle defw 0							;
 156  891C              ;
 157  891C              ;
 158  891C 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 159  891D              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 160  891D              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 161  891D 00           Incrementa_puntero_backup db 0
 162  891E 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 163  891F              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 164  891F 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 165  8920 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 166  8921 00           Cola_de_desplazamiento db 0								; Este byte indica:
 167  8922              ;
 168  8922              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 169  8922              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 170  8922              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 171  8922              ;
 172  8922              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 173  8922              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 174  8922              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 175  8922              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 176  8922              ;
 177  8922              ;														;	"$ff" ..... Bucle infinito de repetición.
 178  8922              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 179  8922              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 180  8922
 181  8922
 182  8922              ; Variables de funcionamiento. [DRAW].
 183  8922
 184  8922 00           Columnas db 0
 185  8923 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 186  8925              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 187  8925 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 188  8926
 189  8926              ; variables de control general.
 190  8926
 191  8926 00           Ctrl_2 db 0
 192  8927              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 193  8927              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 194  8927              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 195  8927              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 196  8927              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 197  8927              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 198  8927              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 199  8927              ;
 200  8927              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 201  8927              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 202  8927              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 203  8927              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 204  8927              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 205  8927
 206  8927 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 207  8928
 208  8928              ;! 67 Bytes por entidad.
 209  8928
 210  8928              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 211  8928              ;					         		---------;      ;---------
 212  8928
 213  8928
 214  8928              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 215  8928
 216  8928 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 217  8929
 218  8929              ;														DESCRIPCIÓN:
 219  8929              ;
 220  8929              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 221  8929              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 222  8929              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 223  8929              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 224  8929              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 225  8929              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 226  8929
 227  8929              ;														BIT 3, Recarga de nueva oleada.
 228  8929              ;														BIT 4, Recarga de nueva oleada.
 229  8929              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 230  8929              ;														BIT 6, **** Frame completo.
 231  8929              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 232  8929
 233  8929 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 234  892B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 235  892B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 236  892B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 237  892B
 238  892B
 239  892B
 240  892B              ; Gestión de ENTIDADES y CAJAS.
 241  892B
 242  892B 00 00        Puntero_store_caja defw 0
 243  892D 00 00        Puntero_restore_caja defw 0
 244  892F 00 00        Indice_restore_caja defw 0
 245  8931 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 246  8932 00           Numero_parcial_de_entidades db 0
 247  8933 00           Entidades_en_curso db 0									; ..... ..... .....
 248  8934 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 249  8935              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 250  8935              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 251  8935              ;														; _ (Numero_de_malotes)="0".
 252  8935 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 253  8937 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 254  8939              ;														; _ puntero (Indice_entidades).
 255  8939
 256  8939
 257  8939              ;---------------------------------------------------------------------------------------------------------------
 258  8939              ;
 259  8939              ;	2/9/23
 260  8939              ;
 261  8939              ;	Álbumes.
 262  8939
 263  8939 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 264  893B              ;														; _variable para almacenar lo posición del puntero_
 265  893B              ; 														; _de pila, SP.
 266  893B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 267  893D              ;														; La utiliza la rutina [Extrae_foto_registros].
 268  893D 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 269  893F 00 00        Stack_snapshot defw 0
 270  8941 00 00        Stack_snapshot_disparos defw 0
 271  8943
 272  8943 00 00        End_Snapshot defw 0
 273  8945              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 274  8945 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 275  8947              ;														; _el snapshot de los registros del siguiente disparo.
 276  8947              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 277  8947 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 278  8949 00 00        End_Snapshot_1 defw 0
 279  894B 00 00        End_Snapshot_disparos_1 defw 0
 280  894D 00 00        End_Snapshot_2 defw 0
 281  894F 00 00        End_Snapshot_disparos_2 defw 0
 282  8951 00 00        End_Snapshot_3 defw 0
 283  8953 00 00        End_Snapshot_disparos_3 defw 0
 284  8955
 285  8955 00 00        Puntero_indice_album_de_fotos defw 0
 286  8957 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 287  8959
 288  8959 00 00        Puntero_indice_End_Snapshot defw 0
 289  895B 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 290  895D 00 00        Puntero_de_End_Snapshot defw 0
 291  895F 00 00        Puntero_de_End_Snapshot_disparos defw 0
 292  8961
 293  8961              ;---------------------------------------------------------------------------------------------------------------
 294  8961
 295  8961              ; Gestión de Disparos.
 296  8961
 297  8961 00           Numero_de_disparotes db 0
 298  8962 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 299  8964 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 300  8966 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 301  8967              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 302  8967              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 303  8967 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 304  8969              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 305  8969              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 306  8969              ;														; _produzca colisión.
 307  8969 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 308  896B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 309  896B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 310  896E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 311  896E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 312  8971              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 313  8971 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 314  8973 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 315  8974
 316  8974              ;---------------------------------------------------------------------------------------------------------------
 317  8974
 318  8974              ; Relojes y temporizaciones.
 319  8974
 320  8974 00           Contador_de_frames db 0
 321  8975 00           Contador_de_frames_2 db 0
 322  8976
 323  8976 04           Clock_explosion db 4
 324  8977 1E           Clock_Entidades_en_curso db 30
 325  8978 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 326  8979              ;														; Repite la oleada de entidades.
 327  8979 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 328  897A 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 329  897B 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 330  897C
 331  897C 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 332  897D 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 333  897E 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 334  897F
 335  897F              ;---------------------------------------------------------------------------------------------------------------
 336  897F
 337  897F              ; Gestión de NIVELES.
 338  897F
 339  897F 00           Nivel db 0												; Nivel actual del juego.
 340  8980 00 00        Puntero_indice_NIVELES defw 0
 341  8982 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 342  8984              ; 														; _ que definen el NIVEL.
 343  8984              ; Y todo comienza aquí .....
 344  8984              ;
 345  8984              ; Rutina principal *************************************************************************************************************************************************************************
 346  8984              ;
 347  8984              ;	14/11/22
 348  8984
 349  8984              START
 350  8984
 351  8984 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 352  8987 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 353  8989 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 354  898B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 355  898D F3           	DI
 356  898E
 357  898E 3E 07        	ld a,%00000111
 358  8990 CD FB 99     	call Cls
 359  8993
 360  8993 CD EF 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 361  8996
 362  8996              ; INICIALIZACIÓN.
 363  8996
 364  8996 CD 2F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 365  8999
 366  8999 CD 41 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 367  899C
 368  899C CD 18 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 369  899F              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 370  899F CD 2E 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 371  89A2              ;													     ; _ malotes antes de guardar ninguna foto.
 372  89A2              ; ----------
 373  89A2
 374  89A2 CD 9F 8D     	call Restore_entidad
 375  89A5
 376  89A5 21 32 89     	ld hl,Numero_parcial_de_entidades
 377  89A8 46           	ld b,(hl)
 378  89A9 04           	inc b
 379  89AA 05           	dec b
 380  89AB 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 381  89AD
 382  89AD              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 383  89AD              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 384  89AD              ;	Pintamos el resto de entidades:
 385  89AD
 386  89AD              ;	INICIA ENTIDADES !!!!!
 387  89AD
 388  89AD C5           1 push bc  												; Guardo el contador de entidades.
 389  89AE CD BF 8B     	call Inicia_entidad
 390  89B1 C1           	pop bc
 391  89B2 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 392  89B4
 393  89B4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 394  89B4              ; (Esto se dá cuando se inicia una nueva oleada).
 395  89B4
 396  89B4 3A 28 89     	ld a,(Ctrl_1)
 397  89B7 CB 5F        	bit 3,a
 398  89B9 20 18        	jr nz,5F											; Loop
 399  89BB
 400  89BB              ; 	INICIA AMADEUS !!!!!
 401  89BB
 402  89BB CD C6 8D     3 call Restore_Amadeus
 403  89BE CD 1C 8D     	call Inicia_Puntero_objeto
 404  89C1 CD EE 93     	call Draw
 405  89C4 CD A0 7F     	call Guarda_foto_registros
 406  89C7              ;	call Guarda_datos_de_borrado_Amadeus
 407  89C7
 408  89C7              ;	ld hl,Ctrl_1
 409  89C7              ;	set 7,(hl)
 410  89C7
 411  89C7 11 9E 85     	ld de,Amadeus_db
 412  89CA CD D8 8D     	call Store_Amadeus
 413  89CD
 414  89CD              ; 	INICIA DISPAROS !!!!!
 415  89CD
 416  89CD CD 90 8C     	call Inicia_Puntero_Disparo_Entidades
 417  89D0 CD 97 8C     	call Inicia_Puntero_Disparo_Amadeus
 418  89D3
 419  89D3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 420  89D3
 421  89D3 CD 18 8C     5 call Inicia_punteros_de_cajas
 422  89D6 CD 9F 8D     	call Restore_entidad
 423  89D9
 424  89D9 3A 28 89     	ld a,(Ctrl_1)
 425  89DC CB 5F        	bit 3,a
 426  89DE 28 0A        	jr z,6F
 427  89E0
 428  89E0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 429  89E0
 430  89E0 21 28 89     	ld hl,Ctrl_1
 431  89E3 CB 9E        	res 3,(hl)
 432  89E5 CD C6 8C     	call Calcula_numero_de_malotes
 433  89E8 18 0A        	jr Main
 434  89EA
 435  89EA              ; ----------
 436  89EA
 437  89EA 3A 32 89     6 ld a,(Numero_parcial_de_entidades)
 438  89ED 32 34 89     	ld (Numero_de_malotes),a
 439  89F0
 440  89F0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 441  89F0              ; _ tenemos calculado (Numero_de_malotes).
 442  89F0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 443  89F0              ; _ para situarnos en el siguiente album.
 444  89F0
 445  89F0 CD 5F 8C     	call Avanza_puntero_de_album_de_fotos_y_malotes
 446  89F3 F3           	di
 447  89F4              ; ------------------------------------
 448  89F4
 449  89F4              Main
 450  89F4              ;
 451  89F4              ;	3/8/23
 452  89F4
 453  89F4 3E 01            ld a,1
 454  89F6 D3 FE        	out ($fe),a											; Azul.
 455  89F8
 456  89F8 FB           	ei
 457  89F9
 458  89F9 3A 77 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 459  89FC 47           	ld b,a
 460  89FD 3A 74 89     	ld a,(Contador_de_frames)
 461  8A00 B8           	cp b
 462  8A01 20 18        	jr nz,13F
 463  8A03
 464  8A03 3A 32 89     	ld a,(Numero_parcial_de_entidades)
 465  8A06 47           	ld b,a
 466  8A07 3A 33 89     	ld a,(Entidades_en_curso)
 467  8A0A B8           	cp b
 468  8A0B 28 0E        	jr z,13F
 469  8A0D 30 0C        	jr nc,13F
 470  8A0F
 471  8A0F 3C           	inc a
 472  8A10 32 33 89     	ld (Entidades_en_curso),a
 473  8A13
 474  8A13 3A 77 89     	ld a,(Clock_Entidades_en_curso)
 475  8A16
 476  8A16              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 477  8A16              ;! _ IMPREDECIBLE !!!!
 478  8A16
 479  8A16 C6 64        	add 100
 480  8A18 32 77 89     	ld (Clock_Entidades_en_curso),a
 481  8A1B
 482  8A1B              ; Habilita disparos.
 483  8A1B
 484  8A1B 21 79 89     13 ld hl,Disparo_Amadeus
 485  8A1E 11 7B 89     	ld de,CLOCK_repone_disparo_Amadeus
 486  8A21 CD BF 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 487  8A24
 488  8A24 21 7C 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 489  8A27 11 7E 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 490  8A2A CD BF 9D     	call Habilita_disparos
 491  8A2D
 492  8A2D
 493  8A2D
 494  8A2D
 495  8A2D
 496  8A2D
 497  8A2D
 498  8A2D
 499  8A2D
 500  8A2D
 501  8A2D
 502  8A2D
 503  8A2D
 504  8A2D              ; COLISIONES.
 505  8A2D
 506  8A2D CD D0 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 507  8A30
 508  8A30              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 509  8A30              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 510  8A30              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 511  8A30
 512  8A30 AF           	xor a
 513  8A31 32 66 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 514  8A34
 515  8A34              ; Ahora, primero Amadeus.
 516  8A34              ;!!!
 517  8A34
 518  8A34 CD 18 8C     	call Inicia_punteros_de_cajas
 519  8A37 CD 9F 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 520  8A3A              ; 														; _ en DRAW.
 521  8A3A 3A E5 88     	ld a,(Filas)
 522  8A3D A7           	and a
 523  8A3E 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 524  8A40 CD B1 8D     	call Incrementa_punteros_de_cajas
 525  8A43 18 F2        	jr 12B
 526  8A45
 527  8A45              ; ---------------------------------------------------------------------------------------
 528  8A45
 529  8A45 3A 32 89     10 ld a,(Numero_parcial_de_entidades)
 530  8A48 47               ld b,a
 531  8A49 A7           	and a
 532  8A4A 20 14        	jr nz,11F
 533  8A4C
 534  8A4C 21 28 89     	ld hl,Ctrl_1
 535  8A4F CB 66        	bit 4,(hl)
 536  8A51 C2 DD 8A     	jp nz,16F
 537  8A54
 538  8A54 21 28 89     	ld hl,Ctrl_1
 539  8A57 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 540  8A59
 541  8A59 3A 74 89     	ld a,(Contador_de_frames)
 542  8A5C 3C           	inc a
 543  8A5D 32 78 89     	ld (Activa_recarga_cajas),a
 544  8A60
 545  8A60              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 546  8A60
 547  8A60 3A 33 89     11 ld a,(Entidades_en_curso)
 548  8A63 A7           	and a
 549  8A64 CA DD 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 550  8A67 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 551  8A68
 552  8A68              ; Código que ejecutamos con cada entidad:
 553  8A68              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 554  8A68
 555  8A68 C5           15 push bc 												; Nº de entidades en curso.
 556  8A69
 557  8A69              ; Impacto ???
 558  8A69
 559  8A69 3A FE 88     	ld a,(Impacto)
 560  8A6C A7           	and a
 561  8A6D 28 2D        	jr z,8F
 562  8A6F
 563  8A6F              ; Hay Impacto en esta entidad.
 564  8A6F
 565  8A6F 21 76 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 566  8A72 35           	dec (hl)
 567  8A73 20 62        	jr nz,17F
 568  8A75
 569  8A75              ;! Velocidad de la animación de la explosión.
 570  8A75
 571  8A75 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 572  8A77              ;														; _,(velocidad de la explosión).
 573  8A77 CD CF 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 574  8A7A
 575  8A7A              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 576  8A7A
 577  8A7A 3A 26 89     	ld a,(Ctrl_2)
 578  8A7D CB 4F        	bit 1,a
 579  8A7F 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 580  8A81
 581  8A81              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 582  8A81
 583  8A81 3A ED 88     	ld a,(CTRL_DESPLZ)
 584  8A84 A7           	and a
 585  8A85 20 08        	jr nz,18F
 586  8A87
 587  8A87 21 84 84     	ld hl,Indice_Explosion_2x2-2
 588  8A8A 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 589  8A8D 18 06        	jr 19F
 590  8A8F
 591  8A8F 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 592  8A92 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 593  8A95
 594  8A95 21 26 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 595  8A98 CB CE        	set 1,(hl)
 596  8A9A 18 22        	jr 7F
 597  8A9C
 598  8A9C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 599  8A9C              ; _con las coordenadas de la entidad almacenada en DRAW.
 600  8A9C
 601  8A9C 3A 28 89     8 ld a,(Ctrl_1)
 602  8A9F CB 57        	bit 2,a
 603  8AA1 28 1B        	jr z,7F
 604  8AA3
 605  8AA3 2A 69 89     	ld hl,(Coordenadas_disparo_certero)
 606  8AA6 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 607  8AA7              ;														; E contiene la coordenada_X del disparo.
 608  8AA7 2A EB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 609  8AAA              ;														; H FILA, (Coordenada_y de la entidad).
 610  8AAA A7           	and a
 611  8AAB ED 52        	sbc hl,de
 612  8AAD
 613  8AAD CD 07 93     	call Determina_resultado_comparativa
 614  8AB0
 615  8AB0 78           	ld a,b
 616  8AB1 A7           	and a
 617  8AB2 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 618  8AB4
 619  8AB4              ; ----- ----- -----
 620  8AB4
 621  8AB4 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 622  8AB6 32 FE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 623  8AB9
 624  8AB9 21 28 89     	ld hl,Ctrl_1
 625  8ABC CB 96        	res 2,(hl)
 626  8ABE
 627  8ABE CD 41 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 628  8AC1
 629  8AC1 3A 13 89     	ld a,(Ctrl_0)
 630  8AC4 CB 67        	bit 4,a
 631  8AC6 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 632  8AC8
 633  8AC8              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 634  8AC8              ; [[[
 635  8AC8 CD 3A 8E     	call Detecta_disparo_entidad
 636  8ACB              ; ]]]
 637  8ACB CD DF 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 638  8ACE
 639  8ACE 21 13 89     	ld hl,Ctrl_0
 640  8AD1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 641  8AD3 AF           	xor a
 642  8AD4 32 14 89     	ld (Obj_dibujado),a
 643  8AD7
 644  8AD7 CD 64 8D     17 call Store_Restore_cajas
 645  8ADA
 646  8ADA C1           	pop bc
 647  8ADB 10 8B        	djnz 15B
 648  8ADD
 649  8ADD              ; ------------------------------------
 650  8ADD
 651  8ADD              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 652  8ADD              ; Hemos gestionado todas las unidades.
 653  8ADD              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 654  8ADD
 655  8ADD              ;	ld hl,Ctrl_1
 656  8ADD              ;	res 2,(hl)
 657  8ADD
 658  8ADD              ; ------------------------------------
 659  8ADD
 660  8ADD              ; Tras la gestión de las entidades, ... AMADEUS.
 661  8ADD
 662  8ADD CD C6 8D     16 call Restore_Amadeus
 663  8AE0
 664  8AE0              ;! Activa/desactiva impacto con Amadeus.
 665  8AE0
 666  8AE0 3A FE 88     	ld a,(Impacto)
 667  8AE3 A7           	and a
 668  8AE4 20 FE        	jr nz,$
 669  8AE6
 670  8AE6              ; Hemos tomado foto?
 671  8AE6
 672  8AE6 3A 28 89     	ld a,(Ctrl_1)
 673  8AE9 CB 7F        	bit 7,a
 674  8AEB 20 1B        	jr nz,32F
 675  8AED
 676  8AED CD A0 8B     	call Mov_Amadeus
 677  8AF0
 678  8AF0 3A 13 89     	ld a,(Ctrl_0)
 679  8AF3 CB 67        	bit 4,a
 680  8AF5 28 08        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 681  8AF7
 682  8AF7 CD DF 8B     	call Guarda_foto_entidad_a_pintar
 683  8AFA              ;	call Guarda_datos_de_borrado_Amadeus
 684  8AFA
 685  8AFA 21 28 89     	ld hl,Ctrl_1
 686  8AFD CB FE        	set 7,(hl)											; Indica que hemos tomado la foto de Amadeus.
 687  8AFF
 688  8AFF 21 13 89     14 ld hl,Ctrl_0
 689  8B02 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 690  8B04
 691  8B04 AF           	xor a
 692  8B05 32 14 89     	ld (Obj_dibujado),a
 693  8B08
 694  8B08 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 695  8B0B CD D8 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 696  8B0E
 697  8B0E              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 698  8B0E
 699  8B0E              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 700  8B0E
 701  8B0E              ;	call Calcula_numero_de_disparotes
 702  8B0E
 703  8B0E CD 5F 8C      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 704  8B11              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 705  8B11              ;														; _ interrupción.
 706  8B11 3E 01        	ld a,1
 707  8B13 D3 FE        	out ($fe),a
 708  8B15
 709  8B15              ; ----------------------------------------
 710  8B15
 711  8B15 3A 28 89     	ld a,(Ctrl_1) 										; Existe Loop?
 712  8B18 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 713  8B1A CA F4 89     	jp z,Main
 714  8B1D
 715  8B1D              ; -----
 716  8B1D              ;	(((
 717  8B1D
 718  8B1D 3A 74 89     	ld a,(Contador_de_frames)
 719  8B20 47           	ld b,a
 720  8B21 3A 78 89     	ld a,(Activa_recarga_cajas)
 721  8B24 B8           	cp b
 722  8B25 28 08        	jr z,20F
 723  8B27
 724  8B27 21 28 89     	ld hl,Ctrl_1
 725  8B2A CB E6        	set 4,(hl)
 726  8B2C C3 F4 89     	jp Main
 727  8B2F
 728  8B2F 21 28 89     20 ld hl,Ctrl_1
 729  8B32 CB A6        	res 4,(hl)
 730  8B34 F3           	di
 731  8B35
 732  8B35 3A 74 89     	ld a,(Contador_de_frames)
 733  8B38
 734  8B38              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 735  8B38              ;! _ IMPREDECIBLE !!!!
 736  8B38
 737  8B38 C6 0A        	add 10
 738  8B3A 32 77 89     	ld (Clock_Entidades_en_curso),a
 739  8B3D
 740  8B3D C3 99 89     	jp 4B
 741  8B40
 742  8B40 C9           	ret
 743  8B41
 744  8B41              ; --------------------------------------------------------------------------------------------------------------
 745  8B41              ;
 746  8B41              ;	27/05/23
 747  8B41
 748  8B41              Mov_obj
 749  8B41
 750  8B41 3A 26 89     	ld a,(Ctrl_2)
 751  8B44 CB 4F        	bit 1,a
 752  8B46 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 753  8B48
 754  8B48              ; Explosión:
 755  8B48
 756  8B48 3A 27 89     	ld a,(Frames_explosion)
 757  8B4B A7           	and a
 758  8B4C 20 11        	jr nz,4F
 759  8B4E
 760  8B4E              ; Una alimaña menos!!!!!!!!!1
 761  8B4E
 762  8B4E CD E1 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 763  8B51 21 32 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 764  8B54 35           	dec (hl)
 765  8B55 21 33 89     	ld hl,Entidades_en_curso
 766  8B58 35           	dec (hl)
 767  8B59 21 31 89     	ld hl,Numero_de_entidades
 768  8B5C 35           	dec (hl)
 769  8B5D 18 40        	jr 3F
 770  8B5F
 771  8B5F              ; -----
 772  8B5F
 773  8B5F              ;	`Movemos´ la explosión.
 774  8B5F
 775  8B5F 2A F3 88     4 ld hl,(Puntero_DESPLZ_der)
 776  8B62 23           	inc hl
 777  8B63 23           	inc hl
 778  8B64 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 779  8B67 CD 16 8D     	call Extrae_address
 780  8B6A 22 E9 88     	ld (Puntero_objeto),hl
 781  8B6D
 782  8B6D 21 27 89     	ld hl,Frames_explosion
 783  8B70 35           	dec (hl)
 784  8B71
 785  8B71 CD CF 8B     	call Guarda_foto_entidad_a_borrar
 786  8B74 18 29        	jr 3F
 787  8B76
 788  8B76 AF           2 xor a
 789  8B77 32 14 89     	ld (Obj_dibujado),a
 790  8B7A 32 13 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 791  8B7D              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 792  8B7D              ; 														; _de la entidad.
 793  8B7D CD E9 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 794  8B80              ;														; Obj_dibujado="0".
 795  8B80              ; Movemos Entidades malignas.
 796  8B80
 797  8B80              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 798  8B80              ;	and a 												; _a movernos. (Limitador_de_entidades).
 799  8B80              ;	ret z
 800  8B80
 801  8B80 CD 6A 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 802  8B83
 803  8B83 3A 13 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 804  8B86 CB 67        	bit 4,a
 805  8B88 C8           	ret z
 806  8B89
 807  8B89              ; Ha habido desplazamiento de la entidad maligna.
 808  8B89              ; Ha llegado a zona de AMADEUS ???
 809  8B89
 810  8B89 3A EC 88     	ld a,(Coordenada_y)
 811  8B8C FE 14        	cp $14
 812  8B8E D4 95 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 813  8B91              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 814  8B91              ; ---------
 815  8B91
 816  8B91 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 817  8B93 32 14 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 818  8B96 CD E9 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 819  8B99 CD 00 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 820  8B9C CD CF 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 821  8B9F C9           3 ret													; _de la misma.
 822  8BA0
 823  8BA0              ; --------------------------------------------------------------------------------------------------------------
 824  8BA0              ;
 825  8BA0              ;	29/1/23
 826  8BA0
 827  8BA0              Mov_Amadeus
 828  8BA0
 829  8BA0 AF           	xor a
 830  8BA1 32 14 89     	ld (Obj_dibujado),a
 831  8BA4 CD E9 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 832  8BA7              ;														; Obj_dibujado="0".
 833  8BA7              ; Movemos Amadeus.
 834  8BA7
 835  8BA7 CD 03 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 836  8BAA
 837  8BAA 3A 13 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 838  8BAD CB 67        	bit 4,a
 839  8BAF C8           	ret z
 840  8BB0
 841  8BB0              ; ---------
 842  8BB0
 843  8BB0 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 844  8BB2 32 14 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 845  8BB5 CD E9 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 846  8BB8 CD 00 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 847  8BBB CD CF 8B     	call Guarda_foto_entidad_a_borrar					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 848  8BBE              ;														; _de la nave.
 849  8BBE              ;	call Repone_datos_de_borrado_Amadeus
 850  8BBE              ;	call Limpia_almacen_de_borrado_Amadeus
 851  8BBE
 852  8BBE C9           	ret
 853  8BBF
 854  8BBF              ; -----------------------------------------------------------------------------------
 855  8BBF
 856  8BBF CD 1C 8D     Inicia_entidad	call Inicia_Puntero_objeto
 857  8BC2 CD 0F 9A     	call Recompone_posicion_inicio
 858  8BC5 CD EE 93     	call Draw
 859  8BC8 CD A0 7F     	call Guarda_foto_registros
 860  8BCB CD 64 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 861  8BCE C9           	ret
 862  8BCF
 863  8BCF              ; --------------------------------------------------------------------------------------------------------------
 864  8BCF              ;
 865  8BCF              ;	31/8/23
 866  8BCF              ;
 867  8BCF              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 868  8BCF
 869  8BCF              Guarda_foto_entidad_a_borrar
 870  8BCF
 871  8BCF CD D2 96     	call Prepara_draw
 872  8BD2 CD 02 96     	call calcula_CColumnass
 873  8BD5 CD 39 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 874  8BD8 CD 98 96     	call Define_rutina_de_impresion
 875  8BDB CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 876  8BDE C9           	ret
 877  8BDF
 878  8BDF              ; --------------------------------------------------------------------------------------------------------------
 879  8BDF              ;
 880  8BDF              ;	31/08/23
 881  8BDF              ;
 882  8BDF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 883  8BDF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 884  8BDF
 885  8BDF              Guarda_foto_entidad_a_pintar
 886  8BDF
 887  8BDF CD 0C 8C     	call Repone_pintar
 888  8BE2 CD EE 93     	call Draw
 889  8BE5 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 890  8BE8 C9           	ret
 891  8BE9
 892  8BE9              ; --------------------------------------------------------------------------------------------------------------
 893  8BE9              ;
 894  8BE9              ;
 895  8BE9
 896  8BE9 21 E5 88     Prepara_var_pintado_borrado	ld hl,Filas
 897  8BEC 3A 14 89     	ld a,(Obj_dibujado)
 898  8BEF A7           	and a
 899  8BF0 28 05        	jr z,1F
 900  8BF2 11 09 89     	ld de,Variables_de_pintado
 901  8BF5 18 03        	jr 2F
 902  8BF7 11 FF 88     1 ld de,Variables_de_borrado
 903  8BFA 01 08 00     2 ld bc,8
 904  8BFD ED B0        	ldir
 905  8BFF C9           	ret
 906  8C00
 907  8C00              ; --------------------------------------------------------------------------------------------------------------
 908  8C00
 909  8C00 21 FF 88     Repone_borrar ld hl,Variables_de_borrado
 910  8C03 11 E5 88     	ld de,Filas
 911  8C06 01 08 00     	ld bc,8
 912  8C09 ED B0        	ldir
 913  8C0B C9           	ret
 914  8C0C
 915  8C0C 21 09 89     Repone_pintar ld hl,Variables_de_pintado
 916  8C0F 11 E5 88     	ld de,Filas
 917  8C12 01 08 00     	ld bc,8
 918  8C15 ED B0        	ldir
 919  8C17 C9           	ret
 920  8C18
 921  8C18              ; *************************************************************************************************************************************************************
 922  8C18              ;
 923  8C18              ; 8/1/23
 924  8C18              ;
 925  8C18              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 926  8C18              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 927  8C18              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 928  8C18
 929  8C18              ; Destruye HL y DE !!!!!
 930  8C18
 931  8C18              Inicia_punteros_de_cajas
 932  8C18
 933  8C18 21 8C 85     	ld hl,Indice_de_cajas
 934  8C1B CD 16 8D         call Extrae_address
 935  8C1E 22 2B 89         ld (Puntero_store_caja),hl
 936  8C21 21 8E 85     	ld hl,Indice_de_cajas+2
 937  8C24 22 2F 89     	ld (Indice_restore_caja),hl
 938  8C27 CD 16 8D     	call Extrae_address
 939  8C2A 22 2D 89     	ld (Puntero_restore_caja),hl
 940  8C2D C9               ret
 941  8C2E
 942  8C2E              ; ---------------------------------------------------------------
 943  8C2E              ;
 944  8C2E              ;	9/8/23
 945  8C2E              ;
 946  8C2E              ;	Inicialización y gestión de álbumes de fotos y cajas.
 947  8C2E
 948  8C2E              Inicia_punteros_de_albumes_y_malotes
 949  8C2E
 950  8C2E 21 EC 84     	ld hl,Indice_album_de_fotos
 951  8C31 22 55 89     	ld (Puntero_indice_album_de_fotos),hl
 952  8C34 CD 16 8D     	call Extrae_address
 953  8C37 22 3F 89     	ld (Stack_snapshot),hl
 954  8C3A
 955  8C3A 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 956  8C3D 22 57 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 957  8C40 CD 16 8D     	call Extrae_address
 958  8C43 22 41 89     	ld (Stack_snapshot_disparos),hl
 959  8C46
 960  8C46 21 FC 84     	ld hl,Indice_End_Snapshot
 961  8C49 22 59 89     	ld (Puntero_indice_End_Snapshot),hl
 962  8C4C CD 16 8D     	call Extrae_address
 963  8C4F 22 5D 89     	ld (Puntero_de_End_Snapshot),hl
 964  8C52
 965  8C52 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 966  8C55 22 5B 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 967  8C58 CD 16 8D     	call Extrae_address
 968  8C5B 22 5F 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 969  8C5E
 970  8C5E C9           	ret
 971  8C5F
 972  8C5F              ;	2/9/23
 973  8C5F
 974  8C5F              Avanza_puntero_de_album_de_fotos_y_malotes
 975  8C5F
 976  8C5F              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 977  8C5F
 978  8C5F              ; Estamos en el último álbum del índice???.
 979  8C5F
 980  8C5F 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
 981  8C62 01 F2 84     	ld bc,Indice_album_de_fotos+6
 982  8C65 A7           	and a
 983  8C66 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 984  8C68 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 985  8C6A
 986  8C6A 21 28 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 987  8C6D CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 988  8C6F 76           	halt
 989  8C70 C9           	ret
 990  8C71
 991  8C71 F3           1 di
 992  8C72 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
 993  8C75 23           	inc hl
 994  8C76 23           	inc hl
 995  8C77 22 55 89     	ld (Puntero_indice_album_de_fotos),hl
 996  8C7A CD 16 8D     	call Extrae_address
 997  8C7D 22 3F 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 998  8C80
 999  8C80 2A 59 89     	ld hl,(Puntero_indice_End_Snapshot)
1000  8C83 23           	inc hl
1001  8C84 23           	inc hl
1002  8C85 22 59 89     	ld (Puntero_indice_End_Snapshot),hl
1003  8C88 CD 16 8D     	call Extrae_address
1004  8C8B 22 5D 89     	ld (Puntero_de_End_Snapshot),hl
1005  8C8E FB           	ei
1006  8C8F
1007  8C8F C9           	ret
1008  8C90
1009  8C90              ; *************************************************************************************************************************************************************
1010  8C90              ;
1011  8C90              ; 8/1/23
1012  8C90              ;
1013  8C90              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1014  8C90
1015  8C90 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1016  8C93 22 62 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1017  8C96 C9           	ret
1018  8C97 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1019  8C9A 22 64 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1020  8C9D C9           	ret
1021  8C9E
1022  8C9E              ; -------------------------------------------------------------------------------------------------------------
1023  8C9E              ;
1024  8C9E              ; 4/9/23
1025  8C9E              ;
1026  8C9E
1027  8C9E              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1028  8C9E
1029  8C9E 21 A0 72     Limpia_album_Amadeus ld hl,Album_de_fotos_Amadeus
1030  8CA1 7E           	ld a,(hl)
1031  8CA2 A7           	and a
1032  8CA3 C8           	ret z
1033  8CA4
1034  8CA4 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1035  8CA7 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1036  8CAA 01 0C 00     	ld bc,12
1037  8CAD AF           	xor a
1038  8CAE 77           	ld (hl),a
1039  8CAF ED B0        	ldir
1040  8CB1
1041  8CB1 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1042  8CB4 22 47 89     	ld (End_Snapshot_Amadeus),hl
1043  8CB7
1044  8CB7 C9           	ret
1045  8CB8
1046  8CB8 21 AD 72     Limpia_almacen_de_borrado_Amadeus ld hl,Almacen_de_borrado_Amadeus
1047  8CBB 11 AE 72     	ld de,Almacen_de_borrado_Amadeus+1
1048  8CBE 01 05 00     	ld bc,5
1049  8CC1 AF           	xor a
1050  8CC2 77           	ld (hl),a
1051  8CC3 ED B0        	ldir
1052  8CC5 C9           	ret
1053  8CC6
1054  8CC6              ; -------------------------------------------------------------------------------------------------------------
1055  8CC6              ;
1056  8CC6              ; 8/9/23
1057  8CC6              ;
1058  8CC6
1059  8CC6              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1060  8CC6              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1061  8CC6
1062  8CC6              Calcula_numero_de_malotes
1063  8CC6
1064  8CC6 21 00 70     	ld hl,Album_de_fotos
1065  8CC9 EB           	ex de,hl
1066  8CCA 2A 43 89     	ld hl,(End_Snapshot)
1067  8CCD
1068  8CCD 7C           	ld a,h
1069  8CCE A7           	and a
1070  8CCF 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1071  8CD1
1072  8CD1 06 00        4 ld b,0
1073  8CD3 7D           	ld a,l
1074  8CD4 93           	sub e
1075  8CD5 28 07        	jr z,1F
1076  8CD7
1077  8CD7              ; Nº de malotes no es "0".
1078  8CD7
1079  8CD7 D6 06        2 sub 6
1080  8CD9 04           	inc b
1081  8CDA A7           	and a
1082  8CDB 20 FA        	jr nz,2B
1083  8CDD 78           	ld a,b
1084  8CDE
1085  8CDE 32 34 89     1 ld (Numero_de_malotes),a
1086  8CE1 C9           	ret
1087  8CE2
1088  8CE2              ; -------------------------------------------------------------------------------------------------------------
1089  8CE2              ;
1090  8CE2              ; 8/9/23
1091  8CE2              ;
1092  8CE2
1093  8CE2              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1094  8CE2              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1095  8CE2
1096  8CE2              Calcula_malotes_Amadeus
1097  8CE2
1098  8CE2 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1099  8CE5 EB           	ex de,hl
1100  8CE6 2A 47 89     	ld hl,(End_Snapshot_Amadeus)
1101  8CE9
1102  8CE9 7C           	ld a,h
1103  8CEA A7           	and a
1104  8CEB 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1105  8CED
1106  8CED 06 00        	ld b,0
1107  8CEF 7D           	ld a,l
1108  8CF0 93           	sub e
1109  8CF1 28 07        	jr z,1F
1110  8CF3
1111  8CF3              ; Nº de malotes no es "0".
1112  8CF3
1113  8CF3 D6 06        2 sub 6
1114  8CF5 04           	inc b
1115  8CF6 A7           	and a
1116  8CF7 20 FA        	jr nz,2B
1117  8CF9 78           	ld a,b
1118  8CFA
1119  8CFA 32 34 89     1 ld (Numero_de_malotes),a
1120  8CFD C9           	ret
1121  8CFE
1122  8CFE              ; -------------------------------------------------------------------------------------------------------------
1123  8CFE              ;
1124  8CFE              ; 28/2/23
1125  8CFE              ;
1126  8CFE
1127  8CFE              Calcula_numero_de_disparotes
1128  8CFE
1129  8CFE 21 50 71     	ld hl,Album_de_fotos_disparos
1130  8D01 EB           	ex de,hl
1131  8D02 2A 5F 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1132  8D05
1133  8D05 06 00        	ld b,0
1134  8D07 7D           	ld a,l
1135  8D08 93           	sub e
1136  8D09 28 07        	jr z,1F
1137  8D0B
1138  8D0B              ; Nº de malotes no es "0".
1139  8D0B
1140  8D0B D6 06        2 sub 6
1141  8D0D 04           	inc b
1142  8D0E A7           	and a
1143  8D0F 20 FA        	jr nz,2B
1144  8D11 78           	ld a,b
1145  8D12
1146  8D12 32 61 89     1 ld (Numero_de_disparotes),a
1147  8D15 C9           	ret
1148  8D16
1149  8D16              ; *************************************************************************************************************************************************************
1150  8D16              ;
1151  8D16              ; 20/10/22
1152  8D16              ;
1153  8D16              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1154  8D16              ;
1155  8D16              ; Destruye el puntero y DE !!!!!
1156  8D16
1157  8D16 5E           Extrae_address ld e,(hl)
1158  8D17 23           	inc hl
1159  8D18 56           	ld d,(hl)
1160  8D19 2B           	dec hl
1161  8D1A EB           	ex de,hl
1162  8D1B C9           	ret
1163  8D1C
1164  8D1C              ; *************************************************************************************************************************************************************
1165  8D1C              ;
1166  8D1C              ;	7/2/23
1167  8D1C              ;
1168  8D1C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1169  8D1C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1170  8D1C              ;
1171  8D1C              ;   Destruye HL y BC !!!!!,
1172  8D1C              ;
1173  8D1C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1174  8D1C              ;					"0" ..... Izquierda.
1175  8D1C
1176  8D1C              Inicia_Puntero_objeto
1177  8D1C
1178  8D1C 3A F9 88     	ld a,(Cuad_objeto)
1179  8D1F E6 01        	and 1
1180  8D21 F5           	push af
1181  8D22 CC 40 8D     	call z,Inicia_puntero_objeto_izq
1182  8D25 F1           	pop af
1183  8D26 28 2B        	jr z,1F
1184  8D28 CD 2D 8D     	call Inicia_puntero_objeto_der
1185  8D2B 18 26        	jr 1F
1186  8D2D
1187  8D2D              ; Arrancamos desde la parte izquierda de la pantalla.
1188  8D2D              ; Iniciamos (Indice_Sprite_der).
1189  8D2D
1190  8D2D 2A EF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1191  8D30 22 F3 88     	ld (Puntero_DESPLZ_der),hl
1192  8D33 CD 16 8D     	call Extrae_address
1193  8D36 22 E9 88     	ld (Puntero_objeto),hl
1194  8D39
1195  8D39 2A F1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1196  8D3C 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
1197  8D3F C9           	ret
1198  8D40
1199  8D40              ; Arrancamos desde la parte derecha de la pantalla.
1200  8D40              ; Iniciamos (Indice_Sprite_izq).
1201  8D40
1202  8D40 2A F1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1203  8D43 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
1204  8D46 CD 16 8D     	call Extrae_address
1205  8D49 22 E9 88     	ld (Puntero_objeto),hl
1206  8D4C
1207  8D4C 2A EF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1208  8D4F 22 F3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1209  8D52 C9           	ret
1210  8D53
1211  8D53              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1212  8D53
1213  8D53 21 40 83     1 ld hl,Amadeus
1214  8D56 ED 4B E9 88  	ld bc,(Puntero_objeto)
1215  8D5A B7 ED 42     	sub hl,bc
1216  8D5D C0           	ret nz
1217  8D5E 21 13 89     	ld hl,Ctrl_0
1218  8D61 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1219  8D63 C9           	ret 												; _de nuestra nave en los extremos.
1220  8D64
1221  8D64              ; *************************************************************************************************************************************************************
1222  8D64              ;
1223  8D64              ;	14/5/23
1224  8D64              ;
1225  8D64              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1226  8D64              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1227  8D64
1228  8D64              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1229  8D64              ;	_de la 2ª y 3ª entidad respectivamente.
1230  8D64
1231  8D64              Store_Restore_cajas
1232  8D64
1233  8D64 E5           	push hl
1234  8D65 D5           	push de
1235  8D66 C5            	push bc
1236  8D67
1237  8D67              ;	STORE !!!!!
1238  8D67              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1239  8D67
1240  8D67 21 E5 88     	ld hl,Filas
1241  8D6A ED 5B 2B 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1242  8D6E 01 43 00     	ld bc,67
1243  8D71 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1244  8D73
1245  8D73              ; 	Entidad_sospechosa. 20/4/23
1246  8D73
1247  8D73 3A FE 88     	ld a,(Impacto)
1248  8D76 A7           	and a
1249  8D77 28 0C        	jr z,1F
1250  8D79
1251  8D79 2A 2B 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1252  8D7C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1253  8D7F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1254  8D80 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1255  8D82 22 67 89     	ld (Entidad_sospechosa_de_colision),hl
1256  8D85
1257  8D85              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1258  8D85
1259  8D85 2A 2D 89     1 ld hl,(Puntero_restore_caja)
1260  8D88 7E           	ld a,(hl)
1261  8D89 A7           	and a
1262  8D8A F5           	push af
1263  8D8B 28 08        	jr z,2F
1264  8D8D
1265  8D8D 11 E5 88     	ld de,Filas
1266  8D90 01 43 00     	ld bc,67
1267  8D93 ED B0        	ldir
1268  8D95
1269  8D95 CD B1 8D     2 call Incrementa_punteros_de_cajas
1270  8D98 F1           	pop af
1271  8D99 28 EA        	jr z,1B
1272  8D9B
1273  8D9B C1           	pop bc
1274  8D9C D1           	pop de
1275  8D9D E1           	pop hl
1276  8D9E
1277  8D9E C9           	ret
1278  8D9F
1279  8D9F              ; **************************************************************************************************
1280  8D9F              ;
1281  8D9F              ;	12/05/23
1282  8D9F              ;
1283  8D9F              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1284  8D9F
1285  8D9F E5           Restore_entidad push hl
1286  8DA0 D5           	push de
1287  8DA1 C5            	push bc
1288  8DA2
1289  8DA2 2A 2B 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1290  8DA5 11 E5 88     	ld de,Filas
1291  8DA8 01 43 00     	ld bc,67
1292  8DAB ED B0        	ldir
1293  8DAD
1294  8DAD C1           	pop bc
1295  8DAE D1           	pop de
1296  8DAF E1           	pop hl
1297  8DB0 C9           	ret
1298  8DB1
1299  8DB1
1300  8DB1              ; **************************************************************************************************
1301  8DB1              ;
1302  8DB1              ;	08/05/23
1303  8DB1              ;
1304  8DB1              ;	Incrementamos los dos punteros de entidades. (+1).
1305  8DB1
1306  8DB1 2A 2D 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1307  8DB4 22 2B 89     	ld (Puntero_store_caja),hl
1308  8DB7 2A 2F 89     	ld hl,(Indice_restore_caja)
1309  8DBA 23           	inc hl
1310  8DBB 23           	inc hl
1311  8DBC 22 2F 89     	ld (Indice_restore_caja),hl
1312  8DBF CD 16 8D         call Extrae_address
1313  8DC2 22 2D 89         ld (Puntero_restore_caja),hl
1314  8DC5 C9               ret
1315  8DC6
1316  8DC6              ; **************************************************************************************************
1317  8DC6              ;
1318  8DC6              ;	25/01/23
1319  8DC6              ;
1320  8DC6              ;	Restore_Amadeus
1321  8DC6              ;
1322  8DC6              ;	Cargamos en DRAW los parámetros de Amadeus.
1323  8DC6              ;
1324  8DC6
1325  8DC6 E5           Restore_Amadeus	push hl
1326  8DC7 D5           	push de
1327  8DC8 C5            	push bc
1328  8DC9 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1329  8DCC 11 E5 88     	ld de,Filas
1330  8DCF 01 43 00     	ld bc,67
1331  8DD2 ED B0        	ldir
1332  8DD4 C1           	pop bc
1333  8DD5 D1           	pop de
1334  8DD6 E1           	pop hl
1335  8DD7 C9           	ret
1336  8DD8
1337  8DD8              ; *************************************************************************************************************************************************************
1338  8DD8              ;
1339  8DD8              ;	29/04/23
1340  8DD8              ;
1341  8DD8              ;	Store_Amadeus
1342  8DD8              ;
1343  8DD8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1344  8DD8              ;
1345  8DD8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1346  8DD8              ;
1347  8DD8              ;	DESTRUYE: HL y BC y DE.
1348  8DD8
1349  8DD8 21 E5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1350  8DDB 01 43 00     	ld bc,67
1351  8DDE ED B0        	ldir
1352  8DE0 C9           	ret
1353  8DE1
1354  8DE1              ; -----------------------------------------------------------
1355  8DE1              ;
1356  8DE1              ;	27/04/23
1357  8DE1              ;
1358  8DE1              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1359  8DE1              ;
1360  8DE1              ;	Destruye: HL,BC,DE,A
1361  8DE1
1362  8DE1 21 E5 88     Borra_datos_entidad ld hl,Filas
1363  8DE4 01 42 00     	ld bc,66
1364  8DE7 AF           	xor a
1365  8DE8 77           	ld (hl),a
1366  8DE9 11 E6 88     	ld de,Filas+1
1367  8DEC ED B0        	ldir
1368  8DEE C9           	ret
1369  8DEF
1370  8DEF              ; -----------------------------------------------------------
1371  8DEF
1372  8DEF              ; Teclado.
1373  8DEF
1374  8DEF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1375  8DF1 DB FE        	in a,($fe)
1376  8DF3 E6 01        	and $01
1377  8DF5 28 02        	jr z,1f
1378  8DF7 18 F6        	jr Pulsa_ENTER
1379  8DF9 C9           1 ret
1380  8DFA
1381  8DFA              ; **************************************************************************************************
1382  8DFA              ;
1383  8DFA              ; Temporización.
1384  8DFA
1385  8DFA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1386  8DFA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1387  8DFA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1388  8DFA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1389  8DFA
1390  8DFA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1391  8DFA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1392  8DFA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1393  8DFA
1394  8DFA              ; A partir de $4f61 no hace falta DELAY.
1395  8DFA
1396  8DFA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1397  8DFA
1398  8DFA 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1399  8DFD 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1400  8DFE 78           	LD A,B
1401  8DFF A7           	AND A
1402  8E00 20 FB        	JR NZ,wait
1403  8E02 C9           	RET
1404  8E03
1405  8E03              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1406  8E03              ;
1407  8E03              ;	5/3/23
1408  8E03              ;
1409  8E03              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1410  8E03
1411  8E03              Movimiento_Amadeus
1412  8E03
1413  8E03              ; Disparo.
1414  8E03
1415  8E03 3A 79 89     	ld a,(Disparo_Amadeus)
1416  8E06 A7           	and a
1417  8E07 20 02        	jr nz,1F
1418  8E09 18 15        	jr 2F
1419  8E0B
1420  8E0B 3E F7        1 ld a,$f7													; "5" para disparar.
1421  8E0D DB FE        	in a,($fe)
1422  8E0F E6 10        	and $10
1423  8E11
1424  8E11 F5           	push af
1425  8E12 CC F8 8E     	call z,Genera_disparo
1426  8E15 F1           	pop af
1427  8E16 20 08        	jr nz,2F
1428  8E18
1429  8E18 3A 79 89     	ld a,(Disparo_Amadeus)
1430  8E1B EE 01        	xor 1
1431  8E1D 32 79 89     	ld (Disparo_Amadeus),a
1432  8E20
1433  8E20 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1434  8E22 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1435  8E24 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1436  8E26 CC C9 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1437  8E29
1438  8E29 3E F7        	ld a,$f7
1439  8E2B DB FE        	in a,($fe)
1440  8E2D E6 01        	and $01
1441  8E2F C8           	ret z
1442  8E30
1443  8E30 3E F7        	ld a,$f7
1444  8E32 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1445  8E34 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1446  8E36 CC AB 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1447  8E39 C9           	ret
1448  8E3A
1449  8E3A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1450  8E3A              ;
1451  8E3A              ;	Rutina provisional para que los malotes cagen balas.
1452  8E3A
1453  8E3A              Detecta_disparo_entidad
1454  8E3A
1455  8E3A 3A 7C 89     	ld a,(Disparo_entidad)
1456  8E3D A7           	and a
1457  8E3E C8           	ret z
1458  8E3F
1459  8E3F              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1460  8E3F
1461  8E3F              ;	ld a,$7f				; Detecta SPACE.
1462  8E3F              ;	in a,($fe)
1463  8E3F              ;	and 1
1464  8E3F              ;	ret nz
1465  8E3F
1466  8E3F              ;	call Genera_disparo
1467  8E3F C9           	ret
1468  8E40
1469  8E40              ; ----------------------------------------------------------------------
1470  8E40              ;
1471  8E40              ;	8/9/23
1472  8E40
1473  8E40              Guarda_datos_de_borrado_Amadeus
1474  8E40
1475  8E40 2A 47 89     	ld hl,(End_Snapshot_Amadeus)
1476  8E43 2B           	dec hl
1477  8E44 7E           	ld a,(hl)
1478  8E45 A7           	and a
1479  8E46 C8           	ret z										; Salimos si es álbum está vacío.
1480  8E47
1481  8E47 11 B2 72     	ld de,Almacen_de_borrado_Amadeus+5
1482  8E4A 01 06 00     	ld bc,6
1483  8E4D ED B8        	lddr
1484  8E4F C9           	ret
1485  8E50
1486  8E50              ; ----------------------------------------------------------------------
1487  8E50              ;
1488  8E50              ;	9/9/23
1489  8E50
1490  8E50              Repone_datos_de_borrado_Amadeus
1491  8E50
1492  8E50 21 AD 72     	ld hl,Almacen_de_borrado_Amadeus
1493  8E53 11 A0 72     	ld de,Album_de_fotos_Amadeus
1494  8E56 01 06 00     	ld bc,6
1495  8E59 ED B0        	ldir
1496  8E5B
1497  8E5B EB           	ex de,hl
1498  8E5C 22 47 89     	ld (End_Snapshot_Amadeus),hl
1499  8E5F
1500  8E5F C9           	ret
1501  8E60
1502  8E60              ; ----------------------------------------------------------------------
1503  8E60              ;
1504  8E60              ;	11/8/23
1505  8E60
1506  8E60              Frame
1507  8E60
1508  8E60              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1509  8E60              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1510  8E60
1511  8E60              ; PINTAMOS.
1512  8E60
1513  8E60 ED 73 3D 89  	ld (Stack_3),sp
1514  8E64
1515  8E64              ; Guardamos registros y SP.
1516  8E64
1517  8E64 08           	ex af,af'
1518  8E65 F5           	push af	;af'
1519  8E66 D9           	exx
1520  8E67 E5           	push hl	;hl'
1521  8E68 D5           	push de	;de'
1522  8E69 C5           	push bc	;bc'
1523  8E6A D9           	exx
1524  8E6B E5           	push hl	;hl
1525  8E6C D5           	push de	;de
1526  8E6D C5           	push bc	;bc
1527  8E6E 08           	ex af,af'
1528  8E6F F5           	push af	;af
1529  8E70 DD E5        	push ix
1530  8E72 FD E5        	push iy
1531  8E74
1532  8E74 3E 02        	ld a,2
1533  8E76 D3 FE            out ($fe),a											; Rojo.
1534  8E78
1535  8E78              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1536  8E78              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1537  8E78
1538  8E78 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
1539  8E7B 01 EC 84     	ld bc,Indice_album_de_fotos
1540  8E7E A7           	and a
1541  8E7F ED 42        	sbc hl,bc
1542  8E81
1543  8E81 28 FE        	jr z,$
1544  8E83 28 4E        	jr z,6F
1545  8E85
1546  8E85 CD C6 8C     	call Calcula_numero_de_malotes
1547  8E88 CD FC 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1548  8E8B
1549  8E8B              ;	call Extrae_foto_disparos
1550  8E8B 3E 01            ld a,1
1551  8E8D D3 FE            out ($fe),a											; Azul.
1552  8E8F
1553  8E8F              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1554  8E8F CD B3 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1555  8E92
1556  8E92              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1557  8E92
1558  8E92 3A 28 89     	ld a,(Ctrl_1)
1559  8E95 CB 6F        	bit 5,a
1560  8E97 20 24        	jr nz,1F
1561  8E99
1562  8E99              ; No hemos terminado de guardar el último FRAME.
1563  8E99
1564  8E99 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
1565  8E9C              ;	ld bc,Indice_album_de_fotos
1566  8E9C 2B           	dec hl
1567  8E9D 2B           	dec hl
1568  8E9E
1569  8E9E              ;	ld a,l
1570  8E9E              ;	sub c
1571  8E9E              ;	jr z,$
1572  8E9E
1573  8E9E 22 55 89     	ld (Puntero_indice_album_de_fotos),hl
1574  8EA1
1575  8EA1 2A 59 89     	ld hl,(Puntero_indice_End_Snapshot)
1576  8EA4 2B           	dec hl
1577  8EA5 2B           	dec hl
1578  8EA6 22 59 89     	ld (Puntero_indice_End_Snapshot),hl
1579  8EA9 CD 16 8D     	call Extrae_address
1580  8EAC 22 5D 89     	ld (Puntero_de_End_Snapshot),hl
1581  8EAF
1582  8EAF CD 16 8D     	call Extrae_address
1583  8EB2
1584  8EB2              ; Esta vacío este album???
1585  8EB2
1586  8EB2 24           	inc h
1587  8EB3 25           	dec h
1588  8EB4 20 02        	jr nz,5F
1589  8EB6
1590  8EB6              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1591  8EB6
1592  8EB6 18 05        	jr 1F
1593  8EB8
1594  8EB8 22 3F 89     5 ld (Stack_snapshot),hl
1595  8EBB 18 09        	jr 2F
1596  8EBD
1597  8EBD              ; FRAME completo.
1598  8EBD
1599  8EBD 2A 55 89     1 ld hl,(Puntero_indice_album_de_fotos)
1600  8EC0 CD 16 8D     	call Extrae_address
1601  8EC3 22 3F 89     	ld (Stack_snapshot),hl
1602  8EC6
1603  8EC6              ;	En este punto:
1604  8EC6
1605  8EC6              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1606  8EC6              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1607  8EC6
1608  8EC6              ; RELOJES.
1609  8EC6
1610  8EC6 21 74 89     2 ld hl,Contador_de_frames
1611  8EC9 7E           	ld a,(hl)
1612  8ECA FE FF        	cp $ff
1613  8ECC 20 04        	jr nz,3F
1614  8ECE 34           	inc (hl)
1615  8ECF 21 75 89     	ld hl,Contador_de_frames_2
1616  8ED2 34           3 inc (hl)											; 0 - 255
1617  8ED3
1618  8ED3 CD E2 8C     6 call Calcula_malotes_Amadeus
1619  8ED6 CD 7E 97     	call Extrae_foto_Amadeus
1620  8ED9 CD 9E 8C     	call Limpia_album_Amadeus
1621  8EDC
1622  8EDC 21 28 89     	ld hl,Ctrl_1
1623  8EDF CB AE        	res 5,(hl)
1624  8EE1 CB BE        	res 7,(hl)
1625  8EE3
1626  8EE3              ; Recuperamos registros y SP.
1627  8EE3
1628  8EE3 FD E1        	pop iy
1629  8EE5 DD E1        	pop ix
1630  8EE7 F1           	pop af
1631  8EE8 C1           	pop bc
1632  8EE9 D1           	pop de
1633  8EEA E1           	pop hl
1634  8EEB D9           	exx
1635  8EEC C1           	pop bc
1636  8EED D1           	pop de
1637  8EEE E1           	pop hl
1638  8EEF 08           	ex af,af'
1639  8EF0 F1           	pop af
1640  8EF1 08           	ex af,af'
1641  8EF2 D9           	exx
1642  8EF3
1643  8EF3 ED 7B 3D 89  	ld sp,(Stack_3)
1644  8EF7 C9           	ret
1645  8EF8
1646  8EF8              ; ---------------------------------------------------------------
1647  8EF8
1648  8EF8              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EF8              ; ******************************************************************************************************************************************************************************************
   2+ 8EF8              ;
   3+ 8EF8              ;   21/07/23
   4+ 8EF8              ;
   5+ 8EF8              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EF8              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EF8              ;
   8+ 8EF8              ;
   9+ 8EF8              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EF8              ;
  11+ 8EF8              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EF8              ;               _ hacen las entidades hacia abajo.
  13+ 8EF8              ;
  14+ 8EF8              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EF8              ;
  16+ 8EF8              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EF8              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EF8              ;
  19+ 8EF8              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EF8              ;           _ la bala.
  21+ 8EF8              ;
  22+ 8EF8              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EF8              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EF8              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EF8              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EF8              ;           _ en el momento de generarse la bala)).
  27+ 8EF8
  28+ 8EF8              Genera_disparo
  29+ 8EF8
  30+ 8EF8              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EF8              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EF8              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EF8              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EF8              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EF8              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EF8              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EF8
  38+ 8EF8              ; Exclusiones:
  39+ 8EF8
  40+ 8EF8 3A FD 88         ld a,(Vel_down)
  41+ 8EFB 47               ld b,a
  42+ 8EFC 3A 73 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EFF B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F00 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F01 3A 22 89         ld a,(Columnas)
  46+ 8F04 47               ld b,a
  47+ 8F05 3A E6 88         ld a,(Columns)
  48+ 8F08 B8               cp b
  49+ 8F09 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F0A
  51+ 8F0A              ; ----- ----- -----
  52+ 8F0A
  53+ 8F0A 3A 13 89         ld a,(Ctrl_0)
  54+ 8F0D CB 77            bit 6,a
  55+ 8F0F 20 06            jr nz,14F
  56+ 8F11
  57+ 8F11 3A EC 88         ld a,(Coordenada_y)
  58+ 8F14 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F16 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F17
  61+ 8F17 21 00 80     14 ld hl,Indice_disparo
  62+ 8F1A 3A ED 88         ld a,(CTRL_DESPLZ)
  63+ 8F1D 4F               ld c,a
  64+ 8F1E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F20              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F20              ;                                            ""        ""       "f9", B="1"
  67+ 8F20              ;                                            ""        ""       "fb", B="2"
  68+ 8F20              ;                                            ""        ""       "fb", B="3"
  69+ 8F20 A7               and a
  70+ 8F21 28 10            jr z,1F
  71+ 8F23 E6 01            and 1
  72+ 8F25 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F26
  74+ 8F26 79               ld a,c
  75+ 8F27 16 F9            ld d,$f9
  76+ 8F29 23           2 inc hl
  77+ 8F2A 23               inc hl
  78+ 8F2B 04               inc b
  79+ 8F2C BA               cp d
  80+ 8F2D 28 04            jr z,1F
  81+ 8F2F 14               inc d
  82+ 8F30 14               inc d
  83+ 8F31 18 F6            jr 2B
  84+ 8F33
  85+ 8F33 CD 16 8D     1 call Extrae_address
  86+ 8F36 E5               push hl
  87+ 8F37 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F39 DD 21 C4 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F3D
  90+ 8F3D              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F3D              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F3D
  93+ 8F3D 3A 13 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F40 CB 77            bit 6,a
  95+ 8F42 20 04            jr nz,19F
  96+ 8F44
  97+ 8F44 AF               xor a
  98+ 8F45 32 7C 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F48
 100+ 8F48 3A F9 88     19 ld a,(Cuad_objeto)
 101+ 8F4B FE 02            cp 2
 102+ 8F4D 38 66            jr c,3F
 103+ 8F4F 28 64            jr z,3F
 104+ 8F51
 105+ 8F51              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F51
 107+ 8F51 E6 01            and 1
 108+ 8F53 28 30            jr z,4F
 109+ 8F55
 110+ 8F55              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F55              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F55              ;
 113+ 8F55              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F55              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F55              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F55
 117+ 8F55 2A E7 88     	ld hl,(Posicion_actual)
 118+ 8F58
 119+ 8F58              ;   Amadeus o entidad ???.
 120+ 8F58
 121+ 8F58 3A 13 89         ld a,(Ctrl_0)
 122+ 8F5B CB 77            bit 6,a
 123+ 8F5D 28 0A            jr z,8F
 124+ 8F5F
 125+ 8F5F              ; 	Dispara Amadeus.
 126+ 8F5F
 127+ 8F5F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F61 CD ED 96         call PreviousScan
 129+ 8F64 CD ED 96         call PreviousScan
 130+ 8F67
 131+ 8F67              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F67              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F67              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F67              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F67
 136+ 8F67 18 11            jr 10F
 137+ 8F69
 138+ 8F69              ; 	Dispara Entidad.
 139+ 8F69
 140+ 8F69 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F6C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F6C
 143+ 8F6C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F6C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F6C
 146+ 8F6C C5               push bc
 147+ 8F6D 06 10            ld b,16
 148+ 8F6F CD DE 96     9 call NextScan
 149+ 8F72 10 FB            djnz 9B
 150+ 8F74 C1               pop bc
 151+ 8F75 CD DF 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F78 18 06            jr 17F
 153+ 8F7A
 154+ 8F7A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F7A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F7A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F7A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F7A
 159+ 8F7A CD DF 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F7D CD 54 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F80              ;                                                      ; _al generar el disparo.
 162+ 8F80
 163+ 8F80              ; 	LLegados a este punto tendremos:
 164+ 8F80              ;
 165+ 8F80              ;       Puntero_objeto_disparo en IY.
 166+ 8F80              ;       Rutinas_de_impresion en IX.
 167+ 8F80              ;       Puntero_de_impresion en HL.
 168+ 8F80              ;       Impacto/Dirección en BC.
 169+ 8F80
 170+ 8F80 CD E7 8F     17 call Almacena_disparo
 171+ 8F83 18 52            jr 6F                                             ; RET.
 172+ 8F85
 173+ 8F85              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F85              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F85              ;
 176+ 8F85              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F85              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F85              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F85
 180+ 8F85 2A E7 88     4 ld hl,(Posicion_actual)
 181+ 8F88
 182+ 8F88              ;   Amadeus o entidad ???.
 183+ 8F88
 184+ 8F88 3A 13 89         ld a,(Ctrl_0)
 185+ 8F8B CB 77            bit 6,a
 186+ 8F8D 28 0A            jr z,11F
 187+ 8F8F
 188+ 8F8F              ; 	Dispara Amadeus.
 189+ 8F8F
 190+ 8F8F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F91 CD ED 96         call PreviousScan
 192+ 8F94 CD ED 96         call PreviousScan
 193+ 8F97
 194+ 8F97              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F97              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F97              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F97              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F97
 199+ 8F97 18 11            jr 13F
 200+ 8F99
 201+ 8F99              ; 	Dispara Entidad.
 202+ 8F99
 203+ 8F99 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F9C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F9C
 206+ 8F9C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F9C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F9C
 209+ 8F9C C5               push bc
 210+ 8F9D 06 10            ld b,16
 211+ 8F9F CD DE 96     12 call NextScan
 212+ 8FA2 10 FB            djnz 12B
 213+ 8FA4 C1               pop bc
 214+ 8FA5
 215+ 8FA5 CD D8 8F         call Ajusta_disparo_parte_derecha
 216+ 8FA8 18 06            jr 18F
 217+ 8FAA
 218+ 8FAA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FAA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FAA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FAA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FAA
 223+ 8FAA CD D8 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8FAD CD 54 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FB0              ;                                                       ; _al generar el disparo.
 226+ 8FB0
 227+ 8FB0              ; LLegados a este punto tendremos:
 228+ 8FB0              ;
 229+ 8FB0              ;       Puntero_objeto_disparo en IY.
 230+ 8FB0              ;       Rutinas_de_impresion en IX.
 231+ 8FB0              ;       Puntero_de_impresion en HL.
 232+ 8FB0              ;       Impacto/Dirección en BC.
 233+ 8FB0
 234+ 8FB0 CD E7 8F     18 call Almacena_disparo
 235+ 8FB3 18 22            jr 6F                                               ; RET.
 236+ 8FB5
 237+ 8FB5              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FB5
 239+ 8FB5 28 11        3 jr z,5F
 240+ 8FB7
 241+ 8FB7              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FB7              ;
 243+ 8FB7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FB7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FB7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FB7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FB7
 248+ 8FB7              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FB7              ;	   ""        ""       "f9", B="1"
 250+ 8FB7              ;	   ""        ""       "fb", B="2"
 251+ 8FB7              ; 	   ""        ""       "fb", B="3"
 252+ 8FB7
 253+ 8FB7 2A E7 88     	ld hl,(Posicion_actual)
 254+ 8FBA CD DE 96     	call NextScan
 255+ 8FBD
 256+ 8FBD              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FBD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FBD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FBD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FBD
 261+ 8FBD CD DF 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FC0
 263+ 8FC0              ; 	No se produce impacto. B="$80"
 264+ 8FC0              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FC0
 266+ 8FC0 01 80 80         ld bc,$8080
 267+ 8FC3
 268+ 8FC3              ; 	LLegados a este punto tendremos:
 269+ 8FC3              ;
 270+ 8FC3              ;       Puntero_objeto_disparo en IY.
 271+ 8FC3              ;       Rutinas_de_impresion en IX.
 272+ 8FC3              ;       Puntero_de_impresion en HL.
 273+ 8FC3              ;       Impacto/Dirección en BC.
 274+ 8FC3
 275+ 8FC3 CD E7 8F         call Almacena_disparo
 276+ 8FC6 18 0F            jr 6F                                           ; RET.
 277+ 8FC8
 278+ 8FC8              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FC8              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FC8              ;
 281+ 8FC8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FC8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FC8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FC8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FC8
 286+ 8FC8 2A E7 88     5 ld hl,(Posicion_actual)
 287+ 8FCB CD DE 96     	call NextScan
 288+ 8FCE
 289+ 8FCE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FCE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FCE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FCE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FCE
 294+ 8FCE CD D8 8F         call Ajusta_disparo_parte_derecha
 295+ 8FD1
 296+ 8FD1              ; 	No se produce impacto. B="$80"
 297+ 8FD1              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FD1
 299+ 8FD1 01 80 80     15 ld bc,$8080
 300+ 8FD4
 301+ 8FD4              ; 	LLegados a este punto tendremos:
 302+ 8FD4              ;
 303+ 8FD4              ;       Puntero_objeto_disparo en IY.
 304+ 8FD4              ;       Rutinas_de_impresion en IX.
 305+ 8FD4              ;       Puntero_de_impresion en HL.
 306+ 8FD4              ;       Impacto/Dirección en BC.
 307+ 8FD4
 308+ 8FD4 CD E7 8F         call Almacena_disparo
 309+ 8FD7
 310+ 8FD7 C9           6 ret
 311+ 8FD8
 312+ 8FD8              ; ----------------------------------------------------------------
 313+ 8FD8              ;
 314+ 8FD8              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FD8              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FD8              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FD8
 318+ 8FD8 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FD9 FE 02            cp 2
 320+ 8FDB 38 01            jr c,1F
 321+ 8FDD 23               inc hl
 322+ 8FDE C9           1 ret
 323+ 8FDF
 324+ 8FDF 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FE0 FE 01        	cp 1
 326+ 8FE2 20 01        	jr nz,1F
 327+ 8FE4 2B           	dec hl
 328+ 8FE5 2B           1 dec hl
 329+ 8FE6 C9               ret
 330+ 8FE7
 331+ 8FE7              ; ----------------------------------------------------------------
 332+ 8FE7              ;
 333+ 8FE7              ;   25/02/23
 334+ 8FE7              ;
 335+ 8FE7              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FE7              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FE7              ;
 338+ 8FE7              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FE7              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FE7
 341+ 8FE7              Almacena_disparo
 342+ 8FE7
 343+ 8FE7 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FE8 F1               pop af
 345+ 8FE9 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FEA
 347+ 8FEA 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FEB E6 01            and 1
 349+ 8FED 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FEF              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FEF              ; 	Dispara AMADEUS.
 352+ 8FEF
 353+ 8FEF              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FEF              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FEF              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FEF              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FEF
 358+ 8FEF C5               push bc
 359+ 8FF0 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FF3 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FF6 A7               and a
 362+ 8FF7 ED 42            sbc hl,bc
 363+ 8FF9 CC 97 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FFC C1               pop bc
 365+ 8FFD 28 54            jr z,4F
 366+ 8FFF
 367+ 8FFF 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9002 23               inc hl
 369+ 9003 23               inc hl
 370+ 9004 22 64 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9007              ;                                                   ; _ Disparo_(+1).
 372+ 9007 18 18            jr 2F
 373+ 9009
 374+ 9009              ; Dispara una entidad.
 375+ 9009
 376+ 9009 C5           1 push bc
 377+ 900A 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 900D 2A 62 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9010 A7               and a
 380+ 9011 ED 42            sbc hl,bc
 381+ 9013 CC 90 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9016 C1               pop bc
 383+ 9017 28 3A            jr z,4F
 384+ 9019
 385+ 9019 2A 62 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 901C 23               inc hl
 387+ 901D 23               inc hl
 388+ 901E 22 62 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9021              ;                                                   ; _ Disparo_(+1).
 390+ 9021 CD 16 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9024              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9024              ;
 393+ 9024              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9024              ;                                                     Rutinas_de_impresion en IX.
 395+ 9024              ;                                                     Puntero_de_impresion en HL.
 396+ 9024              ;                                                     Impacto/Dirección en BC.
 397+ 9024
 398+ 9024 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9025 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9026 23               inc hl                                          ; _ al siguiente.
 401+ 9027 A7               and a
 402+ 9028 20 C0            jr nz,3B
 403+ 902A
 404+ 902A 08               ex af,af
 405+ 902B ED 73 39 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 902F F9               ld sp,hl
 407+ 9030
 408+ 9030 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9032 F5               push af                                         ; Puntero de impresión.
 410+ 9033 FD E5            push iy                                         ; Puntero objeto.
 411+ 9035 C5               push bc                                         ; Control.
 412+ 9036
 413+ 9036 ED 7B 39 89      ld sp,(Stack)
 414+ 903A
 415+ 903A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 903A
 417+ 903A 21 28 89     	ld hl,Ctrl_1
 418+ 903D CB C6        	set 0,(hl)
 419+ 903F
 420+ 903F DD E5        	push ix
 421+ 9041 E1               pop hl
 422+ 9042 F5               push af
 423+ 9043 DD E1            pop ix
 424+ 9045
 425+ 9045 CD A0 7F     	call Guarda_foto_registros
 426+ 9048
 427+ 9048 21 28 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 904B CB 86        	res 0,(hl)
 429+ 904D
 430+ 904D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 904D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 904D
 433+ 904D CD 97 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9050 CD 90 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9053
 436+ 9053 C9           4 ret
 437+ 9054
 438+ 9054              ; ----------------------------------------------------------------
 439+ 9054              ;
 440+ 9054              ;   4/3/23
 441+ 9054              ;
 442+ 9054              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9054              ;   _ al generarse el disparo.
 444+ 9054              ;
 445+ 9054              ;       "$80" ..... No se produce colisión.
 446+ 9054              ;       "$81" ..... Se produce colisión.
 447+ 9054              ;
 448+ 9054              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9054              ;         _ que forman el disparo.
 450+ 9054
 451+ 9054
 452+ 9054              Comprueba_Colision
 453+ 9054
 454+ 9054              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9054
 456+ 9054 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9056 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9057
 459+ 9057 CD 8D 90         call Modifica_H_Velocidad_disparo
 460+ 905A
 461+ 905A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 905B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 905D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 905F
 465+ 905F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9061 CD 7D 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9064
 468+ 9064 7B               ld a,e
 469+ 9065 E6 01            and 1
 470+ 9067 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9069              ;                                                  ; _ para activar IMPACTO.
 472+ 9069 E1               pop hl
 473+ 906A E5               push hl
 474+ 906B CD DE 96         call NextScan
 475+ 906E
 476+ 906E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 906F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9071 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9073              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9073 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9075 CD 7D 90         call Bucle_2
 482+ 9078
 483+ 9078 43           1 ld b,e
 484+ 9079 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 907A FD E1            pop iy
 486+ 907C C9               ret
 487+ 907D
 488+ 907D              ; ---------- ----------
 489+ 907D
 490+ 907D 06 02        Bucle_2 ld b,2
 491+ 907F FD 7E 00     2 ld a,(iy)
 492+ 9082 A6               and (hl)
 493+ 9083 28 02            jr z,1F
 494+ 9085 1E 81            ld e,$81
 495+ 9087 23           1 inc hl
 496+ 9088 FD 23            inc iy
 497+ 908A 10 F3            djnz 2B
 498+ 908C C9               ret
 499+ 908D
 500+ 908D              ; ---------- ----------
 501+ 908D              ;
 502+ 908D              ;   21/7/23
 503+ 908D
 504+ 908D              Modifica_H_Velocidad_disparo
 505+ 908D
 506+ 908D 3A 73 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9090 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9092 D0               ret nc                                         ; _ incrementamos H.
 509+ 9093 24               inc h
 510+ 9094
 511+ 9094 C9               ret
 512+ 9095
 513+ 9095              ; -------------------------------------------------------------------------------------------------------------
 514+ 9095              ;
 515+ 9095              ;   11/04/23
 516+ 9095              ;
 517+ 9095              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9095              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9095              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9095              ;
 521+ 9095              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9095
 523+ 9095              Compara_coordenadas_X
 524+ 9095
 525+ 9095              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9095              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9095
 528+ 9095              ; Preparamos registros:
 529+ 9095
 530+ 9095 21 EB 88         ld hl,Filas+6
 531+ 9098 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9099 23               inc hl
 533+ 909A 23               inc hl
 534+ 909B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 909C 43               ld b,e
 536+ 909D
 537+ 909D 21 F9 88         ld hl,Filas+20
 538+ 90A0 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90A1 21 6E 89         ld hl,Coordenadas_X_Entidad
 540+ 90A4 CD C0 92         call Guarda_coordenadas_X
 541+ 90A7
 542+ 90A7              ; Preparamos registros:
 543+ 90A7
 544+ 90A7 21 A4 85         ld hl,Amadeus_db+6
 545+ 90AA 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90AB 23               inc hl
 547+ 90AC 23               inc hl
 548+ 90AD 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90AE 7B               ld a,e
 550+ 90AF 08               ex af,af'
 551+ 90B0 21 B2 85         ld hl,Amadeus_db+20
 552+ 90B3 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90B4 21 6B 89         ld hl,Coordenadas_X_Amadeus
 554+ 90B7 CD C0 92         call Guarda_coordenadas_X
 555+ 90BA
 556+ 90BA              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90BA              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90BA
 559+ 90BA 04               inc b
 560+ 90BB 05               dec b
 561+ 90BC 28 04            jr z,1F
 562+ 90BE 06 03            ld b,3
 563+ 90C0 18 02            jr 2F
 564+ 90C2 06 02        1 ld b,2
 565+ 90C4 08           2 ex af,af'
 566+ 90C5 3C               inc a
 567+ 90C6 3D               dec a
 568+ 90C7 28 04            jr z,5F
 569+ 90C9 0E 03            ld c,3
 570+ 90CB 18 02            jr 6F
 571+ 90CD 0E 02        5 ld c,2
 572+ 90CF 79           6 ld a,c
 573+ 90D0 08               ex af,af'
 574+ 90D1 11 6E 89         ld de,Coordenadas_X_Entidad
 575+ 90D4 1A           4 ld a,(de)
 576+ 90D5 21 6B 89         ld hl,Coordenadas_X_Amadeus
 577+ 90D8 BE           3 cp (hl)
 578+ 90D9 28 0E            jr z,7F
 579+ 90DB 23               inc hl
 580+ 90DC 0D               dec c
 581+ 90DD 20 F9            jr nz,3B
 582+ 90DF 13               inc de
 583+ 90E0 08               ex af,af'
 584+ 90E1 4F               ld c,a
 585+ 90E2 08               ex af,af'
 586+ 90E3 10 EF            djnz 4B
 587+ 90E5
 588+ 90E5              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90E5
 590+ 90E5 CD FC 92     8 call Limpia_Coordenadas_X
 591+ 90E8 C9               ret
 592+ 90E9
 593+ 90E9 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90EB 32 FE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90EE 21 66 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90F1 CB D6            set 2,(hl)
 597+ 90F3 18 F0            jr 8B
 598+ 90F5
 599+ 90F5              ; -----------------------------------------------------------------------
 600+ 90F5              ;
 601+ 90F5              ;   17/04/23
 602+ 90F5              ;
 603+ 90F5
 604+ 90F5              Detecta_colision_nave_entidad
 605+ 90F5
 606+ 90F5              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90F5
 608+ 90F5 2A E7 88         ld hl,(Posicion_actual)
 609+ 90F8 CD 39 96         call Calcula_puntero_de_impresion
 610+ 90FB
 611+ 90FB              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90FB              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90FB
 614+ 90FB DD E5            push ix
 615+ 90FD E1               pop hl
 616+ 90FE E5               push hl
 617+ 90FF
 618+ 90FF              ; ----- ----- -----
 619+ 90FF 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9101 06 0A            ld b,10
 621+ 9103 CD 33 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9106 7B               ld a,e
 623+ 9107 FE 05            cp 5
 624+ 9109 38 0E            jr c,3F
 625+ 910B
 626+ 910B              ; LLegados a este punto:
 627+ 910B              ;
 628+ 910B              ;   HAY COLISIÓN !!!!!.
 629+ 910B              ;
 630+ 910B              ;   .db (Impacto) de Amadeus a "1".
 631+ 910B              ;   SET el bit3 de (Impacto2).
 632+ 910B              ;
 633+ 910B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 910B
 635+ 910B 21 B7 85         ld hl,Amadeus_db+25
 636+ 910E 36 01            ld (hl),1
 637+ 9110 21 66 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9113 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9115 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9117 18 18            jr 1F
 641+ 9119
 642+ 9119              ; -----
 643+ 9119
 644+ 9119 E1           3 pop hl
 645+ 911A CD DE 96         call NextScan
 646+ 911D E5               push hl
 647+ 911E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 911F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9121 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9123 30 0C            jr nc,1F
 651+ 9125              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9125 10 DC            djnz 2B
 653+ 9127
 654+ 9127              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9127
 656+ 9127              ; LLegados a este punto:
 657+ 9127              ;
 658+ 9127              ;   NO HAY COLISIÓN !!!!!.
 659+ 9127              ;
 660+ 9127              ;   .db (Impacto) de Amadeus a "0".
 661+ 9127              ;   RES el bit2 de (Impacto2).
 662+ 9127              ;
 663+ 9127              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9127              ;   Lo colocamos a "0".
 665+ 9127
 666+ 9127 21 66 89         ld hl,Impacto2
 667+ 912A CB 96            res 2,(hl)
 668+ 912C 2A 67 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 912F 36 00            ld (hl),0
 670+ 9131
 671+ 9131 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9132 C9               ret
 673+ 9133
 674+ 9133               ; ---------- ----------
 675+ 9133
 676+ 9133 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9134 3A E6 88         ld a,(Columns)
 678+ 9137 47               ld b,a
 679+ 9138 FD 7E 00     2 ld a,(iy)
 680+ 913B BE               cp (hl)
 681+ 913C 28 01            jr z,1F
 682+ 913E
 683+ 913E 1C               inc e
 684+ 913F
 685+ 913F 23           1 inc hl
 686+ 9140 FD 23            inc iy
 687+ 9142 10 F4            djnz 2B
 688+ 9144 C1               pop bc
 689+ 9145 C9               ret
 690+ 9146
 691+ 9146              ; -------------------------------------------------------------------------------------------------------------
 692+ 9146              ;
 693+ 9146              ;   13/03/23
 694+ 9146              ;
 695+ 9146              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9146              ;
 697+ 9146              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9146
 699+ 9146 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9149 7E               ld a,(hl)
 701+ 914A A7               and a
 702+ 914B C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 914C
 704+ 914C 44               ld b,h
 705+ 914D 4D               ld c,l
 706+ 914E 2A 41 89         ld hl,(Stack_snapshot_disparos)
 707+ 9151 E5               push hl
 708+ 9152 A7               and a
 709+ 9153 ED 42            sbc hl,bc
 710+ 9155 E5               push hl
 711+ 9156 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9157
 713+ 9157 E1               pop hl
 714+ 9158 54               ld d,h
 715+ 9159 5D               ld e,l
 716+ 915A 1B               dec de
 717+ 915B ED B8            lddr                                                ; Limpiamos.
 718+ 915D
 719+ 915D 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9160 22 41 89         ld (Stack_snapshot_disparos),hl
 721+ 9163
 722+ 9163 C9               ret
 723+ 9164
 724+ 9164              ; -------------------------------------------------------------------------------------------------------------
 725+ 9164              ;
 726+ 9164              ;   18/07/23
 727+ 9164              ;
 728+ 9164
 729+ 9164              Motor_de_disparos
 730+ 9164
 731+ 9164              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9164
 733+ 9164 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9167 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 916A
 736+ 916A CD 16 8D     2 call Extrae_address
 737+ 916D 7E               ld a,(hl)
 738+ 916E A7               and a
 739+ 916F 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9171
 741+ 9171              ; ----- ----- ----- ----- ----- -----
 742+ 9171
 743+ 9171 C5               push bc
 744+ 9172 CD 36 92         call foto_disparo_a_borrar
 745+ 9175
 746+ 9175              ; Existe colisión con este disparo???
 747+ 9175
 748+ 9175 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9176 7E               ld a,(hl)
 750+ 9177 2B               dec hl
 751+ 9178 E6 01            and 1
 752+ 917A 28 1D            jr z,9F
 753+ 917C
 754+ 917C              ;   En este punto:
 755+ 917C              ;
 756+ 917C              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 917C              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 917C              ;   _con la entidad).
 759+ 917C              ;
 760+ 917C              ;   Disparo_2A defw 0                                ; Control.
 761+ 917C              ;    defw 0                                          ; Puntero objeto.
 762+ 917C              ;    defw 0                                          ; Puntero de impresión.
 763+ 917C              ;    defw 0                                          ; Rutina de impresión.
 764+ 917C
 765+ 917C E5               push hl
 766+ 917D
 767+ 917D 06 04            ld b,4
 768+ 917F 23           19 inc hl
 769+ 9180 10 FD            djnz 19B
 770+ 9182
 771+ 9182 CD 16 8D         call Extrae_address
 772+ 9185 CD A7 9D         call Genera_coordenadas_disparo
 773+ 9188
 774+ 9188              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9188
 776+ 9188 21 69 89         ld hl,Coordenadas_disparo_certero
 777+ 918B 72               ld (hl),d
 778+ 918C 23               inc hl
 779+ 918D 73               ld (hl),e
 780+ 918E
 781+ 918E              ; Elimino el disparo de la base de datos.
 782+ 918E
 783+ 918E E1               pop hl
 784+ 918F CD B5 92         call Elimina_disparo_de_base_de_datos
 785+ 9192 21 66 89         ld hl,Impacto2
 786+ 9195 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9197
 788+ 9197 18 06            jr 11F
 789+ 9199
 790+ 9199 CD 5F 92     9 call Mueve_disparo
 791+ 919C CD 36 92         call foto_disparo_a_borrar
 792+ 919F
 793+ 919F C1           11 pop bc
 794+ 91A0 18 04            jr 7F
 795+ 91A2
 796+ 91A2              ; ----- ----- ----- ----- ----- -----
 797+ 91A2
 798+ 91A2 ED 42        1 sbc hl,bc
 799+ 91A4 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91A6
 801+ 91A6 2A 64 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91A9 23               inc hl
 803+ 91AA 23               inc hl
 804+ 91AB 22 64 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91AE 18 BA            jr 2B
 806+ 91B0
 807+ 91B0 CD 97 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91B3              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91B3
 810+ 91B3              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91B3
 812+ 91B3 01 8A 85         ld bc,Disparo_11
 813+ 91B6 2A 62 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91B9
 815+ 91B9 CD 16 8D     5 call Extrae_address
 816+ 91BC 7E               ld a,(hl)
 817+ 91BD A7               and a
 818+ 91BE 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91C0
 820+ 91C0              ; ----- ----- ----- ----- ----- -----
 821+ 91C0
 822+ 91C0 C5               push bc
 823+ 91C1 CD 36 92         call foto_disparo_a_borrar
 824+ 91C4
 825+ 91C4              ; Existe colisión con este disparo???
 826+ 91C4
 827+ 91C4 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91C5 7E               ld a,(hl)
 829+ 91C6 2B               dec hl
 830+ 91C7 E6 01            and 1
 831+ 91C9 28 4D            jr z,10F
 832+ 91CB
 833+ 91CB              ;! La colisión se produce con Amadeus???
 834+ 91CB              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91CB
 836+ 91CB E5               push hl
 837+ 91CC
 838+ 91CC 06 04            ld b,4
 839+ 91CE 23           16 inc hl
 840+ 91CF 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91D1
 842+ 91D1 CD 16 8D         call Extrae_address
 843+ 91D4 CD A7 9D         call Genera_coordenadas_disparo
 844+ 91D7
 845+ 91D7 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91D8 FE 16            cp $16
 847+ 91DA 38 2A            jr c,15F
 848+ 91DC
 849+ 91DC
 850+ 91DC              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91DC
 852+ 91DC D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91DD
 854+ 91DD              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91DD
 856+ 91DD
 857+ 91DD 2A 71 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91E0
 859+ 91E0              ; Coordenada X de Amadeus en D.
 860+ 91E0
 861+ 91E0 7D               ld a,l
 862+ 91E1 E6 1F            and $1F
 863+ 91E3 57               ld d,a
 864+ 91E4
 865+ 91E4 21 A6 85         ld hl,Amadeus_db+8
 866+ 91E7 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91E8
 868+ 91E8 21 6B 89         ld hl,Coordenadas_X_Amadeus
 869+ 91EB CD C0 92         call Guarda_coordenadas_X
 870+ 91EE
 871+ 91EE D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91EF
 873+ 91EF              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91EF
 875+ 91EF 06 02            ld b,2
 876+ 91F1 C5           20 push bc
 877+ 91F2
 878+ 91F2 06 03            ld b,3
 879+ 91F4 21 6B 89         ld hl,Coordenadas_X_Amadeus
 880+ 91F7 7E           18 ld a,(hl)
 881+ 91F8 BA               cp d
 882+ 91F9 20 04            jr nz,17F
 883+ 91FB
 884+ 91FB              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91FB
 886+ 91FB C1               pop bc
 887+ 91FC E1               pop hl
 888+ 91FD 18 0D            jr 14F
 889+ 91FF
 890+ 91FF 23           17 inc hl
 891+ 9200 10 F5            djnz 18B
 892+ 9202
 893+ 9202 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9203
 895+ 9203 C1               pop bc
 896+ 9204 10 EB            djnz 20B
 897+ 9206
 898+ 9206
 899+ 9206              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9206              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9206
 902+ 9206 E1           15 pop hl
 903+ 9207 23               inc hl
 904+ 9208 35               dec (hl)
 905+ 9209 2B               dec hl
 906+ 920A 18 0C            jr 10F
 907+ 920C
 908+ 920C              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 920C              ; _ almacén de coordenadas_X de Amadeus.
 910+ 920C
 911+ 920C E5           14 push hl
 912+ 920D CD B5 92         call Elimina_disparo_de_base_de_datos
 913+ 9210 21 66 89         ld hl,Impacto2
 914+ 9213 CB CE            set 1,(hl)
 915+ 9215 E1               pop hl
 916+ 9216 18 06            jr 12F
 917+ 9218
 918+ 9218              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9218
 920+ 9218 CD 5F 92     10 call Mueve_disparo
 921+ 921B CD 36 92         call foto_disparo_a_borrar
 922+ 921E C1           12 pop bc
 923+ 921F
 924+ 921F 18 04            jr 8F
 925+ 9221
 926+ 9221              ; ----- ----- ----- ----- ----- -----
 927+ 9221
 928+ 9221 ED 42        4 sbc hl,bc
 929+ 9223 28 0A            jr z,6F
 930+ 9225
 931+ 9225 2A 62 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9228 23               inc hl
 933+ 9229 23               inc hl
 934+ 922A 22 62 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 922D 18 8A            jr 5B
 936+ 922F
 937+ 922F CD 90 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9232 CD FC 92         call Limpia_Coordenadas_X
 939+ 9235 C9               ret
 940+ 9236
 941+ 9236              ; ------------------------------------------------------------------
 942+ 9236
 943+ 9236              foto_disparo_a_borrar
 944+ 9236
 945+ 9236 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9237 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9238 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9239
 949+ 9239 E5               push hl
 950+ 923A 23               inc hl
 951+ 923B 23               inc hl
 952+ 923C ED 73 39 89      ld (Stack),sp
 953+ 9240 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9241 FD E1            pop iy
 955+ 9243 DD E1            pop ix
 956+ 9245 E1               pop hl
 957+ 9246 ED 7B 39 89      ld sp,(Stack)
 958+ 924A 3A 28 89         ld a,(Ctrl_1)
 959+ 924D CB C7            set 0,a
 960+ 924F 32 28 89         ld (Ctrl_1),a
 961+ 9252 CD A0 7F         call Guarda_foto_registros
 962+ 9255 3A 28 89         ld a,(Ctrl_1)
 963+ 9258 CB 87            res 0,a
 964+ 925A 32 28 89         ld (Ctrl_1),a
 965+ 925D E1               pop hl
 966+ 925E C9               ret
 967+ 925F
 968+ 925F              ;---------------------------------------------------
 969+ 925F              ;
 970+ 925F              ;   18/07/23
 971+ 925F              ;
 972+ 925F
 973+ 925F              Mueve_disparo
 974+ 925F
 975+ 925F              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 925F              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 925F              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 925F
 979+ 925F E5               push hl
 980+ 9260
 981+ 9260 7E               ld a,(hl)
 982+ 9261
 983+ 9261 06 04            ld b,4
 984+ 9263 23           1 inc hl
 985+ 9264 10 FD            djnz 1B
 986+ 9266
 987+ 9266              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9266
 989+ 9266 CD 16 8D         call Extrae_address
 990+ 9269
 991+ 9269 E6 01            and 1
 992+ 926B 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 926D
 994+ 926D              ; Disparo hacia arriba, (Amadeus).
 995+ 926D
 996+ 926D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 926D              ; _ de la dificultad.
 998+ 926D
 999+ 926D CD ED 96         call PreviousScan
1000+ 9270 CD ED 96         call PreviousScan
1001+ 9273 CD ED 96         call PreviousScan
1002+ 9276 CD ED 96         call PreviousScan
1003+ 9279
1004+ 9279              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9279
1006+ 9279 7C               ld a,h
1007+ 927A FE 40            cp $40
1008+ 927C 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 927E
1010+ 927E              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 927E
1012+ 927E EB               ex de,hl
1013+ 927F 06 04            ld b,4
1014+ 9281 2B           6 dec hl
1015+ 9282 10 FD            djnz 6B
1016+ 9284
1017+ 9284 CD B5 92         call Elimina_disparo_de_base_de_datos
1018+ 9287 E1               pop hl
1019+ 9288 18 10            jr 7F
1020+ 928A
1021+ 928A              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 928A              ; HL contiene el puntero de impresión del disparo.
1023+ 928A              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 928A
1025+ 928A D5           3 push de
1026+ 928B C5               push bc
1027+ 928C
1028+ 928C CD 54 90         call Comprueba_Colision
1029+ 928F
1030+ 928F              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 928F
1032+ 928F 78               ld a,b
1033+ 9290
1034+ 9290 C1               pop bc
1035+ 9291 D1               pop de
1036+ 9292
1037+ 9292 EB               ex de,hl
1038+ 9293
1039+ 9293 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9294 23               inc hl                                      ; _ movimiento.
1041+ 9295 72               ld (hl),d
1042+ 9296
1043+ 9296 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9297
1045+ 9297 23               inc hl                                      ; _ en curso.
1046+ 9298 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9299 2B               dec hl
1048+ 929A
1049+ 929A C9           7 ret
1050+ 929B
1051+ 929B              ; Disparo hacia abajo, (Entidad).
1052+ 929B
1053+ 929B 3A 73 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 929E 47               ld b,a
1055+ 929F
1056+ 929F CD DE 96     4 call NextScan
1057+ 92A2 10 FB            djnz 4B
1058+ 92A4
1059+ 92A4              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92A4
1061+ 92A4 7C               ld a,h
1062+ 92A5 FE 58            cp $58
1063+ 92A7 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92A9
1065+ 92A9 EB               ex de,hl
1066+ 92AA 06 04            ld b,4
1067+ 92AC 2B           5 dec hl
1068+ 92AD 10 FD            djnz 5B
1069+ 92AF
1070+ 92AF CD B5 92         call Elimina_disparo_de_base_de_datos
1071+ 92B2 E1               pop hl
1072+ 92B3 18 E5            jr 7B
1073+ 92B5
1074+ 92B5              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92B5
1076+ 92B5 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92B8 AF               xor a
1078+ 92B9 77               ld (hl),a
1079+ 92BA 54               ld d,h
1080+ 92BB 5D               ld e,l
1081+ 92BC 13               inc de
1082+ 92BD ED B0            ldir
1083+ 92BF C9               ret
1084+ 92C0
1085+ 92C0              ; -----------------------------------------------------------------
1086+ 92C0              ;
1087+ 92C0              ;   19/7/23
1088+ 92C0              ;
1089+ 92C0              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92C0              ;
1091+ 92C0              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92C0              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92C0              ;
1094+ 92C0              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92C0              ;
1096+ 92C0              ;   INPUTS:
1097+ 92C0              ;
1098+ 92C0              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92C0              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92C0
1101+ 92C0              ;   MODIFICA: A, HL, BC y DE.
1102+ 92C0
1103+ 92C0              Guarda_coordenadas_X
1104+ 92C0
1105+ 92C0 7B               ld a,e
1106+ 92C1 A7               and a
1107+ 92C2 20 04            jr nz,1F
1108+ 92C4
1109+ 92C4 06 02            ld b,2
1110+ 92C6 18 02            jr 2F
1111+ 92C8
1112+ 92C8 06 03        1 ld b,3
1113+ 92CA 72           2 ld (hl),d
1114+ 92CB 23               inc hl
1115+ 92CC 14               inc d
1116+ 92CD 10 FB            djnz 2B
1117+ 92CF
1118+ 92CF C9               ret
1119+ 92D0
1120+ 92D0              ; -----------------------------------------------------------------
1121+ 92D0              ;
1122+ 92D0              ;   12/04/23
1123+ 92D0              ;
1124+ 92D0
1125+ 92D0 3A 66 89     Selector_de_impactos ld a,(Impacto2)
1126+ 92D3 A7               and a
1127+ 92D4 C8               ret z
1128+ 92D5
1129+ 92D5 FE 04            cp 4
1130+ 92D7 20 09            jr nz,1F
1131+ 92D9
1132+ 92D9
1133+ 92D9              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92D9
1135+ 92D9 CD F5 90         call Detecta_colision_nave_entidad
1136+ 92DC
1137+ 92DC 21 66 89         ld hl,Impacto2
1138+ 92DF CB 5E            bit 3,(hl)
1139+ 92E1 C0               ret nz                                               ; Existe colisión, RET.
1140+ 92E2
1141+ 92E2              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92E2              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92E2
1144+ 92E2 21 66 89     1 ld hl,Impacto2
1145+ 92E5 CB 4E            bit 1,(hl)
1146+ 92E7 28 07            jr z,2F
1147+ 92E9
1148+ 92E9 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92EC 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92EE 18 0B            jr 3F
1151+ 92F0
1152+ 92F0 21 66 89     2 ld hl,Impacto2
1153+ 92F3 CB 46            bit 0,(hl)
1154+ 92F5 C8               ret z
1155+ 92F6
1156+ 92F6              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92F6
1158+ 92F6 21 28 89         ld hl,Ctrl_1
1159+ 92F9 CB D6            set 2,(hl)
1160+ 92FB
1161+ 92FB C9           3 ret
1162+ 92FC
1163+ 92FC              ; -----------------------------------------------------------------
1164+ 92FC              ;
1165+ 92FC              ;   19/7/23
1166+ 92FC              ;
1167+ 92FC              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92FC
1169+ 92FC AF           Limpia_Coordenadas_X xor a
1170+ 92FD 06 06            ld b,6
1171+ 92FF 21 6B 89         ld hl,Coordenadas_X_Amadeus
1172+ 9302 77           1 ld (hl),a
1173+ 9303 23               inc hl
1174+ 9304 10 FC            djnz 1B
1175+ 9306 C9               ret
1176+ 9307
1177+ 9307              ; -----------------------------------------------------------------
1178+ 9307              ;
1179+ 9307              ;   25/04/23
1180+ 9307              ;
1181+ 9307
1182+ 9307              Determina_resultado_comparativa
1183+ 9307
1184+ 9307              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9307              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9307              ;
1187+ 9307              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9307              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9307              ;
1190+ 9307              ;   SBC HL,DE
1191+ 9307
1192+ 9307              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9307              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9307
1195+ 9307              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9307              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9307
1198+ 9307
1199+ 9307 3A F9 88         ld a,(Cuad_objeto)
1200+ 930A FE 02            cp 2
1201+ 930C 28 26            jr z,2F
1202+ 930E 38 24            jr c,2F
1203+ 9310
1204+ 9310              ; Cuadrantes 3º y 4º
1205+ 9310
1206+ 9310 E6 01            and 1
1207+ 9312 28 10            jr z,4F
1208+ 9314
1209+ 9314              ; Cuadrante 3º
1210+ 9314
1211+ 9314 7C               ld a,h
1212+ 9315 06 00            ld b,0
1213+ 9317
1214+ 9317 CD A2 93         call Compara_cositas_H3
1215+ 931A
1216+ 931A 04               inc b
1217+ 931B 05               dec b
1218+ 931C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 931D
1220+ 931D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 931E 06 00            ld b,0
1222+ 9320
1223+ 9320 CD B4 93         call Compara_cositas_L3
1224+ 9323 C9               ret
1225+ 9324
1226+ 9324              ; Cuadrante 4º
1227+ 9324
1228+ 9324 7C           4 ld a,h
1229+ 9325 06 00            ld b,0
1230+ 9327
1231+ 9327 CD C6 93         call Compara_cositas_H4
1232+ 932A
1233+ 932A 04               inc b
1234+ 932B 05               dec b
1235+ 932C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 932D
1237+ 932D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 932E 06 00            ld b,0
1239+ 9330
1240+ 9330 CD DC 93         call Compara_cositas_L4
1241+ 9333 C9               ret
1242+ 9334
1243+ 9334              ; Cuadrantes 1º y 2º.
1244+ 9334
1245+ 9334 28 10        2 jr z,3F
1246+ 9336
1247+ 9336              ; 1er Cuadrante
1248+ 9336
1249+ 9336 7C               ld a,h
1250+ 9337 06 00            ld b,0
1251+ 9339
1252+ 9339 CD 7A 93         call Compara_cositas_H1
1253+ 933C
1254+ 933C 04               inc b
1255+ 933D 05               dec b
1256+ 933E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 933F
1258+ 933F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9340 06 00            ld b,0
1260+ 9342
1261+ 9342 CD 90 93         call Compara_cositas_L1
1262+ 9345 C9               ret
1263+ 9346
1264+ 9346
1265+ 9346              ; 2º Cuadrante
1266+ 9346
1267+ 9346 7C           3 ld a,h
1268+ 9347 06 00            ld b,0
1269+ 9349
1270+ 9349 CD 56 93         call Compara_cositas_H2
1271+ 934C
1272+ 934C 04               inc b
1273+ 934D 05               dec b
1274+ 934E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 934F
1276+ 934F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9350 06 00            ld b,0
1278+ 9352
1279+ 9352 CD 68 93         call Compara_cositas_L2
1280+ 9355 C9               ret
1281+ 9356
1282+ 9356 A7           Compara_cositas_H2 and a
1283+ 9357 28 0D            jr z,1F
1284+ 9359              ;    cp $fd
1285+ 9359              ;    jr z,1F
1286+ 9359              ;    cp $fe
1287+ 9359              ;    jr z,1F
1288+ 9359 FE FF            cp $ff
1289+ 935B 28 09            jr z,1F
1290+ 935D FE 01            cp $01
1291+ 935F 28 05            jr z,1F
1292+ 9361 FE 02            cp $02
1293+ 9363 28 01            jr z,1F
1294+ 9365 C0               ret nz
1295+ 9366 04           1 inc b
1296+ 9367 C9               ret
1297+ 9368
1298+ 9368 A7           Compara_cositas_L2 and a
1299+ 9369 28 0D            jr z,1F
1300+ 936B              ;    cp $fd
1301+ 936B              ;    jr z,1F
1302+ 936B FE FE            cp $fe
1303+ 936D 28 09            jr z,1F
1304+ 936F FE FF            cp $ff
1305+ 9371 28 05            jr z,1F
1306+ 9373 FE 01            cp $01
1307+ 9375 28 01            jr z,1F
1308+ 9377              ;    cp $02
1309+ 9377              ;    jr z,1F
1310+ 9377 C0               ret nz
1311+ 9378 04           1 inc b
1312+ 9379 C9               ret
1313+ 937A
1314+ 937A A7           Compara_cositas_H1 and a
1315+ 937B 28 11            jr z,1F
1316+ 937D              ;    cp $fd
1317+ 937D              ;    jr z,1F
1318+ 937D              ;    cp $fe
1319+ 937D              ;    jr z,1F
1320+ 937D FE FF            cp $ff
1321+ 937F 28 0D            jr z,1F
1322+ 9381 FE 01            cp $01
1323+ 9383 28 09            jr z,1F
1324+ 9385 FE 02            cp $02
1325+ 9387 28 05            jr z,1F
1326+ 9389 FE 03            cp $03
1327+ 938B 28 01            jr z,1F
1328+ 938D C0               ret nz
1329+ 938E 04           1 inc b
1330+ 938F C9               ret
1331+ 9390
1332+ 9390 A7           Compara_cositas_L1 and a
1333+ 9391 28 0D            jr z,1F
1334+ 9393              ;    cp $fd
1335+ 9393              ;    jr z,1F
1336+ 9393              ;    cp $fe
1337+ 9393              ;    jr z,1F
1338+ 9393              ;    cp $ff
1339+ 9393              ;    jr z,1F
1340+ 9393 FE 01            cp $01
1341+ 9395 28 09            jr z,1F
1342+ 9397 FE 02            cp $02
1343+ 9399 28 05            jr z,1F
1344+ 939B FE 03            cp $03
1345+ 939D 28 01            jr z,1F
1346+ 939F C0               ret nz
1347+ 93A0 04           1 inc b
1348+ 93A1 C9               ret
1349+ 93A2
1350+ 93A2 A7           Compara_cositas_H3 and a
1351+ 93A3 28 0D            jr z,1F
1352+ 93A5              ;    cp $fd
1353+ 93A5              ;    jr z,1F
1354+ 93A5 FE FE            cp $fe
1355+ 93A7 28 09            jr z,1F
1356+ 93A9 FE FF            cp $ff
1357+ 93AB 28 05            jr z,1F
1358+ 93AD FE 01            cp $01
1359+ 93AF 28 01            jr z,1F
1360+ 93B1              ;    cp $02
1361+ 93B1              ;    jr z,1F
1362+ 93B1              ;    cp $03
1363+ 93B1              ;    jr z,1F
1364+ 93B1 C0               ret nz
1365+ 93B2 04           1 inc b
1366+ 93B3 C9               ret
1367+ 93B4
1368+ 93B4 A7           Compara_cositas_L3 and a
1369+ 93B5 28 0D            jr z,1F
1370+ 93B7              ;    cp $fd
1371+ 93B7              ;    jr z,1F
1372+ 93B7              ;    cp $fe
1373+ 93B7              ;    jr z,1F
1374+ 93B7              ;    cp $ff
1375+ 93B7              ;    jr z,1F
1376+ 93B7 FE 01            cp $01
1377+ 93B9 28 09            jr z,1F
1378+ 93BB FE 02            cp $02
1379+ 93BD 28 05            jr z,1F
1380+ 93BF FE 03            cp $03
1381+ 93C1 28 01            jr z,1F
1382+ 93C3 C0               ret nz
1383+ 93C4 04           1 inc b
1384+ 93C5 C9               ret
1385+ 93C6
1386+ 93C6 A7           Compara_cositas_H4 and a
1387+ 93C7 28 11            jr z,1F
1388+ 93C9 FE FD            cp $fd
1389+ 93CB 28 0D            jr z,1F
1390+ 93CD FE FE            cp $fe
1391+ 93CF 28 09            jr z,1F
1392+ 93D1 FE FF            cp $ff
1393+ 93D3 28 05            jr z,1F
1394+ 93D5 FE 01            cp $01
1395+ 93D7 28 01            jr z,1F
1396+ 93D9              ;    cp $02
1397+ 93D9              ;    jr z,1F
1398+ 93D9              ;    cp $03
1399+ 93D9              ;    jr z,1F
1400+ 93D9 C0               ret nz
1401+ 93DA 04           1 inc b
1402+ 93DB C9               ret
1403+ 93DC
1404+ 93DC A7           Compara_cositas_L4 and a
1405+ 93DD 28 0D            jr z,1F
1406+ 93DF              ;    cp $fd
1407+ 93DF              ;    jr z,1F
1408+ 93DF FE FE            cp $fe
1409+ 93E1 28 09            jr z,1F
1410+ 93E3 FE FF            cp $ff
1411+ 93E5 28 05            jr z,1F
1412+ 93E7 FE 01            cp $01
1413+ 93E9 28 01            jr z,1F
1414+ 93EB              ;    cp $02
1415+ 93EB              ;    jr z,1F
1416+ 93EB              ;    cp $03
1417+ 93EB              ;    jr z,1F
1418+ 93EB C0               ret nz
1419+ 93EC 04           1 inc b
1420+ 93ED C9               ret
# file closed: Disparo.asm
1649  93EE              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93EE              ; ******************************************************************************************************************************************************************************************
   2+ 93EE              ;
   3+ 93EE              ; 26/06/23
   4+ 93EE              ;
   5+ 93EE              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93EE
   7+ 93EE CD D2 96     Draw call Prepara_draw
   8+ 93F1 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93F2 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93F3 28 05        	jr z,2F
  11+ 93F5
  12+ 93F5 3A F9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93F8 18 0C        	jr 1F
  14+ 93FA
  15+ 93FA 2A F7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93FD 22 E7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9400 CD 8F 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9403              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9403 CD 34 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9406
  21+ 9406 3A 13 89     1 ld a,(Ctrl_0)
  22+ 9409 CB 6F        	bit 5,a
  23+ 940B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 940D
  25+ 940D CD 25 94     	call Comprueba_limite_horizontal
  26+ 9410 CD B5 94     	call Comprueba_limite_vertical
  27+ 9413
  28+ 9413              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9413              ; -----------------------
  30+ 9413              ; -----------------------
  31+ 9413              ; -----------------------
  32+ 9413
  33+ 9413 CD 02 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9416 CD 39 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9419 CD 98 96     	call Define_rutina_de_impresion
  36+ 941C
  37+ 941C 3A 13 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 941F CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9421 32 13 89     	ld (Ctrl_0),a
  40+ 9424
  41+ 9424 C9           	ret
  42+ 9425
  43+ 9425              ; *******************************************************************************************************************************************************************************************
  44+ 9425              ;	21/01/23
  45+ 9425              ;
  46+ 9425              ; 	Comprueba_limite_horizontal.
  47+ 9425              ;
  48+ 9425              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9425              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9425              ;
  51+ 9425              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9425              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9425              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9425              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9425
  56+ 9425
  57+ 9425
  58+ 9425 3A 13 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9428 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 942A 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 942C E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 942E 32 13 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9431 18 09            jr 6F
  64+ 9433 CB 5F        1 bit 3,a
  65+ 9435 28 0A            jr z,2F
  66+ 9437 E6 F7            and $f7
  67+ 9439 32 13 89         ld (Ctrl_0),a
  68+ 943C CD 8F 95     6 call Inicializacion
  69+ 943F 18 5B            jr 5F
  70+ 9441 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9442
  72+ 9442              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9442              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9442
  75+ 9442 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9443 2A 23 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9446 CD F1 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9449 67           	ld h,a
  79+ 944A EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 944B CD F1 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 944E 67           	ld h,a
  82+ 944F A7           	and a
  83+ 9450 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9452 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9453 3A F9 88     	ld a,(Cuad_objeto)
  86+ 9456 FE 02        	cp 2
  87+ 9458 38 1E        	jr c,3F
  88+ 945A 28 1C        	jr z,3F
  89+ 945C 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 945D 28 23            jr z,7F
  91+ 945F 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9461 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9463 E1           	pop hl
  94+ 9464
  95+ 9464              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9464              ; _para indicar con E="2" en caso necesario.
  97+ 9464
  98+ 9464 E5               push hl
  99+ 9465 C5               push bc
 100+ 9466 CD F1 99     	call calcula_tercio
 101+ 9469 FE 01        	cp 1
 102+ 946B 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 946D CD 9D 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9470 28 26            jr z,9F
 105+ 9472 38 24            jr c,9F
 106+ 9474 1E 00        11 ld e,0
 107+ 9476 18 22            jr 8F
 108+ 9478 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9479 28 07        	jr z, 7F
 110+ 947B 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 947D 1E 00         	ld e,0
 112+ 947F E1           	pop hl
 113+ 9480 18 04        	jr 4F
 114+ 9482 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9484 18 15            jr 10F
 116+ 9486
 117+ 9486              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9486              ; _para indicar con E="2" en caso necesario.
 119+ 9486
 120+ 9486 E5           4 push hl
 121+ 9487 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9488 CD F1 99     	call calcula_tercio
 123+ 948B FE 01        	cp 1
 124+ 948D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 948F CD 9D 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9492 28 04            jr z,9F
 127+ 9494 30 02            jr nc,9F
 128+ 9496 18 02        	jr 8F
 129+ 9498 1E 02        9 ld e,2
 130+ 949A C1           8 pop bc
 131+ 949B E1           10 pop hl
 132+ 949C C9           5 ret
 133+ 949D
 134+ 949D              ; --------------------
 135+ 949D              ;
 136+ 949D              ; 25/08/22
 137+ 949D
 138+ 949D CD F1 99     Comprueba_centro call calcula_tercio
 139+ 94A0 67               ld h,a
 140+ 94A1 08           	ex af,af
 141+ 94A2 FE 02        	cp 2
 142+ 94A4 38 07        	jr c,1F
 143+ 94A6 28 05        	jr z,1F
 144+ 94A8 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94AB 18 03        	jr 2F
 146+ 94AD 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94B0 08           2 ex af,af
 148+ 94B1 A7               and a
 149+ 94B2 ED 42            sbc hl,bc
 150+ 94B4 C9               ret
 151+ 94B5
 152+ 94B5              ; *********************************************************************************************************************************************************************************************
 153+ 94B5              ;
 154+ 94B5              ;   16/8/22
 155+ 94B5              ;
 156+ 94B5              ;	Comprueba_limite_vertical
 157+ 94B5              ;
 158+ 94B5              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94B5              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94B5              ;
 161+ 94B5
 162+ 94B5 2A E7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94B8 7D           	ld a,l
 164+ 94B9 E6 1F        	and $1F
 165+ 94BB 57           	ld d,a
 166+ 94BC 3A 25 89     	ld a,(Limite_vertical)
 167+ 94BF BA           	cp d 											; Límite - Posición.
 168+ 94C0 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94C1 3A F9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94C4 CB 47        	bit 0,a
 171+ 94C6 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94C8
 173+ 94C8              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94C8
 175+ 94C8 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94C9 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94CB
 178+ 94CB              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94CB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94CB
 181+ 94CB 3A EB 88         ld a,(Coordenada_X)
 182+ 94CE 16 0F            ld d,Centro_izquierda
 183+ 94D0 A7               and a
 184+ 94D1 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94D2 28 1E            jr z,3F
 186+ 94D4 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94D6              ;                                                    ; _salimos sin modificar nada.
 188+ 94D6 18 0E            jr 2F
 189+ 94D8 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94D9 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94DB
 192+ 94DB              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94DB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94DB
 195+ 94DB 3A EB 88         ld a,(Coordenada_X)
 196+ 94DE 16 10            ld d,Centro_derecha
 197+ 94E0 A7               and a
 198+ 94E1 92               sub d
 199+ 94E2 28 0E            jr z,3F
 200+ 94E4 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94E6              ;                                                    ; _salimos sin modificar nada.
 202+ 94E6 CB 43        2 bit 0,e
 203+ 94E8 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94EA C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94EB CD 7F 95         call Modificaccionne
 206+ 94EE C1           	pop bc
 207+ 94EF CD 8F 95         call Inicializacion
 208+ 94F2 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94F3
 210+ 94F3              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94F3
 212+ 94F3 C5           4 push bc
 213+ 94F4 01 E6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94F7 0A           	ld a,(bc)
 215+ 94F8 3D           	dec a
 216+ 94F9 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94FA 7D           	ld a,l
 218+ 94FB 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94FC CB 47        	bit 0,a
 220+ 94FE 28 03        	jr z,5F
 221+ 9500 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9501 18 2E        	jr 7F
 223+ 9503
 224+ 9503              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9503
 226+ 9503 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9504 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9505 3A 13 89     	ld a,(Ctrl_0)
 229+ 9508 CB 4F        	bit 1,a
 230+ 950A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 950C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 950D
 233+ 950D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 950D
 235+ 950D 1C               inc e
 236+ 950E 1D               dec e
 237+ 950F 20 07            jr nz,12F
 238+ 9511 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9512 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9513 22 E7 88     	ld (Posicion_actual),hl
 241+ 9516 18 44        13 jr 9F
 242+ 9518 CB 43        12 bit 0,e
 243+ 951A 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 951C              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 951C C1           	pop bc
 246+ 951D 18 D3        	jr 3B
 247+ 951F 80           14 add b
 248+ 9520 6F               ld l,a
 249+ 9521 22 E7 88     	ld (Posicion_actual),hl
 250+ 9524 CD 7F 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9527 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9529 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 952B 32 13 89         ld (Ctrl_0),a
 254+ 952E F1           	pop af
 255+ 952F 18 2B        	jr 9F
 256+ 9531
 257+ 9531              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9531
 259+ 9531 F5           7 push af
 260+ 9532 3A 13 89     	ld a,(Ctrl_0)
 261+ 9535 CB 47        	bit 0,a
 262+ 9537 20 1D        	jr nz,8F
 263+ 9539 F1           	pop af
 264+ 953A
 265+ 953A              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 953A
 267+ 953A 1C           	inc e
 268+ 953B 1D               dec e
 269+ 953C 20 07            jr nz,10F
 270+ 953E 90           	sub b
 271+ 953F 6F               ld l,a
 272+ 9540 22 E7 88     	ld (Posicion_actual),hl
 273+ 9543 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9545              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9545 CB 43        10 bit 0,e
 276+ 9547 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9549              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9549 C1           	pop bc
 279+ 954A 18 A6        	jr 3B
 280+ 954C 90           16 sub b
 281+ 954D 6F               ld l,a
 282+ 954E 22 E7 88     	ld (Posicion_actual),hl
 283+ 9551 CD 7F 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9554 18 06            jr 9F
 285+ 9556 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9558 32 13 89         ld (Ctrl_0),a
 287+ 955B F1           	pop af
 288+ 955C C1           9 pop bc
 289+ 955D 1E 00        	ld e,0
 290+ 955F CD 8F 95         call Inicializacion
 291+ 9562 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9563 08           	ex af,af
 293+ 9564 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9565 18 8B            jr 3B
 295+ 9567
 296+ 9567              ; --------------------
 297+ 9567
 298+ 9567 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9569 CD ED 96     1 call PreviousScan
 300+ 956C 10 FB            djnz 1B
 301+ 956E 22 E7 88     	ld (Posicion_actual),hl
 302+ 9571 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9572 C9           	ret
 304+ 9573
 305+ 9573              ; --------------------
 306+ 9573
 307+ 9573 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9575 CD DE 96     1 call NextScan
 309+ 9578 10 FB            djnz 1B
 310+ 957A 22 E7 88     	ld (Posicion_actual),hl
 311+ 957D AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 957E C9           	ret
 313+ 957F
 314+ 957F              ; --------------------
 315+ 957F              ;
 316+ 957F              ;	22/01/23
 317+ 957F              ;
 318+ 957F              ;	E="1". Hemos cambiado de cuadrante.
 319+ 957F              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 957F              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 957F
 322+ 957F
 323+ 957F              Modificaccionne
 324+ 957F
 325+ 957F 3A F9 88     	ld a,(Cuad_objeto)
 326+ 9582 FE 02        	cp 2
 327+ 9584 CC 67 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9587 DC 67 95         call c,Modifica_Pos_actual
 329+ 958A C8           	ret z
 330+ 958B CD 73 95         call Modifica_Pos_actual2
 331+ 958E C9               ret
 332+ 958F
 333+ 958F              ; *************************************************************************************************************************************************************************************************
 334+ 958F              ;
 335+ 958F              ;	13/8/22
 336+ 958F              ;
 337+ 958F              ;	Inicializacion
 338+ 958F              ;
 339+ 958F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 958F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 958F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 958F              ;
 343+ 958F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 958F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 958F              ;	_ desaparece/aparece.
 346+ 958F
 347+ 958F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 958F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 958F              ;
 350+ 958F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 958F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 958F              ; 		   [E] ="0"
 353+ 958F
 354+ 958F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 958F
 356+ 958F CD F1 99     Inicializacion call calcula_tercio
 357+ 9592 28 36        	jr z,primit
 358+ 9594 E6 02        	and 2
 359+ 9596 20 07        	jr nz,segmit
 360+ 9598 7D           	ld a,l
 361+ 9599 FE 7F        	cp $7f
 362+ 959B 38 2D        	jr c,primit
 363+ 959D 28 2B        	jr z,primit
 364+ 959F CD FC 95     segmit call column
 365+ 95A2 38 13        	jr c,tercuad
 366+ 95A4 3E 04        cuarcuad ld a,4
 367+ 95A6 32 F9 88     	ld (Cuad_objeto),a
 368+ 95A9 21 20 48     	ld hl,$4820
 369+ 95AC 22 23 89     	ld (Limite_horizontal),hl
 370+ 95AF 21 25 89     	ld hl,Limite_vertical
 371+ 95B2 36 0D        	ld (hl),$0d
 372+ 95B4 08           	ex af,af
 373+ 95B5 18 3C        	jr 1F
 374+ 95B7              tercuad
 375+ 95B7 3E 03        	ld a,3
 376+ 95B9 32 F9 88     	ld (Cuad_objeto),a
 377+ 95BC 21 20 48     	ld hl,$4820
 378+ 95BF 22 23 89     	ld (Limite_horizontal),hl
 379+ 95C2 21 25 89     	ld hl,Limite_vertical
 380+ 95C5 36 12        	ld (hl),$12
 381+ 95C7 08           	ex af,af
 382+ 95C8 18 29        	jr 1F
 383+ 95CA CD FC 95     primit call column
 384+ 95CD 38 13        	jr c, primcuad
 385+ 95CF              segcuad
 386+ 95CF 3E 02        	ld a,2
 387+ 95D1 32 F9 88     	ld (Cuad_objeto),a
 388+ 95D4 21 C0 4F     	ld hl,$4fc0
 389+ 95D7 22 23 89     	ld (Limite_horizontal),hl
 390+ 95DA 21 25 89     	ld hl,Limite_vertical
 391+ 95DD 36 0D        	ld (hl),$0d
 392+ 95DF 08           	ex af,af
 393+ 95E0 18 11        	jr 1F
 394+ 95E2              primcuad
 395+ 95E2 3E 01        	ld a,1
 396+ 95E4 32 F9 88     	ld (Cuad_objeto),a
 397+ 95E7 21 C0 4F     	ld hl,$4fc0
 398+ 95EA 22 23 89     	ld (Limite_horizontal),hl
 399+ 95ED 21 25 89     	ld hl,Limite_vertical
 400+ 95F0 36 12        	ld (hl),$12
 401+ 95F2 08           	ex af,af
 402+ 95F3 CD 7C 9D     1 call Genera_coordenadas
 403+ 95F6 21 13 89     	ld hl,Ctrl_0
 404+ 95F9 CB EE        	set 5,(hl)
 405+ 95FB C9           	ret
 406+ 95FC
 407+ 95FC              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95FC
 409+ 95FC              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95FC              ;
 411+ 95FC              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95FC
 413+ 95FC 7D           column ld a,l
 414+ 95FD E6 1F        	and $1f
 415+ 95FF FE 10         	cp $10
 416+ 9601 C9            	ret
 417+ 9602
 418+ 9602              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9602              ;
 420+ 9602              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9602              ;
 422+ 9602              ; 14/12/22
 423+ 9602              ;
 424+ 9602              ;	Modifica: A y BC.
 425+ 9602
 426+ 9602 3A F9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9605 E6 01        	and 1
 428+ 9607 28 17        	jr z,1F
 429+ 9609
 430+ 9609              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9609
 432+ 9609 3A EB 88     	ld a,(Coordenada_X)
 433+ 960C 47           	ld b,a
 434+ 960D 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 960E 79           	ld a,c
 436+ 960F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9610 38 08        	jr c,2F
 438+ 9612 47           	ld b,a
 439+ 9613 79           	ld a,c
 440+ 9614 90           	sub b
 441+ 9615 32 22 89     	ld (Columnas),a
 442+ 9618 18 1B        	jr 4F
 443+ 961A 79           2 ld a,c
 444+ 961B 32 22 89     	ld (Columnas),a
 445+ 961E 18 15        	jr 4F
 446+ 9620
 447+ 9620              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9620
 449+ 9620 3A EB 88     1 ld a,(Coordenada_X)
 450+ 9623 81           	add c
 451+ 9624 3D           	dec a
 452+ 9625 D6 1F        	sub $1f
 453+ 9627 38 08        	jr c,3F
 454+ 9629 47           	ld b,a
 455+ 962A 79           	ld a,c
 456+ 962B 90           	sub b
 457+ 962C 32 22 89     	ld (Columnas),a
 458+ 962F 18 04        	jr 4F
 459+ 9631 79           3 ld a,c
 460+ 9632 32 22 89     	ld (Columnas),a
 461+ 9635 D9           4 exx
 462+ 9636 4F           	ld c,a
 463+ 9637 D9           	exx
 464+ 9638 C9            ret
 465+ 9639
 466+ 9639              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9639              ;
 468+ 9639              ;   19/7/23
 469+ 9639              ;
 470+ 9639              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9639              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9639              ;
 473+ 9639              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9639              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9639              ;
 476+ 9639              ;	DESTRUYE: HL,B Y A.
 477+ 9639
 478+ 9639 3A F9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 963C FE 02        	cp 2
 480+ 963E 38 18        	jr c,1F
 481+ 9640 28 16        	jr z,1F
 482+ 9642 E6 01        	and 1
 483+ 9644 28 0D        	jr z,3F
 484+ 9646
 485+ 9646              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9646
 487+ 9646 CD 8C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9649
 489+ 9649 7D           9 ld a,l
 490+ 964A E6 1F        	and $1f
 491+ 964C 28 2A        	jr z,7F
 492+ 964E 2B           	dec hl
 493+ 964F 10 F8        	djnz 9B
 494+ 9651 18 25        	jr 7F
 495+ 9653
 496+ 9653              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9653
 498+ 9653 2A E7 88     3 ld hl,(Posicion_actual)
 499+ 9656 18 20        	jr 7F
 500+ 9658
 501+ 9658 28 14        1 jr z,2F
 502+ 965A
 503+ 965A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 965A
 505+ 965A CD 8C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 965D
 507+ 965D 7D           4 ld a,l
 508+ 965E E6 1F        	and $1f
 509+ 9660 28 03        	jr z,6F
 510+ 9662 2B           	dec hl
 511+ 9663 10 F8        	djnz 4B
 512+ 9665 06 0F        6 ld b,15
 513+ 9667 CD ED 96     5 call PreviousScan
 514+ 966A 10 FB        	djnz 5B
 515+ 966C 18 0A        	jr 7F
 516+ 966E
 517+ 966E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 966E
 519+ 966E CD 8C 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9671 06 0F        	ld b,15
 521+ 9673 CD ED 96     8 call PreviousScan
 522+ 9676 10 FB        	djnz 8B
 523+ 9678
 524+ 9678 E5           7 push hl
 525+ 9679 DD E1        	pop ix
 526+ 967B
 527+ 967B 2A E9 88     	ld hl,(Puntero_objeto)
 528+ 967E E5           	push hl
 529+ 967F FD E1        	pop iy
 530+ 9681
 531+ 9681              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9681
 533+ 9681 3A 13 89     	ld a,(Ctrl_0)
 534+ 9684 CB 77        	bit 6,a
 535+ 9686 C8           	ret z
 536+ 9687
 537+ 9687              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9687              ; _ entidad / Amadeus´.
 539+ 9687
 540+ 9687 DD 22 71 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 968B
 542+ 968B C9           	ret
 543+ 968C
 544+ 968C              ; --------------------------------------------------------------------------------------------------------------------
 545+ 968C              ;
 546+ 968C              ;	2/1/23
 547+ 968C              ;
 548+ 968C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 968C              ;
 550+ 968C              ;	Tras esta rutina tenemos:
 551+ 968C              ;
 552+ 968C              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 968C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 968C              ;
 555+ 968C              ;	DESTRUYE!!!!! HL,B y A.
 556+ 968C
 557+ 968C 2A E7 88     Operandos ld hl,(Posicion_actual)
 558+ 968F 3A 22 89     	ld a,(Columnas)
 559+ 9692 3D           	dec a
 560+ 9693 20 01        	jr nz,1F
 561+ 9695 3C           	inc a
 562+ 9696 47           1 ld b,a
 563+ 9697 C9           	ret
 564+ 9698
 565+ 9698              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9698              ;
 567+ 9698              ;	3/1/23
 568+ 9698              ;
 569+ 9698              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9698              ;
 571+ 9698              ;	Destruye: A,B,HL y DE.
 572+ 9698
 573+ 9698              Define_rutina_de_impresion
 574+ 9698
 575+ 9698 3A E6 88     	ld a,(Columns)
 576+ 969B 47           	ld b,a
 577+ 969C 3A 22 89     	ld a,(Columnas)
 578+ 969F B8           	cp b
 579+ 96A0 20 0D        	jr nz,2f
 580+ 96A2
 581+ 96A2              ;	La entidad se imprime entera.
 582+ 96A2
 583+ 96A2 21 C1 97     	ld hl, Indice_entidades_completas
 584+ 96A5 E6 01        	and 1
 585+ 96A7 28 02        	jr z,1F
 586+ 96A9
 587+ 96A9 23           	inc hl
 588+ 96AA 23           	inc hl
 589+ 96AB
 590+ 96AB CD 16 8D     1 call Extrae_address
 591+ 96AE C9           	ret		;	ret
 592+ 96AF
 593+ 96AF              ;	La entidad no se imprime entera en pantalla.
 594+ 96AF
 595+ 96AF 3A F9 88     2 ld a,(Cuad_objeto)
 596+ 96B2 E6 01        	and 1
 597+ 96B4 28 17        	jr z,3F
 598+ 96B6
 599+ 96B6              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96B6
 601+ 96B6 21 C5 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96B9 3A E6 88     4 ld a,(Columns)
 603+ 96BC E6 01        	and 1
 604+ 96BE 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96C0
 606+ 96C0 23           	inc hl
 607+ 96C1 23           	inc hl
 608+ 96C2
 609+ 96C2 3A 22 89     	ld a,(Columnas)
 610+ 96C5 E6 01        	and 1
 611+ 96C7 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96C9
 613+ 96C9 23           	inc hl
 614+ 96CA 23           	inc hl
 615+ 96CB
 616+ 96CB 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96CD
 618+ 96CD 21 CB 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96D0 18 E7        	jr 4B
 620+ 96D2
 621+ 96D2              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96D2              ;
 623+ 96D2              ;	Prepara_draw
 624+ 96D2              ;
 625+ 96D2              ;	Es una rutina de carga.
 626+ 96D2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96D2              ;
 628+ 96D2              ;	FUNCIONAMIENTO:
 629+ 96D2              ;
 630+ 96D2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96D2              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96D2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96D2              ;
 634+ 96D2              ;	DESTRUYE:
 635+ 96D2              ;
 636+ 96D2              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96D2
 638+ 96D2 21 E5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96D5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96D6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96D7 4E           	ld c,(hl)
 642+ 96D8 2A E7 88     	ld hl,(Posicion_actual)
 643+ 96DB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96DD C9           	ret
 645+ 96DE
 646+ 96DE              ;----------------------------------------------------------------------------------------------------------------
 647+ 96DE              ;
 648+ 96DE              ;	5/08/22
 649+ 96DE              ;
 650+ 96DE              ;   NextScan.
 651+ 96DE              ;
 652+ 96DE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96DE              ;
 654+ 96DE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96DE              ;
 656+ 96DE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96DE              ;
 658+ 96DE              ;       DESTRUIDOS: AF y HL !!!
 659+ 96DE              ;
 660+ 96DE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96DE              ;
 662+ 96DE
 663+ 96DE 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96DF 7C               ld a,h
 665+ 96E0 E6 07            and 7
 666+ 96E2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96E3
 668+ 96E3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96E4 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96E6 6F               ld l,a
 671+ 96E7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96E8
 673+ 96E8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96E9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96EB 67               ld h,a
 676+ 96EC C9               ret
 677+ 96ED
 678+ 96ED              ;----------------------------------------------------------------------------------------------------------------
 679+ 96ED              ;
 680+ 96ED              ;	5/08/22
 681+ 96ED              ;
 682+ 96ED              ;   PreviousScan.
 683+ 96ED              ;
 684+ 96ED              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96ED              ;
 686+ 96ED              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96ED              ;
 688+ 96ED              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96ED              ;
 690+ 96ED              ;       DESTRUIDOS: AF y HL !!!
 691+ 96ED              ;
 692+ 96ED              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96ED              ;
 694+ 96ED
 695+ 96ED 7C           PreviousScan ld a,h
 696+ 96EE 25               dec h               ; Dec H.
 697+ 96EF E6 07            and 7
 698+ 96F1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96F2
 700+ 96F2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96F3 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96F5 6F               ld l,a
 703+ 96F6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96F7
 705+ 96F7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96F8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96FA 67               ld h,a
 708+ 96FB C9               ret
 709+ 96FC
 710+ 96FC              ; -----------------------------------------------------------------------------------
 711+ 96FC              ;
 712+ 96FC              ;	31/7/23
 713+ 96FC              ;
 714+ 96FC              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96FC              ;	Extrae fotos de Album_de_fotos.
 716+ 96FC
 717+ 96FC              Extrae_foto_entidades
 718+ 96FC
 719+ 96FC 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96FF 7E           	ld a,(hl)
 721+ 9700 A7           	and a
 722+ 9701 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9702
 724+ 9702 3A 34 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9705 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9706 C8           	ret z
 727+ 9707
 728+ 9707              ; -----------------------------------
 729+ 9707
 730+ 9707 ED 73 39 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 970B 31 00 70     	ld sp,Album_de_fotos
 732+ 970E
 733+ 970E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9710 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9711 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9712
 737+ 9712 ED 73 3B 89  	ld (Stack_2),sp
 738+ 9716 ED 7B 39 89  	ld sp,(Stack)
 739+ 971A
 740+ 971A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 971A
 742+ 971A 3E CD        	ld a,$cd
 743+ 971C 32 24 97     	ld (Imprime),a
 744+ 971F EB           	ex de,hl
 745+ 9720 22 25 97     	ld (Imprime+1),hl
 746+ 9723 EB           	ex de,hl
 747+ 9724
 748+ 9724              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 9724
 750+ 9724 00 00 00     Imprime db 0,0,0
 751+ 9727
 752+ 9727 ED 73 39 89  	ld (Stack),sp
 753+ 972B
 754+ 972B 3A 34 89     	ld a,(Numero_de_malotes)
 755+ 972E 3D           	dec a
 756+ 972F 28 09        	jr z,1F
 757+ 9731 32 34 89      	ld (Numero_de_malotes),a
 758+ 9734
 759+ 9734 ED 7B 3B 89  	ld sp,(Stack_2)
 760+ 9738 18 D4        	jr 2B
 761+ 973A
 762+ 973A AF           1 xor a
 763+ 973B 32 3B 89     	ld (Stack_2),a
 764+ 973E
 765+ 973E C9           	ret
 766+ 973F
 767+ 973F              ; -----------------------------------------------------------------------------------
 768+ 973F              ;
 769+ 973F              ;	28/2/23
 770+ 973F              ;
 771+ 973F              ;	Pinta los disparos generados.
 772+ 973F
 773+ 973F              Extrae_foto_disparos
 774+ 973F
 775+ 973F 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 9742 7E               ld a,(hl)
 777+ 9743 A7               and a
 778+ 9744 C8               ret z
 779+ 9745
 780+ 9745 3A 61 89     	ld a,(Numero_de_disparotes)
 781+ 9748 A7           	and a
 782+ 9749 C8           	ret z
 783+ 974A ED 73 39 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 974E 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 9751
 786+ 9751 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 9753 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 9754 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 9755
 790+ 9755 ED 73 3B 89  	ld (Stack_2),sp
 791+ 9759 ED 7B 39 89  	ld sp,(Stack)
 792+ 975D
 793+ 975D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 975D
 795+ 975D 3E CD        	ld a,$cd
 796+ 975F 32 67 97     	ld (Imprime2),a
 797+ 9762 EB           	ex de,hl
 798+ 9763 22 68 97     	ld (Imprime2+1),hl
 799+ 9766 EB           	ex de,hl
 800+ 9767
 801+ 9767              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 9767
 803+ 9767 00 00 00     Imprime2 db 0,0,0
 804+ 976A
 805+ 976A 3A 61 89     	ld a,(Numero_de_disparotes)
 806+ 976D 3D           	dec a
 807+ 976E 28 09        	jr z,1F
 808+ 9770 32 61 89      	ld (Numero_de_disparotes),a
 809+ 9773
 810+ 9773 ED 7B 3B 89  	ld sp,(Stack_2)
 811+ 9777 18 D8        	jr 2B
 812+ 9779
 813+ 9779 AF           1 xor a
 814+ 977A 32 3B 89     	ld (Stack_2),a
 815+ 977D C9           	ret
 816+ 977E
 817+ 977E              ; -----------------------------------------------------------------------------------
 818+ 977E              ;
 819+ 977E              ;	4/9/23
 820+ 977E              ;
 821+ 977E              ;	Rutina principal de pintado de Amadeus.
 822+ 977E              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 977E
 824+ 977E              Extrae_foto_Amadeus
 825+ 977E
 826+ 977E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 827+ 9781 7E           	ld a,(hl)
 828+ 9782 A7           	and a
 829+ 9783 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 9784
 831+ 9784 3A 34 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9787 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9788 C8           	ret z
 834+ 9789
 835+ 9789              ; -----------------------------------
 836+ 9789
 837+ 9789 ED 73 39 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 978D 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 9790
 840+ 9790 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9792 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 9793 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 9794
 844+ 9794 ED 73 3B 89  	ld (Stack_2),sp
 845+ 9798 ED 7B 39 89  	ld sp,(Stack)
 846+ 979C
 847+ 979C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 979C
 849+ 979C 3E CD        	ld a,$cd
 850+ 979E 32 A6 97     	ld (Imprime_Amadeus),a
 851+ 97A1 EB           	ex de,hl
 852+ 97A2 22 A7 97     	ld (Imprime_Amadeus+1),hl
 853+ 97A5 EB           	ex de,hl
 854+ 97A6
 855+ 97A6              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 97A6
 857+ 97A6 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 97A9
 859+ 97A9 ED 73 39 89  	ld (Stack),sp
 860+ 97AD
 861+ 97AD 3A 34 89     	ld a,(Numero_de_malotes)
 862+ 97B0 3D           	dec a
 863+ 97B1 28 09        	jr z,1F
 864+ 97B3 32 34 89      	ld (Numero_de_malotes),a
 865+ 97B6
 866+ 97B6 ED 7B 3B 89  	ld sp,(Stack_2)
 867+ 97BA 18 D4        	jr 2B
 868+ 97BC
 869+ 97BC AF           1 xor a
 870+ 97BD 32 3B 89     	ld (Stack_2),a
 871+ 97C0
 872+ 97C0 C9           	ret
# file closed: Draw_XOR.asm
1650  97C1              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97C1              ;   índices de Rutinas de impresión.
   2+ 97C1
   3+ 97C1 D1 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97C3 FE 97            defw Pinta_Amadeus_3x2
   5+ 97C5
   6+ 97C5 54 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97C7 F4 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97C9 A8 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97CB
  10+ 97CB 7E 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97CD 82 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97CF 36 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97D1
  14+ 97D1
  15+ 97D1              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97D1              ;
  17+ 97D1              ;   12/12/22
  18+ 97D1              ;
  19+ 97D1              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97D1              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97D1              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97D1              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97D1              ;
  24+ 97D1              ;   Modifica: DE y HL.
  25+ 97D1
  26+ 97D1 ED 73 39 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97D5 FD F9        	ld sp,iy
  28+ 97D7 06 10            ld b,16
  29+ 97D9 D1           1 pop de
  30+ 97DA 7B               ld a,e
  31+ 97DB AE               xor (hl)
  32+ 97DC 77           	ld (hl),a
  33+ 97DD 23           	inc hl
  34+ 97DE 7A               ld a,d
  35+ 97DF AE               xor (hl)
  36+ 97E0 77           	ld (hl),a
  37+ 97E1 2B           	dec hl
  38+ 97E2 24           	inc h
  39+ 97E3 7C               ld a,h
  40+ 97E4 E6 07            and 7
  41+ 97E6 20 0A            jr nz,2F
  42+ 97E8 7D               ld a,l
  43+ 97E9 C6 20            add a,$20
  44+ 97EB 6F               ld l,a
  45+ 97EC 38 04            jr c,2F
  46+ 97EE 7C               ld a,h
  47+ 97EF D6 08            sub 8
  48+ 97F1 67               ld h,a
  49+ 97F2 7C           2 ld a,h
  50+ 97F3 FE 58            cp $58
  51+ 97F5 28 02            jr z,3F
  52+ 97F7 10 E0            djnz 1B
  53+ 97F9 ED 7B 39 89  3 ld sp,(Stack)
  54+ 97FD C9           	ret
  55+ 97FE
  56+ 97FE ED 73 39 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9802 FD F9        	ld sp,iy
  58+ 9804 06 08            ld b,8
  59+ 9806 D1           1 pop de
  60+ 9807 7B               ld a,e
  61+ 9808 AE               xor (hl)
  62+ 9809 77           	ld (hl),a
  63+ 980A 23           	inc hl
  64+ 980B 7A               ld a,d
  65+ 980C AE               xor (hl)
  66+ 980D 77           	ld (hl),a
  67+ 980E 23           	inc hl
  68+ 980F D1           	pop de
  69+ 9810 7B               ld a,e
  70+ 9811 AE               xor (hl)
  71+ 9812 77           	ld (hl),a
  72+ 9813 2B           	dec hl
  73+ 9814 2B           	dec hl
  74+ 9815 24           	inc h
  75+ 9816 7C               ld a,h
  76+ 9817 E6 07            and 7
  77+ 9819 20 0A            jr nz,2F
  78+ 981B 7D               ld a,l
  79+ 981C C6 20            add a,$20
  80+ 981E 6F               ld l,a
  81+ 981F 38 04            jr c,2F
  82+ 9821 7C               ld a,h
  83+ 9822 D6 08            sub 8
  84+ 9824 67               ld h,a
  85+ 9825 7C           2 ld a,h
  86+ 9826 FE 58            cp $58
  87+ 9828 28 25            jr z,4F
  88+ 982A 7A               ld a,d
  89+ 982B AE               xor (hl)
  90+ 982C 77               ld (hl),a
  91+ 982D D1           	pop de
  92+ 982E 23           	inc hl
  93+ 982F 7B               ld a,e
  94+ 9830 AE               xor (hl)
  95+ 9831 77           	ld (hl),a
  96+ 9832 23           	inc hl
  97+ 9833 7A               ld a,d
  98+ 9834 AE               xor (hl)
  99+ 9835 77           	ld (hl),a
 100+ 9836 2B           	dec hl
 101+ 9837 2B           	dec hl
 102+ 9838 24           	inc h
 103+ 9839 7C               ld a,h
 104+ 983A E6 07            and 7
 105+ 983C 20 0A            jr nz,3F
 106+ 983E 7D               ld a,l
 107+ 983F C6 20            add a,$20
 108+ 9841 6F               ld l,a
 109+ 9842 38 04            jr c,3F
 110+ 9844 7C               ld a,h
 111+ 9845 D6 08            sub 8
 112+ 9847 67               ld h,a
 113+ 9848 7C           3 ld a,h
 114+ 9849 FE 58            cp $58
 115+ 984B 28 02            jr z,4F
 116+ 984D 10 B7            djnz 1B
 117+ 984F ED 7B 39 89  4 ld sp,(Stack)
 118+ 9853 C9           	ret
 119+ 9854
 120+ 9854              ; ---------------------------------------------------
 121+ 9854
 122+ 9854 ED 73 39 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9858 FD F9        	ld sp,iy
 124+ 985A
 125+ 985A              ; >>>
 126+ 985A
 127+ 985A 06 10            ld b,16
 128+ 985C D1           1 pop de
 129+ 985D 7A           	ld a,d
 130+ 985E AE           	xor (hl)
 131+ 985F 77           	ld (hl),a
 132+ 9860 24           	inc h
 133+ 9861 7C               ld a,h
 134+ 9862 E6 07            and 7
 135+ 9864 20 0C            jr nz,2F
 136+ 9866 7D               ld a,l
 137+ 9867 C6 20            add a,$20
 138+ 9869 6F               ld l,a
 139+ 986A 38 06            jr c,2F
 140+ 986C 7C               ld a,h
 141+ 986D D6 08            sub 8
 142+ 986F 67               ld h,a
 143+ 9870 18 00            jr 2F
 144+ 9872 7C           2 ld a,h
 145+ 9873 FE 58            cp $58
 146+ 9875 28 02            jr z,3F
 147+ 9877 10 E3            djnz 1B
 148+ 9879 ED 7B 39 89  3 ld sp,(Stack)
 149+ 987D C9           	ret
 150+ 987E
 151+ 987E ED 73 39 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9882 FD F9        	ld sp,iy
 153+ 9884
 154+ 9884              ; >>>
 155+ 9884
 156+ 9884 06 10            ld b,16
 157+ 9886 D1           1 pop de
 158+ 9887 7B           	ld a,e
 159+ 9888 AE           	xor (hl)
 160+ 9889 77           	ld (hl),a
 161+ 988A 24           	inc h
 162+ 988B 7C               ld a,h
 163+ 988C E6 07            and 7
 164+ 988E 20 0C            jr nz,2F
 165+ 9890 7D               ld a,l
 166+ 9891 C6 20            add a,$20
 167+ 9893 6F               ld l,a
 168+ 9894 38 06            jr c,2F
 169+ 9896 7C               ld a,h
 170+ 9897 D6 08            sub 8
 171+ 9899 67               ld h,a
 172+ 989A 18 00            jr 2F
 173+ 989C 7C           2 ld a,h
 174+ 989D FE 58            cp $58
 175+ 989F 28 02            jr z,3F
 176+ 98A1 10 E3            djnz 1B
 177+ 98A3 ED 7B 39 89  3 ld sp,(Stack)
 178+ 98A7 C9           	ret
 179+ 98A8
 180+ 98A8              ; ---------------------------------------------------
 181+ 98A8
 182+ 98A8 ED 73 39 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 98AC FD F9        	ld sp,iy
 184+ 98AE 06 08            ld b,8
 185+ 98B0 D1           1 pop de
 186+ 98B1 7A           	ld a,d
 187+ 98B2 AE           	xor (hl)
 188+ 98B3 77           	ld (hl),a
 189+ 98B4 23           	inc hl
 190+ 98B5 D1           	pop de
 191+ 98B6 7B           	ld a,e
 192+ 98B7 AE           	xor (hl)
 193+ 98B8 77           	ld (hl),a
 194+ 98B9 2B           	dec hl
 195+ 98BA 24            	inc h
 196+ 98BB 7C               ld a,h
 197+ 98BC E6 07            and 7
 198+ 98BE 20 0A            jr nz,2F
 199+ 98C0 7D               ld a,l
 200+ 98C1 C6 20            add a,$20
 201+ 98C3 6F               ld l,a
 202+ 98C4 38 04            jr c,2F
 203+ 98C6 7C               ld a,h
 204+ 98C7 D6 08            sub 8
 205+ 98C9 67               ld h,a
 206+ 98CA 7C           2 ld a,h
 207+ 98CB FE 58            cp $58
 208+ 98CD 28 20            jr z,4F
 209+ 98CF D1               pop de
 210+ 98D0 7B           	ld a,e
 211+ 98D1 AE           	xor (hl)
 212+ 98D2 77           	ld (hl),a
 213+ 98D3 23           	inc hl
 214+ 98D4 7A           	ld a,d
 215+ 98D5 AE           	xor (hl)
 216+ 98D6 77           	ld (hl),a
 217+ 98D7 2B           	dec hl
 218+ 98D8 24           	inc h
 219+ 98D9 7C               ld a,h
 220+ 98DA E6 07            and 7
 221+ 98DC 20 0A            jr nz,3F
 222+ 98DE 7D               ld a,l
 223+ 98DF C6 20            add a,$20
 224+ 98E1 6F               ld l,a
 225+ 98E2 38 04            jr c,3F
 226+ 98E4 7C               ld a,h
 227+ 98E5 D6 08            sub 8
 228+ 98E7 67               ld h,a
 229+ 98E8 7C           3 ld a,h
 230+ 98E9 FE 58            cp $58
 231+ 98EB 28 02            jr z,4F
 232+ 98ED 10 C1            djnz 1B
 233+ 98EF ED 7B 39 89  4 ld sp,(Stack)
 234+ 98F3 C9           	ret
 235+ 98F4
 236+ 98F4 ED 73 39 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98F8 FD F9        	ld sp,iy
 238+ 98FA 06 08            ld b,8
 239+ 98FC D1           1 pop de
 240+ 98FD D1           	pop de
 241+ 98FE 7B           	ld a,e
 242+ 98FF AE           	xor (hl)
 243+ 9900 77           	ld (hl),a
 244+ 9901 24            	inc h
 245+ 9902 7C               ld a,h
 246+ 9903 E6 07            and 7
 247+ 9905 20 0A            jr nz,2F
 248+ 9907 7D               ld a,l
 249+ 9908 C6 20            add a,$20
 250+ 990A 6F               ld l,a
 251+ 990B 38 04            jr c,2F
 252+ 990D 7C               ld a,h
 253+ 990E D6 08            sub 8
 254+ 9910 67               ld h,a
 255+ 9911 7C           2 ld a,h
 256+ 9912 FE 58            cp $58
 257+ 9914 28 1B            jr z,4F
 258+ 9916 D1               pop de
 259+ 9917 7A           	ld a,d
 260+ 9918 AE           	xor (hl)
 261+ 9919 77           	ld (hl),a
 262+ 991A 24           	inc h
 263+ 991B 7C               ld a,h
 264+ 991C E6 07            and 7
 265+ 991E 20 0A            jr nz,3F
 266+ 9920 7D               ld a,l
 267+ 9921 C6 20            add a,$20
 268+ 9923 6F               ld l,a
 269+ 9924 38 04            jr c,3F
 270+ 9926 7C               ld a,h
 271+ 9927 D6 08            sub 8
 272+ 9929 67               ld h,a
 273+ 992A 7C           3 ld a,h
 274+ 992B FE 58            cp $58
 275+ 992D 28 02            jr z,4F
 276+ 992F 10 CB            djnz 1B
 277+ 9931 ED 7B 39 89  4 ld sp,(Stack)
 278+ 9935 C9           	ret
 279+ 9936
 280+ 9936 ED 73 39 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 993A FD F9        	ld sp,iy
 282+ 993C 06 08            ld b,8
 283+ 993E D1           1 pop de
 284+ 993F 7B           	ld a,e
 285+ 9940 AE           	xor (hl)
 286+ 9941 77           	ld (hl),a
 287+ 9942 23           	inc hl
 288+ 9943 7A           	ld a,d
 289+ 9944 AE           	xor (hl)
 290+ 9945 77           	ld (hl),a
 291+ 9946 2B           	dec hl
 292+ 9947 24             	inc h
 293+ 9948 7C               ld a,h
 294+ 9949 E6 07            and 7
 295+ 994B 20 0A            jr nz,2F
 296+ 994D 7D               ld a,l
 297+ 994E C6 20            add a,$20
 298+ 9950 6F               ld l,a
 299+ 9951 38 04            jr c,2F
 300+ 9953 7C               ld a,h
 301+ 9954 D6 08            sub 8
 302+ 9956 67               ld h,a
 303+ 9957 7C           2 ld a,h
 304+ 9958 FE 58            cp $58
 305+ 995A 28 21            jr z,4F
 306+ 995C D1               pop de
 307+ 995D 7A           	ld a,d
 308+ 995E AE           	xor (hl)
 309+ 995F 77           	ld (hl),a
 310+ 9960 23           	inc hl
 311+ 9961 D1               pop de
 312+ 9962 7B           	ld a,e
 313+ 9963 AE           	xor (hl)
 314+ 9964 77           	ld (hl),a
 315+ 9965 2B           	dec hl
 316+ 9966 24           	inc h
 317+ 9967 7C               ld a,h
 318+ 9968 E6 07            and 7
 319+ 996A 20 0A            jr nz,3F
 320+ 996C 7D               ld a,l
 321+ 996D C6 20            add a,$20
 322+ 996F 6F               ld l,a
 323+ 9970 38 04            jr c,3F
 324+ 9972 7C               ld a,h
 325+ 9973 D6 08            sub 8
 326+ 9975 67               ld h,a
 327+ 9976 7C           3 ld a,h
 328+ 9977 FE 58            cp $58
 329+ 9979 28 02            jr z,4F
 330+ 997B 10 C1            djnz 1B
 331+ 997D ED 7B 39 89  4 ld sp,(Stack)
 332+ 9981 C9           	ret
 333+ 9982
 334+ 9982 ED 73 39 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9986 FD F9        	ld sp,iy
 336+ 9988 06 08            ld b,8
 337+ 998A D1           1 pop de
 338+ 998B 7B           	ld a,e
 339+ 998C AE           	xor (hl)
 340+ 998D 77           	ld (hl),a
 341+ 998E 24            	inc h
 342+ 998F 7C               ld a,h
 343+ 9990 E6 07            and 7
 344+ 9992 20 0A            jr nz,2F
 345+ 9994 7D               ld a,l
 346+ 9995 C6 20            add a,$20
 347+ 9997 6F               ld l,a
 348+ 9998 38 04            jr c,2F
 349+ 999A 7C               ld a,h
 350+ 999B D6 08            sub 8
 351+ 999D 67               ld h,a
 352+ 999E 7C           2 ld a,h
 353+ 999F FE 58            cp $58
 354+ 99A1 28 1C            jr z,4F
 355+ 99A3 D1               pop de
 356+ 99A4 7A           	ld a,d
 357+ 99A5 AE           	xor (hl)
 358+ 99A6 77           	ld (hl),a
 359+ 99A7 24           	inc h
 360+ 99A8 7C               ld a,h
 361+ 99A9 E6 07            and 7
 362+ 99AB 20 0A            jr nz,3F
 363+ 99AD 7D               ld a,l
 364+ 99AE C6 20            add a,$20
 365+ 99B0 6F               ld l,a
 366+ 99B1 38 04            jr c,3F
 367+ 99B3 7C               ld a,h
 368+ 99B4 D6 08            sub 8
 369+ 99B6 67               ld h,a
 370+ 99B7 7C           3 ld a,h
 371+ 99B8 FE 58            cp $58
 372+ 99BA 28 03            jr z,4F
 373+ 99BC D1               pop de
 374+ 99BD 10 CB            djnz 1B
 375+ 99BF ED 7B 39 89  4 ld sp,(Stack)
 376+ 99C3 C9           	ret
 377+ 99C4
 378+ 99C4              ; ---------------------------------------------------
 379+ 99C4              ;
 380+ 99C4              ;   27/02/23
 381+ 99C4              ;
 382+ 99C4              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99C4              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99C4              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99C4
 386+ 99C4 ED 73 39 89  Pinta_Disparo ld (Stack),sp
 387+ 99C8 FD F9            ld sp,iy
 388+ 99CA 06 03            ld b,3
 389+ 99CC D1           1 pop de
 390+ 99CD 7B               ld a,e
 391+ 99CE AE               xor (hl)
 392+ 99CF 77               ld (hl),a
 393+ 99D0 23               inc hl
 394+ 99D1 7A               ld a,d
 395+ 99D2 AE               xor (hl)
 396+ 99D3 77               ld (hl),a
 397+ 99D4 2B               dec hl
 398+ 99D5
 399+ 99D5 24               inc h
 400+ 99D6 7C               ld a,h
 401+ 99D7 E6 07            and 7
 402+ 99D9 20 0A            jr nz,2F
 403+ 99DB 7D               ld a,l
 404+ 99DC C6 20            add a,$20
 405+ 99DE 6F               ld l,a
 406+ 99DF 38 04            jr c,2F
 407+ 99E1 7C               ld a,h
 408+ 99E2 D6 08            sub 8
 409+ 99E4 67               ld h,a
 410+ 99E5 7C           2 ld a,h
 411+ 99E6 FE 58            cp $58
 412+ 99E8 28 02            jr z,3F
 413+ 99EA
 414+ 99EA 10 E0            djnz 1B
 415+ 99EC ED 7B 39 89  3 ld sp,(Stack)
 416+ 99F0 C9               ret
 417+ 99F1
# file closed: Rutinas_de_impresion_sprites.asm
1651  99F1              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99F1              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99F1              ;
   3+ 99F1              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99F1              ;
   5+ 99F1              ; *****************************************************************************************************************************************************************************************
   6+ 99F1              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99F1
   8+ 99F1 7C           calcula_tercio ld a,h
   9+ 99F2 E6 18        	and $18
  10+ 99F4 CB 2F        	sra a
  11+ 99F6 CB 2F        	sra a
  12+ 99F8 CB 2F        	sra a
  13+ 99FA C9           	ret
  14+ 99FB
# file closed: calcula_tercio.asm
1652  99FB              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99FB              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99FB              ;
   3+ 99FB              ;
   4+ 99FB              ;	CLS.
   5+ 99FB              ;
   6+ 99FB              ;	Limpia la pantalla y define sus atributos.
   7+ 99FB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99FB              ;
   9+ 99FB              ;	COLORES: 0 ..... NEGRO
  10+ 99FB              ;    		 1 ..... AZUL
  11+ 99FB              ; 			 2 ..... ROJO
  12+ 99FB              ;			 3 ..... MAGENTA
  13+ 99FB              ; 			 4 ..... VERDE
  14+ 99FB              ; 			 5 ..... CIAN
  15+ 99FB              ;			 6 ..... AMARILLO
  16+ 99FB              ; 			 7 ..... BLANCO
  17+ 99FB              ;
  18+ 99FB              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99FB              ;
  20+ 99FB              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99FB
  22+ 99FB
  23+ 99FB 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99FE 11 01 40     	LD DE,$4001
  25+ 9A01 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9A04 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9A06 ED B0        	LDIR
  28+ 9A08 01 FF 02     	LD BC,767
  29+ 9A0B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9A0C ED B0        	LDIR
  31+ 9A0E C9           	ret
  32+ 9A0F
# file closed: Cls.asm
1653  9A0F              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A0F              ; ******************************************************************************************************************************************************************************************
   2+ 9A0F              ;
   3+ 9A0F              ;   20/05/23
   4+ 9A0F              ;
   5+ 9A0F              ;	Recompone_posicion_inicio
   6+ 9A0F              ;
   7+ 9A0F              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9A0F              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9A0F              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9A0F              ;	_ a una u otra rutina.
  11+ 9A0F
  12+ 9A0F              Recompone_posicion_inicio
  13+ 9A0F
  14+ 9A0F 2A F7 88     	ld hl,(Posicion_inicio)
  15+ 9A12 7D           	ld a,l
  16+ 9A13 E6 1F        	and $1f
  17+ 9A15 28 16        	jr z,1F
  18+ 9A17
  19+ 9A17 FE 1F        	cp $1f
  20+ 9A19 28 0D        	jr z,3F
  21+ 9A1B
  22+ 9A1B 21 26 89     	ld hl,Ctrl_2
  23+ 9A1E CB C6        	set 0,(hl)
  24+ 9A20 2A E9 88     	ld hl,(Puntero_objeto)
  25+ 9A23 22 29 89     	ld (Repone_puntero_objeto),hl
  26+ 9A26 18 08        	jr 2F
  27+ 9A28
  28+ 9A28 CD C9 9B     3 call Mov_left
  29+ 9A2B 18 03        	jr 2F
  30+ 9A2D
  31+ 9A2D CD AB 9A     1 call Mov_right
  32+ 9A30 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A33 22 E9 88     	ld (Puntero_objeto),hl
  34+ 9A36 C9           	ret
  35+ 9A37
  36+ 9A37              ; ******************************************************************************************************************************************************************************************
  37+ 9A37              ;
  38+ 9A37              ;   27/05/23
  39+ 9A37              ;
  40+ 9A37              ;	Mov_down
  41+ 9A37              ;
  42+ 9A37              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A37              ;
  44+ 9A37              ;
  45+ 9A37              Mov_down
  46+ 9A37
  47+ 9A37 CD 99 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A3A              ;																	; _ repone (Puntero_objeto).
  49+ 9A3A 21 13 89     	ld hl,Ctrl_0
  50+ 9A3D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A3F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A3F              ; 																	; _ en el caso de que no lo haya.
  53+ 9A3F 3A FD 88     	ld a,(Vel_down)
  54+ 9A42 47           	ld b,a
  55+ 9A43 2A E7 88         ld hl,(Posicion_actual)
  56+ 9A46 CD F1 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A49 E6 02        	and 2
  58+ 9A4B 28 0F        	jr z,1F
  59+ 9A4D
  60+ 9A4D              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A4D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A4D
  63+ 9A4D 7C           	ld a,h
  64+ 9A4E FE 57        	cp $57
  65+ 9A50 20 0A        	jr nz,1F
  66+ 9A52
  67+ 9A52 7D           	ld a,l
  68+ 9A53 C6 20        	add $20
  69+ 9A55 30 05        	jr nc,1F
  70+ 9A57
  71+ 9A57              ; ------------------------------
  72+ 9A57              ;	call Reaparece_arriba
  73+ 9A57 CD 56 9D     	call Reinicio
  74+ 9A5A              ; ------------------------------
  75+ 9A5A
  76+ 9A5A 18 08        	jr 3F
  77+ 9A5C CD DE 96     1 call NextScan
  78+ 9A5F 22 E7 88     	ld (Posicion_actual),hl
  79+ 9A62 10 E2            djnz 2B
  80+ 9A64 CD 7C 9D     3 call Genera_coordenadas
  81+ 9A67 C9           	ret
  82+ 9A68
  83+ 9A68              ; ******************************************************************************************************************************************************************************************
  84+ 9A68              ;
  85+ 9A68              ;   27/05/23
  86+ 9A68              ;
  87+ 9A68              ;	Mov_up
  88+ 9A68              ;
  89+ 9A68              ; 	Mueve el Sprite hacia arriba.
  90+ 9A68              ;
  91+ 9A68              ;
  92+ 9A68              Mov_up
  93+ 9A68
  94+ 9A68 CD 99 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A6B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A6B 21 13 89     	ld hl,Ctrl_0
  97+ 9A6E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A70              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A70              ; 																		; _ en el caso de que no lo haya.
 100+ 9A70 3A FC 88     	ld a,(Vel_up)
 101+ 9A73 47           	ld b,a
 102+ 9A74 2A E7 88     	ld hl,(Posicion_actual)
 103+ 9A77 CD F1 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A7A A7           	and a
 105+ 9A7B 20 10        	jr nz,1F
 106+ 9A7D
 107+ 9A7D              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A7D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A7D
 110+ 9A7D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A7E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A80 20 0B            jr nz,1F
 113+ 9A82 7D               ld a,l
 114+ 9A83 D6 20            sub $20
 115+ 9A85 30 06            jr nc,1F
 116+ 9A87 25               dec h
 117+ 9A88
 118+ 9A88              ; -----------------------------
 119+ 9A88 CD 37 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A8B              ;	call Reinicio
 121+ 9A8B              ; -----------------------------
 122+ 9A8B
 123+ 9A8B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A8D CD ED 96     1 call PreviousScan
 125+ 9A90 22 E7 88     	ld (Posicion_actual),hl
 126+ 9A93 10 E2            djnz 3B
 127+ 9A95 CD 7C 9D     2 call Genera_coordenadas
 128+ 9A98 C9           	ret
 129+ 9A99
 130+ 9A99              ; -----------------------------
 131+ 9A99              ;
 132+ 9A99              ;	27/5/23
 133+ 9A99              ;
 134+ 9A99              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A99              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A99              ;
 137+ 9A99              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A99              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A99              ;
 140+ 9A99              ;	Modifica: A y (Puntero_objeto).
 141+ 9A99
 142+ 9A99 3A 26 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A9C CB 47        	bit 0,a
 144+ 9A9E C8           	ret z
 145+ 9A9F CB 87        	res 0,a
 146+ 9AA1 32 26 89     	ld (Ctrl_2),a
 147+ 9AA4 2A 29 89     	ld hl,(Repone_puntero_objeto)
 148+ 9AA7 22 E9 88     	ld (Puntero_objeto),hl
 149+ 9AAA C9           	ret
 150+ 9AAB
 151+ 9AAB              ; ******************************************************************************************************************************************************************************************
 152+ 9AAB              ;
 153+ 9AAB              ;	19/10/22
 154+ 9AAB              ;
 155+ 9AAB              ;	Mov_right.
 156+ 9AAB              ;
 157+ 9AAB              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9AAB              ;
 159+ 9AAB
 160+ 9AAB 21 13 89     Mov_right ld hl,Ctrl_0
 161+ 9AAE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9AB0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9AB0              ; 																	; _ en el caso de que no lo haya.
 164+ 9AB0 3A 13 89     	ld a,(Ctrl_0)
 165+ 9AB3 CB 77        	bit 6,a
 166+ 9AB5 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9AB7
 168+ 9AB7 CD E5 9C     	call Stop_Amadeus_right
 169+ 9ABA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9ABB 18 4D        	jr 8F
 171+ 9ABD
 172+ 9ABD 3A EB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AC0 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9AC2 20 46        	jr nz,8F
 175+ 9AC4
 176+ 9AC4 3A ED 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9AC7 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AC8 28 40        	jr z,8F
 179+ 9ACA
 180+ 9ACA              ; ---------- ---------- ----------
 181+ 9ACA              ;
 182+ 9ACA              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9ACA
 184+ 9ACA 3A FB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9ACD FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9ACF 28 11        	jr z,1F
 187+ 9AD1 38 06        	jr c,6F
 188+ 9AD3 FE 04        	cp 4
 189+ 9AD5 28 14        	jr z,7F
 190+ 9AD7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AD9
 192+ 9AD9              ; ---------- ---------- ----------
 193+ 9AD9              ;
 194+ 9AD9              ; Perfiles de velocidad
 195+ 9AD9              ;
 196+ 9AD9
 197+ 9AD9 3A ED 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9ADC FE FE        	cp $fe
 199+ 9ADE 20 2A        	jr nz,8F
 200+ 9AE0 18 10        	jr 3F
 201+ 9AE2 3A ED 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AE5 FE FD        	cp $fd
 203+ 9AE7 20 21        	jr nz,8F
 204+ 9AE9 18 07        	jr 3F
 205+ 9AEB 3A ED 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AEE FE FB        	cp $fb
 207+ 9AF0 20 18        	jr nz,8F
 208+ 9AF2
 209+ 9AF2              ; ---------- ---------- ----------
 210+ 9AF2
 211+ 9AF2              3
 212+ 9AF2 CD 25 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AF5              ;	call Reinicio
 214+ 9AF5
 215+ 9AF5              ; ---------- ---------- ----------
 216+ 9AF5              ;
 217+ 9AF5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AF5
 219+ 9AF5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AF7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AF8 CD 11 9B     	call DESPLZ_DER
 222+ 9AFB C1           	pop bc
 223+ 9AFC 10 F9        	djnz 5B
 224+ 9AFE 2A E7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9B01 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9B02 22 E7 88     	ld (Posicion_actual),hl
 227+ 9B05 CD 7C 9D     	call Genera_coordenadas
 228+ 9B08 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9B0A
 230+ 9B0A              ; ---------- ---------- ----------
 231+ 9B0A
 232+ 9B0A 2A E7 88     8 ld hl,(Posicion_actual)
 233+ 9B0D CD 11 9B     	call DESPLZ_DER
 234+ 9B10 C9           2 ret
 235+ 9B11
 236+ 9B11              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9B11              ;
 238+ 9B11              ;	22/9/22
 239+ 9B11              ;
 240+ 9B11
 241+ 9B11 CD 20 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9B14 CD 6C 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9B17 CD 95 9B         call Ciclo_completo
 244+ 9B1A 21 13 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B1D CB FE        	set 7,(hl)
 246+ 9B1F C9           	ret
 247+ 9B20
 248+ 9B20              ; ******************************************************************************************************************************************************************************************
 249+ 9B20              ;	15/02/23
 250+ 9B20              ;
 251+ 9B20
 252+ 9B20 3A FB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9B23 47           	ld b,a
 254+ 9B24 2A F3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B27 23           1 inc hl
 256+ 9B28 23           	inc hl
 257+ 9B29 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B2B 22 F3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B2E CD 16 8D     	call Extrae_address
 260+ 9B31 22 E9 88     	ld (Puntero_objeto),hl
 261+ 9B34
 262+ 9B34              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B34
 264+ 9B34              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B34              ; Cuántos movimientos hemos hecho ??
 266+ 9B34              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B34
 268+ 9B34 2A EF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9B37 EB           	ex de,hl
 270+ 9B38 A7           	and a
 271+ 9B39 ED 52        	sbc hl,de
 272+ 9B3B CB 3D        	srl l
 273+ 9B3D 3E 08        6 ld a,8
 274+ 9B3F 95           	sub l
 275+ 9B40 30 1E        	jr nc,3F
 276+ 9B42
 277+ 9B42              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B42              ; B="0".
 279+ 9B42
 280+ 9B42 04           4 inc b
 281+ 9B43 3C           	inc a
 282+ 9B44 20 FC        	jr nz,4B
 283+ 9B46 78           	ld a,b
 284+ 9B47 08           	ex af,af
 285+ 9B48 2A EF 88     	ld hl,(Indice_Sprite_der)
 286+ 9B4B 23           5 inc hl
 287+ 9B4C 23           	inc hl
 288+ 9B4D 10 FC        	djnz 5B
 289+ 9B4F 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B52 CD 16 8D     	call Extrae_address
 291+ 9B55 22 E9 88     	ld (Puntero_objeto),hl
 292+ 9B58
 293+ 9B58              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B58              ; _(Posicion_actual).
 295+ 9B58
 296+ 9B58 21 E7 88     	ld hl,Posicion_actual
 297+ 9B5B 34           	inc (hl)
 298+ 9B5C 08               ex af,af
 299+ 9B5D 6F           	ld l,a
 300+ 9B5E 18 DD        	jr 6B
 301+ 9B60
 302+ 9B60              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B60
 304+ 9B60 47           3 ld b,a
 305+ 9B61 2A F1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B64 23           2 inc hl
 307+ 9B65 23           	inc hl
 308+ 9B66 10 FC        	djnz 2B
 309+ 9B68 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B6B C9           8 ret
 311+ 9B6C
 312+ 9B6C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B6C              ;
 314+ 9B6C              ;	24/7/22
 315+ 9B6C              ;
 316+ 9B6C              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B6C              ;
 318+ 9B6C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B6C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B6C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B6C
 322+ 9B6C 3A ED 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B6F A7           	and a
 324+ 9B70 20 1F        	jr nz,1F
 325+ 9B72 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B74 32 ED 88         ld (CTRL_DESPLZ),a
 327+ 9B77
 328+ 9B77 21 E6 88     	ld hl,Columns
 329+ 9B7A 34           	inc (hl)
 330+ 9B7B 3A F9 88     	ld a,(Cuad_objeto)
 331+ 9B7E E6 01        	and 1
 332+ 9B80 28 0F        	jr z,1F
 333+ 9B82 2A E7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B85 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B86 22 E7 88     	ld (Posicion_actual),hl
 336+ 9B89 CD 7C 9D     	call Genera_coordenadas
 337+ 9B8C CD F1 9C     	call Inc_CTRL_DESPLZ
 338+ 9B8F 18 03        	jr 2F
 339+ 9B91 CD F1 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B94 C9           2 ret
 341+ 9B95
 342+ 9B95              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B95              ;
 344+ 9B95              ;	24/7/22
 345+ 9B95              ;
 346+ 9B95              ;	Ciclo_completo.
 347+ 9B95              ;
 348+ 9B95              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B95              ;
 350+ 9B95              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B95              ; 	Decrementamos (Columns).
 352+ 9B95              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B95              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B95
 355+ 9B95
 356+ 9B95 3A ED 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B98 FE FF        	cp $ff
 358+ 9B9A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B9C E6 F0        	and $f0
 360+ 9B9E 20 28        	jr nz,3F
 361+ 9BA0
 362+ 9BA0              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9BA0
 364+ 9BA0 3A ED 88     	ld a,(CTRL_DESPLZ)
 365+ 9BA3 47           	ld b,a
 366+ 9BA4 3E F8        	ld a,$f8
 367+ 9BA6 80           	add b
 368+ 9BA7 32 ED 88     	ld (CTRL_DESPLZ),a
 369+ 9BAA 18 1C        	jr 3F
 370+ 9BAC 21 E6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9BAF 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9BB0 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9BB1 32 ED 88     	ld (CTRL_DESPLZ),a
 374+ 9BB4 3A F9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9BB7 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BB9 20 0A        	jr nz,2F
 377+ 9BBB 2A E7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BBE 23           	inc hl
 379+ 9BBF 22 E7 88     	ld (Posicion_actual),hl
 380+ 9BC2 CD 7C 9D     	call Genera_coordenadas
 381+ 9BC5
 382+ 9BC5              ; Inicia el puntero de Sprite.
 383+ 9BC5
 384+ 9BC5 CD 2D 8D     2 call Inicia_puntero_objeto_der
 385+ 9BC8 C9           3 ret
 386+ 9BC9
 387+ 9BC9              ; ******************************************************************************************************************************************************************************************
 388+ 9BC9              ;
 389+ 9BC9              ;	15/02/23
 390+ 9BC9              ;
 391+ 9BC9              ;	Mov_left.
 392+ 9BC9              ;
 393+ 9BC9              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BC9              ;
 395+ 9BC9              Mov_left
 396+ 9BC9
 397+ 9BC9 21 13 89     	ld hl,Ctrl_0
 398+ 9BCC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9BCE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9BCE              ; 																	; _ en el caso de que no lo haya.
 401+ 9BCE 3A 13 89     	ld a,(Ctrl_0)
 402+ 9BD1 CB 77        	bit 6,a
 403+ 9BD3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9BD5
 405+ 9BD5 CD EB 9C     	call Stop_Amadeus_left
 406+ 9BD8 C8           	ret z
 407+ 9BD9 20 4A        	jr nz,8F
 408+ 9BDB
 409+ 9BDB 3A EB 88     11 ld a,(Coordenada_X)
 410+ 9BDE A7           	and a
 411+ 9BDF 20 44        	jr nz,8F
 412+ 9BE1
 413+ 9BE1 3A ED 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9BE4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9BE5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9BE7
 417+ 9BE7              ; ---------- ---------- ----------
 418+ 9BE7
 419+ 9BE7 3A FA 88     	ld a,(Vel_left)
 420+ 9BEA FE 02        	cp 2
 421+ 9BEC 28 0F        	jr z,1F
 422+ 9BEE 38 04        	jr c,6F
 423+ 9BF0 FE 04        	cp 4
 424+ 9BF2 28 12        	jr z,7F
 425+ 9BF4
 426+ 9BF4              ; ---------- ---------- ----------
 427+ 9BF4
 428+ 9BF4 3A ED 88     6 ld a,(CTRL_DESPLZ)
 429+ 9BF7 FE F8        	cp $f8
 430+ 9BF9 20 2A        	jr nz,8F
 431+ 9BFB 18 10        	jr 4F
 432+ 9BFD 3A ED 88     1 ld a,(CTRL_DESPLZ)
 433+ 9C00 FE F9        	cp $f9
 434+ 9C02 20 21        	jr nz,8F
 435+ 9C04 18 07        	jr 4F
 436+ 9C06 3A ED 88     7 ld a,(CTRL_DESPLZ)
 437+ 9C09 FE FB        	cp $fb
 438+ 9C0B 20 18        	jr nz,8F
 439+ 9C0D
 440+ 9C0D              ; ---------- ---------- ----------
 441+ 9C0D
 442+ 9C0D              4
 443+ 9C0D CD 13 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9C10              ;	call Reinicio
 445+ 9C10
 446+ 9C10              ; ---------- ---------- ----------
 447+ 9C10
 448+ 9C10 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9C12 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9C13
 451+ 9C13              ;	ld hl,(Indice_Sprite_izq)
 452+ 9C13              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9C13
 454+ 9C13 CD 2C 9C     	call DESPLZ_IZQ
 455+ 9C16 C1           	pop bc
 456+ 9C17 10 F9        	djnz 5B
 457+ 9C19 2A E7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9C1C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9C1D 22 E7 88     	ld (Posicion_actual),hl
 460+ 9C20 CD 7C 9D     	call Genera_coordenadas
 461+ 9C23 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9C25
 463+ 9C25              ; ---------- ---------- ----------
 464+ 9C25
 465+ 9C25              ; Movemos, no hay recolocación.
 466+ 9C25
 467+ 9C25 2A E7 88     8 ld hl,(Posicion_actual)
 468+ 9C28 CD 2C 9C     	call DESPLZ_IZQ
 469+ 9C2B C9           2 ret
 470+ 9C2C
 471+ 9C2C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9C2C              ;
 473+ 9C2C              ;	22/9/22
 474+ 9C2C
 475+ 9C2C              DESPLZ_IZQ
 476+ 9C2C
 477+ 9C2C CD 3B 9C     	call Desplaza_izquierda
 478+ 9C2F CD 87 9C         call modifica_parametros_1er_DESPLZ
 479+ 9C32 CD AF 9C     	call Ciclo_completo_2
 480+ 9C35 21 13 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9C38 CB BE        	res 7,(hl)
 482+ 9C3A C9           	ret
 483+ 9C3B
 484+ 9C3B              Desplaza_izquierda
 485+ 9C3B
 486+ 9C3B 3A FA 88     	ld a,(Vel_left)
 487+ 9C3E 47           	ld b,a
 488+ 9C3F 2A F5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9C42 23           1 inc hl
 490+ 9C43 23           	inc hl
 491+ 9C44 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9C46 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9C49 CD 16 8D     	call Extrae_address
 494+ 9C4C 22 E9 88     	ld (Puntero_objeto),hl
 495+ 9C4F
 496+ 9C4F              ; Modifica (Puntero_DESPLZ_der).
 497+ 9C4F
 498+ 9C4F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9C4F              ; Cuántos movimientos hemos hecho ??
 500+ 9C4F              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9C4F
 502+ 9C4F 2A F1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9C52 EB           	ex de,hl
 504+ 9C53 A7           	and a
 505+ 9C54 ED 52        	sbc hl,de
 506+ 9C56 CB 3D        	srl l
 507+ 9C58 3E 08        6 ld a,8
 508+ 9C5A 95           	sub l
 509+ 9C5B 30 1E        	jr nc,3F
 510+ 9C5D
 511+ 9C5D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C5D              ; B="0".
 513+ 9C5D
 514+ 9C5D 04           4 inc b
 515+ 9C5E 3C           	inc a
 516+ 9C5F 20 FC        	jr nz,4B
 517+ 9C61 78           	ld a,b
 518+ 9C62 08           	ex af,af
 519+ 9C63 2A F1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C66 23           5 inc hl
 521+ 9C67 23           	inc hl
 522+ 9C68 10 FC        	djnz 5B
 523+ 9C6A 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C6D CD 16 8D     	call Extrae_address
 525+ 9C70 22 E9 88     	ld (Puntero_objeto),hl
 526+ 9C73
 527+ 9C73              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C73              ; _(Posicion_actual).
 529+ 9C73
 530+ 9C73 21 E7 88     	ld hl,Posicion_actual
 531+ 9C76 35           	dec (hl)
 532+ 9C77 08           	ex af,af
 533+ 9C78 6F           	ld l,a
 534+ 9C79 18 DD        	jr 6B
 535+ 9C7B
 536+ 9C7B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C7B
 538+ 9C7B 47           3 ld b,a
 539+ 9C7C 2A EF 88     	ld hl,(Indice_Sprite_der)
 540+ 9C7F 23           2 inc hl
 541+ 9C80 23           	inc hl
 542+ 9C81 10 FC        	djnz 2B
 543+ 9C83 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C86 C9           8 ret
 545+ 9C87
 546+ 9C87              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C87              ;
 548+ 9C87              ;	modifica_parametros_1er_DESPLZ
 549+ 9C87              ;
 550+ 9C87              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C87              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C87              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C87
 554+ 9C87 3A ED 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C8A A7           	and a
 556+ 9C8B 20 1E        	jr nz,1F
 557+ 9C8D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C8E 32 ED 88         ld (CTRL_DESPLZ),a
 559+ 9C91 21 E6 88     	ld hl,Columns
 560+ 9C94 34           	inc (hl)
 561+ 9C95 3A F9 88     	ld a,(Cuad_objeto)
 562+ 9C98 E6 01        	and 1
 563+ 9C9A 20 0F        	jr nz,1F
 564+ 9C9C 2A E7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C9F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9CA0 22 E7 88     	ld (Posicion_actual),hl
 567+ 9CA3 CD 7C 9D     	call Genera_coordenadas
 568+ 9CA6 CD 02 9D     	call Dec_CTRL_DESPLZ
 569+ 9CA9 18 03        	jr 2F
 570+ 9CAB CD 02 9D     1 call Dec_CTRL_DESPLZ
 571+ 9CAE C9           2 ret
 572+ 9CAF
 573+ 9CAF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9CAF
 575+ 9CAF 3A ED 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9CB2 FE F7        	cp $f7
 577+ 9CB4 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9CB6 30 2C        	jr nc,3F
 579+ 9CB8
 580+ 9CB8              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9CB8
 582+ 9CB8 06 00        	ld b,0
 583+ 9CBA 04           4 inc b
 584+ 9CBB 3C           	inc a
 585+ 9CBC FE F7        	cp $f7
 586+ 9CBE 20 FA        	jr nz,4B
 587+ 9CC0 3E FF        	ld a,$ff
 588+ 9CC2 90           	sub b
 589+ 9CC3 32 ED 88     	ld (CTRL_DESPLZ),a
 590+ 9CC6 18 1C        	jr 3F
 591+ 9CC8
 592+ 9CC8              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9CC8
 594+ 9CC8 21 E6 88     1 ld hl,Columns
 595+ 9CCB 35           	dec (hl)
 596+ 9CCC AF           	xor a
 597+ 9CCD 32 ED 88     	ld (CTRL_DESPLZ),a
 598+ 9CD0 3A F9 88     	ld a,(Cuad_objeto)
 599+ 9CD3 E6 01        	and 1
 600+ 9CD5 28 0A        	jr z,2F
 601+ 9CD7 2A E7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9CDA 2B           	dec hl
 603+ 9CDB 22 E7 88     	ld (Posicion_actual),hl
 604+ 9CDE CD 7C 9D     	call Genera_coordenadas
 605+ 9CE1
 606+ 9CE1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9CE1
 608+ 9CE1 CD 40 8D     2 call Inicia_puntero_objeto_izq
 609+ 9CE4 C9           3 ret
 610+ 9CE5
 611+ 9CE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9CE5              ;
 613+ 9CE5              ;	19/10/22
 614+ 9CE5              ;
 615+ 9CE5              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9CE5              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9CE5
 618+ 9CE5 3A EB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9CE8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9CEA C9           	ret
 621+ 9CEB
 622+ 9CEB              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9CEB              ;
 624+ 9CEB              ;	19/10/22
 625+ 9CEB              ;
 626+ 9CEB              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9CEB              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9CEB
 629+ 9CEB 3A EB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9CEE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9CF0 C9           	ret
 632+ 9CF1
 633+ 9CF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9CF1              ;
 635+ 9CF1              ;	24/7/22
 636+ 9CF1              ;
 637+ 9CF1              ;	Inc_CTRL_DESPLZ
 638+ 9CF1              ;
 639+ 9CF1              ;
 640+ 9CF1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9CF1
 642+ 9CF1 21 ED 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9CF4 3A FB 88     	ld a,(Vel_right)
 644+ 9CF7 A7           	and a
 645+ 9CF8 28 06        	jr z,1F
 646+ 9CFA 47           	ld b,a
 647+ 9CFB 34           3 inc (hl)
 648+ 9CFC 10 FD        	djnz 3B
 649+ 9CFE 18 01        	jr 2F
 650+ 9D00 34           1 inc (hl)
 651+ 9D01 C9           2 ret
 652+ 9D02
 653+ 9D02              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9D02              ;
 655+ 9D02              ;	5/2/23
 656+ 9D02              ;
 657+ 9D02              ;	Dec_CTRL_DESPLZ
 658+ 9D02              ;
 659+ 9D02              ;
 660+ 9D02              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9D02
 662+ 9D02 21 ED 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9D05 3A FA 88     	ld a,(Vel_left)
 664+ 9D08 A7           	and a
 665+ 9D09 28 06        	jr z,1F
 666+ 9D0B 47           	ld b,a
 667+ 9D0C 35           3 dec (hl)
 668+ 9D0D 10 FD        	djnz 3B
 669+ 9D0F 18 01        	jr 2F
 670+ 9D11 35           1 dec (hl)
 671+ 9D12 C9           2 ret
 672+ 9D13
 673+ 9D13              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9D13
 675+ 9D13 2A E7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9D16 01 1F 00     	ld bc,31
 677+ 9D19 A7           	and a
 678+ 9D1A ED 4A        	adc hl,bc
 679+ 9D1C 22 E7 88     	ld (Posicion_actual),hl
 680+ 9D1F 21 13 89     	ld hl,Ctrl_0														; $xxx1
 681+ 9D22 CB C6        	set 0,(hl)
 682+ 9D24 C9           	ret
 683+ 9D25
 684+ 9D25              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9D25
 686+ 9D25 2A E7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9D28 01 1F 00     	ld bc,31
 688+ 9D2B A7           	and a
 689+ 9D2C ED 42        	sbc hl,bc
 690+ 9D2E 22 E7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9D31 21 13 89     	ld hl,Ctrl_0
 692+ 9D34 CB CE        	set 1,(hl)
 693+ 9D36 C9           	ret
 694+ 9D37
 695+ 9D37              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9D37
 697+ 9D37 24           Reaparece_abajo inc h
 698+ 9D38 01 E0 17     	ld bc,$17e0
 699+ 9D3B A7           	and a
 700+ 9D3C ED 4A        	adc hl,bc
 701+ 9D3E 22 E7 88     	ld (Posicion_actual),hl
 702+ 9D41 21 13 89     	ld hl,Ctrl_0
 703+ 9D44 CB D6        	set 2,(hl)
 704+ 9D46 C9           	ret
 705+ 9D47
 706+ 9D47              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9D47
 708+ 9D47 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9D4A A7           	and a
 710+ 9D4B ED 42        	sbc hl,bc
 711+ 9D4D 22 E7 88     	ld (Posicion_actual),hl
 712+ 9D50 21 13 89     	ld hl,Ctrl_0
 713+ 9D53 CB DE        	set 3,(hl)
 714+ 9D55 C9           	ret
 715+ 9D56
 716+ 9D56              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9D56              ;
 718+ 9D56              ;	15/07/23
 719+ 9D56
 720+ 9D56              Reinicio
 721+ 9D56
 722+ 9D56              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9D56
 724+ 9D56 AF           	xor a
 725+ 9D57 21 1A 89     	ld hl,Puntero_indice_mov_bucle
 726+ 9D5A CD 78 9D     	call Limpia_contenido_hl
 727+ 9D5D
 728+ 9D5D 21 E7 88     	ld hl,Posicion_actual
 729+ 9D60 CD 78 9D     	call Limpia_contenido_hl
 730+ 9D63
 731+ 9D63 CD AA A0     	call Inicializa_Puntero_indice_mov
 732+ 9D66 CD 34 A0     	call Inicia_Puntero_mov
 733+ 9D69
 734+ 9D69 21 1C 89     	ld hl,Incrementa_puntero
 735+ 9D6C 06 05        	ld b,5
 736+ 9D6E 77           1 ld (hl),a
 737+ 9D6F 23           	inc hl
 738+ 9D70 10 FC        	djnz 1B
 739+ 9D72
 740+ 9D72 21 26 89     	ld hl,Ctrl_2
 741+ 9D75 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D77
 743+ 9D77 C9           	ret
 744+ 9D78
 745+ 9D78 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D79 23           	inc hl
 747+ 9D7A 77           	ld (hl),a
 748+ 9D7B C9           	ret
 749+ 9D7C
 750+ 9D7C
# file closed: Direcciones.asm
1654  9D7C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D7C              ; ------------------------------------------------------------------------
   2+ 9D7C              ;
   3+ 9D7C              ;	02/04/23
   4+ 9D7C              ;
   5+ 9D7C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D7C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D7C              ;
   8+ 9D7C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D7C              ;
  10+ 9D7C              ;	Modifica: A,BC y DE.
  11+ 9D7C
  12+ 9D7C C5           Genera_coordenadas push bc
  13+ 9D7D E5           	push hl
  14+ 9D7E D5           	push de
  15+ 9D7F
  16+ 9D7F 2A E7 88     	ld hl,(Posicion_actual)
  17+ 9D82
  18+ 9D82 7D           	ld a,l
  19+ 9D83 E6 1F        	and $1f
  20+ 9D85 32 EB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D88
  22+ 9D88 CD F1 99     	call calcula_tercio
  23+ 9D8B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D8C
  25+ 9D8C 1E 00        	ld e,0
  26+ 9D8E 7D           	ld a,l
  27+ 9D8F E6 E0        	and $e0
  28+ 9D91 28 01        	jr z,1F
  29+ 9D93 04           	inc b
  30+ 9D94
  31+ 9D94 04           1 inc b
  32+ 9D95 05           	dec b
  33+ 9D96 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D98              ;														; _ , salimos.
  35+ 9D98 1C           3 inc e
  36+ 9D99 D6 20        	sub 32
  37+ 9D9B 20 FB        	jr nz,3B
  38+ 9D9D 10 F5        	djnz 1B
  39+ 9D9F
  40+ 9D9F 7B           2 ld a,e
  41+ 9DA0 32 EC 88     	ld (Coordenada_y),a
  42+ 9DA3
  43+ 9DA3 D1           	pop de
  44+ 9DA4 E1           	pop hl
  45+ 9DA5 C1           	pop bc
  46+ 9DA6
  47+ 9DA6 C9           	ret
  48+ 9DA7
  49+ 9DA7              ; ------------------------------------------------------------------------
  50+ 9DA7              ;	28/05/23
  51+ 9DA7              ;
  52+ 9DA7              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9DA7              ;	Fila superior "0", Columna izquierda "0".
  54+ 9DA7              ;
  55+ 9DA7              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9DA7              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9DA7              ;
  58+ 9DA7              ;		DE="$120d"
  59+ 9DA7              ;
  60+ 9DA7              ;		D, (Coordenada_X), Columnas, $12
  61+ 9DA7              ;		E, (Coordenada_y), Filas, $0d
  62+ 9DA7              ;
  63+ 9DA7              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9DA7
  65+ 9DA7              ;	Modifica: A,BC y DE.
  66+ 9DA7
  67+ 9DA7
  68+ 9DA7              Genera_coordenadas_disparo
  69+ 9DA7
  70+ 9DA7              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9DA7
  72+ 9DA7 7D           	ld a,l
  73+ 9DA8 E6 1F        	and $1f
  74+ 9DAA 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9DAB CD F1 99     	call calcula_tercio
  76+ 9DAE 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9DAF 1E 00        	ld e,0
  78+ 9DB1 7D           	ld a,l
  79+ 9DB2 E6 E0        	and $e0
  80+ 9DB4 28 01        	jr z,1F
  81+ 9DB6 04           	inc b
  82+ 9DB7 1C           1 inc e
  83+ 9DB8 D6 20        	sub 32
  84+ 9DBA 20 FB        	jr nz,1B
  85+ 9DBC 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DBE C9           	ret
  87+ 9DBF
# file closed: Genera_coordenadas.asm
1655  9DBF              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9DBF              ; Relojes y temporizaciones.
   2+ 9DBF
   3+ 9DBF              ; ------------------------------------------------------
   4+ 9DBF              ;
   5+ 9DBF              ;	16/7/23
   6+ 9DBF              ;
   7+ 9DBF              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9DBF              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9DBF              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9DBF              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9DBF              ;
  12+ 9DBF              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9DBF              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9DBF
  15+ 9DBF              ; Disparo_entidad db 1
  16+ 9DBF              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9DBF              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9DBF
  19+ 9DBF              Habilita_disparos
  20+ 9DBF
  21+ 9DBF 7E           	ld a,(hl)
  22+ 9DC0 A7           	and a
  23+ 9DC1 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9DC2
  25+ 9DC2 EB           	ex de,hl
  26+ 9DC3
  27+ 9DC3 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9DC4 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9DC5
  30+ 9DC5              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9DC5
  32+ 9DC5 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9DC6 7E           	ld a,(hl)
  34+ 9DC7 23           	inc hl
  35+ 9DC8 77           	ld (hl),a
  36+ 9DC9
  37+ 9DC9 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9DCA 3E 01        	ld a,1
  39+ 9DCC 77           	ld (hl),a
  40+ 9DCD C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1656  9DCE              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DCE
   2+ 9DCE
   3+ 9DCE              ;   07/07/23
   4+ 9DCE              ;
   5+ 9DCE              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DCE              ;
   7+ 9DCE              ;   Codificación:
   8+ 9DCE              ;
   9+ 9DCE              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DCE              ;
  11+ 9DCE              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DCE              ;
  13+ 9DCE              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DCE              ;
  15+ 9DCE              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DCE              ;
  17+ 9DCE              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DCE              ;                               ..... %01000010 Vel_up 4
  19+ 9DCE              ;                                               Vel_down 2
  20+ 9DCE              ;                               ..... $42
  21+ 9DCE              ;
  22+ 9DCE              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DCE              ;
  24+ 9DCE              ;                               ..... %01000010 Vel_left 4
  25+ 9DCE              ;                                               Vel_right 2
  26+ 9DCE              ;                               ..... $42
  27+ 9DCE              ;
  28+ 9DCE              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DCE              ;
  30+ 9DCE              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DCE              ;
  32+ 9DCE              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DCE              ;
  34+ 9DCE              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DCE              ;                                     $53
  36+ 9DCE              ;
  37+ 9DCE              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DCE              ;
  39+ 9DCE              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DCE              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DCE              ;
  42+ 9DCE              ;                       Arriba ..... $81
  43+ 9DCE              ;                       Arriba - izquierda ..... $a1
  44+ 9DCE              ;                       Arriba - derecha ..... $91
  45+ 9DCE              ;
  46+ 9DCE              ;                       Abajo ..... $41
  47+ 9DCE              ;                       Abajo - izquierda ..... $61
  48+ 9DCE              ;                       Abajo - derecha ..... $51
  49+ 9DCE              ;
  50+ 9DCE              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DCE              ;
  52+ 9DCE              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DCE              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DCE              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DCE              ;
  56+ 9DCE              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DCE              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DCE              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DCE              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DCE              ;
  61+ 9DCE              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DCE              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DCE              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DCE              ;
  65+ 9DCE              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DCE              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DCE              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DCE              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DCE
  70+ 9DCE              ; ----- ----- ----- ----- -----
  71+ 9DCE
  72+ 9DCE FA 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DD0 02 9E            defw F_1
  74+ 9DD2 0C 9E            defw F_2
  75+ 9DD4 16 9E            defw Codo_abajo_derecha
  76+ 9DD6 4A 9E            defw Derecha_y_subiendo
  77+ 9DD8 54 9E            defw Derecha_y_subiendo_1
  78+ 9DDA 5E 9E            defw F_3
  79+ 9DDC 68 9E            defw F_4
  80+ 9DDE 72 9E            defw Derecha_y_bajando
  81+ 9DE0 7C 9E            defw Derecha_y_bajando_1
  82+ 9DE2 86 9E            defw Derecha_y_bajando_2
  83+ 9DE4 90 9E            defw Codo_derecha_abajo
  84+ 9DE6 C0 9E            defw Codo_abajo_izq.
  85+ 9DE8 F4 9E            defw Izquierda_y_subiendo
  86+ 9DEA FE 9E            defw Izquierda_y_subiendo_1
  87+ 9DEC 08 9F            defw F_5
  88+ 9DEE 12 9F            defw F_6
  89+ 9DF0 1C 9F            defw Izquierda_y_bajando
  90+ 9DF2 26 9F            defw Izquierda_y_bajando_1
  91+ 9DF4 30 9F            defw Izquierda_y_bajando_2
  92+ 9DF6 3A 9F            defw Codo_izquierda_abajo
  93+ 9DF8 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DFA
  95+ 9DFA 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DFE 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9E02
  98+ 9E02 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9E06 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9E0A 08 00
 100+ 9E0C 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9E10 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9E14 0F FE
 102+ 9E16
 103+ 9E16 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9E1A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E1E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E22 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E26 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E2A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E2E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E32 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E36 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E3A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E3E 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E42 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E46 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E4A
 117+ 9E4A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E4E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E52 06 00
 119+ 9E54
 120+ 9E54 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E58 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E5C 02 00
 122+ 9E5E
 123+ 9E5E 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E62 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E66 04 00
 125+ 9E68 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E6C 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E70 08 00
 127+ 9E72
 128+ 9E72 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E76 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E7A 02 00
 130+ 9E7C
 131+ 9E7C 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E80 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E84 06 00
 133+ 9E86
 134+ 9E86 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E8A 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E8E 06 00
 136+ 9E90
 137+ 9E90              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E90
 139+ 9E90 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E94 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E98 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E9C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9EA0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9EA4 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9EA8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9EAC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9EB0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9EB4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9EB8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9EBC 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EC0
 152+ 9EC0 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EC4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EC8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9ECC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9ED0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9ED4 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9ED8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EDC 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EE0 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EE4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EE8 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EEC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EF0 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EF4
 166+ 9EF4 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EF8 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EFC 06 00
 168+ 9EFE
 169+ 9EFE 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9F02 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9F06 02 00
 171+ 9F08
 172+ 9F08 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9F0C 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9F10 04 00
 174+ 9F12 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9F16 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9F1A 08 00
 176+ 9F1C
 177+ 9F1C 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F20 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F24 02 00
 179+ 9F26
 180+ 9F26 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F2A 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F2E 06 00
 182+ 9F30
 183+ 9F30 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F34 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F38 06 00
 185+ 9F3A
 186+ 9F3A 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F3E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F42 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F46 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F4A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F4E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F52 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F56 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F5A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F5E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F62 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F66 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F6A
 199+ 9F6A              ; ----- ----- ----- ----- -----
 200+ 9F6A              ;
 201+ 9F6A              ;   27/06/23
 202+ 9F6A
 203+ 9F6A              Movimiento
 204+ 9F6A
 205+ 9F6A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F6A
 207+ 9F6A              ;    ld hl,(Posicion_actual)
 208+ 9F6A
 209+ 9F6A FB               ei
 210+ 9F6B
 211+ 9F6B 3A 26 89         ld a,(Ctrl_2)
 212+ 9F6E CB 57            bit 2,a
 213+ 9F70 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F72
 215+ 9F72 2A 18 89         ld hl,(Puntero_mov)
 216+ 9F75 7E               ld a,(hl)
 217+ 9F76
 218+ 9F76              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F76
 220+ 9F76              Inicia_desplazamiento.
 221+ 9F76
 222+ 9F76              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F76
 224+ 9F76 CD 6B A0         call Ajusta_velocidad_desplazamiento
 225+ 9F79
 226+ 9F79              ; Iniciamos (Repetimos_mov).
 227+ 9F79
 228+ 9F79 7E               ld a,(hl)
 229+ 9F7A E6 0F            and $0f
 230+ 9F7C 32 1E 89         ld (Repetimos_desplazamiento),a
 231+ 9F7F 32 1F 89         ld (Repetimos_desplazamiento_backup),a
 232+ 9F82
 233+ 9F82              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F82
 235+ 9F82 23               inc hl
 236+ 9F83 7E               ld a,(hl)
 237+ 9F84 32 21 89         ld (Cola_de_desplazamiento),a
 238+ 9F87 2B               dec hl
 239+ 9F88
 240+ 9F88 21 26 89         ld hl,Ctrl_2
 241+ 9F8B CB D6            set 2,(hl)
 242+ 9F8D
 243+ 9F8D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F8D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F8D
 246+ 9F8D              Desplazamiento_iniciado
 247+ 9F8D
 248+ 9F8D CD 3F A0         call Aplica_desplazamiento
 249+ 9F90
 250+ 9F90 3A 26 89         ld a,(Ctrl_2)
 251+ 9F93 CB 67            bit 4,a
 252+ 9F95 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F96
 254+ 9F96 21 1E 89     3 ld hl,Repetimos_desplazamiento
 255+ 9F99 35               dec (hl)
 256+ 9F9A C0               ret nz
 257+ 9F9B
 258+ 9F9B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F9B              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F9B              ; Analiza (Cola_de_desplazamiento).
 261+ 9F9B
 262+ 9F9B 3A 21 89     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F9E A7               and a
 264+ 9F9F CC 94 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9FA2 28 30            jr z,Reinicia_el_movimiento
 266+ 9FA4
 267+ 9FA4 FE FF            cp $ff
 268+ 9FA6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9FA8
 270+ 9FA8 FE FE            cp $fe
 271+ 9FAA CC 18 A0         call z,Fijamos_bucle
 272+ 9FAD 28 25            jr z,Reinicia_el_movimiento
 273+ 9FAF
 274+ 9FAF FE FD            cp $fd
 275+ 9FB1 20 11            jr nz,1F
 276+ 9FB3
 277+ 9FB3              ; ---
 278+ 9FB3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9FB3
 280+ 9FB3 3A 26 89         ld a,(Ctrl_2)
 281+ 9FB6 CB 5F            bit 3,a
 282+ 9FB8 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9FBA
 284+ 9FBA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9FBA
 286+ 9FBA 21 26 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9FBD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9FBF
 289+ 9FBF CD 29 A0         call Inicia_Repetimos_movimiento
 290+ 9FC2 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9FC4              ; ---
 292+ 9FC4
 293+ 9FC4 FE 01        1 cp 1
 294+ 9FC6 CA 02 A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9FC9
 296+ 9FC9 3D               dec a
 297+ 9FCA 32 21 89         ld (Cola_de_desplazamiento),a
 298+ 9FCD
 299+ 9FCD 3A 1F 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9FD0 32 1E 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9FD3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9FD3 C9               ret
 303+ 9FD4
 304+ 9FD4              Reinicia_el_movimiento
 305+ 9FD4
 306+ 9FD4 F3               di
 307+ 9FD5
 308+ 9FD5 3A 26 89         ld a,(Ctrl_2)
 309+ 9FD8 CB 5F            bit 3,a
 310+ 9FDA 28 1B            jr z,2F
 311+ 9FDC
 312+ 9FDC              ; (Cola_de_desplazamiento)="254".
 313+ 9FDC
 314+ 9FDC 21 20 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FDF 35               dec (hl)
 316+ 9FE0 20 15            jr nz,2F
 317+ 9FE2
 318+ 9FE2              ; Fin de las repeticiones del último movimiento.
 319+ 9FE2
 320+ 9FE2 21 26 89         ld hl,Ctrl_2
 321+ 9FE5 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FE7
 323+ 9FE7 2A 18 89         ld hl,(Puntero_mov)
 324+ 9FEA 23               inc hl
 325+ 9FEB 23               inc hl
 326+ 9FEC 23               inc hl
 327+ 9FED 22 18 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FF0              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FF0 7E               ld a,(hl)
 330+ 9FF1 32 21 89         ld (Cola_de_desplazamiento),a
 331+ 9FF4
 332+ 9FF4 C3 9B 9F         jp Cola
 333+ 9FF7
 334+ 9FF7 CD 34 A0     2 call Inicia_Puntero_mov
 335+ 9FFA
 336+ 9FFA 21 26 89         ld hl,Ctrl_2
 337+ 9FFD CB 96            res 2,(hl)
 338+ 9FFF
 339+ 9FFF C3 6A 9F         jp Movimiento
 340+ A002
 341+ A002              Siguiente_desplazamiento
 342+ A002
 343+ A002              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ A002              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ A002
 346+ A002 21 26 89         ld hl,Ctrl_2
 347+ A005 CB 96            res 2,(hl)
 348+ A007
 349+ A007 2A 18 89         ld hl,(Puntero_mov)
 350+ A00A 23               inc hl
 351+ A00B 23               inc hl
 352+ A00C 22 18 89         ld (Puntero_mov),hl
 353+ A00F
 354+ A00F 7E               ld a,(hl)
 355+ A010 A7               and a
 356+ A011 CC 94 A0         call z,Incrementa_Puntero_indice_mov
 357+ A014 CA D4 9F         jp z,Reinicia_el_movimiento
 358+ A017
 359+ A017 C9               ret
 360+ A018              ; Subrutinas -----------------------------------------
 361+ A018              ; ---------- --------- --------- ---------- ----------
 362+ A018              ;
 363+ A018              ;   24/07/23
 364+ A018              ;
 365+ A018              ;   Fijamos_bucle
 366+ A018              ;
 367+ A018              ;
 368+ A018
 369+ A018              Fijamos_bucle
 370+ A018
 371+ A018 3A 1C 89         ld a,(Incrementa_puntero)
 372+ A01B 3C               inc a
 373+ A01C 32 1D 89         ld (Incrementa_puntero_backup),a
 374+ A01F
 375+ A01F CD 94 A0         call Incrementa_Puntero_indice_mov
 376+ A022 2A 16 89         ld hl,(Puntero_indice_mov)
 377+ A025 22 1A 89         ld (Puntero_indice_mov_bucle),hl
 378+ A028 C9               ret
 379+ A029
 380+ A029              ; ---------- --------- --------- ---------- ----------
 381+ A029              ;
 382+ A029              ;   07/7/23
 383+ A029              ;
 384+ A029              ;   Inicia_Repetimos_movimiento
 385+ A029              ;
 386+ A029              ;
 387+ A029
 388+ A029              Inicia_Repetimos_movimiento
 389+ A029
 390+ A029              ; Iniciamos (Repetimos_movimiento).
 391+ A029
 392+ A029 DD 2A 18 89      ld ix,(Puntero_mov)
 393+ A02D DD 7E 02         ld a,(ix+2)
 394+ A030 32 20 89         ld (Repetimos_movimiento),a
 395+ A033
 396+ A033 C9               ret
 397+ A034
 398+ A034              ; ---------- --------- --------- ---------- ----------
 399+ A034              ;
 400+ A034              ;   26/6/23
 401+ A034              ;
 402+ A034              ;   Inicia_Puntero_mov
 403+ A034              ;
 404+ A034              ;
 405+ A034
 406+ A034 2A 16 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ A037 5E               ld e,(hl)
 408+ A038 23               inc hl
 409+ A039 56               ld d,(hl)
 410+ A03A EB               ex de,hl
 411+ A03B 22 18 89         ld (Puntero_mov),hl
 412+ A03E C9               ret
 413+ A03F
 414+ A03F              ; ---------- --------- --------- ---------- ----------
 415+ A03F              ;
 416+ A03F              ;   27/06/23
 417+ A03F              ;
 418+ A03F              ;   Aplica_movimiento.
 419+ A03F
 420+ A03F              Aplica_desplazamiento
 421+ A03F
 422+ A03F              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ A03F
 424+ A03F 2A 18 89         ld hl, (Puntero_mov)
 425+ A042
 426+ A042 7E               ld a,(hl)
 427+ A043 E6 F0            and $f0
 428+ A045 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ A046
 430+ A046 CB 7E            bit 7,(hl)
 431+ A048 28 03            jr z,1F
 432+ A04A CD 68 9A         call Mov_up
 433+ A04D 2A 18 89     1 ld hl, (Puntero_mov)
 434+ A050 CB 76            bit 6,(hl)
 435+ A052 28 03            jr z,2F
 436+ A054 CD 37 9A         call Mov_down
 437+ A057 2A 18 89     2 ld hl, (Puntero_mov)
 438+ A05A CB 6E            bit 5,(hl)
 439+ A05C 28 03            jr z,3F
 440+ A05E CD C9 9B         call Mov_left
 441+ A061 2A 18 89     3 ld hl, (Puntero_mov)
 442+ A064 CB 66            bit 4,(hl)
 443+ A066 C8               ret z
 444+ A067 CD AB 9A         call Mov_right
 445+ A06A C9               ret
 446+ A06B
 447+ A06B              ; ---------- --------- --------- ---------- ----------
 448+ A06B              ;
 449+ A06B              ;   26/06/23
 450+ A06B              ;
 451+ A06B              ;   Ajusta_velocidad_desplazamiento.
 452+ A06B
 453+ A06B              Ajusta_velocidad_desplazamiento
 454+ A06B
 455+ A06B              ; 1er byte de la cadena de movimiento.
 456+ A06B              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A06B
 458+ A06B CD 89 A0         call Extrae_nibble_alto
 459+ A06E
 460+ A06E 32 FC 88         ld (Vel_up),a
 461+ A071 79               ld a,c
 462+ A072 E6 0F            and $0f
 463+ A074 32 FD 88         ld (Vel_down),a
 464+ A077
 465+ A077              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A077              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A077
 468+ A077 23               inc hl
 469+ A078 CD 89 A0         call Extrae_nibble_alto
 470+ A07B
 471+ A07B 32 FA 88         ld (Vel_left),a
 472+ A07E 79               ld a,c
 473+ A07F E6 0F            and $0f
 474+ A081 32 FB 88         ld (Vel_right),a
 475+ A084
 476+ A084              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A084
 478+ A084 23               inc hl
 479+ A085 22 18 89         ld (Puntero_mov),hl
 480+ A088 C9               ret
 481+ A089
 482+ A089 06 04        Extrae_nibble_alto ld b,4
 483+ A08B 7E               ld a,(hl)
 484+ A08C 4F               ld c,a
 485+ A08D E6 F0            and $f0
 486+ A08F CB 3F        1 srl a
 487+ A091 10 FC            djnz 1B
 488+ A093 C9               ret
 489+ A094
 490+ A094              ; ---------- --------- --------- ---------- ----------
 491+ A094              ;
 492+ A094              ;   5/7/23
 493+ A094              ;
 494+ A094              ;   Incrementa_Puntero_indice_mov
 495+ A094
 496+ A094              Incrementa_Puntero_indice_mov
 497+ A094
 498+ A094 21 1C 89         ld hl,Incrementa_puntero
 499+ A097 34               inc (hl)
 500+ A098
 501+ A098 2A 16 89         ld hl,(Puntero_indice_mov)
 502+ A09B 01 02 00         ld bc,2
 503+ A09E A7               and a
 504+ A09F 09               add hl,bc
 505+ A0A0 22 16 89         ld (Puntero_indice_mov),hl
 506+ A0A3
 507+ A0A3 7E               ld a,(hl)
 508+ A0A4 A7               and a
 509+ A0A5
 510+ A0A5              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A0A5
 512+ A0A5              ;    jr z,$
 513+ A0A5
 514+ A0A5              ;! Reinicia el Patrón de movimiento.
 515+ A0A5
 516+ A0A5 CC AA A0         call z,Inicializa_Puntero_indice_mov
 517+ A0A8
 518+ A0A8 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A0A9
 520+ A0A9 C9               ret
 521+ A0AA
 522+ A0AA
 523+ A0AA              ; ---------- --------- --------- ---------- ----------
 524+ A0AA              ;
 525+ A0AA              ;   24/07/23
 526+ A0AA              ;
 527+ A0AA              ;   Inicializa_Puntero_indice_mov
 528+ A0AA
 529+ A0AA              Inicializa_Puntero_indice_mov
 530+ A0AA
 531+ A0AA              ; Existe etiqueta de bucle principal???
 532+ A0AA
 533+ A0AA 2A 1A 89         ld hl,(Puntero_indice_mov_bucle)
 534+ A0AD 24               inc h
 535+ A0AE 25               dec h
 536+ A0AF 28 05            jr z,2F
 537+ A0B1
 538+ A0B1 22 16 89         ld (Puntero_indice_mov),hl
 539+ A0B4 18 14            jr 3F
 540+ A0B6
 541+ A0B6              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A0B6
 543+ A0B6 3A 1C 89     2 ld a,(Incrementa_puntero)
 544+ A0B9 47               ld b,a
 545+ A0BA
 546+ A0BA 2A 16 89         ld hl,(Puntero_indice_mov)
 547+ A0BD 2B           1 dec hl
 548+ A0BE 2B               dec hl
 549+ A0BF 10 FC            djnz 1B
 550+ A0C1 22 16 89         ld (Puntero_indice_mov),hl
 551+ A0C4
 552+ A0C4 AF               xor a
 553+ A0C5 32 1C 89         ld (Incrementa_puntero),a
 554+ A0C8 18 06            jr 4F
 555+ A0CA
 556+ A0CA 3A 1D 89     3 ld a,(Incrementa_puntero_backup)
 557+ A0CD 32 1C 89         ld (Incrementa_puntero),a
 558+ A0D0 C9           4 ret
 559+ A0D1
 560+ A0D1
 561+ A0D1
# file closed: Patrones_de_mov.asm
1657  A0D1              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0D1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0D1              ;
   3+ A0D1              ;	4/9/23
   4+ A0D1              ;
   5+ A0D1              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0D1
   7+ A0D1              ;	ADC HL,SP	LD (addr),SP
   8+ A0D1              ;	ADD HL,SP	LD SP,(addr)
   9+ A0D1              ;	ADD IX,SP	LD SP,nn
  10+ A0D1              ; 	ADD IY,SP	LD SP,HL
  11+ A0D1              ;				LD SP,IX
  12+ A0D1              ;	DEC SP		LD SP,IY
  13+ A0D1
  14+ A0D1              ;	EX (SP),HL
  15+ A0D1              ;	EX (SP),IX
  16+ A0D1              ;	EX (SP),IY
  17+ A0D1
  18+ A0D1              ;	INC SP
  19+ A0D1
  20+ A0D1                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 39 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A 28 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 41 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 0F            jr 4F
  46+ 7FB9
  47+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  48+ 7FB9
  49+ 7FB9 3A 13 89     2 ld a,(Ctrl_0)
  50+ 7FBC CB 77            bit 6,a
  51+ 7FBE 28 05            jr z,7F
  52+ 7FC0
  53+ 7FC0              ; Guardamos foto de Amadeus.
  54+ 7FC0
  55+ 7FC0 2A 47 89         ld hl,(End_Snapshot_Amadeus)
  56+ 7FC3 18 03            jr 4F
  57+ 7FC5
  58+ 7FC5 2A 3F 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  59+ 7FC8
  60+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  61+ 7FCA
  62+ 7FCA D1           1 pop de
  63+ 7FCB 73               ld (hl),e
  64+ 7FCC 23               inc hl
  65+ 7FCD 72               ld (hl),d
  66+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  67+ 7FCF 10 F9            djnz 1B
  68+ 7FD1
  69+ 7FD1 3A 28 89         ld a,(Ctrl_1)
  70+ 7FD4 CB 47            bit 0,a
  71+ 7FD6 28 05            jr z,5F
  72+ 7FD8
  73+ 7FD8 22 41 89         ld (Stack_snapshot_disparos),hl
  74+ 7FDB 18 13            jr 6F
  75+ 7FDD
  76+ 7FDD 3A 13 89     5 ld a,(Ctrl_0)
  77+ 7FE0 CB 77            bit 6,a
  78+ 7FE2 28 09            jr z,8F
  79+ 7FE4
  80+ 7FE4 22 47 89         ld (End_Snapshot_Amadeus),hl
  81+ 7FE7 ED 7B 39 89      ld sp,(Stack)
  82+ 7FEB FB               ei
  83+ 7FEC C9               ret
  84+ 7FED
  85+ 7FED 22 3F 89     8 ld (Stack_snapshot),hl
  86+ 7FF0 ED 7B 39 89  6 ld sp,(Stack)
  87+ 7FF4
  88+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  89+ 7FF4
  90+ 7FF4 5D               ld e,l
  91+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  92+ 7FF6
  93+ 7FF6 2A 5D 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  94+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  95+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  96+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
  97+ 7FFC
  98+ 7FFC FB               ei
  99+ 7FFD C9               ret
 100+ 7FFE
 101+ 7FFE              ; ------------------------------------------------
 102+ 7FFE              ;
 103+ 7FFE              ;   3/08/23
 104+ 7FFE              ;
 105+ 7FFE              ;   La rutina estará situada justo después de:
 106+ 7FFE              ;   Almacen_de_borrado_Amadeus equ $72ad ; 6 bytes. ($72ad - $72b2).
 107+ 7FFE              ;
 108+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 109+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 110+ 7FFE
 111+ 7FFE                  org $72b3
 112+ 72B3
 113+ 72B3              Gestiona_albumes_de_fotos
 114+ 72B3
 115+ 72B3              ;   En 1er lugar limpiamos el FRAME pintado.
 116+ 72B3              ;   Vaciamos Album_de_fotos.
 117+ 72B3
 118+ 72B3              ;   Album_de_fotos. Contiene datos ???
 119+ 72B3
 120+ 72B3 21 01 70         ld hl,Album_de_fotos+1
 121+ 72B6 7E               ld a,(hl)
 122+ 72B7 A7               and a
 123+ 72B8 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 124+ 72BA
 125+ 72BA 2A 43 89         ld hl,(End_Snapshot)
 126+ 72BD 01 00 70         ld bc,Album_de_fotos
 127+ 72C0 11 01 70         ld de,Album_de_fotos+1
 128+ 72C3 AF               xor a
 129+ 72C4 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 130+ 72C5
 131+ 72C5 CD 55 73         call Limpia_album
 132+ 72C8
 133+ 72C8 21 00 00         ld hl,0
 134+ 72CB 22 43 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 135+ 72CE
 136+ 72CE              ; ----- ----- ----- -----
 137+ 72CE
 138+ 72CE              ;   Album_de_fotos_1. Contiene datos ???
 139+ 72CE
 140+ 72CE 21 55 70     3 ld hl,Album_de_fotos_1+1
 141+ 72D1 7E               ld a,(hl)
 142+ 72D2 A7               and a
 143+ 72D3 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 144+ 72D5              ;                               ; _ información del album2 al album1.
 145+ 72D5
 146+ 72D5              ; ----- ----- ----- -----
 147+ 72D5              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 148+ 72D5
 149+ 72D5 2A 49 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 150+ 72D8 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 151+ 72DB 11 00 70         ld de,Album_de_fotos        ; Destino.
 152+ 72DE
 153+ 72DE CD 55 73         call Limpia_album
 154+ 72E1
 155+ 72E1              ;   Calculamos (End_Snapshot)
 156+ 72E1
 157+ 72E1 A7               and a
 158+ 72E2 ED 4A            adc hl,bc
 159+ 72E4 22 43 89         ld (End_Snapshot),hl
 160+ 72E7
 161+ 72E7              ;   Limpiamos Album_de_fotos_1.
 162+ 72E7
 163+ 72E7 2A 49 89         ld hl,(End_Snapshot_1)
 164+ 72EA 01 54 70         ld bc,Album_de_fotos_1
 165+ 72ED 11 55 70         ld de,Album_de_fotos_1+1
 166+ 72F0 AF               xor a
 167+ 72F1 02               ld (bc),a
 168+ 72F2
 169+ 72F2 CD 55 73         call Limpia_album
 170+ 72F5
 171+ 72F5 21 00 00         ld hl,0
 172+ 72F8 22 49 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 173+ 72FB
 174+ 72FB              ; ----- ----- ----- -----
 175+ 72FB
 176+ 72FB              ;   Album_de_fotos_2. Contiene datos ???
 177+ 72FB
 178+ 72FB 21 A9 70     1 ld hl,Album_de_fotos_2+1
 179+ 72FE 7E               ld a,(hl)
 180+ 72FF A7               and a
 181+ 7300 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 182+ 7302              ;                               ; _ información del album3 al album2.
 183+ 7302              ; ----- ----- ----- -----
 184+ 7302              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 185+ 7302
 186+ 7302 2A 4D 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 187+ 7305 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 188+ 7308 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 189+ 730B
 190+ 730B CD 55 73         call Limpia_album
 191+ 730E
 192+ 730E              ;   Calculamos (End_Snapshot_1):
 193+ 730E
 194+ 730E A7               and a
 195+ 730F ED 4A            adc hl,bc
 196+ 7311 22 49 89         ld (End_Snapshot_1),hl
 197+ 7314
 198+ 7314              ;   Limpiamos Album_de_fotos_2.
 199+ 7314
 200+ 7314 2A 4D 89         ld hl,(End_Snapshot_2)
 201+ 7317 01 A8 70         ld bc,Album_de_fotos_2
 202+ 731A 11 A9 70         ld de,Album_de_fotos_2+1
 203+ 731D AF               xor a
 204+ 731E 02               ld (bc),a
 205+ 731F
 206+ 731F CD 55 73         call Limpia_album
 207+ 7322
 208+ 7322 21 00 00         ld hl,0
 209+ 7325 22 4D 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 210+ 7328
 211+ 7328              ; ----- ----- ----- -----
 212+ 7328
 213+ 7328              ;   Album_de_fotos_3. Contiene datos ???
 214+ 7328
 215+ 7328 21 FD 70     2 ld hl,Album_de_fotos_3+1
 216+ 732B 7E               ld a,(hl)
 217+ 732C A7               and a
 218+ 732D C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 219+ 732E
 220+ 732E              ; ----- ----- ----- -----
 221+ 732E              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 222+ 732E
 223+ 732E 2A 51 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 224+ 7331 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 225+ 7334 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 226+ 7337
 227+ 7337 CD 55 73         call Limpia_album
 228+ 733A
 229+ 733A              ;   Calculamos (End_Snapshot_2):
 230+ 733A
 231+ 733A A7               and a
 232+ 733B ED 4A            adc hl,bc
 233+ 733D 22 4D 89         ld (End_Snapshot_2),hl
 234+ 7340
 235+ 7340              ;   Limpiamos Album_de_fotos_3.
 236+ 7340
 237+ 7340 2A 51 89         ld hl,(End_Snapshot_3)
 238+ 7343 01 FC 70         ld bc,Album_de_fotos_3
 239+ 7346 11 FD 70         ld de,Album_de_fotos_3+1
 240+ 7349 AF               xor a
 241+ 734A 02               ld (bc),a
 242+ 734B
 243+ 734B CD 55 73         call Limpia_album
 244+ 734E
 245+ 734E 21 00 00         ld hl,0
 246+ 7351 22 51 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 247+ 7354 C9               ret
 248+ 7355
 249+ 7355              ; ----------------------------------------------------
 250+ 7355              ;
 251+ 7355              ;   10/8/23
 252+ 7355              ;
 253+ 7355              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 254+ 7355              ;
 255+ 7355              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 256+ 7355              ;           BC ..... Dirección de inicio del álbum.
 257+ 7355              ;           DE ..... Dirección de inicio del álbum. +1
 258+ 7355
 259+ 7355              ;    ld hl,(End_Snapshot)
 260+ 7355              ;    ld bc,Album_de_fotos
 261+ 7355              ;    ld de,Album_de_fotos+1
 262+ 7355
 263+ 7355              ;   MODIFICA: A,HL,BC y DE.
 264+ 7355
 265+ 7355              Limpia_album
 266+ 7355 D5               push de                     ; Guardo DESTINO.
 267+ 7356 C5               push bc                     ; Guardo ORIGEN.
 268+ 7357 ED 42            sbc hl,bc
 269+ 7359 4D               ld c,l
 270+ 735A 44               ld b,h
 271+ 735B E1               pop hl
 272+ 735C C5               push bc
 273+ 735D ED B0            ldir
 274+ 735F C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 275+ 7360 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 276+ 7361 C9               ret                         ; _ a otro).
 277+ 7362              ;
 278+ 7362
 279+ 7362              ; -----------------------------------------------
 280+ 7362
 281+ 7362
 282+ 7362
 283+ 7362
 284+ 7362
# file closed: Guarda_foto_registros.asm
1658  7362
1659  7362              	SAVESNA "Pruebas.sna", START
1660  7362
1661  7362
1662  7362
1663  7362
# file closed: Banco_de_pruebas.asm
