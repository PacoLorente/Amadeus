# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 73 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 2E A2     	call Pinta_disparos_Amadeus
  74  82F6 CD FF 9E     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 9D 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 6D 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 9B 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 9B 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 9E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 7D 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 44 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C5 89        	defw Caja_1
 154+ 89A9 D1 89        	defw Caja_2
 155+ 89AB DD 89        	defw Caja_3
 156+ 89AD E9 89        	defw Caja_4
 157+ 89AF F5 89        	defw Caja_5
 158+ 89B1 01 8A        	defw Caja_6
 159+ 89B3 0D 8A        	defw Caja_7
 160+ 89B5
 161+ 89B5 00 00        	defw 0
 162+ 89B7 00 00        	defw 0
 163+ 89B9
 164+ 89B9              ; -------------------------
 165+ 89B9
 166+ 89B9              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B9
 168+ 89B9              ;	db 0
 169+ 89B9
 170+ 89B9              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B9              ;
 172+ 89B9              ;	28/05/24
 173+ 89B9              ;
 174+ 89B9              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B9              ;
 176+ 89B9              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B9
 178+ 89B9 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89BA 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BC 00           	db 0												; (Contador_de_vueltas).
 181+ 89BD 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BE 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89C0 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C2 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C4 00           	db 0												; (Velocidad).
 186+ 89C5
 187+ 89C5              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C5              ;
 189+ 89C5              ;	22/01/24
 190+ 89C5              ;
 191+ 89C5              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C5
 193+ 89C5 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C8 00           	db 0												; (Contador_de_vueltas).
 195+ 89C9 00           	db 0												; (Impacto).
 196+ 89CA 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89D0 00           	db 0												; (Velocidad).
 200+ 89D1
 201+ 89D1              ; ---------- ---------- ---------- ---------- ----------
 202+ 89D1
 203+ 89D1 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D4 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D5 00           	db 0												; (Impacto).
 206+ 89D6 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89DA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DC 00           	db 0												; (Velocidad).
 210+ 89DD
 211+ 89DD              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DD
 213+ 89DD 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89E0 00           	db 0 												; (Contador_de_vueltas).
 215+ 89E1 00           	db 0												; (Impacto).
 216+ 89E2 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E8 00           	db 0												; (Velocidad).
 220+ 89E9
 221+ 89E9              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E9
 223+ 89E9 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EC 00           	db 0 												; (Contador_de_vueltas).
 225+ 89ED 00           	db 0												; (Impacto).
 226+ 89EE 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89F0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F4 00           	db 0												; (Velocidad).
 230+ 89F5
 231+ 89F5              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F5
 233+ 89F5 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F8 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F9 00           	db 0												; (Impacto).
 236+ 89FA 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 8A00 00           	db 0												; (Velocidad).
 240+ 8A01
 241+ 8A01              ; ---------- ---------- ---------- ---------- ----------
 242+ 8A01
 243+ 8A01 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A04 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A05 00           	db 0												; (Impacto).
 246+ 8A06 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A08 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A0A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0C 00           	db 0												; (Velocidad).
 250+ 8A0D
 251+ 8A0D              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0D
 253+ 8A0D 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A10 00           	db 0 												; (Contador_de_vueltas).
 255+ 8A11 00           	db 0												; (Impacto).
 256+ 8A12 00 00        	defw 0												; (Puntero_de_impresion).
 257+ 8A14 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A16 00 00        	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A18 00           	db 0												; (Velocidad).
 260+ 8A19
 261+ 8A19              ; -------------------------------------------------------------------------------------
 262+ 8A19              ;
 263+ 8A19              ;	10/11/24
 264+ 8A19              ;
 265+ 8A19              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A19              ;
 267+ 8A19              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A19              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A19              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A19              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A19
 272+ 8A19              Indice_de_definiciones_de_entidades
 273+ 8A19
 274+ 8A19 1D 8A        	defw Entidad_1
 275+ 8A1B 2A 8A        	defw Entidad_2
 276+ 8A1D
 277+ 8A1D              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A1D
 279+ 8A1D              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A1D
 281+ 8A1D 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A20 01           	db 1												; (Contador_de_vueltas).
 283+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A25
 286+ 8A25              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A25              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A25
 289+ 8A25 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A27 00           	db 0												; (Cuad_objeto).
 291+ 8A28
 292+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A2A
 294+ 8A2A              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A2A
 296+ 8A2A 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A2D 01           	db 1												; (Contador_de_vueltas).
 298+ 8A2E 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A30 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A32 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A34 01           	db 1												; (Cuad_objeto).
 302+ 8A35 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A37
 304+ 8A37              ; -------------------------------------------------------------------------------------
 305+ 8A37              ;
 306+ 8A37              ;	28/05/24
 307+ 8A37              ;
 308+ 8A37              ;	Definición de Amadeus.
 309+ 8A37              ;
 310+ 8A37              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A37              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A37
 313+ 8A37 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A3A 00           	db 0												; (Contador_de_vueltas).
 315+ 8A3B C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A3D D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A3F C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A41 03           	db 3												; (Cuad_objeto).
 319+ 8A42 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A44              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A44
   2+ 8A44
   3+ 8A44              ;   07/07/23
   4+ 8A44              ;
   5+ 8A44              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A44              ;
   7+ 8A44              ;   Codificación:
   8+ 8A44              ;
   9+ 8A44              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A44              ;
  11+ 8A44              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A44              ;
  13+ 8A44              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A44              ;
  15+ 8A44              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A44              ;
  17+ 8A44              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A44              ;                               ..... %01000010 Vel_up 4
  19+ 8A44              ;                                               Vel_down 2
  20+ 8A44              ;                               ..... $42
  21+ 8A44              ;
  22+ 8A44              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A44              ;
  24+ 8A44              ;                               ..... %01000010 Vel_left 4
  25+ 8A44              ;                                               Vel_right 2
  26+ 8A44              ;                               ..... $42
  27+ 8A44              ;
  28+ 8A44              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A44              ;
  30+ 8A44              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A44              ;
  32+ 8A44              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A44              ;
  34+ 8A44              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A44              ;                                     $53
  36+ 8A44              ;
  37+ 8A44              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A44              ;
  39+ 8A44              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A44              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A44              ;
  42+ 8A44              ;                       Arriba ..... $81
  43+ 8A44              ;                       Arriba - izquierda ..... $a1
  44+ 8A44              ;                       Arriba - derecha ..... $91
  45+ 8A44              ;
  46+ 8A44              ;                       Abajo ..... $41
  47+ 8A44              ;                       Abajo - izquierda ..... $61
  48+ 8A44              ;                       Abajo - derecha ..... $51
  49+ 8A44              ;
  50+ 8A44              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A44              ;
  52+ 8A44              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A44              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A44              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A44              ;
  56+ 8A44              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A44              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A44              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A44              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A44              ;
  61+ 8A44              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A44              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A44              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A44              ;
  65+ 8A44              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A44              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A44              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A44              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A44
  70+ 8A44              ; ----- ----- ----- ----- -----
  71+ 8A44
  72+ 8A44 70 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A46 78 8A            defw F_1
  74+ 8A48 82 8A            defw F_2
  75+ 8A4A 8C 8A            defw Codo_abajo_derecha
  76+ 8A4C C0 8A            defw Derecha_y_subiendo
  77+ 8A4E CA 8A            defw Derecha_y_subiendo_1
  78+ 8A50 D4 8A            defw F_3
  79+ 8A52 DE 8A            defw F_4
  80+ 8A54 E8 8A            defw Derecha_y_bajando
  81+ 8A56 F2 8A            defw Derecha_y_bajando_1
  82+ 8A58 FC 8A            defw Derecha_y_bajando_2
  83+ 8A5A 06 8B            defw Codo_derecha_abajo
  84+ 8A5C 36 8B            defw Codo_abajo_izq.
  85+ 8A5E 6A 8B            defw Izquierda_y_subiendo
  86+ 8A60 74 8B            defw Izquierda_y_subiendo_1
  87+ 8A62 7E 8B            defw F_5
  88+ 8A64 88 8B            defw F_6
  89+ 8A66 92 8B            defw Izquierda_y_bajando
  90+ 8A68 9C 8B            defw Izquierda_y_bajando_1
  91+ 8A6A A6 8B            defw Izquierda_y_bajando_2
  92+ 8A6C B0 8B            defw Codo_izquierda_abajo
  93+ 8A6E 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A70
  95+ 8A70 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A74 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A78
  98+ 8A78 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A7C 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A80 08 00
 100+ 8A82
 101+ 8A82 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A86 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A8A 0F FE
 103+ 8A8C
 104+ 8A8C 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A90 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A94 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A98 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A9C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8AA0 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8AA4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8AA8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8AAC 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AB0 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AB4 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AB8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8ABC 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AC0
 118+ 8AC0 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AC4 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8AC8 06 00
 120+ 8ACA
 121+ 8ACA 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8ACE 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AD2 02 00
 123+ 8AD4
 124+ 8AD4 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8AD8 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ADC 04 00
 126+ 8ADE
 127+ 8ADE 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AE2 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AE6 08 00
 129+ 8AE8
 130+ 8AE8 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AEC 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AF0 02 00
 132+ 8AF2
 133+ 8AF2 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AF6 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AFA 06 00
 135+ 8AFC
 136+ 8AFC 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8B00 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8B04 06 00
 138+ 8B06
 139+ 8B06              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8B06
 141+ 8B06 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8B0A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B0E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B12 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B16 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B1A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B1E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B22 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B26 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B2A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B2E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B32 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B36
 154+ 8B36 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B3A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B3E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B42 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B46 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B4A 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B4E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B52 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B56 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B5A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B5E 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B62 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B66 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B6A
 168+ 8B6A 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B6E 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B72 06 00
 170+ 8B74
 171+ 8B74 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B78 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B7C 02 00
 173+ 8B7E
 174+ 8B7E 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B82 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B86 04 00
 176+ 8B88
 177+ 8B88 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B8C 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B90 08 00
 179+ 8B92
 180+ 8B92 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B96 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B9A 02 00
 182+ 8B9C
 183+ 8B9C 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8BA0 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8BA4 06 00
 185+ 8BA6
 186+ 8BA6 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8BAA 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BAE 06 00
 188+ 8BB0
 189+ 8BB0 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BB4 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BB8 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BBC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BC0 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BC4 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BC8 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BCC 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BD0 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BD4 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BD8 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BDC 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BE0
 202+ 8BE0
 203+ 8BE0
 204+ 8BE0
 205+ 8BE0
 206+ 8BE0
 207+ 8BE0
 208+ 8BE0
 209+ 8BE0
 210+ 8BE0
# file closed: Patrones_de_mov.asm
 149  8BE0              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BE0              ; 19/1/24
   2+ 8BE0
   3+ 8BE0              Indice_de_niveles
   4+ 8BE0
   5+ 8BE0 E8 8B        	defw Nivel_1
   6+ 8BE2 EF 8B        	defw Nivel_2
   7+ 8BE4
   8+ 8BE4              ;	...
   9+ 8BE4              ;	...
  10+ 8BE4              ;	+ Niveles ...
  11+ 8BE4
  12+ 8BE4 00 00        	defw 0
  13+ 8BE6 00 00        	defw 0
  14+ 8BE8
  15+ 8BE8 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BE9 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BED 01 01
  17+ 8BEF
  18+ 8BEF 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BF0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BF4 01 02
  20+ 8BF6 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BFA 01 02
  21+ 8BFC
# file closed: Niveles.asm
 150  8BFC
 151  8BFC              ; --------------------------------------------------------------------------------
 152  8BFC              ;
 153  8BFC              ; 12/05/24
 154  8BFC              ;
 155  8BFC              ; Parámetros DRAW.
 156  8BFC              ;
 157  8BFC
 158  8BFC              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BFC
 160  8BFC 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BFD              ;															- Patrón de movimiento.
 162  8BFD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BFE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BFF
 165  8BFF 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8C00              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8C00
 168  8C00              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8C00              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8C00              ; Ejemplos.
 171  8C00
 172  8C00              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8C00              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8C00              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8C00              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8C00              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8C00
 178  8C00 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8C01              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8C01              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8C01
 182  8C01 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8C03              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8C03
 185  8C03 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8C05
 187  8C05              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8C05
 189  8C05 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8C07              ;														; _palabras que componen el "movimiento_masticado".
 191  8C07
 192  8C07              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8C07
 194  8C07 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8C08              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8C08              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8C08              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8C08              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8C08
 200  8C08 00           Ctrl_2 db 0
 201  8C09              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8C09              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8C09              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8C09              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8C09              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8C09              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8C09              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8C09              ;
 209  8C09              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8C09              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8C09              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8C09              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8C09              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8C09              ;														BIT 4, ???
 215  8C09              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8C09
 217  8C09 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8C0A              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8C0A              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8C0A              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8C0A              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8C0A              ;
 223  8C0A              ; 														DESCRIPCIÖN:
 224  8C0A              ;
 225  8C0A              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8C0A              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8C0A              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8C0A              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8C0A              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8C0A              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8C0A              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8C0A              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8C0A              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8C0A              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8C0A              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8C0A              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8C0A              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8C0A              ;
 239  8C0A              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8C0A              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8C0A              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8C0A
 243  8C0A              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8C0A
 245  8C0A 00           Filas db 0												; Filas. [DRAW]
 246  8C0B 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8C0C 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C0E 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C10
 250  8C10              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C10
 252  8C10 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C11              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C11              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C11
 256  8C11              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C11
 258  8C11              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C11              ;
 260  8C11              ;	COLORES: 0 ..... NEGRO
 261  8C11              ;    		 1 ..... AZUL
 262  8C11              ; 			 2 ..... ROJO
 263  8C11              ;			 3 ..... MAGENTA
 264  8C11              ; 			 4 ..... VERDE
 265  8C11              ; 			 5 ..... CIAN
 266  8C11              ;			 6 ..... AMARILLO
 267  8C11              ; 			 7 ..... BLANCO
 268  8C11
 269  8C11 00 00        Indice_Sprite_der defw 0
 270  8C13 00 00        Indice_Sprite_izq defw 0
 271  8C15 00 00        Puntero_DESPLZ_der defw 0
 272  8C17 00 00        Puntero_DESPLZ_izq defw 0
 273  8C19
 274  8C19 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C1B 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C1C 00           Columnas db 0
 277  8C1D 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C1F              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C1F 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C20
 281  8C20              ; variables de control general.
 282  8C20
 283  8C20 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C21
 285  8C21              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C21
 287  8C21              Perfiles_de_velocidad
 288  8C21
 289  8C21 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C22 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C23 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C24 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C25
 294  8C25              ; Contadores de 16 bits.
 295  8C25
 296  8C25 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C27 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C29 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C2B 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C2D
 301  8C2D              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C2D
 303  8C2D 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C2F 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C31 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C33              ;
 307  8C33              ;
 308  8C33 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C34              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C34              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C34 00           Incrementa_puntero_backup db 0
 312  8C35 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C36              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C36 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C37 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C38 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C39              ;
 318  8C39              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C39              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C39              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C39              ;
 322  8C39              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C39              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C39              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C39              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C39              ;
 327  8C39              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C39              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C39              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C39
 331  8C39 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C3A
 333  8C3A              ;														DESCRIPCIÓN:
 334  8C3A              ;
 335  8C3A              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C3A              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C3A              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C3A              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C3A              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C3A              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C3A
 342  8C3A              ;														BIT 3, Recarga de nueva oleada.
 343  8C3A              ;														BIT 4, Recarga de nueva oleada.
 344  8C3A              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C3A              ;														BIT 6, **** Frame completo.
 346  8C3A              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C3A
 348  8C3A 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C3C              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C3C              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C3C              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C3C
 353  8C3C              ; Gestión de ENTIDADES y CAJAS.
 354  8C3C
 355  8C3C 00 00        Puntero_store_caja defw 0
 356  8C3E 00 00        Puntero_restore_caja defw 0
 357  8C40 00 00        Indice_restore_caja defw 0
 358  8C42 00 00        Puntero_indice_master defw 0
 359  8C44
 360  8C44 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C45 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C46 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C47
 364  8C47 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C49 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C4B              ;														; _ puntero (Indice_entidades).
 367  8C4B
 368  8C4B              ;---------------------------------------------------------------------------------------------------------------
 369  8C4B              ;
 370  8C4B              ;	13/10/24
 371  8C4B              ;
 372  8C4B              ;	Álbumes.
 373  8C4B
 374  8C4B 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C4D              ;														; _variable para almacenar lo posición del puntero_
 376  8C4D              ; 														; _de pila, SP.
 377  8C4D 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C4F              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C4F
 380  8C4F              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C4F
 382  8C4F 00 00        Album_de_pintado defw 0
 383  8C51 00 00        Album_de_borrado defw 0
 384  8C53 00 00        Album_de_pintado_Amadeus defw 0
 385  8C55 00 00        Album_de_borrado_Amadeus defw 0
 386  8C57
 387  8C57 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C59 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C5B
 390  8C5B 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C5D 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C5F
 393  8C5F
 394  8C5F 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C61
 396  8C61 00           Num_de_bytes_album_de_disparos db 0
 397  8C62 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C63
 399  8C63 07           Numero_de_disparos_de_entidades db 7
 400  8C64
 401  8C64 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C65 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C66
 404  8C66 00 00        Techo_Scanlines_album defw 0
 405  8C68 00 00        Techo_Scanlines_album_2 defw 0
 406  8C6A 00           Switch db 0
 407  8C6B 00 00        Techo defw 0
 408  8C6D 00 00        Scanlines_album_SP defw 0
 409  8C6F 00 89        India_SP defw Tabla_de_pintado
 410  8C71 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C73
 412  8C73 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C74              ;
 414  8C74              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C74              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C74              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C74              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C74              ;																Habilita el borrado/pintado de sprites.
 419  8C74              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C74              ;																_ a la baja.
 421  8C74              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C74              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C74              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C74              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C74              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C74              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C74
 428  8C74 00           Ctrl_4 db 0
 429  8C75 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C76              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C76              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C76
 433  8C76              ; Gestión de Disparos.
 434  8C76
 435  8C76 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C78 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C7A 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C7B
 439  8C7B              ;
 440  8C7B              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C7B              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C7B              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C7B              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C7B
 445  8C7B
 446  8C7B
 447  8C7B
 448  8C7B
 449  8C7B
 450  8C7B
 451  8C7B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C7D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C7D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C7D
 455  8C7D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C7F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C7F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C82              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C82 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C85              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C85
 462  8C85              ;---------------------------------------------------------------------------------------------------------------
 463  8C85
 464  8C85              ; Relojes y temporizaciones.
 465  8C85
 466  8C85 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C86 05           Clock_explosion_Amadeus db 5
 468  8C87 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C88
 470  8C88 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C8A F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C8C 00           Numero_rnd_disparos db 0
 473  8C8D
 474  8C8D 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C8F 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C90              ;																		; Repite la oleada de entidades.
 477  8C90 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C91 A0           CLOCK_disparos_de_entidades db $a0
 479  8C92
 480  8C92              ;---------------------------------------------------------------------------------------------------------------
 481  8C92
 482  8C92              ; Gestión de NIVELES.
 483  8C92
 484  8C92 00           Nivel db 0												; Nivel actual del juego.
 485  8C93 00 00        Puntero_indice_NIVELES defw 0
 486  8C95 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C97              ; 														; _ que definen el NIVEL.
 488  8C97
 489  8C97              ; ---------------------------------------------------------------------------------------------------------------
 490  8C97
 491  8C97              ; Temporizaciones Shield.
 492  8C97
 493  8C97 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C9B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C9D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C9E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C9F 00           Shield_3 db 0
 498  8CA0
 499  8CA0 03           Lives db 3
 500  8CA1
 501  8CA1              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8CA1              ;
 503  8CA1              ;	13/11/24
 504  8CA1
 505  8CA1              START
 506  8CA1
 507  8CA1 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8CA4 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8CA6 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8CA8 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8CAA F3           	DI
 512  8CAB
 513  8CAB              ; Limpiamos pantalla.
 514  8CAB
 515  8CAB 3E 07        	ld a,%00000111
 516  8CAD CD AC 94     	call Cls
 517  8CB0 CD 62 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CB3
 519  8CB3              INICIALIZACION
 520  8CB3
 521  8CB3 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CB5 CD AF 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CB8 CD F7 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CBB 6F           	ld l,a
 525  8CBC 26 00        	ld h,0
 526  8CBE 22 8D 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CC1
 528  8CC1 CD 1D 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 529  8CC4 CD DF 92     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 530  8CC7              ;														   _reponiendo entidades eliminadas.
 531  8CC7 18 FE        	jr $
 532  8CC9
 533  8CC9              ;	Inicia los álbumes de líneas.
 534  8CC9
 535  8CC9 CD B0 90     	call Inicia_albumes_de_lineas
 536  8CCC              ;
 537  8CCC CD C0 90     	call Inicia_albumes_de_lineas_Amadeus
 538  8CCF CD CD 90     	call Inicia_albumes_de_disparos
 539  8CD2
 540  8CD2              4
 541  8CD2
 542  8CD2              ;	call Inicia_Entidades
 543  8CD2 CD 98 93     	call Inicia_Amadeus
 544  8CD5
 545  8CD5              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 546  8CD5              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 547  8CD5              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 548  8CD5
 549  8CD5 11 B9 89     	ld de,Amadeus_BOX
 550  8CD8 CD 7C 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 551  8CDB CD DB 93     	call Limpiamos_bandeja_DRAW
 552  8CDE
 553  8CDE              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 554  8CDE
 555  8CDE 06 3C        	ld b,60
 556  8CE0 CD 52 9D     2 call Amadeus_a_izquierda
 557  8CE3 10 FB        	djnz 2B
 558  8CE5
 559  8CE5 CD 8E 90     	call Genera_datos_de_impresion_Amadeus
 560  8CE8
 561  8CE8              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 562  8CE8
 563  8CE8 CD E9 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 564  8CEB
 565  8CEB CD 6D 91     	call Inicia_Shield
 566  8CEE
 567  8CEE 2A 6D 8C     6 ld hl,(Scanlines_album_SP)
 568  8CF1 22 66 8C     	ld (Techo_Scanlines_album),hl
 569  8CF4
 570  8CF4 2A 51 8C     	ld hl,(Album_de_borrado)
 571  8CF7 22 6D 8C     	ld (Scanlines_album_SP),hl
 572  8CFA
 573  8CFA 21 00 89     	ld hl,Tabla_de_pintado
 574  8CFD 22 6F 8C     	ld (India_SP),hl
 575  8D00
 576  8D00 21 73 8C     	ld hl,Ctrl_3
 577  8D03 CB C6        	set 0,(hl) 											; Indica Frame completo.
 578  8D05 CB D6        	set 2,(hl)
 579  8D07 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 580  8D09
 581  8D09 FB           	ei 													; Ha de apuntar a $5c3a.
 582  8D0A
 583  8D0A 76           	halt
 584  8D0B
 585  8D0B              ; ------------------------------------
 586  8D0B
 587  8D0B              Main
 588  8D0B              ;
 589  8D0B              ; 07/11/24.
 590  8D0B
 591  8D0B              ; Gestión de disparos.
 592  8D0B
 593  8D0B CD CC 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 594  8D0E CD 45 9F     	call Motor_de_disparos_entidades
 595  8D11 CD DA A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 596  8D14
 597  8D14              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 598  8D14              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 599  8D14              ; Este hecho lo indica el bit2 de (Impacto2).
 600  8D14
 601  8D14 CD 77 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 602  8D17
 603  8D17              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 604  8D17
 605  8D17 21 91 8C     	ld hl,CLOCK_disparos_de_entidades
 606  8D1A 35           	dec (hl)
 607  8D1B CC 13 8E     	call z,Autoriza_disparo_de_entidades
 608  8D1E
 609  8D1E 2A 8D 8C     	ld hl,(Clock_next_entity)
 610  8D21 ED 4B 78 5C  	ld bc,(FRAMES)
 611  8D25 A7           	and a
 612  8D26 ED 42        	sbc hl,bc
 613  8D28 20 16        	jr nz,1F
 614  8D2A
 615  8D2A              ; GESTIÓN DE ENTIDADES.
 616  8D2A
 617  8D2A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 618  8D2A              ; _ (Clock_next_entity) para la siguiente entidad.
 619  8D2A
 620  8D2A              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 621  8D2A              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 622  8D2A              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 623  8D2A
 624  8D2A 21 45 8C     	ld hl,Numero_parcial_de_entidades
 625  8D2D 46           	ld b,(hl)
 626  8D2E 3A 46 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 627  8D31 B8           	cp b
 628  8D32 28 0C        	jr z,1F
 629  8D34 30 0A        	jr nc,1F
 630  8D36
 631  8D36              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 632  8D36
 633  8D36 3C           	inc a
 634  8D37 32 46 8C     	ld (Entidades_en_curso),a
 635  8D3A
 636  8D3A              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 637  8D3A
 638  8D3A CD F7 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 639  8D3D CD 13 8F     	call Define_Clock_next_entity
 640  8D40
 641  8D40 3A 46 8C     1 ld a,(Entidades_en_curso)
 642  8D43 A7           	and a
 643  8D44 CA BE 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 644  8D47 47           	ld b,a												; No hay entidades que gestionar.
 645  8D48
 646  8D48              ; ( Código que ejecutamos con cada entidad: ).
 647  8D48
 648  8D48              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 649  8D48              ;
 650  8D48              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 651  8D48
 652  8D48 21 00 89     	ld hl,Tabla_de_pintado
 653  8D4B 22 6F 8C     	ld (India_SP),hl
 654  8D4E
 655  8D4E 21 73 8C     	ld hl,Ctrl_3
 656  8D51 CB D6        	set 2,(hl)
 657  8D53 CD A1 8E     	call Change
 658  8D56
 659  8D56 C5           2 push bc 												; Nº de entidades en curso.
 660  8D57
 661  8D57 CD 3A 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 662  8D5A ED 5B 6D 8C  	ld de,(Scanlines_album_SP)
 663  8D5E
 664  8D5E              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 665  8D5E
 666  8D5E              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 667  8D5E              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 668  8D5E
 669  8D5E 3A 7A 8C     	ld a,(Impacto2)
 670  8D61 CB 5F        	bit 3,a
 671  8D63 C4 71 A1     	call nz,Compara_con_coordenadas_de_disparo
 672  8D66
 673  8D66 3A 00 8C     	ld a,(Impacto)
 674  8D69 CB 4F        	bit 1,a
 675  8D6B C4 4A 92     	call nz,Genera_explosion
 676  8D6E 20 31        	jr nz,Gestiona_siguiente_entidad
 677  8D70
 678  8D70 3A 00 8C     	ld a,(Impacto)
 679  8D73 A7           	and a
 680  8D74 28 0C        	jr z,3F
 681  8D76
 682  8D76              ; IMPACTO en entidad por colisión con Amadeus.
 683  8D76
 684  8D76              ; 5/7/24
 685  8D76              ; Nota importante:
 686  8D76              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 687  8D76              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 688  8D76              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 689  8D76
 690  8D76 3A BD 89     	ld a,(Impacto_Amadeus)
 691  8D79 A7           	and a
 692  8D7A C4 4A 92     	call nz,Genera_explosion
 693  8D7D 20 22        	jr nz,Gestiona_siguiente_entidad
 694  8D7F
 695  8D7F              ; Falsa colisión !!!
 696  8D7F
 697  8D7F 32 00 8C     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 698  8D82
 699  8D82              ; -------------------------------------------
 700  8D82
 701  8D82 CD 57 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 702  8D85 CD 7F 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 703  8D88 CD 47 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 704  8D8B CD EC 94     	call Genera_datos_de_impresion
 705  8D8E CD FE 93     	call Decrementa_Contador_de_mov_masticados
 706  8D91
 707  8D91              ; -------------------------------------------
 708  8D91
 709  8D91              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 710  8D91
 711  8D91 2A 01 8C     	ld hl,(Puntero_de_impresion)
 712  8D94 CD C0 94     	call Genera_coordenadas
 713  8D97
 714  8D97              ; TODO: Generamos disparo ???
 715  8D97
 716  8D97 3A 65 8C     	ld a,(Permiso_de_disparo_Entidades)
 717  8D9A A7           	and a
 718  8D9B C4 28 8E     	call nz,Entidad_genera_disparo_si_procede
 719  8D9E
 720  8D9E CD F5 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 721  8DA1
 722  8DA1              Gestiona_siguiente_entidad
 723  8DA1
 724  8DA1 CD D0 93      	call Store_Restore_cajas
 725  8DA4 C1           	pop bc
 726  8DA5 10 AF        	djnz 2B
 727  8DA7
 728  8DA7              ; Hemos gestionado todas las entidades.
 729  8DA7              ; ----- ----- -----
 730  8DA7
 731  8DA7 CD 6B 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 732  8DAA CD 82 8F     	call Ordena_tabla_de_impresion
 733  8DAD CD E9 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 734  8DB0
 735  8DB0 CD 28 8F     	call Borra_diferencia
 736  8DB3
 737  8DB3 3A 73 8C     	ld a,(Ctrl_3)
 738  8DB6 CB 5F        	bit 3,a
 739  8DB8 20 04        	jr nz,Gestion_de_Amadeus
 740  8DBA
 741  8DBA EB           	ex de,hl
 742  8DBB 71           	ld (hl),c
 743  8DBC 2C           	inc l
 744  8DBD 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 745  8DBE
 746  8DBE              ;! GESTIONA AMADEUS !!!!!!!!!!
 747  8DBE
 748  8DBE              Gestion_de_Amadeus
 749  8DBE
 750  8DBE 21 73 8C     	ld hl,Ctrl_3
 751  8DC1 CB 76        	bit 6,(hl)
 752  8DC3 28 13        	jr z,Amadeus_vivo
 753  8DC5
 754  8DC5              ; Amadeus ha sido destruido.
 755  8DC5              ; Decrementa (Temp_new_live).
 756  8DC5
 757  8DC5 21 87 8C     	ld hl,Temp_new_live
 758  8DC8 35           	dec (hl)
 759  8DC9 20 26        	jr nz,End_frame
 760  8DCB
 761  8DCB              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 762  8DCB
 763  8DCB 21 A0 8C     	ld hl,Lives
 764  8DCE 35           	dec (hl)
 765  8DCF
 766  8DCF              ;! Fin del juego
 767  8DCF
 768  8DCF F3           	di
 769  8DD0 28 FE        	jr z,$
 770  8DD2 FB           	ei
 771  8DD3
 772  8DD3              ; Nueva nave.
 773  8DD3
 774  8DD3 CD 45 8E     	call Reinicia_Amadeus
 775  8DD6 18 19        	jr End_frame
 776  8DD8
 777  8DD8              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 778  8DD8
 779  8DD8              Amadeus_vivo
 780  8DD8
 781  8DD8 3A BD 89     	ld a,(Impacto_Amadeus)
 782  8DDB A7           	and a
 783  8DDC C4 7A 92     	call nz, Genera_explosion_Amadeus
 784  8DDF 20 10        	jr nz, End_frame
 785  8DE1
 786  8DE1 CD 27 92     	call Teclado
 787  8DE4 21 73 8C     	ld hl,Ctrl_3
 788  8DE7
 789  8DE7 CB 6E        	bit 5,(hl)
 790  8DE9 28 06        	jr z,End_frame
 791  8DEB
 792  8DEB              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 793  8DEB
 794  8DEB CD BC 8E     	call Change_Amadeus
 795  8DEE CD 8E 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 796  8DF1
 797  8DF1              End_frame
 798  8DF1
 799  8DF1              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 800  8DF1              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 801  8DF1
 802  8DF1 CD 9C A0     	call Genera_datos_de_impresion_disparos_Entidades
 803  8DF4 CD 60 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 804  8DF7 CD B6 A1     	call Calcula_bytes_pintado_disparos
 805  8DFA CD C3 A1     	call Limpia_album_de_pintado_disparos_entidades
 806  8DFD
 807  8DFD              ; ------------ ------------- --------------
 808  8DFD
 809  8DFD 2A 51 8C     	ld hl,(Album_de_borrado)
 810  8E00 22 6D 8C     	ld (Scanlines_album_SP),hl
 811  8E03
 812  8E03 21 73 8C     	ld hl,Ctrl_3
 813  8E06 CB C6        	set 0,(hl) 											; Indica Frame completo.
 814  8E08 CB 9E        	res 3,(hl)
 815  8E0A CB A6        	res 4,(hl)
 816  8E0C
 817  8E0C AF           	xor a
 818  8E0D D3 FE        	out ($fe),a
 819  8E0F
 820  8E0F 76           	halt
 821  8E10
 822  8E10              ; ----------------------------------------
 823  8E10
 824  8E10              ;	ld a,(Ctrl_1) 										; Existe Loop?
 825  8E10              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 826  8E10 CA 0B 8D     	jp z,Main
 827  8E13
 828  8E13              ;------------------------------------------
 829  8E13              ;
 830  8E13              ;	07/11/24
 831  8E13
 832  8E13              Autoriza_disparo_de_entidades
 833  8E13
 834  8E13 3E 01        	ld a,1
 835  8E15 32 65 8C     	ld (Permiso_de_disparo_Entidades),a
 836  8E18
 837  8E18 3A 90 8C     	ld a,(Repone_CLOCK_disparos)
 838  8E1B FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 839  8E1D 38 02        	jr c,1F
 840  8E1F
 841  8E1F              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 842  8E1F              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 843  8E1F              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 844  8E1F
 845  8E1F D6 03        	sub 3
 846  8E21
 847  8E21 32 90 8C     1 ld (Repone_CLOCK_disparos),a
 848  8E24 32 91 8C     	ld (CLOCK_disparos_de_entidades),a
 849  8E27
 850  8E27 C9           	ret
 851  8E28
 852  8E28              ;------------------------------------------
 853  8E28              ;
 854  8E28              ;	14/09/24
 855  8E28              ;
 856  8E28              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 857  8E28
 858  8E28              Entidad_genera_disparo_si_procede
 859  8E28
 860  8E28 2A 8A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 861  8E2B CB 06        	rlc (hl)
 862  8E2D
 863  8E2D DC EC A0     	call c,Genera_disparo_de_entidad_maldosa
 864  8E30
 865  8E30 C9           	ret
 866  8E31
 867  8E31              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 868  8E31              ;
 869  8E31              ;	30/09/24
 870  8E31
 871  8E31              Actuaiza_sp_de_disparos_de_entidades
 872  8E31
 873  8E31 2A 8A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 874  8E34 23           	inc hl
 875  8E35 22 8A 8C     	ld (Puntero_num_aleatorios_disparos),hl
 876  8E38
 877  8E38 11 FD 88     	ld de,Numeros_aleatorios+7
 878  8E3B 7B           	ld a,e
 879  8E3C 95           	sub l
 880  8E3D C0           	ret nz
 881  8E3E
 882  8E3E 21 F6 88     1 ld hl,Numeros_aleatorios
 883  8E41 22 8A 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 884  8E44 C9           	ret
 885  8E45
 886  8E45              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 887  8E45              ;
 888  8E45              ;	24/07/24
 889  8E45
 890  8E45              Reinicia_Amadeus
 891  8E45
 892  8E45              ;	Reinicia posición y estado.
 893  8E45
 894  8E45 21 CF 50     	ld hl,$50cf
 895  8E48 22 BE 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 896  8E4B 21 CC DC     	ld hl,$dccc
 897  8E4E 22 C0 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 898  8E51 21 3D 00     	ld hl,$003d
 899  8E54 22 C2 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 900  8E57
 901  8E57              ;	limpiamos el álbum de borrado.
 902  8E57
 903  8E57 2A 55 8C     	ld hl,(Album_de_borrado_Amadeus)
 904  8E5A
 905  8E5A AF           	xor a
 906  8E5B 77           	ld (hl),a
 907  8E5C
 908  8E5C E5           	push hl
 909  8E5D D1           	pop de
 910  8E5E 13           	inc de
 911  8E5F
 912  8E5F 01 23 00     	ld bc,35
 913  8E62 ED B0        	ldir
 914  8E64
 915  8E64 CD 8E 90     	call Genera_datos_de_impresion_Amadeus
 916  8E67
 917  8E67              ;	Reinicia temporizaciones.
 918  8E67
 919  8E67 CD 6D 91     	call Inicia_Shield
 920  8E6A
 921  8E6A 3E 5A        	ld a,90
 922  8E6C 32 9D 8C     	ld (Shield),a
 923  8E6F
 924  8E6F 3E 64        	ld a,100
 925  8E71 32 87 8C     	ld (Temp_new_live),a
 926  8E74
 927  8E74              ; 	Restauramos el FLAG: Amadeus vivo.
 928  8E74
 929  8E74 21 73 8C     	ld hl,Ctrl_3
 930  8E77 CB B6        	res 6,(hl)
 931  8E79
 932  8E79              ;	Fuerza la impresión de la nave en el siguiente frame.
 933  8E79
 934  8E79 21 73 8C      	ld hl,Ctrl_3
 935  8E7C CB EE        	set 5,(hl)
 936  8E7E
 937  8E7E C9           	ret
 938  8E7F
 939  8E7F              ; --------------------------------------------------------------------------------------------------------------
 940  8E7F              ;
 941  8E7F              ;	7/11/24
 942  8E7F
 943  8E7F              Ajusta_velocidad_entidad
 944  8E7F
 945  8E7F 3A 07 8C     	ld a,(Velocidad)
 946  8E82 A7           	and a
 947  8E83 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 948  8E84              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 949  8E84              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 950  8E84
 951  8E84
 952  8E84              ; Incrementa (Contador_de_vueltas)x2.
 953  8E84              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 954  8E84
 955  8E84              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 956  8E84              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 957  8E84              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 958  8E84              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 959  8E84              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 960  8E84
 961  8E84
 962  8E84 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 963  8E86 32 07 8C     	ld (Velocidad),a
 964  8E89 E6 10        	and $10
 965  8E8B C8           	ret z
 966  8E8C
 967  8E8C              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 968  8E8C
 969  8E8C 3A FF 8B     	ld a,(Contador_de_vueltas)
 970  8E8F CB 2F        	sra a
 971  8E91 CB 2F        	sra a
 972  8E93 32 07 8C     	ld (Velocidad),a
 973  8E96
 974  8E96 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 975  8E99 23           	inc hl
 976  8E9A 23           	inc hl
 977  8E9B 23           	inc hl
 978  8E9C 23           	inc hl
 979  8E9D 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 980  8EA0
 981  8EA0 C9           	ret
 982  8EA1
 983  8EA1              ; --------------------------------------------------------------------------------------------------------------
 984  8EA1              ;
 985  8EA1              ;	25/08/24
 986  8EA1
 987  8EA1              Change
 988  8EA1
 989  8EA1 3A 6A 8C     	ld a,(Switch)
 990  8EA4 EE 01        	xor 1
 991  8EA6 32 6A 8C     	ld (Switch),a
 992  8EA9 2A 4F 8C     	ld hl,(Album_de_pintado)
 993  8EAC ED 5B 51 8C  	ld de,(Album_de_borrado)
 994  8EB0 EB           	ex de,hl
 995  8EB1 22 4F 8C     	ld (Album_de_pintado),hl
 996  8EB4 22 6D 8C     	ld (Scanlines_album_SP),hl
 997  8EB7 ED 53 51 8C  	ld (Album_de_borrado),de
 998  8EBB C9           	ret
 999  8EBC
1000  8EBC              Change_Amadeus
1001  8EBC
1002  8EBC 2A 53 8C     	ld hl,(Album_de_pintado_Amadeus)
1003  8EBF ED 5B 55 8C  	ld de,(Album_de_borrado_Amadeus)
1004  8EC3 EB           	ex de,hl
1005  8EC4 22 53 8C     	ld (Album_de_pintado_Amadeus),hl
1006  8EC7 ED 53 55 8C  	ld (Album_de_borrado_Amadeus),de
1007  8ECB C9           	ret
1008  8ECC
1009  8ECC              Change_Disparos
1010  8ECC
1011  8ECC              ; Álbumes de Amadeus.
1012  8ECC
1013  8ECC 2A 57 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1014  8ECF ED 5B 59 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1015  8ED3 EB           	ex de,hl
1016  8ED4 22 57 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1017  8ED7 ED 53 59 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1018  8EDB CD AB A1     	call Limpia_album_de_pintado_disparos_Amadeus
1019  8EDE
1020  8EDE              ; Álbumes de entidades.
1021  8EDE
1022  8EDE 2A 5B 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1023  8EE1 ED 5B 5D 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1024  8EE5 EB           	ex de,hl
1025  8EE6 22 5B 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1026  8EE9 ED 53 5D 8C  	ld (Album_de_borrado_disparos_Entidades),de
1027  8EED 22 5F 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1028  8EF0
1029  8EF0 3A 61 8C     	ld a,(Num_de_bytes_album_de_disparos)
1030  8EF3 32 62 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1031  8EF6
1032  8EF6 C9           	ret
1033  8EF7
1034  8EF7              ; ------------------------------------
1035  8EF7              ;
1036  8EF7              ; 1/05/24
1037  8EF7
1038  8EF7              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1039  8EF7              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1040  8EF7
1041  8EF7              ;	DESTRUYE: HL,DE,A
1042  8EF7              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1043  8EF7
1044  8EF7              ;	Variables implicadas: (RND_SP).
1045  8EF7
1046  8EF7              Extrae_numero_aleatorio_y_avanza
1047  8EF7
1048  8EF7 21 00 89     	ld hl,Tabla_de_pintado
1049  8EFA EB           	ex de,hl
1050  8EFB 2A 88 8C     	ld hl,(RND_SP)
1051  8EFE EB           	ex de,hl
1052  8EFF A7           	and a
1053  8F00 ED 52        	sbc hl,de
1054  8F02
1055  8F02 2A 88 8C     	ld hl,(RND_SP)
1056  8F05 20 06        	jr nz,1F
1057  8F07
1058  8F07              ; Sitúa HL al principio de la tabla de nº aleatorios.
1059  8F07
1060  8F07 21 F6 88     	ld hl,Numeros_aleatorios
1061  8F0A 22 88 8C     	ld (RND_SP),HL
1062  8F0D
1063  8F0D              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1064  8F0D
1065  8F0D 7E           1 ld a,(hl)
1066  8F0E 23           	inc hl
1067  8F0F 22 88 8C     	ld (RND_SP),hl
1068  8F12 C9           	ret
1069  8F13
1070  8F13              ; ------------------------------------
1071  8F13              ;
1072  8F13              ; 1/05/24
1073  8F13
1074  8F13              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1075  8F13              ; (1 a 4 segundos).
1076  8F13              ; Actualizamos (Clock_next_entity) con A.
1077  8F13
1078  8F13              ;	DESTRUYE: A y B.
1079  8F13              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1080  8F13              ;			 Actualiza (Clock_next_entity) con A.
1081  8F13
1082  8F13              ;	Variables implicadas: (Clock_next_entity).
1083  8F13
1084  8F13              ; Notas:
1085  8F13
1086  8F13              ; 	$32 1 seg.
1087  8F13              ; 	$64 2 seg.
1088  8F13              ; 	$96 3 seg.
1089  8F13              ; 	$c8 4 seg.
1090  8F13              ; 	$fa 5 seg.
1091  8F13
1092  8F13              ; $ffff 1310,7 seg, 22 minutos.
1093  8F13
1094  8F13              ;	$0100  5 seg. aproximadamente.
1095  8F13              ;	$0200 10 seg. aproximadamente.
1096  8F13              ;	$0300 15 seg. aproximadamente.
1097  8F13              ;	$0400 20 seg. aproximadamente.
1098  8F13              ;	$0500 25 seg. aproximadamente.
1099  8F13              ;	$0600 30 seg. aproximadamente.
1100  8F13
1101  8F13              Define_Clock_next_entity
1102  8F13
1103  8F13 FE 34        	cp $34
1104  8F15 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1105  8F17
1106  8F17              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1107  8F17
1108  8F17 4F           3 ld c,a
1109  8F18 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1110  8F1A 2A 78 5C     	ld hl,(FRAMES)
1111  8F1D A7           	and a
1112  8F1E ED 4A        	adc hl,bc
1113  8F20 22 8D 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1114  8F23 C9           	ret
1115  8F24
1116  8F24 3E 34        1 ld a,$34
1117  8F26 18 EF        	jr 3B
1118  8F28
1119  8F28              ; ------------------------------------
1120  8F28              ;
1121  8F28              ; 18/03/24
1122  8F28
1123  8F28              Borra_diferencia
1124  8F28
1125  8F28 ED 4B 6D 8C  	ld bc,(Scanlines_album_SP)
1126  8F2C
1127  8F2C 3A 6A 8C     	ld a,(Switch)
1128  8F2F A7           	and a
1129  8F30 28 08        	jr z,2F
1130  8F32
1131  8F32 2A 68 8C     	ld hl,(Techo_Scanlines_album_2)
1132  8F35 11 68 8C     	ld de,Techo_Scanlines_album_2
1133  8F38 18 06        	jr 3F
1134  8F3A
1135  8F3A 2A 66 8C     2 ld hl,(Techo_Scanlines_album)
1136  8F3D 11 66 8C     	ld de,Techo_Scanlines_album
1137  8F40
1138  8F40              ; Diferencia.
1139  8F40
1140  8F40 ED 42        3 sbc hl,bc
1141  8F42
1142  8F42 C8           	ret z
1143  8F43 D8           	ret c
1144  8F44
1145  8F44              ; Nuevo techo, (más bajo que el anterior).
1146  8F44              ; Fijamos nuevo techo y borramos bytes sobrantes.
1147  8F44
1148  8F44 EB           	ex de,hl
1149  8F45
1150  8F45 71           	ld (hl),c
1151  8F46 2C           	inc l
1152  8F47 70           	ld (hl),b
1153  8F48
1154  8F48 AF           	xor a
1155  8F49 43           	ld b,e
1156  8F4A
1157  8F4A 2A 6D 8C     	ld hl,(Scanlines_album_SP)
1158  8F4D
1159  8F4D 77           1 ld (hl),a
1160  8F4E 23           	inc hl
1161  8F4F 10 FC        	djnz 1B
1162  8F51
1163  8F51              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1164  8F51
1165  8F51 21 73 8C     	ld hl,Ctrl_3
1166  8F54 CB DE        	set 3,(hl)
1167  8F56
1168  8F56 C9           	ret
1169  8F57
1170  8F57              ; --------------------------------------------------------------------------------------------------------------
1171  8F57              ;
1172  8F57              ;	26/3/24
1173  8F57
1174  8F57              Recauda_informacion_de_entidad_en_curso
1175  8F57
1176  8F57              ; Almacena la Coordenada Y de la entidad en curso.
1177  8F57
1178  8F57              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1179  8F57
1180  8F57 3A FE 8B     	ld a,(Coordenada_y)
1181  8F5A 2A 6F 8C     	ld hl,(India_SP)
1182  8F5D 77           	ld (hl),a
1183  8F5E 2C           	inc l
1184  8F5F
1185  8F5F              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1186  8F5F
1187  8F5F ED 5B 6D 8C  	ld de,(Scanlines_album_SP)
1188  8F63
1189  8F63 73           	ld (hl),e
1190  8F64 2C           	inc l
1191  8F65 72           	ld (hl),d
1192  8F66 2C           	inc l
1193  8F67
1194  8F67 22 6F 8C     	ld (India_SP),hl
1195  8F6A
1196  8F6A C9           	ret
1197  8F6B
1198  8F6B              ; --------------------------------------------------------------------------------------------------------------
1199  8F6B              ;
1200  8F6B              ;	27/03/24
1201  8F6B              ;
1202  8F6B
1203  8F6B              Inicializa_India_y_limpia_Tabla_de_impresion
1204  8F6B
1205  8F6B 2A 6F 8C     	ld hl,(India_SP)
1206  8F6E 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1207  8F71
1208  8F71 79           	ld a,c
1209  8F72 95           	sub l
1210  8F73 28 06        	jr z,2F
1211  8F75 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1212  8F76              ;														; _ y pasamos a inicializar (India_SP).
1213  8F76 AF           	xor a
1214  8F77
1215  8F77 77           1 ld (hl),a
1216  8F78 2C           	inc l
1217  8F79 10 FC        	djnz 1B												; Limpia Tabla.
1218  8F7B
1219  8F7B 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1220  8F7E 22 6F 8C     	ld (India_SP),hl
1221  8F81
1222  8F81 C9           	ret
1223  8F82
1224  8F82              ; --------------------------------------------------------------------------------------------------------------
1225  8F82              ;
1226  8F82              ;	31/3/24
1227  8F82
1228  8F82              Ordena_tabla_de_impresion
1229  8F82
1230  8F82              ; 5794 T/states.
1231  8F82              ; 6278 T/states.
1232  8F82              ; 5310 T/states.
1233  8F82
1234  8F82              ; Inicializamos punteros (India_SP) e (India_2_SP).
1235  8F82              ; Inicializamos contador de comparaciones, [C].
1236  8F82              ; Cargamos los registros A y B para efectuar comparación.
1237  8F82
1238  8F82 FD 2E 00     	ld iyl,0
1239  8F85
1240  8F85 3A 46 8C     	ld a,(Entidades_en_curso)
1241  8F88 FE 04        	cp 4 	;	4
1242  8F8A D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1243  8F8B
1244  8F8B 3D           	dec a
1245  8F8C 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1246  8F8D 51           	ld d,c 										; Copia de respaldo.
1247  8F8E
1248  8F8E 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1249  8F8F
1250  8F8F 21 03 89     	ld hl,Tabla_de_pintado+3
1251  8F92 46           	ld b,(hl)
1252  8F93 22 71 8C     	ld (India_2_SP),hl
1253  8F96
1254  8F96 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1255  8F97 DC BF 8F     	call c, Avanza_India_2_SP
1256  8F9A CC BF 8F     	call z, Avanza_India_2_SP
1257  8F9D
1258  8F9D FD 2D        	dec iyl
1259  8F9F 28 18        	jr z,2F
1260  8FA1
1261  8FA1
1262  8FA1              ; --------------------------------------------------------------------------------------------------------------
1263  8FA1              ;
1264  8FA1              ;	7/4/24
1265  8FA1
1266  8FA1              Trueque
1267  8FA1
1268  8FA1              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1269  8FA1              ;  			A contiene en nº de fila de (India_SP).
1270  8FA1              ;			HL contiene (India_2_SP).
1271  8FA1
1272  8FA1 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1273  8FA2 E5           	push hl										; Preservo (India_2_SP).
1274  8FA3
1275  8FA3 ED 5B 6F 8C  	ld de,(India_SP)
1276  8FA7 EB           	ex de,hl
1277  8FA8 70           	ld (hl),b
1278  8FA9 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1279  8FAA
1280  8FAA CD EB 8F     	call Intercambia_1_byte
1281  8FAD CD EB 8F     	call Intercambia_1_byte
1282  8FB0
1283  8FB0
1284  8FB0              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1285  8FB0              ; Recuperamos (India_2_SP) en HL.
1286  8FB0
1287  8FB0 2A 6F 8C     	ld hl,(India_SP)
1288  8FB3 7E           	ld a,(hl)
1289  8FB4
1290  8FB4 E1           	pop hl
1291  8FB5 D1           	pop de
1292  8FB6
1293  8FB6              ; --------------------------------------------------------------------------------------------------------------
1294  8FB6
1295  8FB6 CD BF 8F     	call Avanza_India_2_SP
1296  8FB9
1297  8FB9 14           2 inc d
1298  8FBA 15           	dec d
1299  8FBB C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1300  8FBC 18 D8        	jr 1B
1301  8FBE
1302  8FBE C9           	ret
1303  8FBF
1304  8FBF              ; ----- ----- ----- ----- -----
1305  8FBF
1306  8FBF              Avanza_India_2_SP
1307  8FBF
1308  8FBF 0D           	dec c
1309  8FC0 28 0A        	jr z,Avanza_punteros_indios
1310  8FC2
1311  8FC2 FD 2C        	inc iyl
1312  8FC4
1313  8FC4 2C           	inc l
1314  8FC5 2C           	inc l
1315  8FC6 2C           	inc l
1316  8FC7
1317  8FC7 46           	ld b,(hl)
1318  8FC8 22 71 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1319  8FCB
1320  8FCB C9           	ret
1321  8FCC
1322  8FCC              ; ----- ----- ----- ----- -----
1323  8FCC
1324  8FCC              Avanza_punteros_indios
1325  8FCC
1326  8FCC 15           	dec d
1327  8FCD 28 15        	jr z,Prepara_salida
1328  8FCF
1329  8FCF 4A           	ld c,d
1330  8FD0
1331  8FD0 2A 6F 8C     	ld hl,(India_SP)
1332  8FD3 2C           	inc l
1333  8FD4 2C           	inc l
1334  8FD5 2C           	inc l
1335  8FD6 7E           	ld a,(hl)
1336  8FD7 22 6F 8C     	ld (India_SP),hl
1337  8FDA
1338  8FDA 2C           	inc l
1339  8FDB 2C           	inc l
1340  8FDC 2C           	inc l
1341  8FDD 46           	ld b,(hl)
1342  8FDE 22 71 8C     	ld (India_2_SP),hl
1343  8FE1
1344  8FE1 FD 2C        	inc iyl
1345  8FE3
1346  8FE3 C9           	ret
1347  8FE4
1348  8FE4              Prepara_salida
1349  8FE4
1350  8FE4 21 00 89     	ld hl,Tabla_de_pintado
1351  8FE7 22 6F 8C     	ld (India_SP),hl
1352  8FEA C9           	ret
1353  8FEB
1354  8FEB
1355  8FEB 2C           Intercambia_1_byte inc l
1356  8FEC 1C           	inc e
1357  8FED 46           	ld b,(hl)
1358  8FEE 1A           	ld a,(de)
1359  8FEF EB           	ex de,hl
1360  8FF0 70           	ld (hl),b
1361  8FF1 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1362  8FF2 C9           	ret
1363  8FF3
1364  8FF3              ; -----------------------------------------------------------------------------------
1365  8FF3              ;
1366  8FF3              ;	20/01/24
1367  8FF3              ;
1368  8FF3              ;
1369  8FF3
1370  8FF3              Construye_movimientos_masticados_entidad
1371  8FF3
1372  8FF3 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1373  8FF6 E5           	push hl
1374  8FF7 CD 3A 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1375  8FFA              ;															; _ el (Contador_de_mov_masticados).
1376  8FFA CD 05 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1377  8FFD              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1378  8FFD CD D8 99     	call Recompone_posicion_inicio
1379  9000
1380  9000 CD 08 97     1 call Draw
1381  9003 CD 1F 90     	call Guarda_movimiento_masticado
1382  9006
1383  9006 CD 85 9D     	call Movimiento
1384  9009
1385  9009 3A 73 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1386  900C CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1387  900E 28 F0        	jr z,1B
1388  9010
1389  9010              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1390  9010              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1391  9010
1392  9010 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1393  9011 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1394  9014
1395  9014              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1396  9014
1397  9014 CD E9 9E     	call Situa_en_contador_general_de_mov_masticados
1398  9017
1399  9017              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1400  9017              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1401  9017
1402  9017 ED 4B 05 8C  	ld bc,(Contador_de_mov_masticados)
1403  901B
1404  901B 71           	ld (hl),c
1405  901C 23           	inc hl
1406  901D 70           	ld (hl),b
1407  901E
1408  901E C9           	ret
1409  901F
1410  901F              ; -----------------------------------------------------------------------------------
1411  901F              ;
1412  901F              ;	28/12/23
1413  901F              ;
1414  901F              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1415  901F              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1416  901F
1417  901F              Guarda_movimiento_masticado
1418  901F
1419  901F ED 73 4B 8C  	ld (Stack),sp
1420  9023 ED 7B 03 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1421  9027
1422  9027 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1423  9029 FD E5            push iy 												; Pushea Puntero_objeto.
1424  902B
1425  902B ED 7B 4B 8C      ld sp,(Stack)
1426  902F
1427  902F 2A 05 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1428  9032 23           	inc hl
1429  9033 22 05 8C     	ld (Contador_de_mov_masticados),hl
1430  9036
1431  9036 CD 3A 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1432  9039              ;															; _ el (Contador_de_mov_masticados).
1433  9039 C9               ret
1434  903A
1435  903A              ; --------------------------------------------------------------------------------------------------------------
1436  903A              ;
1437  903A              ;	12/1/24
1438  903A              ;
1439  903A              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1440  903A
1441  903A              Actualiza_Puntero_de_almacen_de_mov_masticados
1442  903A
1443  903A 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1444  903D 01 04 00     	ld bc,4
1445  9040 A7           	and a
1446  9041 ED 4A        	adc hl,bc
1447  9043 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1448  9046 C9           	ret
1449  9047
1450  9047              ; --------------------------------------------------------------------------------------------------------------
1451  9047              ;
1452  9047              ;	24/03/24
1453  9047              ;
1454  9047              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1455  9047              ;
1456  9047              ;	IX contiene el puntero de impresión.
1457  9047              ;	DE contiene (Puntero_objeto).
1458  9047
1459  9047
1460  9047              Cargamos_registros_con_mov_masticado
1461  9047
1462  9047 ED 73 4B 8C  	ld (Stack),sp
1463  904B ED 7B 03 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1464  904F
1465  904F D1           	pop de 															; DE contiene Puntero_objeto
1466  9050 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1467  9052
1468  9052 ED 73 03 8C  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1469  9056 ED 7B 4B 8C  	ld sp,(Stack)
1470  905A
1471  905A 7B           	ld a,e
1472  905B 82           	add d															; Comprueba si ya no hay datos en el almacén.
1473  905C
1474  905C CC 06 94     	call z,Reinicia_entidad_maliciosa
1475  905F
1476  905F C9           	ret
1477  9060
1478  9060              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1479  9060              ;
1480  9060              ;	22/7/24
1481  9060
1482  9060              Cargamos_registros_con_explosion
1483  9060
1484  9060
1485  9060 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1486  9063 CD FF 90     	call Extrae_address
1487  9066
1488  9066 5D           	ld e,l
1489  9067 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1490  9068
1491  9068 DD 2A 01 8C  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1492  906C
1493  906C C9           	ret
1494  906D
1495  906D
1496  906D              Cargamos_registros_con_explosion_Amadeus
1497  906D
1498  906D 2A C0 89     	ld hl,(Pamm_Amadeus)
1499  9070 CD FF 90     	call Extrae_address
1500  9073
1501  9073 5D           	ld e,l
1502  9074 54           	ld d,h
1503  9075
1504  9075 DD 2A BE 89  	ld ix,(p.imp.amadeus)
1505  9079
1506  9079 C9           	ret
1507  907A
1508  907A              ; --------------------------------------------------------------------------------------------------------------
1509  907A              ;
1510  907A              ;	17/06/24
1511  907A              ;
1512  907A              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1513  907A              ;
1514  907A              ;	IX contiene el puntero de impresión.
1515  907A              ;	DE contiene (Puntero_objeto).
1516  907A
1517  907A
1518  907A              Cargamos_registros_con_mov_masticado_Amadeus
1519  907A
1520  907A ED 73 4B 8C  	ld (Stack),sp
1521  907E ED 7B C0 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1522  9082 D1           	pop de 															; DE contiene Puntero_objeto
1523  9083 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1524  9085 DD 22 BE 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1525  9089 ED 7B 4B 8C  	ld sp,(Stack)
1526  908D C9           	ret
1527  908E
1528  908E              ; ---------------------------------------------------------------------------------------------------------------------
1529  908E              ;
1530  908E              ;	18/6/24
1531  908E              ;
1532  908E              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1533  908E
1534  908E              Genera_datos_de_impresion_Amadeus
1535  908E
1536  908E 3A BD 89     	ld a,(Impacto_Amadeus)
1537  9091 A7           	and a
1538  9092 20 03        	jr nz,1F
1539  9094
1540  9094              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1541  9094              ; _apuntando a la correspondiente explosión.
1542  9094
1543  9094 CD 7A 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1544  9097
1545  9097 DD 7D        1 ld a,ixl
1546  9099 E6 1F        	and $1f
1547  909B 32 BA 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1548  909E
1549  909E 2A 6D 8C     	ld hl,(Scanlines_album_SP)
1550  90A1 E5           	push hl
1551  90A2
1552  90A2 2A 53 8C     	ld hl,(Album_de_pintado_Amadeus)
1553  90A5 22 6D 8C     	ld (Scanlines_album_SP),hl
1554  90A8
1555  90A8 CD EC 94     	call Genera_datos_de_impresion
1556  90AB
1557  90AB E1           	pop hl
1558  90AC 22 6D 8C     	ld (Scanlines_album_SP),hl
1559  90AF
1560  90AF C9           	ret
1561  90B0
1562  90B0              ; ---------------------------------------------------------------------------------------------------------------------
1563  90B0              ;
1564  90B0              ;	13/03/24
1565  90B0              ;
1566  90B0              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1567  90B0
1568  90B0              Inicia_albumes_de_lineas
1569  90B0
1570  90B0 21 00 80     	ld hl,Scanlines_album
1571  90B3 22 4F 8C     	ld (Album_de_pintado),hl
1572  90B6 22 6D 8C     	ld (Scanlines_album_SP),hl
1573  90B9
1574  90B9 21 1A 81     	ld hl,Scanlines_album_2
1575  90BC 22 51 8C     	ld (Album_de_borrado),hl
1576  90BF
1577  90BF C9           	ret
1578  90C0
1579  90C0              Inicia_albumes_de_lineas_Amadeus
1580  90C0
1581  90C0 21 34 82     	ld hl,Amadeus_scanlines_album
1582  90C3 22 53 8C     	ld (Album_de_pintado_Amadeus),hl
1583  90C6 21 58 82     	ld hl,Amadeus_scanlines_album_2
1584  90C9 22 55 8C     	ld (Album_de_borrado_Amadeus),hl
1585  90CC
1586  90CC C9           	ret
1587  90CD
1588  90CD              Inicia_albumes_de_disparos
1589  90CD
1590  90CD 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1591  90D0 22 57 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1592  90D3 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1593  90D6 22 59 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1594  90D9
1595  90D9 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1596  90DC 22 5B 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1597  90DF 22 5F 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1598  90E2
1599  90E2 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1600  90E5 22 5D 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1601  90E8
1602  90E8 C9           	ret
1603  90E9
1604  90E9              ; ---------------------------------------------------------------------------------------------------------------------
1605  90E9              ;
1606  90E9              ; 8/1/23
1607  90E9              ;
1608  90E9              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1609  90E9              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1610  90E9              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1611  90E9
1612  90E9              ; Destruye HL y DE !!!!!
1613  90E9
1614  90E9              Inicia_punteros_de_cajas
1615  90E9
1616  90E9 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1617  90EC CD FF 90         call Extrae_address
1618  90EF 22 3C 8C         ld (Puntero_store_caja),hl
1619  90F2 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1620  90F5 22 40 8C     	ld (Indice_restore_caja),hl
1621  90F8 CD FF 90     	call Extrae_address
1622  90FB 22 3E 8C     	ld (Puntero_restore_caja),hl
1623  90FE C9               ret
1624  90FF
1625  90FF              ; *************************************************************************************************************************************************************
1626  90FF
1627  90FF              ;
1628  90FF              ; 20/10/22
1629  90FF              ;
1630  90FF              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1631  90FF              ;
1632  90FF              ; Destruye el puntero y DE !!!!!
1633  90FF
1634  90FF 5E           Extrae_address ld e,(hl)
1635  9100 23           	inc hl
1636  9101 56           	ld d,(hl)
1637  9102 2B           	dec hl
1638  9103 EB           	ex de,hl
1639  9104 C9           	ret
1640  9105
1641  9105              ; *************************************************************************************************************************************************************
1642  9105              ;
1643  9105              ;	20/1/24
1644  9105              ;
1645  9105              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1646  9105              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1647  9105              ;
1648  9105              ;   Destruye HL y BC !!!!!,
1649  9105              ;
1650  9105              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1651  9105              ;					"0" ..... Izquierda.
1652  9105
1653  9105              Inicia_Puntero_objeto
1654  9105
1655  9105 3A 1B 8C     	ld a,(Cuad_objeto)
1656  9108 E6 01        	and 1
1657  910A F5           	push af
1658  910B CC 27 91     	call z,Inicia_puntero_objeto_izq
1659  910E F1           	pop af
1660  910F C8           	ret z
1661  9110 CD 14 91     	call Inicia_puntero_objeto_der
1662  9113 C9           	ret
1663  9114
1664  9114              ; Arrancamos desde la parte izquierda de la pantalla.
1665  9114              ; Iniciamos (Indice_Sprite_der).
1666  9114
1667  9114 2A 11 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1668  9117 22 15 8C     	ld (Puntero_DESPLZ_der),hl
1669  911A CD FF 90     	call Extrae_address
1670  911D 22 0E 8C     	ld (Puntero_objeto),hl
1671  9120
1672  9120 2A 13 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1673  9123 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
1674  9126 C9           	ret
1675  9127
1676  9127              ; Arrancamos desde la parte derecha de la pantalla.
1677  9127              ; Iniciamos (Indice_Sprite_izq).
1678  9127
1679  9127 2A 13 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1680  912A 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
1681  912D CD FF 90     	call Extrae_address
1682  9130 22 0E 8C     	ld (Puntero_objeto),hl
1683  9133
1684  9133 2A 11 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1685  9136 22 15 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1686  9139 C9           	ret
1687  913A
1688  913A              ; **************************************************************************************************
1689  913A              ;
1690  913A              ;	06/07/24
1691  913A              ;
1692  913A              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1693  913A
1694  913A              Restore_entidad
1695  913A
1696  913A 2A 3C 8C     	ld hl,(Puntero_store_caja)
1697  913D 7E           	ld a,(hl)
1698  913E A7           	and a
1699  913F CC 4D 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1700  9142 28 F6        	jr z,Restore_entidad
1701  9144
1702  9144 11 FC 8B     	ld de,Bandeja_DRAW
1703  9147 01 0C 00     	ld bc,12
1704  914A ED B0        	ldir
1705  914C C9           	ret
1706  914D
1707  914D              ; **************************************************************************************************
1708  914D              ;
1709  914D              ;	08/05/23
1710  914D              ;
1711  914D              ;	Incrementamos los dos punteros de entidades. (+1).
1712  914D
1713  914D              Incrementa_punteros_de_cajas
1714  914D
1715  914D 2A 3E 8C     	ld hl,(Puntero_restore_caja)
1716  9150 22 3C 8C     	ld (Puntero_store_caja),hl
1717  9153 2A 40 8C     	ld hl,(Indice_restore_caja)
1718  9156 23           	inc hl
1719  9157 23           	inc hl
1720  9158 22 40 8C     	ld (Indice_restore_caja),hl
1721  915B CD FF 90         call Extrae_address
1722  915E 22 3E 8C         ld (Puntero_restore_caja),hl
1723  9161 C9               ret
1724  9162
1725  9162              ; -----------------------------------------------------------
1726  9162
1727  9162              ; Teclado.
1728  9162
1729  9162 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1730  9164 DB FE        	in a,($fe)
1731  9166 E6 01        	and $01
1732  9168 28 02        	jr z,1f
1733  916A 18 F6        	jr Pulsa_ENTER
1734  916C C9           1 ret
1735  916D
1736  916D              ; **************************************************************************************************
1737  916D              ;
1738  916D              ; Temporización.
1739  916D
1740  916D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1741  916D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1742  916D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1743  916D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1744  916D
1745  916D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1746  916D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1747  916D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1748  916D
1749  916D              ; A partir de $4f61 no hace falta DELAY.
1750  916D
1751  916D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1752  916D
1753  916D              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1754  916D              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1755  916D              ;	LD A,B
1756  916D              ;	AND A
1757  916D              ;	JR NZ,wait
1758  916D              ;	RET
1759  916D
1760  916D              ; ---------------------------------------------------------------------------------------------------------------
1761  916D              ;
1762  916D              ;	13/07/24
1763  916D              ;
1764  916D
1765  916D              Inicia_Shield
1766  916D
1767  916D 21 97 8C     	ld hl,Datos_Shield
1768  9170 22 9B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1769  9173
1770  9173 7E           	ld a,(hl)
1771  9174 32 9E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1772  9177
1773  9177 3E 01        	ld a,1
1774  9179 32 9F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1775  917C
1776  917C C9           	ret
1777  917D
1778  917D              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1779  917D              ;
1780  917D              ;	4/6/24
1781  917D              ;
1782  917D              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1783  917D              ;
1784  917D              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1785  917D              ;
1786  917D
1787  917D              Actualiza_pantalla
1788  917D
1789  917D 3E 02        	ld a,2
1790  917F D3 FE        	out ($fe),a
1791  9181
1792  9181 3A 73 8C     	ld a,(Ctrl_3)
1793  9184 CB 57        	bit 2,a
1794  9186 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1795  9188
1796  9188              Borrando_entidades
1797  9188
1798  9188 2A 6D 8C     	ld hl,(Scanlines_album_SP)
1799  918B CD FF 90     	call Extrae_address
1800  918E 24           	inc h
1801  918F 25           	dec h
1802  9190 28 05        	jr z,Pintando_entidades
1803  9192 CD E5 95     	call Pinta_Sprites
1804  9195 18 F1        	jr Borrando_entidades
1805  9197
1806  9197              Pintando_entidades
1807  9197
1808  9197 2A 6F 8C     	ld hl,(India_SP)
1809  919A 2C           	inc l
1810  919B CD FF 90     	call Extrae_address
1811  919E 24           	inc h
1812  919F 25           	dec h
1813  91A0 28 0E        	jr z,Ejecuta_escudo
1814  91A2 1C           	inc e
1815  91A3 1C           	inc e
1816  91A4 ED 53 6F 8C  	ld (India_SP),de
1817  91A8 CD FF 90     	call Extrae_address
1818  91AB CD E5 95     	call Pinta_Sprites
1819  91AE 18 E7        	jr Pintando_entidades
1820  91B0
1821  91B0              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1822  91B0
1823  91B0              Ejecuta_escudo
1824  91B0
1825  91B0 3A 9D 8C     	ld a,(Shield)
1826  91B3 A7           	and a
1827  91B4 20 2F        	jr nz,Aplica_Shield
1828  91B6
1829  91B6              Borrando_Amadeus
1830  91B6
1831  91B6 21 73 8C     	ld hl,Ctrl_3
1832  91B9 CB 6E        	bit 5,(hl)
1833  91BB 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1834  91BD
1835  91BD 2A 55 8C     	ld hl,(Album_de_borrado_Amadeus)
1836  91C0 CD FF 90     	call Extrae_address
1837  91C3 24           	inc h
1838  91C4 25           	dec h
1839  91C5 28 03        	jr z,Pintando_Amadeus
1840  91C7 CD E5 95     	call Pinta_Sprites
1841  91CA
1842  91CA              Pintando_Amadeus
1843  91CA
1844  91CA 2A 53 8C     	ld hl,(Album_de_pintado_Amadeus)
1845  91CD CD FF 90     	call Extrae_address
1846  91D0 24           	inc h
1847  91D1 25           	dec h
1848  91D2 28 03        	jr z,1F
1849  91D4 CD E5 95     	call Pinta_Sprites
1850  91D7
1851  91D7              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1852  91D7
1853  91D7 21 73 8C     1 ld hl,Ctrl_3
1854  91DA CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1855  91DC CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1856  91DE CB AE        	res 5,(hl)
1857  91E0
1858  91E0 3E 01        	ld a,1												; Borde azul.
1859  91E2 D3 FE        	out ($fe),a
1860  91E4
1861  91E4 C9           	ret
1862  91E5
1863  91E5              Aplica_Shield
1864  91E5
1865  91E5              ;	Bit 1 "1" (Shield_3) Sólo borra.
1866  91E5              ;		  "0"     ""     Borra/Pinta.
1867  91E5              ;	Bit 2    ""  RET.	 No borra, no pinta.
1868  91E5
1869  91E5 21 9F 8C     	ld hl,Shield_3
1870  91E8
1871  91E8 CB 5E        	bit 3,(hl)
1872  91EA 20 DE        	jr nz,Pintando_Amadeus
1873  91EC
1874  91EC CB 56        	bit 2,(hl)
1875  91EE 20 E7        	jr nz,1B
1876  91F0
1877  91F0 CB 4E        	bit 1,(hl)
1878  91F2 C4 F9 91     	call nz,Borra_Amadeus_shield
1879  91F5
1880  91F5 28 BF        	jr z,Borrando_Amadeus
1881  91F7 18 DE        	jr 1B
1882  91F9
1883  91F9              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1884  91F9
1885  91F9              Borra_Amadeus_shield
1886  91F9
1887  91F9 3A 73 8C     	ld a,(Ctrl_3)
1888  91FC CB 6F        	bit 5,a
1889  91FE 28 08        	jr z,1F
1890  9200
1891  9200 2A 55 8C     	ld hl,(Album_de_borrado_Amadeus)
1892  9203 CD FF 90     	call Extrae_address
1893  9206 18 06        	jr 2F
1894  9208
1895  9208 2A 53 8C     1 ld hl,(Album_de_pintado_Amadeus)
1896  920B CD FF 90     	call Extrae_address
1897  920E
1898  920E CD E5 95     2 call Pinta_Sprites
1899  9211
1900  9211 AF           	xor a
1901  9212 3C           	inc a											; Asegura NZ en la salida de la rutina.
1902  9213
1903  9213 C9           	ret
1904  9214
1905  9214              Pinta_Amadeus_shield
1906  9214
1907  9214 2A 53 8C     	ld hl,(Album_de_pintado_Amadeus)
1908  9217 CD FF 90     	call Extrae_address
1909  921A CD E5 95     	call Pinta_Sprites
1910  921D
1911  921D AF           	xor a
1912  921E 3C           	inc a											; Asegura NZ en la salida de la rutina.
1913  921F
1914  921F C9           	ret
1915  9220
1916  9220              Borra_Pinta_Amadeus_shield
1917  9220
1918  9220 CD F9 91     	call Borra_Amadeus_shield
1919  9223 CD 14 92     	call Pinta_Amadeus_shield
1920  9226 C9           	ret
1921  9227
1922  9227              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1923  9227              ;
1924  9227              ;	19/6/24
1925  9227              ;
1926  9227
1927  9227              Teclado
1928  9227
1929  9227              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1930  9227
1931  9227 3E F7        	ld a,$f7												; "5" para disparar.
1932  9229 DB FE        	in a,($fe)
1933  922B E6 10        	and $10
1934  922D
1935  922D CC 7F A2     	call z,Genera_disparo_Amadeus
1936  9230
1937  9230 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1938  9232 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1939  9234 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1940  9236 CC 52 9D         call z,Amadeus_a_izquierda
1941  9239
1942  9239 3E F7        	ld a,$f7
1943  923B DB FE        	in a,($fe)
1944  923D E6 01        	and $01
1945  923F C8           	ret z
1946  9240
1947  9240 3E F7        	ld a,$f7
1948  9242 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1949  9244 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1950  9246 CC 6A 9D     	call z,Amadeus_a_derecha
1951  9249
1952  9249 C9           	ret
1953  924A
1954  924A              ; ------------------------------------------------------------------------------------------------------------------------
1955  924A              ;
1956  924A              ;	06/07/24
1957  924A              ;
1958  924A
1959  924A              Genera_explosion
1960  924A
1961  924A 21 85 8C     	ld hl,Clock_explosion
1962  924D 35           	dec (hl)
1963  924E 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1964  9250
1965  9250              Borra_entidad_colisionada
1966  9250
1967  9250 CD 57 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1968  9253 CD 60 90     	call Cargamos_registros_con_explosion
1969  9256 CD EC 94     	call Genera_datos_de_impresion
1970  9259
1971  9259 AF           	xor a
1972  925A 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1973  925B
1974  925B C9           	ret
1975  925C
1976  925C              Siguiente_frame_explosion
1977  925C
1978  925C 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1979  925E
1980  925E              ; Avanza Frame de explosión.
1981  925E
1982  925E 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1983  9261 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1984  9264
1985  9264 79           	ld a,c
1986  9265 95           	sub l
1987  9266 20 0B        	jr nz,1F
1988  9268
1989  9268              ; Fín de la entidad !!!!!!!!!!!!!
1990  9268
1991  9268 21 45 8C     	ld hl,Numero_parcial_de_entidades
1992  926B 35           	dec (hl)
1993  926C 23           	inc hl
1994  926D 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1995  926E
1996  926E CD DB 93     	call Limpiamos_bandeja_DRAW
1997  9271 18 DD        	jr Borra_entidad_colisionada
1998  9273
1999  9273 23           1 inc hl
2000  9274 23           	inc hl
2001  9275 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
2002  9278 18 D6        	jr Borra_entidad_colisionada
2003  927A
2004  927A              ; ----- ----- ----- ----- -----
2005  927A
2006  927A              Genera_explosion_Amadeus
2007  927A
2008  927A 21 86 8C     	ld hl,Clock_explosion_Amadeus
2009  927D 35           	dec (hl)
2010  927E 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2011  9280
2012  9280              Borra_Amadeus_impactado
2013  9280
2014  9280 CD BC 8E     	call Change_Amadeus
2015  9283 CD 6D 90     	call Cargamos_registros_con_explosion_Amadeus
2016  9286 CD 8E 90     	call Genera_datos_de_impresion_Amadeus
2017  9289
2018  9289 21 73 8C     	ld hl,Ctrl_3
2019  928C CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2020  928E
2021  928E AF           	xor a
2022  928F 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2023  9290
2024  9290 C9           	ret
2025  9291
2026  9291              Siguiente_frame_explosion_Amadeus
2027  9291
2028  9291 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2029  9293
2030  9293              ; Avanza Frame de explosión.
2031  9293
2032  9293 2A C0 89     	ld hl,(Pamm_Amadeus)
2033  9296 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2034  9299
2035  9299 79           	ld a,c
2036  929A 95           	sub l
2037  929B 20 0B        	jr nz,1F
2038  929D
2039  929D              ; Fín de Amadeus !!!!!!!!!!!!!
2040  929D              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2041  929D
2042  929D AF           	xor a
2043  929E 32 BD 89     	ld (Impacto_Amadeus),a
2044  92A1 21 73 8C     	ld hl,Ctrl_3
2045  92A4 CB F6        	set 6,(hl)
2046  92A6
2047  92A6 18 D8        	jr Borra_Amadeus_impactado
2048  92A8
2049  92A8 23           1 inc hl
2050  92A9 23           	inc hl
2051  92AA 22 C0 89     	ld (Pamm_Amadeus),hl
2052  92AD 18 D1        	jr Borra_Amadeus_impactado
2053  92AF
2054  92AF              ; ---------------------------------------------------------------
2055  92AF
2056  92AF              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92AF              ; ******************************************************************************************************************************************************************************************
   2+ 92AF              ;
   3+ 92AF              ;   21/04/24
   4+ 92AF              ;
   5+ 92AF              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92AF              ;   (XOR) bit a bit.
   7+ 92AF              ;
   8+ 92AF              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92AF
  10+ 92AF              Derivando_RND
  11+ 92AF
  12+ 92AF 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92B2
  14+ 92B2 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92B4 C5               push bc
  16+ 92B5              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92B5 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92B8              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92B8
  20+ 92B8 A7           6 and a                                 ; Carry a "0".
  21+ 92B9 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92BB 30 02            jr nc,1F
  23+ 92BD
  24+ 92BD CB C1            set 0,c
  25+ 92BF
  26+ 92BF 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92C0 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92C2 5F               ld e,a
  29+ 92C3
  30+ 92C3 7A               ld a,d
  31+ 92C4 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92C6 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92C8
  34+ 92C8 CB 3F            srl a
  35+ 92CA
  36+ 92CA AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92CB
  38+ 92CB 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92CC 28 04            jr z,4F
  40+ 92CE
  41+ 92CE CB FF            set 7,a
  42+ 92D0 18 02            jr 5F
  43+ 92D2
  44+ 92D2 CB BF        4 res 7,a
  45+ 92D4
  46+ 92D4 CB 21        5 sla c
  47+ 92D6 10 E0            djnz 6B
  48+ 92D8
  49+ 92D8 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92D9
  51+ 92D9 77               ld (hl),a
  52+ 92DA 23               inc hl
  53+ 92DB C1               pop bc
  54+ 92DC 10 D4            djnz 3B
  55+ 92DE
  56+ 92DE C9               ret
  57+ 92DF
  58+ 92DF
  59+ 92DF
# file closed: RND_Derivando.asm
2057  92DF              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92DF              ;---------------------------------------------------------------------------------------------------------------
   2+ 92DF              ;
   3+ 92DF              ;   13/11/24
   4+ 92DF
   5+ 92DF              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 92DF
   7+ 92DF              Genera_movimientos_masticados_del_nivel
   8+ 92DF
   9+ 92DF              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 92DF
  11+ 92DF              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 92DF              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 92DF              ;	(Datos_de_nivel) apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 92DF
  15+ 92DF 2D           	dec l
  16+ 92E0 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 92E1 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 92E2 4E           	ld c,(hl)
  19+ 92E3
  20+ 92E3 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 92E4 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 92E5
  23+ 92E5              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 92E5
  25+ 92E5 21 61 89         ld hl,Indice_de_cajas_master
  26+ 92E8 79           	ld a,c														; (Tipo) de la entidad en A.
  27+ 92E9
  28+ 92E9 CD 3A 94         call Calcula_salto_en_BC
  29+ 92EC A7               and a
  30+ 92ED ED 4A            adc hl,bc
  31+ 92EF
  32+ 92EF 22 42 8C       	ld (Puntero_indice_master),hl
  33+ 92F2 CD FF 90     	call Extrae_address
  34+ 92F5
  35+ 92F5              ;	Caja Master inicializada ???
  36+ 92F5
  37+ 92F5 7E           	ld a,(hl)
  38+ 92F6 A7           	and a
  39+ 92F7 20 1D        	jr nz,Movimientos_masticados_construidos
  40+ 92F9
  41+ 92F9              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  42+ 92F9
  43+ 92F9 C1           	pop bc
  44+ 92FA 79           	ld a,c														; (Tipo) de la entidad en A.
  45+ 92FB C5           	push bc
  46+ 92FC
  47+ 92FC CD C6 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  48+ 92FF CD 4F 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  49+ 9302
  50+ 9302 3A FC 8B     	ld a,(Tipo)
  51+ 9305 CD 30 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  52+ 9308
  53+ 9308              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  54+ 9308
  55+ 9308              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  56+ 9308              ;	ld a,(hl)
  57+ 9308              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  58+ 9308
  59+ 9308              ;	ld hl,Posicion_inicio
  60+ 9308              ;	ld (hl),a
  61+ 9308
  62+ 9308              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  63+ 9308              ;	Generamos "Movimientos masticados" de la entidad.
  64+ 9308
  65+ 9308 CD F3 8F     	call Construye_movimientos_masticados_entidad
  66+ 930B
  67+ 930B              ; 	Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
  68+ 930B              ; 	(Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
  69+ 930B              ; 	(Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
  70+ 930B              ; 	Contador_general_de_mov_masticados de este tipo de entidad actualizado.
  71+ 930B              ; 	Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
  72+ 930B
  73+ 930B 2A 42 8C     	ld hl,(Puntero_indice_master)
  74+ 930E CD FF 90     	call Extrae_address
  75+ 9311
  76+ 9311 5D           	ld e,l
  77+ 9312 54           	ld d,h
  78+ 9313
  79+ 9313 CD 7C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  80+ 9316
  81+ 9316              Movimientos_masticados_construidos
  82+ 9316
  83+ 9316 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  84+ 9317
  85+ 9317 E1           	pop hl														; Pop (Datos_de_nivel).
  86+ 9318 2C           	inc l														; Datos_de_nivel +1 en HL.
  87+ 9319
  88+ 9319 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  89+ 931A 10 C7        	djnz 1B														; dec (Numero_de_entidades).
  90+ 931C
  91+ 931C C9           	ret
  92+ 931D
  93+ 931D              ;---------------------------------------------------------------------------------------------------------------
  94+ 931D              ;
  95+ 931D              ;   9/11/24
  96+ 931D              ;
  97+ 931D              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  98+ 931D              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  99+ 931D              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
 100+ 931D              ;	_ de la 1ª entidad del Nivel.
 101+ 931D              ;
 102+ 931D              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
 103+ 931D
 104+ 931D              ;	MODIFICA: HL,DE y A.
 105+ 931D              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
 106+ 931D
 107+ 931D              Inicializa_1er_Nivel
 108+ 931D
 109+ 931D              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 110+ 931D
 111+ 931D 21 E0 8B     	ld hl,Indice_de_niveles
 112+ 9320 CD FF 90     	call Extrae_address
 113+ 9323 ED 53 93 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 114+ 9327
 115+ 9327 7E           	ld a,(hl)
 116+ 9328 32 44 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 117+ 932B
 118+ 932B 2C           	inc l
 119+ 932C 22 95 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 120+ 932F
 121+ 932F C9           	ret
 122+ 9330
 123+ 9330              ; ----------------------
 124+ 9330
 125+ 9330              ; Fija_velocidades ld de,Perfiles_de_velocidad
 126+ 9330              ; 	ld bc,4
 127+ 9330              ; 	ldir
 128+ 9330              ; 	ret
 129+ 9330
 130+ 9330 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 131+ 9331 CD 3A 94         call Calcula_salto_en_BC
 132+ 9334 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 133+ 9337 A7               and a
 134+ 9338 ED 4A            adc hl,bc
 135+ 933A CD FF 90         call Extrae_address
 136+ 933D 22 2D 8C         ld (Puntero_indice_mov),hl
 137+ 9340 C9               ret
 138+ 9341
 139+ 9341              ;Situa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
 140+ 9341              ;	call Calcula_salto_en_BC
 141+ 9341              ;	ld hl,Indice_de_almacenes_de_mov_masticados
 142+ 9341              ;    and a
 143+ 9341              ;    adc hl,bc
 144+ 9341              ;    call Extrae_address
 145+ 9341              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
 146+ 9341              ;	ret
 147+ 9341
 148+ 9341              ;---------------------------------------------------------------------------------------------------------------
 149+ 9341              ;
 150+ 9341              ;   5/1/24
 151+ 9341              ;
 152+ 9341              ;	Destruye A,BC,HL,DE
 153+ 9341
 154+ 9341              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
 155+ 9341              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
 156+ 9341
 157+ 9341              Inicia_Entidades
 158+ 9341
 159+ 9341              ; Preparamos los punteros de las cajas de entidades:
 160+ 9341
 161+ 9341 CD E9 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 162+ 9344              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 163+ 9344 CD 85 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 164+ 9347
 165+ 9347 2A 95 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 166+ 934A
 167+ 934A 22 95 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
 168+ 934D
 169+ 934D              ;	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
 170+ 934D
 171+ 934D 2A 95 8C     	ld hl,(Datos_de_nivel)
 172+ 9350
 173+ 9350              ; En este punto:
 174+ 9350              ;
 175+ 9350              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
 176+ 9350              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 177+ 9350
 178+ 9350 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
 179+ 9351
 180+ 9351 7E           	ld a,(hl)
 181+ 9352 CD C6 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 182+ 9355 CD 4F 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 183+ 9358
 184+ 9358              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 185+ 9358
 186+ 9358
 187+ 9358              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 188+ 9358
 189+ 9358              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 190+ 9358              ;	_ de este tipo de entidad.
 191+ 9358
 192+ 9358 CD E9 9E     	call Situa_en_contador_general_de_mov_masticados
 193+ 935B CD F6 9E     	call Transfiere_datos_de_contadores
 194+ 935E
 195+ 935E 18 03        	jr 4F
 196+ 9360
 197+ 9360 CD F3 8F     3 call Construye_movimientos_masticados_entidad
 198+ 9363
 199+ 9363              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 200+ 9363              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 201+ 9363              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 202+ 9363              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 203+ 9363              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 204+ 9363
 205+ 9363              ;	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 206+ 9363              ;																; _ Mov_masticados ya generados.
 207+ 9363
 208+ 9363 CD 47 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 209+ 9366
 210+ 9366 DD E5        	push ix
 211+ 9368 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 212+ 9369
 213+ 9369 D5           	push de
 214+ 936A CD C0 94     	call Genera_coordenadas
 215+ 936D
 216+ 936D ED 5B 6D 8C  	ld de,(Scanlines_album_SP)
 217+ 9371 CD 57 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 218+ 9374 D1           	pop de
 219+ 9375
 220+ 9375 CD EC 94     	call Genera_datos_de_impresion
 221+ 9378              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 222+ 9378              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 223+ 9378              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 224+ 9378              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 225+ 9378
 226+ 9378 CD FE 93     	call Decrementa_Contador_de_mov_masticados
 227+ 937B
 228+ 937B              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 229+ 937B
 230+ 937B ED 5B 3C 8C  	ld de,(Puntero_store_caja)
 231+ 937F CD 7C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 232+ 9382
 233+ 9382 CD DB 93     	call Limpiamos_bandeja_DRAW
 234+ 9385 CD 4D 91     	call Incrementa_punteros_de_cajas
 235+ 9388
 236+ 9388              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 237+ 9388              ; _ entidad del Nivel.
 238+ 9388
 239+ 9388 3A 74 8C     	ld a,(Ctrl_4)
 240+ 938B E6 F0        	and $f0
 241+ 938D 32 74 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 242+ 9390
 243+ 9390              ; Siguiente entidad del Nivel.
 244+ 9390
 245+ 9390 2A 95 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 246+ 9393 23           	inc hl 														; _ entidad del Nivel.
 247+ 9394
 248+ 9394 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 249+ 9395
 250+ 9395 10 B3        	djnz 2B
 251+ 9397
 252+ 9397 C9           	ret
 253+ 9398
 254+ 9398              ; -------------------------------------------------------------------------------------------------------------------
 255+ 9398              ;
 256+ 9398              ;	27/5/24
 257+ 9398              ;
 258+ 9398              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 259+ 9398              ;
 260+ 9398
 261+ 9398              ; 	Cargamos la definición de Amadeus en DRAW.
 262+ 9398              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 263+ 9398
 264+ 9398 21 37 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 265+ 939B CD 4F 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 266+ 939E
 267+ 939E
 268+ 939E              Construye_movimientos_masticados_Amadeus
 269+ 939E
 270+ 939E 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 271+ 93A1 CD 3A 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 272+ 93A4              ;															; _ el (Contador_de_mov_masticados).
 273+ 93A4 CD 05 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 274+ 93A7              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 275+ 93A7
 276+ 93A7              ; Generamos movimientos masticados de Amadeus.
 277+ 93A7
 278+ 93A7 06 79        	ld b,121												; $0079, 121d.
 279+ 93A9
 280+ 93A9 C5           1 push bc
 281+ 93AA CD 08 97     	call Draw
 282+ 93AD CD 1F 90     	call Guarda_movimiento_masticado
 283+ 93B0
 284+ 93B0 CD 7C 9A     	call Mov_right
 285+ 93B3 CD 7C 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 286+ 93B6
 287+ 93B6 C1           	pop bc
 288+ 93B7 10 F0        	djnz 1B
 289+ 93B9
 290+ 93B9              ; Todos los movimientos masticados de Amadeus se han creado.
 291+ 93B9
 292+ 93B9              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 293+ 93B9              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 294+ 93B9
 295+ 93B9 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 296+ 93BC 01 08 00     	ld bc,8
 297+ 93BF A7           	and a
 298+ 93C0 ED 42        	sbc hl,bc
 299+ 93C2 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 300+ 93C5
 301+ 93C5 C9           	ret
 302+ 93C6
 303+ 93C6              ; ---------------------------------------------------------------------
 304+ 93C6              ;
 305+ 93C6              ;	10/02/24
 306+ 93C6              ;
 307+ 93C6              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 308+ 93C6              ;
 309+ 93C6              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 310+ 93C6
 311+ 93C6              Definicion_segun_tipo
 312+ 93C6
 313+ 93C6 CD 3A 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 314+ 93C9 21 19 8A     	ld hl,Indice_de_definiciones_de_entidades
 315+ 93CC CD 45 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 316+ 93CF C9           	ret
 317+ 93D0
 318+ 93D0              ; ---------------------------------------------------------------------
 319+ 93D0              ;
 320+ 93D0              ;	6/7/24
 321+ 93D0
 322+ 93D0
 323+ 93D0              Store_Restore_cajas
 324+ 93D0
 325+ 93D0 ED 5B 3C 8C  	ld de,(Puntero_store_caja)
 326+ 93D4 CD 7C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 327+ 93D7 CD 4D 91     	call Incrementa_punteros_de_cajas
 328+ 93DA C9           	ret
 329+ 93DB
 330+ 93DB              ; ---------------------------------------------------------------------
 331+ 93DB              ;
 332+ 93DB              ;	23/6/24
 333+ 93DB              ;
 334+ 93DB              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 335+ 93DB              ;
 336+ 93DB              ;	MODIFY: HL
 337+ 93DB
 338+ 93DB              Limpiamos_bandeja_DRAW
 339+ 93DB
 340+ 93DB ED 73 4B 8C  	ld (Stack),sp
 341+ 93DF 31 21 8C     	ld sp,Vel_left
 342+ 93E2
 343+ 93E2 AF           	xor a
 344+ 93E3 67           	ld h,a
 345+ 93E4 6F           	ld l,a
 346+ 93E5
 347+ 93E5 E5           	push hl
 348+ 93E6 E5           	push hl
 349+ 93E7 E5           	push hl
 350+ 93E8 E5           	push hl
 351+ 93E9 E5           	push hl
 352+ 93EA E5           	push hl
 353+ 93EB E5           	push hl
 354+ 93EC E5           	push hl
 355+ 93ED E5           	push hl
 356+ 93EE E5           	push hl
 357+ 93EF E5           	push hl
 358+ 93F0 E5           	push hl
 359+ 93F1 E5           	push hl
 360+ 93F2 E5           	push hl
 361+ 93F3 E5           	push hl
 362+ 93F4 E5           	push hl
 363+ 93F5 E5           	push hl
 364+ 93F6 E5           	push hl
 365+ 93F7
 366+ 93F7 33           	inc sp
 367+ 93F8
 368+ 93F8 E5           	push hl
 369+ 93F9 ED 7B 4B 8C  	ld sp,(Stack)
 370+ 93FD
 371+ 93FD C9           	ret
 372+ 93FE
 373+ 93FE              ; ---------------------------------------------------------------------
 374+ 93FE              ;
 375+ 93FE              ;	24/03/24
 376+ 93FE
 377+ 93FE 2A 05 8C     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 378+ 9401 2B           	dec hl
 379+ 9402 22 05 8C     	ld (Contador_de_mov_masticados),hl
 380+ 9405 C9           	ret
 381+ 9406
 382+ 9406              ; ---------------------------------------------------------------------
 383+ 9406              ;
 384+ 9406              ;	7/11/24
 385+ 9406
 386+ 9406              Reinicia_entidad_maliciosa
 387+ 9406
 388+ 9406              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 389+ 9406
 390+ 9406 CD E9 9E     	call Situa_en_contador_general_de_mov_masticados
 391+ 9409 CD F6 9E     	call Transfiere_datos_de_contadores
 392+ 940C
 393+ 940C              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 394+ 940C
 395+ 940C 3A FC 8B     	ld a,(Tipo)
 396+ 940F CD C6 93     	call Definicion_segun_tipo
 397+ 9412
 398+ 9412 E5           	push hl
 399+ 9413 DD E1        	pop ix
 400+ 9415
 401+ 9415 DD 6E 0B     	ld l,(ix+11)
 402+ 9418 DD 66 0C     	ld h,(ix+12)
 403+ 941B
 404+ 941B 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 405+ 941E
 406+ 941E CD 47 90     	call Cargamos_registros_con_mov_masticado
 407+ 9421
 408+ 9421              ; Incrementa (Contador_de_vueltas)x2.
 409+ 9421              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 410+ 9421
 411+ 9421              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 412+ 9421              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 413+ 9421              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 414+ 9421              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 415+ 9421              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 416+ 9421
 417+ 9421 21 FF 8B     	ld hl,Contador_de_vueltas
 418+ 9424 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 419+ 9426
 420+ 9426 7E           	ld a,(hl)
 421+ 9427 CB 2F        	sra a
 422+ 9429 CB 2F        	sra a
 423+ 942B
 424+ 942B 32 07 8C     	ld (Velocidad),a
 425+ 942E
 426+ 942E 3E 40        	ld a,$40
 427+ 9430 BE           	cp (hl)
 428+ 9431 C0           	ret nz
 429+ 9432
 430+ 9432              ; Límitador.
 431+ 9432
 432+ 9432              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 433+ 9432
 434+ 9432 CB 2E        	sra (hl)
 435+ 9434 21 07 8C     	ld hl,Velocidad
 436+ 9437 CB 2E        	sra (hl)
 437+ 9439
 438+ 9439 C9           	ret
 439+ 943A
 440+ 943A              ;	------------------------------------------------------------------------------------
 441+ 943A              ;
 442+ 943A              ;	09/11/24
 443+ 943A              ;
 444+ 943A              ;	INPUTS:	A contiene el (Tipo) de entidad.
 445+ 943A              ;
 446+ 943A              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 447+ 943A              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 448+ 943A
 449+ 943A A7           Calcula_salto_en_BC and a
 450+ 943B 28 04        	jr z,1F
 451+ 943D CB 27        	sla a
 452+ 943F D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 453+ 9441 4F           1 ld c,a
 454+ 9442 06 00        	ld b,0
 455+ 9444 C9           	ret
 456+ 9445
 457+ 9445              ; ------------------------------------------------------------------
 458+ 9445              ;
 459+ 9445              ;	19/1/24
 460+ 9445              ;
 461+ 9445              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 462+ 9445              ;	Actualiza (Datos_de_entidad) con esa dirección.
 463+ 9445
 464+ 9445 A7           Situa_en_datos_de_definicion and a
 465+ 9446 ED 4A        	adc hl,bc
 466+ 9448 CD FF 90     	call Extrae_address
 467+ 944B 22 49 8C         ld (Datos_de_entidad),hl
 468+ 944E C9           	ret
 469+ 944F
 470+ 944F              ; ------------------------------------------------------------------
 471+ 944F
 472+ 944F              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 473+ 944F              ; 	inc de
 474+ 944F              ; 	inc de
 475+ 944F              ; 	ex de,hl
 476+ 944F              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 477+ 944F              ; 	ret
 478+ 944F
 479+ 944F              ; ----------------------------------------------------------------------------------------------------------
 480+ 944F              ;
 481+ 944F              ;	24/6/24
 482+ 944F              ;
 483+ 944F              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 484+ 944F              ;	_ de entidad.
 485+ 944F              ;
 486+ 944F              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 487+ 944F              ;
 488+ 944F              ;
 489+ 944F              ;	MODIFICA: HL,DE y BC
 490+ 944F
 491+ 944F
 492+ 944F              Definicion_de_entidad_a_bandeja_DRAW
 493+ 944F
 494+ 944F 11 FC 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 495+ 9452 7E           	ld a,(hl) 									; Volcamos Tipo.
 496+ 9453 12           	ld (de),a
 497+ 9454 23           	inc hl
 498+ 9455              ;
 499+ 9455 11 0A 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 500+ 9458 01 02 00     	ld bc,2
 501+ 945B ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 502+ 945D              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 503+ 945D 11 FF 8B     	ld de,Contador_de_vueltas
 504+ 9460 7E           	ld a,(hl)
 505+ 9461 12           	ld (de),a
 506+ 9462 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 507+ 9463
 508+ 9463 11 11 8C     	ld de,Indice_Sprite_der
 509+ 9466 01 04 00     	ld bc,4
 510+ 9469 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 511+ 946B
 512+ 946B 11 19 8C     	ld de,Posicion_inicio
 513+ 946E 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 514+ 9471 ED B0        	ldir 									; Vuelco (Frames_explosion).
 515+ 9473
 516+ 9473 11 03 8C     	ld de,Puntero_de_almacen_de_mov_masticados
 517+ 9476 01 02 00     	ld bc,2
 518+ 9479 ED B0        	ldir
 519+ 947B
 520+ 947B C9           	ret
 521+ 947C
 522+ 947C              ; ----------------------------------------------------------------------------------------------------------
 523+ 947C              ;
 524+ 947C              ;	1/8/24
 525+ 947C              ;
 526+ 947C
 527+ 947C              Parametros_de_bandeja_DRAW_a_caja
 528+ 947C
 529+ 947C 21 FC 8B     	ld hl,Bandeja_DRAW
 530+ 947F 01 0C 00     	ld bc,12
 531+ 9482 ED B0        	ldir
 532+ 9484 C9           	ret
 533+ 9485
 534+ 9485              ;---------------------------------------------------------------------------------------------------------------
 535+ 9485              ;
 536+ 9485              ;	5/1/24
 537+ 9485              ;
 538+ 9485              ;	INICIALIZA (Numero_parcial_de_entidades).
 539+ 9485              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 540+ 9485              ;
 541+ 9485              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 542+ 9485              ;
 543+ 9485              ;	(Numero_parcial_de_entidades)="7".
 544+ 9485              ;
 545+ 9485              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 546+ 9485              ;
 547+ 9485              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 548+ 9485              ;
 549+ 9485              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 550+ 9485              ;	MODIFICA: A y B.
 551+ 9485              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 552+ 9485
 553+ 9485              Inicializa_Numero_parcial_de_entidades
 554+ 9485
 555+ 9485              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 556+ 9485
 557+ 9485 3A 44 8C     	ld a,(Numero_de_entidades)
 558+ 9488 A7           	and a
 559+ 9489
 560+ 9489              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 561+ 9489              ;	jr z,$
 562+ 9489              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 563+ 9489
 564+ 9489 20 03        	jr nz,3F
 565+ 948B
 566+ 948B              ; ---------- ---------- ----------
 567+ 948B
 568+ 948B              ;! RESET para pruebas. Omitir esta línea en modo normal.
 569+ 948B              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 570+ 948B
 571+ 948B CD 1D 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er NIVEL.
 572+ 948E
 573+ 948E              ; ---------- ---------- ----------
 574+ 948E
 575+ 948E 3A 44 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 576+ 9491 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 577+ 9493 38 08        	jr c,1F
 578+ 9495
 579+ 9495              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 580+ 9495              ; Actualizamos variables.
 581+ 9495
 582+ 9495 3E 07        	ld a,7
 583+ 9497 32 45 8C     	ld (Numero_parcial_de_entidades),a
 584+ 949A 47           	ld b,a
 585+ 949B 18 04        	jr 2F
 586+ 949D
 587+ 949D              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 588+ 949D              ; (Numero_de_entidades)="0".
 589+ 949D
 590+ 949D 32 45 8C     1 ld (Numero_parcial_de_entidades),a
 591+ 94A0 47           	ld b,a
 592+ 94A1 C9           2 ret
 593+ 94A2
# file closed: Rutinas_de_inicio_y_niveles.asm
2058  94A2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94A2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94A2              ;
   3+ 94A2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94A2              ;
   5+ 94A2              ; *****************************************************************************************************************************************************************************************
   6+ 94A2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94A2
   8+ 94A2 7C           calcula_tercio ld a,h
   9+ 94A3 E6 18        	and $18
  10+ 94A5 CB 2F        	sra a
  11+ 94A7 CB 2F        	sra a
  12+ 94A9 CB 2F        	sra a
  13+ 94AB C9           	ret
  14+ 94AC
# file closed: calcula_tercio.asm
2059  94AC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94AC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94AC              ;
   3+ 94AC              ;
   4+ 94AC              ;	CLS.
   5+ 94AC              ;
   6+ 94AC              ;	Limpia la pantalla y define sus atributos.
   7+ 94AC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94AC              ;
   9+ 94AC              ;	COLORES: 0 ..... NEGRO
  10+ 94AC              ;    		 1 ..... AZUL
  11+ 94AC              ; 			 2 ..... ROJO
  12+ 94AC              ;			 3 ..... MAGENTA
  13+ 94AC              ; 			 4 ..... VERDE
  14+ 94AC              ; 			 5 ..... CIAN
  15+ 94AC              ;			 6 ..... AMARILLO
  16+ 94AC              ; 			 7 ..... BLANCO
  17+ 94AC              ;
  18+ 94AC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94AC              ;
  20+ 94AC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94AC
  22+ 94AC
  23+ 94AC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94AF 11 01 40     	LD DE,$4001
  25+ 94B2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94B5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94B7 ED B0        	LDIR
  28+ 94B9 01 FF 02     	LD BC,767
  29+ 94BC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94BD ED B0        	LDIR
  31+ 94BF C9           	ret
  32+ 94C0
# file closed: Cls.asm
2060  94C0              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94C0              ; ------------------------------------------------------------------------
   2+ 94C0              ;
   3+ 94C0              ;	30/1/24
   4+ 94C0              ;
   5+ 94C0              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94C0              ;	Fila superior "0", Columna izquierda "0".
   7+ 94C0              ;
   8+ 94C0              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94C0              ;
  10+ 94C0              ;	Modifica: A,BC y DE.
  11+ 94C0
  12+ 94C0 7D           Genera_coordenadas ld a,l
  13+ 94C1 E6 1F        	and $1f
  14+ 94C3 32 FD 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94C6
  16+ 94C6 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94C7 FE 40        	cp $40
  18+ 94C9 38 1C        	jr c,4F
  19+ 94CB
  20+ 94CB CD A2 94     	call calcula_tercio
  21+ 94CE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94CF
  23+ 94CF 1E 00        	ld e,0
  24+ 94D1 7D           	ld a,l
  25+ 94D2 E6 E0        	and $e0
  26+ 94D4 28 01        	jr z,1F
  27+ 94D6 04           	inc b
  28+ 94D7
  29+ 94D7 04           1 inc b
  30+ 94D8 05           	dec b
  31+ 94D9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94DB              ;														; _ , salimos.
  33+ 94DB 1C           3 inc e
  34+ 94DC D6 20        	sub 32
  35+ 94DE 20 FB        	jr nz,3B
  36+ 94E0 10 F5        	djnz 1B
  37+ 94E2
  38+ 94E2 7B           2 ld a,e
  39+ 94E3 32 FE 8B     	ld (Coordenada_y),a
  40+ 94E6 C9           	ret
  41+ 94E7
  42+ 94E7 AF           4 xor a
  43+ 94E8 32 FE 8B     	ld (Coordenada_y),a
  44+ 94EB C9           	ret
  45+ 94EC
# file closed: Genera_coordenadas.asm
2061  94EC              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94EC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94EC              ;
   3+ 94EC              ;	20/09/24
   4+ 94EC              ;
   5+ 94EC              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94EC              ;   DE contiene Puntero_objeto.
   7+ 94EC              ;   IX contiene el Puntero de impresión.
   8+ 94EC
   9+ 94EC              Genera_datos_de_impresion
  10+ 94EC
  11+ 94EC ED 73 4B 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94F0
  13+ 94F0 31 03 8C         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94F3 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94F5
  16+ 94F5 2A 6D 8C         ld hl,(Scanlines_album_SP)
  17+ 94F8
  18+ 94F8 3E 05            ld a,5
  19+ 94FA 85               add l
  20+ 94FB 6F               ld l,a
  21+ 94FC
  22+ 94FC F9               ld sp,hl
  23+ 94FD 22 6D 8C         ld (Scanlines_album_SP),hl
  24+ 9500
  25+ 9500 21 00 00         ld hl,0
  26+ 9503
  27+ 9503 DD E5            push ix
  28+ 9505 3B               dec sp
  29+ 9506 ED 7A            adc hl,sp
  30+ 9508 D5               push de
  31+ 9509
  32+ 9509              ; Recuperamos SP.
  33+ 9509
  34+ 9509 ED 7B 4B 8C      ld sp,(Stack)
  35+ 950D
  36+ 950D E5               push hl
  37+ 950E F1               pop af
  38+ 950F 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9510
  40+ 9510              ; Tenemos el encabezado listo.
  41+ 9510              ; Preparamos registros para generar los scanlines.
  42+ 9510
  43+ 9510 DD E5            push ix
  44+ 9512 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9513
  46+ 9513 ED 5B 6D 8C      ld de,(Scanlines_album_SP)
  47+ 9517
  48+ 9517              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9517              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9517
  51+ 9517 7C               ld a,h
  52+ 9518 FE 50            cp $50
  53+ 951A 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 951C
  55+ 951C 20 05            jr nz,2F
  56+ 951E
  57+ 951E 7D               ld a,l
  58+ 951F FE E0            cp $e0
  59+ 9521 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9523
  61+ 9523 7D           2 ld a,l
  62+ 9524 FE C0            cp $c0
  63+ 9526 D2 BC 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9529
  65+ 9529              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9529
  67+ 9529 CD BA 99         call NextScan
  68+ 952C EB               ex de,hl
  69+ 952D
  70+ 952D 73               ld (hl),e
  71+ 952E 23               inc hl
  72+ 952F 72               ld (hl),d
  73+ 9530 23               inc hl
  74+ 9531
  75+ 9531 EB               ex de,hl
  76+ 9532
  77+ 9532 CD BA 99         call NextScan
  78+ 9535 EB               ex de,hl
  79+ 9536
  80+ 9536 73               ld (hl),e
  81+ 9537 23               inc hl
  82+ 9538 72               ld (hl),d
  83+ 9539 23               inc hl
  84+ 953A
  85+ 953A EB               ex de,hl
  86+ 953B
  87+ 953B CD BA 99         call NextScan
  88+ 953E EB               ex de,hl
  89+ 953F
  90+ 953F 73               ld (hl),e
  91+ 9540 23               inc hl
  92+ 9541 72               ld (hl),d
  93+ 9542 23               inc hl
  94+ 9543
  95+ 9543 EB               ex de,hl
  96+ 9544
  97+ 9544 CD BA 99         call NextScan
  98+ 9547 EB               ex de,hl
  99+ 9548
 100+ 9548 73               ld (hl),e
 101+ 9549 23               inc hl
 102+ 954A 72               ld (hl),d
 103+ 954B 23               inc hl
 104+ 954C
 105+ 954C EB               ex de,hl
 106+ 954D
 107+ 954D CD BA 99         call NextScan
 108+ 9550 EB               ex de,hl
 109+ 9551
 110+ 9551 73               ld (hl),e
 111+ 9552 23               inc hl
 112+ 9553 72               ld (hl),d
 113+ 9554 23               inc hl
 114+ 9555
 115+ 9555 EB               ex de,hl
 116+ 9556
 117+ 9556 CD BA 99         call NextScan
 118+ 9559 EB               ex de,hl
 119+ 955A
 120+ 955A 73               ld (hl),e
 121+ 955B 23               inc hl
 122+ 955C 72               ld (hl),d
 123+ 955D 23               inc hl
 124+ 955E
 125+ 955E EB               ex de,hl
 126+ 955F
 127+ 955F CD BA 99         call NextScan
 128+ 9562 EB               ex de,hl
 129+ 9563
 130+ 9563 73               ld (hl),e
 131+ 9564 23               inc hl
 132+ 9565 72               ld (hl),d
 133+ 9566 23               inc hl
 134+ 9567
 135+ 9567 EB               ex de,hl
 136+ 9568
 137+ 9568 CD BA 99         call NextScan
 138+ 956B EB               ex de,hl
 139+ 956C
 140+ 956C 73               ld (hl),e
 141+ 956D 23               inc hl
 142+ 956E 72               ld (hl),d
 143+ 956F 23               inc hl
 144+ 9570
 145+ 9570 EB               ex de,hl
 146+ 9571
 147+ 9571 CD BA 99         call NextScan
 148+ 9574 EB               ex de,hl
 149+ 9575
 150+ 9575 73               ld (hl),e
 151+ 9576 23               inc hl
 152+ 9577 72               ld (hl),d
 153+ 9578 23               inc hl
 154+ 9579
 155+ 9579 EB               ex de,hl
 156+ 957A
 157+ 957A CD BA 99         call NextScan
 158+ 957D EB               ex de,hl
 159+ 957E
 160+ 957E 73               ld (hl),e
 161+ 957F 23               inc hl
 162+ 9580 72               ld (hl),d
 163+ 9581 23               inc hl
 164+ 9582
 165+ 9582 EB               ex de,hl
 166+ 9583
 167+ 9583 CD BA 99         call NextScan
 168+ 9586 EB               ex de,hl
 169+ 9587
 170+ 9587 73               ld (hl),e
 171+ 9588 23               inc hl
 172+ 9589 72               ld (hl),d
 173+ 958A 23               inc hl
 174+ 958B
 175+ 958B EB               ex de,hl
 176+ 958C
 177+ 958C CD BA 99         call NextScan
 178+ 958F EB               ex de,hl
 179+ 9590
 180+ 9590 73               ld (hl),e
 181+ 9591 23               inc hl
 182+ 9592 72               ld (hl),d
 183+ 9593 23               inc hl
 184+ 9594
 185+ 9594 EB               ex de,hl
 186+ 9595
 187+ 9595 CD BA 99         call NextScan
 188+ 9598 EB               ex de,hl
 189+ 9599
 190+ 9599 73               ld (hl),e
 191+ 959A 23               inc hl
 192+ 959B 72               ld (hl),d
 193+ 959C 23               inc hl
 194+ 959D
 195+ 959D EB               ex de,hl
 196+ 959E
 197+ 959E CD BA 99         call NextScan
 198+ 95A1 EB               ex de,hl
 199+ 95A2
 200+ 95A2 73               ld (hl),e
 201+ 95A3 23               inc hl
 202+ 95A4 72               ld (hl),d
 203+ 95A5 23               inc hl
 204+ 95A6
 205+ 95A6 EB               ex de,hl
 206+ 95A7
 207+ 95A7 CD BA 99         call NextScan
 208+ 95AA EB               ex de,hl
 209+ 95AB
 210+ 95AB              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95AB              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95AB              ;   _ generar sus scanlines.
 213+ 95AB
 214+ 95AB              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95AB
 216+ 95AB 73               ld (hl),e
 217+ 95AC 23               inc hl
 218+ 95AD 72               ld (hl),d
 219+ 95AE 23               inc hl
 220+ 95AF
 221+ 95AF              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95AF
 223+ 95AF 22 6D 8C         ld (Scanlines_album_SP),hl
 224+ 95B2
 225+ 95B2 EB               ex de,hl
 226+ 95B3
 227+ 95B3              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95B3
 229+ 95B3              ;    call NextScan
 230+ 95B3              ;    call NextScan
 231+ 95B3
 232+ 95B3 22 78 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95B6
 234+ 95B6              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95B6
 236+ 95B6 08               ex af,af
 237+ 95B7
 238+ 95B7 F5               push af
 239+ 95B8 E1               pop hl
 240+ 95B9
 241+ 95B9 36 10            ld (hl),16
 242+ 95BB
 243+ 95BB C9               ret
 244+ 95BC
 245+ 95BC              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95BC
 247+ 95BC              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95BC
 249+ 95BC 3E 57            ld a,$57
 250+ 95BE 94               sub h
 251+ 95BF 47               ld b,a
 252+ 95C0
 253+ 95C0 3E DF            ld a,$df
 254+ 95C2 BD               cp l
 255+ 95C3 38 04            jr c,1F
 256+ 95C5
 257+ 95C5 3E 08            ld a,8
 258+ 95C7 80               add b
 259+ 95C8 47               ld b,a
 260+ 95C9
 261+ 95C9              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95C9              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95C9
 264+ 95C9 48           1 ld c,b
 265+ 95CA 0C               inc c
 266+ 95CB
 267+ 95CB 04               inc b
 268+ 95CC 05               dec b
 269+ 95CD 20 02            jr nz,3F
 270+ 95CF
 271+ 95CF 18 0B            jr 6F
 272+ 95D1
 273+ 95D1 CD BA 99     3 call NextScan
 274+ 95D4 EB               ex de,hl
 275+ 95D5
 276+ 95D5 73               ld (hl),e
 277+ 95D6 23               inc hl
 278+ 95D7 72               ld (hl),d
 279+ 95D8 23               inc hl
 280+ 95D9
 281+ 95D9 EB               ex de,hl
 282+ 95DA 10 F5            djnz 3B
 283+ 95DC
 284+ 95DC ED 53 6D 8C  6 ld (Scanlines_album_SP),de
 285+ 95E0
 286+ 95E0 08           5 ex af,af
 287+ 95E1 F5               push af
 288+ 95E2 E1               pop hl
 289+ 95E3
 290+ 95E3 71               ld (hl),c
 291+ 95E4
 292+ 95E4 C9               ret
 293+ 95E5
# file closed: Genera_datos_de_impresion.asm
2062  95E5              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95E5              ; -----------------------------------------------------------------------------
   2+ 95E5              ;
   3+ 95E5              ;   11/03/24
   4+ 95E5              ;
   5+ 95E5
   6+ 95E5              Pinta_Sprites
   7+ 95E5
   8+ 95E5              ;    ld hl,(Scanlines_album_SP)
   9+ 95E5              ;    call Extrae_address
  10+ 95E5
  11+ 95E5              ;    inc h
  12+ 95E5              ;    dec h
  13+ 95E5              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95E5
  15+ 95E5 ED 73 4B 8C      ld (Stack),sp
  16+ 95E9
  17+ 95E9 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95EA              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95EA 2C               inc l
  20+ 95EB 2C               inc l
  21+ 95EC
  22+ 95EC 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95ED
  24+ 95ED 2C               inc l
  25+ 95EE F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95EF
  27+ 95EF              ;   Seleccionamos rutina de impresión:
  28+ 95EF
  29+ 95EF 3E 10            ld a,16
  30+ 95F1 B8               cp b
  31+ 95F2 C2 EE 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95F5
  33+ 95F5              ;   Rutinas:
  34+ 95F5
  35+ 95F5              Pinta_rapido    ;   1520 t/states.
  36+ 95F5
  37+ 95F5 E1               pop hl
  38+ 95F6
  39+ 95F6 1A               ld a,(de)
  40+ 95F7 AE               xor (hl)
  41+ 95F8 77               ld (hl),a
  42+ 95F9 2C               inc l
  43+ 95FA 1C               inc e
  44+ 95FB 1A               ld a,(de)
  45+ 95FC AE               xor (hl)
  46+ 95FD 77               ld (hl),a
  47+ 95FE 2C               inc l
  48+ 95FF 1C               inc e
  49+ 9600 1A               ld a,(de)
  50+ 9601 AE               xor (hl)
  51+ 9602 77               ld (hl),a
  52+ 9603 13               inc de
  53+ 9604
  54+ 9604 E1               pop hl
  55+ 9605
  56+ 9605 1A               ld a,(de)
  57+ 9606 AE               xor (hl)
  58+ 9607 77               ld (hl),a
  59+ 9608 2C               inc l
  60+ 9609 1C               inc e
  61+ 960A 1A               ld a,(de)
  62+ 960B AE               xor (hl)
  63+ 960C 77               ld (hl),a
  64+ 960D 2C               inc l
  65+ 960E 1C               inc e
  66+ 960F 1A               ld a,(de)
  67+ 9610 AE               xor (hl)
  68+ 9611 77               ld (hl),a
  69+ 9612 13               inc de
  70+ 9613
  71+ 9613 E1               pop hl
  72+ 9614
  73+ 9614 1A               ld a,(de)
  74+ 9615 AE               xor (hl)
  75+ 9616 77               ld (hl),a
  76+ 9617 2C               inc l
  77+ 9618 1C               inc e
  78+ 9619 1A               ld a,(de)
  79+ 961A AE               xor (hl)
  80+ 961B 77               ld (hl),a
  81+ 961C 2C               inc l
  82+ 961D 1C               inc e
  83+ 961E 1A               ld a,(de)
  84+ 961F AE               xor (hl)
  85+ 9620 77               ld (hl),a
  86+ 9621 13               inc de
  87+ 9622
  88+ 9622 E1               pop hl
  89+ 9623
  90+ 9623 1A               ld a,(de)
  91+ 9624 AE               xor (hl)
  92+ 9625 77               ld (hl),a
  93+ 9626 2C               inc l
  94+ 9627 1C               inc e
  95+ 9628 1A               ld a,(de)
  96+ 9629 AE               xor (hl)
  97+ 962A 77               ld (hl),a
  98+ 962B 2C               inc l
  99+ 962C 1C               inc e
 100+ 962D 1A               ld a,(de)
 101+ 962E AE               xor (hl)
 102+ 962F 77               ld (hl),a
 103+ 9630 13               inc de
 104+ 9631
 105+ 9631 E1               pop hl
 106+ 9632
 107+ 9632 1A               ld a,(de)
 108+ 9633 AE               xor (hl)
 109+ 9634 77               ld (hl),a
 110+ 9635 2C               inc l
 111+ 9636 1C               inc e
 112+ 9637 1A               ld a,(de)
 113+ 9638 AE               xor (hl)
 114+ 9639 77               ld (hl),a
 115+ 963A 2C               inc l
 116+ 963B 1C               inc e
 117+ 963C 1A               ld a,(de)
 118+ 963D AE               xor (hl)
 119+ 963E 77               ld (hl),a
 120+ 963F 13               inc de
 121+ 9640
 122+ 9640 E1               pop hl
 123+ 9641
 124+ 9641 1A               ld a,(de)
 125+ 9642 AE               xor (hl)
 126+ 9643 77               ld (hl),a
 127+ 9644 2C               inc l
 128+ 9645 1C               inc e
 129+ 9646 1A               ld a,(de)
 130+ 9647 AE               xor (hl)
 131+ 9648 77               ld (hl),a
 132+ 9649 2C               inc l
 133+ 964A 1C               inc e
 134+ 964B 1A               ld a,(de)
 135+ 964C AE               xor (hl)
 136+ 964D 77               ld (hl),a
 137+ 964E 13               inc de
 138+ 964F
 139+ 964F E1               pop hl
 140+ 9650
 141+ 9650 1A               ld a,(de)
 142+ 9651 AE               xor (hl)
 143+ 9652 77               ld (hl),a
 144+ 9653 2C               inc l
 145+ 9654 1C               inc e
 146+ 9655 1A               ld a,(de)
 147+ 9656 AE               xor (hl)
 148+ 9657 77               ld (hl),a
 149+ 9658 2C               inc l
 150+ 9659 1C               inc e
 151+ 965A 1A               ld a,(de)
 152+ 965B AE               xor (hl)
 153+ 965C 77               ld (hl),a
 154+ 965D 13               inc de
 155+ 965E
 156+ 965E E1               pop hl
 157+ 965F
 158+ 965F 1A               ld a,(de)
 159+ 9660 AE               xor (hl)
 160+ 9661 77               ld (hl),a
 161+ 9662 2C               inc l
 162+ 9663 1C               inc e
 163+ 9664 1A               ld a,(de)
 164+ 9665 AE               xor (hl)
 165+ 9666 77               ld (hl),a
 166+ 9667 2C               inc l
 167+ 9668 1C               inc e
 168+ 9669 1A               ld a,(de)
 169+ 966A AE               xor (hl)
 170+ 966B 77               ld (hl),a
 171+ 966C 13               inc de
 172+ 966D
 173+ 966D E1               pop hl
 174+ 966E
 175+ 966E 1A               ld a,(de)
 176+ 966F AE               xor (hl)
 177+ 9670 77               ld (hl),a
 178+ 9671 2C               inc l
 179+ 9672 1C               inc e
 180+ 9673 1A               ld a,(de)
 181+ 9674 AE               xor (hl)
 182+ 9675 77               ld (hl),a
 183+ 9676 2C               inc l
 184+ 9677 1C               inc e
 185+ 9678 1A               ld a,(de)
 186+ 9679 AE               xor (hl)
 187+ 967A 77               ld (hl),a
 188+ 967B 13               inc de
 189+ 967C
 190+ 967C E1               pop hl
 191+ 967D
 192+ 967D 1A               ld a,(de)
 193+ 967E AE               xor (hl)
 194+ 967F 77               ld (hl),a
 195+ 9680 2C               inc l
 196+ 9681 1C               inc e
 197+ 9682 1A               ld a,(de)
 198+ 9683 AE               xor (hl)
 199+ 9684 77               ld (hl),a
 200+ 9685 2C               inc l
 201+ 9686 1C               inc e
 202+ 9687 1A               ld a,(de)
 203+ 9688 AE               xor (hl)
 204+ 9689 77               ld (hl),a
 205+ 968A 13               inc de
 206+ 968B
 207+ 968B E1               pop hl
 208+ 968C
 209+ 968C 1A               ld a,(de)
 210+ 968D AE               xor (hl)
 211+ 968E 77               ld (hl),a
 212+ 968F 2C               inc l
 213+ 9690 1C               inc e
 214+ 9691 1A               ld a,(de)
 215+ 9692 AE               xor (hl)
 216+ 9693 77               ld (hl),a
 217+ 9694 2C               inc l
 218+ 9695 1C               inc e
 219+ 9696 1A               ld a,(de)
 220+ 9697 AE               xor (hl)
 221+ 9698 77               ld (hl),a
 222+ 9699 13               inc de
 223+ 969A
 224+ 969A E1               pop hl
 225+ 969B
 226+ 969B 1A               ld a,(de)
 227+ 969C AE               xor (hl)
 228+ 969D 77               ld (hl),a
 229+ 969E 2C               inc l
 230+ 969F 1C               inc e
 231+ 96A0 1A               ld a,(de)
 232+ 96A1 AE               xor (hl)
 233+ 96A2 77               ld (hl),a
 234+ 96A3 2C               inc l
 235+ 96A4 1C               inc e
 236+ 96A5 1A               ld a,(de)
 237+ 96A6 AE               xor (hl)
 238+ 96A7 77               ld (hl),a
 239+ 96A8 13               inc de
 240+ 96A9
 241+ 96A9 E1               pop hl
 242+ 96AA
 243+ 96AA 1A               ld a,(de)
 244+ 96AB AE               xor (hl)
 245+ 96AC 77               ld (hl),a
 246+ 96AD 2C               inc l
 247+ 96AE 1C               inc e
 248+ 96AF 1A               ld a,(de)
 249+ 96B0 AE               xor (hl)
 250+ 96B1 77               ld (hl),a
 251+ 96B2 2C               inc l
 252+ 96B3 1C               inc e
 253+ 96B4 1A               ld a,(de)
 254+ 96B5 AE               xor (hl)
 255+ 96B6 77               ld (hl),a
 256+ 96B7 13               inc de
 257+ 96B8
 258+ 96B8 E1               pop hl
 259+ 96B9
 260+ 96B9 1A               ld a,(de)
 261+ 96BA AE               xor (hl)
 262+ 96BB 77               ld (hl),a
 263+ 96BC 2C               inc l
 264+ 96BD 1C               inc e
 265+ 96BE 1A               ld a,(de)
 266+ 96BF AE               xor (hl)
 267+ 96C0 77               ld (hl),a
 268+ 96C1 2C               inc l
 269+ 96C2 1C               inc e
 270+ 96C3 1A               ld a,(de)
 271+ 96C4 AE               xor (hl)
 272+ 96C5 77               ld (hl),a
 273+ 96C6 13               inc de
 274+ 96C7
 275+ 96C7 E1               pop hl
 276+ 96C8
 277+ 96C8 1A               ld a,(de)
 278+ 96C9 AE               xor (hl)
 279+ 96CA 77               ld (hl),a
 280+ 96CB 2C               inc l
 281+ 96CC 1C               inc e
 282+ 96CD 1A               ld a,(de)
 283+ 96CE AE               xor (hl)
 284+ 96CF 77               ld (hl),a
 285+ 96D0 2C               inc l
 286+ 96D1 1C               inc e
 287+ 96D2 1A               ld a,(de)
 288+ 96D3 AE               xor (hl)
 289+ 96D4 77               ld (hl),a
 290+ 96D5 13               inc de
 291+ 96D6
 292+ 96D6 E1               pop hl
 293+ 96D7
 294+ 96D7 1A               ld a,(de)
 295+ 96D8 AE               xor (hl)
 296+ 96D9 77               ld (hl),a
 297+ 96DA 2C               inc l
 298+ 96DB 1C               inc e
 299+ 96DC 1A               ld a,(de)
 300+ 96DD AE               xor (hl)
 301+ 96DE 77               ld (hl),a
 302+ 96DF 2C               inc l
 303+ 96E0 1C               inc e
 304+ 96E1 1A               ld a,(de)
 305+ 96E2 AE               xor (hl)
 306+ 96E3 77               ld (hl),a
 307+ 96E4 13               inc de
 308+ 96E5
 309+ 96E5 ED 73 6D 8C      ld (Scanlines_album_SP),sp
 310+ 96E9 ED 7B 4B 8C      ld sp,(Stack)
 311+ 96ED C9               ret
 312+ 96EE
 313+ 96EE              Pinta_lento
 314+ 96EE
 315+ 96EE E1           1 pop hl
 316+ 96EF
 317+ 96EF 1A               ld a,(de)
 318+ 96F0 AE               xor (hl)
 319+ 96F1 77               ld (hl),a
 320+ 96F2 2C               inc l
 321+ 96F3 1C               inc e
 322+ 96F4 1A               ld a,(de)
 323+ 96F5 AE               xor (hl)
 324+ 96F6 77               ld (hl),a
 325+ 96F7 2C               inc l
 326+ 96F8 1C               inc e
 327+ 96F9 1A               ld a,(de)
 328+ 96FA AE               xor (hl)
 329+ 96FB 77               ld (hl),a
 330+ 96FC 13               inc de
 331+ 96FD
 332+ 96FD 10 EF            djnz 1B
 333+ 96FF
 334+ 96FF ED 73 6D 8C      ld (Scanlines_album_SP),sp
 335+ 9703 ED 7B 4B 8C      ld sp,(Stack)
 336+ 9707 C9               ret
# file closed: Pinta_Sprites.asm
2063  9708              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9708              ; ******************************************************************************************************************************************************************************************
   2+ 9708              ;
   3+ 9708              ; 26/06/23
   4+ 9708              ;
   5+ 9708              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9708
   7+ 9708              Draw
   8+ 9708
   9+ 9708 CD AE 99     	call Prepara_draw
  10+ 970B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 970C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 970D 28 05        	jr z,2F
  13+ 970F
  14+ 970F 3A 1B 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9712 18 0C        	jr 1F
  16+ 9714
  17+ 9714 2A 19 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9717 22 0C 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 971A CD A6 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 971D              ;													; _la esquina superior izquierda de la pantalla.
  21+ 971D
  22+ 971D CD 4D 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9720
  24+ 9720 3A 09 8C     1 ld a,(Ctrl_0)
  25+ 9723 CB 6F        	bit 5,a
  26+ 9725 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9727
  28+ 9727 CD 3C 97     	call Comprueba_limite_horizontal
  29+ 972A CD CC 97     	call Comprueba_limite_vertical
  30+ 972D
  31+ 972D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 972D              ; -----------------------
  33+ 972D              ; -----------------------
  34+ 972D              ; -----------------------
  35+ 972D
  36+ 972D CD 22 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9730 CD 59 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9733
  39+ 9733 3A 09 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9736 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9738 32 09 8C     	ld (Ctrl_0),a
  42+ 973B
  43+ 973B C9           	ret
  44+ 973C
  45+ 973C              ; *******************************************************************************************************************************************************************************************
  46+ 973C              ;	21/01/23
  47+ 973C              ;
  48+ 973C              ; 	Comprueba_limite_horizontal.
  49+ 973C              ;
  50+ 973C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 973C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 973C              ;
  53+ 973C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 973C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 973C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 973C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 973C
  58+ 973C
  59+ 973C
  60+ 973C 3A 09 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 973F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9741 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9743 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9745 32 09 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9748 18 09            jr 6F
  66+ 974A CB 5F        1 bit 3,a
  67+ 974C 28 0A            jr z,2F
  68+ 974E E6 F7            and $f7
  69+ 9750 32 09 8C         ld (Ctrl_0),a
  70+ 9753 CD A6 98     6 call Inicializacion
  71+ 9756 18 5B            jr 5F
  72+ 9758 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9759
  74+ 9759              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9759              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9759
  77+ 9759 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 975A 2A 1D 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 975D CD A2 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9760 67           	ld h,a
  81+ 9761 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9762 CD A2 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9765 67           	ld h,a
  84+ 9766 A7           	and a
  85+ 9767 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9769 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 976A 3A 1B 8C     	ld a,(Cuad_objeto)
  88+ 976D FE 02        	cp 2
  89+ 976F 38 1E        	jr c,3F
  90+ 9771 28 1C        	jr z,3F
  91+ 9773 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9774 28 23            jr z,7F
  93+ 9776 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9778 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 977A E1           	pop hl
  96+ 977B
  97+ 977B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 977B              ; _para indicar con E="2" en caso necesario.
  99+ 977B
 100+ 977B E5               push hl
 101+ 977C C5               push bc
 102+ 977D CD A2 94     	call calcula_tercio
 103+ 9780 FE 01        	cp 1
 104+ 9782 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9784 CD B4 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9787 28 26            jr z,9F
 107+ 9789 38 24            jr c,9F
 108+ 978B 1E 00        11 ld e,0
 109+ 978D 18 22            jr 8F
 110+ 978F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9790 28 07        	jr z, 7F
 112+ 9792 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9794 1E 00         	ld e,0
 114+ 9796 E1           	pop hl
 115+ 9797 18 04        	jr 4F
 116+ 9799 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 979B 18 15            jr 10F
 118+ 979D
 119+ 979D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 979D              ; _para indicar con E="2" en caso necesario.
 121+ 979D
 122+ 979D E5           4 push hl
 123+ 979E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 979F CD A2 94     	call calcula_tercio
 125+ 97A2 FE 01        	cp 1
 126+ 97A4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97A6 CD B4 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97A9 28 04            jr z,9F
 129+ 97AB 30 02            jr nc,9F
 130+ 97AD 18 02        	jr 8F
 131+ 97AF 1E 02        9 ld e,2
 132+ 97B1 C1           8 pop bc
 133+ 97B2 E1           10 pop hl
 134+ 97B3 C9           5 ret
 135+ 97B4
 136+ 97B4              ; --------------------
 137+ 97B4              ;
 138+ 97B4              ; 25/08/22
 139+ 97B4
 140+ 97B4 CD A2 94     Comprueba_centro call calcula_tercio
 141+ 97B7 67               ld h,a
 142+ 97B8 08           	ex af,af
 143+ 97B9 FE 02        	cp 2
 144+ 97BB 38 07        	jr c,1F
 145+ 97BD 28 05        	jr z,1F
 146+ 97BF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97C2 18 03        	jr 2F
 148+ 97C4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97C7 08           2 ex af,af
 150+ 97C8 A7               and a
 151+ 97C9 ED 42            sbc hl,bc
 152+ 97CB C9               ret
 153+ 97CC
 154+ 97CC              ; *********************************************************************************************************************************************************************************************
 155+ 97CC              ;
 156+ 97CC              ;   16/8/22
 157+ 97CC              ;
 158+ 97CC              ;	Comprueba_limite_vertical
 159+ 97CC              ;
 160+ 97CC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97CC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97CC              ;
 163+ 97CC
 164+ 97CC 2A 0C 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97CF 7D           	ld a,l
 166+ 97D0 E6 1F        	and $1F
 167+ 97D2 57           	ld d,a
 168+ 97D3 3A 1F 8C     	ld a,(Limite_vertical)
 169+ 97D6 BA           	cp d 											; Límite - Posición.
 170+ 97D7 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97D8 3A 1B 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97DB CB 47        	bit 0,a
 173+ 97DD 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97DF
 175+ 97DF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97DF
 177+ 97DF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97E0 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97E2
 180+ 97E2              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97E2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97E2
 183+ 97E2 3A FD 8B         ld a,(Coordenada_X)
 184+ 97E5 16 0F            ld d,Centro_izquierda
 185+ 97E7 A7               and a
 186+ 97E8 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97E9 28 1E            jr z,3F
 188+ 97EB 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97ED              ;                                                    ; _salimos sin modificar nada.
 190+ 97ED 18 0E            jr 2F
 191+ 97EF 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97F0 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97F2
 194+ 97F2              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97F2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97F2
 197+ 97F2 3A FD 8B         ld a,(Coordenada_X)
 198+ 97F5 16 10            ld d,Centro_derecha
 199+ 97F7 A7               and a
 200+ 97F8 92               sub d
 201+ 97F9 28 0E            jr z,3F
 202+ 97FB 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97FD              ;                                                    ; _salimos sin modificar nada.
 204+ 97FD CB 43        2 bit 0,e
 205+ 97FF 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9801 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9802 CD 96 98         call Modificaccionne
 208+ 9805 C1           	pop bc
 209+ 9806 CD A6 98         call Inicializacion
 210+ 9809 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 980A
 212+ 980A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 980A
 214+ 980A C5           4 push bc
 215+ 980B 01 0B 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 980E 0A           	ld a,(bc)
 217+ 980F 3D           	dec a
 218+ 9810 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9811 7D           	ld a,l
 220+ 9812 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9813 CB 47        	bit 0,a
 222+ 9815 28 03        	jr z,5F
 223+ 9817 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9818 18 2E        	jr 7F
 225+ 981A
 226+ 981A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 981A
 228+ 981A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 981B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 981C 3A 09 8C     	ld a,(Ctrl_0)
 231+ 981F CB 4F        	bit 1,a
 232+ 9821 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9823 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9824
 235+ 9824              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9824
 237+ 9824 1C               inc e
 238+ 9825 1D               dec e
 239+ 9826 20 07            jr nz,12F
 240+ 9828 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9829 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 982A 22 0C 8C     	ld (Posicion_actual),hl
 243+ 982D 18 44        13 jr 9F
 244+ 982F CB 43        12 bit 0,e
 245+ 9831 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9833              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9833 C1           	pop bc
 248+ 9834 18 D3        	jr 3B
 249+ 9836 80           14 add b
 250+ 9837 6F               ld l,a
 251+ 9838 22 0C 8C     	ld (Posicion_actual),hl
 252+ 983B CD 96 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 983E 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9840 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9842 32 09 8C         ld (Ctrl_0),a
 256+ 9845 F1           	pop af
 257+ 9846 18 2B        	jr 9F
 258+ 9848
 259+ 9848              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9848
 261+ 9848 F5           7 push af
 262+ 9849 3A 09 8C     	ld a,(Ctrl_0)
 263+ 984C CB 47        	bit 0,a
 264+ 984E 20 1D        	jr nz,8F
 265+ 9850 F1           	pop af
 266+ 9851
 267+ 9851              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9851
 269+ 9851 1C           	inc e
 270+ 9852 1D               dec e
 271+ 9853 20 07            jr nz,10F
 272+ 9855 90           	sub b
 273+ 9856 6F               ld l,a
 274+ 9857 22 0C 8C     	ld (Posicion_actual),hl
 275+ 985A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 985C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 985C CB 43        10 bit 0,e
 278+ 985E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9860              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9860 C1           	pop bc
 281+ 9861 18 A6        	jr 3B
 282+ 9863 90           16 sub b
 283+ 9864 6F               ld l,a
 284+ 9865 22 0C 8C     	ld (Posicion_actual),hl
 285+ 9868 CD 96 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 986B 18 06            jr 9F
 287+ 986D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 986F 32 09 8C         ld (Ctrl_0),a
 289+ 9872 F1           	pop af
 290+ 9873 C1           9 pop bc
 291+ 9874 1E 00        	ld e,0
 292+ 9876 CD A6 98         call Inicializacion
 293+ 9879 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 987A 08           	ex af,af
 295+ 987B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 987C 18 8B            jr 3B
 297+ 987E
 298+ 987E              ; --------------------
 299+ 987E
 300+ 987E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9880 CD C9 99     1 call PreviousScan
 302+ 9883 10 FB            djnz 1B
 303+ 9885 22 0C 8C     	ld (Posicion_actual),hl
 304+ 9888 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9889 C9           	ret
 306+ 988A
 307+ 988A              ; --------------------
 308+ 988A
 309+ 988A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 988C CD BA 99     1 call NextScan
 311+ 988F 10 FB            djnz 1B
 312+ 9891 22 0C 8C     	ld (Posicion_actual),hl
 313+ 9894 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9895 C9           	ret
 315+ 9896
 316+ 9896              ; --------------------
 317+ 9896              ;
 318+ 9896              ;	22/01/23
 319+ 9896              ;
 320+ 9896              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9896              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9896              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9896
 324+ 9896
 325+ 9896              Modificaccionne
 326+ 9896
 327+ 9896 3A 1B 8C     	ld a,(Cuad_objeto)
 328+ 9899 FE 02        	cp 2
 329+ 989B CC 7E 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 989E DC 7E 98         call c,Modifica_Pos_actual
 331+ 98A1 C8           	ret z
 332+ 98A2 CD 8A 98         call Modifica_Pos_actual2
 333+ 98A5 C9               ret
 334+ 98A6
 335+ 98A6              ; *************************************************************************************************************************************************************************************************
 336+ 98A6              ;
 337+ 98A6              ;	13/8/22
 338+ 98A6              ;
 339+ 98A6              ;	Inicializacion
 340+ 98A6              ;
 341+ 98A6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98A6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98A6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98A6              ;
 345+ 98A6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98A6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98A6              ;	_ desaparece/aparece.
 348+ 98A6
 349+ 98A6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98A6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98A6              ;
 352+ 98A6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98A6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98A6              ; 		   [E] ="0"
 355+ 98A6
 356+ 98A6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98A6
 358+ 98A6 CD A2 94     Inicializacion call calcula_tercio
 359+ 98A9 28 36        	jr z,primit
 360+ 98AB E6 02        	and 2
 361+ 98AD 20 07        	jr nz,segmit
 362+ 98AF 7D           	ld a,l
 363+ 98B0 FE 7F        	cp $7f
 364+ 98B2 38 2D        	jr c,primit
 365+ 98B4 28 2B        	jr z,primit
 366+ 98B6 CD 1C 99     segmit call column
 367+ 98B9 38 13        	jr c,tercuad
 368+ 98BB 3E 04        cuarcuad ld a,4
 369+ 98BD 32 1B 8C     	ld (Cuad_objeto),a
 370+ 98C0 21 20 48     	ld hl,$4820
 371+ 98C3 22 1D 8C     	ld (Limite_horizontal),hl
 372+ 98C6 21 1F 8C     	ld hl,Limite_vertical
 373+ 98C9 36 0D        	ld (hl),$0d
 374+ 98CB 08           	ex af,af
 375+ 98CC 18 3C        	jr 1F
 376+ 98CE              tercuad
 377+ 98CE 3E 03        	ld a,3
 378+ 98D0 32 1B 8C     	ld (Cuad_objeto),a
 379+ 98D3 21 20 48     	ld hl,$4820
 380+ 98D6 22 1D 8C     	ld (Limite_horizontal),hl
 381+ 98D9 21 1F 8C     	ld hl,Limite_vertical
 382+ 98DC 36 12        	ld (hl),$12
 383+ 98DE 08           	ex af,af
 384+ 98DF 18 29        	jr 1F
 385+ 98E1 CD 1C 99     primit call column
 386+ 98E4 38 13        	jr c, primcuad
 387+ 98E6              segcuad
 388+ 98E6 3E 02        	ld a,2
 389+ 98E8 32 1B 8C     	ld (Cuad_objeto),a
 390+ 98EB 21 C0 4F     	ld hl,$4fc0
 391+ 98EE 22 1D 8C     	ld (Limite_horizontal),hl
 392+ 98F1 21 1F 8C     	ld hl,Limite_vertical
 393+ 98F4 36 0D        	ld (hl),$0d
 394+ 98F6 08           	ex af,af
 395+ 98F7 18 11        	jr 1F
 396+ 98F9              primcuad
 397+ 98F9 3E 01        	ld a,1
 398+ 98FB 32 1B 8C     	ld (Cuad_objeto),a
 399+ 98FE 21 C0 4F     	ld hl,$4fc0
 400+ 9901 22 1D 8C     	ld (Limite_horizontal),hl
 401+ 9904 21 1F 8C     	ld hl,Limite_vertical
 402+ 9907 36 12        	ld (hl),$12
 403+ 9909 08           	ex af,af
 404+ 990A
 405+ 990A C5           1 push bc
 406+ 990B E5           	push hl
 407+ 990C D5           	push de
 408+ 990D
 409+ 990D 2A 0C 8C     	ld hl,(Posicion_actual)
 410+ 9910 CD C0 94     	call Genera_coordenadas
 411+ 9913
 412+ 9913 D1           	pop de
 413+ 9914 E1           	pop hl
 414+ 9915 C1           	pop bc
 415+ 9916
 416+ 9916 21 09 8C     	ld hl,Ctrl_0
 417+ 9919 CB EE        	set 5,(hl)
 418+ 991B C9           	ret
 419+ 991C
 420+ 991C              ; ------------------------------------------------------------------------------------------------------------------
 421+ 991C
 422+ 991C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 991C              ;
 424+ 991C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 991C
 426+ 991C 7D           column ld a,l
 427+ 991D E6 1F        	and $1f
 428+ 991F FE 10         	cp $10
 429+ 9921 C9            	ret
 430+ 9922
 431+ 9922              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9922              ;
 433+ 9922              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9922              ;
 435+ 9922              ; 14/12/22
 436+ 9922              ;
 437+ 9922              ;	Modifica: A y BC.
 438+ 9922
 439+ 9922 3A 1B 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9925 E6 01        	and 1
 441+ 9927 28 17        	jr z,1F
 442+ 9929
 443+ 9929              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9929
 445+ 9929 3A FD 8B     	ld a,(Coordenada_X)
 446+ 992C 47           	ld b,a
 447+ 992D 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 992E 79           	ld a,c
 449+ 992F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9930 38 08        	jr c,2F
 451+ 9932 47           	ld b,a
 452+ 9933 79           	ld a,c
 453+ 9934 90           	sub b
 454+ 9935 32 1C 8C     	ld (Columnas),a
 455+ 9938 18 1B        	jr 4F
 456+ 993A 79           2 ld a,c
 457+ 993B 32 1C 8C     	ld (Columnas),a
 458+ 993E 18 15        	jr 4F
 459+ 9940
 460+ 9940              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9940
 462+ 9940 3A FD 8B     1 ld a,(Coordenada_X)
 463+ 9943 81           	add c
 464+ 9944 3D           	dec a
 465+ 9945 D6 1F        	sub $1f
 466+ 9947 38 08        	jr c,3F
 467+ 9949 47           	ld b,a
 468+ 994A 79           	ld a,c
 469+ 994B 90           	sub b
 470+ 994C 32 1C 8C     	ld (Columnas),a
 471+ 994F 18 04        	jr 4F
 472+ 9951 79           3 ld a,c
 473+ 9952 32 1C 8C     	ld (Columnas),a
 474+ 9955 D9           4 exx
 475+ 9956 4F           	ld c,a
 476+ 9957 D9           	exx
 477+ 9958 C9            ret
 478+ 9959
 479+ 9959              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9959              ;
 481+ 9959              ;   19/7/23
 482+ 9959              ;
 483+ 9959              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9959              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9959              ;
 486+ 9959              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9959              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9959              ;
 489+ 9959              ;	DESTRUYE: HL,B Y A.
 490+ 9959
 491+ 9959 3A 1B 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 995C FE 02        	cp 2
 493+ 995E 38 18        	jr c,1F
 494+ 9960 28 16        	jr z,1F
 495+ 9962 E6 01        	and 1
 496+ 9964 28 0D        	jr z,3F
 497+ 9966
 498+ 9966              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9966
 500+ 9966 CD A2 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9969
 502+ 9969 7D           9 ld a,l
 503+ 996A E6 1F        	and $1f
 504+ 996C 28 2A        	jr z,7F
 505+ 996E 2B           	dec hl
 506+ 996F 10 F8        	djnz 9B
 507+ 9971 18 25        	jr 7F
 508+ 9973
 509+ 9973              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9973
 511+ 9973 2A 0C 8C     3 ld hl,(Posicion_actual)
 512+ 9976 18 20        	jr 7F
 513+ 9978
 514+ 9978 28 14        1 jr z,2F
 515+ 997A
 516+ 997A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 997A
 518+ 997A CD A2 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 997D
 520+ 997D 7D           4 ld a,l
 521+ 997E E6 1F        	and $1f
 522+ 9980 28 03        	jr z,6F
 523+ 9982 2B           	dec hl
 524+ 9983 10 F8        	djnz 4B
 525+ 9985 06 0F        6 ld b,15
 526+ 9987 CD C9 99     5 call PreviousScan
 527+ 998A 10 FB        	djnz 5B
 528+ 998C 18 0A        	jr 7F
 529+ 998E
 530+ 998E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 998E
 532+ 998E CD A2 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9991 06 0F        	ld b,15
 534+ 9993 CD C9 99     8 call PreviousScan
 535+ 9996 10 FB        	djnz 8B
 536+ 9998
 537+ 9998 E5           7 push hl
 538+ 9999 DD E1        	pop ix
 539+ 999B
 540+ 999B 2A 0E 8C     	ld hl,(Puntero_objeto)
 541+ 999E E5           	push hl
 542+ 999F FD E1        	pop iy
 543+ 99A1
 544+ 99A1 C9           	ret
 545+ 99A2
 546+ 99A2              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99A2              ;
 548+ 99A2              ;	2/1/23
 549+ 99A2              ;
 550+ 99A2              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99A2              ;
 552+ 99A2              ;	Tras esta rutina tenemos:
 553+ 99A2              ;
 554+ 99A2              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99A2              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99A2              ;
 557+ 99A2              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99A2
 559+ 99A2 2A 0C 8C     Operandos ld hl,(Posicion_actual)
 560+ 99A5 3A 1C 8C     	ld a,(Columnas)
 561+ 99A8 3D           	dec a
 562+ 99A9 20 01        	jr nz,1F
 563+ 99AB 3C           	inc a
 564+ 99AC 47           1 ld b,a
 565+ 99AD C9           	ret
 566+ 99AE
 567+ 99AE              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99AE              ;
 569+ 99AE              ;	Prepara_draw
 570+ 99AE              ;
 571+ 99AE              ;	Es una rutina de carga.
 572+ 99AE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99AE              ;
 574+ 99AE              ;	FUNCIONAMIENTO:
 575+ 99AE              ;
 576+ 99AE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99AE              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99AE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99AE              ;
 580+ 99AE              ;	DESTRUYE:
 581+ 99AE              ;
 582+ 99AE              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99AE
 584+ 99AE 21 0A 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99B1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99B2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99B3 4E           	ld c,(hl)
 588+ 99B4 2A 0C 8C     	ld hl,(Posicion_actual)
 589+ 99B7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99B9 C9           	ret
 591+ 99BA
 592+ 99BA              ;----------------------------------------------------------------------------------------------------------------
 593+ 99BA              ;
 594+ 99BA              ;	5/08/22
 595+ 99BA              ;
 596+ 99BA              ;   NextScan.
 597+ 99BA              ;
 598+ 99BA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99BA              ;
 600+ 99BA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99BA              ;
 602+ 99BA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99BA              ;
 604+ 99BA              ;       DESTRUIDOS: AF y HL !!!
 605+ 99BA              ;
 606+ 99BA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99BA              ;
 608+ 99BA
 609+ 99BA 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99BB 7C               ld a,h
 611+ 99BC E6 07            and 7
 612+ 99BE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99BF
 614+ 99BF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99C0 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99C2 6F               ld l,a
 617+ 99C3 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99C4
 619+ 99C4 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99C5 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99C7 67               ld h,a
 622+ 99C8 C9               ret
 623+ 99C9
 624+ 99C9              ;----------------------------------------------------------------------------------------------------------------
 625+ 99C9              ;
 626+ 99C9              ;	5/08/22
 627+ 99C9              ;
 628+ 99C9              ;   PreviousScan.
 629+ 99C9              ;
 630+ 99C9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99C9              ;
 632+ 99C9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99C9              ;
 634+ 99C9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99C9              ;
 636+ 99C9              ;       DESTRUIDOS: AF y HL !!!
 637+ 99C9              ;
 638+ 99C9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99C9              ;
 640+ 99C9
 641+ 99C9 7C           PreviousScan ld a,h
 642+ 99CA 25               dec h               ; Dec H.
 643+ 99CB E6 07            and 7
 644+ 99CD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99CE
 646+ 99CE 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99CF D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99D1 6F               ld l,a
 649+ 99D2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99D3
 651+ 99D3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99D4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99D6 67               ld h,a
 654+ 99D7 C9               ret
 655+ 99D8
 656+ 99D8
 657+ 99D8
 658+ 99D8
 659+ 99D8
 660+ 99D8
 661+ 99D8
 662+ 99D8
 663+ 99D8
 664+ 99D8
 665+ 99D8
 666+ 99D8
# file closed: Draw_XOR.asm
2064  99D8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D8
   2+ 99D8              ; ******************************************************************************************************************************************************************************************
   3+ 99D8              ;
   4+ 99D8              ;   20/05/23
   5+ 99D8              ;
   6+ 99D8              ;	Recompone_posicion_inicio
   7+ 99D8              ;
   8+ 99D8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99D8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99D8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99D8              ;	_ a una u otra rutina.
  12+ 99D8
  13+ 99D8              Recompone_posicion_inicio
  14+ 99D8
  15+ 99D8 2A 19 8C     	ld hl,(Posicion_inicio)
  16+ 99DB 7D           	ld a,l
  17+ 99DC E6 1F        	and $1f
  18+ 99DE 28 16        	jr z,1F
  19+ 99E0
  20+ 99E0 FE 1F        	cp $1f
  21+ 99E2 28 0D        	jr z,3F
  22+ 99E4
  23+ 99E4 21 08 8C     	ld hl,Ctrl_2
  24+ 99E7 CB C6        	set 0,(hl)
  25+ 99E9 2A 0E 8C     	ld hl,(Puntero_objeto)
  26+ 99EC 22 3A 8C     	ld (Repone_puntero_objeto),hl
  27+ 99EF 18 08        	jr 2F
  28+ 99F1
  29+ 99F1 CD 9F 9B     3 call Mov_left
  30+ 99F4 18 03        	jr 2F
  31+ 99F6
  32+ 99F6 CD 7C 9A     1 call Mov_right
  33+ 99F9 21 80 F8     2 ld hl,Sprite_vacio
  34+ 99FC 22 0E 8C     	ld (Puntero_objeto),hl
  35+ 99FF C9           	ret
  36+ 9A00
  37+ 9A00              ; ******************************************************************************************************************************************************************************************
  38+ 9A00              ;
  39+ 9A00              ;   27/05/23
  40+ 9A00              ;
  41+ 9A00              ;	Mov_down
  42+ 9A00              ;
  43+ 9A00              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A00              ;
  45+ 9A00              ;
  46+ 9A00              Mov_down
  47+ 9A00
  48+ 9A00 CD 6A 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A03              ;																	; _ repone (Puntero_objeto).
  50+ 9A03 21 09 8C     	ld hl,Ctrl_0
  51+ 9A06 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A08              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A08              ; 																	; _ en el caso de que no lo haya.
  54+ 9A08 3A 24 8C     	ld a,(Vel_down)
  55+ 9A0B 47           	ld b,a
  56+ 9A0C 2A 0C 8C         ld hl,(Posicion_actual)
  57+ 9A0F CD A2 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A12 E6 02        	and 2
  59+ 9A14 28 17        	jr z,1F
  60+ 9A16
  61+ 9A16              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A16              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A16
  64+ 9A16 7C           	ld a,h
  65+ 9A17 FE 57        	cp $57
  66+ 9A19 20 12        	jr nz,1F
  67+ 9A1B
  68+ 9A1B 7D           	ld a,l
  69+ 9A1C C6 20        	add $20
  70+ 9A1E 30 0D        	jr nc,1F
  71+ 9A20
  72+ 9A20              ; ------------------------------
  73+ 9A20              ;
  74+ 9A20              ;	12/01/24
  75+ 9A20
  76+ 9A20              ;	call Reaparece_arriba
  77+ 9A20 CD 2C 9D     	call Reinicio
  78+ 9A23
  79+ 9A23              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A23
  81+ 9A23 3A 73 8C     	ld a,(Ctrl_3)
  82+ 9A26 CB CF        	set 1,a
  83+ 9A28 32 73 8C     	ld (Ctrl_3),a
  84+ 9A2B
  85+ 9A2B 18 08        	jr 3F
  86+ 9A2D              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A2D              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A2D              ; ------------------------------
  89+ 9A2D
  90+ 9A2D CD BA 99     1 call NextScan
  91+ 9A30 22 0C 8C     	ld (Posicion_actual),hl
  92+ 9A33 10 DA            djnz 2B
  93+ 9A35 CD C0 94     3 call Genera_coordenadas
  94+ 9A38 C9           	ret
  95+ 9A39
  96+ 9A39              ; ******************************************************************************************************************************************************************************************
  97+ 9A39              ;
  98+ 9A39              ;   27/05/23
  99+ 9A39              ;
 100+ 9A39              ;	Mov_up
 101+ 9A39              ;
 102+ 9A39              ; 	Mueve el Sprite hacia arriba.
 103+ 9A39              ;
 104+ 9A39              ;
 105+ 9A39              Mov_up
 106+ 9A39
 107+ 9A39 CD 6A 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A3C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A3C 21 09 8C     	ld hl,Ctrl_0
 110+ 9A3F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A41              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A41              ; 																		; _ en el caso de que no lo haya.
 113+ 9A41 3A 23 8C     	ld a,(Vel_up)
 114+ 9A44 47           	ld b,a
 115+ 9A45 2A 0C 8C     	ld hl,(Posicion_actual)
 116+ 9A48 CD A2 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A4B A7           	and a
 118+ 9A4C 20 10        	jr nz,1F
 119+ 9A4E
 120+ 9A4E              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A4E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A4E
 123+ 9A4E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A4F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A51 20 0B            jr nz,1F
 126+ 9A53 7D               ld a,l
 127+ 9A54 D6 20            sub $20
 128+ 9A56 30 06            jr nc,1F
 129+ 9A58 25               dec h
 130+ 9A59
 131+ 9A59              ; -----------------------------
 132+ 9A59 CD 0D 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A5C              ;	call Reinicio
 134+ 9A5C              ; -----------------------------
 135+ 9A5C
 136+ 9A5C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A5E CD C9 99     1 call PreviousScan
 138+ 9A61 22 0C 8C     	ld (Posicion_actual),hl
 139+ 9A64 10 E2            djnz 3B
 140+ 9A66 CD C0 94     2 call Genera_coordenadas
 141+ 9A69 C9           	ret
 142+ 9A6A
 143+ 9A6A              ; -----------------------------
 144+ 9A6A              ;
 145+ 9A6A              ;	27/5/23
 146+ 9A6A              ;
 147+ 9A6A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A6A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A6A              ;
 150+ 9A6A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A6A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A6A              ;
 153+ 9A6A              ;	Modifica: A y (Puntero_objeto).
 154+ 9A6A
 155+ 9A6A 3A 08 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A6D CB 47        	bit 0,a
 157+ 9A6F C8           	ret z
 158+ 9A70 CB 87        	res 0,a
 159+ 9A72 32 08 8C     	ld (Ctrl_2),a
 160+ 9A75 2A 3A 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A78 22 0E 8C     	ld (Puntero_objeto),hl
 162+ 9A7B C9           	ret
 163+ 9A7C
 164+ 9A7C              ; ******************************************************************************************************************************************************************************************
 165+ 9A7C              ;
 166+ 9A7C              ;	19/10/22
 167+ 9A7C              ;
 168+ 9A7C              ;	Mov_right.
 169+ 9A7C              ;
 170+ 9A7C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A7C              ;
 172+ 9A7C
 173+ 9A7C 3A 09 8C     Mov_right ld a,(Ctrl_0)
 174+ 9A7F CB 77        	bit 6,a
 175+ 9A81 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A83
 177+ 9A83 CD BB 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A86 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A87
 180+ 9A87 21 09 8C     	ld hl,Ctrl_0
 181+ 9A8A CB E6        	set 4,(hl)
 182+ 9A8C 18 52        	jr 8F
 183+ 9A8E
 184+ 9A8E 21 09 8C     10 ld hl,Ctrl_0
 185+ 9A91 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A93              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A93              ; 																	; _ en el caso de que no lo haya.
 188+ 9A93 3A FD 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A96 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A98 20 46        	jr nz,8F
 191+ 9A9A
 192+ 9A9A 3A 10 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A9D A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A9E 28 40        	jr z,8F
 195+ 9AA0
 196+ 9AA0              ; ---------- ---------- ----------
 197+ 9AA0              ;
 198+ 9AA0              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AA0
 200+ 9AA0 3A 22 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AA3 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AA5 28 11        	jr z,1F
 203+ 9AA7 38 06        	jr c,6F
 204+ 9AA9 FE 04        	cp 4
 205+ 9AAB 28 14        	jr z,7F
 206+ 9AAD 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AAF
 208+ 9AAF              ; ---------- ---------- ----------
 209+ 9AAF              ;
 210+ 9AAF              ; Perfiles de velocidad
 211+ 9AAF              ;
 212+ 9AAF
 213+ 9AAF 3A 10 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AB2 FE FE        	cp $fe
 215+ 9AB4 20 2A        	jr nz,8F
 216+ 9AB6 18 10        	jr 3F
 217+ 9AB8 3A 10 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ABB FE FD        	cp $fd
 219+ 9ABD 20 21        	jr nz,8F
 220+ 9ABF 18 07        	jr 3F
 221+ 9AC1 3A 10 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AC4 FE FB        	cp $fb
 223+ 9AC6 20 18        	jr nz,8F
 224+ 9AC8
 225+ 9AC8              ; ---------- ---------- ----------
 226+ 9AC8
 227+ 9AC8              3
 228+ 9AC8 CD FB 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ACB              ;	call Reinicio
 230+ 9ACB
 231+ 9ACB              ; ---------- ---------- ----------
 232+ 9ACB              ;
 233+ 9ACB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ACB
 235+ 9ACB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9ACD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9ACE CD E7 9A     	call DESPLZ_DER
 238+ 9AD1 C1           	pop bc
 239+ 9AD2 10 F9        	djnz 5B
 240+ 9AD4 2A 0C 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AD7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AD8 22 0C 8C     	ld (Posicion_actual),hl
 243+ 9ADB CD C0 94     	call Genera_coordenadas
 244+ 9ADE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AE0
 246+ 9AE0              ; ---------- ---------- ----------
 247+ 9AE0
 248+ 9AE0 2A 0C 8C     8 ld hl,(Posicion_actual)
 249+ 9AE3 CD E7 9A     	call DESPLZ_DER
 250+ 9AE6 C9           2 ret
 251+ 9AE7
 252+ 9AE7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AE7              ;
 254+ 9AE7              ;	22/9/22
 255+ 9AE7              ;
 256+ 9AE7
 257+ 9AE7 CD F6 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AEA CD 42 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AED CD 6B 9B         call Ciclo_completo
 260+ 9AF0 21 09 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AF3 CB FE        	set 7,(hl)
 262+ 9AF5 C9           	ret
 263+ 9AF6
 264+ 9AF6              ; ******************************************************************************************************************************************************************************************
 265+ 9AF6              ;	15/02/23
 266+ 9AF6              ;
 267+ 9AF6
 268+ 9AF6 3A 22 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9AF9 47           	ld b,a
 270+ 9AFA 2A 15 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AFD 23           1 inc hl
 272+ 9AFE 23           	inc hl
 273+ 9AFF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B01 22 15 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B04 CD FF 90     	call Extrae_address
 276+ 9B07 22 0E 8C     	ld (Puntero_objeto),hl
 277+ 9B0A
 278+ 9B0A              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B0A
 280+ 9B0A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B0A              ; Cuántos movimientos hemos hecho ??
 282+ 9B0A              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B0A
 284+ 9B0A 2A 11 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B0D EB           	ex de,hl
 286+ 9B0E A7           	and a
 287+ 9B0F ED 52        	sbc hl,de
 288+ 9B11 CB 3D        	srl l
 289+ 9B13 3E 08        6 ld a,8
 290+ 9B15 95           	sub l
 291+ 9B16 30 1E        	jr nc,3F
 292+ 9B18
 293+ 9B18              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B18              ; B="0".
 295+ 9B18
 296+ 9B18 04           4 inc b
 297+ 9B19 3C           	inc a
 298+ 9B1A 20 FC        	jr nz,4B
 299+ 9B1C 78           	ld a,b
 300+ 9B1D 08           	ex af,af
 301+ 9B1E 2A 11 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B21 23           5 inc hl
 303+ 9B22 23           	inc hl
 304+ 9B23 10 FC        	djnz 5B
 305+ 9B25 22 15 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B28 CD FF 90     	call Extrae_address
 307+ 9B2B 22 0E 8C     	ld (Puntero_objeto),hl
 308+ 9B2E
 309+ 9B2E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B2E              ; _(Posicion_actual).
 311+ 9B2E
 312+ 9B2E 21 0C 8C     	ld hl,Posicion_actual
 313+ 9B31 34           	inc (hl)
 314+ 9B32 08               ex af,af
 315+ 9B33 6F           	ld l,a
 316+ 9B34 18 DD        	jr 6B
 317+ 9B36
 318+ 9B36              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B36
 320+ 9B36 47           3 ld b,a
 321+ 9B37 2A 13 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B3A 23           2 inc hl
 323+ 9B3B 23           	inc hl
 324+ 9B3C 10 FC        	djnz 2B
 325+ 9B3E 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B41 C9           8 ret
 327+ 9B42
 328+ 9B42              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B42              ;
 330+ 9B42              ;	24/7/22
 331+ 9B42              ;
 332+ 9B42              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B42              ;
 334+ 9B42              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B42              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B42              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B42
 338+ 9B42 3A 10 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B45 A7           	and a
 340+ 9B46 20 1F        	jr nz,1F
 341+ 9B48 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B4A 32 10 8C         ld (CTRL_DESPLZ),a
 343+ 9B4D
 344+ 9B4D 21 0B 8C     	ld hl,Columns
 345+ 9B50 34           	inc (hl)
 346+ 9B51 3A 1B 8C     	ld a,(Cuad_objeto)
 347+ 9B54 E6 01        	and 1
 348+ 9B56 28 0F        	jr z,1F
 349+ 9B58 2A 0C 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B5B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B5C 22 0C 8C     	ld (Posicion_actual),hl
 352+ 9B5F CD C0 94     	call Genera_coordenadas
 353+ 9B62 CD C7 9C     	call Inc_CTRL_DESPLZ
 354+ 9B65 18 03        	jr 2F
 355+ 9B67 CD C7 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B6A C9           2 ret
 357+ 9B6B
 358+ 9B6B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B6B              ;
 360+ 9B6B              ;	24/7/22
 361+ 9B6B              ;
 362+ 9B6B              ;	Ciclo_completo.
 363+ 9B6B              ;
 364+ 9B6B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B6B              ;
 366+ 9B6B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B6B              ; 	Decrementamos (Columns).
 368+ 9B6B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B6B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B6B
 371+ 9B6B
 372+ 9B6B 3A 10 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B6E FE FF        	cp $ff
 374+ 9B70 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B72 E6 F0        	and $f0
 376+ 9B74 20 28        	jr nz,3F
 377+ 9B76
 378+ 9B76              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B76
 380+ 9B76 3A 10 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B79 47           	ld b,a
 382+ 9B7A 3E F8        	ld a,$f8
 383+ 9B7C 80           	add b
 384+ 9B7D 32 10 8C     	ld (CTRL_DESPLZ),a
 385+ 9B80 18 1C        	jr 3F
 386+ 9B82 21 0B 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B85 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B86 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B87 32 10 8C     	ld (CTRL_DESPLZ),a
 390+ 9B8A 3A 1B 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B8D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B8F 20 0A        	jr nz,2F
 393+ 9B91 2A 0C 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B94 23           	inc hl
 395+ 9B95 22 0C 8C     	ld (Posicion_actual),hl
 396+ 9B98 CD C0 94     	call Genera_coordenadas
 397+ 9B9B
 398+ 9B9B              ; Inicia el puntero de Sprite.
 399+ 9B9B
 400+ 9B9B CD 14 91     2 call Inicia_puntero_objeto_der
 401+ 9B9E C9           3 ret
 402+ 9B9F
 403+ 9B9F              ; ******************************************************************************************************************************************************************************************
 404+ 9B9F              ;
 405+ 9B9F              ;	15/02/23
 406+ 9B9F              ;
 407+ 9B9F              ;	Mov_left.
 408+ 9B9F              ;
 409+ 9B9F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B9F              ;
 411+ 9B9F              Mov_left
 412+ 9B9F
 413+ 9B9F 21 09 8C     	ld hl,Ctrl_0
 414+ 9BA2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BA4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BA4              ; 																	; _ en el caso de que no lo haya.
 417+ 9BA4 3A 09 8C     	ld a,(Ctrl_0)
 418+ 9BA7 CB 77        	bit 6,a
 419+ 9BA9 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BAB
 421+ 9BAB CD C1 9C     	call Stop_Amadeus_left
 422+ 9BAE C8           	ret z
 423+ 9BAF 20 4A        	jr nz,8F
 424+ 9BB1
 425+ 9BB1 3A FD 8B     11 ld a,(Coordenada_X)
 426+ 9BB4 A7           	and a
 427+ 9BB5 20 44        	jr nz,8F
 428+ 9BB7
 429+ 9BB7 3A 10 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BBA A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BBB 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BBD
 433+ 9BBD              ; ---------- ---------- ----------
 434+ 9BBD
 435+ 9BBD 3A 21 8C     	ld a,(Vel_left)
 436+ 9BC0 FE 02        	cp 2
 437+ 9BC2 28 0F        	jr z,1F
 438+ 9BC4 38 04        	jr c,6F
 439+ 9BC6 FE 04        	cp 4
 440+ 9BC8 28 12        	jr z,7F
 441+ 9BCA
 442+ 9BCA              ; ---------- ---------- ----------
 443+ 9BCA
 444+ 9BCA 3A 10 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BCD FE F8        	cp $f8
 446+ 9BCF 20 2A        	jr nz,8F
 447+ 9BD1 18 10        	jr 4F
 448+ 9BD3 3A 10 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BD6 FE F9        	cp $f9
 450+ 9BD8 20 21        	jr nz,8F
 451+ 9BDA 18 07        	jr 4F
 452+ 9BDC 3A 10 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BDF FE FB        	cp $fb
 454+ 9BE1 20 18        	jr nz,8F
 455+ 9BE3
 456+ 9BE3              ; ---------- ---------- ----------
 457+ 9BE3
 458+ 9BE3              4
 459+ 9BE3 CD E9 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BE6              ;	call Reinicio
 461+ 9BE6
 462+ 9BE6              ; ---------- ---------- ----------
 463+ 9BE6
 464+ 9BE6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BE8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BE9
 467+ 9BE9              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BE9              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BE9
 470+ 9BE9 CD 02 9C     	call DESPLZ_IZQ
 471+ 9BEC C1           	pop bc
 472+ 9BED 10 F9        	djnz 5B
 473+ 9BEF 2A 0C 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BF2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BF3 22 0C 8C     	ld (Posicion_actual),hl
 476+ 9BF6 CD C0 94     	call Genera_coordenadas
 477+ 9BF9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BFB
 479+ 9BFB              ; ---------- ---------- ----------
 480+ 9BFB
 481+ 9BFB              ; Movemos, no hay recolocación.
 482+ 9BFB
 483+ 9BFB 2A 0C 8C     8 ld hl,(Posicion_actual)
 484+ 9BFE CD 02 9C     	call DESPLZ_IZQ
 485+ 9C01 C9           2 ret
 486+ 9C02
 487+ 9C02              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C02              ;
 489+ 9C02              ;	22/9/22
 490+ 9C02
 491+ 9C02              DESPLZ_IZQ
 492+ 9C02
 493+ 9C02 CD 11 9C     	call Desplaza_izquierda
 494+ 9C05 CD 5D 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C08 CD 85 9C     	call Ciclo_completo_2
 496+ 9C0B 21 09 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C0E CB BE        	res 7,(hl)
 498+ 9C10 C9           	ret
 499+ 9C11
 500+ 9C11              Desplaza_izquierda
 501+ 9C11
 502+ 9C11 3A 21 8C     	ld a,(Vel_left)
 503+ 9C14 47           	ld b,a
 504+ 9C15 2A 17 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C18 23           1 inc hl
 506+ 9C19 23           	inc hl
 507+ 9C1A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C1C 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C1F CD FF 90     	call Extrae_address
 510+ 9C22 22 0E 8C     	ld (Puntero_objeto),hl
 511+ 9C25
 512+ 9C25              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C25
 514+ 9C25              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C25              ; Cuántos movimientos hemos hecho ??
 516+ 9C25              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C25
 518+ 9C25 2A 13 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C28 EB           	ex de,hl
 520+ 9C29 A7           	and a
 521+ 9C2A ED 52        	sbc hl,de
 522+ 9C2C CB 3D        	srl l
 523+ 9C2E 3E 08        6 ld a,8
 524+ 9C30 95           	sub l
 525+ 9C31 30 1E        	jr nc,3F
 526+ 9C33
 527+ 9C33              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C33              ; B="0".
 529+ 9C33
 530+ 9C33 04           4 inc b
 531+ 9C34 3C           	inc a
 532+ 9C35 20 FC        	jr nz,4B
 533+ 9C37 78           	ld a,b
 534+ 9C38 08           	ex af,af
 535+ 9C39 2A 13 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C3C 23           5 inc hl
 537+ 9C3D 23           	inc hl
 538+ 9C3E 10 FC        	djnz 5B
 539+ 9C40 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C43 CD FF 90     	call Extrae_address
 541+ 9C46 22 0E 8C     	ld (Puntero_objeto),hl
 542+ 9C49
 543+ 9C49              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C49              ; _(Posicion_actual).
 545+ 9C49
 546+ 9C49 21 0C 8C     	ld hl,Posicion_actual
 547+ 9C4C 35           	dec (hl)
 548+ 9C4D 08           	ex af,af
 549+ 9C4E 6F           	ld l,a
 550+ 9C4F 18 DD        	jr 6B
 551+ 9C51
 552+ 9C51              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C51
 554+ 9C51 47           3 ld b,a
 555+ 9C52 2A 11 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C55 23           2 inc hl
 557+ 9C56 23           	inc hl
 558+ 9C57 10 FC        	djnz 2B
 559+ 9C59 22 15 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C5C C9           8 ret
 561+ 9C5D
 562+ 9C5D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C5D              ;
 564+ 9C5D              ;	modifica_parametros_1er_DESPLZ
 565+ 9C5D              ;
 566+ 9C5D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C5D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C5D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C5D
 570+ 9C5D 3A 10 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C60 A7           	and a
 572+ 9C61 20 1E        	jr nz,1F
 573+ 9C63 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C64 32 10 8C         ld (CTRL_DESPLZ),a
 575+ 9C67 21 0B 8C     	ld hl,Columns
 576+ 9C6A 34           	inc (hl)
 577+ 9C6B 3A 1B 8C     	ld a,(Cuad_objeto)
 578+ 9C6E E6 01        	and 1
 579+ 9C70 20 0F        	jr nz,1F
 580+ 9C72 2A 0C 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C75 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C76 22 0C 8C     	ld (Posicion_actual),hl
 583+ 9C79 CD C0 94     	call Genera_coordenadas
 584+ 9C7C CD D8 9C     	call Dec_CTRL_DESPLZ
 585+ 9C7F 18 03        	jr 2F
 586+ 9C81 CD D8 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C84 C9           2 ret
 588+ 9C85
 589+ 9C85              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C85
 591+ 9C85 3A 10 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C88 FE F7        	cp $f7
 593+ 9C8A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C8C 30 2C        	jr nc,3F
 595+ 9C8E
 596+ 9C8E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C8E
 598+ 9C8E 06 00        	ld b,0
 599+ 9C90 04           4 inc b
 600+ 9C91 3C           	inc a
 601+ 9C92 FE F7        	cp $f7
 602+ 9C94 20 FA        	jr nz,4B
 603+ 9C96 3E FF        	ld a,$ff
 604+ 9C98 90           	sub b
 605+ 9C99 32 10 8C     	ld (CTRL_DESPLZ),a
 606+ 9C9C 18 1C        	jr 3F
 607+ 9C9E
 608+ 9C9E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C9E
 610+ 9C9E 21 0B 8C     1 ld hl,Columns
 611+ 9CA1 35           	dec (hl)
 612+ 9CA2 AF           	xor a
 613+ 9CA3 32 10 8C     	ld (CTRL_DESPLZ),a
 614+ 9CA6 3A 1B 8C     	ld a,(Cuad_objeto)
 615+ 9CA9 E6 01        	and 1
 616+ 9CAB 28 0A        	jr z,2F
 617+ 9CAD 2A 0C 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CB0 2B           	dec hl
 619+ 9CB1 22 0C 8C     	ld (Posicion_actual),hl
 620+ 9CB4 CD C0 94     	call Genera_coordenadas
 621+ 9CB7
 622+ 9CB7              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CB7
 624+ 9CB7 CD 27 91     2 call Inicia_puntero_objeto_izq
 625+ 9CBA C9           3 ret
 626+ 9CBB
 627+ 9CBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CBB              ;
 629+ 9CBB              ;	19/10/22
 630+ 9CBB              ;
 631+ 9CBB              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CBB              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CBB
 634+ 9CBB 3A FD 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CBE FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CC0 C9           	ret
 637+ 9CC1
 638+ 9CC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CC1              ;
 640+ 9CC1              ;	19/10/22
 641+ 9CC1              ;
 642+ 9CC1              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CC1              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CC1
 645+ 9CC1 3A FD 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CC4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CC6 C9           	ret
 648+ 9CC7
 649+ 9CC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CC7              ;
 651+ 9CC7              ;	24/7/22
 652+ 9CC7              ;
 653+ 9CC7              ;	Inc_CTRL_DESPLZ
 654+ 9CC7              ;
 655+ 9CC7              ;
 656+ 9CC7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CC7
 658+ 9CC7 21 10 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CCA 3A 22 8C     	ld a,(Vel_right)
 660+ 9CCD A7           	and a
 661+ 9CCE 28 06        	jr z,1F
 662+ 9CD0 47           	ld b,a
 663+ 9CD1 34           3 inc (hl)
 664+ 9CD2 10 FD        	djnz 3B
 665+ 9CD4 18 01        	jr 2F
 666+ 9CD6 34           1 inc (hl)
 667+ 9CD7 C9           2 ret
 668+ 9CD8
 669+ 9CD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CD8              ;
 671+ 9CD8              ;	5/2/23
 672+ 9CD8              ;
 673+ 9CD8              ;	Dec_CTRL_DESPLZ
 674+ 9CD8              ;
 675+ 9CD8              ;
 676+ 9CD8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CD8
 678+ 9CD8 21 10 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CDB 3A 21 8C     	ld a,(Vel_left)
 680+ 9CDE A7           	and a
 681+ 9CDF 28 06        	jr z,1F
 682+ 9CE1 47           	ld b,a
 683+ 9CE2 35           3 dec (hl)
 684+ 9CE3 10 FD        	djnz 3B
 685+ 9CE5 18 01        	jr 2F
 686+ 9CE7 35           1 dec (hl)
 687+ 9CE8 C9           2 ret
 688+ 9CE9
 689+ 9CE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CE9
 691+ 9CE9 2A 0C 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CEC 01 1F 00     	ld bc,31
 693+ 9CEF A7           	and a
 694+ 9CF0 ED 4A        	adc hl,bc
 695+ 9CF2 22 0C 8C     	ld (Posicion_actual),hl
 696+ 9CF5 21 09 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9CF8 CB C6        	set 0,(hl)
 698+ 9CFA C9           	ret
 699+ 9CFB
 700+ 9CFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CFB
 702+ 9CFB 2A 0C 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CFE 01 1F 00     	ld bc,31
 704+ 9D01 A7           	and a
 705+ 9D02 ED 42        	sbc hl,bc
 706+ 9D04 22 0C 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D07 21 09 8C     	ld hl,Ctrl_0
 708+ 9D0A CB CE        	set 1,(hl)
 709+ 9D0C C9           	ret
 710+ 9D0D
 711+ 9D0D              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D0D
 713+ 9D0D 24           Reaparece_abajo inc h
 714+ 9D0E 01 E0 17     	ld bc,$17e0
 715+ 9D11 A7           	and a
 716+ 9D12 ED 4A        	adc hl,bc
 717+ 9D14 22 0C 8C     	ld (Posicion_actual),hl
 718+ 9D17 21 09 8C     	ld hl,Ctrl_0
 719+ 9D1A CB D6        	set 2,(hl)
 720+ 9D1C C9           	ret
 721+ 9D1D
 722+ 9D1D              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D1D
 724+ 9D1D 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D20 A7           	and a
 726+ 9D21 ED 42        	sbc hl,bc
 727+ 9D23 22 0C 8C     	ld (Posicion_actual),hl
 728+ 9D26 21 09 8C     	ld hl,Ctrl_0
 729+ 9D29 CB DE        	set 3,(hl)
 730+ 9D2B C9           	ret
 731+ 9D2C
 732+ 9D2C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D2C              ;
 734+ 9D2C              ;	15/07/23
 735+ 9D2C
 736+ 9D2C              Reinicio
 737+ 9D2C
 738+ 9D2C              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D2C
 740+ 9D2C AF           	xor a
 741+ 9D2D 21 31 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D30 CD 4E 9D     	call Limpia_contenido_hl
 743+ 9D33
 744+ 9D33 21 0C 8C     	ld hl,Posicion_actual
 745+ 9D36 CD 4E 9D     	call Limpia_contenido_hl
 746+ 9D39
 747+ 9D39 CD 30 93     	call Situa_Puntero_indice_mov
 748+ 9D3C CD 4D 9E     	call Inicia_Puntero_mov
 749+ 9D3F
 750+ 9D3F 21 33 8C     	ld hl,Incrementa_puntero
 751+ 9D42 06 05        	ld b,5
 752+ 9D44 77           1 ld (hl),a
 753+ 9D45 23           	inc hl
 754+ 9D46 10 FC        	djnz 1B
 755+ 9D48
 756+ 9D48 21 08 8C     	ld hl,Ctrl_2
 757+ 9D4B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D4D
 759+ 9D4D C9           	ret
 760+ 9D4E
 761+ 9D4E 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D4F 23           	inc hl
 763+ 9D50 77           	ld (hl),a
 764+ 9D51 C9           	ret
 765+ 9D52
 766+ 9D52              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D52              ;
 768+ 9D52              ;	18/6/24
 769+ 9D52              ;
 770+ 9D52
 771+ 9D52              Amadeus_a_izquierda
 772+ 9D52
 773+ 9D52              ;	Actualiza contador de movimientos.
 774+ 9D52
 775+ 9D52 21 C2 89     	ld hl,Comm_Amadeus
 776+ 9D55 35           	dec (hl)
 777+ 9D56 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D58
 779+ 9D58 2A C0 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D5B 2B           	dec hl
 781+ 9D5C 2B           	dec hl
 782+ 9D5D 2B           	dec hl
 783+ 9D5E 2B           	dec hl
 784+ 9D5F 22 C0 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D62
 786+ 9D62 21 73 8C     	ld hl,Ctrl_3
 787+ 9D65 CB EE        	set 5,(hl)
 788+ 9D67
 789+ 9D67 C9           	ret
 790+ 9D68
 791+ 9D68 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D69 C9           	ret
 793+ 9D6A
 794+ 9D6A
 795+ 9D6A              Amadeus_a_derecha
 796+ 9D6A
 797+ 9D6A              ;	Actualiza contador de movimientos.
 798+ 9D6A
 799+ 9D6A 21 C2 89     	ld hl,Comm_Amadeus
 800+ 9D6D 34           	inc (hl)
 801+ 9D6E 3E 7A        	ld a,$7a
 802+ 9D70 BE           	cp (hl)
 803+ 9D71 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D73
 805+ 9D73 2A C0 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D76 23           	inc hl
 807+ 9D77 23           	inc hl
 808+ 9D78 23           	inc hl
 809+ 9D79 23           	inc hl
 810+ 9D7A 22 C0 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D7D
 812+ 9D7D 21 73 8C     	ld hl,Ctrl_3
 813+ 9D80 CB EE        	set 5,(hl)
 814+ 9D82 C9           	ret
 815+ 9D83
 816+ 9D83 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D84 C9           	ret
# file closed: Direcciones.asm
2065  9D85              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D85              ; ----- ----- ----- ----- -----
   2+ 9D85              ;
   3+ 9D85              ;   28/12/23
   4+ 9D85
   5+ 9D85              Movimiento
   6+ 9D85
   7+ 9D85              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D85
   9+ 9D85 3A 08 8C         ld a,(Ctrl_2)
  10+ 9D88 CB 57            bit 2,a
  11+ 9D8A 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D8C
  13+ 9D8C 2A 2F 8C         ld hl,(Puntero_mov)
  14+ 9D8F 7E               ld a,(hl)
  15+ 9D90
  16+ 9D90              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D90
  18+ 9D90              Inicia_desplazamiento.
  19+ 9D90
  20+ 9D90              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D90
  22+ 9D90 CD 83 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D93
  24+ 9D93              ; Iniciamos (Repetimos_mov).
  25+ 9D93
  26+ 9D93 7E               ld a,(hl)
  27+ 9D94 E6 0F            and $0f
  28+ 9D96 32 35 8C         ld (Repetimos_desplazamiento),a
  29+ 9D99 32 36 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9D9C
  31+ 9D9C              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D9C
  33+ 9D9C 23               inc hl
  34+ 9D9D 7E               ld a,(hl)
  35+ 9D9E 32 38 8C         ld (Cola_de_desplazamiento),a
  36+ 9DA1 2B               dec hl
  37+ 9DA2
  38+ 9DA2 21 08 8C         ld hl,Ctrl_2
  39+ 9DA5 CB D6            set 2,(hl)
  40+ 9DA7
  41+ 9DA7              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DA7              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DA7
  44+ 9DA7              Desplazamiento_iniciado
  45+ 9DA7
  46+ 9DA7 CD 57 9E         call Aplica_desplazamiento
  47+ 9DAA
  48+ 9DAA              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DAA
  50+ 9DAA 3A 73 8C         ld a,(Ctrl_3)
  51+ 9DAD CB 4F            bit 1,a
  52+ 9DAF C0               ret nz
  53+ 9DB0
  54+ 9DB0 21 35 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DB3 35               dec (hl)
  56+ 9DB4 C0               ret nz
  57+ 9DB5
  58+ 9DB5              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DB5              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DB5              ; Analiza (Cola_de_desplazamiento).
  61+ 9DB5
  62+ 9DB5 3A 38 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DB8 A7               and a
  64+ 9DB9 CC AC 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DBC 28 30            jr z,Reinicia_el_movimiento
  66+ 9DBE
  67+ 9DBE FE FF            cp $ff
  68+ 9DC0 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DC2
  70+ 9DC2 FE FE            cp $fe
  71+ 9DC4 CC 31 9E         call z,Fijamos_bucle
  72+ 9DC7 28 25            jr z,Reinicia_el_movimiento
  73+ 9DC9
  74+ 9DC9 FE FD            cp $fd
  75+ 9DCB 20 11            jr nz,1F
  76+ 9DCD
  77+ 9DCD              ; ---
  78+ 9DCD              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DCD
  80+ 9DCD 3A 08 8C         ld a,(Ctrl_2)
  81+ 9DD0 CB 5F            bit 3,a
  82+ 9DD2 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DD4
  84+ 9DD4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DD4
  86+ 9DD4 21 08 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DD7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DD9
  89+ 9DD9 CD 42 9E         call Inicia_Repetimos_movimiento
  90+ 9DDC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DDE              ; ---
  92+ 9DDE
  93+ 9DDE FE 01        1 cp 1
  94+ 9DE0 CA 1B 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DE3
  96+ 9DE3 3D               dec a
  97+ 9DE4 32 38 8C         ld (Cola_de_desplazamiento),a
  98+ 9DE7
  99+ 9DE7 3A 36 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DEA 32 35 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DED              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DED C9               ret
 103+ 9DEE
 104+ 9DEE              Reinicia_el_movimiento
 105+ 9DEE
 106+ 9DEE 3A 08 8C         ld a,(Ctrl_2)
 107+ 9DF1 CB 5F            bit 3,a
 108+ 9DF3 28 1B            jr z,2F
 109+ 9DF5
 110+ 9DF5              ; (Cola_de_desplazamiento)="254".
 111+ 9DF5
 112+ 9DF5 21 37 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DF8 35               dec (hl)
 114+ 9DF9 20 15            jr nz,2F
 115+ 9DFB
 116+ 9DFB              ; Fin de las repeticiones del último movimiento.
 117+ 9DFB
 118+ 9DFB 21 08 8C         ld hl,Ctrl_2
 119+ 9DFE CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E00
 121+ 9E00 2A 2F 8C         ld hl,(Puntero_mov)
 122+ 9E03 23               inc hl
 123+ 9E04 23               inc hl
 124+ 9E05 23               inc hl
 125+ 9E06 22 2F 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E09              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E09 7E               ld a,(hl)
 128+ 9E0A 32 38 8C         ld (Cola_de_desplazamiento),a
 129+ 9E0D
 130+ 9E0D C3 B5 9D         jp Cola
 131+ 9E10
 132+ 9E10 CD 4D 9E     2 call Inicia_Puntero_mov
 133+ 9E13
 134+ 9E13 21 08 8C         ld hl,Ctrl_2
 135+ 9E16 CB 96            res 2,(hl)
 136+ 9E18
 137+ 9E18 C3 85 9D         jp Movimiento
 138+ 9E1B
 139+ 9E1B              Siguiente_desplazamiento
 140+ 9E1B
 141+ 9E1B              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E1B              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E1B
 144+ 9E1B 21 08 8C         ld hl,Ctrl_2
 145+ 9E1E CB 96            res 2,(hl)
 146+ 9E20
 147+ 9E20 2A 2F 8C         ld hl,(Puntero_mov)
 148+ 9E23 23               inc hl
 149+ 9E24 23               inc hl
 150+ 9E25 22 2F 8C         ld (Puntero_mov),hl
 151+ 9E28
 152+ 9E28 7E               ld a,(hl)
 153+ 9E29 A7               and a
 154+ 9E2A CC AC 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E2D CA EE 9D         jp z,Reinicia_el_movimiento
 156+ 9E30
 157+ 9E30 C9               ret
 158+ 9E31
 159+ 9E31              ; Subrutinas -----------------------------------------
 160+ 9E31              ; ---------- --------- --------- ---------- ----------
 161+ 9E31              ;
 162+ 9E31              ;   24/07/23
 163+ 9E31              ;
 164+ 9E31              ;   Fijamos_bucle
 165+ 9E31              ;
 166+ 9E31              ;
 167+ 9E31
 168+ 9E31              Fijamos_bucle
 169+ 9E31
 170+ 9E31 3A 33 8C         ld a,(Incrementa_puntero)
 171+ 9E34 3C               inc a
 172+ 9E35 32 34 8C         ld (Incrementa_puntero_backup),a
 173+ 9E38
 174+ 9E38 CD AC 9E         call Incrementa_Puntero_indice_mov
 175+ 9E3B 2A 2D 8C         ld hl,(Puntero_indice_mov)
 176+ 9E3E 22 31 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E41 C9               ret
 178+ 9E42
 179+ 9E42              ; ---------- --------- --------- ---------- ----------
 180+ 9E42              ;
 181+ 9E42              ;   07/7/23
 182+ 9E42              ;
 183+ 9E42              ;   Inicia_Repetimos_movimiento
 184+ 9E42              ;
 185+ 9E42              ;
 186+ 9E42
 187+ 9E42              Inicia_Repetimos_movimiento
 188+ 9E42
 189+ 9E42              ; Iniciamos (Repetimos_movimiento).
 190+ 9E42
 191+ 9E42 DD 2A 2F 8C      ld ix,(Puntero_mov)
 192+ 9E46 DD 7E 02         ld a,(ix+2)
 193+ 9E49 32 37 8C         ld (Repetimos_movimiento),a
 194+ 9E4C
 195+ 9E4C C9               ret
 196+ 9E4D
 197+ 9E4D              ; ---------- --------- --------- ---------- ----------
 198+ 9E4D              ;
 199+ 9E4D              ;   26/6/23
 200+ 9E4D              ;
 201+ 9E4D              ;   Inicia_Puntero_mov
 202+ 9E4D              ;
 203+ 9E4D              ;
 204+ 9E4D
 205+ 9E4D 2A 2D 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E50 CD FF 90         call Extrae_address
 207+ 9E53 22 2F 8C         ld (Puntero_mov),hl
 208+ 9E56 C9               ret
 209+ 9E57
 210+ 9E57              ; ---------- --------- --------- ---------- ----------
 211+ 9E57              ;
 212+ 9E57              ;   27/06/23
 213+ 9E57              ;
 214+ 9E57              ;   Aplica_movimiento.
 215+ 9E57
 216+ 9E57              Aplica_desplazamiento
 217+ 9E57
 218+ 9E57              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E57
 220+ 9E57 2A 2F 8C         ld hl, (Puntero_mov)
 221+ 9E5A
 222+ 9E5A 7E               ld a,(hl)
 223+ 9E5B E6 F0            and $f0
 224+ 9E5D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E5E
 226+ 9E5E CB 7E            bit 7,(hl)
 227+ 9E60 28 03            jr z,1F
 228+ 9E62 CD 39 9A         call Mov_up
 229+ 9E65 2A 2F 8C     1 ld hl, (Puntero_mov)
 230+ 9E68 CB 76            bit 6,(hl)
 231+ 9E6A 28 03            jr z,2F
 232+ 9E6C CD 00 9A         call Mov_down
 233+ 9E6F
 234+ 9E6F              ; Se ha aplicado reinicio ???
 235+ 9E6F              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E6F
 237+ 9E6F              ;    ld a,(Ctrl_3)
 238+ 9E6F              ;    bit 1,a
 239+ 9E6F              ;    ret nz
 240+ 9E6F
 241+ 9E6F 2A 2F 8C     2 ld hl, (Puntero_mov)
 242+ 9E72 CB 6E            bit 5,(hl)
 243+ 9E74 28 03            jr z,3F
 244+ 9E76 CD 9F 9B         call Mov_left
 245+ 9E79 2A 2F 8C     3 ld hl, (Puntero_mov)
 246+ 9E7C CB 66            bit 4,(hl)
 247+ 9E7E C8               ret z
 248+ 9E7F CD 7C 9A         call Mov_right
 249+ 9E82 C9               ret
 250+ 9E83
 251+ 9E83              ; ---------- --------- --------- ---------- ----------
 252+ 9E83              ;
 253+ 9E83              ;   26/06/23
 254+ 9E83              ;
 255+ 9E83              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E83
 257+ 9E83              Ajusta_velocidad_desplazamiento
 258+ 9E83
 259+ 9E83              ; 1er byte de la cadena de movimiento.
 260+ 9E83              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E83
 262+ 9E83 CD A1 9E         call Extrae_nibble_alto
 263+ 9E86
 264+ 9E86 32 23 8C         ld (Vel_up),a
 265+ 9E89 79               ld a,c
 266+ 9E8A E6 0F            and $0f
 267+ 9E8C 32 24 8C         ld (Vel_down),a
 268+ 9E8F
 269+ 9E8F              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E8F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E8F
 272+ 9E8F 23               inc hl
 273+ 9E90 CD A1 9E         call Extrae_nibble_alto
 274+ 9E93
 275+ 9E93 32 21 8C         ld (Vel_left),a
 276+ 9E96 79               ld a,c
 277+ 9E97 E6 0F            and $0f
 278+ 9E99 32 22 8C         ld (Vel_right),a
 279+ 9E9C
 280+ 9E9C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E9C
 282+ 9E9C 23               inc hl
 283+ 9E9D 22 2F 8C         ld (Puntero_mov),hl
 284+ 9EA0 C9               ret
 285+ 9EA1
 286+ 9EA1 06 04        Extrae_nibble_alto ld b,4
 287+ 9EA3 7E               ld a,(hl)
 288+ 9EA4 4F               ld c,a
 289+ 9EA5 E6 F0            and $f0
 290+ 9EA7 CB 3F        1 srl a
 291+ 9EA9 10 FC            djnz 1B
 292+ 9EAB C9               ret
 293+ 9EAC
 294+ 9EAC              ; ---------- --------- --------- ---------- ----------
 295+ 9EAC              ;
 296+ 9EAC              ;   5/7/23
 297+ 9EAC              ;
 298+ 9EAC              ;   Incrementa_Puntero_indice_mov
 299+ 9EAC
 300+ 9EAC              Incrementa_Puntero_indice_mov
 301+ 9EAC
 302+ 9EAC 21 33 8C         ld hl,Incrementa_puntero
 303+ 9EAF 34               inc (hl)
 304+ 9EB0
 305+ 9EB0 2A 2D 8C         ld hl,(Puntero_indice_mov)
 306+ 9EB3 01 02 00         ld bc,2
 307+ 9EB6 A7               and a
 308+ 9EB7 09               add hl,bc
 309+ 9EB8 22 2D 8C         ld (Puntero_indice_mov),hl
 310+ 9EBB
 311+ 9EBB 7E               ld a,(hl)
 312+ 9EBC A7               and a
 313+ 9EBD
 314+ 9EBD              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EBD
 316+ 9EBD              ;    jr z,$
 317+ 9EBD
 318+ 9EBD              ;! Reinicia el Patrón de movimiento.
 319+ 9EBD
 320+ 9EBD CC C2 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EC0
 322+ 9EC0 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EC1
 324+ 9EC1 C9               ret
 325+ 9EC2
 326+ 9EC2              ; ---------- --------- --------- ---------- ----------
 327+ 9EC2              ;
 328+ 9EC2              ;   15/01/24
 329+ 9EC2              ;
 330+ 9EC2              ;   Inicializa_Puntero_indice_mov
 331+ 9EC2
 332+ 9EC2              Inicializa_Puntero_indice_mov_2
 333+ 9EC2
 334+ 9EC2              ; Existe etiqueta de bucle principal???
 335+ 9EC2
 336+ 9EC2 2A 31 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EC5 24               inc h
 338+ 9EC6 25               dec h
 339+ 9EC7 28 05            jr z,2F
 340+ 9EC9
 341+ 9EC9 22 2D 8C         ld (Puntero_indice_mov),hl
 342+ 9ECC 18 14            jr 3F
 343+ 9ECE
 344+ 9ECE              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ECE
 346+ 9ECE 3A 33 8C     2 ld a,(Incrementa_puntero)
 347+ 9ED1 47               ld b,a
 348+ 9ED2
 349+ 9ED2 2A 2D 8C         ld hl,(Puntero_indice_mov)
 350+ 9ED5 2B           1 dec hl
 351+ 9ED6 2B               dec hl
 352+ 9ED7 10 FC            djnz 1B
 353+ 9ED9 22 2D 8C         ld (Puntero_indice_mov),hl
 354+ 9EDC
 355+ 9EDC AF               xor a
 356+ 9EDD 32 33 8C         ld (Incrementa_puntero),a
 357+ 9EE0 18 06            jr 4F
 358+ 9EE2
 359+ 9EE2 3A 34 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9EE5 32 33 8C         ld (Incrementa_puntero),a
 361+ 9EE8 C9           4 ret
 362+ 9EE9
 363+ 9EE9              ; ----------------------------------------------------------------------
 364+ 9EE9              ;
 365+ 9EE9              ;   30/01/24
 366+ 9EE9              ;
 367+ 9EE9              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EE9
 369+ 9EE9 3A FC 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EEC CD 3A 94         call Calcula_salto_en_BC
 371+ 9EEF 21 25 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EF2 A7               and a
 373+ 9EF3 ED 4A            adc hl,bc
 374+ 9EF5 C9               ret
 375+ 9EF6
 376+ 9EF6              ; ----------------------------------------------------------------------
 377+ 9EF6              ;
 378+ 9EF6              ;   30/01/24
 379+ 9EF6              ;
 380+ 9EF6              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EF6              ;
 382+ 9EF6              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EF6
 384+ 9EF6 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EF7 23               inc hl
 386+ 9EF8 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EF9 69               ld l,c
 388+ 9EFA 60               ld h,b
 389+ 9EFB 22 05 8C         ld (Contador_de_mov_masticados),hl
 390+ 9EFE C9               ret
 391+ 9EFF
# file closed: Movimiento.asm
2066  9EFF              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EFF              ; --------------------------------------------------------------------------------------
   2+ 9EFF              ;
   3+ 9EFF              ;   25/10/24
   4+ 9EFF              ;
   5+ 9EFF
   6+ 9EFF              Pinta_disparos_Entidades
   7+ 9EFF
   8+ 9EFF ED 73 4B 8C      ld (Stack),sp
   9+ 9F03 ED 7B 5D 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F07
  11+ 9F07 3E 02            ld a,2
  12+ 9F09 08               ex af,af
  13+ 9F0A
  14+ 9F0A 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F0C              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F0C              ;                                     _ No encontraría "0".
  17+ 9F0C FD E1        4 pop iy
  18+ 9F0E D1               pop de                          ; 1er .db IYL
  19+ 9F0F              ;                                   ; 2º  .db IYH
  20+ 9F0F              ;                                   ; 3er .db E.
  21+ 9F0F              ;   Album vacío ???
  22+ 9F0F
  23+ 9F0F FD 7D            ld a,iyl
  24+ 9F11 FD 84            add iyh
  25+ 9F13 83               add e
  26+ 9F14 28 1F            jr z,1F
  27+ 9F16
  28+ 9F16              ;   Imprime album, (contiene datos).
  29+ 9F16
  30+ 9F16 3B               dec sp
  31+ 9F17
  32+ 9F17 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F18
  34+ 9F18              ; Imprime el 1er scanline del disparo.
  35+ 9F18
  36+ 9F18 FD 7D            ld a,iyl
  37+ 9F1A AE               xor (hl)
  38+ 9F1B 77               ld (hl),a
  39+ 9F1C
  40+ 9F1C 2C               inc l
  41+ 9F1D
  42+ 9F1D FD 7C            ld a,iyh
  43+ 9F1F AE               xor (hl)
  44+ 9F20 77               ld (hl),a
  45+ 9F21
  46+ 9F21 2C               inc l
  47+ 9F22
  48+ 9F22 7B               ld a,e
  49+ 9F23 AE               xor (hl)
  50+ 9F24 77               ld (hl),a
  51+ 9F25
  52+ 9F25              ; Imprime el 2º scanline del disparo.
  53+ 9F25
  54+ 9F25 E1               pop hl
  55+ 9F26
  56+ 9F26 FD 7D            ld a,iyl
  57+ 9F28 AE               xor (hl)
  58+ 9F29 77               ld (hl),a
  59+ 9F2A
  60+ 9F2A 2C               inc l
  61+ 9F2B
  62+ 9F2B FD 7C            ld a,iyh
  63+ 9F2D AE               xor (hl)
  64+ 9F2E 77               ld (hl),a
  65+ 9F2F
  66+ 9F2F 2C               inc l
  67+ 9F30
  68+ 9F30 7B               ld a,e
  69+ 9F31 AE               xor (hl)
  70+ 9F32 77               ld (hl),a
  71+ 9F33
  72+ 9F33 10 D7            djnz 4B
  73+ 9F35
  74+ 9F35 08           1 ex af,af
  75+ 9F36 3D               dec a
  76+ 9F37 20 05            jr nz,2F
  77+ 9F39
  78+ 9F39 ED 7B 4B 8C      ld sp,(Stack)
  79+ 9F3D C9               ret
  80+ 9F3E
  81+ 9F3E ED 7B 5B 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F42 08               ex af,af
  83+ 9F43 18 C5            jr 3B
  84+ 9F45
  85+ 9F45              ; --------------------------------------------------------------------------------------
  86+ 9F45              ;
  87+ 9F45              ;   30/10/24
  88+ 9F45              ;
  89+ 9F45
  90+ 9F45              Motor_de_disparos_entidades
  91+ 9F45
  92+ 9F45 3A 63 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F48 FE 07            cp 7
  94+ 9F4A C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F4B
  96+ 9F4B 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F4D 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F50
  99+ 9F50 CD FF 90     1 call Extrae_address
 100+ 9F53 1C               inc e
 101+ 9F54 1C               inc e
 102+ 9F55 ED 53 76 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F59
 104+ 9F59               ; Caja vacía ???
 105+ 9F59
 106+ 9F59 2D               dec l
 107+ 9F5A 7E               ld a,(hl)
 108+ 9F5B A7               and a
 109+ 9F5C 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F5E
 111+ 9F5E              ; --- Trabajamos con caja:
 112+ 9F5E
 113+ 9F5E 2C               inc l
 114+ 9F5F
 115+ 9F5F              ; --- Existe posibilidad de impacto ???
 116+ 9F5F
 117+ 9F5F CB 46            bit 0,(hl)
 118+ 9F61 C4 A1 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F64 20 37            jr nz,3F
 120+ 9F66
 121+ 9F66 CD 28 A0         call Rota_disparo_si_procede
 122+ 9F69
 123+ 9F69              ; ------------------------------------------------------------
 124+ 9F69
 125+ 9F69 2D               dec l
 126+ 9F6A 2D               dec l
 127+ 9F6B
 128+ 9F6B CD FF 90         call Extrae_address
 129+ 9F6E
 130+ 9F6E              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F6E              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F6E
 133+ 9F6E 3A 75 8C         ld a,(Ctrl_5)
 134+ 9F71 CB 57            bit 2,a
 135+ 9F73 28 09            jr z,4F
 136+ 9F75
 137+ 9F75 CB 97            res 2,a
 138+ 9F77 32 75 8C         ld (Ctrl_5),a
 139+ 9F7A 2C               inc l
 140+ 9F7B 2C               inc l
 141+ 9F7C 18 0C            jr 5F
 142+ 9F7E
 143+ 9F7E CB 5F        4 bit 3,a
 144+ 9F80 28 08            jr z,5F
 145+ 9F82
 146+ 9F82 CB 9F            res 3,a
 147+ 9F84 32 75 8C         ld (Ctrl_5),a
 148+ 9F87 2D               dec l
 149+ 9F88 2D               dec l
 150+ 9F89 2D               dec l
 151+ 9F8A
 152+ 9F8A              ; ---------------------------------------------------------------------
 153+ 9F8A
 154+ 9F8A              ;! Velocidad del disparo de entidades.
 155+ 9F8A
 156+ 9F8A CD BA 99     5 call NextScan
 157+ 9F8D CD BA 99         call NextScan
 158+ 9F90
 159+ 9F90              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9F90
 161+ 9F90 CD 05 A0         call Fin_de_disparo_de_entidad
 162+ 9F93
 163+ 9F93 EB               ex de,hl
 164+ 9F94
 165+ 9F94 73               ld (hl),e
 166+ 9F95 23               inc hl
 167+ 9F96 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9F97
 169+ 9F97 2A 76 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9F9A 18 02            jr 2F
 171+ 9F9C
 172+ 9F9C C9               ret
 173+ 9F9D
 174+ 9F9D EB           3 ex de,hl
 175+ 9F9E 10 B0        2 djnz 1B
 176+ 9FA0
 177+ 9FA0 C9               ret
 178+ 9FA1
 179+ 9FA1              ; ------------- ------------- ------------
 180+ 9FA1              ;
 181+ 9FA1              ;   1/11/24
 182+ 9FA1
 183+ 9FA1              Comprueba_impacto_con_Amadeus
 184+ 9FA1
 185+ 9FA1              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FA1              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FA1
 188+ 9FA1              ;   Modificamos registros, así que guardamos ...
 189+ 9FA1
 190+ 9FA1 C5               push bc
 191+ 9FA2 E5               push hl
 192+ 9FA3 D5               push de
 193+ 9FA4
 194+ 9FA4 2D               dec l
 195+ 9FA5 2D               dec l
 196+ 9FA6
 197+ 9FA6 CD FF 90         call Extrae_address
 198+ 9FA9
 199+ 9FA9 3A BA 89         ld a,(CX_Amadeus)
 200+ 9FAC 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FAD
 202+ 9FAD 7D               ld a,l
 203+ 9FAE E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FB0
 205+ 9FB0 06 03            ld b,3
 206+ 9FB2
 207+ 9FB2 B9           1 cp c
 208+ 9FB3 28 15            jr z,Coincidencia
 209+ 9FB5 0C               inc c
 210+ 9FB6 10 FA            djnz 1B
 211+ 9FB8
 212+ 9FB8 0D               dec c
 213+ 9FB9 0D               dec c
 214+ 9FBA 0D               dec c
 215+ 9FBB
 216+ 9FBB 3C               inc a
 217+ 9FBC B9               cp c
 218+ 9FBD 28 0B            jr z,Coincidencia
 219+ 9FBF
 220+ 9FBF 3C               inc a
 221+ 9FC0 B9               cp c
 222+ 9FC1 28 07            jr z,Coincidencia
 223+ 9FC3
 224+ 9FC3 D1           2 pop de
 225+ 9FC4 E1               pop hl
 226+ 9FC5 C1               pop bc
 227+ 9FC6
 228+ 9FC6              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FC6
 230+ 9FC6 CB 86            res 0,(hl)
 231+ 9FC8 AF               xor a                       ; Z before RET.
 232+ 9FC9 C9               ret
 233+ 9FCA
 234+ 9FCA              Coincidencia
 235+ 9FCA
 236+ 9FCA              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FCA              ;   Existe posibilidad de impacto.
 238+ 9FCA              ;   Vamos a averiguarlo ...
 239+ 9FCA
 240+ 9FCA 1D               dec e
 241+ 9FCB 1D               dec e
 242+ 9FCC 1D               dec e
 243+ 9FCD
 244+ 9FCD              ; DE en Puntero_objeto del disparo.
 245+ 9FCD              ; HL en Puntero_de_impresión del disparo.
 246+ 9FCD
 247+ 9FCD              ; Comparador:
 248+ 9FCD
 249+ 9FCD 06 03            ld b,3
 250+ 9FCF
 251+ 9FCF 1A           3 ld a,(de)
 252+ 9FD0 4F               ld c,a
 253+ 9FD1 A6               and (hl)
 254+ 9FD2 B9               cp c
 255+ 9FD3 20 06            jr nz,Amadeus_impactado
 256+ 9FD5
 257+ 9FD5 2C               inc l
 258+ 9FD6 1C               inc e
 259+ 9FD7
 260+ 9FD7 10 F6            djnz 3B
 261+ 9FD9
 262+ 9FD9 18 E8            jr 2B
 263+ 9FDB
 264+ 9FDB              Amadeus_impactado
 265+ 9FDB
 266+ 9FDB              ; Borramos disparo.
 267+ 9FDB
 268+ 9FDB D1               pop de
 269+ 9FDC E1               pop hl
 270+ 9FDD
 271+ 9FDD E5               push hl
 272+ 9FDE D5               push de
 273+ 9FDF
 274+ 9FDF CD 93 A0         call Borra_6_bytes
 275+ 9FE2
 276+ 9FE2 21 63 8C         ld hl,Numero_de_disparos_de_entidades
 277+ 9FE5 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ 9FE6
 279+ 9FE6              ; Iniciamos el proceso de explosión de Amadeus.
 280+ 9FE6
 281+ 9FE6 21 BD 89         ld hl,Impacto_Amadeus
 282+ 9FE9 36 01            ld (hl),1
 283+ 9FEB
 284+ 9FEB              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ 9FEB              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ 9FEB
 287+ 9FEB 3A BE 89         ld a,(p.imp.amadeus)
 288+ 9FEE FE DE            cp $de
 289+ 9FF0 20 04            jr nz,1F
 290+ 9FF2
 291+ 9FF2 3D               dec a
 292+ 9FF3 32 BE 89         ld (p.imp.amadeus),a
 293+ 9FF6
 294+ 9FF6              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ 9FF6
 296+ 9FF6 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ 9FF9 21 C0 89         ld hl,Pamm_Amadeus
 298+ 9FFC
 299+ 9FFC 73               ld (hl),e
 300+ 9FFD 23               inc hl
 301+ 9FFE 72               ld (hl),d
 302+ 9FFF
 303+ 9FFF D1               pop de
 304+ A000 E1               pop hl
 305+ A001 C1               pop bc
 306+ A002
 307+ A002 AF               xor a
 308+ A003 3C               inc a               ; NZ before RET.
 309+ A004 C9               ret
 310+ A005
 311+ A005              ; ------------- ------------- ------------
 312+ A005              ;
 313+ A005              ;   31/10/24
 314+ A005
 315+ A005              Fin_de_disparo_de_entidad
 316+ A005
 317+ A005              ; Estamos en zona de Amadeus ??
 318+ A005
 319+ A005 7C               ld a,h
 320+ A006 FE 54            cp $54
 321+ A008 38 0D            jr c,1F
 322+ A00A
 323+ A00A D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A00B
 325+ A00B 5D               ld e,l
 326+ A00C 54               ld d,h
 327+ A00D
 328+ A00D 21 E0 57         ld hl,$57e0
 329+ A010 ED 52            sbc hl,de
 330+ A012
 331+ A012 38 6F            jr c,Elimina_disparo_entidad
 332+ A014
 333+ A014 6B               ld l,e
 334+ A015 62               ld h,d
 335+ A016
 336+ A016 D1               pop de
 337+ A017
 338+ A017 7C           1 ld a,h
 339+ A018 FE 50            cp $50
 340+ A01A D8               ret c
 341+ A01B
 342+ A01B 7D               ld a,l
 343+ A01C FE C0            cp $c0
 344+ A01E D8               ret c
 345+ A01F
 346+ A01F              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A01F              ; Así podremos comprobar si hay colisión más adelante.
 348+ A01F
 349+ A01F 1C               inc e
 350+ A020 1C               inc e
 351+ A021
 352+ A021 EB               ex de,hl
 353+ A022 CB C6            set 0,(hl)
 354+ A024 EB               ex de,hl
 355+ A025
 356+ A025 1D               dec e
 357+ A026 1D               dec e
 358+ A027
 359+ A027 C9               ret
 360+ A028
 361+ A028              ; ----------------------------------------------------------
 362+ A028              ;
 363+ A028              ;   08/10/24
 364+ A028
 365+ A028              ;   Estructura de un disparo de entidades.
 366+ A028
 367+ A028              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A028              ; 	defw 0											; Puntero de impresión.
 369+ A028              ;	defw 0											; Control.
 370+ A028
 371+ A028              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A028              ;   _de la entidad en el momento de disparar.
 373+ A028
 374+ A028              ;   El byte alto muestra la siguiente información:
 375+ A028              ;
 376+ A028              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A028              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A028              ;
 379+ A028              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A028              ;
 381+ A028              ;                        10xx ..... Izquierda.
 382+ A028              ;                        01xx ..... Derecha.
 383+ A028              ;                        00xx ..... Recto.
 384+ A028
 385+ A028              Rota_disparo_si_procede
 386+ A028
 387+ A028              ;   Nos situamos en el byte alto de (Control).
 388+ A028
 389+ A028 CB 76            bit 6,(hl)
 390+ A02A 20 2D            jr nz,Rota_a_derecha
 391+ A02C CB 7E            bit 7,(hl)
 392+ A02E C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A02F
 394+ A02F              Rota_a_izq
 395+ A02F
 396+ A02F E5               push hl
 397+ A030
 398+ A030 7D               ld a,l
 399+ A031 D6 05            sub 5
 400+ A033 6F               ld l,a
 401+ A034
 402+ A034 E5               push hl
 403+ A035 FD E1            pop iy
 404+ A037
 405+ A037 A7               and a
 406+ A038
 407+ A038 FD CB 02 16      rl (iy+02)
 408+ A03C FD CB 01 16      rl (iy+01)
 409+ A040 FD CB 00 16      rl (iy+00)
 410+ A044
 411+ A044 30 3B            jr nc,Exit
 412+ A046
 413+ A046              ; Desplazamiento completo hasta Carry.
 414+ A046              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A046
 416+ A046 FD 36 02 03      ld (iy+02),$03
 417+ A04A FD 36 01 00      ld (iy+01),$00
 418+ A04E FD 36 00 00      ld (iy+00),$00
 419+ A052
 420+ A052 21 75 8C         ld hl,Ctrl_5
 421+ A055 CB DE            set 3,(hl)
 422+ A057
 423+ A057 18 28            jr Exit
 424+ A059
 425+ A059              Rota_a_derecha
 426+ A059
 427+ A059 E5               push hl
 428+ A05A
 429+ A05A 7D               ld a,l
 430+ A05B D6 05            sub 5
 431+ A05D 6F               ld l,a
 432+ A05E
 433+ A05E E5               push hl
 434+ A05F FD E1            pop iy
 435+ A061
 436+ A061 A7               and a
 437+ A062
 438+ A062 FD CB 00 1E      rr (iy+00)
 439+ A066 FD CB 01 1E      rr (iy+01)
 440+ A06A FD CB 02 1E      rr (iy+02)
 441+ A06E
 442+ A06E 30 11            jr nc,Exit
 443+ A070
 444+ A070              ; Desplazamiento completo hasta Carry.
 445+ A070              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A070
 447+ A070 FD 36 00 01      ld (iy+00),$01
 448+ A074 FD 36 01 80      ld (iy+01),$80
 449+ A078 FD 36 02 00      ld (iy+02),$00
 450+ A07C
 451+ A07C 21 75 8C         ld hl,Ctrl_5
 452+ A07F CB D6            set 2,(hl)
 453+ A081
 454+ A081 E1           Exit pop hl
 455+ A082 C9               ret
 456+ A083
 457+ A083              ; ------------ ----------- ------------
 458+ A083              ;
 459+ A083              ;   25/9/24
 460+ A083
 461+ A083              Elimina_disparo_entidad
 462+ A083
 463+ A083 21 63 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A086 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A087
 466+ A087 E1               pop hl
 467+ A088 E5               push hl
 468+ A089
 469+ A089 2C               inc l
 470+ A08A 2C               inc l
 471+ A08B
 472+ A08B CD 93 A0         call Borra_6_bytes
 473+ A08E
 474+ A08E D1               pop de
 475+ A08F
 476+ A08F 21 00 00         ld hl,0
 477+ A092
 478+ A092 C9               ret
 479+ A093
 480+ A093              ; ----- ----- ----- ----- -----
 481+ A093
 482+ A093              Borra_6_bytes
 483+ A093
 484+ A093 16 06            ld d,6                                                    ; Contador
 485+ A095 AF               xor a                                                     ; Borrador
 486+ A096 77           1 ld (hl),a
 487+ A097 2D               dec l
 488+ A098 15               dec d
 489+ A099 20 FB            jr nz,1B
 490+ A09B
 491+ A09B C9               ret
 492+ A09C
 493+ A09C              ; --------------------------------------------------------------------------------------
 494+ A09C              ;
 495+ A09C              ;   12/10/24
 496+ A09C              ;
 497+ A09C
 498+ A09C              Genera_datos_de_impresion_disparos_Entidades
 499+ A09C
 500+ A09C 3E 07            ld a,7
 501+ A09E 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A09F
 503+ A09F              ; ---------------
 504+ A09F
 505+ A09F              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A09F
 507+ A09F 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0A2
 509+ A0A2 CD FF 90     1 call Extrae_address
 510+ A0A5
 511+ A0A5 13               inc de
 512+ A0A6 13               inc de
 513+ A0A7
 514+ A0A7 ED 53 76 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0AB
 516+ A0AB 2D               dec l
 517+ A0AC 7E               ld a,(hl)
 518+ A0AD A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0AE 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0B0
 521+ A0B0              ; ----- ----- ----- -----
 522+ A0B0
 523+ A0B0 2D               dec l
 524+ A0B1 CD FF 90         call Extrae_address
 525+ A0B4 E5               push hl
 526+ A0B5
 527+ A0B5 1D               dec e
 528+ A0B6
 529+ A0B6 EB               ex de,hl
 530+ A0B7
 531+ A0B7 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0B8 2D               dec l
 533+ A0B9 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0BA 2D               dec l
 535+ A0BB 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0BC
 537+ A0BC E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0BD
 539+ A0BD              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0BD
 541+ A0BD FD 2A 5F 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0C1 FD 73 00         ld (iy+0),e
 543+ A0C4 FD 70 01         ld (iy+1),b
 544+ A0C7 FD 71 02         ld (iy+2),c
 545+ A0CA
 546+ A0CA FD 75 03         ld (iy+3),l
 547+ A0CD FD 74 04         ld (iy+4),h
 548+ A0D0
 549+ A0D0 CD BA 99         call NextScan
 550+ A0D3
 551+ A0D3 FD 75 05         ld (iy+5),l
 552+ A0D6 FD 74 06         ld (iy+6),h
 553+ A0D9
 554+ A0D9 FD E5            push iy
 555+ A0DB E1               pop hl
 556+ A0DC
 557+ A0DC 3E 07            ld a,7
 558+ A0DE 85               add l
 559+ A0DF 6F               ld l,a
 560+ A0E0
 561+ A0E0 22 5F 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A0E3
 563+ A0E3              ; ----- ----- ----- -----
 564+ A0E3
 565+ A0E3              Situa_en_siguiente_caja
 566+ A0E3
 567+ A0E3 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A0E4 3D               dec a
 569+ A0E5 C8               ret z
 570+ A0E6
 571+ A0E6 08               ex af,af
 572+ A0E7 2A 76 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A0EA 18 B6            jr 1B
 574+ A0EC
 575+ A0EC              ; --------------------------------------------------------------------------------------
 576+ A0EC              ;
 577+ A0EC              ;   12/10/24
 578+ A0EC              ;
 579+ A0EC
 580+ A0EC              Genera_disparo_de_entidad_maldosa
 581+ A0EC
 582+ A0EC              ;   Estructura de un disparo de entidades.
 583+ A0EC
 584+ A0EC              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A0EC              ; 	defw 0											; Puntero de impresión.
 586+ A0EC              ;	defw 0											; Control.
 587+ A0EC
 588+ A0EC              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A0EC              ;   _de la entidad en el momento de disparar.
 590+ A0EC
 591+ A0EC              ;   El byte de control muestra la siguiente información:
 592+ A0EC
 593+ A0EC              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A0EC              ;
 595+ A0EC              ;                        10xx ..... Izquierda.
 596+ A0EC              ;                        01xx ..... Derecha.
 597+ A0EC              ;                        00xx ..... Recto.
 598+ A0EC
 599+ A0EC              ;*  Exclusiones.
 600+ A0EC
 601+ A0EC              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A0EC              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A0EC
 604+ A0EC 3A 63 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A0EF A7               and a
 606+ A0F0 C8               ret z
 607+ A0F1
 608+ A0F1 3A FE 8B         ld a,(Coordenada_y)
 609+ A0F4 A7               and a
 610+ A0F5 C8               ret z
 611+ A0F6
 612+ A0F6 3D               dec a
 613+ A0F7 C8               ret z
 614+ A0F8
 615+ A0F8 FE 10            cp 16
 616+ A0FA D0               ret nc
 617+ A0FB
 618+ A0FB              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A0FB              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A0FB              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A0FB
 622+ A0FB 21 65 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A0FE 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A0FF
 625+ A0FF              ;   Decrementa el numero de disparos de entidades.
 626+ A0FF
 627+ A0FF 21 63 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A102 35               dec (hl)
 629+ A103
 630+ A103 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A106
 632+ A106 CD FF 90     1 call Extrae_address
 633+ A109
 634+ A109 13               inc de
 635+ A10A 13               inc de
 636+ A10B
 637+ A10B ED 53 76 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A10F
 639+ A10F              ;   Comprobamos si la caja está vacía.
 640+ A10F
 641+ A10F 2D               dec l
 642+ A110 7E               ld a,(hl)
 643+ A111 A7               and a
 644+ A112 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A114 2C               inc l
 646+ A115
 647+ A115              ;   Caja vacía, vamos a generar un disparo.
 648+ A115              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A115
 650+ A115 CD 36 A1         call Genera_byte_inclinacion
 651+ A118
 652+ A118 7E               ld a,(hl)
 653+ A119 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A11A
 655+ A11A 2D               dec l
 656+ A11B
 657+ A11B CD 52 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A11E
 659+ A11E 70               ld (hl),b
 660+ A11F 2D               dec l
 661+ A120 71               ld (hl),c
 662+ A121
 663+ A121 2D               dec l
 664+ A122
 665+ A122              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A122
 667+ A122 FD 7E 02         ld a,(iy+02)
 668+ A125 77               ld (hl),a
 669+ A126 2D               dec l
 670+ A127
 671+ A127 FD 7E 01         ld a,(iy+01)
 672+ A12A 77               ld (hl),a
 673+ A12B 2D               dec l
 674+ A12C
 675+ A12C FD 7E 00         ld a,(iy+00)
 676+ A12F 77               ld (hl),a
 677+ A130
 678+ A130 C9               ret
 679+ A131
 680+ A131              ;   --- --- ---
 681+ A131
 682+ A131              Situa_en_siguiente_disparo
 683+ A131
 684+ A131 2A 76 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A134 18 D0            jr 1B
 686+ A136
 687+ A136              ; --------------------------------------------------------------------------------------
 688+ A136              ;
 689+ A136              ;   09/10/24
 690+ A136              ;
 691+ A136
 692+ A136              Genera_byte_inclinacion
 693+ A136
 694+ A136              ; Determina tendencia del disparo.
 695+ A136
 696+ A136 3A BA 89         ld a,(CX_Amadeus)
 697+ A139 47               ld b,a
 698+ A13A 3A FD 8B         ld a,(Coordenada_X)
 699+ A13D 90               sub b
 700+ A13E 38 07            jr c,Disparo_a_derecha
 701+ A140
 702+ A140 FE 06        Disparo_a_izquierda cp 6
 703+ A142
 704+ A142 D8               ret c
 705+ A143 C8               ret z
 706+ A144
 707+ A144 CB FE            set 7,(hl)
 708+ A146 C9               ret
 709+ A147
 710+ A147 47           Disparo_a_derecha ld b,a
 711+ A148 3E FF            ld a,$ff
 712+ A14A 90               sub b
 713+ A14B
 714+ A14B FE 05            cp 5
 715+ A14D
 716+ A14D D8               ret c
 717+ A14E C8               ret z
 718+ A14F
 719+ A14F CB F6            set 6,(hl)
 720+ A151 C9               ret
 721+ A152
 722+ A152              ; --------------------------------------------------------------------------------------
 723+ A152              ;
 724+ A152              ;   09/10/24
 725+ A152              ;
 726+ A152
 727+ A152              Modifica_puntero_de_impresion
 728+ A152
 729+ A152              ;   Puntero de impresión del disparo en BC.
 730+ A152
 731+ A152 E5               push hl
 732+ A153
 733+ A153 2A 78 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A156 CD BA 99         call NextScan
 735+ A159
 736+ A159 4D               ld c,l
 737+ A15A 44               ld b,h
 738+ A15B
 739+ A15B E1               pop hl
 740+ A15C
 741+ A15C 08               ex af,af
 742+ A15D CB 77            bit 6,a
 743+ A15F 28 06            jr z,1F
 744+ A161
 745+ A161 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A165 0C               inc c
 747+ A166 C9               ret
 748+ A167
 749+ A167 CB 7F        1 bit 7,a
 750+ A169 28 F6            jr z,2B
 751+ A16B
 752+ A16B FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A16F 0D               dec c
 754+ A170
 755+ A170 C9               ret
 756+ A171
 757+ A171              ; --------------------------------------------------------------------------------------
 758+ A171              ;
 759+ A171              ;   31/08/24
 760+ A171              ;
 761+ A171
 762+ A171              Compara_con_coordenadas_de_disparo
 763+ A171
 764+ A171 3A FE 8B         ld a,(Coordenada_y)
 765+ A174 47               ld b,a
 766+ A175 3A 7D 8C         ld a,(Coordenadas_disparo_certero)
 767+ A178 90               sub b
 768+ A179
 769+ A179              ; A = "0" ok
 770+ A179              ; A = "1" ok
 771+ A179
 772+ A179 28 08            jr z,Comprueba_coordenada_X
 773+ A17B 3D               dec a
 774+ A17C 28 05            jr z,Comprueba_coordenada_X
 775+ A17E
 776+ A17E              ; A = "$ff" ok
 777+ A17E
 778+ A17E FE FE            cp $fe
 779+ A180 28 01            jr z,Comprueba_coordenada_X
 780+ A182
 781+ A182 C9               ret
 782+ A183
 783+ A183              Comprueba_coordenada_X
 784+ A183
 785+ A183 3A FD 8B         ld a,(Coordenada_X)
 786+ A186 47               ld b,a
 787+ A187 21 7E 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A18A 7E               ld a,(hl)
 789+ A18B 90               sub b
 790+ A18C
 791+ A18C              ; A = "0" ok
 792+ A18C              ; A = "1" ok
 793+ A18C
 794+ A18C 28 09            jr z,Activa_Impacto_en_entidad
 795+ A18E 3D               dec a
 796+ A18F 28 06            jr z,Activa_Impacto_en_entidad
 797+ A191
 798+ A191              ; A = "2" ok
 799+ A191
 800+ A191 3D               dec a
 801+ A192 28 03            jr z,Activa_Impacto_en_entidad
 802+ A194
 803+ A194              ; A = "$ff"
 804+ A194
 805+ A194 FE FD            cp $fd
 806+ A196 C0               ret nz
 807+ A197
 808+ A197              Activa_Impacto_en_entidad
 809+ A197
 810+ A197              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A197
 812+ A197 3E 02            ld a,2
 813+ A199 32 00 8C         ld (Impacto),a
 814+ A19C
 815+ A19C              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A19C
 817+ A19C 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A19F 21 03 8C         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1A2
 820+ A1A2 73               ld (hl),e
 821+ A1A3 23               inc hl
 822+ A1A4 72               ld (hl),d
 823+ A1A5
 824+ A1A5              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1A5
 826+ A1A5 21 7A 8C         ld hl,Impacto2
 827+ A1A8 CB 9E            res 3,(hl)
 828+ A1AA
 829+ A1AA C9               ret
 830+ A1AB
 831+ A1AB              ; --------------------------------------------------------------------------------------
 832+ A1AB              ;
 833+ A1AB              ;   13/10/24
 834+ A1AB              ;
 835+ A1AB
 836+ A1AB              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1AB
 838+ A1AB              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1AB
 840+ A1AB 2A 57 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1AE 06 06            ld b,6
 842+ A1B0 AF               xor a
 843+ A1B1 77           1 ld (hl),a
 844+ A1B2 2C               inc l
 845+ A1B3 10 FC            djnz 1B
 846+ A1B5
 847+ A1B5 C9               ret
 848+ A1B6
 849+ A1B6              ; --------------------------------------------------------------------------------------
 850+ A1B6              ;
 851+ A1B6              ;   29/09/24
 852+ A1B6              ;
 853+ A1B6
 854+ A1B6              Calcula_bytes_pintado_disparos
 855+ A1B6
 856+ A1B6 2A 5B 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1B9 45               ld b,l
 858+ A1BA 2A 5F 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1BD 7D               ld a,l
 860+ A1BE
 861+ A1BE 90               sub b
 862+ A1BF 32 61 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1C2
 864+ A1C2 C9               ret
 865+ A1C3
 866+ A1C3              ; --------------------------------------------------------------------------------------
 867+ A1C3              ;
 868+ A1C3              ;   26/10/24
 869+ A1C3              ;
 870+ A1C3              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1C3              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1C3              ;   _disparos que el álbum del FRAME actual).
 873+ A1C3
 874+ A1C3              Limpia_album_de_pintado_disparos_entidades
 875+ A1C3
 876+ A1C3 21 62 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1C6 7E               ld a,(hl)
 878+ A1C7 2D               dec l
 879+ A1C8 46               ld b,(hl)
 880+ A1C9 90               sub b
 881+ A1CA
 882+ A1CA D8               ret c
 883+ A1CB C8               ret z
 884+ A1CC
 885+ A1CC F5               push af
 886+ A1CD 80               add b
 887+ A1CE 77               ld (hl),a
 888+ A1CF F1               pop af
 889+ A1D0
 890+ A1D0              ; Clean.
 891+ A1D0
 892+ A1D0 47           2 ld b,a
 893+ A1D1 AF               xor a
 894+ A1D2 2A 5F 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1D5 77           1 ld (hl),a
 896+ A1D6 23               inc hl
 897+ A1D7 10 FC            djnz 1B
 898+ A1D9
 899+ A1D9 C9               ret
 900+ A1DA
 901+ A1DA              ; --------------------------------------------------------------------------------------
 902+ A1DA              ;
 903+ A1DA              ;   29/09/24
 904+ A1DA              ;
 905+ A1DA
 906+ A1DA              Motor_Disparos_Amadeus
 907+ A1DA
 908+ A1DA 21 26 89         ld hl,Disparo_Amad+1
 909+ A1DD
 910+ A1DD 34               inc (hl)
 911+ A1DE 35               dec (hl)
 912+ A1DF
 913+ A1DF C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1E0
 915+ A1E0              ;   Esta caja contiene un disparo.
 916+ A1E0
 917+ A1E0 CD E7 A1         call Consulta_Impacto
 918+ A1E3 CC 00 A2         call z,Mueve_disparo_Amadeus
 919+ A1E6
 920+ A1E6 C9               ret
 921+ A1E7
 922+ A1E7              ; ----------------------
 923+ A1E7              ;
 924+ A1E7              ;
 925+ A1E7              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A1E7              ;
 927+ A1E7              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A1E7
 929+ A1E7
 930+ A1E7              Consulta_Impacto
 931+ A1E7
 932+ A1E7              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A1E7              ;   _sea lo más coherente posible.
 934+ A1E7
 935+ A1E7 E5               push hl
 936+ A1E8 2B               dec hl
 937+ A1E9 CD DC A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A1EC E1               pop hl
 939+ A1ED 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A1EE
 941+ A1EE C8               ret z
 942+ A1EF
 943+ A1EF 3A 7A 8C         ld a,(Impacto2)
 944+ A1F2 CB DF            set 3,a
 945+ A1F4 32 7A 8C         ld (Impacto2),a
 946+ A1F7
 947+ A1F7 E5               push hl
 948+ A1F8 CD C9 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A1FB E1               pop hl
 950+ A1FC CD 19 A2         call Elimina_disparo_Amadeus
 951+ A1FF
 952+ A1FF C9               ret
 953+ A200
 954+ A200              ; ----------------------
 955+ A200              ;
 956+ A200              ;
 957+ A200              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A200
 959+ A200              Mueve_disparo_Amadeus
 960+ A200
 961+ A200 CD FF 90         call Extrae_address
 962+ A203
 963+ A203 CD C9 99         call PreviousScan
 964+ A206 CD C9 99         call PreviousScan
 965+ A209 CD C9 99         call PreviousScan
 966+ A20C CD C9 99         call PreviousScan
 967+ A20F
 968+ A20F              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A20F
 970+ A20F 7C               ld a,h
 971+ A210 D6 40            sub $40
 972+ A212 EB               ex de,hl
 973+ A213 38 04            jr c,Elimina_disparo_Amadeus
 974+ A215
 975+ A215               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A215
 977+ A215 73               ld (hl),e
 978+ A216 23               inc hl
 979+ A217 72               ld (hl),d
 980+ A218
 981+ A218 C9               ret
 982+ A219
 983+ A219              ; ----------------------
 984+ A219              ;
 985+ A219              ;   29/9/24
 986+ A219
 987+ A219              Elimina_disparo_Amadeus
 988+ A219
 989+ A219              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A219              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A219
 992+ A219              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A219              ;   	defw 0											; Puntero de impresión.
 994+ A219
 995+ A219 2B               dec hl
 996+ A21A 2B               dec hl
 997+ A21B
 998+ A21B AF               xor a
 999+ A21C 77               ld (hl),a
1000+ A21D 23               inc hl
1001+ A21E 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A21F
1003+ A21F 23               inc hl
1004+ A220 77               ld (hl),a
1005+ A221 23               inc hl
1006+ A222 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A223
1008+ A223 3E 01            ld a,1
1009+ A225 32 64 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A228
1011+ A228 CD AB A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A22B
1013+ A22B AF               xor a
1014+ A22C 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A22D
1016+ A22D C9               ret
1017+ A22E
1018+ A22E              ; --------------------------------------------------------------------------------------
1019+ A22E              ;
1020+ A22E              ;   13/10/24
1021+ A22E              ;
1022+ A22E
1023+ A22E              Pinta_disparos_Amadeus
1024+ A22E
1025+ A22E 06 02            ld b,2
1026+ A230 ED 73 4B 8C      ld (Stack),sp
1027+ A234 ED 7B 59 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A238 D1           3 pop de
1029+ A239 14               inc d
1030+ A23A 15               dec d
1031+ A23B 28 1C            jr z,1F
1032+ A23D E1               pop hl
1033+ A23E
1034+ A23E              Imprime_scanlines_en_pantalla
1035+ A23E
1036+ A23E              ; 1er scanline
1037+ A23E
1038+ A23E 1A               ld a,(de)
1039+ A23F AE               xor (hl)
1040+ A240 77               ld (hl),a
1041+ A241
1042+ A241 1C               inc e
1043+ A242 2C               inc l
1044+ A243
1045+ A243 1A               ld a,(de)
1046+ A244 AE               xor (hl)
1047+ A245 77               ld (hl),a
1048+ A246
1049+ A246 1D               dec e
1050+ A247 E1               pop hl
1051+ A248
1052+ A248              ; 2º scanline
1053+ A248
1054+ A248 1A               ld a,(de)
1055+ A249 AE               xor (hl)
1056+ A24A 77               ld (hl),a
1057+ A24B
1058+ A24B 1C               inc e
1059+ A24C 2C               inc l
1060+ A24D
1061+ A24D 1A               ld a,(de)
1062+ A24E AE               xor (hl)
1063+ A24F 77               ld (hl),a
1064+ A250
1065+ A250 1D               dec e
1066+ A251
1067+ A251 18 06            jr 1F
1068+ A253
1069+ A253 ED 7B 57 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A257 18 DF            jr 3B
1071+ A259 10 F8        1 djnz 2B
1072+ A25B ED 7B 4B 8C      ld sp,(Stack)
1073+ A25F C9               ret
1074+ A260
1075+ A260              ; --------------------------------------------------------------------------------------
1076+ A260              ;
1077+ A260              ;   13/10/24
1078+ A260              ;
1079+ A260              ;   Modifica: HL,BC y DE.
1080+ A260
1081+ A260
1082+ A260              Genera_datos_de_impresion_disparos_Amadeus
1083+ A260
1084+ A260 ED 73 4B 8C      ld (Stack),sp
1085+ A264 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A267 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A268
1088+ A268 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A269 15               dec d
1090+ A26A
1091+ A26A 28 0E            jr z,Salida
1092+ A26C
1093+ A26C              Genera_scanlines_de_disparo_Amadeus
1094+ A26C
1095+ A26C E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A26D              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A26D ED 7B 57 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A271
1099+ A271 C1               pop bc
1100+ A272 C1               pop bc
1101+ A273 C1               pop bc
1102+ A274
1103+ A274 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A275 CD C9 99         call PreviousScan
1105+ A278 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A279 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A27A
1108+ A27A              Salida
1109+ A27A
1110+ A27A ED 7B 4B 8C      ld sp,(Stack)
1111+ A27E
1112+ A27E C9               ret
1113+ A27F
1114+ A27F              ; --------------------------------------------------------------------------------------
1115+ A27F              ;
1116+ A27F              ;   12/09/24
1117+ A27F              ;
1118+ A27F
1119+ A27F              Genera_disparo_Amadeus
1120+ A27F
1121+ A27F              ;*  Exclusiones.
1122+ A27F
1123+ A27F 3A 64 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A282 A7               and a
1125+ A283 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A284
1127+ A284 3D               dec a
1128+ A285 32 64 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A288
1130+ A288              Define_puntero_objeto_disparo
1131+ A288
1132+ A288              ;   Inicializamos contador.
1133+ A288
1134+ A288 06 00            ld b,0
1135+ A28A
1136+ A28A 2A BE 89         ld hl,(p.imp.amadeus)
1137+ A28D 2C               inc l
1138+ A28E
1139+ A28E 3E 80            ld a,$80
1140+ A290 BE               cp (hl)
1141+ A291 28 0D            jr z,1F
1142+ A293
1143+ A293 04               inc b
1144+ A294
1145+ A294 3E 60            ld a,$60
1146+ A296 BE               cp (hl)
1147+ A297 28 07            jr z,1F
1148+ A299
1149+ A299
1150+ A299 04               inc b
1151+ A29A
1152+ A29A 3E 18            ld a,$18
1153+ A29C BE               cp (hl)
1154+ A29D 28 01            jr z,1F
1155+ A29F
1156+ A29F 04               inc b
1157+ A2A0
1158+ A2A0              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2A0
1160+ A2A0              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2A0
1162+ A2A0 CD C9 99     1 call PreviousScan
1163+ A2A3
1164+ A2A3 78               ld a,b
1165+ A2A4 CB 3F            srl a
1166+ A2A6 28 03            jr z,4F
1167+ A2A8
1168+ A2A8              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2A8 E5               push hl
1170+ A2A9 18 02            jr 5F
1171+ A2AB 2D           4 dec l
1172+ A2AC E5               push hl
1173+ A2AD              ; ---
1174+ A2AD
1175+ A2AD              ;   Calcula el Puntero_objeto del disparo.
1176+ A2AD
1177+ A2AD 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2B0 04               inc b
1179+ A2B1 05               dec b
1180+ A2B2 28 04            jr z,2F
1181+ A2B4
1182+ A2B4              ;   Nos desplazamos por el índice de disparos.
1183+ A2B4
1184+ A2B4 2C           3 inc l
1185+ A2B5 2C               inc l
1186+ A2B6 10 FC            djnz 3B
1187+ A2B8
1188+ A2B8              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2B8 CD FF 90     2 call Extrae_address
1190+ A2BB E5               push hl
1191+ A2BC              ; ---
1192+ A2BC
1193+ A2BC              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2BC              ; HL en el 1er .db de la caja.
1195+ A2BC
1196+ A2BC 21 25 89         ld hl,Disparo_Amad
1197+ A2BF
1198+ A2BF 06 02            ld b,2
1199+ A2C1
1200+ A2C1 D1           6 pop de
1201+ A2C2 73               ld (hl),e
1202+ A2C3 23               inc hl
1203+ A2C4 72               ld (hl),d
1204+ A2C5 23               inc hl
1205+ A2C6
1206+ A2C6 10 F9            djnz 6B
1207+ A2C8
1208+ A2C8 C9               ret
1209+ A2C9
1210+ A2C9              Genera_coordenadas_de_disparo_Amadeus
1211+ A2C9
1212+ A2C9              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2C9              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2C9              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2C9
1216+ A2C9 CD FF 90         call Extrae_address
1217+ A2CC CD C0 94         call Genera_coordenadas
1218+ A2CF
1219+ A2CF 3D               dec a
1220+ A2D0
1221+ A2D0 21 7D 8C         ld hl,Coordenadas_disparo_certero
1222+ A2D3 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2D4 23               inc hl
1224+ A2D5 3A FD 8B         ld a,(Coordenada_X)
1225+ A2D8 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2D9
1227+ A2D9 AF               xor a
1228+ A2DA 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2DB
1230+ A2DB C9               ret
1231+ A2DC
1232+ A2DC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2DC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2DC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2DC
1236+ A2DC              ; ----------------------------------------------
1237+ A2DC              ;
1238+ A2DC              ;   27/08/24
1239+ A2DC              ;
1240+ A2DC              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2DC              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2DC
1243+ A2DC              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2DC
1245+ A2DC              Extraccion_de_datos
1246+ A2DC
1247+ A2DC 13               inc de
1248+ A2DD 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2DE
1250+ A2DE 5E               ld e,(hl)
1251+ A2DF 23               inc hl
1252+ A2E0 56               ld d,(hl)
1253+ A2E1
1254+ A2E1 23               inc hl
1255+ A2E2
1256+ A2E2 4E               ld c,(hl)
1257+ A2E3 23               inc hl
1258+ A2E4 46               ld b,(hl)
1259+ A2E5
1260+ A2E5 C5               push bc
1261+ A2E6 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A2E7
1263+ A2E7              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A2E7
1265+ A2E7 CD C9 99         call PreviousScan
1266+ A2EA CD C9 99         call PreviousScan
1267+ A2ED
1268+ A2ED              Detecta_impacto_
1269+ A2ED
1270+ A2ED 1A               ld a,(de)
1271+ A2EE A6               and (hl)
1272+ A2EF C0               ret nz
1273+ A2F0
1274+ A2F0 13               inc de
1275+ A2F1 23               inc hl
1276+ A2F2
1277+ A2F2 1A               ld a,(de)
1278+ A2F3 A6               and (hl)
1279+ A2F4 C9               ret
1280+ A2F5
1281+ A2F5              ; -------------------------------------------------------------------------------------------------------------
1282+ A2F5              ;
1283+ A2F5              ;   8/8/24
1284+ A2F5              ;
1285+ A2F5              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A2F5              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A2F5              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A2F5              ;
1289+ A2F5              ;   MODIFICA: HL,DE,BC y A.
1290+ A2F5              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A2F5              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A2F5
1293+ A2F5              Colision_Entidad_Amadeus
1294+ A2F5
1295+ A2F5              ; Posible contacto de entidad con Amadeus. ?????
1296+ A2F5
1297+ A2F5              ; Exclusiones:
1298+ A2F5
1299+ A2F5 3A 9D 8C         ld a,(Shield)
1300+ A2F8 A7               and a
1301+ A2F9 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A2FA
1303+ A2FA 21 73 8C         ld hl,Ctrl_3
1304+ A2FD CB 76            bit 6,(hl)
1305+ A2FF C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A300
1307+ A300 21 7A 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A303 CB 56            bit 2,(hl)
1309+ A305 C0               ret nz
1310+ A306
1311+ A306 3A FE 8B     	ld a,(Coordenada_y)
1312+ A309 FE 14        	cp $14
1313+ A30B D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A30C
1315+ A30C 3A BD 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A30F A7               and a
1317+ A310 C0               ret nz
1318+ A311
1319+ A311              Genera_coordenadas_X
1320+ A311
1321+ A311              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A311              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A311
1324+ A311              ;   Limpiamos almacenes.
1325+ A311
1326+ A311              ;    call Limpia_Coordenadas_X
1327+ A311
1328+ A311              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A311
1330+ A311 21 7F 8C         ld hl,Coordenadas_X_Entidad
1331+ A314 3A FD 8B         ld a,(Coordenada_X)
1332+ A317 CD 39 A3         call Guarda_coordenadas_X
1333+ A31A
1334+ A31A              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A31A
1336+ A31A 3A BA 89         ld a,(CX_Amadeus)
1337+ A31D CD 39 A3         call Guarda_coordenadas_X
1338+ A320 CD 4D A3         call Compara_coordenadas_X
1339+ A323 C0               ret nz
1340+ A324
1341+ A324 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A326 32 00 8C         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A329
1344+ A329 2A 3C 8C         ld hl,(Puntero_store_caja)
1345+ A32C 2C               inc l
1346+ A32D 2C               inc l
1347+ A32E 2C               inc l
1348+ A32F 2C               inc l
1349+ A330 22 7B 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A333
1351+ A333 21 7A 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A336 CB D6            set 2,(hl)
1353+ A338
1354+ A338 C9               ret
1355+ A339
1356+ A339               ; ----- ----- ----- ----- -----
1357+ A339
1358+ A339 77           Guarda_coordenadas_X ld (hl),a
1359+ A33A 3C               inc a
1360+ A33B 2C               inc l
1361+ A33C 77               ld (hl),a
1362+ A33D 3C               inc a
1363+ A33E 2C               inc l
1364+ A33F 77               ld (hl),a
1365+ A340 2C               inc l
1366+ A341 C9               ret
1367+ A342
1368+ A342 AF           Limpia_Coordenadas_X xor a
1369+ A343 06 06            ld b,6
1370+ A345 21 82 8C         ld hl,Coordenadas_X_Amadeus
1371+ A348 77           1 ld (hl),a
1372+ A349 23               inc hl
1373+ A34A 10 FC            djnz 1B
1374+ A34C C9               ret
1375+ A34D
1376+ A34D              ; ----- ----- ----- ----- -----
1377+ A34D
1378+ A34D              Compara_coordenadas_X
1379+ A34D
1380+ A34D DD 21 7F 8C      ld ix,Coordenadas_X_Entidad
1381+ A351 DD 7E 00         ld a,(ix+0)
1382+ A354 CD 62 A3         call Comparando
1383+ A357 C8               ret z
1384+ A358
1385+ A358 3C               inc a
1386+ A359 CD 71 A3         call Comparando_1
1387+ A35C C8               ret z
1388+ A35D
1389+ A35D 3C               inc a
1390+ A35E CD 71 A3         call Comparando_1
1391+ A361 C9               ret
1392+ A362
1393+ A362              ; ----- ----- ----- ----- -----
1394+ A362              ;
1395+ A362              ;   4/12/23
1396+ A362              ;
1397+ A362              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A362
1399+ A362              Comparando
1400+ A362
1401+ A362 DD 2C            inc ixl
1402+ A364 DD 2C            inc ixl
1403+ A366 DD 2C            inc ixl
1404+ A368
1405+ A368 DD 46 00         ld b,(ix+0)
1406+ A36B DD 4E 01         ld c,(ix+1)
1407+ A36E DD 56 02         ld d,(ix+2)
1408+ A371
1409+ A371 B8           Comparando_1 cp b
1410+ A372 C8               ret z
1411+ A373 B9               cp c
1412+ A374 C8               ret z
1413+ A375 BA               cp d
1414+ A376 C9               ret
1415+ A377
1416+ A377              ; -----------------------------------------------------------------------
1417+ A377              ;
1418+ A377              ;   04/7/24
1419+ A377              ;
1420+ A377
1421+ A377              Detecta_colision_nave_entidad
1422+ A377
1423+ A377              ; Exclusiones:
1424+ A377
1425+ A377              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A377
1427+ A377 21 7A 8C     	ld hl,Impacto2
1428+ A37A CB 56        	bit 2,(hl)
1429+ A37C C8           	ret z
1430+ A37D
1431+ A37D              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A37D
1433+ A37D 2A C0 89         ld hl,(Pamm_Amadeus)
1434+ A380 CD FF 90         call Extrae_address
1435+ A383 54               ld d,h
1436+ A384 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A385
1438+ A385 2A BE 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A388 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A38A FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A38D
1442+ A38D C5           1 push bc
1443+ A38E 06 03            ld b,3
1444+ A390 E5               push hl
1445+ A391
1446+ A391              ; .db
1447+ A391
1448+ A391 1A           3 ld a,(de)
1449+ A392 A7               and a
1450+ A393 20 03            jr nz,4F
1451+ A395
1452+ A395 2C               inc l
1453+ A396 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A398
1455+ A398 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A39A 28 04            jr z,2F
1457+ A39C
1458+ A39C              ; Impacto.
1459+ A39C FD 2D            dec iyl
1460+ A39E 28 22            jr z,5F
1461+ A3A0
1462+ A3A0 1C           2 inc e
1463+ A3A1 10 EE            djnz 3B
1464+ A3A3
1465+ A3A3 E1               pop hl
1466+ A3A4
1467+ A3A4              ; Hay salto de línea en el puntero de impresión ???
1468+ A3A4
1469+ A3A4 7C               ld a,h
1470+ A3A5 D6 57            sub $57
1471+ A3A7 20 0A            jr nz,6F
1472+ A3A9
1473+ A3A9              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3A9
1475+ A3A9 2A BE 89         ld hl,(p.imp.amadeus)
1476+ A3AC 3E 20            ld a,$20
1477+ A3AE A7               and a
1478+ A3AF 85               add l
1479+ A3B0 6F               ld l,a
1480+ A3B1 18 01            jr 7F
1481+ A3B3
1482+ A3B3 24           6 inc h
1483+ A3B4
1484+ A3B4 C1           7 pop bc
1485+ A3B5 10 D6            djnz 1B
1486+ A3B7
1487+ A3B7              ;   Fin de la comparativa.
1488+ A3B7
1489+ A3B7              ;   NO HAY COLISIÓN !!!!!.
1490+ A3B7              ;
1491+ A3B7              ;   .db (Impacto) de Amadeus a "0".
1492+ A3B7              ;   RES el bit2 de (Impacto2).
1493+ A3B7              ;
1494+ A3B7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3B7              ;   Lo colocamos a "0".
1496+ A3B7
1497+ A3B7 21 7A 8C         ld hl,Impacto2
1498+ A3BA CB 96            res 2,(hl)
1499+ A3BC 2A 7B 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3BF 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3C1 C9               ret
1502+ A3C2
1503+ A3C2              ;   COLISIÓN !!!!!.
1504+ A3C2              ;
1505+ A3C2              ;   .db (Impacto) de Amadeus a "1".
1506+ A3C2              ;   SET el bit3 de (Impacto2).
1507+ A3C2              ;
1508+ A3C2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3C2
1510+ A3C2 E1           5 pop hl
1511+ A3C3 C1               pop bc
1512+ A3C4
1513+ A3C4 21 BD 89         ld hl,Impacto_Amadeus
1514+ A3C7 36 01            ld (hl),1
1515+ A3C9 21 7A 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3CC CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3CE
1518+ A3CE 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3D1 2A 7B 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3D4
1521+ A3D4 23               inc hl
1522+ A3D5 23               inc hl
1523+ A3D6 23               inc hl
1524+ A3D7
1525+ A3D7 73               ld (hl),e
1526+ A3D8 23               inc hl
1527+ A3D9 72               ld (hl),d
1528+ A3DA
1529+ A3DA              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3DA
1531+ A3DA 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3DD 21 C0 89         ld hl,Pamm_Amadeus
1533+ A3E0
1534+ A3E0 73               ld (hl),e
1535+ A3E1 23               inc hl
1536+ A3E2 72               ld (hl),d
1537+ A3E3
1538+ A3E3 C9               ret
1539+ A3E4
1540+ A3E4
1541+ A3E4
# file closed: Disparo.asm
2067  A3E4
2068  A3E4              	SAVESNA "Pruebas.sna", START
2069  A3E4
2070  A3E4
2071  A3E4
2072  A3E4
# file closed: Banco_de_pruebas.asm
