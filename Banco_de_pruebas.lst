# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A9 87  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD EE 8C     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD FE 8C     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 B3 87     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B A9 87  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 18/01/24
   6+ 84EC
   7+ 84EC F1 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0 1D 98        Indice_de_velocidades_segun_nivel_de_dificultad defw Velocidades_Nivel1
  13+ 84F2 21 98        	defw Velocidades_Nivel2
  14+ 84F4 00 00        	defw 0
  15+ 84F6
  16+ 84F6              ; Control. %00000001 00000001
  17+ 84F6              ;
  18+ 84F6              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  19+ 84F6              ;                    _ hacen las entidades hacia abajo.
  20+ 84F6              ;
  21+ 84F6              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  22+ 84F6
  23+ 84F6 FC 84        Indice_de_disparos_Amadeus defw Disparo_1A
  24+ 84F8 04 85        	defw Disparo_2A
  25+ 84FA 0C 85        	defw Disparo_3A
  26+ 84FC
  27+ 84FC 00 00        Disparo_1A defw 0									; Control.
  28+ 84FE 00 00        	defw 0											; Puntero objeto.
  29+ 8500 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  30+ 8502 00 00        	defw 0											; Rutina de impresión.
  31+ 8504
  32+ 8504 00 00        Disparo_2A defw 0									; Control.
  33+ 8506 00 00        	defw 0											; Puntero objeto.
  34+ 8508 00 00        	defw 0											; Puntero de impresión.
  35+ 850A 00 00        	defw 0											; Rutina de impresión.
  36+ 850C
  37+ 850C 00 00        Disparo_3A defw 0
  38+ 850E
  39+ 850E 24 85        Indice_de_disparos_entidades defw Disparo_1
  40+ 8510 2C 85        	defw Disparo_2
  41+ 8512 34 85        	defw Disparo_3
  42+ 8514 3C 85        	defw Disparo_4
  43+ 8516 44 85        	defw Disparo_5
  44+ 8518 4C 85        	defw Disparo_6
  45+ 851A 54 85        	defw Disparo_7
  46+ 851C 5C 85        	defw Disparo_8
  47+ 851E 64 85        	defw Disparo_9
  48+ 8520 6C 85        	defw Disparo_10
  49+ 8522 74 85        	defw Disparo_11
  50+ 8524
  51+ 8524 00 00        Disparo_1 defw 0									; Control.
  52+ 8526 00 00        	defw 0											; Puntero objeto.
  53+ 8528 00 00        	defw 0											; Puntero de impresión.
  54+ 852A 00 00        	defw 0											; Rutina de impresión.
  55+ 852C
  56+ 852C 00 00        Disparo_2 defw 0									; Control.
  57+ 852E 00 00        	defw 0											; Puntero objeto.
  58+ 8530 00 00        	defw 0											; Puntero de impresión.
  59+ 8532 00 00        	defw 0											; Rutina de impresión.
  60+ 8534
  61+ 8534 00 00        Disparo_3 defw 0									; Control.
  62+ 8536 00 00        	defw 0											; Puntero objeto.
  63+ 8538 00 00        	defw 0											; Puntero de impresión.
  64+ 853A 00 00        	defw 0											; Rutina de impresión.
  65+ 853C
  66+ 853C 00 00        Disparo_4 defw 0									; Control.
  67+ 853E 00 00        	defw 0											; Puntero objeto.
  68+ 8540 00 00        	defw 0											; Puntero de impresión.
  69+ 8542 00 00        	defw 0											; Rutina de impresión.
  70+ 8544
  71+ 8544 00 00        Disparo_5 defw 0									; Control.
  72+ 8546 00 00        	defw 0											; Puntero objeto.
  73+ 8548 00 00        	defw 0											; Puntero de impresión.
  74+ 854A 00 00        	defw 0											; Rutina de impresión.
  75+ 854C
  76+ 854C 00 00        Disparo_6 defw 0									; Control.
  77+ 854E 00 00        	defw 0											; Puntero objeto.
  78+ 8550 00 00        	defw 0											; Puntero de impresión.
  79+ 8552 00 00        	defw 0											; Rutina de impresión.
  80+ 8554
  81+ 8554 00 00        Disparo_7 defw 0									; Control.
  82+ 8556 00 00        	defw 0											; Puntero objeto.
  83+ 8558 00 00        	defw 0											; Puntero de impresión.
  84+ 855A 00 00        	defw 0											; Rutina de impresión.
  85+ 855C
  86+ 855C 00 00        Disparo_8 defw 0									; Control.
  87+ 855E 00 00        	defw 0											; Puntero objeto.
  88+ 8560 00 00        	defw 0											; Puntero de impresión.
  89+ 8562 00 00        	defw 0											; Rutina de impresión.
  90+ 8564
  91+ 8564 00 00        Disparo_9 defw 0									; Control.
  92+ 8566 00 00        	defw 0											; Puntero objeto.
  93+ 8568 00 00        	defw 0											; Puntero de impresión.
  94+ 856A 00 00        	defw 0											; Rutina de impresión.
  95+ 856C
  96+ 856C 00 00        Disparo_10 defw 0									; Control.
  97+ 856E 00 00        	defw 0											; Puntero objeto.
  98+ 8570 00 00        	defw 0											; Puntero de impresión.
  99+ 8572 00 00        	defw 0											; Rutina de impresión.
 100+ 8574
 101+ 8574 00 00        Disparo_11 defw 0
 102+ 8576
 103+ 8576              ; -------------------------------------------------------------------------------------
 104+ 8576              ;
 105+ 8576              ;	Índice de cajas de entidades.
 106+ 8576              ;
 107+ 8576              ;	18/1/24
 108+ 8576              ;
 109+ 8576
 110+ 8576              Indice_de_cajas_de_entidades
 111+ 8576
 112+ 8576 BE 85        	defw Caja_1
 113+ 8578 CB 85        	defw Caja_2
 114+ 857A D8 85        	defw Caja_3
 115+ 857C E5 85        	defw Caja_4
 116+ 857E F2 85        	defw Caja_5
 117+ 8580 FF 85        	defw Caja_6
 118+ 8582 0C 86        	defw Caja_7
 119+ 8584
 120+ 8584 00 00        	defw 0
 121+ 8586 00 00        	defw 0
 122+ 8588
 123+ 8588              ; ---------- ---------- ---------- ---------- ----------
 124+ 8588
 125+ 8588 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 126+ 858B 00 00        	defw 0		 										; (Posicion_actual).
 127+ 858D 00 00        	defw 0	 											; (Puntero_objeto).
 128+ 858F 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 129+ 8591
 130+ 8591 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 131+ 8592 05           	db %00000101										; (Attr).
 132+ 8593 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 133+ 8595 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 134+ 8597 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 135+ 8599 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 136+ 859B C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 137+ 859D 04           	db 4 												; (Cuad_objeto).
 138+ 859E 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 139+ 859F 00 00 00...  	ds 6												; Variables_de_borrado
 140+ 85A5
 141+ 85A5 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 142+ 85A7
 143+ 85A7 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 144+ 85A9 00 00        	defw 0 												; Contador_de_mov_masticados
 145+ 85AB 40           	db $40												; (Ctrl_0).
 146+ 85AC 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B0 00 00
 147+ 85B2 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85B5 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 149+ 85B7 00           	db 0												; (Cola_de_desplazamiento).
 150+ 85B8 00           	db 0 												; (Columnas).
 151+ 85B9 00 00        	defw 0												; (Limite_horizontal).
 152+ 85BB 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 153+ 85BE
 154+ 85BE              ; ---------- ---------- ---------- ---------- ----------
 155+ 85BE
 156+ 85BE              ; Cada caja tiene 19 bytes !!!
 157+ 85BE
 158+ 85BE 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 159+ 85C0 00           	db %00000000										; (Attr).
 160+ 85C1 00           	db 0												; (Cuad_objeto).
 161+ 85C2 00           	db 0												; (Impacto).
 162+ 85C3 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 85C5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 85C7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 85C9 00           	db 0												; (Ctrl_0).
 166+ 85CA 00           	db 0												; (Ctrl_2).
 167+ 85CB
 168+ 85CB              ; ---------- ---------- ---------- ---------- ----------
 169+ 85CB
 170+ 85CB 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 171+ 85CD 00           	db %00000000										; (Attr).
 172+ 85CE 00           	db 0												; (Cuad_objeto).
 173+ 85CF 00           	db 0												; (Impacto).
 174+ 85D0 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 85D2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 85D4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 85D6 00           	db 0												; (Ctrl_0).
 178+ 85D7 00           	db 0												; (Ctrl_2).
 179+ 85D8
 180+ 85D8              ; ---------- ---------- ---------- ---------- ----------
 181+ 85D8
 182+ 85D8 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 183+ 85DA 00           	db %00000000										; (Attr).
 184+ 85DB 00           	db 0												; (Cuad_objeto).
 185+ 85DC 00           	db 0												; (Impacto).
 186+ 85DD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 85DF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 85E1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 85E3 00           	db 0												; (Ctrl_0).
 190+ 85E4 00           	db 0												; (Ctrl_2).
 191+ 85E5
 192+ 85E5              ; ---------- ---------- ---------- ---------- ----------
 193+ 85E5
 194+ 85E5 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 195+ 85E7 00           	db %00000000										; (Attr).
 196+ 85E8 00           	db 0												; (Cuad_objeto).
 197+ 85E9 00           	db 0												; (Impacto).
 198+ 85EA 00 00        	defw 0												; (Puntero_de_impresion).
 199+ 85EC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 200+ 85EE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 201+ 85F0 00           	db 0												; (Ctrl_0).
 202+ 85F1 00           	db 0												; (Ctrl_2).
 203+ 85F2
 204+ 85F2              ; ---------- ---------- ---------- ---------- ----------
 205+ 85F2
 206+ 85F2 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 207+ 85F4 00           	db %00000000										; (Attr).
 208+ 85F5 00           	db 0												; (Cuad_objeto).
 209+ 85F6 00           	db 0												; (Impacto).
 210+ 85F7 00 00        	defw 0												; (Puntero_de_impresion).
 211+ 85F9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 212+ 85FB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 213+ 85FD 00           	db 0												; (Ctrl_0).
 214+ 85FE 00           	db 0												; (Ctrl_2).
 215+ 85FF
 216+ 85FF              ; ---------- ---------- ---------- ---------- ----------
 217+ 85FF
 218+ 85FF 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 219+ 8601 00           	db %00000000										; (Attr).
 220+ 8602 00           	db 0												; (Cuad_objeto).
 221+ 8603 00           	db 0												; (Impacto).
 222+ 8604 00 00        	defw 0												; (Puntero_de_impresion).
 223+ 8606 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 224+ 8608 00 00        	defw 0 												; (Contador_de_mov_masticados).
 225+ 860A 00           	db 0												; (Ctrl_0).
 226+ 860B 00           	db 0												; (Ctrl_2).
 227+ 860C
 228+ 860C              ; ---------- ---------- ---------- ---------- ----------
 229+ 860C
 230+ 860C 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 231+ 860E 00           	db %00000000										; (Attr).
 232+ 860F 00           	db 0												; (Cuad_objeto).
 233+ 8610 00           	db 0												; (Impacto).
 234+ 8611 00 00        	defw 0												; (Puntero_de_impresion).
 235+ 8613 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 236+ 8615 00 00        	defw 0 												; (Contador_de_mov_masticados).
 237+ 8617 00           	db 0												; (Ctrl_0).
 238+ 8618 00           	db 0												; (Ctrl_2).
 239+ 8619
 240+ 8619              ; -------------------------------------------------------------------------------------
 241+ 8619              ;
 242+ 8619              ;	11/1/24
 243+ 8619              ;
 244+ 8619              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 245+ 8619              ;
 246+ 8619              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 247+ 8619              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 248+ 8619              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 249+ 8619              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 250+ 8619
 251+ 8619              Indice_de_definiciones_de_entidades
 252+ 8619
 253+ 8619 1D 86        	defw Entidad_1
 254+ 861B 2A 86        	defw Entidad_2
 255+ 861D
 256+ 861D              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 257+ 861D
 258+ 861D              ;	BADSAT, (Satélite malvado).
 259+ 861D
 260+ 861D 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 261+ 8620 04           	db %00000100										; (Attr).
 262+ 8621 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 263+ 8623 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 264+ 8625 03 40        	defw $4003                                      	; (Posicion_inicio).
 265+ 8627 01           	db 1												; (Cuad_objeto).
 266+ 8628 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 267+ 862A
 268+ 862A 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 269+ 862D 02           	db %00000010										; (Attr).
 270+ 862E A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 271+ 8630 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 272+ 8632 40 50        	defw $5040                                      	; (Posicion_inicio).
 273+ 8634 01           	db 1												; (Cuad_objeto).
 274+ 8635 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 275+ 8637
# file closed: Cajas_y_disparos.asm
 105  8637              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8637              ; 13/05/23
   2+ 8637
   3+ 8637              Indice_de_niveles
   4+ 8637
   5+ 8637 45 86        	defw Nivel_1
   6+ 8639 47 86        	defw Nivel_2
   7+ 863B 54 86        	defw Nivel_3
   8+ 863D 64 86        	defw Nivel_4
   9+ 863F 76 86        	defw Nivel_5
  10+ 8641              ;	...
  11+ 8641              ;	...
  12+ 8641              ;	+ Niveles ...
  13+ 8641
  14+ 8641 00 00        	defw 0
  15+ 8643 00 00        	defw 0
  16+ 8645
  17+ 8645 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 8646 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8647 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8648 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 864C 01 02
  21+ 864E 02 01 01 01  	db 2,1,1,1,1,2
  21+ 8652 01 02
  22+ 8654 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 8655 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 8659 01
  24+ 865A 03 01 01 01  	db 3,1,1,1,1
  24+ 865E 01
  25+ 865F 03 01 01 01  	db 3,1,1,1,1
  25+ 8663 01
  26+ 8664 11           Nivel_4 db 17									; Nº de entidades.
  27+ 8665 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 8669 01
  28+ 866A 04 01 01 01  	db 4,1,1,1,1
  28+ 866E 01
  29+ 866F 04 01 01 01  	db 4,1,1,1,1
  29+ 8673 01
  30+ 8674 02 03        	db 2,3
  31+ 8676 14           Nivel_5 db 20									; Nº de entidades.
  32+ 8677 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 867B 01
  33+ 867C 05 01 01 01  	db 5,1,1,1,1
  33+ 8680 01
  34+ 8681 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8685 01
  35+ 8686 05 01 01 01  	db 5,1,1,1,1
  35+ 868A 01
  36+ 868B
  37+ 868B              ;---------------------------------------------------------------------------------------------------------------
  38+ 868B              ;
  39+ 868B              ;   5/1/24
  40+ 868B              ;
  41+ 868B              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 868B              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 868B              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 868B              ;	_en la caja DRAW correspondiente.
  45+ 868B              ;
  46+ 868B              ;	MODIFICA: HL,DE y A.
  47+ 868B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 868B
  49+ 868B              Inicializa_Punteros_de_nivel
  50+ 868B
  51+ 868B 21 37 86     	ld hl,Indice_de_niveles
  52+ 868E 22 D2 87     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8691 CD 80 8B     	call Extrae_address
  54+ 8694 7E           	ld a,(hl)
  55+ 8695 32 9D 87     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8698 23           	inc hl
  57+ 8699 22 D4 87     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 869C C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 869D
  60+ 869D              ;---------------------------------------------------------------------------------------------------------------
  61+ 869D              ;
  62+ 869D              ;   5/1/24
  63+ 869D              ;
  64+ 869D              ;	Destruye A,BC,HL,DE
  65+ 869D
  66+ 869D              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 869D              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 869D
  69+ 869D              Prepara_cajas_de_entidades
  70+ 869D
  71+ 869D              ; Preparamos los punteros de las cajas de entidades:
  72+ 869D
  73+ 869D 21 76 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 86A0 CD 80 8B     	call Extrae_address
  75+ 86A3 CD F2 86     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 86A6              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 86A6 CD 35 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 86A9
  79+ 86A9 2A D4 87     	ld hl,(Datos_de_nivel)
  80+ 86AC
  81+ 86AC              ;
  82+ 86AC 7E           	ld a,(hl)
  83+ 86AD 3D           	dec a
  84+ 86AE 20 FE        	jr nz,$														; STOP si no es una entidad de tipo 1.
  85+ 86B0
  86+ 86B0 21 B4 87     	ld hl,Ctrl_4
  87+ 86B3 CB 46        	bit 0,(hl)
  88+ 86B5 20 FE        	jr nz,$														; STOP si ya hemos generado todos los movimientos masticados de una entidad Tipo 1.
  89+ 86B7 CB E6        	set 4,(hl)													; FLAG que indica que hemos completado todos los movimientos masticados de una entidad tipo 1.
  90+ 86B9
  91+ 86B9              ;	La 1ª entidad del Nivel es una Entidad de tipo 1.
  92+ 86B9              ;	Vamos a cargar la definición de una entidad de tipo 1 en DRAW para poder generar todos sus movimientos masticados.
  93+ 86B9
  94+ 86B9 2A D4 87     	ld hl,(Datos_de_nivel)
  95+ 86BC
  96+ 86BC              ; En este punto:
  97+ 86BC              ;
  98+ 86BC              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  99+ 86BC              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 100+ 86BC
 101+ 86BC C5           1 push bc 										; Guardo el nº de cajas a rellenar.
 102+ 86BD
 103+ 86BD 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 104+ 86BE CD E0 86     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
 105+ 86C1
 106+ 86C1 21 19 86     	ld hl,Indice_de_definiciones_de_entidades
 107+ 86C4 CD E8 86     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 108+ 86C7              ;
 109+ 86C7 CD FC 86     	call Datos_de_entidad_a_DRAW				; Vuelca los datos de la definición en DRAW.
 110+ 86CA
 111+ 86CA 18 FE        	jr $
 112+ 86CC
 113+ 86CC 2A 9B 87     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
 114+ 86CF CD 80 8B     	call Extrae_address
 115+ 86D2 CD F2 86     	call Avanza_caja_de_entidades
 116+ 86D5
 117+ 86D5 2A D4 87     	ld hl,(Datos_de_nivel)
 118+ 86D8 23           	inc hl
 119+ 86D9 22 D4 87     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 120+ 86DC
 121+ 86DC C1           	pop bc
 122+ 86DD 10 DD        	djnz 1B
 123+ 86DF
 124+ 86DF C9           	ret
 125+ 86E0
 126+ 86E0              ;	------------------------------------------------------------------------------------
 127+ 86E0              ;
 128+ 86E0              ;	12/01/24
 129+ 86E0              ;
 130+ 86E0              ;	INPUTS:	A contiene el (Tipo) de entidad.
 131+ 86E0              ;
 132+ 86E0              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 133+ 86E0              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 134+ 86E0
 135+ 86E0 CB 27        Calcula_salto_en_BC sla a
 136+ 86E2 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 137+ 86E4 4F           	ld c,a
 138+ 86E5 06 00        	ld b,0
 139+ 86E7 C9           	ret
 140+ 86E8
 141+ 86E8              ; ------------------------------------------------------------------
 142+ 86E8              ;
 143+ 86E8              ;	5/1/24
 144+ 86E8              ;
 145+ 86E8              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 146+ 86E8              ;	Actualiza (Datos_de_entidad) con esa dirección.
 147+ 86E8
 148+ 86E8 A7           Situa_en_datos_de_entidad and a
 149+ 86E9 ED 4A        	adc hl,bc
 150+ 86EB CD 80 8B     	call Extrae_address
 151+ 86EE 22 A3 87         ld (Datos_de_entidad),hl
 152+ 86F1 C9           	ret
 153+ 86F2
 154+ 86F2              ; ------------------------------------------------------------------
 155+ 86F2
 156+ 86F2 22 97 87     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 157+ 86F5 13           	inc de
 158+ 86F6 13           	inc de
 159+ 86F7 EB           	ex de,hl
 160+ 86F8 22 9B 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 161+ 86FB C9           	ret
 162+ 86FC
 163+ 86FC              ; ----------------------------------------------------------------------------------------------------------
 164+ 86FC              ;
 165+ 86FC              ;	18/1/24
 166+ 86FC              ;
 167+ 86FC              ;	Vuelca los .db significativos del tipo de entidad a DRAW.
 168+ 86FC
 169+ 86FC              Datos_de_entidad_a_DRAW
 170+ 86FC
 171+ 86FC              ; En este punto:
 172+ 86FC              ; HL apunta al 1er .db de DATOS de la definición de la entidad que tenemos que volcar en la caja DRAW.
 173+ 86FC
 174+ 86FC 11 52 87     	ld de,Variables_DRAW	 					; DE apunta al 1er .db de las variables DRAW
 175+ 86FF
 176+ 86FF 01 03 00     	ld bc,3
 177+ 8702 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 178+ 8704              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 179+ 8704 01 07 00     	ld bc,7
 180+ 8707 CD 2F 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 181+ 870A
 182+ 870A 01 05 00     	ld bc,5
 183+ 870D ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 184+ 870F              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 185+ 870F 01 04 00     	ld bc,4
 186+ 8712 CD 2F 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 187+ 8715
 188+ 8715 01 03 00     	ld bc,3
 189+ 8718 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 190+ 871A              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 191+ 871A
 192+ 871A 01 09 00     	ld bc,9
 193+ 871D CD 2F 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 194+ 8720
 195+ 8720 01 02 00     	ld bc,2
 196+ 8723 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 197+ 8725
 198+ 8725 01 08 00     	ld bc,8
 199+ 8728 CD 2F 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 200+ 872B
 201+ 872B 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 202+ 872D 12           	ld (de),a 									; Vuelco (Frames_explosion).
 203+ 872E
 204+ 872E C9           	ret
 205+ 872F
 206+ 872F              ; ---------- -------------- ----------------
 207+ 872F
 208+ 872F EB           Situa_DE ex de,hl
 209+ 8730 A7           	and a
 210+ 8731 ED 4A        	adc hl,bc
 211+ 8733 EB           	ex de,hl
 212+ 8734 C9           	ret
 213+ 8735
 214+ 8735              ;---------------------------------------------------------------------------------------------------------------
 215+ 8735              ;
 216+ 8735              ;	5/1/24
 217+ 8735              ;
 218+ 8735              ;	INICIALIZA (Numero_parcial_de_entidades).
 219+ 8735              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 220+ 8735              ;
 221+ 8735              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 222+ 8735              ;
 223+ 8735              ;	(Numero_parcial_de_entidades)="7".
 224+ 8735              ;
 225+ 8735              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 226+ 8735              ;
 227+ 8735              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 228+ 8735              ;
 229+ 8735              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 230+ 8735              ;	MODIFICA: A y B.
 231+ 8735              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 232+ 8735
 233+ 8735              Inicializa_Numero_parcial_de_entidades
 234+ 8735
 235+ 8735              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 236+ 8735
 237+ 8735 3A 9D 87     	ld a,(Numero_de_entidades)
 238+ 8738 A7           	and a
 239+ 8739
 240+ 8739              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 241+ 8739              ;	jr z,$
 242+ 8739              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 243+ 8739
 244+ 8739 20 03        	jr nz,3F
 245+ 873B
 246+ 873B              ; ---------- ---------- ----------
 247+ 873B
 248+ 873B              ;! RESET para pruebas. Omitir esta línea en modo normal.
 249+ 873B              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 250+ 873B
 251+ 873B CD 8B 86     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 252+ 873E
 253+ 873E              ; ---------- ---------- ----------
 254+ 873E
 255+ 873E 3A 9D 87     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 256+ 8741 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 257+ 8743 38 08        	jr c,1F
 258+ 8745
 259+ 8745              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 260+ 8745              ; Actualizamos variables.
 261+ 8745
 262+ 8745 3E 07        	ld a,7
 263+ 8747 32 9E 87     	ld (Numero_parcial_de_entidades),a
 264+ 874A 47           	ld b,a
 265+ 874B 18 04        	jr 2F
 266+ 874D
 267+ 874D              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 268+ 874D              ; (Numero_de_entidades)="0".
 269+ 874D
 270+ 874D 32 9E 87     1 ld (Numero_parcial_de_entidades),a
 271+ 8750 47           	ld b,a
 272+ 8751 C9           2 ret
# file closed: Niveles.asm
 106  8752
 107  8752              ; ******************************************************************************************************************************************************************************************
 108  8752              ; Constantes.
 109  8752              ; ******************************************************************************************************************************************************************************************
 110  8752              ;
 111  8752              ; 25/12/23
 112  8752
 113  8752              ;
 114  8752              ; Constantes.
 115  8752              ;
 116  8752
 117  8752              Sprite_vacio equ $f000
 118  8752              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  8752              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  8752              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  8752              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  8752
 123  8752              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  8752              ;														;
 125  8752              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  8752
 127  8752              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  8752              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  8752              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  8752              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  8752              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  8752
 133  8752              ;														; 55 Bytes.
 134  8752              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  8752              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  8752
 137  8752              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  8752
 139  8752              ; ******************************************************************************************************************************************************************************************
 140  8752              ; Variables.
 141  8752              ; ******************************************************************************************************************************************************************************************
 142  8752              ;
 143  8752              ; 18/01/24
 144  8752              ;
 145  8752              ; Variables de DRAW. (Motor principal).	42 Bytes.
 146  8752              ;
 147  8752
 148  8752              Variables_DRAW ; -----------------------------------------------------------------------------------------------
 149  8752
 150  8752 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  8753              ;															- Patrón de movimiento.
 152  8753              ;															- Aspecto
 153  8753 00           Filas db 0												; Filas. [DRAW]
 154  8754 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  8755 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  8757 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  8759 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  875A 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  875B
 160  875B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  875B
 162  875B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  875C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  875C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  875C 00           Attr db 0												; Atributos de la entidad:
 166  875D
 167  875D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  875D              ;
 169  875D              ;	COLORES: 0 ..... NEGRO
 170  875D              ;    		 1 ..... AZUL
 171  875D              ; 			 2 ..... ROJO
 172  875D              ;			 3 ..... MAGENTA
 173  875D              ; 			 4 ..... VERDE
 174  875D              ; 			 5 ..... CIAN
 175  875D              ;			 6 ..... AMARILLO
 176  875D              ; 			 7 ..... BLANCO
 177  875D
 178  875D 00 00        Indice_Sprite_der defw 0
 179  875F 00 00        Indice_Sprite_izq defw 0
 180  8761 00 00        Puntero_DESPLZ_der defw 0
 181  8763 00 00        Puntero_DESPLZ_izq defw 0
 182  8765
 183  8765 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  8767 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  8768
 186  8768              ; Variables de objeto. (Características).
 187  8768
 188  8768 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 189  8769              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 190  8769              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 191  8769 00 00 00...  Variables_de_borrado ds 6
 192  876F
 193  876F 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 194  8771              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 195  8771
 196  8771 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 197  8773
 198  8773              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 199  8773              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 200  8773
 201  8773 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 202  8775              ;														; _palabras que componen el "movimiento_masticado".
 203  8775
 204  8775              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 205  8775
 206  8775 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 207  8776              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 208  8776              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 209  8776              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 210  8776              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 211  8776              ;
 212  8776              ; 														DESCRIPCIÖN:
 213  8776              ;
 214  8776              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 215  8776              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 216  8776              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 217  8776              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 218  8776              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 219  8776              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 220  8776              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 221  8776              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 222  8776              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 223  8776              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 224  8776              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 225  8776              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 226  8776              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 227  8776              ;
 228  8776              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 229  8776              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 230  8776              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 231  8776
 232  8776              ; Variables de funcionamiento. [DRAW].
 233  8776
 234  8776 00           Columnas db 0
 235  8777 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 236  8779              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 237  8779 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  877A
 239  877A              ; variables de control general.
 240  877A
 241  877A 00           Ctrl_2 db 0
 242  877B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 243  877B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 244  877B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 245  877B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 246  877B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 247  877B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 248  877B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 249  877B              ;
 250  877B              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 251  877B              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 252  877B              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 253  877B              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 254  877B              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 255  877B              ;														BIT 4, ???
 256  877B              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 257  877B
 258  877B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 259  877C
 260  877C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 261  877C
 262  877C              ;					         		---------;      ;---------
 263  877C
 264  877C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 265  877C
 266  877C              ; Perfil de velocidad.
 267  877C
 268  877C 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 269  877D 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 270  877E 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 271  877F 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 272  8780
 273  8780              ; Contadores de 16 bits.
 274  8780
 275  8780 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 276  8782 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 277  8784 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 278  8786 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 279  8788
 280  8788              ; Movimiento. ------------------------------------------------------------------------------------------------------
 281  8788
 282  8788 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 283  878A 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 284  878C 00 00        Puntero_indice_mov_bucle defw 0							;
 285  878E              ;
 286  878E              ;
 287  878E 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 288  878F              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 289  878F              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 290  878F 00           Incrementa_puntero_backup db 0
 291  8790 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 292  8791              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 293  8791 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 294  8792 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 295  8793 00           Cola_de_desplazamiento db 0								; Este byte indica:
 296  8794              ;
 297  8794              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 298  8794              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 299  8794              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 300  8794              ;
 301  8794              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 302  8794              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 303  8794              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 304  8794              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 305  8794              ;
 306  8794              ;														;	"$ff" ..... Bucle infinito de repetición.
 307  8794              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 308  8794              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 309  8794              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  8794
 311  8794 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  8795
 313  8795              ;														DESCRIPCIÓN:
 314  8795              ;
 315  8795              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  8795              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  8795              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  8795              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  8795              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  8795              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  8795
 322  8795              ;														BIT 3, Recarga de nueva oleada.
 323  8795              ;														BIT 4, Recarga de nueva oleada.
 324  8795              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  8795              ;														BIT 6, **** Frame completo.
 326  8795              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  8795
 328  8795 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  8797              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  8797              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  8797              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  8797
 333  8797              ; Gestión de ENTIDADES y CAJAS.
 334  8797
 335  8797 00 00        Puntero_store_caja defw 0
 336  8799 00 00        Puntero_restore_caja defw 0
 337  879B 00 00        Indice_restore_caja defw 0
 338  879D 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  879E 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  879F 00           Entidades_en_curso db 0									; ..... ..... .....
 341  87A0 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  87A1              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  87A1              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  87A1              ;														; _ (Numero_de_malotes)="0".
 345  87A1 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  87A3 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  87A5              ;														; _ puntero (Indice_entidades).
 348  87A5
 349  87A5              ;---------------------------------------------------------------------------------------------------------------
 350  87A5              ;
 351  87A5              ;	11/01/24
 352  87A5              ;
 353  87A5              ;	Álbumes.
 354  87A5
 355  87A5 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  87A7              ;														; _variable para almacenar lo posición del puntero_
 357  87A7              ; 														; _de pila, SP.
 358  87A7 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  87A9              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  87A9 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  87AB 00 70        Stack_snapshot defw Album_de_fotos
 362  87AD 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  87AF
 364  87AF              ;End_Snapshot defw Album_de_fotos
 365  87AF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  87AF 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  87B1              ;														; _el snapshot de los registros del siguiente disparo.
 368  87B1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  87B1 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  87B3
 371  87B3 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  87B4              ;
 373  87B4              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  87B4              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 375  87B4              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 376  87B4
 377  87B4 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 378  87B5              ;
 379  87B5              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 380  87B5
 381  87B5              ; Gestión de Disparos.
 382  87B5
 383  87B5 00           Numero_de_disparotes db 0
 384  87B6 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 385  87B8 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 386  87BA 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 387  87BB              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 388  87BB              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 389  87BB 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 390  87BD              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 391  87BD              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 392  87BD              ;														; _produzca colisión.
 393  87BD 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 394  87BF              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 395  87BF 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 396  87C2              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 397  87C2 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 398  87C5              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 399  87C5 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 400  87C6
 401  87C6              ;---------------------------------------------------------------------------------------------------------------
 402  87C6
 403  87C6              ; Relojes y temporizaciones.
 404  87C6
 405  87C6 00           Contador_de_frames db 0
 406  87C7 00           Contador_de_frames_2 db 0
 407  87C8
 408  87C8 04           Clock_explosion db 4
 409  87C9 14           Clock_Entidades_en_curso db 20
 410  87CA 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 411  87CB              ;														; Repite la oleada de entidades.
 412  87CB 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 413  87CC 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 414  87CD 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 415  87CE
 416  87CE 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 417  87CF 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 418  87D0 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 419  87D1
 420  87D1              ;---------------------------------------------------------------------------------------------------------------
 421  87D1
 422  87D1              ; Gestión de NIVELES.
 423  87D1
 424  87D1 00           Nivel db 0												; Nivel actual del juego.
 425  87D2 00 00        Puntero_indice_NIVELES defw 0
 426  87D4 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 427  87D6              ; 														; _ que definen el NIVEL.
 428  87D6              ; Y todo comienza aquí .....
 429  87D6              ;
 430  87D6              ; 	INICIO  *************************************************************************************************************************************************************************
 431  87D6              ;
 432  87D6              ;	5/1/24
 433  87D6
 434  87D6              START
 435  87D6
 436  87D6 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 437  87D9 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 438  87DB ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 439  87DD ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 440  87DF F3           	DI
 441  87E0
 442  87E0 3E 07        	ld a,%00000111
 443  87E2 CD 09 98     	call Cls
 444  87E5 CD 5D 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 445  87E8
 446  87E8              ; INICIALIZACIÓN.
 447  87E8
 448  87E8 CD 8B 86     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 449  87EB              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 450  87EB              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 451  87EB              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 452  87EB
 453  87EB CD 9D 86     4 call Prepara_cajas_de_entidades
 454  87EE
 455  87EE CD E8 8A     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 456  87F1              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 457  87F1 CD 0D 8C     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 458  87F4
 459  87F4 21 9E 87     	ld hl,Numero_parcial_de_entidades
 460  87F7 46           	ld b,(hl)
 461  87F8              ;	inc b
 462  87F8              ;	dec b
 463  87F8              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 464  87F8
 465  87F8              ;	INICIA ENTIDADES !!!!!
 466  87F8
 467  87F8 C5           1 push bc  												; Guardo el contador de entidades.
 468  87F9 CD DC 89     	call Inicia_entidad
 469  87FC
 470  87FC C1           	pop bc
 471  87FD 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 472  87FF
 473  87FF              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 474  87FF              ; (Esto se dá cuando se inicia una nueva oleada).
 475  87FF
 476  87FF              ;	ld a,(Ctrl_1)
 477  87FF              ;	bit 3,a
 478  87FF              ;	jr nz,5F											; Loop
 479  87FF
 480  87FF              ; 	INICIA AMADEUS !!!!!
 481  87FF
 482  87FF              ;3 call Restore_Amadeus
 483  87FF              ;	call Inicia_Puntero_objeto
 484  87FF              ;	call Draw
 485  87FF
 486  87FF              ;	call Guarda_movimiento_masticado	;! Provisional
 487  87FF
 488  87FF              ;	call Guarda_foto_registros
 489  87FF              ;	call Guarda_datos_de_borrado_Amadeus
 490  87FF
 491  87FF              ;	ld de,Amadeus_db
 492  87FF              ;	call Store_Amadeus
 493  87FF
 494  87FF              ; 	INICIA DISPAROS !!!!!
 495  87FF
 496  87FF              ;	call Inicia_Puntero_Disparo_Entidades
 497  87FF              ;	call Inicia_Puntero_Disparo_Amadeus
 498  87FF
 499  87FF              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 500  87FF
 501  87FF CD E8 8A     5 call Inicia_punteros_de_cajas
 502  8802 CD 0D 8C     	call Restore_entidad
 503  8805
 504  8805 3A 94 87     	ld a,(Ctrl_1)
 505  8808 CB 5F        	bit 3,a
 506  880A 28 07        	jr z,6F
 507  880C
 508  880C              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 509  880C
 510  880C 21 94 87     	ld hl,Ctrl_1
 511  880F CB 9E        	res 3,(hl)
 512  8811 18 07        	jr Main
 513  8813
 514  8813              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 515  8813
 516  8813 21 B3 87     6 ld hl,Ctrl_3
 517  8816 CB C6        	set 0,(hl)											; Frame completo.
 518  8818 FB           	ei
 519  8819 76           	halt
 520  881A
 521  881A              ; ------------------------------------
 522  881A
 523  881A              Main
 524  881A              ;
 525  881A              ;	11/12/23
 526  881A
 527  881A              ; Aparece nueva entidad ???
 528  881A
 529  881A              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 530  881A              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 531  881A              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 532  881A              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 533  881A              ;														; _un 2º bloque.
 534  881A
 535  881A 3E 01        	ld a,1
 536  881C D3 FE        	out ($fe),a
 537  881E
 538  881E 3A C9 87     	ld a,(Clock_Entidades_en_curso)
 539  8821 47           	ld b,a
 540  8822 3A C6 87     	ld a,(Contador_de_frames)
 541  8825 B8           	cp b
 542  8826 20 18        	jr nz,13F
 543  8828
 544  8828              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 545  8828              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 546  8828
 547  8828 3A 9E 87     21 ld a,(Numero_parcial_de_entidades)
 548  882B 47           	ld b,a
 549  882C 3A 9F 87     	ld a,(Entidades_en_curso)
 550  882F B8           	cp b
 551  8830 28 0E        	jr z,13F
 552  8832 30 0C        	jr nc,13F
 553  8834
 554  8834 3C           	inc a
 555  8835 32 9F 87     	ld (Entidades_en_curso),a
 556  8838
 557  8838              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 558  8838
 559  8838 3A C9 87     	ld a,(Clock_Entidades_en_curso)
 560  883B              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 561  883B              ;! _ IMPREDECIBLE !!!!
 562  883B C6 64        	add 100
 563  883D 32 C9 87     	ld (Clock_Entidades_en_curso),a
 564  8840
 565  8840              ; -------------------------------------------------------------------------------------------------------------
 566  8840
 567  8840              ; Habilita disparos.
 568  8840
 569  8840 21 CB 87     13 ld hl,Disparo_Amadeus
 570  8843 11 CD 87     	ld de,CLOCK_repone_disparo_Amadeus
 571  8846 CD E2 9B     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 572  8849
 573  8849 21 CE 87     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 574  884C 11 D0 87     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 575  884F CD E2 9B     	call Habilita_disparos
 576  8852
 577  8852              ; COLISIONES.
 578  8852
 579  8852 CD FC 90     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 580  8855
 581  8855              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 582  8855              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 583  8855              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 584  8855
 585  8855 AF           	xor a
 586  8856 32 BA 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 587  8859
 588  8859 CD E8 8A     	call Inicia_punteros_de_cajas
 589  885C CD 0D 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 590  885F              ; 														; _ en DRAW.
 591  885F 3A 53 87     	ld a,(Filas)
 592  8862 A7           	and a
 593  8863 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 594  8865 CD 1F 8C     	call Incrementa_punteros_de_cajas
 595  8868 18 F2        	jr 12B
 596  886A
 597  886A              ; ---------------------------------------------------------------------------------------
 598  886A
 599  886A 3A 9E 87     10 ld a,(Numero_parcial_de_entidades)
 600  886D 47               ld b,a
 601  886E A7           	and a
 602  886F 20 14        	jr nz,11F
 603  8871
 604  8871 21 94 87     	ld hl,Ctrl_1
 605  8874 CB 66        	bit 4,(hl)
 606  8876 C2 1E 89     	jp nz,16F
 607  8879
 608  8879              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 609  8879
 610  8879 21 94 87     	ld hl,Ctrl_1
 611  887C CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 612  887E
 613  887E 3A C6 87     	ld a,(Contador_de_frames)
 614  8881 3C           	inc a
 615  8882 32 CA 87     	ld (Activa_recarga_cajas),a
 616  8885
 617  8885              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 618  8885
 619  8885 3A 9F 87     11 ld a,(Entidades_en_curso)
 620  8888 A7           	and a
 621  8889 CA 1E 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 622  888C 47           	ld b,a												; No hay entidades que gestionar.
 623  888D
 624  888D              ; ( Código que ejecutamos con cada entidad: ).
 625  888D
 626  888D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 627  888D
 628  888D C5           15 push bc 												; Nº de entidades en curso.
 629  888E
 630  888E              ; Existe "Entidad_guía" ???.
 631  888E              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 632  888E
 633  888E 3A B3 87     	ld a,(Ctrl_3)
 634  8891 CB 4F        	bit 1,a
 635  8893 20 11        	jr nz,22F
 636  8895
 637  8895              ; Almacén de "Movimientos_masticados" lleno ???
 638  8895              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 639  8895              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 640  8895
 641  8895 3A B3 87     	ld a,(Ctrl_3)
 642  8898 CB 5F        	bit 3,a
 643  889A 20 0A        	jr nz,22F
 644  889C
 645  889C              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 646  889C
 647  889C 21 7A 87     	ld hl,Ctrl_2
 648  889F CB EE        	set 5,(hl)
 649  88A1 21 B3 87     	ld hl,Ctrl_3
 650  88A4 CB CE        	set 1,(hl)
 651  88A6
 652  88A6              ; Impacto ???
 653  88A6
 654  88A6 3A 68 87     22 ld a,(Impacto)
 655  88A9 A7           	and a
 656  88AA 28 31        	jr z,8F
 657  88AC
 658  88AC              ; Hay Impacto en esta entidad.
 659  88AC
 660  88AC 21 C8 87     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 661  88AF 35           	dec (hl)
 662  88B0 C2 11 89     	jp nz,17F
 663  88B3
 664  88B3              ;! Velocidad de la animación de la explosión.
 665  88B3
 666  88B3 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 667  88B5              ;														; _,(velocidad de la explosión).
 668  88B5              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 669  88B5
 670  88B5 CD D1 8C     	call Repone_datos_de_borrado
 671  88B8 CD 26 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 672  88BB
 673  88BB              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 674  88BB
 675  88BB 3A 7A 87     	ld a,(Ctrl_2)
 676  88BE CB 4F        	bit 1,a
 677  88C0 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 678  88C2
 679  88C2              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 680  88C2
 681  88C2 3A 5B 87     	ld a,(CTRL_DESPLZ)
 682  88C5 A7           	and a
 683  88C6 20 08        	jr nz,18F
 684  88C8
 685  88C8 21 84 84     	ld hl,Indice_Explosion_2x2-2
 686  88CB 22 61 87     	ld (Puntero_DESPLZ_der),hl
 687  88CE 18 06        	jr 19F
 688  88D0
 689  88D0 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 690  88D3 22 61 87     	ld (Puntero_DESPLZ_der),hl
 691  88D6
 692  88D6 21 7A 87     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 693  88D9 CB CE        	set 1,(hl)
 694  88DB 18 22        	jr 7F
 695  88DD
 696  88DD              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 697  88DD              ; _con las coordenadas de la entidad almacenada en DRAW.
 698  88DD
 699  88DD 3A 94 87     8 ld a,(Ctrl_1)
 700  88E0 CB 57        	bit 2,a
 701  88E2 28 1B        	jr z,7F
 702  88E4
 703  88E4 2A BD 87     	ld hl,(Coordenadas_disparo_certero)
 704  88E7 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 705  88E8              ;														; E contiene la coordenada_X del disparo.
 706  88E8 2A 59 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 707  88EB              ;														; H FILA, (Coordenada_y de la entidad).
 708  88EB A7           	and a
 709  88EC ED 52        	sbc hl,de
 710  88EE
 711  88EE CD 15 91     	call Determina_resultado_comparativa
 712  88F1
 713  88F1 78           	ld a,b
 714  88F2 A7           	and a
 715  88F3 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 716  88F5
 717  88F5              ; ----- ----- -----
 718  88F5
 719  88F5 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 720  88F7 32 68 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 721  88FA
 722  88FA 21 94 87     	ld hl,Ctrl_1
 723  88FD CB 96        	res 2,(hl)
 724  88FF
 725  88FF CD 6F 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 726  8902
 727  8902 3A 75 87     	ld a,(Ctrl_0)
 728  8905 CB 67        	bit 4,a
 729  8907 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 730  8909
 731  8909              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 732  8909              ; [[[
 733  8909              ;	call Detecta_disparo_entidad
 734  8909              ; ]]]
 735  8909
 736  8909 CD 69 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 737  890C
 738  890C 21 75 87     	ld hl,Ctrl_0
 739  890F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 740  8911
 741  8911 CD CE 8B     17 call Store_Restore_cajas
 742  8914
 743  8914 C1           	pop bc
 744  8915
 745  8915 05           	dec b
 746  8916 C2 8D 88     	jp nz,15B
 747  8919
 748  8919              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 749  8919              ; Hemos gestionado todas las unidades.
 750  8919              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 751  8919
 752  8919 21 94 87     	ld hl,Ctrl_1
 753  891C CB 96        	res 2,(hl)
 754  891E
 755  891E 21 B3 87     16 ld hl,Ctrl_3
 756  8921 CB C6        	set 0,(hl)											; Frame completo.
 757  8923
 758  8923 AF           	xor a
 759  8924 D3 FE        	out ($fe),a
 760  8926
 761  8926 FB           	ei
 762  8927 76           	halt
 763  8928
 764  8928              ; ----------------------------------------
 765  8928
 766  8928 3A 94 87     	ld a,(Ctrl_1) 										; Existe Loop?
 767  892B CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 768  892D CA 1A 88     	jp z,Main
 769  8930
 770  8930              ; RECARGA DE NUEVA OLEADA.
 771  8930
 772  8930 3A C6 87     	ld a,(Contador_de_frames)
 773  8933 47           	ld b,a
 774  8934 3A CA 87     	ld a,(Activa_recarga_cajas)
 775  8937 B8           	cp b
 776  8938 28 08        	jr z,20F
 777  893A
 778  893A 21 94 87     	ld hl,Ctrl_1
 779  893D CB E6        	set 4,(hl)
 780  893F C3 1A 88     	jp Main
 781  8942
 782  8942 21 94 87     20 ld hl,Ctrl_1
 783  8945 CB A6        	res 4,(hl)
 784  8947
 785  8947 3A C6 87     	ld a,(Contador_de_frames)
 786  894A
 787  894A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 788  894A              ;! _ IMPREDECIBLE !!!!
 789  894A
 790  894A C6 0A        	add 10
 791  894C 32 C9 87     	ld (Clock_Entidades_en_curso),a
 792  894F
 793  894F C3 EB 87     	jp 4B
 794  8952
 795  8952 C9           	ret
 796  8953
 797  8953              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 798  8953              ;
 799  8953              ;	16/11/23
 800  8953
 801  8953              Gestiona_Amadeus
 802  8953
 803  8953              ;! Activa/desactiva impacto con Amadeus.
 804  8953
 805  8953              ;	ld a,(Impacto)
 806  8953              ;	and a
 807  8953              ;	jr nz,2F
 808  8953
 809  8953 CD CC 89     	call Mov_Amadeus
 810  8956
 811  8956 3A 75 87     2 ld a,(Ctrl_0)
 812  8959 CB 67        	bit 4,a
 813  895B 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 814  895D
 815  895D CD 69 8A     	call Guarda_foto_entidad_a_pintar
 816  8960 CD B1 8C     	call Guarda_datos_de_borrado_Amadeus
 817  8963
 818  8963 21 75 87     1 ld hl,Ctrl_0
 819  8966 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 820  8968
 821  8968 CD A0 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 822  896B
 823  896B              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 824  896B
 825  896B CD 68 8B     	call Calcula_numero_de_disparotes
 826  896E
 827  896E C9           	ret
 828  896F
 829  896F              ; --------------------------------------------------------------------------------------------------------------
 830  896F              ;
 831  896F              ;	15/12/23
 832  896F
 833  896F              Mov_obj
 834  896F
 835  896F 3A 7A 87     	ld a,(Ctrl_2)
 836  8972 CB 4F        	bit 1,a
 837  8974 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 838  8976
 839  8976              ; Explosión:
 840  8976
 841  8976 3A 7B 87     	ld a,(Frames_explosion)
 842  8979 A7           	and a
 843  897A 20 1D        	jr nz,4F
 844  897C
 845  897C              ;!  Una alimaña menos!!!!!!!!!1
 846  897C
 847  897C              ; Se trataba de una Entidad_guía ???
 848  897C
 849  897C 3A 7A 87     	ld a,(Ctrl_2)
 850  897F CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 851  8981 28 05        	jr z,5F
 852  8983
 853  8983 21 B3 87     	ld hl,Ctrl_3
 854  8986 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 855  8988
 856  8988              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 857  8988              ;!! _generado puede ser distinto, (aletoriedad).
 858  8988
 859  8988 CD 4F 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 860  898B 21 9E 87     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 861  898E 35           	dec (hl)
 862  898F 21 9F 87     	ld hl,Entidades_en_curso
 863  8992 35           	dec (hl)
 864  8993 21 9D 87     	ld hl,Numero_de_entidades
 865  8996 35           	dec (hl)
 866  8997 18 32        	jr 3F
 867  8999
 868  8999              ; -----
 869  8999
 870  8999              ;	`Movemos´ la explosión.
 871  8999
 872  8999 2A 61 87     4 ld hl,(Puntero_DESPLZ_der)
 873  899C 23           	inc hl
 874  899D 23           	inc hl
 875  899E 22 61 87     	ld (Puntero_DESPLZ_der),hl
 876  89A1 CD 80 8B     	call Extrae_address
 877  89A4 22 57 87     	ld (Puntero_objeto),hl
 878  89A7
 879  89A7 21 7B 87     	ld hl,Frames_explosion
 880  89AA 35           	dec (hl)
 881  89AB
 882  89AB 21 75 87     	ld hl,Ctrl_0
 883  89AE CB E6        	set 4,(hl)
 884  89B0
 885  89B0 18 19        	jr 3F
 886  89B2
 887  89B2              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 888  89B2
 889  89B2 AF           2 xor a
 890  89B3 32 75 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 891  89B6
 892  89B6              ; Movemos Entidades malignas.
 893  89B6              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 894  89B6
 895  89B6              ;	ld a,(Ctrl_2)
 896  89B6              ;	bit 5,a
 897  89B6              ;	jr nz,8F
 898  89B6
 899  89B6              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 900  89B6              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 901  89B6              ;	jr 7F
 902  89B6
 903  89B6              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 904  89B6
 905  89B6              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 906  89B6              ;	bit 4,a
 907  89B6              ;	ret z
 908  89B6
 909  89B6              ; Ha habido desplazamiento de la entidad maligna.
 910  89B6              ; Ha llegado a zona de AMADEUS ???
 911  89B6
 912  89B6 3A 5A 87     7 ld a,(Coordenada_y)
 913  89B9 FE 14        	cp $14
 914  89BB 38 08        	jr c,1F
 915  89BD
 916  89BD              ; ---------
 917  89BD
 918  89BD              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 919  89BD              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 920  89BD
 921  89BD F3           	di
 922  89BE CD C5 8E     	call Genera_coordenadas_X
 923  89C1 CD 01 8F     	call Compara_coordenadas_X
 924  89C4 FB           	ei
 925  89C5
 926  89C5              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 927  89C5
 928  89C5              ; ---------
 929  89C5
 930  89C5              1
 931  89C5
 932  89C5              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 933  89C5 CD D1 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 934  89C8 CD 26 8B     	call Limpia_Variables_de_borrado
 935  89CB
 936  89CB C9           3 ret
 937  89CC
 938  89CC              ; --------------------------------------------------------------------------------------------------------------
 939  89CC              ;
 940  89CC              ;	29/1/23
 941  89CC
 942  89CC              Mov_Amadeus
 943  89CC
 944  89CC              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 945  89CC
 946  89CC CD C9 98     	call Mov_right
 947  89CF
 948  89CF 3A 75 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 949  89D2 CB 67        	bit 4,a
 950  89D4 C8           	ret z
 951  89D5
 952  89D5              ; ---------
 953  89D5
 954  89D5              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 955  89D5 CD C1 8C     	call Repone_datos_de_borrado_Amadeus
 956  89D8 CD 26 8B     	call Limpia_Variables_de_borrado
 957  89DB
 958  89DB C9           	ret
 959  89DC
 960  89DC              ; -----------------------------------------------------------------------------------
 961  89DC              ;
 962  89DC              ;	12/12/23
 963  89DC              ;
 964  89DC              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 965  89DC
 966  89DC              Inicia_entidad
 967  89DC
 968  89DC              ; Averiguamos el tipo de entidad.
 969  89DC
 970  89DC 3A 52 87     	ld a,(Tipo)
 971  89DF 3D           	dec a
 972  89E0 28 02        	jr z,Entidad_tipo_1
 973  89E2 18 FE        	jr $
 974  89E4
 975  89E4              Entidad_tipo_1
 976  89E4
 977  89E4 21 B4 87     	ld hl,Ctrl_4
 978  89E7 CB 46        	bit 0,(hl)
 979  89E9 20 FE        	jr nz,$
 980  89EB
 981  89EB CB E6        	set 4,(hl)											; Activa FLAG. Indica que el Almacen_de_mov_masticados de la Entidad_1 está completo.
 982  89ED
 983  89ED              ; Inicializa el puntero (Puntero_indice_mov).
 984  89ED
 985  89ED CD FE 9E     	call Inicializa_Puntero_indice_mov
 986  89F0
 987  89F0              ; Construimos los movimientos masticados de este tipo de entidad.
 988  89F0
 989  89F0 CD FE 89     	call Construye_movimientos_masticados_entidad
 990  89F3
 991  89F3              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 992  89F3              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 993  89F3              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 994  89F3              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 995  89F3
 996  89F3 CD 53 8A     	call Cargamos_registros_con_mov_masticado
 997  89F6 CD 16 71     	call Guarda_foto_registros
 998  89F9
 999  89F9 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
1000  89FA              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
1001  89FA              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
1002  89FA CD CE 8B     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
1003  89FD C9           	ret
1004  89FE
1005  89FE              ; -----------------------------------------------------------------------------------
1006  89FE              ;
1007  89FE              ;	10/01/24
1008  89FE              ;
1009  89FE              ;
1010  89FE
1011  89FE              Construye_movimientos_masticados_entidad
1012  89FE
1013  89FE 2A 71 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1014  8A01 E5           	push hl
1015  8A02
1016  8A02 CD 46 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1017  8A05              ;															; _ el (Contador_de_mov_masticados).
1018  8A05 CD 86 8B     	call Inicia_Puntero_objeto
1019  8A08 CD 25 98     	call Recompone_posicion_inicio
1020  8A0B CD FC 91     1 call Draw
1021  8A0E CD 2A 8A     	call Guarda_movimiento_masticado
1022  8A11 CD 8D 9D     	call Movimiento
1023  8A14
1024  8A14 3A B3 87     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1025  8A17 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1026  8A19 28 F0        	jr z,1B
1027  8A1B
1028  8A1B              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1029  8A1B              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1030  8A1B
1031  8A1B E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1032  8A1C 22 71 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1033  8A1F
1034  8A1F
1035  8A1F              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1036  8A1F
1037  8A1F CD 11 9F     	call Situa_en_Contador_general_de_mov_masticados
1038  8A22
1039  8A22              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1040  8A22              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1041  8A22
1042  8A22 ED 4B 73 87  	ld bc,(Contador_de_mov_masticados)
1043  8A26 71           	ld (hl),c
1044  8A27 23           	inc hl
1045  8A28 70           	ld (hl),b
1046  8A29
1047  8A29 C9           	ret
1048  8A2A
1049  8A2A              ; -----------------------------------------------------------------------------------
1050  8A2A              ;
1051  8A2A              ;	28/12/23
1052  8A2A              ;
1053  8A2A              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1054  8A2A              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1055  8A2A
1056  8A2A              Guarda_movimiento_masticado
1057  8A2A
1058  8A2A ED 73 A5 87  	ld (Stack),sp
1059  8A2E ED 7B 71 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1060  8A32
1061  8A32 E5           	push hl
1062  8A33 DD E5            push ix
1063  8A35 FD E5            push iy
1064  8A37
1065  8A37 ED 7B A5 87      ld sp,(Stack)
1066  8A3B
1067  8A3B              ;    push hl
1068  8A3B
1069  8A3B 2A 73 87        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1070  8A3E 23           	inc hl
1071  8A3F 22 73 87     	ld (Contador_de_mov_masticados),hl
1072  8A42
1073  8A42              ;	pop hl
1074  8A42
1075  8A42 CD 46 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1076  8A45              ;															; _ el (Contador_de_mov_masticados).
1077  8A45 C9               ret
1078  8A46
1079  8A46              ; --------------------------------------------------------------------------------------------------------------
1080  8A46              ;
1081  8A46              ;	12/1/24
1082  8A46              ;
1083  8A46              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1084  8A46
1085  8A46              Actualiza_Puntero_de_almacen_de_mov_masticados
1086  8A46
1087  8A46              ;	push hl
1088  8A46              ;	push bc
1089  8A46
1090  8A46 2A 71 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1091  8A49 01 06 00     	ld bc,6
1092  8A4C A7           	and a
1093  8A4D ED 4A        	adc hl,bc
1094  8A4F 22 71 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1095  8A52
1096  8A52              ;	pop bc
1097  8A52              ;	pop hl
1098  8A52
1099  8A52 C9           	ret
1100  8A53
1101  8A53              ; --------------------------------------------------------------------------------------------------------------
1102  8A53              ;
1103  8A53              ;	15/01/24
1104  8A53              ;
1105  8A53              ;	Cargamos los registros_
1106  8A53              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1107  8A53              ;
1108  8A53              ;	HL contiene la dirección de la rutina de impresión.
1109  8A53              ;	IX contiene el puntero de impresión.
1110  8A53              ;	IY contiene (Puntero_objeto).
1111  8A53
1112  8A53
1113  8A53 ED 73 A5 87  Cargamos_registros_con_mov_masticado ld (Stack),sp
1114  8A57 ED 7B 71 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1115  8A5B
1116  8A5B FD E1        	pop iy
1117  8A5D DD E1        	pop ix
1118  8A5F E1           	pop hl
1119  8A60
1120  8A60 ED 73 71 87  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1121  8A64
1122  8A64 ED 7B A5 87  	ld sp,(Stack)
1123  8A68
1124  8A68 C9           	ret
1125  8A69
1126  8A69              ; --------------------------------------------------------------------------------------------------------------
1127  8A69              ;
1128  8A69              ;	28/12/23
1129  8A69              ;
1130  8A69              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1131  8A69              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1132  8A69
1133  8A69              Guarda_foto_entidad_a_pintar
1134  8A69
1135  8A69 3A 75 87     	ld a,(Ctrl_0)
1136  8A6C CB 77        	bit 6,a
1137  8A6E 28 0A        	jr z,5F
1138  8A70
1139  8A70              ; Guarda la foto de Amadeus.
1140  8A70
1141  8A70 CD FC 91     	call Draw
1142  8A73
1143  8A73 CD 2A 8A     	call Guarda_movimiento_masticado	;! Provisional
1144  8A76
1145  8A76 CD 16 71     	call Guarda_foto_registros
1146  8A79
1147  8A79              ;	di
1148  8A79              ;	jr $
1149  8A79              ;	ei
1150  8A79
1151  8A79 C9           	ret
1152  8A7A
1153  8A7A              ; ENTIDADES!
1154  8A7A              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1155  8A7A
1156  8A7A 3A B3 87     5 ld a,(Ctrl_3)
1157  8A7D CB 5F        	bit 3,a
1158  8A7F 28 04        	jr z,1F
1159  8A81
1160  8A81              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1161  8A81
1162  8A81 CD BC 8A     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1163  8A84 C9           	ret
1164  8A85
1165  8A85              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1166  8A85
1167  8A85 3A B3 87     1 ld a,(Ctrl_3)
1168  8A88 CB 57        	bit 2,a
1169  8A8A 20 10        	jr nz,6F
1170  8A8C
1171  8A8C              ; Entidad guía o fantasma ???
1172  8A8C
1173  8A8C 3A 7A 87     	ld a,(Ctrl_2)
1174  8A8F CB 6F        	bit 5,a
1175  8A91 20 10        	jr nz,3F
1176  8A93
1177  8A93              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1178  8A93
1179  8A93 18 EC        	jr 4B
1180  8A95
1181  8A95              ; ENTIDAD_GUÍA:
1182  8A95              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1183  8A95              ; _guardando "movimientos_masticados".
1184  8A95
1185  8A95 3A B3 87     2 ld a,(Ctrl_3)
1186  8A98 CB 57        	bit 2,a
1187  8A9A 28 07        	jr z,3F
1188  8A9C
1189  8A9C              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1190  8A9C              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1191  8A9C
1192  8A9C CB 97        6 res 2,a
1193  8A9E CB DF        	set 3,a
1194  8AA0 32 B3 87     	ld (Ctrl_3),a
1195  8AA3
1196  8AA3
1197  8AA3              ;	Esto sólo lo ejecuta una entidad guía.
1198  8AA3
1199  8AA3 CD FC 91     3 	call Draw
1200  8AA6 CD 2A 8A     	call Guarda_movimiento_masticado
1201  8AA9 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1202  8AAC
1203  8AAC              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1204  8AAC              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1205  8AAC
1206  8AAC CD B0 8A     	call Convierte_guia_en_fantasma
1207  8AAF C9           	ret
1208  8AB0
1209  8AB0              ; --------------------------------------------------------------------------------------------------------------
1210  8AB0              ;
1211  8AB0              ;	28/12/23
1212  8AB0              ;
1213  8AB0
1214  8AB0 3A B3 87     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1215  8AB3 CB 5F        	bit 3,a
1216  8AB5 C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1217  8AB6
1218  8AB6              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1219  8AB6
1220  8AB6 21 7A 87     	ld hl,Ctrl_2
1221  8AB9 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1222  8ABB
1223  8ABB C9           	ret
1224  8ABC
1225  8ABC              ; --------------------------------------------------------------------------------------------------------------
1226  8ABC              ;
1227  8ABC              ;	21/12/23
1228  8ABC              ;
1229  8ABC              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1230  8ABC              ;
1231  8ABC              ;		IY contiene (Puntero_objeto).
1232  8ABC              ;		IX contiene el puntero de impresión.
1233  8ABC              ;		HL contiene la dirección de la rutina de impresión.
1234  8ABC              ;
1235  8ABC              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1236  8ABC              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1237  8ABC              ;	Decrementa el (Contador_de_mov_masticados)
1238  8ABC              ;
1239  8ABC              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1240  8ABC              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1241  8ABC              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1242  8ABC
1243  8ABC
1244  8ABC ED 73 A5 87  Prepara_registros_con_mov_masticados ld (Stack),sp
1245  8AC0 ED 7B 71 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1246  8AC4
1247  8AC4 FD E1        	pop iy
1248  8AC6 DD E1        	pop ix
1249  8AC8 E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1250  8AC9
1251  8AC9 ED 73 71 87  	ld (Puntero_de_almacen_de_mov_masticados),sp
1252  8ACD ED 7B A5 87  	ld sp,(Stack)
1253  8AD1
1254  8AD1 CD 16 71     	call Guarda_foto_registros
1255  8AD4
1256  8AD4 E5           	push hl
1257  8AD5
1258  8AD5 2A 73 87     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1259  8AD8 23           	inc hl
1260  8AD9 22 73 87     	ld (Contador_de_mov_masticados),hl
1261  8ADC
1262  8ADC              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1263  8ADC
1264  8ADC ED 4B 80 87  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1265  8AE0 A7           	and a
1266  8AE1 ED 42        	sbc hl,bc
1267  8AE3 CC B0 8A     	call z,Convierte_guia_en_fantasma
1268  8AE6
1269  8AE6 E1           	pop hl
1270  8AE7
1271  8AE7 C9           	ret
1272  8AE8
1273  8AE8              ; --------------------------------------------------------------------------------------------------------------
1274  8AE8              ;
1275  8AE8              ;	19/9/23
1276  8AE8
1277  8AE8              ;Prepara_var_pintado
1278  8AE8
1279  8AE8              ;	ld hl,Filas
1280  8AE8              ;	ld de,Variables_de_pintado
1281  8AE8              ;	ld bc,8
1282  8AE8              ;	ldir
1283  8AE8              ;	ret
1284  8AE8
1285  8AE8              ; --------------------------------------------------------------------------------------------------------------
1286  8AE8
1287  8AE8              ;Repone_pintar
1288  8AE8
1289  8AE8              ;	ld hl,Variables_de_pintado
1290  8AE8              ;	ld de,Filas
1291  8AE8              ;	ld bc,8
1292  8AE8              ;	ldir
1293  8AE8              ;	ret
1294  8AE8
1295  8AE8              ; *************************************************************************************************************************************************************
1296  8AE8              ;
1297  8AE8              ; 8/1/23
1298  8AE8              ;
1299  8AE8              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1300  8AE8              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1301  8AE8              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1302  8AE8
1303  8AE8              ; Destruye HL y DE !!!!!
1304  8AE8
1305  8AE8              Inicia_punteros_de_cajas
1306  8AE8
1307  8AE8 21 76 85     	ld hl,Indice_de_cajas_de_entidades
1308  8AEB CD 80 8B         call Extrae_address
1309  8AEE 22 97 87         ld (Puntero_store_caja),hl
1310  8AF1 21 78 85     	ld hl,Indice_de_cajas_de_entidades+2
1311  8AF4 22 9B 87     	ld (Indice_restore_caja),hl
1312  8AF7 CD 80 8B     	call Extrae_address
1313  8AFA 22 99 87     	ld (Puntero_restore_caja),hl
1314  8AFD C9               ret
1315  8AFE
1316  8AFE              ; *************************************************************************************************************************************************************
1317  8AFE              ;
1318  8AFE              ; 8/1/23
1319  8AFE              ;
1320  8AFE              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1321  8AFE
1322  8AFE 21 0E 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1323  8B01 22 B6 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1324  8B04 C9           	ret
1325  8B05 21 F6 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1326  8B08 22 B8 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1327  8B0B C9           	ret
1328  8B0C
1329  8B0C              ; -------------------------------------------------------------------------------------------------------------
1330  8B0C              ;
1331  8B0C              ; 21/9/23
1332  8B0C              ;
1333  8B0C
1334  8B0C              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1335  8B0C
1336  8B0C              Limpia_album_Amadeus
1337  8B0C
1338  8B0C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1339  8B0F 7E           	ld a,(hl)
1340  8B10 A7           	and a
1341  8B11 C8           	ret z
1342  8B12
1343  8B12 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1344  8B15 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1345  8B18 01 0B 00     	ld bc,11
1346  8B1B AF           	xor a
1347  8B1C 77           	ld (hl),a
1348  8B1D ED B0        	ldir
1349  8B1F
1350  8B1F 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1351  8B22 22 B1 87     	ld (End_Snapshot_Amadeus),hl
1352  8B25
1353  8B25 C9           	ret
1354  8B26
1355  8B26 21 69 87     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1356  8B29 11 6A 87     	ld de,Variables_de_borrado+1
1357  8B2C 01 05 00     	ld bc,5
1358  8B2F AF           	xor a
1359  8B30 77           	ld (hl),a
1360  8B31 ED B0        	ldir
1361  8B33 C9           	ret
1362  8B34
1363  8B34              ; -------------------------------------------------------------------------------------------------------------
1364  8B34              ;
1365  8B34              ; 8/9/23
1366  8B34              ;
1367  8B34
1368  8B34              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1369  8B34              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1370  8B34
1371  8B34              Calcula_numero_de_malotes
1372  8B34
1373  8B34 21 00 70     	ld hl,Album_de_fotos
1374  8B37 EB           	ex de,hl
1375  8B38 2A AB 87     	ld hl,(Stack_snapshot)
1376  8B3B
1377  8B3B 06 00        	ld b,0
1378  8B3D 7D           	ld a,l
1379  8B3E 93           	sub e
1380  8B3F 28 07        	jr z,1F
1381  8B41
1382  8B41              ; Nº de malotes no es "0".
1383  8B41
1384  8B41 D6 06        2 sub 6
1385  8B43 04           	inc b
1386  8B44 A7           	and a
1387  8B45 20 FA        	jr nz,2B
1388  8B47 78           	ld a,b
1389  8B48
1390  8B48 32 A0 87     1 ld (Numero_de_malotes),a
1391  8B4B C9           	ret
1392  8B4C
1393  8B4C              ; -------------------------------------------------------------------------------------------------------------
1394  8B4C              ;
1395  8B4C              ; 8/9/23
1396  8B4C              ;
1397  8B4C
1398  8B4C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1399  8B4C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1400  8B4C
1401  8B4C              Calcula_malotes_Amadeus
1402  8B4C
1403  8B4C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1404  8B4F EB           	ex de,hl
1405  8B50 2A B1 87     	ld hl,(End_Snapshot_Amadeus)
1406  8B53
1407  8B53 7C           	ld a,h
1408  8B54 A7           	and a
1409  8B55 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1410  8B57
1411  8B57 06 00        	ld b,0
1412  8B59 7D           	ld a,l
1413  8B5A 93           	sub e
1414  8B5B 28 07        	jr z,1F
1415  8B5D
1416  8B5D              ; Nº de malotes no es "0".
1417  8B5D
1418  8B5D D6 06        2 sub 6
1419  8B5F 04           	inc b
1420  8B60 A7           	and a
1421  8B61 20 FA        	jr nz,2B
1422  8B63 78           	ld a,b
1423  8B64
1424  8B64 32 A0 87     1 ld (Numero_de_malotes),a
1425  8B67 C9           	ret
1426  8B68
1427  8B68              ; -------------------------------------------------------------------------------------------------------------
1428  8B68              ;
1429  8B68              ; 28/2/23
1430  8B68              ;
1431  8B68
1432  8B68              Calcula_numero_de_disparotes
1433  8B68
1434  8B68 21 56 70     	ld hl,Album_de_fotos_disparos
1435  8B6B EB           	ex de,hl
1436  8B6C 2A AF 87     	ld hl,(End_Snapshot_disparos)
1437  8B6F
1438  8B6F 06 00        	ld b,0
1439  8B71 7D           	ld a,l
1440  8B72 93           	sub e
1441  8B73 28 07        	jr z,1F
1442  8B75
1443  8B75              ; Nº de malotes no es "0".
1444  8B75
1445  8B75 D6 06        2 sub 6
1446  8B77 04           	inc b
1447  8B78 A7           	and a
1448  8B79 20 FA        	jr nz,2B
1449  8B7B 78           	ld a,b
1450  8B7C
1451  8B7C 32 B5 87     1 ld (Numero_de_disparotes),a
1452  8B7F C9           	ret
1453  8B80
1454  8B80              ; *************************************************************************************************************************************************************
1455  8B80              ;
1456  8B80              ; 20/10/22
1457  8B80              ;
1458  8B80              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1459  8B80              ;
1460  8B80              ; Destruye el puntero y DE !!!!!
1461  8B80
1462  8B80 5E           Extrae_address ld e,(hl)
1463  8B81 23           	inc hl
1464  8B82 56           	ld d,(hl)
1465  8B83 2B           	dec hl
1466  8B84 EB           	ex de,hl
1467  8B85 C9           	ret
1468  8B86
1469  8B86              ; *************************************************************************************************************************************************************
1470  8B86              ;
1471  8B86              ;	7/2/23
1472  8B86              ;
1473  8B86              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1474  8B86              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1475  8B86              ;
1476  8B86              ;   Destruye HL y BC !!!!!,
1477  8B86              ;
1478  8B86              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1479  8B86              ;					"0" ..... Izquierda.
1480  8B86
1481  8B86              Inicia_Puntero_objeto
1482  8B86
1483  8B86 3A 67 87     	ld a,(Cuad_objeto)
1484  8B89 E6 01        	and 1
1485  8B8B F5           	push af
1486  8B8C CC AA 8B     	call z,Inicia_puntero_objeto_izq
1487  8B8F F1           	pop af
1488  8B90 28 2B        	jr z,1F
1489  8B92 CD 97 8B     	call Inicia_puntero_objeto_der
1490  8B95 18 26        	jr 1F
1491  8B97
1492  8B97              ; Arrancamos desde la parte izquierda de la pantalla.
1493  8B97              ; Iniciamos (Indice_Sprite_der).
1494  8B97
1495  8B97 2A 5D 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1496  8B9A 22 61 87     	ld (Puntero_DESPLZ_der),hl
1497  8B9D CD 80 8B     	call Extrae_address
1498  8BA0 22 57 87     	ld (Puntero_objeto),hl
1499  8BA3
1500  8BA3 2A 5F 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1501  8BA6 22 63 87     	ld (Puntero_DESPLZ_izq),hl
1502  8BA9 C9           	ret
1503  8BAA
1504  8BAA              ; Arrancamos desde la parte derecha de la pantalla.
1505  8BAA              ; Iniciamos (Indice_Sprite_izq).
1506  8BAA
1507  8BAA 2A 5F 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1508  8BAD 22 63 87     	ld (Puntero_DESPLZ_izq),hl
1509  8BB0 CD 80 8B     	call Extrae_address
1510  8BB3 22 57 87     	ld (Puntero_objeto),hl
1511  8BB6
1512  8BB6 2A 5D 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1513  8BB9 22 61 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1514  8BBC C9           	ret
1515  8BBD
1516  8BBD              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1517  8BBD
1518  8BBD 21 40 83     1 ld hl,Amadeus
1519  8BC0 ED 4B 57 87  	ld bc,(Puntero_objeto)
1520  8BC4 B7 ED 42     	sub hl,bc
1521  8BC7 C0           	ret nz
1522  8BC8 21 75 87     	ld hl,Ctrl_0
1523  8BCB CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1524  8BCD C9           	ret 												; _de nuestra nave en los extremos.
1525  8BCE
1526  8BCE              ; *************************************************************************************************************************************************************
1527  8BCE              ;
1528  8BCE              ;	21/12/23
1529  8BCE              ;
1530  8BCE              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1531  8BCE              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1532  8BCE
1533  8BCE              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1534  8BCE              ;	_de la 2ª y 3ª entidad respectivamente.
1535  8BCE
1536  8BCE              Store_Restore_cajas
1537  8BCE
1538  8BCE              ;	push hl
1539  8BCE              ;	push de
1540  8BCE              ; 	push bc
1541  8BCE
1542  8BCE              ;	STORE !!!!!
1543  8BCE              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1544  8BCE
1545  8BCE
1546  8BCE F3           	di
1547  8BCF 21 52 87     	ld hl,Variables_DRAW
1548  8BD2 ED 5B 97 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1549  8BD6 01 2A 00     	ld bc,42
1550  8BD9 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1551  8BDB FB           	ei
1552  8BDC
1553  8BDC 18 FE        	jr $
1554  8BDE
1555  8BDE              ; 	Entidad_sospechosa. 20/4/23
1556  8BDE
1557  8BDE 3A 68 87     	ld a,(Impacto)
1558  8BE1 A7           	and a
1559  8BE2 28 0C        	jr z,1F
1560  8BE4
1561  8BE4 2A 97 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1562  8BE7 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1563  8BEA A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1564  8BEB ED 4A        	adc hl,bc 											; _ "0" más adelante.
1565  8BED 22 BB 87     	ld (Entidad_sospechosa_de_colision),hl
1566  8BF0
1567  8BF0              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1568  8BF0
1569  8BF0 2A 99 87     1 ld hl,(Puntero_restore_caja)
1570  8BF3 7E           	ld a,(hl)
1571  8BF4 A7           	and a
1572  8BF5 F5           	push af
1573  8BF6 28 0E        	jr z,2F
1574  8BF8
1575  8BF8 F3           	di
1576  8BF9 18 FE        	jr $
1577  8BFB FB           	ei
1578  8BFC
1579  8BFC F3           	di
1580  8BFD 11 52 87     	ld de,Variables_DRAW
1581  8C00 01 2A 00     	ld bc,42
1582  8C03 ED B0        	ldir
1583  8C05 FB           	ei
1584  8C06
1585  8C06 CD 1F 8C     2 call Incrementa_punteros_de_cajas
1586  8C09
1587  8C09 F1           	pop af
1588  8C0A 28 E4        	jr z,1B
1589  8C0C
1590  8C0C              ;	pop bc
1591  8C0C              ;	pop de
1592  8C0C              ;	pop hl
1593  8C0C
1594  8C0C C9           	ret
1595  8C0D
1596  8C0D              ; **************************************************************************************************
1597  8C0D              ;
1598  8C0D              ;	21/12/23
1599  8C0D              ;
1600  8C0D              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1601  8C0D
1602  8C0D E5           Restore_entidad push hl
1603  8C0E D5           	push de
1604  8C0F C5            	push bc
1605  8C10
1606  8C10 2A 97 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1607  8C13 11 52 87     	ld de,Variables_DRAW
1608  8C16 01 2A 00     	ld bc,42
1609  8C19 ED B0        	ldir
1610  8C1B
1611  8C1B C1           	pop bc
1612  8C1C D1           	pop de
1613  8C1D E1           	pop hl
1614  8C1E C9           	ret
1615  8C1F
1616  8C1F              ; **************************************************************************************************
1617  8C1F              ;
1618  8C1F              ;	08/05/23
1619  8C1F              ;
1620  8C1F              ;	Incrementamos los dos punteros de entidades. (+1).
1621  8C1F
1622  8C1F              Incrementa_punteros_de_cajas
1623  8C1F
1624  8C1F 2A 99 87     	ld hl,(Puntero_restore_caja)
1625  8C22 22 97 87     	ld (Puntero_store_caja),hl
1626  8C25 2A 9B 87     	ld hl,(Indice_restore_caja)
1627  8C28 23           	inc hl
1628  8C29 23           	inc hl
1629  8C2A 22 9B 87     	ld (Indice_restore_caja),hl
1630  8C2D CD 80 8B         call Extrae_address
1631  8C30 22 99 87         ld (Puntero_restore_caja),hl
1632  8C33 C9               ret
1633  8C34
1634  8C34              ; **************************************************************************************************
1635  8C34              ;
1636  8C34              ;	21/12/23
1637  8C34              ;
1638  8C34              ;	Restore_Amadeus
1639  8C34              ;
1640  8C34              ;	Cargamos en DRAW los parámetros de Amadeus.
1641  8C34              ;
1642  8C34
1643  8C34 E5           Restore_Amadeus	push hl
1644  8C35 D5           	push de
1645  8C36 C5            	push bc
1646  8C37 21 88 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1647  8C3A 11 52 87     	ld de,Variables_DRAW
1648  8C3D 01 2A 00     	ld bc,42
1649  8C40 ED B0        	ldir
1650  8C42 C1           	pop bc
1651  8C43 D1           	pop de
1652  8C44 E1           	pop hl
1653  8C45 C9           	ret
1654  8C46
1655  8C46              ; *************************************************************************************************************************************************************
1656  8C46              ;
1657  8C46              ;	21/12/23
1658  8C46              ;
1659  8C46              ;	Store_Amadeus
1660  8C46              ;
1661  8C46              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1662  8C46              ;
1663  8C46              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1664  8C46              ;
1665  8C46              ;	DESTRUYE: HL y BC y DE.
1666  8C46
1667  8C46 21 52 87     Store_Amadeus ld hl,Variables_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1668  8C49 01 2A 00     	ld bc,42
1669  8C4C ED B0        	ldir
1670  8C4E C9           	ret
1671  8C4F
1672  8C4F              ; -----------------------------------------------------------
1673  8C4F              ;
1674  8C4F              ;	21/12/23
1675  8C4F              ;
1676  8C4F              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1677  8C4F              ;
1678  8C4F              ;	Destruye: HL,BC,DE,A
1679  8C4F
1680  8C4F 21 52 87     Borra_datos_entidad ld hl,Variables_DRAW
1681  8C52 01 29 00     	ld bc,41
1682  8C55 AF           	xor a
1683  8C56 77           	ld (hl),a
1684  8C57 11 53 87     	ld de,Variables_DRAW+1
1685  8C5A ED B0        	ldir
1686  8C5C C9           	ret
1687  8C5D
1688  8C5D              ; -----------------------------------------------------------
1689  8C5D
1690  8C5D              ; Teclado.
1691  8C5D
1692  8C5D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1693  8C5F DB FE        	in a,($fe)
1694  8C61 E6 01        	and $01
1695  8C63 28 02        	jr z,1f
1696  8C65 18 F6        	jr Pulsa_ENTER
1697  8C67 C9           1 ret
1698  8C68
1699  8C68              ; **************************************************************************************************
1700  8C68              ;
1701  8C68              ; Temporización.
1702  8C68
1703  8C68              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1704  8C68              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1705  8C68              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1706  8C68              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1707  8C68
1708  8C68              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1709  8C68              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1710  8C68              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1711  8C68
1712  8C68              ; A partir de $4f61 no hace falta DELAY.
1713  8C68
1714  8C68              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1715  8C68
1716  8C68 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1717  8C6B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1718  8C6C 78           	LD A,B
1719  8C6D A7           	AND A
1720  8C6E 20 FB        	JR NZ,wait
1721  8C70 C9           	RET
1722  8C71
1723  8C71              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1724  8C71              ;
1725  8C71              ;	5/3/23
1726  8C71              ;
1727  8C71              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1728  8C71
1729  8C71              Movimiento_Amadeus
1730  8C71
1731  8C71              ; Disparo.
1732  8C71
1733  8C71 3A CB 87     	ld a,(Disparo_Amadeus)
1734  8C74 A7           	and a
1735  8C75 20 02        	jr nz,1F
1736  8C77 18 15        	jr 2F
1737  8C79
1738  8C79 3E F7        1 ld a,$f7													; "5" para disparar.
1739  8C7B DB FE        	in a,($fe)
1740  8C7D E6 10        	and $10
1741  8C7F
1742  8C7F F5           	push af
1743  8C80 CC 28 8D     	call z,Genera_disparo
1744  8C83 F1           	pop af
1745  8C84 20 08        	jr nz,2F
1746  8C86
1747  8C86 3A CB 87     	ld a,(Disparo_Amadeus)
1748  8C89 EE 01        	xor 1
1749  8C8B 32 CB 87     	ld (Disparo_Amadeus),a
1750  8C8E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1751  8C90 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1752  8C92 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1753  8C94 CC EC 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1754  8C97
1755  8C97 3E F7        	ld a,$f7
1756  8C99 DB FE        	in a,($fe)
1757  8C9B E6 01        	and $01
1758  8C9D C8           	ret z
1759  8C9E
1760  8C9E 3E F7        	ld a,$f7
1761  8CA0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1762  8CA2 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1763  8CA4 CC C9 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1764  8CA7 C9           	ret
1765  8CA8
1766  8CA8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1767  8CA8              ;
1768  8CA8              ;	Rutina provisional para que los malotes cagen balas.
1769  8CA8
1770  8CA8              Detecta_disparo_entidad
1771  8CA8
1772  8CA8 3A CE 87     	ld a,(Disparo_entidad)
1773  8CAB A7           	and a
1774  8CAC C8           	ret z
1775  8CAD
1776  8CAD              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1777  8CAD
1778  8CAD              ;	ld a,$7f				; Detecta SPACE.
1779  8CAD              ;	in a,($fe)
1780  8CAD              ;	and 1
1781  8CAD              ;	ret nz
1782  8CAD
1783  8CAD CD 28 8D     	call Genera_disparo
1784  8CB0 C9           	ret
1785  8CB1
1786  8CB1              ; ----------------------------------------------------------------------
1787  8CB1              ;
1788  8CB1              ;	8/9/23
1789  8CB1
1790  8CB1 2A B1 87     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1791  8CB4 2B            	dec hl
1792  8CB5 7E           	ld a,(hl)
1793  8CB6 A7           	and a
1794  8CB7 C8           	ret z										; Salimos si es álbum está vacío.
1795  8CB8
1796  8CB8 11 6E 87     	ld de,Variables_de_borrado+5
1797  8CBB 01 06 00     	ld bc,6
1798  8CBE ED B8        	lddr
1799  8CC0 C9           	ret
1800  8CC1
1801  8CC1              ; ----------------------------------------------------------------------
1802  8CC1              ;
1803  8CC1              ;	9/9/23
1804  8CC1
1805  8CC1              Repone_datos_de_borrado_Amadeus
1806  8CC1
1807  8CC1 21 69 87     	ld hl,Variables_de_borrado
1808  8CC4 11 AC 70     	ld de,Album_de_fotos_Amadeus
1809  8CC7 01 06 00     	ld bc,6
1810  8CCA ED B0        	ldir
1811  8CCC
1812  8CCC EB           	ex de,hl
1813  8CCD 22 B1 87     	ld (End_Snapshot_Amadeus),hl
1814  8CD0
1815  8CD0 C9           	ret
1816  8CD1
1817  8CD1              ; ----------------------------------------------------------------------
1818  8CD1              ;
1819  8CD1              ;	27/10/23
1820  8CD1              ;
1821  8CD1
1822  8CD1              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1823  8CD1              ;	_ Album_de_fotos correspondiente.
1824  8CD1
1825  8CD1              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1826  8CD1              ;	_ durante el proceso de escritura.
1827  8CD1
1828  8CD1              Repone_datos_de_borrado
1829  8CD1
1830  8CD1 F3           	di
1831  8CD2 ED 5B AB 87  	ld de,(Stack_snapshot)
1832  8CD6 21 69 87     	ld hl,Variables_de_borrado
1833  8CD9 01 06 00     	ld bc,6
1834  8CDC ED B0        	ldir
1835  8CDE FB           	ei
1836  8CDF
1837  8CDF EB           	ex de,hl
1838  8CE0 22 AB 87     	ld (Stack_snapshot),hl
1839  8CE3
1840  8CE3 C9           	ret
1841  8CE4
1842  8CE4              ; --------------------------------------------------------------------------------------
1843  8CE4
1844  8CE4              Pinta_Amadeus
1845  8CE4
1846  8CE4 CD 4C 8B        	call Calcula_malotes_Amadeus
1847  8CE7 CD 8C 95     	call Extrae_foto_Amadeus
1848  8CEA CD 0C 8B     	call Limpia_album_Amadeus
1849  8CED
1850  8CED C9           	ret
1851  8CEE
1852  8CEE              Pinta_entidades
1853  8CEE
1854  8CEE              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1855  8CEE
1856  8CEE 3A B3 87     	ld a,(Ctrl_3)
1857  8CF1 CB 47        	bit 0,a
1858  8CF3 C8           	ret z
1859  8CF4
1860  8CF4 CD 34 8B     	call Calcula_numero_de_malotes
1861  8CF7 CD 0A 95     	call Extrae_foto_entidades
1862  8CFA CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1863  8CFD
1864  8CFD C9           	ret
1865  8CFE
1866  8CFE              ; -----------------------------------------------------------------------------------
1867  8CFE              ;
1868  8CFE              ;	10/12/23
1869  8CFE              ;
1870  8CFE              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1871  8CFE
1872  8CFE              Actualiza_relojes
1873  8CFE
1874  8CFE 3A B3 87     	ld a,(Ctrl_3)
1875  8D01 CB 47        	bit 0,a
1876  8D03 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1877  8D04
1878  8D04 21 C6 87     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1879  8D07 34           	inc (hl)
1880  8D08
1881  8D08 34           	inc (hl)
1882  8D09 35           	dec (hl)
1883  8D0A C0           	ret nz
1884  8D0B
1885  8D0B 21 C7 87     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1886  8D0E 34           	inc (hl)
1887  8D0F C9           	ret
1888  8D10
1889  8D10              ; ---------------------------------------------------------------
1890  8D10              ;
1891  8D10              ;	21/12/23
1892  8D10
1893  8D10              Guarda_parametros_DRAW
1894  8D10
1895  8D10 21 52 87     	ld hl,Variables_DRAW
1896  8D13 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1897  8D16 01 2A 00     	ld bc,42
1898  8D19 ED B0        	ldir
1899  8D1B C9           	ret
1900  8D1C
1901  8D1C              Recupera_parametros_DRAW
1902  8D1C
1903  8D1C 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1904  8D1F 11 52 87     	ld de,Variables_DRAW
1905  8D22 01 2A 00     	ld bc,42
1906  8D25 ED B0        	ldir
1907  8D27 C9           	ret
1908  8D28
1909  8D28              ; ---------------------------------------------------------------
1910  8D28
1911  8D28              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D28              ; ******************************************************************************************************************************************************************************************
   2+ 8D28              ;
   3+ 8D28              ;   21/07/23
   4+ 8D28              ;
   5+ 8D28              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D28              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D28              ;
   8+ 8D28              ;
   9+ 8D28              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D28              ;
  11+ 8D28              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D28              ;               _ hacen las entidades hacia abajo.
  13+ 8D28              ;
  14+ 8D28              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D28              ;
  16+ 8D28              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D28              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D28              ;
  19+ 8D28              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D28              ;           _ la bala.
  21+ 8D28              ;
  22+ 8D28              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D28              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D28              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D28              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D28              ;           _ en el momento de generarse la bala)).
  27+ 8D28
  28+ 8D28              Genera_disparo
  29+ 8D28
  30+ 8D28              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D28              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D28              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D28              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D28              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D28              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D28              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D28
  38+ 8D28              ; Exclusiones:
  39+ 8D28
  40+ 8D28 3A 7F 87         ld a,(Vel_down)
  41+ 8D2B 47               ld b,a
  42+ 8D2C 3A C5 87         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D2F B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D30 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D31 3A 76 87         ld a,(Columnas)
  46+ 8D34 47               ld b,a
  47+ 8D35 3A 54 87         ld a,(Columns)
  48+ 8D38 B8               cp b
  49+ 8D39 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D3A
  51+ 8D3A              ; ----- ----- -----
  52+ 8D3A
  53+ 8D3A 3A 75 87         ld a,(Ctrl_0)
  54+ 8D3D CB 77            bit 6,a
  55+ 8D3F 20 06            jr nz,14F
  56+ 8D41
  57+ 8D41 3A 5A 87         ld a,(Coordenada_y)
  58+ 8D44 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D46 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D47
  61+ 8D47 21 00 80     14 ld hl,Indice_disparo
  62+ 8D4A 3A 5B 87         ld a,(CTRL_DESPLZ)
  63+ 8D4D 4F               ld c,a
  64+ 8D4E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D50              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D50              ;                                            ""        ""       "f9", B="1"
  67+ 8D50              ;                                            ""        ""       "fb", B="2"
  68+ 8D50              ;                                            ""        ""       "fb", B="3"
  69+ 8D50 A7               and a
  70+ 8D51 28 10            jr z,1F
  71+ 8D53 E6 01            and 1
  72+ 8D55 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D56
  74+ 8D56 79               ld a,c
  75+ 8D57 16 F9            ld d,$f9
  76+ 8D59 23           2 inc hl
  77+ 8D5A 23               inc hl
  78+ 8D5B 04               inc b
  79+ 8D5C BA               cp d
  80+ 8D5D 28 04            jr z,1F
  81+ 8D5F 14               inc d
  82+ 8D60 14               inc d
  83+ 8D61 18 F6            jr 2B
  84+ 8D63
  85+ 8D63 CD 80 8B     1 call Extrae_address
  86+ 8D66 E5               push hl
  87+ 8D67 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D69 DD 21 D2 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D6D
  90+ 8D6D              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D6D              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D6D
  93+ 8D6D 3A 75 87         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D70 CB 77            bit 6,a
  95+ 8D72 20 04            jr nz,19F
  96+ 8D74
  97+ 8D74 AF               xor a
  98+ 8D75 32 CE 87         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D78
 100+ 8D78 3A 67 87     19 ld a,(Cuad_objeto)
 101+ 8D7B FE 02            cp 2
 102+ 8D7D 38 66            jr c,3F
 103+ 8D7F 28 64            jr z,3F
 104+ 8D81
 105+ 8D81              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D81
 107+ 8D81 E6 01            and 1
 108+ 8D83 28 30            jr z,4F
 109+ 8D85
 110+ 8D85              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D85              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D85              ;
 113+ 8D85              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D85              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D85              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D85
 117+ 8D85 2A 55 87     	ld hl,(Posicion_actual)
 118+ 8D88
 119+ 8D88              ;   Amadeus o entidad ???.
 120+ 8D88
 121+ 8D88 3A 75 87         ld a,(Ctrl_0)
 122+ 8D8B CB 77            bit 6,a
 123+ 8D8D 28 0A            jr z,8F
 124+ 8D8F
 125+ 8D8F              ; 	Dispara Amadeus.
 126+ 8D8F
 127+ 8D8F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D91 CD FB 94         call PreviousScan
 129+ 8D94 CD FB 94         call PreviousScan
 130+ 8D97
 131+ 8D97              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D97              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D97              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D97              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D97
 136+ 8D97 18 11            jr 10F
 137+ 8D99
 138+ 8D99              ; 	Dispara Entidad.
 139+ 8D99
 140+ 8D99 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D9C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D9C
 143+ 8D9C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D9C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D9C
 146+ 8D9C C5               push bc
 147+ 8D9D 06 10            ld b,16
 148+ 8D9F CD EC 94     9 call NextScan
 149+ 8DA2 10 FB            djnz 9B
 150+ 8DA4 C1               pop bc
 151+ 8DA5 CD 0F 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DA8 18 06            jr 17F
 153+ 8DAA
 154+ 8DAA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DAA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DAA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DAA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DAA
 159+ 8DAA CD 0F 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DAD CD 84 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DB0              ;                                                      ; _al generar el disparo.
 162+ 8DB0
 163+ 8DB0              ; 	LLegados a este punto tendremos:
 164+ 8DB0              ;
 165+ 8DB0              ;       Puntero_objeto_disparo en IY.
 166+ 8DB0              ;       Rutinas_de_impresion en IX.
 167+ 8DB0              ;       Puntero_de_impresion en HL.
 168+ 8DB0              ;       Impacto/Dirección en BC.
 169+ 8DB0
 170+ 8DB0 CD 17 8E     17 call Almacena_disparo
 171+ 8DB3 18 52            jr 6F                                             ; RET.
 172+ 8DB5
 173+ 8DB5              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DB5              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DB5              ;
 176+ 8DB5              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DB5              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DB5              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DB5
 180+ 8DB5 2A 55 87     4 ld hl,(Posicion_actual)
 181+ 8DB8
 182+ 8DB8              ;   Amadeus o entidad ???.
 183+ 8DB8
 184+ 8DB8 3A 75 87         ld a,(Ctrl_0)
 185+ 8DBB CB 77            bit 6,a
 186+ 8DBD 28 0A            jr z,11F
 187+ 8DBF
 188+ 8DBF              ; 	Dispara Amadeus.
 189+ 8DBF
 190+ 8DBF 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DC1 CD FB 94         call PreviousScan
 192+ 8DC4 CD FB 94         call PreviousScan
 193+ 8DC7
 194+ 8DC7              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DC7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DC7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DC7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DC7
 199+ 8DC7 18 11            jr 13F
 200+ 8DC9
 201+ 8DC9              ; 	Dispara Entidad.
 202+ 8DC9
 203+ 8DC9 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DCC              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DCC
 206+ 8DCC              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DCC              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DCC
 209+ 8DCC C5               push bc
 210+ 8DCD 06 10            ld b,16
 211+ 8DCF CD EC 94     12 call NextScan
 212+ 8DD2 10 FB            djnz 12B
 213+ 8DD4 C1               pop bc
 214+ 8DD5
 215+ 8DD5 CD 08 8E         call Ajusta_disparo_parte_derecha
 216+ 8DD8 18 06            jr 18F
 217+ 8DDA
 218+ 8DDA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DDA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DDA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DDA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DDA
 223+ 8DDA CD 08 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8DDD CD 84 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DE0              ;                                                       ; _al generar el disparo.
 226+ 8DE0
 227+ 8DE0              ; LLegados a este punto tendremos:
 228+ 8DE0              ;
 229+ 8DE0              ;       Puntero_objeto_disparo en IY.
 230+ 8DE0              ;       Rutinas_de_impresion en IX.
 231+ 8DE0              ;       Puntero_de_impresion en HL.
 232+ 8DE0              ;       Impacto/Dirección en BC.
 233+ 8DE0
 234+ 8DE0 CD 17 8E     18 call Almacena_disparo
 235+ 8DE3 18 22            jr 6F                                               ; RET.
 236+ 8DE5
 237+ 8DE5              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DE5
 239+ 8DE5 28 11        3 jr z,5F
 240+ 8DE7
 241+ 8DE7              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DE7              ;
 243+ 8DE7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DE7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DE7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DE7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DE7
 248+ 8DE7              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DE7              ;	   ""        ""       "f9", B="1"
 250+ 8DE7              ;	   ""        ""       "fb", B="2"
 251+ 8DE7              ; 	   ""        ""       "fb", B="3"
 252+ 8DE7
 253+ 8DE7 2A 55 87     	ld hl,(Posicion_actual)
 254+ 8DEA CD EC 94     	call NextScan
 255+ 8DED
 256+ 8DED              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DED              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DED              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DED              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DED
 261+ 8DED CD 0F 8E         call Ajusta_disparo_parte_izquierda
 262+ 8DF0
 263+ 8DF0              ; 	No se produce impacto. B="$80"
 264+ 8DF0              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DF0
 266+ 8DF0 01 80 80         ld bc,$8080
 267+ 8DF3
 268+ 8DF3              ; 	LLegados a este punto tendremos:
 269+ 8DF3              ;
 270+ 8DF3              ;       Puntero_objeto_disparo en IY.
 271+ 8DF3              ;       Rutinas_de_impresion en IX.
 272+ 8DF3              ;       Puntero_de_impresion en HL.
 273+ 8DF3              ;       Impacto/Dirección en BC.
 274+ 8DF3
 275+ 8DF3 CD 17 8E         call Almacena_disparo
 276+ 8DF6 18 0F            jr 6F                                           ; RET.
 277+ 8DF8
 278+ 8DF8              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DF8              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DF8              ;
 281+ 8DF8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DF8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DF8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DF8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DF8
 286+ 8DF8 2A 55 87     5 ld hl,(Posicion_actual)
 287+ 8DFB CD EC 94     	call NextScan
 288+ 8DFE
 289+ 8DFE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DFE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DFE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DFE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DFE
 294+ 8DFE CD 08 8E         call Ajusta_disparo_parte_derecha
 295+ 8E01
 296+ 8E01              ; 	No se produce impacto. B="$80"
 297+ 8E01              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E01
 299+ 8E01 01 80 80     15 ld bc,$8080
 300+ 8E04
 301+ 8E04              ; 	LLegados a este punto tendremos:
 302+ 8E04              ;
 303+ 8E04              ;       Puntero_objeto_disparo en IY.
 304+ 8E04              ;       Rutinas_de_impresion en IX.
 305+ 8E04              ;       Puntero_de_impresion en HL.
 306+ 8E04              ;       Impacto/Dirección en BC.
 307+ 8E04
 308+ 8E04 CD 17 8E         call Almacena_disparo
 309+ 8E07
 310+ 8E07 C9           6 ret
 311+ 8E08
 312+ 8E08              ; ----------------------------------------------------------------
 313+ 8E08              ;
 314+ 8E08              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E08              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E08              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E08
 318+ 8E08 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E09 FE 02            cp 2
 320+ 8E0B 38 01            jr c,1F
 321+ 8E0D 23               inc hl
 322+ 8E0E C9           1 ret
 323+ 8E0F
 324+ 8E0F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E10 FE 01        	cp 1
 326+ 8E12 20 01        	jr nz,1F
 327+ 8E14 2B           	dec hl
 328+ 8E15 2B           1 dec hl
 329+ 8E16 C9               ret
 330+ 8E17
 331+ 8E17              ; ----------------------------------------------------------------
 332+ 8E17              ;
 333+ 8E17              ;   25/02/23
 334+ 8E17              ;
 335+ 8E17              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E17              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E17              ;
 338+ 8E17              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E17              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E17
 341+ 8E17              Almacena_disparo
 342+ 8E17
 343+ 8E17 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E18 F1               pop af
 345+ 8E19 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E1A
 347+ 8E1A 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E1B E6 01            and 1
 349+ 8E1D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E1F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E1F              ; 	Dispara AMADEUS.
 352+ 8E1F
 353+ 8E1F              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E1F              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E1F              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E1F              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E1F
 358+ 8E1F C5               push bc
 359+ 8E20 01 FA 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E23 2A B8 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E26 A7               and a
 362+ 8E27 ED 42            sbc hl,bc
 363+ 8E29 CC 05 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E2C C1               pop bc
 365+ 8E2D 28 54            jr z,4F
 366+ 8E2F
 367+ 8E2F 2A B8 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E32 23               inc hl
 369+ 8E33 23               inc hl
 370+ 8E34 22 B8 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E37              ;                                                   ; _ Disparo_(+1).
 372+ 8E37 18 18            jr 2F
 373+ 8E39
 374+ 8E39              ; Dispara una entidad.
 375+ 8E39
 376+ 8E39 C5           1 push bc
 377+ 8E3A 01 22 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E3D 2A B6 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E40 A7               and a
 380+ 8E41 ED 42            sbc hl,bc
 381+ 8E43 CC FE 8A         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E46 C1               pop bc
 383+ 8E47 28 3A            jr z,4F
 384+ 8E49
 385+ 8E49 2A B6 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E4C 23               inc hl
 387+ 8E4D 23               inc hl
 388+ 8E4E 22 B6 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E51              ;                                                   ; _ Disparo_(+1).
 390+ 8E51 CD 80 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E54              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E54              ;
 393+ 8E54              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E54              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E54              ;                                                     Puntero_de_impresion en HL.
 396+ 8E54              ;                                                     Impacto/Dirección en BC.
 397+ 8E54
 398+ 8E54 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E55 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E56 23               inc hl                                          ; _ al siguiente.
 401+ 8E57 A7               and a
 402+ 8E58 20 C0            jr nz,3B
 403+ 8E5A
 404+ 8E5A 08               ex af,af
 405+ 8E5B ED 73 A5 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E5F F9               ld sp,hl
 407+ 8E60
 408+ 8E60 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E62 F5               push af                                         ; Puntero de impresión.
 410+ 8E63 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E65 C5               push bc                                         ; Control.
 412+ 8E66
 413+ 8E66 ED 7B A5 87      ld sp,(Stack)
 414+ 8E6A
 415+ 8E6A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E6A
 417+ 8E6A 21 94 87     	ld hl,Ctrl_1
 418+ 8E6D CB C6        	set 0,(hl)
 419+ 8E6F
 420+ 8E6F DD E5        	push ix
 421+ 8E71 E1               pop hl
 422+ 8E72 F5               push af
 423+ 8E73 DD E1            pop ix
 424+ 8E75
 425+ 8E75 CD 16 71     	call Guarda_foto_registros
 426+ 8E78
 427+ 8E78 21 94 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E7B CB 86        	res 0,(hl)
 429+ 8E7D
 430+ 8E7D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E7D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E7D
 433+ 8E7D CD 05 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E80 CD FE 8A         call Inicia_Puntero_Disparo_Entidades
 435+ 8E83
 436+ 8E83 C9           4 ret
 437+ 8E84
 438+ 8E84              ; ----------------------------------------------------------------
 439+ 8E84              ;
 440+ 8E84              ;   4/3/23
 441+ 8E84              ;
 442+ 8E84              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E84              ;   _ al generarse el disparo.
 444+ 8E84              ;
 445+ 8E84              ;       "$80" ..... No se produce colisión.
 446+ 8E84              ;       "$81" ..... Se produce colisión.
 447+ 8E84              ;
 448+ 8E84              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E84              ;         _ que forman el disparo.
 450+ 8E84
 451+ 8E84
 452+ 8E84              Comprueba_Colision
 453+ 8E84
 454+ 8E84              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E84
 456+ 8E84 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E86 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E87
 459+ 8E87 CD BD 8E         call Modifica_H_Velocidad_disparo
 460+ 8E8A
 461+ 8E8A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E8B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E8D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E8F
 465+ 8E8F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E91 CD AD 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E94
 468+ 8E94 7B               ld a,e
 469+ 8E95 E6 01            and 1
 470+ 8E97 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E99              ;                                                  ; _ para activar IMPACTO.
 472+ 8E99 E1               pop hl
 473+ 8E9A E5               push hl
 474+ 8E9B CD EC 94         call NextScan
 475+ 8E9E
 476+ 8E9E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E9F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8EA1 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8EA3              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8EA3 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8EA5 CD AD 8E         call Bucle_2
 482+ 8EA8
 483+ 8EA8 43           1 ld b,e
 484+ 8EA9 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8EAA FD E1            pop iy
 486+ 8EAC C9               ret
 487+ 8EAD
 488+ 8EAD              ; ---------- ----------
 489+ 8EAD
 490+ 8EAD 06 02        Bucle_2 ld b,2
 491+ 8EAF FD 7E 00     2 ld a,(iy)
 492+ 8EB2 A6               and (hl)
 493+ 8EB3 28 02            jr z,1F
 494+ 8EB5 1E 81            ld e,$81
 495+ 8EB7 23           1 inc hl
 496+ 8EB8 FD 23            inc iy
 497+ 8EBA 10 F3            djnz 2B
 498+ 8EBC C9               ret
 499+ 8EBD
 500+ 8EBD              ; ---------- ----------
 501+ 8EBD              ;
 502+ 8EBD              ;   21/7/23
 503+ 8EBD
 504+ 8EBD              Modifica_H_Velocidad_disparo
 505+ 8EBD
 506+ 8EBD 3A C5 87         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EC0 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EC2 D0               ret nc                                         ; _ incrementamos H.
 509+ 8EC3 24               inc h
 510+ 8EC4
 511+ 8EC4 C9               ret
 512+ 8EC5
 513+ 8EC5              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EC5              ;
 515+ 8EC5              ;   04/12/23
 516+ 8EC5              ;
 517+ 8EC5              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EC5              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EC5              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EC5              ;
 521+ 8EC5              ;   MODIFICA: HL,DE,B y A.
 522+ 8EC5
 523+ 8EC5              Genera_coordenadas_X
 524+ 8EC5
 525+ 8EC5              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EC5              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EC5
 528+ 8EC5              ;   Limpiamos almacenes.
 529+ 8EC5
 530+ 8EC5 CD F6 8E         call Limpia_Coordenadas_X
 531+ 8EC8
 532+ 8EC8              ;   Almacenamos coordenadas X.
 533+ 8EC8
 534+ 8EC8              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8EC8
 536+ 8EC8 2A 6F 87         ld hl,(Puntero_de_impresion)
 537+ 8ECB 11 C2 87         ld de,Coordenadas_X_Entidad
 538+ 8ECE 06 02            ld b,2
 539+ 8ED0
 540+ 8ED0 3A 5B 87         ld a,(CTRL_DESPLZ)
 541+ 8ED3 A7               and a
 542+ 8ED4 28 01            jr z,1F
 543+ 8ED6 04               inc b
 544+ 8ED7
 545+ 8ED7 CD ED 8E     1 call Guarda_coordenadas_X
 546+ 8EDA
 547+ 8EDA              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8EDA
 549+ 8EDA 2A A5 85         ld hl,(p.imp.amadeus)
 550+ 8EDD 11 BF 87         ld de,Coordenadas_X_Amadeus
 551+ 8EE0 06 02            ld b,2
 552+ 8EE2
 553+ 8EE2 3A 91 85         ld a,(ctrl_desplz_amadeus)
 554+ 8EE5 A7               and a
 555+ 8EE6 28 01            jr z,2F
 556+ 8EE8 04               inc b
 557+ 8EE9
 558+ 8EE9 CD ED 8E     2 call Guarda_coordenadas_X
 559+ 8EEC
 560+ 8EEC              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8EEC
 562+ 8EEC C9               ret
 563+ 8EED
 564+ 8EED              ; ----- ----- ----- ----- -----
 565+ 8EED
 566+ 8EED 7D           Guarda_coordenadas_X  ld a,l
 567+ 8EEE E6 1F            and $1f
 568+ 8EF0 12           1 ld (de),a
 569+ 8EF1 3C               inc a
 570+ 8EF2 13               inc de
 571+ 8EF3 10 FB            djnz 1B
 572+ 8EF5 C9               ret
 573+ 8EF6
 574+ 8EF6 AF           Limpia_Coordenadas_X xor a
 575+ 8EF7 06 06            ld b,6
 576+ 8EF9 21 BF 87         ld hl,Coordenadas_X_Amadeus
 577+ 8EFC 77           1 ld (hl),a
 578+ 8EFD 23               inc hl
 579+ 8EFE 10 FC            djnz 1B
 580+ 8F00 C9               ret
 581+ 8F01
 582+ 8F01              ; ----- ----- ----- ----- -----
 583+ 8F01
 584+ 8F01              Compara_coordenadas_X
 585+ 8F01
 586+ 8F01 06 03            ld b,3
 587+ 8F03 11 C4 87         ld de,Coordenadas_X_Entidad+2
 588+ 8F06
 589+ 8F06 1A               ld a,(de)
 590+ 8F07 A7               and a
 591+ 8F08 20 01            jr nz,2F
 592+ 8F0A 05               dec b
 593+ 8F0B
 594+ 8F0B 1B           2 dec de
 595+ 8F0C 1B               dec de
 596+ 8F0D 21 BF 87         ld hl,Coordenadas_X_Amadeus
 597+ 8F10
 598+ 8F10 D5           1 push de
 599+ 8F11 E5               push hl
 600+ 8F12 C5               push bc
 601+ 8F13
 602+ 8F13 CD 1D 8F         call Comparando
 603+ 8F16
 604+ 8F16 C1               pop bc
 605+ 8F17 E1               pop hl
 606+ 8F18 D1               pop de
 607+ 8F19
 608+ 8F19 13               inc de
 609+ 8F1A 10 F4            djnz 1B
 610+ 8F1C
 611+ 8F1C C9               ret
 612+ 8F1D
 613+ 8F1D              ; ----- ----- ----- ----- -----
 614+ 8F1D              ;
 615+ 8F1D              ;   4/12/23
 616+ 8F1D              ;
 617+ 8F1D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8F1D
 619+ 8F1D 06 03        Comparando ld b,3
 620+ 8F1F 1A               ld a,(de)
 621+ 8F20 4E           2 ld c,(hl)
 622+ 8F21 B9               cp c
 623+ 8F22 28 04            jr z,1F
 624+ 8F24 23               inc hl
 625+ 8F25 10 F9            djnz 2B
 626+ 8F27 C9               ret
 627+ 8F28
 628+ 8F28 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F2A 32 68 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F2D 21 BA 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F30 CB D6            set 2,(hl)
 632+ 8F32 C9               ret
 633+ 8F33
 634+ 8F33              ; -----------------------------------------------------------------------
 635+ 8F33              ;
 636+ 8F33              ;   7/12/23
 637+ 8F33              ;
 638+ 8F33
 639+ 8F33              Detecta_colision_nave_entidad
 640+ 8F33
 641+ 8F33              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F33
 643+ 8F33 FD 2A 57 87      ld iy,(Puntero_objeto)
 644+ 8F37 2A 6F 87         ld hl,(Puntero_de_impresion)
 645+ 8F3A
 646+ 8F3A E5               push hl
 647+ 8F3B
 648+ 8F3B              ; ----- ----- -----
 649+ 8F3B 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F3D 06 0A            ld b,10
 651+ 8F3F CD 6F 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F42 7B               ld a,e
 653+ 8F43 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F45 38 0E            jr c,3F
 655+ 8F47
 656+ 8F47              ; LLegados a este punto:
 657+ 8F47              ;
 658+ 8F47              ;   HAY COLISIÓN !!!!!.
 659+ 8F47              ;
 660+ 8F47              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F47              ;   SET el bit3 de (Impacto2).
 662+ 8F47              ;
 663+ 8F47              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F47
 665+ 8F47 21 68 87         ld hl,Impacto
 666+ 8F4A 36 01            ld (hl),1
 667+ 8F4C 21 BA 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F4F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F51 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F53
 671+ 8F53 18 18            jr 1F
 672+ 8F55
 673+ 8F55              ; -----
 674+ 8F55
 675+ 8F55 E1           3 pop hl
 676+ 8F56 CD EC 94         call NextScan
 677+ 8F59 E5               push hl
 678+ 8F5A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F5B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F5D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F5F 30 0C            jr nc,1F
 682+ 8F61              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F61 10 DC            djnz 2B
 684+ 8F63
 685+ 8F63              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F63
 687+ 8F63              ; LLegados a este punto:
 688+ 8F63              ;
 689+ 8F63              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F63              ;
 691+ 8F63              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F63              ;   RES el bit2 de (Impacto2).
 693+ 8F63              ;
 694+ 8F63              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F63              ;   Lo colocamos a "0".
 696+ 8F63
 697+ 8F63 21 BA 87         ld hl,Impacto2
 698+ 8F66 CB 96            res 2,(hl)
 699+ 8F68 2A BB 87         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F6B 36 00            ld (hl),0
 701+ 8F6D
 702+ 8F6D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F6E C9               ret
 704+ 8F6F
 705+ 8F6F               ; ---------- ----------
 706+ 8F6F
 707+ 8F6F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F70 3A 54 87         ld a,(Columns)
 709+ 8F73 47               ld b,a
 710+ 8F74 FD 7E 00     2 ld a,(iy)
 711+ 8F77 BE               cp (hl)
 712+ 8F78 28 01            jr z,1F
 713+ 8F7A
 714+ 8F7A 1C               inc e
 715+ 8F7B
 716+ 8F7B 23           1 inc hl
 717+ 8F7C FD 23            inc iy
 718+ 8F7E 10 F4            djnz 2B
 719+ 8F80 C1               pop bc
 720+ 8F81 C9               ret
 721+ 8F82
 722+ 8F82              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F82              ;
 724+ 8F82              ;   13/03/23
 725+ 8F82              ;
 726+ 8F82              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F82              ;
 728+ 8F82              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F82
 730+ 8F82 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F85 7E               ld a,(hl)
 732+ 8F86 A7               and a
 733+ 8F87 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F88
 735+ 8F88 44               ld b,h
 736+ 8F89 4D               ld c,l
 737+ 8F8A 2A AD 87         ld hl,(Stack_snapshot_disparos)
 738+ 8F8D E5               push hl
 739+ 8F8E A7               and a
 740+ 8F8F ED 42            sbc hl,bc
 741+ 8F91 E5               push hl
 742+ 8F92 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F93
 744+ 8F93 E1               pop hl
 745+ 8F94 54               ld d,h
 746+ 8F95 5D               ld e,l
 747+ 8F96 1B               dec de
 748+ 8F97 ED B8            lddr                                                ; Limpiamos.
 749+ 8F99
 750+ 8F99 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8F9C 22 AD 87         ld (Stack_snapshot_disparos),hl
 752+ 8F9F
 753+ 8F9F C9               ret
 754+ 8FA0
 755+ 8FA0              ; -------------------------------------------------------------------------------------------------------------
 756+ 8FA0              ;
 757+ 8FA0              ;   18/07/23
 758+ 8FA0              ;
 759+ 8FA0
 760+ 8FA0              Motor_de_disparos
 761+ 8FA0
 762+ 8FA0              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8FA0
 764+ 8FA0 01 0C 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8FA3 2A B8 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8FA6
 767+ 8FA6 CD 80 8B     2 call Extrae_address
 768+ 8FA9 7E               ld a,(hl)
 769+ 8FAA A7               and a
 770+ 8FAB 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8FAD
 772+ 8FAD              ; ----- ----- ----- ----- ----- -----
 773+ 8FAD
 774+ 8FAD C5               push bc
 775+ 8FAE CD 72 90         call foto_disparo_a_borrar
 776+ 8FB1
 777+ 8FB1              ; Existe colisión con este disparo???
 778+ 8FB1
 779+ 8FB1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8FB2 7E               ld a,(hl)
 781+ 8FB3 2B               dec hl
 782+ 8FB4 E6 01            and 1
 783+ 8FB6 28 1D            jr z,9F
 784+ 8FB8
 785+ 8FB8              ;   En este punto:
 786+ 8FB8              ;
 787+ 8FB8              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8FB8              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8FB8              ;   _con la entidad).
 790+ 8FB8              ;
 791+ 8FB8              ;   Disparo_2A defw 0                                ; Control.
 792+ 8FB8              ;    defw 0                                          ; Puntero objeto.
 793+ 8FB8              ;    defw 0                                          ; Puntero de impresión.
 794+ 8FB8              ;    defw 0                                          ; Rutina de impresión.
 795+ 8FB8
 796+ 8FB8 E5               push hl
 797+ 8FB9
 798+ 8FB9 06 04            ld b,4
 799+ 8FBB 23           19 inc hl
 800+ 8FBC 10 FD            djnz 19B
 801+ 8FBE
 802+ 8FBE CD 80 8B         call Extrae_address
 803+ 8FC1 CD CA 9B         call Genera_coordenadas_disparo
 804+ 8FC4
 805+ 8FC4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FC4
 807+ 8FC4 21 BD 87         ld hl,Coordenadas_disparo_certero
 808+ 8FC7 72               ld (hl),d
 809+ 8FC8 23               inc hl
 810+ 8FC9 73               ld (hl),e
 811+ 8FCA
 812+ 8FCA              ; Elimino el disparo de la base de datos.
 813+ 8FCA
 814+ 8FCA E1               pop hl
 815+ 8FCB CD F1 90         call Elimina_disparo_de_base_de_datos
 816+ 8FCE 21 BA 87         ld hl,Impacto2
 817+ 8FD1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FD3
 819+ 8FD3 18 06            jr 11F
 820+ 8FD5
 821+ 8FD5 CD 9B 90     9 call Mueve_disparo
 822+ 8FD8 CD 72 90         call foto_disparo_a_borrar
 823+ 8FDB
 824+ 8FDB C1           11 pop bc
 825+ 8FDC 18 04            jr 7F
 826+ 8FDE
 827+ 8FDE              ; ----- ----- ----- ----- ----- -----
 828+ 8FDE
 829+ 8FDE ED 42        1 sbc hl,bc
 830+ 8FE0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FE2
 832+ 8FE2 2A B8 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FE5 23               inc hl
 834+ 8FE6 23               inc hl
 835+ 8FE7 22 B8 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FEA 18 BA            jr 2B
 837+ 8FEC
 838+ 8FEC CD 05 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FEF              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FEF
 841+ 8FEF              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FEF
 843+ 8FEF 01 74 85         ld bc,Disparo_11
 844+ 8FF2 2A B6 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FF5
 846+ 8FF5 CD 80 8B     5 call Extrae_address
 847+ 8FF8 7E               ld a,(hl)
 848+ 8FF9 A7               and a
 849+ 8FFA 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FFC
 851+ 8FFC              ; ----- ----- ----- ----- ----- -----
 852+ 8FFC
 853+ 8FFC C5               push bc
 854+ 8FFD CD 72 90         call foto_disparo_a_borrar
 855+ 9000
 856+ 9000              ; Existe colisión con este disparo???
 857+ 9000
 858+ 9000 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9001 7E               ld a,(hl)
 860+ 9002 2B               dec hl
 861+ 9003 E6 01            and 1
 862+ 9005 28 4D            jr z,10F
 863+ 9007
 864+ 9007              ;! La colisión se produce con Amadeus???
 865+ 9007              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9007
 867+ 9007 E5               push hl
 868+ 9008
 869+ 9008 06 04            ld b,4
 870+ 900A 23           16 inc hl
 871+ 900B 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 900D
 873+ 900D CD 80 8B         call Extrae_address
 874+ 9010 CD CA 9B         call Genera_coordenadas_disparo
 875+ 9013
 876+ 9013 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9014 FE 16            cp $16
 878+ 9016 38 2A            jr c,15F
 879+ 9018
 880+ 9018
 881+ 9018              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9018
 883+ 9018 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9019
 885+ 9019              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9019
 887+ 9019 2A A5 85         ld hl,(p.imp.amadeus)
 888+ 901C
 889+ 901C              ; Coordenada X de Amadeus en D.
 890+ 901C
 891+ 901C 7D               ld a,l
 892+ 901D E6 1F            and $1F
 893+ 901F 57               ld d,a
 894+ 9020
 895+ 9020 21 90 85         ld hl,Amadeus_db+8
 896+ 9023 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9024
 898+ 9024 21 BF 87         ld hl,Coordenadas_X_Amadeus
 899+ 9027 CD ED 8E         call Guarda_coordenadas_X
 900+ 902A
 901+ 902A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 902B
 903+ 902B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 902B
 905+ 902B 06 02            ld b,2
 906+ 902D C5           20 push bc
 907+ 902E
 908+ 902E 06 03            ld b,3
 909+ 9030 21 BF 87         ld hl,Coordenadas_X_Amadeus
 910+ 9033 7E           18 ld a,(hl)
 911+ 9034 BA               cp d
 912+ 9035 20 04            jr nz,17F
 913+ 9037
 914+ 9037              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9037
 916+ 9037 C1               pop bc
 917+ 9038 E1               pop hl
 918+ 9039 18 0D            jr 14F
 919+ 903B
 920+ 903B 23           17 inc hl
 921+ 903C 10 F5            djnz 18B
 922+ 903E
 923+ 903E 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 903F
 925+ 903F C1               pop bc
 926+ 9040 10 EB            djnz 20B
 927+ 9042
 928+ 9042
 929+ 9042              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9042              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9042
 932+ 9042 E1           15 pop hl
 933+ 9043 23               inc hl
 934+ 9044 35               dec (hl)
 935+ 9045 2B               dec hl
 936+ 9046 18 0C            jr 10F
 937+ 9048
 938+ 9048              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9048              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9048
 941+ 9048 E5           14 push hl
 942+ 9049 CD F1 90         call Elimina_disparo_de_base_de_datos
 943+ 904C 21 BA 87         ld hl,Impacto2
 944+ 904F CB CE            set 1,(hl)
 945+ 9051 E1               pop hl
 946+ 9052 18 06            jr 12F
 947+ 9054
 948+ 9054              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9054
 950+ 9054 CD 9B 90     10 call Mueve_disparo
 951+ 9057 CD 72 90         call foto_disparo_a_borrar
 952+ 905A C1           12 pop bc
 953+ 905B
 954+ 905B 18 04            jr 8F
 955+ 905D
 956+ 905D              ; ----- ----- ----- ----- ----- -----
 957+ 905D
 958+ 905D ED 42        4 sbc hl,bc
 959+ 905F 28 0A            jr z,6F
 960+ 9061
 961+ 9061 2A B6 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9064 23               inc hl
 963+ 9065 23               inc hl
 964+ 9066 22 B6 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9069 18 8A            jr 5B
 966+ 906B
 967+ 906B CD FE 8A     6 call Inicia_Puntero_Disparo_Entidades
 968+ 906E CD F6 8E         call Limpia_Coordenadas_X
 969+ 9071 C9               ret
 970+ 9072
 971+ 9072              ; ------------------------------------------------------------------
 972+ 9072
 973+ 9072              foto_disparo_a_borrar
 974+ 9072
 975+ 9072 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9073 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9074 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9075
 979+ 9075 E5               push hl
 980+ 9076 23               inc hl
 981+ 9077 23               inc hl
 982+ 9078 ED 73 A5 87      ld (Stack),sp
 983+ 907C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 907D FD E1            pop iy
 985+ 907F DD E1            pop ix
 986+ 9081 E1               pop hl
 987+ 9082 ED 7B A5 87      ld sp,(Stack)
 988+ 9086 3A 94 87         ld a,(Ctrl_1)
 989+ 9089 CB C7            set 0,a
 990+ 908B 32 94 87         ld (Ctrl_1),a
 991+ 908E CD 16 71         call Guarda_foto_registros
 992+ 9091 3A 94 87         ld a,(Ctrl_1)
 993+ 9094 CB 87            res 0,a
 994+ 9096 32 94 87         ld (Ctrl_1),a
 995+ 9099 E1               pop hl
 996+ 909A C9               ret
 997+ 909B
 998+ 909B              ;---------------------------------------------------
 999+ 909B              ;
1000+ 909B              ;   18/07/23
1001+ 909B              ;
1002+ 909B
1003+ 909B              Mueve_disparo
1004+ 909B
1005+ 909B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 909B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 909B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 909B
1009+ 909B E5               push hl
1010+ 909C
1011+ 909C 7E               ld a,(hl)
1012+ 909D
1013+ 909D 06 04            ld b,4
1014+ 909F 23           1 inc hl
1015+ 90A0 10 FD            djnz 1B
1016+ 90A2
1017+ 90A2              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 90A2
1019+ 90A2 CD 80 8B         call Extrae_address
1020+ 90A5
1021+ 90A5 E6 01            and 1
1022+ 90A7 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 90A9
1024+ 90A9              ; Disparo hacia arriba, (Amadeus).
1025+ 90A9
1026+ 90A9              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 90A9              ; _ de la dificultad.
1028+ 90A9
1029+ 90A9 CD FB 94         call PreviousScan
1030+ 90AC CD FB 94         call PreviousScan
1031+ 90AF CD FB 94         call PreviousScan
1032+ 90B2 CD FB 94         call PreviousScan
1033+ 90B5
1034+ 90B5              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 90B5
1036+ 90B5 7C               ld a,h
1037+ 90B6 FE 40            cp $40
1038+ 90B8 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 90BA
1040+ 90BA              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 90BA
1042+ 90BA EB               ex de,hl
1043+ 90BB 06 04            ld b,4
1044+ 90BD 2B           6 dec hl
1045+ 90BE 10 FD            djnz 6B
1046+ 90C0
1047+ 90C0 CD F1 90         call Elimina_disparo_de_base_de_datos
1048+ 90C3 E1               pop hl
1049+ 90C4 18 10            jr 7F
1050+ 90C6
1051+ 90C6              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90C6              ; HL contiene el puntero de impresión del disparo.
1053+ 90C6              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90C6
1055+ 90C6 D5           3 push de
1056+ 90C7 C5               push bc
1057+ 90C8
1058+ 90C8 CD 84 8E         call Comprueba_Colision
1059+ 90CB
1060+ 90CB              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90CB
1062+ 90CB 78               ld a,b
1063+ 90CC
1064+ 90CC C1               pop bc
1065+ 90CD D1               pop de
1066+ 90CE
1067+ 90CE EB               ex de,hl
1068+ 90CF
1069+ 90CF 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90D0 23               inc hl                                      ; _ movimiento.
1071+ 90D1 72               ld (hl),d
1072+ 90D2
1073+ 90D2 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90D3
1075+ 90D3 23               inc hl                                      ; _ en curso.
1076+ 90D4 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90D5 2B               dec hl
1078+ 90D6
1079+ 90D6 C9           7 ret
1080+ 90D7
1081+ 90D7              ; Disparo hacia abajo, (Entidad).
1082+ 90D7
1083+ 90D7 3A C5 87     2 ld a,(Velocidad_disparo_entidades)
1084+ 90DA 47               ld b,a
1085+ 90DB
1086+ 90DB CD EC 94     4 call NextScan
1087+ 90DE 10 FB            djnz 4B
1088+ 90E0
1089+ 90E0              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90E0
1091+ 90E0 7C               ld a,h
1092+ 90E1 FE 58            cp $58
1093+ 90E3 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90E5
1095+ 90E5 EB               ex de,hl
1096+ 90E6 06 04            ld b,4
1097+ 90E8 2B           5 dec hl
1098+ 90E9 10 FD            djnz 5B
1099+ 90EB
1100+ 90EB CD F1 90         call Elimina_disparo_de_base_de_datos
1101+ 90EE E1               pop hl
1102+ 90EF 18 E5            jr 7B
1103+ 90F1
1104+ 90F1              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90F1
1106+ 90F1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90F4 AF               xor a
1108+ 90F5 77               ld (hl),a
1109+ 90F6 54               ld d,h
1110+ 90F7 5D               ld e,l
1111+ 90F8 13               inc de
1112+ 90F9 ED B0            ldir
1113+ 90FB C9               ret
1114+ 90FC
1115+ 90FC              ; -----------------------------------------------------------------
1116+ 90FC              ;
1117+ 90FC              ;   7/12/23
1118+ 90FC              ;
1119+ 90FC
1120+ 90FC 3A BA 87     Selector_de_impactos ld a,(Impacto2)
1121+ 90FF A7               and a
1122+ 9100 C8               ret z
1123+ 9101
1124+ 9101              ; Analizamos si hay impacto por disparos.
1125+ 9101
1126+ 9101              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9101
1128+ 9101 CB 4F            bit 1,a
1129+ 9103 28 07            jr z,1F
1130+ 9105
1131+ 9105 21 A1 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9108 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 910A 18 08            jr 2F
1134+ 910C
1135+ 910C CB 47        1 bit 0,a
1136+ 910E C8               ret z
1137+ 910F
1138+ 910F              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 910F
1140+ 910F 21 94 87         ld hl,Ctrl_1
1141+ 9112 CB D6            set 2,(hl)
1142+ 9114
1143+ 9114 C9           2 ret
1144+ 9115
1145+ 9115              ; -----------------------------------------------------------------
1146+ 9115              ;
1147+ 9115              ;   25/04/23
1148+ 9115              ;
1149+ 9115
1150+ 9115              Determina_resultado_comparativa
1151+ 9115
1152+ 9115              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9115              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9115              ;
1155+ 9115              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9115              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9115              ;
1158+ 9115              ;   SBC HL,DE
1159+ 9115
1160+ 9115              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9115              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9115
1163+ 9115              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9115              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9115
1166+ 9115
1167+ 9115 3A 67 87         ld a,(Cuad_objeto)
1168+ 9118 FE 02            cp 2
1169+ 911A 28 26            jr z,2F
1170+ 911C 38 24            jr c,2F
1171+ 911E
1172+ 911E              ; Cuadrantes 3º y 4º
1173+ 911E
1174+ 911E E6 01            and 1
1175+ 9120 28 10            jr z,4F
1176+ 9122
1177+ 9122              ; Cuadrante 3º
1178+ 9122
1179+ 9122 7C               ld a,h
1180+ 9123 06 00            ld b,0
1181+ 9125
1182+ 9125 CD B0 91         call Compara_cositas_H3
1183+ 9128
1184+ 9128 04               inc b
1185+ 9129 05               dec b
1186+ 912A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 912B
1188+ 912B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 912C 06 00            ld b,0
1190+ 912E
1191+ 912E CD C2 91         call Compara_cositas_L3
1192+ 9131 C9               ret
1193+ 9132
1194+ 9132              ; Cuadrante 4º
1195+ 9132
1196+ 9132 7C           4 ld a,h
1197+ 9133 06 00            ld b,0
1198+ 9135
1199+ 9135 CD D4 91         call Compara_cositas_H4
1200+ 9138
1201+ 9138 04               inc b
1202+ 9139 05               dec b
1203+ 913A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 913B
1205+ 913B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 913C 06 00            ld b,0
1207+ 913E
1208+ 913E CD EA 91         call Compara_cositas_L4
1209+ 9141 C9               ret
1210+ 9142
1211+ 9142              ; Cuadrantes 1º y 2º.
1212+ 9142
1213+ 9142 28 10        2 jr z,3F
1214+ 9144
1215+ 9144              ; 1er Cuadrante
1216+ 9144
1217+ 9144 7C               ld a,h
1218+ 9145 06 00            ld b,0
1219+ 9147
1220+ 9147 CD 88 91         call Compara_cositas_H1
1221+ 914A
1222+ 914A 04               inc b
1223+ 914B 05               dec b
1224+ 914C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 914D
1226+ 914D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 914E 06 00            ld b,0
1228+ 9150
1229+ 9150 CD 9E 91         call Compara_cositas_L1
1230+ 9153 C9               ret
1231+ 9154
1232+ 9154
1233+ 9154              ; 2º Cuadrante
1234+ 9154
1235+ 9154 7C           3 ld a,h
1236+ 9155 06 00            ld b,0
1237+ 9157
1238+ 9157 CD 64 91         call Compara_cositas_H2
1239+ 915A
1240+ 915A 04               inc b
1241+ 915B 05               dec b
1242+ 915C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 915D
1244+ 915D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 915E 06 00            ld b,0
1246+ 9160
1247+ 9160 CD 76 91         call Compara_cositas_L2
1248+ 9163 C9               ret
1249+ 9164
1250+ 9164 A7           Compara_cositas_H2 and a
1251+ 9165 28 0D            jr z,1F
1252+ 9167              ;    cp $fd
1253+ 9167              ;    jr z,1F
1254+ 9167              ;    cp $fe
1255+ 9167              ;    jr z,1F
1256+ 9167 FE FF            cp $ff
1257+ 9169 28 09            jr z,1F
1258+ 916B FE 01            cp $01
1259+ 916D 28 05            jr z,1F
1260+ 916F FE 02            cp $02
1261+ 9171 28 01            jr z,1F
1262+ 9173 C0               ret nz
1263+ 9174 04           1 inc b
1264+ 9175 C9               ret
1265+ 9176
1266+ 9176 A7           Compara_cositas_L2 and a
1267+ 9177 28 0D            jr z,1F
1268+ 9179              ;    cp $fd
1269+ 9179              ;    jr z,1F
1270+ 9179 FE FE            cp $fe
1271+ 917B 28 09            jr z,1F
1272+ 917D FE FF            cp $ff
1273+ 917F 28 05            jr z,1F
1274+ 9181 FE 01            cp $01
1275+ 9183 28 01            jr z,1F
1276+ 9185              ;    cp $02
1277+ 9185              ;    jr z,1F
1278+ 9185 C0               ret nz
1279+ 9186 04           1 inc b
1280+ 9187 C9               ret
1281+ 9188
1282+ 9188 A7           Compara_cositas_H1 and a
1283+ 9189 28 11            jr z,1F
1284+ 918B              ;    cp $fd
1285+ 918B              ;    jr z,1F
1286+ 918B              ;    cp $fe
1287+ 918B              ;    jr z,1F
1288+ 918B FE FF            cp $ff
1289+ 918D 28 0D            jr z,1F
1290+ 918F FE 01            cp $01
1291+ 9191 28 09            jr z,1F
1292+ 9193 FE 02            cp $02
1293+ 9195 28 05            jr z,1F
1294+ 9197 FE 03            cp $03
1295+ 9199 28 01            jr z,1F
1296+ 919B C0               ret nz
1297+ 919C 04           1 inc b
1298+ 919D C9               ret
1299+ 919E
1300+ 919E A7           Compara_cositas_L1 and a
1301+ 919F 28 0D            jr z,1F
1302+ 91A1              ;    cp $fd
1303+ 91A1              ;    jr z,1F
1304+ 91A1              ;    cp $fe
1305+ 91A1              ;    jr z,1F
1306+ 91A1              ;    cp $ff
1307+ 91A1              ;    jr z,1F
1308+ 91A1 FE 01            cp $01
1309+ 91A3 28 09            jr z,1F
1310+ 91A5 FE 02            cp $02
1311+ 91A7 28 05            jr z,1F
1312+ 91A9 FE 03            cp $03
1313+ 91AB 28 01            jr z,1F
1314+ 91AD C0               ret nz
1315+ 91AE 04           1 inc b
1316+ 91AF C9               ret
1317+ 91B0
1318+ 91B0 A7           Compara_cositas_H3 and a
1319+ 91B1 28 0D            jr z,1F
1320+ 91B3              ;    cp $fd
1321+ 91B3              ;    jr z,1F
1322+ 91B3 FE FE            cp $fe
1323+ 91B5 28 09            jr z,1F
1324+ 91B7 FE FF            cp $ff
1325+ 91B9 28 05            jr z,1F
1326+ 91BB FE 01            cp $01
1327+ 91BD 28 01            jr z,1F
1328+ 91BF              ;    cp $02
1329+ 91BF              ;    jr z,1F
1330+ 91BF              ;    cp $03
1331+ 91BF              ;    jr z,1F
1332+ 91BF C0               ret nz
1333+ 91C0 04           1 inc b
1334+ 91C1 C9               ret
1335+ 91C2
1336+ 91C2 A7           Compara_cositas_L3 and a
1337+ 91C3 28 0D            jr z,1F
1338+ 91C5              ;    cp $fd
1339+ 91C5              ;    jr z,1F
1340+ 91C5              ;    cp $fe
1341+ 91C5              ;    jr z,1F
1342+ 91C5              ;    cp $ff
1343+ 91C5              ;    jr z,1F
1344+ 91C5 FE 01            cp $01
1345+ 91C7 28 09            jr z,1F
1346+ 91C9 FE 02            cp $02
1347+ 91CB 28 05            jr z,1F
1348+ 91CD FE 03            cp $03
1349+ 91CF 28 01            jr z,1F
1350+ 91D1 C0               ret nz
1351+ 91D2 04           1 inc b
1352+ 91D3 C9               ret
1353+ 91D4
1354+ 91D4 A7           Compara_cositas_H4 and a
1355+ 91D5 28 11            jr z,1F
1356+ 91D7 FE FD            cp $fd
1357+ 91D9 28 0D            jr z,1F
1358+ 91DB FE FE            cp $fe
1359+ 91DD 28 09            jr z,1F
1360+ 91DF FE FF            cp $ff
1361+ 91E1 28 05            jr z,1F
1362+ 91E3 FE 01            cp $01
1363+ 91E5 28 01            jr z,1F
1364+ 91E7              ;    cp $02
1365+ 91E7              ;    jr z,1F
1366+ 91E7              ;    cp $03
1367+ 91E7              ;    jr z,1F
1368+ 91E7 C0               ret nz
1369+ 91E8 04           1 inc b
1370+ 91E9 C9               ret
1371+ 91EA
1372+ 91EA A7           Compara_cositas_L4 and a
1373+ 91EB 28 0D            jr z,1F
1374+ 91ED              ;    cp $fd
1375+ 91ED              ;    jr z,1F
1376+ 91ED FE FE            cp $fe
1377+ 91EF 28 09            jr z,1F
1378+ 91F1 FE FF            cp $ff
1379+ 91F3 28 05            jr z,1F
1380+ 91F5 FE 01            cp $01
1381+ 91F7 28 01            jr z,1F
1382+ 91F9              ;    cp $02
1383+ 91F9              ;    jr z,1F
1384+ 91F9              ;    cp $03
1385+ 91F9              ;    jr z,1F
1386+ 91F9 C0               ret nz
1387+ 91FA 04           1 inc b
1388+ 91FB C9               ret
# file closed: Disparo.asm
1912  91FC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91FC              ; ******************************************************************************************************************************************************************************************
   2+ 91FC              ;
   3+ 91FC              ; 26/06/23
   4+ 91FC              ;
   5+ 91FC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91FC
   7+ 91FC              Draw
   8+ 91FC
   9+ 91FC CD E0 94     	call Prepara_draw
  10+ 91FF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9200 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9201 28 05        	jr z,2F
  13+ 9203
  14+ 9203 3A 67 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9206 18 0C        	jr 1F
  16+ 9208
  17+ 9208 2A 65 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 920B 22 55 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 920E CD 9D 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9211              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9211 CD 5B 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 9214
  23+ 9214 3A 75 87     1 ld a,(Ctrl_0)
  24+ 9217 CB 6F        	bit 5,a
  25+ 9219 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 921B
  27+ 921B CD 33 92     	call Comprueba_limite_horizontal
  28+ 921E CD C3 92     	call Comprueba_limite_vertical
  29+ 9221
  30+ 9221              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 9221              ; -----------------------
  32+ 9221              ; -----------------------
  33+ 9221              ; -----------------------
  34+ 9221
  35+ 9221 CD 10 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 9224 CD 47 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 9227 CD A6 94     	call Define_rutina_de_impresion
  38+ 922A
  39+ 922A 3A 75 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 922D CB AF        	res 5,a											; _a ser de utilidad.
  41+ 922F 32 75 87     	ld (Ctrl_0),a
  42+ 9232
  43+ 9232 C9           	ret
  44+ 9233
  45+ 9233              ; *******************************************************************************************************************************************************************************************
  46+ 9233              ;	21/01/23
  47+ 9233              ;
  48+ 9233              ; 	Comprueba_limite_horizontal.
  49+ 9233              ;
  50+ 9233              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9233              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9233              ;
  53+ 9233              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9233              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9233              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9233              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9233
  58+ 9233
  59+ 9233
  60+ 9233 3A 75 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9236 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9238 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 923A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 923C 32 75 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 923F 18 09            jr 6F
  66+ 9241 CB 5F        1 bit 3,a
  67+ 9243 28 0A            jr z,2F
  68+ 9245 E6 F7            and $f7
  69+ 9247 32 75 87         ld (Ctrl_0),a
  70+ 924A CD 9D 93     6 call Inicializacion
  71+ 924D 18 5B            jr 5F
  72+ 924F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9250
  74+ 9250              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9250              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9250
  77+ 9250 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9251 2A 77 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9254 CD FF 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9257 67           	ld h,a
  81+ 9258 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9259 CD FF 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 925C 67           	ld h,a
  84+ 925D A7           	and a
  85+ 925E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9260 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9261 3A 67 87     	ld a,(Cuad_objeto)
  88+ 9264 FE 02        	cp 2
  89+ 9266 38 1E        	jr c,3F
  90+ 9268 28 1C        	jr z,3F
  91+ 926A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 926B 28 23            jr z,7F
  93+ 926D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 926F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9271 E1           	pop hl
  96+ 9272
  97+ 9272              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9272              ; _para indicar con E="2" en caso necesario.
  99+ 9272
 100+ 9272 E5               push hl
 101+ 9273 C5               push bc
 102+ 9274 CD FF 97     	call calcula_tercio
 103+ 9277 FE 01        	cp 1
 104+ 9279 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 927B CD AB 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 927E 28 26            jr z,9F
 107+ 9280 38 24            jr c,9F
 108+ 9282 1E 00        11 ld e,0
 109+ 9284 18 22            jr 8F
 110+ 9286 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9287 28 07        	jr z, 7F
 112+ 9289 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 928B 1E 00         	ld e,0
 114+ 928D E1           	pop hl
 115+ 928E 18 04        	jr 4F
 116+ 9290 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9292 18 15            jr 10F
 118+ 9294
 119+ 9294              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9294              ; _para indicar con E="2" en caso necesario.
 121+ 9294
 122+ 9294 E5           4 push hl
 123+ 9295 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9296 CD FF 97     	call calcula_tercio
 125+ 9299 FE 01        	cp 1
 126+ 929B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 929D CD AB 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92A0 28 04            jr z,9F
 129+ 92A2 30 02            jr nc,9F
 130+ 92A4 18 02        	jr 8F
 131+ 92A6 1E 02        9 ld e,2
 132+ 92A8 C1           8 pop bc
 133+ 92A9 E1           10 pop hl
 134+ 92AA C9           5 ret
 135+ 92AB
 136+ 92AB              ; --------------------
 137+ 92AB              ;
 138+ 92AB              ; 25/08/22
 139+ 92AB
 140+ 92AB CD FF 97     Comprueba_centro call calcula_tercio
 141+ 92AE 67               ld h,a
 142+ 92AF 08           	ex af,af
 143+ 92B0 FE 02        	cp 2
 144+ 92B2 38 07        	jr c,1F
 145+ 92B4 28 05        	jr z,1F
 146+ 92B6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92B9 18 03        	jr 2F
 148+ 92BB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92BE 08           2 ex af,af
 150+ 92BF A7               and a
 151+ 92C0 ED 42            sbc hl,bc
 152+ 92C2 C9               ret
 153+ 92C3
 154+ 92C3              ; *********************************************************************************************************************************************************************************************
 155+ 92C3              ;
 156+ 92C3              ;   16/8/22
 157+ 92C3              ;
 158+ 92C3              ;	Comprueba_limite_vertical
 159+ 92C3              ;
 160+ 92C3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 92C3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 92C3              ;
 163+ 92C3
 164+ 92C3 2A 55 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 92C6 7D           	ld a,l
 166+ 92C7 E6 1F        	and $1F
 167+ 92C9 57           	ld d,a
 168+ 92CA 3A 79 87     	ld a,(Limite_vertical)
 169+ 92CD BA           	cp d 											; Límite - Posición.
 170+ 92CE 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 92CF 3A 67 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 92D2 CB 47        	bit 0,a
 173+ 92D4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 92D6
 175+ 92D6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 92D6
 177+ 92D6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 92D7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 92D9
 180+ 92D9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 92D9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 92D9
 183+ 92D9 3A 59 87         ld a,(Coordenada_X)
 184+ 92DC 16 0F            ld d,Centro_izquierda
 185+ 92DE A7               and a
 186+ 92DF 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 92E0 28 1E            jr z,3F
 188+ 92E2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 92E4              ;                                                    ; _salimos sin modificar nada.
 190+ 92E4 18 0E            jr 2F
 191+ 92E6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 92E7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 92E9
 194+ 92E9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 92E9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 92E9
 197+ 92E9 3A 59 87         ld a,(Coordenada_X)
 198+ 92EC 16 10            ld d,Centro_derecha
 199+ 92EE A7               and a
 200+ 92EF 92               sub d
 201+ 92F0 28 0E            jr z,3F
 202+ 92F2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 92F4              ;                                                    ; _salimos sin modificar nada.
 204+ 92F4 CB 43        2 bit 0,e
 205+ 92F6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 92F8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 92F9 CD 8D 93         call Modificaccionne
 208+ 92FC C1           	pop bc
 209+ 92FD CD 9D 93         call Inicializacion
 210+ 9300 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9301
 212+ 9301              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9301
 214+ 9301 C5           4 push bc
 215+ 9302 01 54 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9305 0A           	ld a,(bc)
 217+ 9306 3D           	dec a
 218+ 9307 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9308 7D           	ld a,l
 220+ 9309 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 930A CB 47        	bit 0,a
 222+ 930C 28 03        	jr z,5F
 223+ 930E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 930F 18 2E        	jr 7F
 225+ 9311
 226+ 9311              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9311
 228+ 9311 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9312 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9313 3A 75 87     	ld a,(Ctrl_0)
 231+ 9316 CB 4F        	bit 1,a
 232+ 9318 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 931A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 931B
 235+ 931B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 931B
 237+ 931B 1C               inc e
 238+ 931C 1D               dec e
 239+ 931D 20 07            jr nz,12F
 240+ 931F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9320 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9321 22 55 87     	ld (Posicion_actual),hl
 243+ 9324 18 44        13 jr 9F
 244+ 9326 CB 43        12 bit 0,e
 245+ 9328 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 932A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 932A C1           	pop bc
 248+ 932B 18 D3        	jr 3B
 249+ 932D 80           14 add b
 250+ 932E 6F               ld l,a
 251+ 932F 22 55 87     	ld (Posicion_actual),hl
 252+ 9332 CD 8D 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9335 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9337 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9339 32 75 87         ld (Ctrl_0),a
 256+ 933C F1           	pop af
 257+ 933D 18 2B        	jr 9F
 258+ 933F
 259+ 933F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 933F
 261+ 933F F5           7 push af
 262+ 9340 3A 75 87     	ld a,(Ctrl_0)
 263+ 9343 CB 47        	bit 0,a
 264+ 9345 20 1D        	jr nz,8F
 265+ 9347 F1           	pop af
 266+ 9348
 267+ 9348              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9348
 269+ 9348 1C           	inc e
 270+ 9349 1D               dec e
 271+ 934A 20 07            jr nz,10F
 272+ 934C 90           	sub b
 273+ 934D 6F               ld l,a
 274+ 934E 22 55 87     	ld (Posicion_actual),hl
 275+ 9351 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9353              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9353 CB 43        10 bit 0,e
 278+ 9355 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9357              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9357 C1           	pop bc
 281+ 9358 18 A6        	jr 3B
 282+ 935A 90           16 sub b
 283+ 935B 6F               ld l,a
 284+ 935C 22 55 87     	ld (Posicion_actual),hl
 285+ 935F CD 8D 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9362 18 06            jr 9F
 287+ 9364 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9366 32 75 87         ld (Ctrl_0),a
 289+ 9369 F1           	pop af
 290+ 936A C1           9 pop bc
 291+ 936B 1E 00        	ld e,0
 292+ 936D CD 9D 93         call Inicializacion
 293+ 9370 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9371 08           	ex af,af
 295+ 9372 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9373 18 8B            jr 3B
 297+ 9375
 298+ 9375              ; --------------------
 299+ 9375
 300+ 9375 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9377 CD FB 94     1 call PreviousScan
 302+ 937A 10 FB            djnz 1B
 303+ 937C 22 55 87     	ld (Posicion_actual),hl
 304+ 937F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9380 C9           	ret
 306+ 9381
 307+ 9381              ; --------------------
 308+ 9381
 309+ 9381 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9383 CD EC 94     1 call NextScan
 311+ 9386 10 FB            djnz 1B
 312+ 9388 22 55 87     	ld (Posicion_actual),hl
 313+ 938B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 938C C9           	ret
 315+ 938D
 316+ 938D              ; --------------------
 317+ 938D              ;
 318+ 938D              ;	22/01/23
 319+ 938D              ;
 320+ 938D              ;	E="1". Hemos cambiado de cuadrante.
 321+ 938D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 938D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 938D
 324+ 938D
 325+ 938D              Modificaccionne
 326+ 938D
 327+ 938D 3A 67 87     	ld a,(Cuad_objeto)
 328+ 9390 FE 02        	cp 2
 329+ 9392 CC 75 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9395 DC 75 93         call c,Modifica_Pos_actual
 331+ 9398 C8           	ret z
 332+ 9399 CD 81 93         call Modifica_Pos_actual2
 333+ 939C C9               ret
 334+ 939D
 335+ 939D              ; *************************************************************************************************************************************************************************************************
 336+ 939D              ;
 337+ 939D              ;	13/8/22
 338+ 939D              ;
 339+ 939D              ;	Inicializacion
 340+ 939D              ;
 341+ 939D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 939D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 939D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 939D              ;
 345+ 939D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 939D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 939D              ;	_ desaparece/aparece.
 348+ 939D
 349+ 939D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 939D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 939D              ;
 352+ 939D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 939D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 939D              ; 		   [E] ="0"
 355+ 939D
 356+ 939D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 939D
 358+ 939D CD FF 97     Inicializacion call calcula_tercio
 359+ 93A0 28 36        	jr z,primit
 360+ 93A2 E6 02        	and 2
 361+ 93A4 20 07        	jr nz,segmit
 362+ 93A6 7D           	ld a,l
 363+ 93A7 FE 7F        	cp $7f
 364+ 93A9 38 2D        	jr c,primit
 365+ 93AB 28 2B        	jr z,primit
 366+ 93AD CD 0A 94     segmit call column
 367+ 93B0 38 13        	jr c,tercuad
 368+ 93B2 3E 04        cuarcuad ld a,4
 369+ 93B4 32 67 87     	ld (Cuad_objeto),a
 370+ 93B7 21 20 48     	ld hl,$4820
 371+ 93BA 22 77 87     	ld (Limite_horizontal),hl
 372+ 93BD 21 79 87     	ld hl,Limite_vertical
 373+ 93C0 36 0D        	ld (hl),$0d
 374+ 93C2 08           	ex af,af
 375+ 93C3 18 3C        	jr 1F
 376+ 93C5              tercuad
 377+ 93C5 3E 03        	ld a,3
 378+ 93C7 32 67 87     	ld (Cuad_objeto),a
 379+ 93CA 21 20 48     	ld hl,$4820
 380+ 93CD 22 77 87     	ld (Limite_horizontal),hl
 381+ 93D0 21 79 87     	ld hl,Limite_vertical
 382+ 93D3 36 12        	ld (hl),$12
 383+ 93D5 08           	ex af,af
 384+ 93D6 18 29        	jr 1F
 385+ 93D8 CD 0A 94     primit call column
 386+ 93DB 38 13        	jr c, primcuad
 387+ 93DD              segcuad
 388+ 93DD 3E 02        	ld a,2
 389+ 93DF 32 67 87     	ld (Cuad_objeto),a
 390+ 93E2 21 C0 4F     	ld hl,$4fc0
 391+ 93E5 22 77 87     	ld (Limite_horizontal),hl
 392+ 93E8 21 79 87     	ld hl,Limite_vertical
 393+ 93EB 36 0D        	ld (hl),$0d
 394+ 93ED 08           	ex af,af
 395+ 93EE 18 11        	jr 1F
 396+ 93F0              primcuad
 397+ 93F0 3E 01        	ld a,1
 398+ 93F2 32 67 87     	ld (Cuad_objeto),a
 399+ 93F5 21 C0 4F     	ld hl,$4fc0
 400+ 93F8 22 77 87     	ld (Limite_horizontal),hl
 401+ 93FB 21 79 87     	ld hl,Limite_vertical
 402+ 93FE 36 12        	ld (hl),$12
 403+ 9400 08           	ex af,af
 404+ 9401 CD 9F 9B     1 call Genera_coordenadas
 405+ 9404 21 75 87     	ld hl,Ctrl_0
 406+ 9407 CB EE        	set 5,(hl)
 407+ 9409 C9           	ret
 408+ 940A
 409+ 940A              ; ------------------------------------------------------------------------------------------------------------------
 410+ 940A
 411+ 940A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 940A              ;
 413+ 940A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 940A
 415+ 940A 7D           column ld a,l
 416+ 940B E6 1F        	and $1f
 417+ 940D FE 10         	cp $10
 418+ 940F C9            	ret
 419+ 9410
 420+ 9410              ; --------------------------------------------------------------------------------------------------------------------
 421+ 9410              ;
 422+ 9410              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 9410              ;
 424+ 9410              ; 14/12/22
 425+ 9410              ;
 426+ 9410              ;	Modifica: A y BC.
 427+ 9410
 428+ 9410 3A 67 87     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 9413 E6 01        	and 1
 430+ 9415 28 17        	jr z,1F
 431+ 9417
 432+ 9417              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 9417
 434+ 9417 3A 59 87     	ld a,(Coordenada_X)
 435+ 941A 47           	ld b,a
 436+ 941B 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 941C 79           	ld a,c
 438+ 941D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 941E 38 08        	jr c,2F
 440+ 9420 47           	ld b,a
 441+ 9421 79           	ld a,c
 442+ 9422 90           	sub b
 443+ 9423 32 76 87     	ld (Columnas),a
 444+ 9426 18 1B        	jr 4F
 445+ 9428 79           2 ld a,c
 446+ 9429 32 76 87     	ld (Columnas),a
 447+ 942C 18 15        	jr 4F
 448+ 942E
 449+ 942E              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 942E
 451+ 942E 3A 59 87     1 ld a,(Coordenada_X)
 452+ 9431 81           	add c
 453+ 9432 3D           	dec a
 454+ 9433 D6 1F        	sub $1f
 455+ 9435 38 08        	jr c,3F
 456+ 9437 47           	ld b,a
 457+ 9438 79           	ld a,c
 458+ 9439 90           	sub b
 459+ 943A 32 76 87     	ld (Columnas),a
 460+ 943D 18 04        	jr 4F
 461+ 943F 79           3 ld a,c
 462+ 9440 32 76 87     	ld (Columnas),a
 463+ 9443 D9           4 exx
 464+ 9444 4F           	ld c,a
 465+ 9445 D9           	exx
 466+ 9446 C9            ret
 467+ 9447
 468+ 9447              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9447              ;
 470+ 9447              ;   19/7/23
 471+ 9447              ;
 472+ 9447              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9447              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9447              ;
 475+ 9447              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9447              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9447              ;
 478+ 9447              ;	DESTRUYE: HL,B Y A.
 479+ 9447
 480+ 9447 3A 67 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 944A FE 02        	cp 2
 482+ 944C 38 18        	jr c,1F
 483+ 944E 28 16        	jr z,1F
 484+ 9450 E6 01        	and 1
 485+ 9452 28 0D        	jr z,3F
 486+ 9454
 487+ 9454              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 9454
 489+ 9454 CD 9A 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9457
 491+ 9457 7D           9 ld a,l
 492+ 9458 E6 1F        	and $1f
 493+ 945A 28 2A        	jr z,7F
 494+ 945C 2B           	dec hl
 495+ 945D 10 F8        	djnz 9B
 496+ 945F 18 25        	jr 7F
 497+ 9461
 498+ 9461              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 9461
 500+ 9461 2A 55 87     3 ld hl,(Posicion_actual)
 501+ 9464 18 20        	jr 7F
 502+ 9466
 503+ 9466 28 14        1 jr z,2F
 504+ 9468
 505+ 9468              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9468
 507+ 9468 CD 9A 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 946B
 509+ 946B 7D           4 ld a,l
 510+ 946C E6 1F        	and $1f
 511+ 946E 28 03        	jr z,6F
 512+ 9470 2B           	dec hl
 513+ 9471 10 F8        	djnz 4B
 514+ 9473 06 0F        6 ld b,15
 515+ 9475 CD FB 94     5 call PreviousScan
 516+ 9478 10 FB        	djnz 5B
 517+ 947A 18 0A        	jr 7F
 518+ 947C
 519+ 947C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 947C
 521+ 947C CD 9A 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 947F 06 0F        	ld b,15
 523+ 9481 CD FB 94     8 call PreviousScan
 524+ 9484 10 FB        	djnz 8B
 525+ 9486
 526+ 9486 E5           7 push hl
 527+ 9487 DD E1        	pop ix
 528+ 9489
 529+ 9489 2A 57 87     	ld hl,(Puntero_objeto)
 530+ 948C E5           	push hl
 531+ 948D FD E1        	pop iy
 532+ 948F
 533+ 948F              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 948F
 535+ 948F 3A 75 87     	ld a,(Ctrl_0)
 536+ 9492 CB 77        	bit 6,a
 537+ 9494 C8           	ret z
 538+ 9495
 539+ 9495              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9495              ; _ entidad / Amadeus´.
 541+ 9495
 542+ 9495 DD 22 A5 85  	ld (p.imp.amadeus),ix
 543+ 9499
 544+ 9499 C9           	ret
 545+ 949A
 546+ 949A              ; --------------------------------------------------------------------------------------------------------------------
 547+ 949A              ;
 548+ 949A              ;	2/1/23
 549+ 949A              ;
 550+ 949A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 949A              ;
 552+ 949A              ;	Tras esta rutina tenemos:
 553+ 949A              ;
 554+ 949A              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 949A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 949A              ;
 557+ 949A              ;	DESTRUYE!!!!! HL,B y A.
 558+ 949A
 559+ 949A 2A 55 87     Operandos ld hl,(Posicion_actual)
 560+ 949D 3A 76 87     	ld a,(Columnas)
 561+ 94A0 3D           	dec a
 562+ 94A1 20 01        	jr nz,1F
 563+ 94A3 3C           	inc a
 564+ 94A4 47           1 ld b,a
 565+ 94A5 C9           	ret
 566+ 94A6
 567+ 94A6              ; --------------------------------------------------------------------------------------------------------------------
 568+ 94A6              ;
 569+ 94A6              ;	3/1/23
 570+ 94A6              ;
 571+ 94A6              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 94A6              ;
 573+ 94A6              ;	Destruye: A,B,HL y DE.
 574+ 94A6
 575+ 94A6              Define_rutina_de_impresion
 576+ 94A6
 577+ 94A6 3A 54 87     	ld a,(Columns)
 578+ 94A9 47           	ld b,a
 579+ 94AA 3A 76 87     	ld a,(Columnas)
 580+ 94AD B8           	cp b
 581+ 94AE 20 0D        	jr nz,2f
 582+ 94B0
 583+ 94B0              ;	La entidad se imprime entera.
 584+ 94B0
 585+ 94B0 21 CF 95     	ld hl, Indice_entidades_completas
 586+ 94B3 E6 01        	and 1
 587+ 94B5 28 02        	jr z,1F
 588+ 94B7
 589+ 94B7 23           	inc hl
 590+ 94B8 23           	inc hl
 591+ 94B9
 592+ 94B9 CD 80 8B     1 call Extrae_address
 593+ 94BC C9           	ret		;	ret
 594+ 94BD
 595+ 94BD              ;	La entidad no se imprime entera en pantalla.
 596+ 94BD
 597+ 94BD 3A 67 87     2 ld a,(Cuad_objeto)
 598+ 94C0 E6 01        	and 1
 599+ 94C2 28 17        	jr z,3F
 600+ 94C4
 601+ 94C4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 94C4
 603+ 94C4 21 D3 95     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 94C7 3A 54 87     4 ld a,(Columns)
 605+ 94CA E6 01        	and 1
 606+ 94CC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 94CE
 608+ 94CE 23           	inc hl
 609+ 94CF 23           	inc hl
 610+ 94D0
 611+ 94D0 3A 76 87     	ld a,(Columnas)
 612+ 94D3 E6 01        	and 1
 613+ 94D5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 94D7
 615+ 94D7 23           	inc hl
 616+ 94D8 23           	inc hl
 617+ 94D9
 618+ 94D9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 94DB
 620+ 94DB 21 D9 95     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 94DE 18 E7        	jr 4B
 622+ 94E0
 623+ 94E0              ; --------------------------------------------------------------------------------------------------------------------
 624+ 94E0              ;
 625+ 94E0              ;	Prepara_draw
 626+ 94E0              ;
 627+ 94E0              ;	Es una rutina de carga.
 628+ 94E0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 94E0              ;
 630+ 94E0              ;	FUNCIONAMIENTO:
 631+ 94E0              ;
 632+ 94E0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 94E0              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 94E0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 94E0              ;
 636+ 94E0              ;	DESTRUYE:
 637+ 94E0              ;
 638+ 94E0              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 94E0
 640+ 94E0 21 53 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 94E3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 94E4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 94E5 4E           	ld c,(hl)
 644+ 94E6 2A 55 87     	ld hl,(Posicion_actual)
 645+ 94E9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 94EB C9           	ret
 647+ 94EC
 648+ 94EC              ;----------------------------------------------------------------------------------------------------------------
 649+ 94EC              ;
 650+ 94EC              ;	5/08/22
 651+ 94EC              ;
 652+ 94EC              ;   NextScan.
 653+ 94EC              ;
 654+ 94EC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 94EC              ;
 656+ 94EC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 94EC              ;
 658+ 94EC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 94EC              ;
 660+ 94EC              ;       DESTRUIDOS: AF y HL !!!
 661+ 94EC              ;
 662+ 94EC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 94EC              ;
 664+ 94EC
 665+ 94EC 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 94ED 7C               ld a,h
 667+ 94EE E6 07            and 7
 668+ 94F0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 94F1
 670+ 94F1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 94F2 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 94F4 6F               ld l,a
 673+ 94F5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 94F6
 675+ 94F6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 94F7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 94F9 67               ld h,a
 678+ 94FA C9               ret
 679+ 94FB
 680+ 94FB              ;----------------------------------------------------------------------------------------------------------------
 681+ 94FB              ;
 682+ 94FB              ;	5/08/22
 683+ 94FB              ;
 684+ 94FB              ;   PreviousScan.
 685+ 94FB              ;
 686+ 94FB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 94FB              ;
 688+ 94FB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 94FB              ;
 690+ 94FB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 94FB              ;
 692+ 94FB              ;       DESTRUIDOS: AF y HL !!!
 693+ 94FB              ;
 694+ 94FB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 94FB              ;
 696+ 94FB
 697+ 94FB 7C           PreviousScan ld a,h
 698+ 94FC 25               dec h               ; Dec H.
 699+ 94FD E6 07            and 7
 700+ 94FF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 9500
 702+ 9500 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 9501 D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 9503 6F               ld l,a
 705+ 9504 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 9505
 707+ 9505 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 9506 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 9508 67               ld h,a
 710+ 9509 C9               ret
 711+ 950A
 712+ 950A              ; -----------------------------------------------------------------------------------
 713+ 950A              ;
 714+ 950A              ;	31/7/23
 715+ 950A              ;
 716+ 950A              ;	Rutina principal de pintado de entidades.
 717+ 950A              ;	Extrae la foto del frame, (entidades).
 718+ 950A
 719+ 950A              Extrae_foto_entidades
 720+ 950A
 721+ 950A 21 01 70     	ld hl,Album_de_fotos+1
 722+ 950D 7E           	ld a,(hl)
 723+ 950E A7           	and a
 724+ 950F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 9510
 726+ 9510              ;	No hay datos, (entidades para pintar en este frame).
 727+ 9510
 728+ 9510 3A A0 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 9513 A7           	and a
 730+ 9514 C8           	ret z
 731+ 9515
 732+ 9515              ; -----------------------------------
 733+ 9515
 734+ 9515 ED 73 A5 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9519 31 00 70     	ld sp,Album_de_fotos
 736+ 951C
 737+ 951C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 951E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 951F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 9520
 741+ 9520 ED 73 A7 87  	ld (Stack_2),sp
 742+ 9524 ED 7B A5 87  	ld sp,(Stack)
 743+ 9528
 744+ 9528              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9528
 746+ 9528 3E CD        	ld a,$cd
 747+ 952A 32 32 95     	ld (Imprime),a
 748+ 952D EB           	ex de,hl
 749+ 952E 22 33 95     	ld (Imprime+1),hl
 750+ 9531 EB           	ex de,hl
 751+ 9532
 752+ 9532              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 9532
 754+ 9532 00 00 00     Imprime db 0,0,0
 755+ 9535
 756+ 9535 ED 73 A5 87  	ld (Stack),sp
 757+ 9539
 758+ 9539 3A A0 87     	ld a,(Numero_de_malotes)
 759+ 953C 3D           	dec a
 760+ 953D 28 09        	jr z,1F
 761+ 953F 32 A0 87      	ld (Numero_de_malotes),a
 762+ 9542
 763+ 9542 ED 7B A7 87  	ld sp,(Stack_2)
 764+ 9546 18 D4        	jr 2B
 765+ 9548
 766+ 9548 AF           1 xor a
 767+ 9549 32 A7 87     	ld (Stack_2),a
 768+ 954C
 769+ 954C C9           	ret
 770+ 954D
 771+ 954D              ; -----------------------------------------------------------------------------------
 772+ 954D              ;
 773+ 954D              ;	28/2/23
 774+ 954D              ;
 775+ 954D              ;	Pinta los disparos generados.
 776+ 954D
 777+ 954D              Extrae_foto_disparos
 778+ 954D
 779+ 954D 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 9550 7E               ld a,(hl)
 781+ 9551 A7               and a
 782+ 9552 C8               ret z
 783+ 9553
 784+ 9553 3A B5 87     	ld a,(Numero_de_disparotes)
 785+ 9556 A7           	and a
 786+ 9557 C8           	ret z
 787+ 9558 ED 73 A5 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 955C 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 955F
 790+ 955F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 9561 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 9562 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9563
 794+ 9563 ED 73 A7 87  	ld (Stack_2),sp
 795+ 9567 ED 7B A5 87  	ld sp,(Stack)
 796+ 956B
 797+ 956B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 956B
 799+ 956B 3E CD        	ld a,$cd
 800+ 956D 32 75 95     	ld (Imprime2),a
 801+ 9570 EB           	ex de,hl
 802+ 9571 22 76 95     	ld (Imprime2+1),hl
 803+ 9574 EB           	ex de,hl
 804+ 9575
 805+ 9575              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9575
 807+ 9575 00 00 00     Imprime2 db 0,0,0
 808+ 9578
 809+ 9578 3A B5 87     	ld a,(Numero_de_disparotes)
 810+ 957B 3D           	dec a
 811+ 957C 28 09        	jr z,1F
 812+ 957E 32 B5 87      	ld (Numero_de_disparotes),a
 813+ 9581
 814+ 9581 ED 7B A7 87  	ld sp,(Stack_2)
 815+ 9585 18 D8        	jr 2B
 816+ 9587
 817+ 9587 AF           1 xor a
 818+ 9588 32 A7 87     	ld (Stack_2),a
 819+ 958B C9           	ret
 820+ 958C
 821+ 958C              ; -----------------------------------------------------------------------------------
 822+ 958C              ;
 823+ 958C              ;	4/9/23
 824+ 958C              ;
 825+ 958C              ;	Rutina principal de pintado de Amadeus.
 826+ 958C              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 958C
 828+ 958C 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 958F 7E           	ld a,(hl)
 830+ 9590 A7           	and a
 831+ 9591 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 9592
 833+ 9592 3A A0 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9595 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9596 C8           	ret z
 836+ 9597
 837+ 9597              ; -----------------------------------
 838+ 9597
 839+ 9597 ED 73 A5 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 959B 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 959E
 842+ 959E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 95A0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 95A1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 95A2
 846+ 95A2 ED 73 A7 87  	ld (Stack_2),sp
 847+ 95A6 ED 7B A5 87  	ld sp,(Stack)
 848+ 95AA
 849+ 95AA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 95AA
 851+ 95AA 3E CD        	ld a,$cd
 852+ 95AC 32 B4 95     	ld (Imprime_Amadeus),a
 853+ 95AF EB           	ex de,hl
 854+ 95B0 22 B5 95     	ld (Imprime_Amadeus+1),hl
 855+ 95B3 EB           	ex de,hl
 856+ 95B4
 857+ 95B4              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 95B4
 859+ 95B4 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 95B7
 861+ 95B7 ED 73 A5 87  	ld (Stack),sp
 862+ 95BB
 863+ 95BB 3A A0 87     	ld a,(Numero_de_malotes)
 864+ 95BE 3D           	dec a
 865+ 95BF 28 09        	jr z,1F
 866+ 95C1 32 A0 87      	ld (Numero_de_malotes),a
 867+ 95C4
 868+ 95C4 ED 7B A7 87  	ld sp,(Stack_2)
 869+ 95C8 18 D4        	jr 2B
 870+ 95CA
 871+ 95CA AF           1 xor a
 872+ 95CB 32 A7 87     	ld (Stack_2),a
 873+ 95CE
 874+ 95CE C9           	ret
# file closed: Draw_XOR.asm
1913  95CF              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95CF              ;   índices de Rutinas de impresión.
   2+ 95CF
   3+ 95CF DF 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95D1 0C 96            defw Pinta_Amadeus_3x2
   5+ 95D3
   6+ 95D3 62 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95D5 02 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95D7 B6 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95D9
  10+ 95D9 8C 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95DB 90 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95DD 44 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95DF
  14+ 95DF
  15+ 95DF              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95DF              ;
  17+ 95DF              ;   12/12/22
  18+ 95DF              ;
  19+ 95DF              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95DF              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95DF              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95DF              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95DF              ;
  24+ 95DF              ;   Modifica: DE y HL.
  25+ 95DF
  26+ 95DF ED 73 A5 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95E3 FD F9        	ld sp,iy
  28+ 95E5 06 10            ld b,16
  29+ 95E7 D1           1 pop de
  30+ 95E8 7B               ld a,e
  31+ 95E9 AE               xor (hl)
  32+ 95EA 77           	ld (hl),a
  33+ 95EB 23           	inc hl
  34+ 95EC 7A               ld a,d
  35+ 95ED AE               xor (hl)
  36+ 95EE 77           	ld (hl),a
  37+ 95EF 2B           	dec hl
  38+ 95F0 24           	inc h
  39+ 95F1 7C               ld a,h
  40+ 95F2 E6 07            and 7
  41+ 95F4 20 0A            jr nz,2F
  42+ 95F6 7D               ld a,l
  43+ 95F7 C6 20            add a,$20
  44+ 95F9 6F               ld l,a
  45+ 95FA 38 04            jr c,2F
  46+ 95FC 7C               ld a,h
  47+ 95FD D6 08            sub 8
  48+ 95FF 67               ld h,a
  49+ 9600 7C           2 ld a,h
  50+ 9601 FE 58            cp $58
  51+ 9603 28 02            jr z,3F
  52+ 9605 10 E0            djnz 1B
  53+ 9607 ED 7B A5 87  3 ld sp,(Stack)
  54+ 960B C9           	ret
  55+ 960C
  56+ 960C ED 73 A5 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9610 FD F9        	ld sp,iy
  58+ 9612 06 08            ld b,8
  59+ 9614 D1           1 pop de
  60+ 9615 7B               ld a,e
  61+ 9616 AE               xor (hl)
  62+ 9617 77           	ld (hl),a
  63+ 9618 23           	inc hl
  64+ 9619 7A               ld a,d
  65+ 961A AE               xor (hl)
  66+ 961B 77           	ld (hl),a
  67+ 961C 23           	inc hl
  68+ 961D D1           	pop de
  69+ 961E 7B               ld a,e
  70+ 961F AE               xor (hl)
  71+ 9620 77           	ld (hl),a
  72+ 9621 2B           	dec hl
  73+ 9622 2B           	dec hl
  74+ 9623 24           	inc h
  75+ 9624 7C               ld a,h
  76+ 9625 E6 07            and 7
  77+ 9627 20 0A            jr nz,2F
  78+ 9629 7D               ld a,l
  79+ 962A C6 20            add a,$20
  80+ 962C 6F               ld l,a
  81+ 962D 38 04            jr c,2F
  82+ 962F 7C               ld a,h
  83+ 9630 D6 08            sub 8
  84+ 9632 67               ld h,a
  85+ 9633 7C           2 ld a,h
  86+ 9634 FE 58            cp $58
  87+ 9636 28 25            jr z,4F
  88+ 9638 7A               ld a,d
  89+ 9639 AE               xor (hl)
  90+ 963A 77               ld (hl),a
  91+ 963B D1           	pop de
  92+ 963C 23           	inc hl
  93+ 963D 7B               ld a,e
  94+ 963E AE               xor (hl)
  95+ 963F 77           	ld (hl),a
  96+ 9640 23           	inc hl
  97+ 9641 7A               ld a,d
  98+ 9642 AE               xor (hl)
  99+ 9643 77           	ld (hl),a
 100+ 9644 2B           	dec hl
 101+ 9645 2B           	dec hl
 102+ 9646 24           	inc h
 103+ 9647 7C               ld a,h
 104+ 9648 E6 07            and 7
 105+ 964A 20 0A            jr nz,3F
 106+ 964C 7D               ld a,l
 107+ 964D C6 20            add a,$20
 108+ 964F 6F               ld l,a
 109+ 9650 38 04            jr c,3F
 110+ 9652 7C               ld a,h
 111+ 9653 D6 08            sub 8
 112+ 9655 67               ld h,a
 113+ 9656 7C           3 ld a,h
 114+ 9657 FE 58            cp $58
 115+ 9659 28 02            jr z,4F
 116+ 965B 10 B7            djnz 1B
 117+ 965D ED 7B A5 87  4 ld sp,(Stack)
 118+ 9661 C9           	ret
 119+ 9662
 120+ 9662              ; ---------------------------------------------------
 121+ 9662
 122+ 9662 ED 73 A5 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9666 FD F9        	ld sp,iy
 124+ 9668
 125+ 9668              ; >>>
 126+ 9668
 127+ 9668 06 10            ld b,16
 128+ 966A D1           1 pop de
 129+ 966B 7A           	ld a,d
 130+ 966C AE           	xor (hl)
 131+ 966D 77           	ld (hl),a
 132+ 966E 24           	inc h
 133+ 966F 7C               ld a,h
 134+ 9670 E6 07            and 7
 135+ 9672 20 0C            jr nz,2F
 136+ 9674 7D               ld a,l
 137+ 9675 C6 20            add a,$20
 138+ 9677 6F               ld l,a
 139+ 9678 38 06            jr c,2F
 140+ 967A 7C               ld a,h
 141+ 967B D6 08            sub 8
 142+ 967D 67               ld h,a
 143+ 967E 18 00            jr 2F
 144+ 9680 7C           2 ld a,h
 145+ 9681 FE 58            cp $58
 146+ 9683 28 02            jr z,3F
 147+ 9685 10 E3            djnz 1B
 148+ 9687 ED 7B A5 87  3 ld sp,(Stack)
 149+ 968B C9           	ret
 150+ 968C
 151+ 968C ED 73 A5 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9690 FD F9        	ld sp,iy
 153+ 9692
 154+ 9692              ; >>>
 155+ 9692
 156+ 9692 06 10            ld b,16
 157+ 9694 D1           1 pop de
 158+ 9695 7B           	ld a,e
 159+ 9696 AE           	xor (hl)
 160+ 9697 77           	ld (hl),a
 161+ 9698 24           	inc h
 162+ 9699 7C               ld a,h
 163+ 969A E6 07            and 7
 164+ 969C 20 0C            jr nz,2F
 165+ 969E 7D               ld a,l
 166+ 969F C6 20            add a,$20
 167+ 96A1 6F               ld l,a
 168+ 96A2 38 06            jr c,2F
 169+ 96A4 7C               ld a,h
 170+ 96A5 D6 08            sub 8
 171+ 96A7 67               ld h,a
 172+ 96A8 18 00            jr 2F
 173+ 96AA 7C           2 ld a,h
 174+ 96AB FE 58            cp $58
 175+ 96AD 28 02            jr z,3F
 176+ 96AF 10 E3            djnz 1B
 177+ 96B1 ED 7B A5 87  3 ld sp,(Stack)
 178+ 96B5 C9           	ret
 179+ 96B6
 180+ 96B6              ; ---------------------------------------------------
 181+ 96B6
 182+ 96B6 ED 73 A5 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96BA FD F9        	ld sp,iy
 184+ 96BC 06 08            ld b,8
 185+ 96BE D1           1 pop de
 186+ 96BF 7A           	ld a,d
 187+ 96C0 AE           	xor (hl)
 188+ 96C1 77           	ld (hl),a
 189+ 96C2 23           	inc hl
 190+ 96C3 D1           	pop de
 191+ 96C4 7B           	ld a,e
 192+ 96C5 AE           	xor (hl)
 193+ 96C6 77           	ld (hl),a
 194+ 96C7 2B           	dec hl
 195+ 96C8 24            	inc h
 196+ 96C9 7C               ld a,h
 197+ 96CA E6 07            and 7
 198+ 96CC 20 0A            jr nz,2F
 199+ 96CE 7D               ld a,l
 200+ 96CF C6 20            add a,$20
 201+ 96D1 6F               ld l,a
 202+ 96D2 38 04            jr c,2F
 203+ 96D4 7C               ld a,h
 204+ 96D5 D6 08            sub 8
 205+ 96D7 67               ld h,a
 206+ 96D8 7C           2 ld a,h
 207+ 96D9 FE 58            cp $58
 208+ 96DB 28 20            jr z,4F
 209+ 96DD D1               pop de
 210+ 96DE 7B           	ld a,e
 211+ 96DF AE           	xor (hl)
 212+ 96E0 77           	ld (hl),a
 213+ 96E1 23           	inc hl
 214+ 96E2 7A           	ld a,d
 215+ 96E3 AE           	xor (hl)
 216+ 96E4 77           	ld (hl),a
 217+ 96E5 2B           	dec hl
 218+ 96E6 24           	inc h
 219+ 96E7 7C               ld a,h
 220+ 96E8 E6 07            and 7
 221+ 96EA 20 0A            jr nz,3F
 222+ 96EC 7D               ld a,l
 223+ 96ED C6 20            add a,$20
 224+ 96EF 6F               ld l,a
 225+ 96F0 38 04            jr c,3F
 226+ 96F2 7C               ld a,h
 227+ 96F3 D6 08            sub 8
 228+ 96F5 67               ld h,a
 229+ 96F6 7C           3 ld a,h
 230+ 96F7 FE 58            cp $58
 231+ 96F9 28 02            jr z,4F
 232+ 96FB 10 C1            djnz 1B
 233+ 96FD ED 7B A5 87  4 ld sp,(Stack)
 234+ 9701 C9           	ret
 235+ 9702
 236+ 9702 ED 73 A5 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9706 FD F9        	ld sp,iy
 238+ 9708 06 08            ld b,8
 239+ 970A D1           1 pop de
 240+ 970B D1           	pop de
 241+ 970C 7B           	ld a,e
 242+ 970D AE           	xor (hl)
 243+ 970E 77           	ld (hl),a
 244+ 970F 24            	inc h
 245+ 9710 7C               ld a,h
 246+ 9711 E6 07            and 7
 247+ 9713 20 0A            jr nz,2F
 248+ 9715 7D               ld a,l
 249+ 9716 C6 20            add a,$20
 250+ 9718 6F               ld l,a
 251+ 9719 38 04            jr c,2F
 252+ 971B 7C               ld a,h
 253+ 971C D6 08            sub 8
 254+ 971E 67               ld h,a
 255+ 971F 7C           2 ld a,h
 256+ 9720 FE 58            cp $58
 257+ 9722 28 1B            jr z,4F
 258+ 9724 D1               pop de
 259+ 9725 7A           	ld a,d
 260+ 9726 AE           	xor (hl)
 261+ 9727 77           	ld (hl),a
 262+ 9728 24           	inc h
 263+ 9729 7C               ld a,h
 264+ 972A E6 07            and 7
 265+ 972C 20 0A            jr nz,3F
 266+ 972E 7D               ld a,l
 267+ 972F C6 20            add a,$20
 268+ 9731 6F               ld l,a
 269+ 9732 38 04            jr c,3F
 270+ 9734 7C               ld a,h
 271+ 9735 D6 08            sub 8
 272+ 9737 67               ld h,a
 273+ 9738 7C           3 ld a,h
 274+ 9739 FE 58            cp $58
 275+ 973B 28 02            jr z,4F
 276+ 973D 10 CB            djnz 1B
 277+ 973F ED 7B A5 87  4 ld sp,(Stack)
 278+ 9743 C9           	ret
 279+ 9744
 280+ 9744 ED 73 A5 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9748 FD F9        	ld sp,iy
 282+ 974A 06 08            ld b,8
 283+ 974C D1           1 pop de
 284+ 974D 7B           	ld a,e
 285+ 974E AE           	xor (hl)
 286+ 974F 77           	ld (hl),a
 287+ 9750 23           	inc hl
 288+ 9751 7A           	ld a,d
 289+ 9752 AE           	xor (hl)
 290+ 9753 77           	ld (hl),a
 291+ 9754 2B           	dec hl
 292+ 9755 24             	inc h
 293+ 9756 7C               ld a,h
 294+ 9757 E6 07            and 7
 295+ 9759 20 0A            jr nz,2F
 296+ 975B 7D               ld a,l
 297+ 975C C6 20            add a,$20
 298+ 975E 6F               ld l,a
 299+ 975F 38 04            jr c,2F
 300+ 9761 7C               ld a,h
 301+ 9762 D6 08            sub 8
 302+ 9764 67               ld h,a
 303+ 9765 7C           2 ld a,h
 304+ 9766 FE 58            cp $58
 305+ 9768 28 21            jr z,4F
 306+ 976A D1               pop de
 307+ 976B 7A           	ld a,d
 308+ 976C AE           	xor (hl)
 309+ 976D 77           	ld (hl),a
 310+ 976E 23           	inc hl
 311+ 976F D1               pop de
 312+ 9770 7B           	ld a,e
 313+ 9771 AE           	xor (hl)
 314+ 9772 77           	ld (hl),a
 315+ 9773 2B           	dec hl
 316+ 9774 24           	inc h
 317+ 9775 7C               ld a,h
 318+ 9776 E6 07            and 7
 319+ 9778 20 0A            jr nz,3F
 320+ 977A 7D               ld a,l
 321+ 977B C6 20            add a,$20
 322+ 977D 6F               ld l,a
 323+ 977E 38 04            jr c,3F
 324+ 9780 7C               ld a,h
 325+ 9781 D6 08            sub 8
 326+ 9783 67               ld h,a
 327+ 9784 7C           3 ld a,h
 328+ 9785 FE 58            cp $58
 329+ 9787 28 02            jr z,4F
 330+ 9789 10 C1            djnz 1B
 331+ 978B ED 7B A5 87  4 ld sp,(Stack)
 332+ 978F C9           	ret
 333+ 9790
 334+ 9790 ED 73 A5 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9794 FD F9        	ld sp,iy
 336+ 9796 06 08            ld b,8
 337+ 9798 D1           1 pop de
 338+ 9799 7B           	ld a,e
 339+ 979A AE           	xor (hl)
 340+ 979B 77           	ld (hl),a
 341+ 979C 24            	inc h
 342+ 979D 7C               ld a,h
 343+ 979E E6 07            and 7
 344+ 97A0 20 0A            jr nz,2F
 345+ 97A2 7D               ld a,l
 346+ 97A3 C6 20            add a,$20
 347+ 97A5 6F               ld l,a
 348+ 97A6 38 04            jr c,2F
 349+ 97A8 7C               ld a,h
 350+ 97A9 D6 08            sub 8
 351+ 97AB 67               ld h,a
 352+ 97AC 7C           2 ld a,h
 353+ 97AD FE 58            cp $58
 354+ 97AF 28 1C            jr z,4F
 355+ 97B1 D1               pop de
 356+ 97B2 7A           	ld a,d
 357+ 97B3 AE           	xor (hl)
 358+ 97B4 77           	ld (hl),a
 359+ 97B5 24           	inc h
 360+ 97B6 7C               ld a,h
 361+ 97B7 E6 07            and 7
 362+ 97B9 20 0A            jr nz,3F
 363+ 97BB 7D               ld a,l
 364+ 97BC C6 20            add a,$20
 365+ 97BE 6F               ld l,a
 366+ 97BF 38 04            jr c,3F
 367+ 97C1 7C               ld a,h
 368+ 97C2 D6 08            sub 8
 369+ 97C4 67               ld h,a
 370+ 97C5 7C           3 ld a,h
 371+ 97C6 FE 58            cp $58
 372+ 97C8 28 03            jr z,4F
 373+ 97CA D1               pop de
 374+ 97CB 10 CB            djnz 1B
 375+ 97CD ED 7B A5 87  4 ld sp,(Stack)
 376+ 97D1 C9           	ret
 377+ 97D2
 378+ 97D2              ; ---------------------------------------------------
 379+ 97D2              ;
 380+ 97D2              ;   27/02/23
 381+ 97D2              ;
 382+ 97D2              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97D2              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97D2              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97D2
 386+ 97D2 ED 73 A5 87  Pinta_Disparo ld (Stack),sp
 387+ 97D6 FD F9            ld sp,iy
 388+ 97D8 06 03            ld b,3
 389+ 97DA D1           1 pop de
 390+ 97DB 7B               ld a,e
 391+ 97DC AE               xor (hl)
 392+ 97DD 77               ld (hl),a
 393+ 97DE 23               inc hl
 394+ 97DF 7A               ld a,d
 395+ 97E0 AE               xor (hl)
 396+ 97E1 77               ld (hl),a
 397+ 97E2 2B               dec hl
 398+ 97E3
 399+ 97E3 24               inc h
 400+ 97E4 7C               ld a,h
 401+ 97E5 E6 07            and 7
 402+ 97E7 20 0A            jr nz,2F
 403+ 97E9 7D               ld a,l
 404+ 97EA C6 20            add a,$20
 405+ 97EC 6F               ld l,a
 406+ 97ED 38 04            jr c,2F
 407+ 97EF 7C               ld a,h
 408+ 97F0 D6 08            sub 8
 409+ 97F2 67               ld h,a
 410+ 97F3 7C           2 ld a,h
 411+ 97F4 FE 58            cp $58
 412+ 97F6 28 02            jr z,3F
 413+ 97F8
 414+ 97F8 10 E0            djnz 1B
 415+ 97FA ED 7B A5 87  3 ld sp,(Stack)
 416+ 97FE C9               ret
 417+ 97FF
# file closed: Rutinas_de_impresion_sprites.asm
1914  97FF              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97FF              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97FF              ;
   3+ 97FF              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97FF              ;
   5+ 97FF              ; *****************************************************************************************************************************************************************************************
   6+ 97FF              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97FF
   8+ 97FF 7C           calcula_tercio ld a,h
   9+ 9800 E6 18        	and $18
  10+ 9802 CB 2F        	sra a
  11+ 9804 CB 2F        	sra a
  12+ 9806 CB 2F        	sra a
  13+ 9808 C9           	ret
  14+ 9809
# file closed: calcula_tercio.asm
1915  9809              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9809              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9809              ;
   3+ 9809              ;
   4+ 9809              ;	CLS.
   5+ 9809              ;
   6+ 9809              ;	Limpia la pantalla y define sus atributos.
   7+ 9809              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9809              ;
   9+ 9809              ;	COLORES: 0 ..... NEGRO
  10+ 9809              ;    		 1 ..... AZUL
  11+ 9809              ; 			 2 ..... ROJO
  12+ 9809              ;			 3 ..... MAGENTA
  13+ 9809              ; 			 4 ..... VERDE
  14+ 9809              ; 			 5 ..... CIAN
  15+ 9809              ;			 6 ..... AMARILLO
  16+ 9809              ; 			 7 ..... BLANCO
  17+ 9809              ;
  18+ 9809              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9809              ;
  20+ 9809              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9809
  22+ 9809
  23+ 9809 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 980C 11 01 40     	LD DE,$4001
  25+ 980F 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9812 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9814 ED B0        	LDIR
  28+ 9816 01 FF 02     	LD BC,767
  29+ 9819 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 981A ED B0        	LDIR
  31+ 981C C9           	ret
  32+ 981D
# file closed: Cls.asm
1916  981D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 981D
   2+ 981D              ;	18/1/24
   3+ 981D              ;
   4+ 981D              ;	Tabla de velocidades según Nivel de dificultad.
   5+ 981D              ;
   6+ 981D 01 01 01 01  Velocidades_Nivel1 db 1,1,1,1 						; Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
   7+ 9821 01 01 01 02  Velocidades_Nivel2 db 1,1,1,2
   8+ 9825
   9+ 9825              ; ******************************************************************************************************************************************************************************************
  10+ 9825              ;
  11+ 9825              ;   20/05/23
  12+ 9825              ;
  13+ 9825              ;	Recompone_posicion_inicio
  14+ 9825              ;
  15+ 9825              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
  16+ 9825              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  17+ 9825              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  18+ 9825              ;	_ a una u otra rutina.
  19+ 9825
  20+ 9825              Recompone_posicion_inicio
  21+ 9825
  22+ 9825 2A 65 87     	ld hl,(Posicion_inicio)
  23+ 9828 7D           	ld a,l
  24+ 9829 E6 1F        	and $1f
  25+ 982B 28 16        	jr z,1F
  26+ 982D
  27+ 982D FE 1F        	cp $1f
  28+ 982F 28 0D        	jr z,3F
  29+ 9831
  30+ 9831 21 7A 87     	ld hl,Ctrl_2
  31+ 9834 CB C6        	set 0,(hl)
  32+ 9836 2A 57 87     	ld hl,(Puntero_objeto)
  33+ 9839 22 95 87     	ld (Repone_puntero_objeto),hl
  34+ 983C 18 08        	jr 2F
  35+ 983E
  36+ 983E CD EC 99     3 call Mov_left
  37+ 9841 18 03        	jr 2F
  38+ 9843
  39+ 9843 CD C9 98     1 call Mov_right
  40+ 9846 21 00 F0     2 ld hl,Sprite_vacio
  41+ 9849 22 57 87     	ld (Puntero_objeto),hl
  42+ 984C C9           	ret
  43+ 984D
  44+ 984D              ; ******************************************************************************************************************************************************************************************
  45+ 984D              ;
  46+ 984D              ;   27/05/23
  47+ 984D              ;
  48+ 984D              ;	Mov_down
  49+ 984D              ;
  50+ 984D              ; 	Mueve el Sprite X px hacia abajo.
  51+ 984D              ;
  52+ 984D              ;
  53+ 984D              Mov_down
  54+ 984D
  55+ 984D CD B7 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  56+ 9850              ;																	; _ repone (Puntero_objeto).
  57+ 9850 21 75 87     	ld hl,Ctrl_0
  58+ 9853 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  59+ 9855              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  60+ 9855              ; 																	; _ en el caso de que no lo haya.
  61+ 9855 3A 7F 87     	ld a,(Vel_down)
  62+ 9858 47           	ld b,a
  63+ 9859 2A 55 87         ld hl,(Posicion_actual)
  64+ 985C CD FF 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  65+ 985F E6 02        	and 2
  66+ 9861 28 17        	jr z,1F
  67+ 9863
  68+ 9863              ; Nos encontramos en el último tercio de pantalla.
  69+ 9863              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  70+ 9863
  71+ 9863 7C           	ld a,h
  72+ 9864 FE 57        	cp $57
  73+ 9866 20 12        	jr nz,1F
  74+ 9868
  75+ 9868 7D           	ld a,l
  76+ 9869 C6 20        	add $20
  77+ 986B 30 0D        	jr nc,1F
  78+ 986D
  79+ 986D              ; ------------------------------
  80+ 986D              ;
  81+ 986D              ;	12/01/24
  82+ 986D
  83+ 986D              ;	call Reaparece_arriba
  84+ 986D CD 79 9B     	call Reinicio
  85+ 9870
  86+ 9870              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  87+ 9870
  88+ 9870 3A B3 87     	ld a,(Ctrl_3)
  89+ 9873 CB CF        	set 1,a
  90+ 9875 32 B3 87     	ld (Ctrl_3),a
  91+ 9878
  92+ 9878 18 08        	jr 3F
  93+ 987A              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  94+ 987A              ;															; _a la siguiente entidad como "Entidad_guía".
  95+ 987A              ; ------------------------------
  96+ 987A
  97+ 987A CD EC 94     1 call NextScan
  98+ 987D 22 55 87     	ld (Posicion_actual),hl
  99+ 9880 10 DA            djnz 2B
 100+ 9882 CD 9F 9B     3 call Genera_coordenadas
 101+ 9885 C9           	ret
 102+ 9886
 103+ 9886              ; ******************************************************************************************************************************************************************************************
 104+ 9886              ;
 105+ 9886              ;   27/05/23
 106+ 9886              ;
 107+ 9886              ;	Mov_up
 108+ 9886              ;
 109+ 9886              ; 	Mueve el Sprite hacia arriba.
 110+ 9886              ;
 111+ 9886              ;
 112+ 9886              Mov_up
 113+ 9886
 114+ 9886 CD B7 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 115+ 9889              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 116+ 9889 21 75 87     	ld hl,Ctrl_0
 117+ 988C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 118+ 988E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 119+ 988E              ; 																		; _ en el caso de que no lo haya.
 120+ 988E 3A 7E 87     	ld a,(Vel_up)
 121+ 9891 47           	ld b,a
 122+ 9892 2A 55 87     	ld hl,(Posicion_actual)
 123+ 9895 CD FF 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 124+ 9898 A7           	and a
 125+ 9899 20 10        	jr nz,1F
 126+ 989B
 127+ 989B              ; Nos encontramos en el 1er tercio de pantalla.
 128+ 989B              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 129+ 989B
 130+ 989B 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 131+ 989C FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 132+ 989E 20 0B            jr nz,1F
 133+ 98A0 7D               ld a,l
 134+ 98A1 D6 20            sub $20
 135+ 98A3 30 06            jr nc,1F
 136+ 98A5 25               dec h
 137+ 98A6
 138+ 98A6              ; -----------------------------
 139+ 98A6 CD 5A 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 140+ 98A9              ;	call Reinicio
 141+ 98A9              ; -----------------------------
 142+ 98A9
 143+ 98A9 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 144+ 98AB CD FB 94     1 call PreviousScan
 145+ 98AE 22 55 87     	ld (Posicion_actual),hl
 146+ 98B1 10 E2            djnz 3B
 147+ 98B3 CD 9F 9B     2 call Genera_coordenadas
 148+ 98B6 C9           	ret
 149+ 98B7
 150+ 98B7              ; -----------------------------
 151+ 98B7              ;
 152+ 98B7              ;	27/5/23
 153+ 98B7              ;
 154+ 98B7              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 155+ 98B7              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 156+ 98B7              ;
 157+ 98B7              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 158+ 98B7              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 159+ 98B7              ;
 160+ 98B7              ;	Modifica: A y (Puntero_objeto).
 161+ 98B7
 162+ 98B7 3A 7A 87     Reponne_punntero_objeto	ld a,(Ctrl_2)
 163+ 98BA CB 47        	bit 0,a
 164+ 98BC C8           	ret z
 165+ 98BD CB 87        	res 0,a
 166+ 98BF 32 7A 87     	ld (Ctrl_2),a
 167+ 98C2 2A 95 87     	ld hl,(Repone_puntero_objeto)
 168+ 98C5 22 57 87     	ld (Puntero_objeto),hl
 169+ 98C8 C9           	ret
 170+ 98C9
 171+ 98C9              ; ******************************************************************************************************************************************************************************************
 172+ 98C9              ;
 173+ 98C9              ;	19/10/22
 174+ 98C9              ;
 175+ 98C9              ;	Mov_right.
 176+ 98C9              ;
 177+ 98C9              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 178+ 98C9              ;
 179+ 98C9
 180+ 98C9 3A 75 87     Mov_right ld a,(Ctrl_0)
 181+ 98CC CB 77        	bit 6,a
 182+ 98CE 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 183+ 98D0
 184+ 98D0 CD 08 9B     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 185+ 98D3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 186+ 98D4
 187+ 98D4 21 75 87     	ld hl,Ctrl_0
 188+ 98D7 CB E6        	set 4,(hl)
 189+ 98D9 18 52        	jr 8F
 190+ 98DB
 191+ 98DB 21 75 87     10 ld hl,Ctrl_0
 192+ 98DE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 193+ 98E0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 194+ 98E0              ; 																	; _ en el caso de que no lo haya.
 195+ 98E0 3A 59 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 196+ 98E3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 197+ 98E5 20 46        	jr nz,8F
 198+ 98E7
 199+ 98E7 3A 5B 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 200+ 98EA A7           	and a 															; _[3] para continuar con el DESPLZ.
 201+ 98EB 28 40        	jr z,8F
 202+ 98ED
 203+ 98ED              ; ---------- ---------- ----------
 204+ 98ED              ;
 205+ 98ED              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 206+ 98ED
 207+ 98ED 3A 7D 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 208+ 98F0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 209+ 98F2 28 11        	jr z,1F
 210+ 98F4 38 06        	jr c,6F
 211+ 98F6 FE 04        	cp 4
 212+ 98F8 28 14        	jr z,7F
 213+ 98FA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 214+ 98FC
 215+ 98FC              ; ---------- ---------- ----------
 216+ 98FC              ;
 217+ 98FC              ; Perfiles de velocidad
 218+ 98FC              ;
 219+ 98FC
 220+ 98FC 3A 5B 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 221+ 98FF FE FE        	cp $fe
 222+ 9901 20 2A        	jr nz,8F
 223+ 9903 18 10        	jr 3F
 224+ 9905 3A 5B 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 225+ 9908 FE FD        	cp $fd
 226+ 990A 20 21        	jr nz,8F
 227+ 990C 18 07        	jr 3F
 228+ 990E 3A 5B 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 229+ 9911 FE FB        	cp $fb
 230+ 9913 20 18        	jr nz,8F
 231+ 9915
 232+ 9915              ; ---------- ---------- ----------
 233+ 9915
 234+ 9915              3
 235+ 9915 CD 48 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 236+ 9918              ;	call Reinicio
 237+ 9918
 238+ 9918              ; ---------- ---------- ----------
 239+ 9918              ;
 240+ 9918              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 241+ 9918
 242+ 9918 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 243+ 991A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 244+ 991B CD 34 99     	call DESPLZ_DER
 245+ 991E C1           	pop bc
 246+ 991F 10 F9        	djnz 5B
 247+ 9921 2A 55 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 248+ 9924 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 249+ 9925 22 55 87     	ld (Posicion_actual),hl
 250+ 9928 CD 9F 9B     	call Genera_coordenadas
 251+ 992B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 252+ 992D
 253+ 992D              ; ---------- ---------- ----------
 254+ 992D
 255+ 992D 2A 55 87     8 ld hl,(Posicion_actual)
 256+ 9930 CD 34 99     	call DESPLZ_DER
 257+ 9933 C9           2 ret
 258+ 9934
 259+ 9934              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 260+ 9934              ;
 261+ 9934              ;	22/9/22
 262+ 9934              ;
 263+ 9934
 264+ 9934 CD 43 99     DESPLZ_DER call Desplaza_derecha
 265+ 9937 CD 8F 99         call modifica_parametros_1er_DESPLZ_2
 266+ 993A CD B8 99         call Ciclo_completo
 267+ 993D 21 75 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 268+ 9940 CB FE        	set 7,(hl)
 269+ 9942 C9           	ret
 270+ 9943
 271+ 9943              ; ******************************************************************************************************************************************************************************************
 272+ 9943              ;	15/02/23
 273+ 9943              ;
 274+ 9943
 275+ 9943 3A 7D 87     Desplaza_derecha ld a,(Vel_right)
 276+ 9946 47           	ld b,a
 277+ 9947 2A 61 87     	ld hl,(Puntero_DESPLZ_der)
 278+ 994A 23           1 inc hl
 279+ 994B 23           	inc hl
 280+ 994C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 281+ 994E 22 61 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 282+ 9951 CD 80 8B     	call Extrae_address
 283+ 9954 22 57 87     	ld (Puntero_objeto),hl
 284+ 9957
 285+ 9957              ; Modifica (Puntero_DESPLZ_izq).
 286+ 9957
 287+ 9957              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 288+ 9957              ; Cuántos movimientos hemos hecho ??
 289+ 9957              ; DE contiene (Puntero_DESPLZ_der).
 290+ 9957
 291+ 9957 2A 5D 87     7 ld hl,(Indice_Sprite_der)
 292+ 995A EB           	ex de,hl
 293+ 995B A7           	and a
 294+ 995C ED 52        	sbc hl,de
 295+ 995E CB 3D        	srl l
 296+ 9960 3E 08        6 ld a,8
 297+ 9962 95           	sub l
 298+ 9963 30 1E        	jr nc,3F
 299+ 9965
 300+ 9965              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 301+ 9965              ; B="0".
 302+ 9965
 303+ 9965 04           4 inc b
 304+ 9966 3C           	inc a
 305+ 9967 20 FC        	jr nz,4B
 306+ 9969 78           	ld a,b
 307+ 996A 08           	ex af,af
 308+ 996B 2A 5D 87     	ld hl,(Indice_Sprite_der)
 309+ 996E 23           5 inc hl
 310+ 996F 23           	inc hl
 311+ 9970 10 FC        	djnz 5B
 312+ 9972 22 61 87     	ld (Puntero_DESPLZ_der),hl
 313+ 9975 CD 80 8B     	call Extrae_address
 314+ 9978 22 57 87     	ld (Puntero_objeto),hl
 315+ 997B
 316+ 997B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 317+ 997B              ; _(Posicion_actual).
 318+ 997B
 319+ 997B 21 55 87     	ld hl,Posicion_actual
 320+ 997E 34           	inc (hl)
 321+ 997F 08               ex af,af
 322+ 9980 6F           	ld l,a
 323+ 9981 18 DD        	jr 6B
 324+ 9983
 325+ 9983              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 326+ 9983
 327+ 9983 47           3 ld b,a
 328+ 9984 2A 5F 87     	ld hl,(Indice_Sprite_izq)
 329+ 9987 23           2 inc hl
 330+ 9988 23           	inc hl
 331+ 9989 10 FC        	djnz 2B
 332+ 998B 22 63 87     	ld (Puntero_DESPLZ_izq),hl
 333+ 998E C9           8 ret
 334+ 998F
 335+ 998F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 336+ 998F              ;
 337+ 998F              ;	24/7/22
 338+ 998F              ;
 339+ 998F              ;	modifica_parametros_1er_DESPLZ_2
 340+ 998F              ;
 341+ 998F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 342+ 998F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 998F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 344+ 998F
 345+ 998F 3A 5B 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 346+ 9992 A7           	and a
 347+ 9993 20 1F        	jr nz,1F
 348+ 9995 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 349+ 9997 32 5B 87         ld (CTRL_DESPLZ),a
 350+ 999A
 351+ 999A 21 54 87     	ld hl,Columns
 352+ 999D 34           	inc (hl)
 353+ 999E 3A 67 87     	ld a,(Cuad_objeto)
 354+ 99A1 E6 01        	and 1
 355+ 99A3 28 0F        	jr z,1F
 356+ 99A5 2A 55 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 357+ 99A8 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 358+ 99A9 22 55 87     	ld (Posicion_actual),hl
 359+ 99AC CD 9F 9B     	call Genera_coordenadas
 360+ 99AF CD 14 9B     	call Inc_CTRL_DESPLZ
 361+ 99B2 18 03        	jr 2F
 362+ 99B4 CD 14 9B     1 call Inc_CTRL_DESPLZ
 363+ 99B7 C9           2 ret
 364+ 99B8
 365+ 99B8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 366+ 99B8              ;
 367+ 99B8              ;	24/7/22
 368+ 99B8              ;
 369+ 99B8              ;	Ciclo_completo.
 370+ 99B8              ;
 371+ 99B8              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 372+ 99B8              ;
 373+ 99B8              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 374+ 99B8              ; 	Decrementamos (Columns).
 375+ 99B8              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 376+ 99B8              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 377+ 99B8
 378+ 99B8
 379+ 99B8 3A 5B 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 380+ 99BB FE FF        	cp $ff
 381+ 99BD 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 382+ 99BF E6 F0        	and $f0
 383+ 99C1 20 28        	jr nz,3F
 384+ 99C3
 385+ 99C3              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 386+ 99C3
 387+ 99C3 3A 5B 87     	ld a,(CTRL_DESPLZ)
 388+ 99C6 47           	ld b,a
 389+ 99C7 3E F8        	ld a,$f8
 390+ 99C9 80           	add b
 391+ 99CA 32 5B 87     	ld (CTRL_DESPLZ),a
 392+ 99CD 18 1C        	jr 3F
 393+ 99CF 21 54 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 394+ 99D2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 395+ 99D3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 396+ 99D4 32 5B 87     	ld (CTRL_DESPLZ),a
 397+ 99D7 3A 67 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 398+ 99DA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 399+ 99DC 20 0A        	jr nz,2F
 400+ 99DE 2A 55 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 401+ 99E1 23           	inc hl
 402+ 99E2 22 55 87     	ld (Posicion_actual),hl
 403+ 99E5 CD 9F 9B     	call Genera_coordenadas
 404+ 99E8
 405+ 99E8              ; Inicia el puntero de Sprite.
 406+ 99E8
 407+ 99E8 CD 97 8B     2 call Inicia_puntero_objeto_der
 408+ 99EB C9           3 ret
 409+ 99EC
 410+ 99EC              ; ******************************************************************************************************************************************************************************************
 411+ 99EC              ;
 412+ 99EC              ;	15/02/23
 413+ 99EC              ;
 414+ 99EC              ;	Mov_left.
 415+ 99EC              ;
 416+ 99EC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 417+ 99EC              ;
 418+ 99EC              Mov_left
 419+ 99EC
 420+ 99EC 21 75 87     	ld hl,Ctrl_0
 421+ 99EF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 422+ 99F1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 423+ 99F1              ; 																	; _ en el caso de que no lo haya.
 424+ 99F1 3A 75 87     	ld a,(Ctrl_0)
 425+ 99F4 CB 77        	bit 6,a
 426+ 99F6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 427+ 99F8
 428+ 99F8 CD 0E 9B     	call Stop_Amadeus_left
 429+ 99FB C8           	ret z
 430+ 99FC 20 4A        	jr nz,8F
 431+ 99FE
 432+ 99FE 3A 59 87     11 ld a,(Coordenada_X)
 433+ 9A01 A7           	and a
 434+ 9A02 20 44        	jr nz,8F
 435+ 9A04
 436+ 9A04 3A 5B 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 437+ 9A07 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 438+ 9A08 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 439+ 9A0A
 440+ 9A0A              ; ---------- ---------- ----------
 441+ 9A0A
 442+ 9A0A 3A 7C 87     	ld a,(Vel_left)
 443+ 9A0D FE 02        	cp 2
 444+ 9A0F 28 0F        	jr z,1F
 445+ 9A11 38 04        	jr c,6F
 446+ 9A13 FE 04        	cp 4
 447+ 9A15 28 12        	jr z,7F
 448+ 9A17
 449+ 9A17              ; ---------- ---------- ----------
 450+ 9A17
 451+ 9A17 3A 5B 87     6 ld a,(CTRL_DESPLZ)
 452+ 9A1A FE F8        	cp $f8
 453+ 9A1C 20 2A        	jr nz,8F
 454+ 9A1E 18 10        	jr 4F
 455+ 9A20 3A 5B 87     1 ld a,(CTRL_DESPLZ)
 456+ 9A23 FE F9        	cp $f9
 457+ 9A25 20 21        	jr nz,8F
 458+ 9A27 18 07        	jr 4F
 459+ 9A29 3A 5B 87     7 ld a,(CTRL_DESPLZ)
 460+ 9A2C FE FB        	cp $fb
 461+ 9A2E 20 18        	jr nz,8F
 462+ 9A30
 463+ 9A30              ; ---------- ---------- ----------
 464+ 9A30
 465+ 9A30              4
 466+ 9A30 CD 36 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 467+ 9A33              ;	call Reinicio
 468+ 9A33
 469+ 9A33              ; ---------- ---------- ----------
 470+ 9A33
 471+ 9A33 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 472+ 9A35 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 473+ 9A36
 474+ 9A36              ;	ld hl,(Indice_Sprite_izq)
 475+ 9A36              ;	ld (Puntero_DESPLZ_izq),hl
 476+ 9A36
 477+ 9A36 CD 4F 9A     	call DESPLZ_IZQ
 478+ 9A39 C1           	pop bc
 479+ 9A3A 10 F9        	djnz 5B
 480+ 9A3C 2A 55 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 481+ 9A3F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 482+ 9A40 22 55 87     	ld (Posicion_actual),hl
 483+ 9A43 CD 9F 9B     	call Genera_coordenadas
 484+ 9A46 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 485+ 9A48
 486+ 9A48              ; ---------- ---------- ----------
 487+ 9A48
 488+ 9A48              ; Movemos, no hay recolocación.
 489+ 9A48
 490+ 9A48 2A 55 87     8 ld hl,(Posicion_actual)
 491+ 9A4B CD 4F 9A     	call DESPLZ_IZQ
 492+ 9A4E C9           2 ret
 493+ 9A4F
 494+ 9A4F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 495+ 9A4F              ;
 496+ 9A4F              ;	22/9/22
 497+ 9A4F
 498+ 9A4F              DESPLZ_IZQ
 499+ 9A4F
 500+ 9A4F CD 5E 9A     	call Desplaza_izquierda
 501+ 9A52 CD AA 9A         call modifica_parametros_1er_DESPLZ
 502+ 9A55 CD D2 9A     	call Ciclo_completo_2
 503+ 9A58 21 75 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 504+ 9A5B CB BE        	res 7,(hl)
 505+ 9A5D C9           	ret
 506+ 9A5E
 507+ 9A5E              Desplaza_izquierda
 508+ 9A5E
 509+ 9A5E 3A 7C 87     	ld a,(Vel_left)
 510+ 9A61 47           	ld b,a
 511+ 9A62 2A 63 87     	ld hl,(Puntero_DESPLZ_izq)
 512+ 9A65 23           1 inc hl
 513+ 9A66 23           	inc hl
 514+ 9A67 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 515+ 9A69 22 63 87     	ld (Puntero_DESPLZ_izq),hl
 516+ 9A6C CD 80 8B     	call Extrae_address
 517+ 9A6F 22 57 87     	ld (Puntero_objeto),hl
 518+ 9A72
 519+ 9A72              ; Modifica (Puntero_DESPLZ_der).
 520+ 9A72
 521+ 9A72              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 522+ 9A72              ; Cuántos movimientos hemos hecho ??
 523+ 9A72              ; DE contiene (Puntero_DESPLZ_izq).
 524+ 9A72
 525+ 9A72 2A 5F 87     7 ld hl,(Indice_Sprite_izq)
 526+ 9A75 EB           	ex de,hl
 527+ 9A76 A7           	and a
 528+ 9A77 ED 52        	sbc hl,de
 529+ 9A79 CB 3D        	srl l
 530+ 9A7B 3E 08        6 ld a,8
 531+ 9A7D 95           	sub l
 532+ 9A7E 30 1E        	jr nc,3F
 533+ 9A80
 534+ 9A80              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 535+ 9A80              ; B="0".
 536+ 9A80
 537+ 9A80 04           4 inc b
 538+ 9A81 3C           	inc a
 539+ 9A82 20 FC        	jr nz,4B
 540+ 9A84 78           	ld a,b
 541+ 9A85 08           	ex af,af
 542+ 9A86 2A 5F 87     	ld hl,(Indice_Sprite_izq)
 543+ 9A89 23           5 inc hl
 544+ 9A8A 23           	inc hl
 545+ 9A8B 10 FC        	djnz 5B
 546+ 9A8D 22 63 87     	ld (Puntero_DESPLZ_izq),hl
 547+ 9A90 CD 80 8B     	call Extrae_address
 548+ 9A93 22 57 87     	ld (Puntero_objeto),hl
 549+ 9A96
 550+ 9A96              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 551+ 9A96              ; _(Posicion_actual).
 552+ 9A96
 553+ 9A96 21 55 87     	ld hl,Posicion_actual
 554+ 9A99 35           	dec (hl)
 555+ 9A9A 08           	ex af,af
 556+ 9A9B 6F           	ld l,a
 557+ 9A9C 18 DD        	jr 6B
 558+ 9A9E
 559+ 9A9E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 560+ 9A9E
 561+ 9A9E 47           3 ld b,a
 562+ 9A9F 2A 5D 87     	ld hl,(Indice_Sprite_der)
 563+ 9AA2 23           2 inc hl
 564+ 9AA3 23           	inc hl
 565+ 9AA4 10 FC        	djnz 2B
 566+ 9AA6 22 61 87     	ld (Puntero_DESPLZ_der),hl
 567+ 9AA9 C9           8 ret
 568+ 9AAA
 569+ 9AAA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 570+ 9AAA              ;
 571+ 9AAA              ;	modifica_parametros_1er_DESPLZ
 572+ 9AAA              ;
 573+ 9AAA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 574+ 9AAA              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 575+ 9AAA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 576+ 9AAA
 577+ 9AAA 3A 5B 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 578+ 9AAD A7           	and a
 579+ 9AAE 20 1E        	jr nz,1F
 580+ 9AB0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 581+ 9AB1 32 5B 87         ld (CTRL_DESPLZ),a
 582+ 9AB4 21 54 87     	ld hl,Columns
 583+ 9AB7 34           	inc (hl)
 584+ 9AB8 3A 67 87     	ld a,(Cuad_objeto)
 585+ 9ABB E6 01        	and 1
 586+ 9ABD 20 0F        	jr nz,1F
 587+ 9ABF 2A 55 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 588+ 9AC2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 589+ 9AC3 22 55 87     	ld (Posicion_actual),hl
 590+ 9AC6 CD 9F 9B     	call Genera_coordenadas
 591+ 9AC9 CD 25 9B     	call Dec_CTRL_DESPLZ
 592+ 9ACC 18 03        	jr 2F
 593+ 9ACE CD 25 9B     1 call Dec_CTRL_DESPLZ
 594+ 9AD1 C9           2 ret
 595+ 9AD2
 596+ 9AD2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 597+ 9AD2
 598+ 9AD2 3A 5B 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 599+ 9AD5 FE F7        	cp $f7
 600+ 9AD7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 601+ 9AD9 30 2C        	jr nc,3F
 602+ 9ADB
 603+ 9ADB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 604+ 9ADB
 605+ 9ADB 06 00        	ld b,0
 606+ 9ADD 04           4 inc b
 607+ 9ADE 3C           	inc a
 608+ 9ADF FE F7        	cp $f7
 609+ 9AE1 20 FA        	jr nz,4B
 610+ 9AE3 3E FF        	ld a,$ff
 611+ 9AE5 90           	sub b
 612+ 9AE6 32 5B 87     	ld (CTRL_DESPLZ),a
 613+ 9AE9 18 1C        	jr 3F
 614+ 9AEB
 615+ 9AEB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 616+ 9AEB
 617+ 9AEB 21 54 87     1 ld hl,Columns
 618+ 9AEE 35           	dec (hl)
 619+ 9AEF AF           	xor a
 620+ 9AF0 32 5B 87     	ld (CTRL_DESPLZ),a
 621+ 9AF3 3A 67 87     	ld a,(Cuad_objeto)
 622+ 9AF6 E6 01        	and 1
 623+ 9AF8 28 0A        	jr z,2F
 624+ 9AFA 2A 55 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 625+ 9AFD 2B           	dec hl
 626+ 9AFE 22 55 87     	ld (Posicion_actual),hl
 627+ 9B01 CD 9F 9B     	call Genera_coordenadas
 628+ 9B04
 629+ 9B04              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 630+ 9B04
 631+ 9B04 CD AA 8B     2 call Inicia_puntero_objeto_izq
 632+ 9B07 C9           3 ret
 633+ 9B08
 634+ 9B08              ; ---------- ---------- ---------- ---------- ---------- ----------
 635+ 9B08              ;
 636+ 9B08              ;	19/10/22
 637+ 9B08              ;
 638+ 9B08              ;	(cp 29) para un Amadeus de 3 Columns.
 639+ 9B08              ;	(cp 30)   ""  ""    ""     2 Columns.
 640+ 9B08
 641+ 9B08 3A 59 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 642+ 9B0B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 643+ 9B0D C9           	ret
 644+ 9B0E
 645+ 9B0E              ; ---------- ---------- ---------- ---------- ---------- ----------
 646+ 9B0E              ;
 647+ 9B0E              ;	19/10/22
 648+ 9B0E              ;
 649+ 9B0E              ;	(cp 2) para un Amadeus de 3 Columns.
 650+ 9B0E              ;	(cp 1)   ""  ""    ""     2 Columns.
 651+ 9B0E
 652+ 9B0E 3A 59 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 653+ 9B11 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 654+ 9B13 C9           	ret
 655+ 9B14
 656+ 9B14              ; ---------- ---------- ---------- ---------- ---------- ----------
 657+ 9B14              ;
 658+ 9B14              ;	24/7/22
 659+ 9B14              ;
 660+ 9B14              ;	Inc_CTRL_DESPLZ
 661+ 9B14              ;
 662+ 9B14              ;
 663+ 9B14              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 664+ 9B14
 665+ 9B14 21 5B 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 666+ 9B17 3A 7D 87     	ld a,(Vel_right)
 667+ 9B1A A7           	and a
 668+ 9B1B 28 06        	jr z,1F
 669+ 9B1D 47           	ld b,a
 670+ 9B1E 34           3 inc (hl)
 671+ 9B1F 10 FD        	djnz 3B
 672+ 9B21 18 01        	jr 2F
 673+ 9B23 34           1 inc (hl)
 674+ 9B24 C9           2 ret
 675+ 9B25
 676+ 9B25              ; ---------- ---------- ---------- ---------- ---------- ----------
 677+ 9B25              ;
 678+ 9B25              ;	5/2/23
 679+ 9B25              ;
 680+ 9B25              ;	Dec_CTRL_DESPLZ
 681+ 9B25              ;
 682+ 9B25              ;
 683+ 9B25              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 684+ 9B25
 685+ 9B25 21 5B 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 686+ 9B28 3A 7C 87     	ld a,(Vel_left)
 687+ 9B2B A7           	and a
 688+ 9B2C 28 06        	jr z,1F
 689+ 9B2E 47           	ld b,a
 690+ 9B2F 35           3 dec (hl)
 691+ 9B30 10 FD        	djnz 3B
 692+ 9B32 18 01        	jr 2F
 693+ 9B34 35           1 dec (hl)
 694+ 9B35 C9           2 ret
 695+ 9B36
 696+ 9B36              ; ---------- ---------- ---------- ---------- ---------- ----------
 697+ 9B36
 698+ 9B36 2A 55 87     Reaparece_derecha ld hl,(Posicion_actual)
 699+ 9B39 01 1F 00     	ld bc,31
 700+ 9B3C A7           	and a
 701+ 9B3D ED 4A        	adc hl,bc
 702+ 9B3F 22 55 87     	ld (Posicion_actual),hl
 703+ 9B42 21 75 87     	ld hl,Ctrl_0														; $xxx1
 704+ 9B45 CB C6        	set 0,(hl)
 705+ 9B47 C9           	ret
 706+ 9B48
 707+ 9B48              ; ---------- ---------- ---------- ---------- ---------- ----------
 708+ 9B48
 709+ 9B48 2A 55 87     Reaparece_izquierda ld hl,(Posicion_actual)
 710+ 9B4B 01 1F 00     	ld bc,31
 711+ 9B4E A7           	and a
 712+ 9B4F ED 42        	sbc hl,bc
 713+ 9B51 22 55 87     	ld (Posicion_actual),hl 											; $xx1x
 714+ 9B54 21 75 87     	ld hl,Ctrl_0
 715+ 9B57 CB CE        	set 1,(hl)
 716+ 9B59 C9           	ret
 717+ 9B5A
 718+ 9B5A              ; ---------- ---------- ---------- ---------- ---------- ----------
 719+ 9B5A
 720+ 9B5A 24           Reaparece_abajo inc h
 721+ 9B5B 01 E0 17     	ld bc,$17e0
 722+ 9B5E A7           	and a
 723+ 9B5F ED 4A        	adc hl,bc
 724+ 9B61 22 55 87     	ld (Posicion_actual),hl
 725+ 9B64 21 75 87     	ld hl,Ctrl_0
 726+ 9B67 CB D6        	set 2,(hl)
 727+ 9B69 C9           	ret
 728+ 9B6A
 729+ 9B6A              ; ---------- ---------- ---------- ---------- ---------- ----------
 730+ 9B6A
 731+ 9B6A 01 E0 17     Reaparece_arriba ld bc,$17e0
 732+ 9B6D A7           	and a
 733+ 9B6E ED 42        	sbc hl,bc
 734+ 9B70 22 55 87     	ld (Posicion_actual),hl
 735+ 9B73 21 75 87     	ld hl,Ctrl_0
 736+ 9B76 CB DE        	set 3,(hl)
 737+ 9B78 C9           	ret
 738+ 9B79
 739+ 9B79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 740+ 9B79              ;
 741+ 9B79              ;	15/07/23
 742+ 9B79
 743+ 9B79              Reinicio
 744+ 9B79
 745+ 9B79              ; Vamos a reiniciar los punteros y variables de movimiento.
 746+ 9B79
 747+ 9B79 AF           	xor a
 748+ 9B7A 21 8C 87     	ld hl,Puntero_indice_mov_bucle
 749+ 9B7D CD 9B 9B     	call Limpia_contenido_hl
 750+ 9B80
 751+ 9B80 21 55 87     	ld hl,Posicion_actual
 752+ 9B83 CD 9B 9B     	call Limpia_contenido_hl
 753+ 9B86
 754+ 9B86 CD FE 9E     	call Inicializa_Puntero_indice_mov
 755+ 9B89 CD 5B 9E     	call Inicia_Puntero_mov
 756+ 9B8C
 757+ 9B8C 21 8E 87     	ld hl,Incrementa_puntero
 758+ 9B8F 06 05        	ld b,5
 759+ 9B91 77           1 ld (hl),a
 760+ 9B92 23           	inc hl
 761+ 9B93 10 FC        	djnz 1B
 762+ 9B95
 763+ 9B95 21 7A 87     	ld hl,Ctrl_2
 764+ 9B98 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 765+ 9B9A
 766+ 9B9A C9           	ret
 767+ 9B9B
 768+ 9B9B 77           Limpia_contenido_hl	ld (hl),a
 769+ 9B9C 23           	inc hl
 770+ 9B9D 77           	ld (hl),a
 771+ 9B9E C9           	ret
 772+ 9B9F
 773+ 9B9F
# file closed: Direcciones.asm
1917  9B9F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B9F              ; ------------------------------------------------------------------------
   2+ 9B9F              ;
   3+ 9B9F              ;	02/04/23
   4+ 9B9F              ;
   5+ 9B9F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B9F              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B9F              ;
   8+ 9B9F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B9F              ;
  10+ 9B9F              ;	Modifica: A,BC y DE.
  11+ 9B9F
  12+ 9B9F C5           Genera_coordenadas push bc
  13+ 9BA0 E5           	push hl
  14+ 9BA1 D5           	push de
  15+ 9BA2
  16+ 9BA2 2A 55 87     	ld hl,(Posicion_actual)
  17+ 9BA5
  18+ 9BA5 7D           	ld a,l
  19+ 9BA6 E6 1F        	and $1f
  20+ 9BA8 32 59 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9BAB
  22+ 9BAB CD FF 97     	call calcula_tercio
  23+ 9BAE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9BAF
  25+ 9BAF 1E 00        	ld e,0
  26+ 9BB1 7D           	ld a,l
  27+ 9BB2 E6 E0        	and $e0
  28+ 9BB4 28 01        	jr z,1F
  29+ 9BB6 04           	inc b
  30+ 9BB7
  31+ 9BB7 04           1 inc b
  32+ 9BB8 05           	dec b
  33+ 9BB9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9BBB              ;														; _ , salimos.
  35+ 9BBB 1C           3 inc e
  36+ 9BBC D6 20        	sub 32
  37+ 9BBE 20 FB        	jr nz,3B
  38+ 9BC0 10 F5        	djnz 1B
  39+ 9BC2
  40+ 9BC2 7B           2 ld a,e
  41+ 9BC3 32 5A 87     	ld (Coordenada_y),a
  42+ 9BC6
  43+ 9BC6 D1           	pop de
  44+ 9BC7 E1           	pop hl
  45+ 9BC8 C1           	pop bc
  46+ 9BC9
  47+ 9BC9 C9           	ret
  48+ 9BCA
  49+ 9BCA              ; ------------------------------------------------------------------------
  50+ 9BCA              ;	28/05/23
  51+ 9BCA              ;
  52+ 9BCA              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9BCA              ;	Fila superior "0", Columna izquierda "0".
  54+ 9BCA              ;
  55+ 9BCA              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9BCA              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9BCA              ;
  58+ 9BCA              ;		DE="$120d"
  59+ 9BCA              ;
  60+ 9BCA              ;		D, (Coordenada_X), Columnas, $12
  61+ 9BCA              ;		E, (Coordenada_y), Filas, $0d
  62+ 9BCA              ;
  63+ 9BCA              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9BCA
  65+ 9BCA              ;	Modifica: A,BC y DE.
  66+ 9BCA
  67+ 9BCA
  68+ 9BCA              Genera_coordenadas_disparo
  69+ 9BCA
  70+ 9BCA              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9BCA
  72+ 9BCA 7D           	ld a,l
  73+ 9BCB E6 1F        	and $1f
  74+ 9BCD 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9BCE CD FF 97     	call calcula_tercio
  76+ 9BD1 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9BD2 1E 00        	ld e,0
  78+ 9BD4 7D           	ld a,l
  79+ 9BD5 E6 E0        	and $e0
  80+ 9BD7 28 01        	jr z,1F
  81+ 9BD9 04           	inc b
  82+ 9BDA 1C           1 inc e
  83+ 9BDB D6 20        	sub 32
  84+ 9BDD 20 FB        	jr nz,1B
  85+ 9BDF 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9BE1 C9           	ret
  87+ 9BE2
# file closed: Genera_coordenadas.asm
1918  9BE2              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BE2              ; Relojes y temporizaciones.
   2+ 9BE2
   3+ 9BE2              ; ------------------------------------------------------
   4+ 9BE2              ;
   5+ 9BE2              ;	16/7/23
   6+ 9BE2              ;
   7+ 9BE2              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BE2              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BE2              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BE2              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BE2              ;
  12+ 9BE2              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BE2              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BE2
  15+ 9BE2              ; Disparo_entidad db 1
  16+ 9BE2              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BE2              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BE2
  19+ 9BE2              Habilita_disparos
  20+ 9BE2
  21+ 9BE2 7E           	ld a,(hl)
  22+ 9BE3 A7           	and a
  23+ 9BE4 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BE5
  25+ 9BE5 EB           	ex de,hl
  26+ 9BE6
  27+ 9BE6 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BE7 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BE8
  30+ 9BE8              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BE8
  32+ 9BE8 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BE9 7E           	ld a,(hl)
  34+ 9BEA 23           	inc hl
  35+ 9BEB 77           	ld (hl),a
  36+ 9BEC
  37+ 9BEC EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BED 3E 01        	ld a,1
  39+ 9BEF 77           	ld (hl),a
  40+ 9BF0 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1919  9BF1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BF1
   2+ 9BF1
   3+ 9BF1              ;   07/07/23
   4+ 9BF1              ;
   5+ 9BF1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BF1              ;
   7+ 9BF1              ;   Codificación:
   8+ 9BF1              ;
   9+ 9BF1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BF1              ;
  11+ 9BF1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BF1              ;
  13+ 9BF1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BF1              ;
  15+ 9BF1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BF1              ;
  17+ 9BF1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BF1              ;                               ..... %01000010 Vel_up 4
  19+ 9BF1              ;                                               Vel_down 2
  20+ 9BF1              ;                               ..... $42
  21+ 9BF1              ;
  22+ 9BF1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BF1              ;
  24+ 9BF1              ;                               ..... %01000010 Vel_left 4
  25+ 9BF1              ;                                               Vel_right 2
  26+ 9BF1              ;                               ..... $42
  27+ 9BF1              ;
  28+ 9BF1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BF1              ;
  30+ 9BF1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BF1              ;
  32+ 9BF1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BF1              ;
  34+ 9BF1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BF1              ;                                     $53
  36+ 9BF1              ;
  37+ 9BF1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BF1              ;
  39+ 9BF1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BF1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BF1              ;
  42+ 9BF1              ;                       Arriba ..... $81
  43+ 9BF1              ;                       Arriba - izquierda ..... $a1
  44+ 9BF1              ;                       Arriba - derecha ..... $91
  45+ 9BF1              ;
  46+ 9BF1              ;                       Abajo ..... $41
  47+ 9BF1              ;                       Abajo - izquierda ..... $61
  48+ 9BF1              ;                       Abajo - derecha ..... $51
  49+ 9BF1              ;
  50+ 9BF1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BF1              ;
  52+ 9BF1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BF1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BF1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BF1              ;
  56+ 9BF1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BF1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BF1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BF1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BF1              ;
  61+ 9BF1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BF1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BF1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BF1              ;
  65+ 9BF1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BF1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BF1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BF1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BF1
  70+ 9BF1              ; ----- ----- ----- ----- -----
  71+ 9BF1
  72+ 9BF1 1D 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BF3 25 9C            defw F_1
  74+ 9BF5 2F 9C            defw F_2
  75+ 9BF7 39 9C            defw Codo_abajo_derecha
  76+ 9BF9 6D 9C            defw Derecha_y_subiendo
  77+ 9BFB 77 9C            defw Derecha_y_subiendo_1
  78+ 9BFD 81 9C            defw F_3
  79+ 9BFF 8B 9C            defw F_4
  80+ 9C01 95 9C            defw Derecha_y_bajando
  81+ 9C03 9F 9C            defw Derecha_y_bajando_1
  82+ 9C05 A9 9C            defw Derecha_y_bajando_2
  83+ 9C07 B3 9C            defw Codo_derecha_abajo
  84+ 9C09 E3 9C            defw Codo_abajo_izq.
  85+ 9C0B 17 9D            defw Izquierda_y_subiendo
  86+ 9C0D 21 9D            defw Izquierda_y_subiendo_1
  87+ 9C0F 2B 9D            defw F_5
  88+ 9C11 35 9D            defw F_6
  89+ 9C13 3F 9D            defw Izquierda_y_bajando
  90+ 9C15 49 9D            defw Izquierda_y_bajando_1
  91+ 9C17 53 9D            defw Izquierda_y_bajando_2
  92+ 9C19 5D 9D            defw Codo_izquierda_abajo
  93+ 9C1B 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C1D
  95+ 9C1D 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C21 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C25
  98+ 9C25 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C29 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C2D 08 00
 100+ 9C2F 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C33 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C37 0F FE
 102+ 9C39
 103+ 9C39 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C3D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C41 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C45 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C49 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C4D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C51 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C55 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C59 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C5D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C61 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C65 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C69 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C6D
 117+ 9C6D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C71 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C75 06 00
 119+ 9C77
 120+ 9C77 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C7B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C7F 02 00
 122+ 9C81
 123+ 9C81 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C85 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C89 04 00
 125+ 9C8B 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C8F 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C93 08 00
 127+ 9C95
 128+ 9C95 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C99 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C9D 02 00
 130+ 9C9F
 131+ 9C9F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CA3 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CA7 06 00
 133+ 9CA9
 134+ 9CA9 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CAD 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CB1 06 00
 136+ 9CB3
 137+ 9CB3              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CB3
 139+ 9CB3 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CB7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9CBB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9CBF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CC3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CC7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CCB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CCF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CD3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CD7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CDB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9CDF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9CE3
 152+ 9CE3 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9CE7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9CEB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9CEF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9CF3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9CF7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9CFB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CFF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D03 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D07 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D0B 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D0F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D13 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D17
 166+ 9D17 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D1B 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D1F 06 00
 168+ 9D21
 169+ 9D21 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D25 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D29 02 00
 171+ 9D2B
 172+ 9D2B 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D2F 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D33 04 00
 174+ 9D35 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D39 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D3D 08 00
 176+ 9D3F
 177+ 9D3F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D43 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D47 02 00
 179+ 9D49
 180+ 9D49 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D4D 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D51 06 00
 182+ 9D53
 183+ 9D53 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D5B 06 00
 185+ 9D5D
 186+ 9D5D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D61 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D65 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D69 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D6D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D71 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D75 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D79 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D7D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D81 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D85 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D89 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D8D
 199+ 9D8D              ; ----- ----- ----- ----- -----
 200+ 9D8D              ;
 201+ 9D8D              ;   28/12/23
 202+ 9D8D
 203+ 9D8D              Movimiento
 204+ 9D8D
 205+ 9D8D              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D8D
 207+ 9D8D 3A 7A 87         ld a,(Ctrl_2)
 208+ 9D90 CB 57            bit 2,a
 209+ 9D92 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D94
 211+ 9D94 2A 8A 87         ld hl,(Puntero_mov)
 212+ 9D97 7E               ld a,(hl)
 213+ 9D98
 214+ 9D98              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D98
 216+ 9D98              Inicia_desplazamiento.
 217+ 9D98
 218+ 9D98              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D98
 220+ 9D98 CD 98 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D9B
 222+ 9D9B              ; Iniciamos (Repetimos_mov).
 223+ 9D9B
 224+ 9D9B 7E               ld a,(hl)
 225+ 9D9C E6 0F            and $0f
 226+ 9D9E 32 90 87         ld (Repetimos_desplazamiento),a
 227+ 9DA1 32 91 87         ld (Repetimos_desplazamiento_backup),a
 228+ 9DA4
 229+ 9DA4              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9DA4
 231+ 9DA4 23               inc hl
 232+ 9DA5 7E               ld a,(hl)
 233+ 9DA6 32 93 87         ld (Cola_de_desplazamiento),a
 234+ 9DA9 2B               dec hl
 235+ 9DAA
 236+ 9DAA 21 7A 87         ld hl,Ctrl_2
 237+ 9DAD CB D6            set 2,(hl)
 238+ 9DAF
 239+ 9DAF              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9DAF              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9DAF
 242+ 9DAF              Desplazamiento_iniciado
 243+ 9DAF
 244+ 9DAF CD 66 9E         call Aplica_desplazamiento
 245+ 9DB2
 246+ 9DB2              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9DB2
 248+ 9DB2 3A B3 87         ld a,(Ctrl_3)
 249+ 9DB5 CB 57            bit 2,a
 250+ 9DB7 C0               ret nz
 251+ 9DB8
 252+ 9DB8 3A 7A 87         ld a,(Ctrl_2)
 253+ 9DBB CB 67            bit 4,a
 254+ 9DBD C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9DBE
 256+ 9DBE 21 90 87     3 ld hl,Repetimos_desplazamiento
 257+ 9DC1 35               dec (hl)
 258+ 9DC2 C0               ret nz
 259+ 9DC3
 260+ 9DC3              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DC3              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DC3              ; Analiza (Cola_de_desplazamiento).
 263+ 9DC3
 264+ 9DC3 3A 93 87     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DC6 A7               and a
 266+ 9DC7 CC C1 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DCA 28 30            jr z,Reinicia_el_movimiento
 268+ 9DCC
 269+ 9DCC FE FF            cp $ff
 270+ 9DCE 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DD0
 272+ 9DD0 FE FE            cp $fe
 273+ 9DD2 CC 3F 9E         call z,Fijamos_bucle
 274+ 9DD5 28 25            jr z,Reinicia_el_movimiento
 275+ 9DD7
 276+ 9DD7 FE FD            cp $fd
 277+ 9DD9 20 11            jr nz,1F
 278+ 9DDB
 279+ 9DDB              ; ---
 280+ 9DDB              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DDB
 282+ 9DDB 3A 7A 87         ld a,(Ctrl_2)
 283+ 9DDE CB 5F            bit 3,a
 284+ 9DE0 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9DE2
 286+ 9DE2              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9DE2
 288+ 9DE2 21 7A 87         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9DE5 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9DE7
 291+ 9DE7 CD 50 9E         call Inicia_Repetimos_movimiento
 292+ 9DEA 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9DEC              ; ---
 294+ 9DEC
 295+ 9DEC FE 01        1 cp 1
 296+ 9DEE CA 29 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9DF1
 298+ 9DF1 3D               dec a
 299+ 9DF2 32 93 87         ld (Cola_de_desplazamiento),a
 300+ 9DF5
 301+ 9DF5 3A 91 87         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9DF8 32 90 87         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9DFB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9DFB C9               ret
 305+ 9DFC
 306+ 9DFC              Reinicia_el_movimiento
 307+ 9DFC
 308+ 9DFC 3A 7A 87         ld a,(Ctrl_2)
 309+ 9DFF CB 5F            bit 3,a
 310+ 9E01 28 1B            jr z,2F
 311+ 9E03
 312+ 9E03              ; (Cola_de_desplazamiento)="254".
 313+ 9E03
 314+ 9E03 21 92 87         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9E06 35               dec (hl)
 316+ 9E07 20 15            jr nz,2F
 317+ 9E09
 318+ 9E09              ; Fin de las repeticiones del último movimiento.
 319+ 9E09
 320+ 9E09 21 7A 87         ld hl,Ctrl_2
 321+ 9E0C CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9E0E
 323+ 9E0E 2A 8A 87         ld hl,(Puntero_mov)
 324+ 9E11 23               inc hl
 325+ 9E12 23               inc hl
 326+ 9E13 23               inc hl
 327+ 9E14 22 8A 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9E17              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9E17 7E               ld a,(hl)
 330+ 9E18 32 93 87         ld (Cola_de_desplazamiento),a
 331+ 9E1B
 332+ 9E1B C3 C3 9D         jp Cola
 333+ 9E1E
 334+ 9E1E CD 5B 9E     2 call Inicia_Puntero_mov
 335+ 9E21
 336+ 9E21 21 7A 87         ld hl,Ctrl_2
 337+ 9E24 CB 96            res 2,(hl)
 338+ 9E26
 339+ 9E26 C3 8D 9D         jp Movimiento
 340+ 9E29
 341+ 9E29              Siguiente_desplazamiento
 342+ 9E29
 343+ 9E29              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E29              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E29
 346+ 9E29 21 7A 87         ld hl,Ctrl_2
 347+ 9E2C CB 96            res 2,(hl)
 348+ 9E2E
 349+ 9E2E 2A 8A 87         ld hl,(Puntero_mov)
 350+ 9E31 23               inc hl
 351+ 9E32 23               inc hl
 352+ 9E33 22 8A 87         ld (Puntero_mov),hl
 353+ 9E36
 354+ 9E36 7E               ld a,(hl)
 355+ 9E37 A7               and a
 356+ 9E38 CC C1 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E3B CA FC 9D         jp z,Reinicia_el_movimiento
 358+ 9E3E
 359+ 9E3E C9               ret
 360+ 9E3F
 361+ 9E3F              ; Subrutinas -----------------------------------------
 362+ 9E3F              ; ---------- --------- --------- ---------- ----------
 363+ 9E3F              ;
 364+ 9E3F              ;   24/07/23
 365+ 9E3F              ;
 366+ 9E3F              ;   Fijamos_bucle
 367+ 9E3F              ;
 368+ 9E3F              ;
 369+ 9E3F
 370+ 9E3F              Fijamos_bucle
 371+ 9E3F
 372+ 9E3F 3A 8E 87         ld a,(Incrementa_puntero)
 373+ 9E42 3C               inc a
 374+ 9E43 32 8F 87         ld (Incrementa_puntero_backup),a
 375+ 9E46
 376+ 9E46 CD C1 9E         call Incrementa_Puntero_indice_mov
 377+ 9E49 2A 88 87         ld hl,(Puntero_indice_mov)
 378+ 9E4C 22 8C 87         ld (Puntero_indice_mov_bucle),hl
 379+ 9E4F C9               ret
 380+ 9E50
 381+ 9E50              ; ---------- --------- --------- ---------- ----------
 382+ 9E50              ;
 383+ 9E50              ;   07/7/23
 384+ 9E50              ;
 385+ 9E50              ;   Inicia_Repetimos_movimiento
 386+ 9E50              ;
 387+ 9E50              ;
 388+ 9E50
 389+ 9E50              Inicia_Repetimos_movimiento
 390+ 9E50
 391+ 9E50              ; Iniciamos (Repetimos_movimiento).
 392+ 9E50
 393+ 9E50 DD 2A 8A 87      ld ix,(Puntero_mov)
 394+ 9E54 DD 7E 02         ld a,(ix+2)
 395+ 9E57 32 92 87         ld (Repetimos_movimiento),a
 396+ 9E5A
 397+ 9E5A C9               ret
 398+ 9E5B
 399+ 9E5B              ; ---------- --------- --------- ---------- ----------
 400+ 9E5B              ;
 401+ 9E5B              ;   26/6/23
 402+ 9E5B              ;
 403+ 9E5B              ;   Inicia_Puntero_mov
 404+ 9E5B              ;
 405+ 9E5B              ;
 406+ 9E5B
 407+ 9E5B 2A 88 87     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E5E 5E               ld e,(hl)
 409+ 9E5F 23               inc hl
 410+ 9E60 56               ld d,(hl)
 411+ 9E61 EB               ex de,hl
 412+ 9E62 22 8A 87         ld (Puntero_mov),hl
 413+ 9E65 C9               ret
 414+ 9E66
 415+ 9E66              ; ---------- --------- --------- ---------- ----------
 416+ 9E66              ;
 417+ 9E66              ;   27/06/23
 418+ 9E66              ;
 419+ 9E66              ;   Aplica_movimiento.
 420+ 9E66
 421+ 9E66              Aplica_desplazamiento
 422+ 9E66
 423+ 9E66              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E66
 425+ 9E66 2A 8A 87         ld hl, (Puntero_mov)
 426+ 9E69
 427+ 9E69 7E               ld a,(hl)
 428+ 9E6A E6 F0            and $f0
 429+ 9E6C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E6D
 431+ 9E6D CB 7E            bit 7,(hl)
 432+ 9E6F 28 03            jr z,1F
 433+ 9E71 CD 86 98         call Mov_up
 434+ 9E74 2A 8A 87     1 ld hl, (Puntero_mov)
 435+ 9E77 CB 76            bit 6,(hl)
 436+ 9E79 28 09            jr z,2F
 437+ 9E7B CD 4D 98         call Mov_down
 438+ 9E7E
 439+ 9E7E              ; Se ha aplicado reinicio ???
 440+ 9E7E              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E7E
 442+ 9E7E 3A B3 87         ld a,(Ctrl_3)
 443+ 9E81 CB 57            bit 2,a
 444+ 9E83 C0               ret nz
 445+ 9E84
 446+ 9E84 2A 8A 87     2 ld hl, (Puntero_mov)
 447+ 9E87 CB 6E            bit 5,(hl)
 448+ 9E89 28 03            jr z,3F
 449+ 9E8B CD EC 99         call Mov_left
 450+ 9E8E 2A 8A 87     3 ld hl, (Puntero_mov)
 451+ 9E91 CB 66            bit 4,(hl)
 452+ 9E93 C8               ret z
 453+ 9E94 CD C9 98         call Mov_right
 454+ 9E97 C9               ret
 455+ 9E98
 456+ 9E98              ; ---------- --------- --------- ---------- ----------
 457+ 9E98              ;
 458+ 9E98              ;   26/06/23
 459+ 9E98              ;
 460+ 9E98              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E98
 462+ 9E98              Ajusta_velocidad_desplazamiento
 463+ 9E98
 464+ 9E98              ; 1er byte de la cadena de movimiento.
 465+ 9E98              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E98
 467+ 9E98 CD B6 9E         call Extrae_nibble_alto
 468+ 9E9B
 469+ 9E9B 32 7E 87         ld (Vel_up),a
 470+ 9E9E 79               ld a,c
 471+ 9E9F E6 0F            and $0f
 472+ 9EA1 32 7F 87         ld (Vel_down),a
 473+ 9EA4
 474+ 9EA4              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9EA4              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9EA4
 477+ 9EA4 23               inc hl
 478+ 9EA5 CD B6 9E         call Extrae_nibble_alto
 479+ 9EA8
 480+ 9EA8 32 7C 87         ld (Vel_left),a
 481+ 9EAB 79               ld a,c
 482+ 9EAC E6 0F            and $0f
 483+ 9EAE 32 7D 87         ld (Vel_right),a
 484+ 9EB1
 485+ 9EB1              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9EB1
 487+ 9EB1 23               inc hl
 488+ 9EB2 22 8A 87         ld (Puntero_mov),hl
 489+ 9EB5 C9               ret
 490+ 9EB6
 491+ 9EB6 06 04        Extrae_nibble_alto ld b,4
 492+ 9EB8 7E               ld a,(hl)
 493+ 9EB9 4F               ld c,a
 494+ 9EBA E6 F0            and $f0
 495+ 9EBC CB 3F        1 srl a
 496+ 9EBE 10 FC            djnz 1B
 497+ 9EC0 C9               ret
 498+ 9EC1
 499+ 9EC1              ; ---------- --------- --------- ---------- ----------
 500+ 9EC1              ;
 501+ 9EC1              ;   5/7/23
 502+ 9EC1              ;
 503+ 9EC1              ;   Incrementa_Puntero_indice_mov
 504+ 9EC1
 505+ 9EC1              Incrementa_Puntero_indice_mov
 506+ 9EC1
 507+ 9EC1 21 8E 87         ld hl,Incrementa_puntero
 508+ 9EC4 34               inc (hl)
 509+ 9EC5
 510+ 9EC5 2A 88 87         ld hl,(Puntero_indice_mov)
 511+ 9EC8 01 02 00         ld bc,2
 512+ 9ECB A7               and a
 513+ 9ECC 09               add hl,bc
 514+ 9ECD 22 88 87         ld (Puntero_indice_mov),hl
 515+ 9ED0
 516+ 9ED0 7E               ld a,(hl)
 517+ 9ED1 A7               and a
 518+ 9ED2
 519+ 9ED2              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9ED2
 521+ 9ED2              ;    jr z,$
 522+ 9ED2
 523+ 9ED2              ;! Reinicia el Patrón de movimiento.
 524+ 9ED2
 525+ 9ED2 CC D7 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9ED5
 527+ 9ED5 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9ED6
 529+ 9ED6 C9               ret
 530+ 9ED7
 531+ 9ED7
 532+ 9ED7              ; ---------- --------- --------- ---------- ----------
 533+ 9ED7              ;
 534+ 9ED7              ;   15/01/24
 535+ 9ED7              ;
 536+ 9ED7              ;   Inicializa_Puntero_indice_mov
 537+ 9ED7
 538+ 9ED7              Inicializa_Puntero_indice_mov_2
 539+ 9ED7
 540+ 9ED7              ; Existe etiqueta de bucle principal???
 541+ 9ED7
 542+ 9ED7 2A 8C 87         ld hl,(Puntero_indice_mov_bucle)
 543+ 9EDA 24               inc h
 544+ 9EDB 25               dec h
 545+ 9EDC 28 05            jr z,2F
 546+ 9EDE
 547+ 9EDE 22 88 87         ld (Puntero_indice_mov),hl
 548+ 9EE1 18 14            jr 3F
 549+ 9EE3
 550+ 9EE3              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ 9EE3
 552+ 9EE3 3A 8E 87     2 ld a,(Incrementa_puntero)
 553+ 9EE6 47               ld b,a
 554+ 9EE7
 555+ 9EE7 2A 88 87         ld hl,(Puntero_indice_mov)
 556+ 9EEA 2B           1 dec hl
 557+ 9EEB 2B               dec hl
 558+ 9EEC 10 FC            djnz 1B
 559+ 9EEE 22 88 87         ld (Puntero_indice_mov),hl
 560+ 9EF1
 561+ 9EF1 AF               xor a
 562+ 9EF2 32 8E 87         ld (Incrementa_puntero),a
 563+ 9EF5 18 06            jr 4F
 564+ 9EF7
 565+ 9EF7 3A 8F 87     3 ld a,(Incrementa_puntero_backup)
 566+ 9EFA 32 8E 87         ld (Incrementa_puntero),a
 567+ 9EFD C9           4 ret
 568+ 9EFE
 569+ 9EFE 3A 52 87     Inicializa_Puntero_indice_mov ld a,(Tipo)
 570+ 9F01 CD E0 86         call Calcula_salto_en_BC
 571+ 9F04 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
 572+ 9F07 A7               and a
 573+ 9F08 ED 4A            adc hl,bc
 574+ 9F0A CD 80 8B         call Extrae_address
 575+ 9F0D 22 88 87         ld (Puntero_indice_mov),hl
 576+ 9F10 C9               ret
 577+ 9F11
 578+ 9F11 3A 52 87     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 579+ 9F14 CD E0 86         call Calcula_salto_en_BC
 580+ 9F17 21 80 87         ld hl,Contador_general_de_mov_masticados_Entidad_1
 581+ 9F1A A7               and a
 582+ 9F1B ED 4A            adc hl,bc
 583+ 9F1D C9               ret
# file closed: Patrones_de_mov.asm
1920  9F1E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F1E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F1E              ;
   3+ 9F1E              ;	12/12/23
   4+ 9F1E              ;
   5+ 9F1E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F1E
   7+ 9F1E              ;	ADC HL,SP	LD (addr),SP
   8+ 9F1E              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F1E              ;	ADD IX,SP	LD SP,nn
  10+ 9F1E              ; 	ADD IY,SP	LD SP,HL
  11+ 9F1E              ;				LD SP,IX
  12+ 9F1E              ;	DEC SP		LD SP,IY
  13+ 9F1E
  14+ 9F1E              ;	EX (SP),HL
  15+ 9F1E              ;	EX (SP),IX
  16+ 9F1E              ;	EX (SP),IY
  17+ 9F1E
  18+ 9F1E              ;	INC SP
  19+ 9F1E
  20+ 9F1E                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 A5 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 6F 87         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 71 87         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 94 87         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A AD 87         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 75 87     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A B1 87         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A AB 87     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 94 87         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 AD 87         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 75 87     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 B1 87         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B A5 87      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 AB 87     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B A5 87  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A AB 87         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 AB 87         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1921  718B
1922  718B              	SAVESNA "Pruebas.sna", START
1923  718B
1924  718B
1925  718B
1926  718B
# file closed: Banco_de_pruebas.asm
