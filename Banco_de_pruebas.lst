# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD AE 8A     	call Frame
  15  A104
  16  A104 3A E1 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  23  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8574
  97+ 8574 CA 85        	defw Caja_1
  98+ 8576 08 86        	defw Caja_2
  99+ 8578 46 86        	defw Caja_3
 100+ 857A 84 86        	defw Caja_4
 101+ 857C C2 86        	defw Caja_5
 102+ 857E 00 87        	defw Caja_6
 103+ 8580 3E 87        	defw Caja_7
 104+ 8582 7C 87        	defw Caja_8
 105+ 8584 BA 87        	defw Caja_9
 106+ 8586 F8 87        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85BD
 145+ 85BD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85C1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85C4
 148+ 85C4 00           	db 0 											; (Columnas).
 149+ 85C5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85C7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85CA
 152+ 85CA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85CA
 154+ 85CA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85CC 00 00        	defw 0											; (Posicion_actual).
 156+ 85CE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85D0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85D3
 159+ 85D3 00           	db %00000000 									; (Attr).
 160+ 85D4
 161+ 85D4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85D6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85D8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85DA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85DC
 166+ 85DC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85DE 00           	db 0											; (Cuad_objeto).
 168+ 85DF
 169+ 85DF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85E3
 171+ 85E3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85E4
 173+ 85E4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85E6 00 00        	defw 0											;	" " " " " " "
 175+ 85E8 00 00        	defw 0											;	" " " " " " "
 176+ 85EA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85EE
 178+ 85EE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85F0 00 00        	defw 0											;	" " " " " " "
 180+ 85F2 00 00        	defw 0											;	" " " " " " "
 181+ 85F4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85F8
 183+ 85F8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85FB
 185+ 85FB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85FF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 8602
 188+ 8602 00           	db 0 											; (Columnas).
 189+ 8603 00 00        	defw 0											; (Limite_horizontal).
 190+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 191+ 8608
 192+ 8608              ; ---------- ---------- ---------- ---------- ----------
 193+ 8608
 194+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 860A 00 00        	defw 0											; (Posicion_actual).
 196+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 197+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8611
 199+ 8611 00           	db %00000000 									; (Attr).
 200+ 8612
 201+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 861A
 206+ 861A 00 00        	defw 0											; (Posicion_inicio).
 207+ 861C 00           	db 0											; (Cuad_objeto).
 208+ 861D
 209+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8621
 211+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8622
 213+ 8622 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8624 00 00        	defw 0											;	" " " " " " "
 215+ 8626 00 00        	defw 0											;	" " " " " " "
 216+ 8628 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 862C
 218+ 862C 00 00        	db 0,0											; Variables_de_pintado
 219+ 862E 00 00        	defw 0											;	" " " " " " "
 220+ 8630 00 00        	defw 0											;	" " " " " " "
 221+ 8632 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8636
 223+ 8636 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 8639
 225+ 8639 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 863D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8640
 228+ 8640 00           	db 0 											; (Columnas).
 229+ 8641 00 00        	defw 0											; (Limite_horizontal).
 230+ 8643 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 8646
 232+ 8646              ; ---------- ---------- ---------- ---------- ----------
 233+ 8646
 234+ 8646 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8648 00 00        	defw 0											; (Posicion_actual).
 236+ 864A 00 00        	defw 0 											; (Puntero_objeto).
 237+ 864C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 864F
 239+ 864F 00           	db %00000000 									; (Attr).
 240+ 8650
 241+ 8650 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8652 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8654 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8656 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8658
 246+ 8658 00 00        	defw 0											; (Posicion_inicio).
 247+ 865A 00           	db 0											; (Cuad_objeto).
 248+ 865B
 249+ 865B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 865F
 251+ 865F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8660
 253+ 8660 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8662 00 00        	defw 0											;	" " " " " " "
 255+ 8664 00 00        	defw 0											;	" " " " " " "
 256+ 8666 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 866A
 258+ 866A 00 00        	db 0,0											; Variables_de_pintado
 259+ 866C 00 00        	defw 0											;	" " " " " " "
 260+ 866E 00 00        	defw 0											;	" " " " " " "
 261+ 8670 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8674
 263+ 8674 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8677
 265+ 8677 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 867B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 867E
 268+ 867E 00           	db 0 											; (Columnas).
 269+ 867F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8681 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 271+ 8684
 272+ 8684              ; ---------- ---------- ---------- ---------- ----------
 273+ 8684
 274+ 8684 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8686 00 00        	defw 0											; (Posicion_actual).
 276+ 8688 00 00        	defw 0 											; (Puntero_objeto).
 277+ 868A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 868D
 279+ 868D 00           	db %00000000 									; (Attr).
 280+ 868E
 281+ 868E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8690 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8694 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8696
 286+ 8696 00 00        	defw 0											; (Posicion_inicio).
 287+ 8698 00           	db 0											; (Cuad_objeto).
 288+ 8699
 289+ 8699 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 869D
 291+ 869D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 869E
 293+ 869E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 86A0 00 00        	defw 0											;	" " " " " " "
 295+ 86A2 00 00        	defw 0											;	" " " " " " "
 296+ 86A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 86A8
 298+ 86A8 00 00        	db 0,0											; Variables_de_pintado
 299+ 86AA 00 00        	defw 0											;	" " " " " " "
 300+ 86AC 00 00        	defw 0											;	" " " " " " "
 301+ 86AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 86B2
 303+ 86B2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 86B5
 305+ 86B5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 86B9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 86BC
 308+ 86BC 00           	db 0 											; (Columnas).
 309+ 86BD 00 00        	defw 0											; (Limite_horizontal).
 310+ 86BF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86C2
 312+ 86C2              ; ---------- ---------- ---------- ---------- ----------
 313+ 86C2
 314+ 86C2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86C4 00 00        	defw 0											; (Posicion_actual).
 316+ 86C6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86C8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86CB
 319+ 86CB 00           	db %00000000 									; (Attr).
 320+ 86CC
 321+ 86CC 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86CE 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86D0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86D2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86D4
 326+ 86D4 00 00        	defw 0											; (Posicion_inicio).
 327+ 86D6 00           	db 0											; (Cuad_objeto).
 328+ 86D7
 329+ 86D7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86DB
 331+ 86DB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86DC
 333+ 86DC 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 86DE 00 00        	defw 0											;	" " " " " " "
 335+ 86E0 00 00        	defw 0											;	" " " " " " "
 336+ 86E2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 86E6
 338+ 86E6 00 00        	db 0,0											; Variables_de_pintado
 339+ 86E8 00 00        	defw 0											;	" " " " " " "
 340+ 86EA 00 00        	defw 0											;	" " " " " " "
 341+ 86EC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 86F0
 343+ 86F0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 86F3
 345+ 86F3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86F7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86FA
 348+ 86FA 00           	db 0 											; (Columnas).
 349+ 86FB 00 00        	defw 0											; (Limite_horizontal).
 350+ 86FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 351+ 8700
 352+ 8700              ; ---------- ---------- ---------- ---------- ----------
 353+ 8700
 354+ 8700 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 8702 00 00        	defw 0											; (Posicion_actual).
 356+ 8704 00 00        	defw 0 											; (Puntero_objeto).
 357+ 8706 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 8709
 359+ 8709 00           	db %00000000 									; (Attr).
 360+ 870A
 361+ 870A 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 870C 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 870E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 8710 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8712
 366+ 8712 00 00        	defw 0											; (Posicion_inicio).
 367+ 8714 00           	db 0											; (Cuad_objeto).
 368+ 8715
 369+ 8715 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8719
 371+ 8719 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 871A
 373+ 871A 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 871C 00 00        	defw 0											;	" " " " " " "
 375+ 871E 00 00        	defw 0											;	" " " " " " "
 376+ 8720 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8724
 378+ 8724 00 00        	db 0,0											; Variables_de_pintado
 379+ 8726 00 00        	defw 0											;	" " " " " " "
 380+ 8728 00 00        	defw 0											;	" " " " " " "
 381+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 872E
 383+ 872E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 8731
 385+ 8731 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8735 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8738
 388+ 8738 00           	db 0 											; (Columnas).
 389+ 8739 00 00        	defw 0											; (Limite_horizontal).
 390+ 873B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 391+ 873E
 392+ 873E              ; ---------- ---------- ---------- ---------- ----------
 393+ 873E
 394+ 873E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 8740 00 00        	defw 0											; (Posicion_actual).
 396+ 8742 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8744 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8747
 399+ 8747 00           	db %00000000 									; (Attr).
 400+ 8748
 401+ 8748 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 874A 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 874C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 874E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 8750
 406+ 8750 00 00        	defw 0											; (Posicion_inicio).
 407+ 8752 00           	db 0											; (Cuad_objeto).
 408+ 8753
 409+ 8753 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8757
 411+ 8757 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8758
 413+ 8758 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 875A 00 00        	defw 0											;	" " " " " " "
 415+ 875C 00 00        	defw 0											;	" " " " " " "
 416+ 875E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8762
 418+ 8762 00 00        	db 0,0											; Variables_de_pintado
 419+ 8764 00 00        	defw 0											;	" " " " " " "
 420+ 8766 00 00        	defw 0											;	" " " " " " "
 421+ 8768 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 876C
 423+ 876C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 876F
 425+ 876F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8773 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8776
 428+ 8776 00           	db 0 											; (Columnas).
 429+ 8777 00 00        	defw 0											; (Limite_horizontal).
 430+ 8779 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 431+ 877C
 432+ 877C              ; ---------- ---------- ---------- ---------- ----------
 433+ 877C
 434+ 877C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 877E 00 00        	defw 0											; (Posicion_actual).
 436+ 8780 00 00        	defw 0 											; (Puntero_objeto).
 437+ 8782 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8785
 439+ 8785 00           	db %00000000 									; (Attr).
 440+ 8786
 441+ 8786 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8788 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 878A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 878C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 878E
 446+ 878E 00 00        	defw 0											; (Posicion_inicio).
 447+ 8790 00           	db 0											; (Cuad_objeto).
 448+ 8791
 449+ 8791 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8795
 451+ 8795 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8796
 453+ 8796 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8798 00 00        	defw 0											;	" " " " " " "
 455+ 879A 00 00        	defw 0											;	" " " " " " "
 456+ 879C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 87A0
 458+ 87A0 00 00        	db 0,0											; Variables_de_pintado
 459+ 87A2 00 00        	defw 0											;	" " " " " " "
 460+ 87A4 00 00        	defw 0											;	" " " " " " "
 461+ 87A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 87AA
 463+ 87AA 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 87AD
 465+ 87AD 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 87B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 87B4
 468+ 87B4 00           	db 0 											; (Columnas).
 469+ 87B5 00 00        	defw 0											; (Limite_horizontal).
 470+ 87B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 471+ 87BA
 472+ 87BA              ; ---------- ---------- ---------- ---------- ----------
 473+ 87BA
 474+ 87BA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 87BC 00 00        	defw 0											; (Posicion_actual).
 476+ 87BE 00 00        	defw 0 											; (Puntero_objeto).
 477+ 87C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 87C3
 479+ 87C3 00           	db %00000000 									; (Attr).
 480+ 87C4
 481+ 87C4 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 87C6 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 87C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 87CC
 486+ 87CC 00 00        	defw 0											; (Posicion_inicio).
 487+ 87CE 00           	db 0											; (Cuad_objeto).
 488+ 87CF
 489+ 87CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 87D3
 491+ 87D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 87D4
 493+ 87D4 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 87D6 00 00        	defw 0											;	" " " " " " "
 495+ 87D8 00 00        	defw 0											;	" " " " " " "
 496+ 87DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 87DE
 498+ 87DE 00 00        	db 0,0											; Variables_de_pintado
 499+ 87E0 00 00        	defw 0											;	" " " " " " "
 500+ 87E2 00 00        	defw 0											;	" " " " " " "
 501+ 87E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 87E8
 503+ 87E8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 87EB
 505+ 87EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 87EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 87F2
 508+ 87F2 00           	db 0 											; (Columnas).
 509+ 87F3 00 00        	defw 0											; (Limite_horizontal).
 510+ 87F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 511+ 87F8
 512+ 87F8              ; ---------- ---------- ---------- ---------- ----------
 513+ 87F8
 514+ 87F8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87FA 00 00        	defw 0											; (Posicion_actual).
 516+ 87FC 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 8801
 519+ 8801 00           	db %00000000 									; (Attr).
 520+ 8802
 521+ 8802 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 8804 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 8806 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 8808 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 880A
 526+ 880A 00 00        	defw 0											; (Posicion_inicio).
 527+ 880C 00           	db 0											; (Cuad_objeto).
 528+ 880D
 529+ 880D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 8811
 531+ 8811 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 8812
 533+ 8812 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 8814 00 00        	defw 0											;	" " " " " " "
 535+ 8816 00 00        	defw 0											;	" " " " " " "
 536+ 8818 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 881C
 538+ 881C 00 00        	db 0,0											; Variables_de_pintado
 539+ 881E 00 00        	defw 0											;	" " " " " " "
 540+ 8820 00 00        	defw 0											;	" " " " " " "
 541+ 8822 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8826
 543+ 8826 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8829
 545+ 8829 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 882D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 8830
 548+ 8830 00           	db 0 											; (Columnas).
 549+ 8831 00 00        	defw 0											; (Limite_horizontal).
 550+ 8833 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8836
 552+ 8836              ; -------------------------------------------------------------------------------------
 553+ 8836              ;
 554+ 8836              ;	20/05/23
 555+ 8836              ;
 556+ 8836              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 8836              ;
 558+ 8836              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 8836              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 8836              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 8836              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 8836
 563+ 8836              Indice_de_entidades
 564+ 8836
 565+ 8836 40 88        	defw Entidad_1
 566+ 8838 50 88        	defw Entidad_2
 567+ 883A 60 88        	defw Entidad_3
 568+ 883C 70 88        	defw Entidad_4
 569+ 883E 80 88        	defw Entidad_5
 570+ 8840
 571+ 8840              ;	BADSAT, (Satélite malvado).
 572+ 8840
 573+ 8840 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 8842 04           	db %00000100									; (Attr).
 575+ 8843 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 8845 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8847 3F 50        	defw $503f	                             	    ; (Posicion_inicio).
 578+ 8849 01           	db 1											; (Cuad_objeto).
 579+ 884A 02 02 01 02  	db 2,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 884E E4 9C        	defw Indice_mov_Escaloncitos_izquierda_arriba   ; (Puntero_indice_mov)
 581+ 8850
 582+ 8850 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 8852 02           	db %00000010									; (Attr).
 584+ 8853 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 8855 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8857 40 50        	defw $5040                                      ; (Posicion_inicio).
 587+ 8859 01           	db 1											; (Cuad_objeto).
 588+ 885A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 885E E8 9C        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 590+ 8860
 591+ 8860 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 8862 04           	db %00000100									; (Attr).
 593+ 8863 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 8865 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8867 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8869 01           	db 1											; (Cuad_objeto).
 597+ 886A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 886E E8 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 599+ 8870
 600+ 8870 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 8872 01           	db %00000001									; (Attr).
 602+ 8873 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 8875 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8877 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8879 01           	db 1											; (Cuad_objeto).
 606+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 887E E6 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8880
 609+ 8880 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 8882 01           	db %00000001									; (Attr).
 611+ 8883 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 8885 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8887 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8889 01           	db 1											; (Cuad_objeto).
 615+ 888A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 888E E2 9C        	defw Indice_mov_Escaloncitos_derecha_abajo							; (Puntero_indice_mov)
 617+ 8890
# file closed: Cajas_y_disparos.asm
  24  8890              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8890              ; 13/05/23
   2+ 8890
   3+ 8890              Indice_de_niveles
   4+ 8890
   5+ 8890 9E 88        	defw Nivel_1
   6+ 8892 A9 88        	defw Nivel_2
   7+ 8894 B6 88        	defw Nivel_3
   8+ 8896 C6 88        	defw Nivel_4
   9+ 8898 D8 88        	defw Nivel_5
  10+ 889A
  11+ 889A              ;	...
  12+ 889A              ;	...
  13+ 889A              ;	+ Niveles ...
  14+ 889A
  15+ 889A 00 00        	defw 0
  16+ 889C 00 00        	defw 0
  17+ 889E
  18+ 889E 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 889F 05 04 03 02  	db 5,4,3,2,1
  19+ 88A3 01
  20+ 88A4 01 02 03 04  	db 1,2,3,4,5
  20+ 88A8 05
  21+ 88A9 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 88AA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 88AE 01 02
  23+ 88B0 02 01 01 01  	db 2,1,1,1,1,2
  23+ 88B4 01 02
  24+ 88B6 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 88B7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 88BB 01
  26+ 88BC 03 01 01 01  	db 3,1,1,1,1
  26+ 88C0 01
  27+ 88C1 03 01 01 01  	db 3,1,1,1,1
  27+ 88C5 01
  28+ 88C6 11           Nivel_4 db 17									; Nº de entidades.
  29+ 88C7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 88CB 01
  30+ 88CC 04 01 01 01  	db 4,1,1,1,1
  30+ 88D0 01
  31+ 88D1 04 01 01 01  	db 4,1,1,1,1
  31+ 88D5 01
  32+ 88D6 02 03        	db 2,3
  33+ 88D8 14           Nivel_5 db 20									; Nº de entidades.
  34+ 88D9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88DD 01
  35+ 88DE 05 01 01 01  	db 5,1,1,1,1
  35+ 88E2 01
  36+ 88E3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88E7 01
  37+ 88E8 05 01 01 01  	db 5,1,1,1,1
  37+ 88EC 01
  38+ 88ED
  39+ 88ED              ;---------------------------------------------------------------------------------------------------------------
  40+ 88ED              ;
  41+ 88ED              ;   21/5/23
  42+ 88ED              ;
  43+ 88ED              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 88ED              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 88ED              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 88ED              ;	_en la caja DRAW correspondiente.
  47+ 88ED              ;
  48+ 88ED              ;	MODIFICA: HL,DE y A.
  49+ 88ED              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 88ED
  51+ 88ED              Inicializa_Punteros_de_nivel
  52+ 88ED
  53+ 88ED 21 90 88     	ld hl,Indice_de_niveles
  54+ 88F0 22 15 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 88F3 CD 00 8D     	call Extrae_address
  56+ 88F6 7E           	ld a,(hl)
  57+ 88F7 32 EA 89     	ld (Numero_de_entidades),a
  58+ 88FA 23           	inc hl
  59+ 88FB 22 17 8A     	ld (Datos_de_nivel),hl
  60+ 88FE C9           	ret
  61+ 88FF
  62+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  63+ 88FF              ;
  64+ 88FF              ;   13/5/23
  65+ 88FF              ;
  66+ 88FF              ;	Destruye A,BC,HL,DE
  67+ 88FF
  68+ 88FF              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88FF              ;	_del juego.
  70+ 88FF
  71+ 88FF              Prepara_cajas
  72+ 88FF
  73+ 88FF              ; Preparamos los punteros de las cajas.
  74+ 88FF
  75+ 88FF 21 74 85     	ld hl,Indice_de_cajas
  76+ 8902 CD 00 8D     	call Extrae_address
  77+ 8905 CD 42 89     	call Avanza_caja
  78+ 8908
  79+ 8908 CD 86 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 890B
  81+ 890B 2A 17 8A     	ld hl,(Datos_de_nivel)
  82+ 890E
  83+ 890E              ; HL está en los datos del nivel correspondiente.
  84+ 890E              ; B actuará como contador de cajas.
  85+ 890E
  86+ 890E C5           1 push bc
  87+ 890F
  88+ 890F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 8910 CD 33 89     	call PreparaBC
  90+ 8913
  91+ 8913 21 36 88     	ld hl,Indice_de_entidades
  92+ 8916 CD 3B 89     	call SBC_HL_con_BC_y_Extrae
  93+ 8919 22 F0 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 891C
  95+ 891C CD 4C 89     	call Datos_de_entidad_a_caja
  96+ 891F
  97+ 891F 2A E8 89     	ld hl,(Indice_restore_caja)
  98+ 8922 CD 00 8D     	call Extrae_address
  99+ 8925 CD 42 89     	call Avanza_caja
 100+ 8928
 101+ 8928 2A 17 8A     	ld hl,(Datos_de_nivel)
 102+ 892B 23           	inc hl
 103+ 892C 22 17 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 892F
 105+ 892F C1           	pop bc
 106+ 8930 10 DC        	djnz 1B
 107+ 8932 C9           	ret
 108+ 8933
 109+ 8933 CB 27        PreparaBC sla a
 110+ 8935 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 8937 4F           	ld c,a
 112+ 8938 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 893A C9           	ret
 114+ 893B
 115+ 893B A7           SBC_HL_con_BC_y_Extrae and a
 116+ 893C ED 4A        	adc hl,bc
 117+ 893E CD 00 8D     	call Extrae_address
 118+ 8941 C9           	ret
 119+ 8942
 120+ 8942 22 E4 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 8945 13           	inc de
 122+ 8946 13           	inc de
 123+ 8947 EB           	ex de,hl
 124+ 8948 22 E8 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 894B C9           	ret
 126+ 894C
 127+ 894C              Datos_de_entidad_a_caja
 128+ 894C
 129+ 894C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 894C
 131+ 894C
 132+ 894C ED 5B E4 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8950
 134+ 8950 01 02 00     	ld bc,2
 135+ 8953 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 8955
 137+ 8955 01 07 00     	ld bc,7
 138+ 8958 CD 80 89     	call Situa_DE
 139+ 895B
 140+ 895B 01 05 00     	ld bc,5
 141+ 895E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8960
 143+ 8960 01 04 00     	ld bc,4
 144+ 8963 CD 80 89     	call Situa_DE
 145+ 8966
 146+ 8966 01 07 00     	ld bc,7
 147+ 8969 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 896B
 149+ 896B 01 18 00     	ld bc,24
 150+ 896E CD 80 89     	call Situa_DE
 151+ 8971
 152+ 8971 01 02 00     	ld bc,2
 153+ 8974 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 8976
 155+ 8976 01 0A 00     	ld bc,10
 156+ 8979 CD 80 89     	call Situa_DE
 157+ 897C
 158+ 897C 3E 03        	ld a,3
 159+ 897E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 160+ 897F
 161+ 897F C9           	ret
 162+ 8980
 163+ 8980 EB           Situa_DE ex de,hl
 164+ 8981 A7           	and a
 165+ 8982 ED 4A        	adc hl,bc
 166+ 8984 EB           	ex de,hl
 167+ 8985 C9           	ret
 168+ 8986
 169+ 8986              ;---------------------------------------------------------------------------------------------------------------
 170+ 8986              ;
 171+ 8986              ;	21/5/23
 172+ 8986              ;
 173+ 8986              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 174+ 8986              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 175+ 8986              ;
 176+ 8986              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 177+ 8986              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 178+ 8986              ;	_ total de entidades que contiene (Numero_de_entidades).
 179+ 8986              ;
 180+ 8986              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 181+ 8986              ;	MODIFICA: A y B.
 182+ 8986              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 183+ 8986
 184+ 8986              Admin_num_entidades
 185+ 8986
 186+ 8986              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 187+ 8986
 188+ 8986 3A EA 89     	ld a,(Numero_de_entidades)
 189+ 8989 A7           	and a
 190+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 191+ 898A              ;	jr z,$
 192+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 898A
 194+ 898A 20 03        	jr nz,3F
 195+ 898C
 196+ 898C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 197+ 898C
 198+ 898C CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 199+ 898F
 200+ 898F
 201+ 898F 3A EA 89     3 ld a,(Numero_de_entidades)
 202+ 8992 FE 0A        	cp 10
 203+ 8994 38 08        	jr c,1F
 204+ 8996
 205+ 8996              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 8996              ; Actualizamos variables.
 207+ 8996
 208+ 8996 3E 0A        	ld a,10
 209+ 8998 32 EB 89     	ld (Numero_parcial_de_entidades),a
 210+ 899B 47           	ld b,a
 211+ 899C 18 04        	jr 2F
 212+ 899E
 213+ 899E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 899E              ; (Numero_de_entidades)="0".
 215+ 899E
 216+ 899E 32 EB 89     1 ld (Numero_parcial_de_entidades),a
 217+ 89A1 47           	ld b,a
 218+ 89A2 C9           2 ret
# file closed: Niveles.asm
  25  89A3
  26  89A3              ; ******************************************************************************************************************************************************************************************
  27  89A3              ; Constantes.
  28  89A3              ; ******************************************************************************************************************************************************************************************
  29  89A3              ;
  30  89A3              ; 25/05/23
  31  89A3              ;
  32  89A3              ; Constantes generales.
  33  89A3              ;
  34  89A3
  35  89A3              Sprite_vacio equ $f000
  36  89A3              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  89A3              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  89A3              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  89A3              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  89A3
  41  89A3              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  89A3              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  89A3              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  89A3              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  89A3              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  89A3              ;                               				        ; De momento situamos este almacén en $7060.
  47  89A3
  48  89A3              ; ******************************************************************************************************************************************************************************************
  49  89A3              ; Variables.
  50  89A3              ; ******************************************************************************************************************************************************************************************
  51  89A3              ;
  52  89A3              ; 30/05/23
  53  89A3              ;
  54  89A3              ; Variables de DRAW. (Motor principal).
  55  89A3              ;
  56  89A3              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  89A3
  58  89A3 00           Filas db 0												; Filas. [DRAW]
  59  89A4 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  89A5 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  89A7 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  89A9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  89AA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  89AB
  65  89AB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  89AB
  67  89AB 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  89AC              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  89AC              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  89AC 00           Attr db 0												; Atributos de la entidad:
  71  89AD
  72  89AD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  89AD              ;
  74  89AD              ;	COLORES: 0 ..... NEGRO
  75  89AD              ;    		 1 ..... AZUL
  76  89AD              ; 			 2 ..... ROJO
  77  89AD              ;			 3 ..... MAGENTA
  78  89AD              ; 			 4 ..... VERDE
  79  89AD              ; 			 5 ..... CIAN
  80  89AD              ;			 6 ..... AMARILLO
  81  89AD              ; 			 7 ..... BLANCO
  82  89AD
  83  89AD 00 00        Indice_Sprite_der defw 0
  84  89AF 00 00        Indice_Sprite_izq defw 0
  85  89B1 00 00        Puntero_DESPLZ_der defw 0
  86  89B3 00 00        Puntero_DESPLZ_izq defw 0
  87  89B5
  88  89B5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89B7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89B8
  91  89B8              ; Variables de objeto. (Características).
  92  89B8
  93  89B8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89B9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89BA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89BB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89BC
  98  89BC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89BD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89BD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89BD
 102  89BD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89BF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89C1 00 00        	defw 0
 105  89C3 00 00 00 00  	db 0,0,0,0
 106  89C7
 107  89C7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89C9 00 00        	defw 0
 109  89CB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89CD 00 00 00 00  	db 0,0,0,0
 111  89D1
 112  89D1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89D1
 114  89D1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89D2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89D2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89D2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89D2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89D2              ;
 120  89D2              ; 														DESCRIPCIÖN:
 121  89D2              ;
 122  89D2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89D2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89D2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89D2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89D2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89D2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89D2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89D2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89D2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89D2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89D2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89D2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89D2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89D2              ;
 136  89D2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89D2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89D2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89D2
 140  89D2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89D3
 142  89D3              ; Movimiento.
 143  89D3
 144  89D3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89D4 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89D6 00 00        Puntero_mov defw 0
 147  89D8 00           Contador_db_mov db 0
 148  89D9 00           Incrementa_puntero db 0
 149  89DA 00           Repetimos_db db 0
 150  89DB
 151  89DB              ; Variables de funcionamiento. [DRAW].
 152  89DB
 153  89DB 00           Columnas db 0
 154  89DC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89DE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89DE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89DF
 158  89DF              ; variables de control general.
 159  89DF
 160  89DF 00           Ctrl_2 db 0
 161  89E0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89E0              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89E0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89E0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89E0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89E0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89E0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89E0              ;
 169  89E0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89E0
 171  89E0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89E1
 173  89E1              ; 62 Bytes por entidad.
 174  89E1              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89E1              ;					         		---------;      ;---------
 176  89E1
 177  89E1
 178  89E1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89E1
 180  89E1 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89E2
 182  89E2              ;														DESCRIPCIÓN:
 183  89E2              ;
 184  89E2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89E2              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89E2              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89E2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89E2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89E2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89E2              ;														BIT 3, Recarga de nueva oleada.
 191  89E2              ;														BIT 4, Recarga de nueva oleada.
 192  89E2
 193  89E2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89E4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89E4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89E4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89E4
 198  89E4
 199  89E4
 200  89E4              ; Gestión de ENTIDADES y CAJAS.
 201  89E4
 202  89E4              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89E4 00 00        Puntero_store_caja defw 0
 204  89E6 00 00        Puntero_restore_caja defw 0
 205  89E8 00 00        Indice_restore_caja defw 0
 206  89EA 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89EB 00           Numero_parcial_de_entidades db 0
 208  89EC 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89ED 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89EE              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89EE              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89EE              ;														; _ (Numero_de_malotes)="0".
 213  89EE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89F0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89F2              ;														; _ puntero (Indice_entidades).
 216  89F2
 217  89F2
 218  89F2              ;---------------------------------------------------------------------------------------------------------------
 219  89F2              ;
 220  89F2              ; Sirven para PINTAR.
 221  89F2
 222  89F2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89F4              ;														; _variable para almacenar lo posición del puntero_
 224  89F4              ; 														; _de pila, SP.
 225  89F4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89F6              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89F6 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89F8              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89F8              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89F8 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89FA              ;														; _el snapshot de los registros del siguiente disparo.
 232  89FA              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89FA
 234  89FA              ;---------------------------------------------------------------------------------------------------------------
 235  89FA
 236  89FA              ; Gestión de Disparos.
 237  89FA
 238  89FA 00           Numero_de_disparotes db 0
 239  89FB 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89FD 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  89FF 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  8A00              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  8A00              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  8A00 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  8A02              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  8A02              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  8A02              ;														; _produzca colisión.
 248  8A02 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  8A04              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  8A04 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  8A07              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  8A07 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  8A0A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  8A0A              ;---------------------------------------------------------------------------------------------------------------
 255  8A0A
 256  8A0A              ; Relojes y temporizaciones.
 257  8A0A
 258  8A0A 00           Contador_de_frames db 0
 259  8A0B 04           Clock_explosion db 4
 260  8A0C 1E           Clock_Entidades_en_curso db 30
 261  8A0D 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 262  8A0E              ;														; Repite la oleada de entidades.
 263  8A0E 01           Habilita_disparo_Amadeus db 1
 264  8A0F 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 265  8A10 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 266  8A11
 267  8A11 01           Habilita_disparo_entidad db 1
 268  8A12 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 269  8A13 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 270  8A14
 271  8A14              ;---------------------------------------------------------------------------------------------------------------
 272  8A14
 273  8A14              ; Gestión de FRAMES.
 274  8A14
 275  8A14              ; Switch db 0
 276  8A14
 277  8A14              ; Variables de Raster y localización en pantalla.
 278  8A14
 279  8A14              ; Temp_Raster defw $ff00
 280  8A14
 281  8A14              ;---------------------------------------------------------------------------------------------------------------
 282  8A14
 283  8A14              ; Gestión de NIVELES.
 284  8A14
 285  8A14 00           Nivel db 0												 ; Nivel actual del juego.
 286  8A15 00 00        Puntero_indice_NIVELES defw 0
 287  8A17 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 288  8A19              ; 														 ; _ que definen el NIVEL.
 289  8A19
 290  8A19
 291  8A19              ; Y todo comienza aquí .....
 292  8A19              ;
 293  8A19              ; Rutina principal *************************************************************************************************************************************************************************
 294  8A19              ;
 295  8A19              ;	14/11/22
 296  8A19
 297  8A19              START
 298  8A19
 299  8A19 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 300  8A1C 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 301  8A1E ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 302  8A20 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 303  8A22 F3           	DI
 304  8A23
 305  8A23 3E 07        	ld a,%00000111
 306  8A25 CD BC 98     	call Cls
 307  8A28
 308  8A28              ;	call Pinta_marco
 309  8A28
 310  8A28 CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 311  8A2B
 312  8A2B              ;!! Aqui llamaremos a la rutina que hace copia de seguridad de las variables generales.
 313  8A2B
 314  8A2B CD D9 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 315  8A2E
 316  8A2E CD FF 88     4 call Prepara_cajas
 317  8A31
 318  8A31 CD AC 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 319  8A34              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 320  8A34 CD 89 8D     	call Restore_entidad
 321  8A37
 322  8A37 21 EB 89     	ld hl,Numero_parcial_de_entidades
 323  8A3A 46           	ld b,(hl)
 324  8A3B 04           	inc b
 325  8A3C 05           	dec b
 326  8A3D 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 327  8A3F
 328  8A3F              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 329  8A3F              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 330  8A3F              ;	Pintamos el resto de entidades:
 331  8A3F
 332  8A3F              ;	INICIA ENTIDADES !!!!!
 333  8A3F
 334  8A3F C5           1 push bc  												; Guardo el contador de entidades.
 335  8A40 CD 06 8D     	call Inicia_Puntero_objeto
 336  8A43 CD D0 98     	call Recompone_posicion_inicio
 337  8A46 CD 0C 93     	call Draw
 338  8A49 CD A0 7F     	call Guarda_foto_registros
 339  8A4C CD 4E 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 340  8A4F C1           	pop bc
 341  8A50 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 342  8A52
 343  8A52              ;	call Pinta_marco
 344  8A52
 345  8A52              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 346  8A52
 347  8A52 3A E1 89     	ld a,(Ctrl_1)
 348  8A55 CB 5F        	bit 3,a
 349  8A57 20 18        	jr nz,5F											; Loop
 350  8A59
 351  8A59              ; 	INICIA AMADEUS !!!!!
 352  8A59
 353  8A59 CD B0 8D     3 call Restore_Amadeus
 354  8A5C CD 06 8D     	call Inicia_Puntero_objeto
 355  8A5F CD 0C 93     	call Draw
 356  8A62 CD A0 7F     	call Guarda_foto_registros
 357  8A65 11 8C 85     	ld de,Amadeus_db
 358  8A68 CD C2 8D     	call Store_Amadeus
 359  8A6B
 360  8A6B              ; 	INICIA DISPAROS !!!!!
 361  8A6B
 362  8A6B CD C2 8C     	call Inicia_Puntero_Disparo_Entidades
 363  8A6E CD C9 8C     	call Inicia_Puntero_Disparo_Amadeus
 364  8A71
 365  8A71              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 366  8A71
 367  8A71 CD AC 8C     5 call Inicia_punteros_de_cajas
 368  8A74 CD 89 8D     	call Restore_entidad
 369  8A77
 370  8A77 3A E1 89     	ld a,(Ctrl_1)
 371  8A7A CB 5F        	bit 3,a
 372  8A7C 28 0A        	jr z,6F
 373  8A7E
 374  8A7E              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 375  8A7E
 376  8A7E 21 E1 89     	ld hl,Ctrl_1
 377  8A81 CB 9E        	res 3,(hl)
 378  8A83 CD D0 8C     	call Calcula_numero_de_malotes
 379  8A86 18 07        	jr 7F
 380  8A88
 381  8A88              ; ----------
 382  8A88
 383  8A88 3A EB 89     6 ld a,(Numero_parcial_de_entidades)
 384  8A8B 3C           	inc a
 385  8A8C 32 ED 89     	ld (Numero_de_malotes),a
 386  8A8F
 387  8A8F AF           7 xor a
 388  8A90 FB           2 ei
 389  8A91 28 FD        	jr z,2B
 390  8A93
 391  8A93 3A 0A 8A     	ld a,(Contador_de_frames)
 392  8A96 47           	ld b,a
 393  8A97 3A 0D 8A     	ld a,(Activa_recarga_cajas)
 394  8A9A B8           	cp b
 395  8A9B 28 08        	jr z,8F
 396  8A9D
 397  8A9D 21 E1 89     	ld hl,Ctrl_1
 398  8AA0 CB E6        	set 4,(hl)
 399  8AA2 AF           	xor a
 400  8AA3 18 EB        	jr 2B
 401  8AA5
 402  8AA5 21 E1 89     8 ld hl,Ctrl_1
 403  8AA8 CB A6        	res 4,(hl)
 404  8AAA F3           	di
 405  8AAB
 406  8AAB C3 2E 8A     	jp 4B
 407  8AAE
 408  8AAE              ; -----------------------------------------------------------------------------------
 409  8AAE
 410  8AAE              Frame
 411  8AAE
 412  8AAE              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 413  8AAE              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 414  8AAE
 415  8AAE              ; PINTAMOS.
 416  8AAE
 417  8AAE 3E 02            ld a,2
 418  8AB0 D3 FE            out ($fe),a
 419  8AB2 CD 10 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 420  8AB5 CD 49 96     	call Extrae_foto_disparos
 421  8AB8 3E 01            ld a,1
 422  8ABA D3 FE            out ($fe),a
 423  8ABC
 424  8ABC
 425  8ABC              ;    jr $
 426  8ABC
 427  8ABC              ; ----------------------------------------------------------------------
 428  8ABC
 429  8ABC              ; RELOJES.
 430  8ABC
 431  8ABC 21 0A 8A     	ld hl,Contador_de_frames
 432  8ABF 34           	inc (hl)											; 0 - 255
 433  8AC0
 434  8AC0 3A 0C 8A     	ld a,(Clock_Entidades_en_curso)
 435  8AC3 47           	ld b,a
 436  8AC4 3A 0A 8A     	ld a,(Contador_de_frames)
 437  8AC7 B8           	cp b
 438  8AC8 20 18        	jr nz,13F
 439  8ACA
 440  8ACA 3A EB 89     	ld a,(Numero_parcial_de_entidades)
 441  8ACD 47           	ld b,a
 442  8ACE 3A EC 89     	ld a,(Entidades_en_curso)
 443  8AD1 B8           	cp b
 444  8AD2 28 0E        	jr z,13F
 445  8AD4 30 0C        	jr nc,13F
 446  8AD6
 447  8AD6 3C           	inc a
 448  8AD7 32 EC 89     	ld (Entidades_en_curso),a
 449  8ADA
 450  8ADA 3A 0C 8A     	ld a,(Clock_Entidades_en_curso)
 451  8ADD
 452  8ADD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 453  8ADD              ;! _ IMPREDECIBLE !!!!
 454  8ADD
 455  8ADD C6 64        	add 100
 456  8ADF 32 0C 8A     	ld (Clock_Entidades_en_curso),a
 457  8AE2
 458  8AE2 21 0E 8A     13 ld hl,Habilita_disparo_Amadeus
 459  8AE5 11 10 8A     	ld de,Temporiza_disparo_Amadeus
 460  8AE8 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 461  8AEB
 462  8AEB 21 11 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 463  8AEE 11 13 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 464  8AF1 CD D5 7F     	call Habilita_disparos
 465  8AF4
 466  8AF4              ; COLISIONES.
 467  8AF4
 468  8AF4 CD EE 91     	call Selector_de_impactos
 469  8AF7
 470  8AF7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 471  8AF7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 472  8AF7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 473  8AF7
 474  8AF7 AF           	xor a
 475  8AF8 32 FF 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 476  8AFB
 477  8AFB CD AC 8C     	call Inicia_punteros_de_cajas
 478  8AFE CD 89 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 479  8B01              ; 														; _ en DRAW.
 480  8B01 3A A3 89     	ld a,(Filas)
 481  8B04 A7           	and a
 482  8B05 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 483  8B07 CD 9B 8D     	call Incrementa_punteros_de_cajas
 484  8B0A 18 F2        	jr 12B
 485  8B0C
 486  8B0C              ; ---------------------------------------------------------------------------------------
 487  8B0C
 488  8B0C CD 69 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 489  8B0F 21 00 70     	ld hl,Album_de_fotos
 490  8B12 22 F6 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 491  8B15              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 492  8B15 3A EB 89     	ld a,(Numero_parcial_de_entidades)
 493  8B18 47               ld b,a
 494  8B19 A7           	and a
 495  8B1A 20 14        	jr nz,2F
 496  8B1C
 497  8B1C 21 E1 89     	ld hl,Ctrl_1
 498  8B1F CB 66        	bit 4,(hl)
 499  8B21 C2 AC 8B     	jp nz,4F
 500  8B24
 501  8B24 21 E1 89     	ld hl,Ctrl_1
 502  8B27 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 503  8B29
 504  8B29 3A 0A 8A     	ld a,(Contador_de_frames)
 505  8B2C 3C           	inc a
 506  8B2D 32 0D 8A     	ld (Activa_recarga_cajas),a
 507  8B30
 508  8B30              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 509  8B30
 510  8B30 3A EC 89     2 ld a,(Entidades_en_curso)
 511  8B33 A7           	and a
 512  8B34 28 76        	jr z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 513  8B36 47           	ld b,a												; Entidades en curso en B.
 514  8B37
 515  8B37              ; Código que ejecutamos con cada entidad:
 516  8B37              ; Impacto ???
 517  8B37
 518  8B37 C5           15 push bc 												; Nº de entidades en curso.
 519  8B38
 520  8B38 3A BC 89     	ld a,(Impacto)
 521  8B3B A7           	and a
 522  8B3C 28 2D        	jr z,8F
 523  8B3E
 524  8B3E              ; Hay Impacto en esta entidad.
 525  8B3E
 526  8B3E 21 0B 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 527  8B41 35           	dec (hl)
 528  8B42
 529  8B42 20 62        	jr nz,6F
 530  8B44
 531  8B44 36 04        	ld (hl),4
 532  8B46
 533  8B46
 534  8B46 CD 63 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 535  8B49
 536  8B49              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 537  8B49
 538  8B49 3A DF 89     	ld a,(Ctrl_2)
 539  8B4C CB 4F        	bit 1,a
 540  8B4E 20 3D        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 541  8B50
 542  8B50 3A AB 89     	ld a,(CTRL_DESPLZ)
 543  8B53 A7           	and a
 544  8B54 20 08        	jr nz,21F
 545  8B56
 546  8B56 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 547  8B59 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 548  8B5C 18 06        	jr 22F
 549  8B5E
 550  8B5E 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 551  8B61 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 552  8B64
 553  8B64 21 DF 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 554  8B67 CB CE        	set 1,(hl)
 555  8B69 18 22        	jr 7F
 556  8B6B
 557  8B6B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 558  8B6B              ; _con las coordenadas de la entidad almacenada en DRAW.
 559  8B6B
 560  8B6B 3A E1 89     8 ld a,(Ctrl_1)
 561  8B6E CB 57        	bit 2,a
 562  8B70 28 1B        	jr z,7F
 563  8B72
 564  8B72 2A 02 8A     	ld hl,(Coordenadas_disparo_certero)
 565  8B75 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 566  8B76              ;														; E contiene la coordenada_X del disparo.
 567  8B76 2A A9 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 568  8B79              ;														; H FILA, (Coordenada_y de la entidad).
 569  8B79 A7           	and a
 570  8B7A ED 52        	sbc hl,de
 571  8B7C
 572  8B7C CD 25 92     	call Determina_resultado_comparativa
 573  8B7F
 574  8B7F              ;! Debug colisiones
 575  8B7F 78           	ld a,b
 576  8B80 A7           	and a
 577  8B81              ;	ld a,(Cuad_objeto)
 578  8B81              ;	inc b
 579  8B81              ;	dec b
 580  8B81 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 581  8B83              ;	jr z,$
 582  8B83
 583  8B83              ;! Debug colisiones
 584  8B83
 585  8B83              ; ----- ----- -----
 586  8B83
 587  8B83 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 588  8B85 32 BC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 589  8B88
 590  8B88 21 E1 89     	ld hl,Ctrl_1
 591  8B8B CB 96        	res 2,(hl)
 592  8B8D
 593  8B8D              ; Limpiamos las coordenadas del disparo asesino. Ya tenemos víctima.
 594  8B8D
 595  8B8D              ;	ld hl,Coordenadas_disparo_certero
 596  8B8D              ;	ld (hl),0
 597  8B8D              ;	inc hl
 598  8B8D              ;	ld (hl),0
 599  8B8D
 600  8B8D CD DF 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 601  8B90
 602  8B90 3A D1 89     	ld a,(Ctrl_0)
 603  8B93 CB 67        	bit 4,a
 604  8B95 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 605  8B97
 606  8B97              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 607  8B97              ; [[[
 608  8B97 CD 24 8E     	call Detecta_disparo_entidad
 609  8B9A              ; ]]]
 610  8B9A CD 73 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 611  8B9D
 612  8B9D 21 D1 89     	ld hl,Ctrl_0
 613  8BA0 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 614  8BA2 AF           	xor a
 615  8BA3 32 D2 89     	ld (Obj_dibujado),a
 616  8BA6
 617  8BA6 CD 4E 8D     6 call Store_Restore_cajas
 618  8BA9
 619  8BA9 C1           	pop bc
 620  8BAA 10 8B        	djnz 15B
 621  8BAC
 622  8BAC              ; ------------------------------------
 623  8BAC
 624  8BAC              ; Hemos gestionado todas las unidades.
 625  8BAC              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 626  8BAC
 627  8BAC              ;	ld hl,Ctrl_1
 628  8BAC              ;	res 2,(hl)
 629  8BAC
 630  8BAC              ; Limpiamos las coordenadas del disparo asesino.
 631  8BAC
 632  8BAC              ;	ld hl,Coordenadas_disparo_certero
 633  8BAC              ;	ld (hl),0
 634  8BAC              ;	inc hl
 635  8BAC              ;	ld (hl),0
 636  8BAC
 637  8BAC              ; ------------------------------------
 638  8BAC
 639  8BAC              ; Tras la gestión de las entidades, ... AMADEUS.
 640  8BAC
 641  8BAC CD B0 8D     4 call Restore_Amadeus
 642  8BAF
 643  8BAF 3A BC 89     	ld a,(Impacto)
 644  8BB2 A7           	and a
 645  8BB3 20 FE        	jr nz,$
 646  8BB5
 647  8BB5 CD 44 8C     	call Mov_Amadeus
 648  8BB8
 649  8BB8 3A D1 89     	ld a,(Ctrl_0)
 650  8BBB CB 67        	bit 4,a
 651  8BBD 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 652  8BBF
 653  8BBF CD 73 8C     	call Guarda_foto_entidad_a_pintar
 654  8BC2
 655  8BC2 21 D1 89     3 ld hl,Ctrl_0
 656  8BC5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 657  8BC7 AF           	xor a
 658  8BC8 32 D2 89     	ld (Obj_dibujado),a
 659  8BCB
 660  8BCB 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 661  8BCE CD C2 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 662  8BD1
 663  8BD1 CD 87 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 664  8BD4
 665  8BD4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 666  8BD4
 667  8BD4 CD E8 8C     	call Calcula_numero_de_disparotes
 668  8BD7 CD D0 8C     9 call Calcula_numero_de_malotes
 669  8BDA
 670  8BDA 3E 04        	ld a,4
 671  8BDC D3 FE        	out ($fe),a
 672  8BDE
 673  8BDE C9           	ret
 674  8BDF
 675  8BDF              ; --------------------------------------------------------------------------------------------------------------
 676  8BDF              ;
 677  8BDF              ;	27/05/23
 678  8BDF
 679  8BDF              Mov_obj
 680  8BDF
 681  8BDF              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 682  8BDF
 683  8BDF 3A DF 89     	ld a,(Ctrl_2)
 684  8BE2 CB 4F        	bit 1,a
 685  8BE4 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 686  8BE6
 687  8BE6              ; Explosión:
 688  8BE6
 689  8BE6 3A E0 89     	ld a,(Frames_explosion)
 690  8BE9 A7           	and a
 691  8BEA 20 11        	jr nz,4F
 692  8BEC
 693  8BEC              ; Una alimaña menos!!!!!!!!!1
 694  8BEC
 695  8BEC CD CB 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 696  8BEF 21 EB 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 697  8BF2 35           	dec (hl)
 698  8BF3 21 EC 89     	ld hl,Entidades_en_curso
 699  8BF6 35           	dec (hl)
 700  8BF7 21 EA 89     	ld hl,Numero_de_entidades
 701  8BFA 35           	dec (hl)
 702  8BFB 18 46        	jr 3F
 703  8BFD
 704  8BFD              ; -----
 705  8BFD
 706  8BFD              ;	`Movemos´ la explosión.
 707  8BFD
 708  8BFD 2A B1 89     4 ld hl,(Puntero_DESPLZ_der)
 709  8C00 23           	inc hl
 710  8C01 23           	inc hl
 711  8C02 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 712  8C05 CD 00 8D     	call Extrae_address
 713  8C08 22 A7 89     	ld (Puntero_objeto),hl
 714  8C0B
 715  8C0B 21 E0 89     	ld hl,Frames_explosion
 716  8C0E 35           	dec (hl)
 717  8C0F
 718  8C0F CD 63 8C     	call Guarda_foto_entidad_a_borrar
 719  8C12 18 2F        	jr 3F
 720  8C14
 721  8C14 AF           2 xor a
 722  8C15 32 D2 89     	ld (Obj_dibujado),a
 723  8C18 32 D1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 724  8C1B              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 725  8C1B              ; 														; _de la entidad.
 726  8C1B CD 7D 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 727  8C1E              ;														; Obj_dibujado="0".
 728  8C1E              ; Movemos Entidades malignas.
 729  8C1E
 730  8C1E 21 D4 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 731  8C21 34           	inc (hl)
 732  8C22 35           	dec (hl)                                            ; Salimos de la rutina.
 733  8C23 C8           	ret z
 734  8C24
 735  8C24 CD EA 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 736  8C27
 737  8C27 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 738  8C2A CB 67        	bit 4,a
 739  8C2C C8           	ret z
 740  8C2D
 741  8C2D              ; Ha habido desplazamiento de la entidad maligna.
 742  8C2D              ; Ha llegado a zona de AMADEUS ???
 743  8C2D
 744  8C2D 3A AA 89     	ld a,(Coordenada_y)
 745  8C30 FE 14        	cp $14
 746  8C32 D4 B8 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 747  8C35              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 748  8C35              ; ---------
 749  8C35
 750  8C35 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 751  8C37 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 752  8C3A CD 7D 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 753  8C3D CD 94 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 754  8C40 CD 63 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 755  8C43 C9           3 ret													; _de la misma.
 756  8C44
 757  8C44              ; --------------------------------------------------------------------------------------------------------------
 758  8C44              ;
 759  8C44              ;	29/1/23
 760  8C44
 761  8C44              Mov_Amadeus
 762  8C44
 763  8C44 AF           	xor a
 764  8C45 32 D2 89     	ld (Obj_dibujado),a
 765  8C48 CD 7D 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 766  8C4B              ;														; Obj_dibujado="0".
 767  8C4B              ; Movemos Amadeus.
 768  8C4B
 769  8C4B CD ED 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 770  8C4E 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 771  8C51 CB 67        	bit 4,a
 772  8C53 C8           	ret z
 773  8C54
 774  8C54              ; ---------
 775  8C54
 776  8C54 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 777  8C56 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 778  8C59 CD 7D 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 779  8C5C CD 94 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 780  8C5F CD 63 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 781  8C62 C9           	ret													; _de la nave.
 782  8C63
 783  8C63              ; --------------------------------------------------------------------------------------------------------------
 784  8C63              ;
 785  8C63              ;	31/01/23
 786  8C63              ;
 787  8C63              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 788  8C63
 789  8C63              Guarda_foto_entidad_a_borrar
 790  8C63
 791  8C63 CD E6 95     	call Prepara_draw
 792  8C66 CD 20 95     	call calcula_CColumnass
 793  8C69 CD 57 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 794  8C6C CD AC 95     	call Define_rutina_de_impresion
 795  8C6F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 796  8C72 C9           	ret
 797  8C73
 798  8C73              ; --------------------------------------------------------------------------------------------------------------
 799  8C73              ;
 800  8C73              ;	31/01/23
 801  8C73              ;
 802  8C73              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 803  8C73              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 804  8C73
 805  8C73              Guarda_foto_entidad_a_pintar
 806  8C73
 807  8C73 CD A0 8C     	call Repone_pintar
 808  8C76 CD 0C 93     	call Draw
 809  8C79 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 810  8C7C C9           	ret
 811  8C7D
 812  8C7D              ; --------------------------------------------------------------------------------------------------------------
 813  8C7D              ;
 814  8C7D              ;
 815  8C7D
 816  8C7D 21 A3 89     Prepara_var_pintado_borrado	ld hl,Filas
 817  8C80 3A D2 89     	ld a,(Obj_dibujado)
 818  8C83 A7           	and a
 819  8C84 28 05        	jr z,1F
 820  8C86 11 C7 89     	ld de,Variables_de_pintado
 821  8C89 18 03        	jr 2F
 822  8C8B 11 BD 89     1 ld de,Variables_de_borrado
 823  8C8E 01 08 00     2 ld bc,8
 824  8C91 ED B0        	ldir
 825  8C93 C9           	ret
 826  8C94
 827  8C94              ; --------------------------------------------------------------------------------------------------------------
 828  8C94
 829  8C94 21 BD 89     Repone_borrar ld hl,Variables_de_borrado
 830  8C97 11 A3 89     	ld de,Filas
 831  8C9A 01 08 00     	ld bc,8
 832  8C9D ED B0        	ldir
 833  8C9F C9           	ret
 834  8CA0
 835  8CA0 21 C7 89     Repone_pintar ld hl,Variables_de_pintado
 836  8CA3 11 A3 89     	ld de,Filas
 837  8CA6 01 08 00     	ld bc,8
 838  8CA9 ED B0        	ldir
 839  8CAB C9           	ret
 840  8CAC
 841  8CAC              ; *************************************************************************************************************************************************************
 842  8CAC              ;
 843  8CAC              ; 8/1/23
 844  8CAC              ;
 845  8CAC              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 846  8CAC              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 847  8CAC              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 848  8CAC
 849  8CAC              ; Destruye HL y DE !!!!!
 850  8CAC
 851  8CAC              Inicia_punteros_de_cajas
 852  8CAC
 853  8CAC 21 74 85     	ld hl,Indice_de_cajas
 854  8CAF CD 00 8D         call Extrae_address
 855  8CB2 22 E4 89         ld (Puntero_store_caja),hl
 856  8CB5 21 76 85     	ld hl,Indice_de_cajas+2
 857  8CB8 22 E8 89     	ld (Indice_restore_caja),hl
 858  8CBB CD 00 8D     	call Extrae_address
 859  8CBE 22 E6 89     	ld (Puntero_restore_caja),hl
 860  8CC1 C9               ret
 861  8CC2
 862  8CC2              ; *************************************************************************************************************************************************************
 863  8CC2              ;
 864  8CC2              ; 8/1/23
 865  8CC2              ;
 866  8CC2              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 867  8CC2
 868  8CC2 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 869  8CC5 22 FB 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 870  8CC8 C9           	ret
 871  8CC9 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 872  8CCC 22 FD 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 873  8CCF C9           	ret
 874  8CD0
 875  8CD0              ; -------------------------------------------------------------------------------------------------------------
 876  8CD0              ;
 877  8CD0              ; 28/2/23
 878  8CD0              ;
 879  8CD0
 880  8CD0              Calcula_numero_de_malotes
 881  8CD0
 882  8CD0 21 00 70     	ld hl,Album_de_fotos
 883  8CD3 EB           	ex de,hl
 884  8CD4 2A F6 89     	ld hl,(Stack_snapshot)
 885  8CD7
 886  8CD7 06 00        	ld b,0
 887  8CD9 7D           	ld a,l
 888  8CDA 93           	sub e
 889  8CDB 28 07        	jr z,1F
 890  8CDD
 891  8CDD              ; Nº de malotes no es "0".
 892  8CDD
 893  8CDD D6 06        2 sub 6
 894  8CDF 04           	inc b
 895  8CE0 A7           	and a
 896  8CE1 20 FA        	jr nz,2B
 897  8CE3 78           	ld a,b
 898  8CE4
 899  8CE4 32 ED 89     1 ld (Numero_de_malotes),a
 900  8CE7 C9           	ret
 901  8CE8
 902  8CE8              ; -------------------------------------------------------------------------------------------------------------
 903  8CE8              ;
 904  8CE8              ; 28/2/23
 905  8CE8              ;
 906  8CE8
 907  8CE8              Calcula_numero_de_disparotes
 908  8CE8
 909  8CE8 21 85 70     	ld hl,Album_de_fotos_disparos
 910  8CEB EB           	ex de,hl
 911  8CEC 2A F8 89     	ld hl,(Stack_snapshot_disparos)
 912  8CEF
 913  8CEF 06 00        	ld b,0
 914  8CF1 7D           	ld a,l
 915  8CF2 93           	sub e
 916  8CF3 28 07        	jr z,1F
 917  8CF5
 918  8CF5              ; Nº de malotes no es "0".
 919  8CF5
 920  8CF5 D6 06        2 sub 6
 921  8CF7 04           	inc b
 922  8CF8 A7           	and a
 923  8CF9 20 FA        	jr nz,2B
 924  8CFB 78           	ld a,b
 925  8CFC
 926  8CFC 32 FA 89     1 ld (Numero_de_disparotes),a
 927  8CFF C9           	ret
 928  8D00              ; *************************************************************************************************************************************************************
 929  8D00              ;
 930  8D00              ; 20/10/22
 931  8D00              ;
 932  8D00              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 933  8D00              ;
 934  8D00              ; Destruye el puntero y DE !!!!!
 935  8D00
 936  8D00 5E           Extrae_address ld e,(hl)
 937  8D01 23           	inc hl
 938  8D02 56           	ld d,(hl)
 939  8D03 2B           	dec hl
 940  8D04 EB           	ex de,hl
 941  8D05 C9           	ret
 942  8D06
 943  8D06              ; *************************************************************************************************************************************************************
 944  8D06              ;
 945  8D06              ;	7/2/23
 946  8D06              ;
 947  8D06              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 948  8D06              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 949  8D06              ;
 950  8D06              ;   Destruye HL y BC !!!!!,
 951  8D06              ;
 952  8D06              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 953  8D06              ;					"0" ..... Izquierda.
 954  8D06
 955  8D06              Inicia_Puntero_objeto
 956  8D06
 957  8D06 3A B7 89     	ld a,(Cuad_objeto)
 958  8D09 E6 01        	and 1
 959  8D0B F5           	push af
 960  8D0C CC 2A 8D     	call z,Inicia_puntero_objeto_izq
 961  8D0F F1           	pop af
 962  8D10 28 2B        	jr z,1F
 963  8D12 CD 17 8D     	call Inicia_puntero_objeto_der
 964  8D15 18 26        	jr 1F
 965  8D17
 966  8D17              ; Arrancamos desde la parte izquierda de la pantalla.
 967  8D17              ; Iniciamos (Indice_Sprite_der).
 968  8D17
 969  8D17 2A AD 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 970  8D1A 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 971  8D1D CD 00 8D     	call Extrae_address
 972  8D20 22 A7 89     	ld (Puntero_objeto),hl
 973  8D23
 974  8D23 2A AF 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 975  8D26 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 976  8D29 C9           	ret
 977  8D2A
 978  8D2A              ; Arrancamos desde la parte derecha de la pantalla.
 979  8D2A              ; Iniciamos (Indice_Sprite_izq).
 980  8D2A
 981  8D2A 2A AF 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 982  8D2D 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 983  8D30 CD 00 8D     	call Extrae_address
 984  8D33 22 A7 89     	ld (Puntero_objeto),hl
 985  8D36
 986  8D36 2A AD 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 987  8D39 22 B1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 988  8D3C C9           	ret
 989  8D3D
 990  8D3D              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 991  8D3D
 992  8D3D 21 48 83     1 ld hl,Amadeus
 993  8D40 ED 4B A7 89  	ld bc,(Puntero_objeto)
 994  8D44 B7 ED 42     	sub hl,bc
 995  8D47 C0           	ret nz
 996  8D48 21 D1 89     	ld hl,Ctrl_0
 997  8D4B CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 998  8D4D C9           	ret 												; _de nuestra nave en los extremos.
 999  8D4E
1000  8D4E              ; *************************************************************************************************************************************************************
1001  8D4E              ;
1002  8D4E              ;	14/5/23
1003  8D4E              ;
1004  8D4E              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1005  8D4E              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1006  8D4E
1007  8D4E              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1008  8D4E              ;	_de la 2ª y 3ª entidad respectivamente.
1009  8D4E
1010  8D4E              Store_Restore_cajas
1011  8D4E
1012  8D4E E5           	push hl
1013  8D4F D5           	push de
1014  8D50 C5            	push bc
1015  8D51
1016  8D51              ;	STORE !!!!!
1017  8D51              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1018  8D51
1019  8D51 21 A3 89     	ld hl,Filas
1020  8D54 ED 5B E4 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1021  8D58 01 3E 00     	ld bc,62
1022  8D5B ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1023  8D5D
1024  8D5D              ; 	Entidad_sospechosa. 20/4/23
1025  8D5D
1026  8D5D 3A BC 89     	ld a,(Impacto)
1027  8D60 A7           	and a
1028  8D61 28 0C        	jr z,1F
1029  8D63
1030  8D63 2A E4 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1031  8D66 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1032  8D69 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1033  8D6A ED 4A        	adc hl,bc 											; _ "0" más adelante.
1034  8D6C 22 00 8A     	ld (Entidad_sospechosa_de_colision),hl
1035  8D6F
1036  8D6F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1037  8D6F
1038  8D6F 2A E6 89     1 ld hl,(Puntero_restore_caja)
1039  8D72 7E           	ld a,(hl)
1040  8D73 A7           	and a
1041  8D74 F5           	push af
1042  8D75 28 08        	jr z,2F
1043  8D77
1044  8D77 11 A3 89     	ld de,Filas
1045  8D7A 01 3E 00     	ld bc,62
1046  8D7D ED B0        	ldir
1047  8D7F
1048  8D7F CD 9B 8D     2 call Incrementa_punteros_de_cajas
1049  8D82 F1           	pop af
1050  8D83 28 EA        	jr z,1B
1051  8D85
1052  8D85 C1           	pop bc
1053  8D86 D1           	pop de
1054  8D87 E1           	pop hl
1055  8D88
1056  8D88 C9           	ret
1057  8D89
1058  8D89              ; **************************************************************************************************
1059  8D89              ;
1060  8D89              ;	12/05/23
1061  8D89              ;
1062  8D89              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1063  8D89
1064  8D89 E5           Restore_entidad push hl
1065  8D8A D5           	push de
1066  8D8B C5            	push bc
1067  8D8C
1068  8D8C 2A E4 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1069  8D8F 11 A3 89     	ld de,Filas
1070  8D92 01 3E 00     	ld bc,62
1071  8D95 ED B0        	ldir
1072  8D97
1073  8D97 C1           	pop bc
1074  8D98 D1           	pop de
1075  8D99 E1           	pop hl
1076  8D9A C9           	ret
1077  8D9B
1078  8D9B
1079  8D9B              ; **************************************************************************************************
1080  8D9B              ;
1081  8D9B              ;	08/05/23
1082  8D9B              ;
1083  8D9B              ;	Incrementamos los dos punteros de entidades. (+1).
1084  8D9B
1085  8D9B 2A E6 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1086  8D9E 22 E4 89     	ld (Puntero_store_caja),hl
1087  8DA1 2A E8 89     	ld hl,(Indice_restore_caja)
1088  8DA4 23           	inc hl
1089  8DA5 23           	inc hl
1090  8DA6 22 E8 89     	ld (Indice_restore_caja),hl
1091  8DA9 CD 00 8D         call Extrae_address
1092  8DAC 22 E6 89         ld (Puntero_restore_caja),hl
1093  8DAF C9               ret
1094  8DB0
1095  8DB0              ; **************************************************************************************************
1096  8DB0              ;
1097  8DB0              ;	25/01/23
1098  8DB0              ;
1099  8DB0              ;	Restore_Amadeus
1100  8DB0              ;
1101  8DB0              ;	Cargamos en DRAW los parámetros de Amadeus.
1102  8DB0              ;
1103  8DB0
1104  8DB0 E5           Restore_Amadeus	push hl
1105  8DB1 D5           	push de
1106  8DB2 C5            	push bc
1107  8DB3 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1108  8DB6 11 A3 89     	ld de,Filas
1109  8DB9 01 3E 00     	ld bc,62
1110  8DBC ED B0        	ldir
1111  8DBE C1           	pop bc
1112  8DBF D1           	pop de
1113  8DC0 E1           	pop hl
1114  8DC1 C9           	ret
1115  8DC2
1116  8DC2              ; *************************************************************************************************************************************************************
1117  8DC2              ;
1118  8DC2              ;	29/04/23
1119  8DC2              ;
1120  8DC2              ;	Store_Amadeus
1121  8DC2              ;
1122  8DC2              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1123  8DC2              ;
1124  8DC2              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1125  8DC2              ;
1126  8DC2              ;	DESTRUYE: HL y BC y DE.
1127  8DC2
1128  8DC2 21 A3 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1129  8DC5 01 3E 00     	ld bc,62
1130  8DC8 ED B0        	ldir
1131  8DCA C9           	ret
1132  8DCB
1133  8DCB              ; -----------------------------------------------------------
1134  8DCB              ;
1135  8DCB              ;	27/04/23
1136  8DCB              ;
1137  8DCB              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1138  8DCB              ;
1139  8DCB              ;	Destruye: HL,BC,DE,A
1140  8DCB
1141  8DCB 21 A3 89     Borra_datos_entidad ld hl,Filas
1142  8DCE 01 3D 00     	ld bc,61
1143  8DD1 AF           	xor a
1144  8DD2 77           	ld (hl),a
1145  8DD3 11 A4 89     	ld de,Filas+1
1146  8DD6 ED B0        	ldir
1147  8DD8 C9           	ret
1148  8DD9
1149  8DD9              ; -----------------------------------------------------------
1150  8DD9
1151  8DD9              ; Teclado.
1152  8DD9
1153  8DD9 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1154  8DDB DB FE        	in a,($fe)
1155  8DDD E6 01        	and $01
1156  8DDF 28 02        	jr z,1f
1157  8DE1 18 F6        	jr Pulsa_ENTER
1158  8DE3 C9           1 ret
1159  8DE4
1160  8DE4              ; **************************************************************************************************
1161  8DE4              ;
1162  8DE4              ; Temporización.
1163  8DE4
1164  8DE4              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1165  8DE4              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1166  8DE4              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1167  8DE4              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1168  8DE4
1169  8DE4              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1170  8DE4              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1171  8DE4              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1172  8DE4
1173  8DE4              ; A partir de $4f61 no hace falta DELAY.
1174  8DE4
1175  8DE4              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1176  8DE4
1177  8DE4 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1178  8DE7 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1179  8DE8 78           	LD A,B
1180  8DE9 A7           	AND A
1181  8DEA 20 FB        	JR NZ,wait
1182  8DEC C9           	RET
1183  8DED
1184  8DED              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1185  8DED              ;
1186  8DED              ;	5/3/23
1187  8DED              ;
1188  8DED              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1189  8DED
1190  8DED              Movimiento_Amadeus
1191  8DED
1192  8DED              ; Disparo.
1193  8DED
1194  8DED 3A 0E 8A     	ld a,(Habilita_disparo_Amadeus)
1195  8DF0 A7           	and a
1196  8DF1 20 02        	jr nz,1F
1197  8DF3 18 15        	jr 2F
1198  8DF5
1199  8DF5 3E F7        1 ld a,$f7													; "5" para disparar.
1200  8DF7 DB FE        	in a,($fe)
1201  8DF9 E6 10        	and $10
1202  8DFB
1203  8DFB F5           	push af
1204  8DFC CC 34 8E     	call z,Genera_disparo
1205  8DFF F1           	pop af
1206  8E00 20 08        	jr nz,2F
1207  8E02
1208  8E02 3A 0E 8A     	ld a,(Habilita_disparo_Amadeus)
1209  8E05 EE 01        	xor 1
1210  8E07 32 0E 8A     	ld (Habilita_disparo_Amadeus),a
1211  8E0A
1212  8E0A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1213  8E0C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1214  8E0E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1215  8E10 CC 8A 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1216  8E13 3E F7        	ld a,$f7
1217  8E15 DB FE        	in a,($fe)
1218  8E17 E6 01        	and $01
1219  8E19 C8           	ret z
1220  8E1A
1221  8E1A 3E F7        	ld a,$f7
1222  8E1C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1223  8E1E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1224  8E20 CC 6C 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1225  8E23 C9           	ret
1226  8E24
1227  8E24              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1228  8E24              ;
1229  8E24              ;	Rutina provisional para que los malotes cagen balas.
1230  8E24
1231  8E24              Detecta_disparo_entidad
1232  8E24
1233  8E24 3A 11 8A     	ld a,(Habilita_disparo_entidad)
1234  8E27 A7           	and a
1235  8E28 C8           	ret z
1236  8E29 3E 7F        	ld a,$7f
1237  8E2B DB FE        	in a,($fe)
1238  8E2D E6 01        	and 1
1239  8E2F C0           	ret nz
1240  8E30 CD 34 8E     	call Genera_disparo
1241  8E33 C9           	ret
1242  8E34
1243  8E34              ; ---------------------------------------------------------------
1244  8E34
1245  8E34              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E34              ; ******************************************************************************************************************************************************************************************
   2+ 8E34              ;
   3+ 8E34              ;   17/04/23
   4+ 8E34              ;
   5+ 8E34              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E34              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E34              ;
   8+ 8E34              ;
   9+ 8E34              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E34              ;
  11+ 8E34              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E34              ;               _ hacen las entidades hacia abajo.
  13+ 8E34              ;
  14+ 8E34              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E34              ;
  16+ 8E34              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E34              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E34              ;
  19+ 8E34              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E34              ;           _ la bala.
  21+ 8E34              ;
  22+ 8E34              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E34              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E34              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E34              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E34              ;           _ en el momento de generarse la bala)).
  27+ 8E34
  28+ 8E34              Genera_disparo
  29+ 8E34
  30+ 8E34              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E34              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E34              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E34              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E34              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E34              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E34              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E34
  38+ 8E34              ; Exclusiones:
  39+ 8E34
  40+ 8E34 3A DB 89         ld a,(Columnas)
  41+ 8E37 47               ld b,a
  42+ 8E38 3A A4 89         ld a,(Columns)
  43+ 8E3B B8               cp b
  44+ 8E3C C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E3D
  46+ 8E3D              ; ----- ----- -----
  47+ 8E3D
  48+ 8E3D 3A D1 89         ld a,(Ctrl_0)
  49+ 8E40 CB 77            bit 6,a
  50+ 8E42 20 06            jr nz,14F
  51+ 8E44
  52+ 8E44 3A AA 89         ld a,(Coordenada_y)
  53+ 8E47 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E49 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E4A
  56+ 8E4A 21 00 80     14 ld hl,Indice_disparo
  57+ 8E4D 3A AB 89         ld a,(CTRL_DESPLZ)
  58+ 8E50 4F               ld c,a
  59+ 8E51 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E53              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E53              ;                                            ""        ""       "f9", B="1"
  62+ 8E53              ;                                            ""        ""       "fb", B="2"
  63+ 8E53              ;                                            ""        ""       "fb", B="3"
  64+ 8E53 A7               and a
  65+ 8E54 28 10            jr z,1F
  66+ 8E56 E6 01            and 1
  67+ 8E58 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E59
  69+ 8E59 79               ld a,c
  70+ 8E5A 16 F9            ld d,$f9
  71+ 8E5C 23           2 inc hl
  72+ 8E5D 23               inc hl
  73+ 8E5E 04               inc b
  74+ 8E5F BA               cp d
  75+ 8E60 28 04            jr z,1F
  76+ 8E62 14               inc d
  77+ 8E63 14               inc d
  78+ 8E64 18 F6            jr 2B
  79+ 8E66
  80+ 8E66 CD 00 8D     1 call Extrae_address
  81+ 8E69 E5               push hl
  82+ 8E6A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E6C DD 21 85 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E70
  85+ 8E70              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E70              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E70
  88+ 8E70 3A D1 89         ld a,(Ctrl_0)
  89+ 8E73 CB 77            bit 6,a
  90+ 8E75 20 04            jr nz,19F
  91+ 8E77
  92+ 8E77 AF               xor a
  93+ 8E78 32 11 8A         ld (Habilita_disparo_entidad),a
  94+ 8E7B
  95+ 8E7B 3A B7 89     19 ld a,(Cuad_objeto)
  96+ 8E7E FE 02            cp 2
  97+ 8E80 38 66            jr c,3F
  98+ 8E82 28 64            jr z,3F
  99+ 8E84
 100+ 8E84              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E84
 102+ 8E84 E6 01            and 1
 103+ 8E86 28 30            jr z,4F
 104+ 8E88
 105+ 8E88              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E88              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E88              ;
 108+ 8E88              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E88              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E88              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E88
 112+ 8E88 2A A5 89     	ld hl,(Posicion_actual)
 113+ 8E8B
 114+ 8E8B              ;   Amadeus o entidad ???.
 115+ 8E8B
 116+ 8E8B 3A D1 89         ld a,(Ctrl_0)
 117+ 8E8E CB 77            bit 6,a
 118+ 8E90 28 0A            jr z,8F
 119+ 8E92
 120+ 8E92              ; 	Dispara Amadeus.
 121+ 8E92
 122+ 8E92 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E94 CD 01 96         call PreviousScan
 124+ 8E97 CD 01 96         call PreviousScan
 125+ 8E9A
 126+ 8E9A              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E9A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E9A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E9A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E9A
 131+ 8E9A 18 11            jr 10F
 132+ 8E9C
 133+ 8E9C              ; 	Dispara Entidad.
 134+ 8E9C
 135+ 8E9C 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E9F              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E9F
 138+ 8E9F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E9F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E9F
 141+ 8E9F C5               push bc
 142+ 8EA0 06 10            ld b,16
 143+ 8EA2 CD F2 95     9 call NextScan
 144+ 8EA5 10 FB            djnz 9B
 145+ 8EA7 C1               pop bc
 146+ 8EA8 CD 12 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EAB 18 06            jr 17F
 148+ 8EAD
 149+ 8EAD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EAD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EAD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EAD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EAD
 154+ 8EAD CD 12 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EB0 CD 87 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EB3              ;                                                      ; _al generar el disparo.
 157+ 8EB3
 158+ 8EB3              ; 	LLegados a este punto tendremos:
 159+ 8EB3              ;
 160+ 8EB3              ;       Puntero_objeto_disparo en IY.
 161+ 8EB3              ;       Rutinas_de_impresion en IX.
 162+ 8EB3              ;       Puntero_de_impresion en HL.
 163+ 8EB3              ;       Impacto/Dirección en BC.
 164+ 8EB3
 165+ 8EB3 CD 1A 8F     17 call Almacena_disparo
 166+ 8EB6 18 52            jr 6F                                             ; RET.
 167+ 8EB8
 168+ 8EB8              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EB8              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EB8              ;
 171+ 8EB8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EB8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EB8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EB8
 175+ 8EB8 2A A5 89     4 ld hl,(Posicion_actual)
 176+ 8EBB
 177+ 8EBB              ;   Amadeus o entidad ???.
 178+ 8EBB
 179+ 8EBB 3A D1 89         ld a,(Ctrl_0)
 180+ 8EBE CB 77            bit 6,a
 181+ 8EC0 28 0A            jr z,11F
 182+ 8EC2
 183+ 8EC2              ; 	Dispara Amadeus.
 184+ 8EC2
 185+ 8EC2 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EC4 CD 01 96         call PreviousScan
 187+ 8EC7 CD 01 96         call PreviousScan
 188+ 8ECA
 189+ 8ECA              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8ECA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8ECA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8ECA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8ECA
 194+ 8ECA 18 11            jr 13F
 195+ 8ECC
 196+ 8ECC              ; 	Dispara Entidad.
 197+ 8ECC
 198+ 8ECC 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8ECF              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8ECF
 201+ 8ECF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8ECF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8ECF
 204+ 8ECF C5               push bc
 205+ 8ED0 06 10            ld b,16
 206+ 8ED2 CD F2 95     12 call NextScan
 207+ 8ED5 10 FB            djnz 12B
 208+ 8ED7 C1               pop bc
 209+ 8ED8
 210+ 8ED8 CD 0B 8F         call Ajusta_disparo_parte_derecha
 211+ 8EDB 18 06            jr 18F
 212+ 8EDD
 213+ 8EDD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8EDD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8EDD              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8EDD              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8EDD
 218+ 8EDD CD 0B 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8EE0 CD 87 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EE3              ;                                                       ; _al generar el disparo.
 221+ 8EE3
 222+ 8EE3              ; LLegados a este punto tendremos:
 223+ 8EE3              ;
 224+ 8EE3              ;       Puntero_objeto_disparo en IY.
 225+ 8EE3              ;       Rutinas_de_impresion en IX.
 226+ 8EE3              ;       Puntero_de_impresion en HL.
 227+ 8EE3              ;       Impacto/Dirección en BC.
 228+ 8EE3
 229+ 8EE3 CD 1A 8F     18 call Almacena_disparo
 230+ 8EE6 18 22            jr 6F                                               ; RET.
 231+ 8EE8
 232+ 8EE8              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EE8
 234+ 8EE8 28 11        3 jr z,5F
 235+ 8EEA
 236+ 8EEA              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EEA              ;
 238+ 8EEA              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EEA              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EEA              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EEA              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EEA
 243+ 8EEA              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EEA              ;	   ""        ""       "f9", B="1"
 245+ 8EEA              ;	   ""        ""       "fb", B="2"
 246+ 8EEA              ; 	   ""        ""       "fb", B="3"
 247+ 8EEA
 248+ 8EEA 2A A5 89     	ld hl,(Posicion_actual)
 249+ 8EED CD F2 95     	call NextScan
 250+ 8EF0
 251+ 8EF0              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EF0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EF0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EF0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EF0
 256+ 8EF0 CD 12 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EF3
 258+ 8EF3              ; 	No se produce impacto. B="$80"
 259+ 8EF3              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EF3
 261+ 8EF3 01 80 80         ld bc,$8080
 262+ 8EF6
 263+ 8EF6              ; 	LLegados a este punto tendremos:
 264+ 8EF6              ;
 265+ 8EF6              ;       Puntero_objeto_disparo en IY.
 266+ 8EF6              ;       Rutinas_de_impresion en IX.
 267+ 8EF6              ;       Puntero_de_impresion en HL.
 268+ 8EF6              ;       Impacto/Dirección en BC.
 269+ 8EF6
 270+ 8EF6 CD 1A 8F         call Almacena_disparo
 271+ 8EF9 18 0F            jr 6F                                           ; RET.
 272+ 8EFB
 273+ 8EFB              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EFB              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EFB              ;
 276+ 8EFB              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EFB              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EFB              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EFB              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EFB
 281+ 8EFB 2A A5 89     5 ld hl,(Posicion_actual)
 282+ 8EFE CD F2 95     	call NextScan
 283+ 8F01
 284+ 8F01              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F01              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F01              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F01              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F01
 289+ 8F01 CD 0B 8F         call Ajusta_disparo_parte_derecha
 290+ 8F04
 291+ 8F04              ; 	No se produce impacto. B="$80"
 292+ 8F04              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F04
 294+ 8F04 01 80 80     15 ld bc,$8080
 295+ 8F07
 296+ 8F07              ; 	LLegados a este punto tendremos:
 297+ 8F07              ;
 298+ 8F07              ;       Puntero_objeto_disparo en IY.
 299+ 8F07              ;       Rutinas_de_impresion en IX.
 300+ 8F07              ;       Puntero_de_impresion en HL.
 301+ 8F07              ;       Impacto/Dirección en BC.
 302+ 8F07
 303+ 8F07 CD 1A 8F         call Almacena_disparo
 304+ 8F0A
 305+ 8F0A C9           6 ret
 306+ 8F0B
 307+ 8F0B              ; ----------------------------------------------------------------
 308+ 8F0B              ;
 309+ 8F0B              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F0B              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F0B              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F0B
 313+ 8F0B 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F0C FE 02            cp 2
 315+ 8F0E 38 01            jr c,1F
 316+ 8F10 23               inc hl
 317+ 8F11 C9           1 ret
 318+ 8F12
 319+ 8F12 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F13 FE 01        	cp 1
 321+ 8F15 20 01        	jr nz,1F
 322+ 8F17 2B           	dec hl
 323+ 8F18 2B           1 dec hl
 324+ 8F19 C9               ret
 325+ 8F1A
 326+ 8F1A              ; ----------------------------------------------------------------
 327+ 8F1A              ;
 328+ 8F1A              ;   25/02/23
 329+ 8F1A              ;
 330+ 8F1A              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F1A              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F1A              ;
 333+ 8F1A              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F1A              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F1A
 336+ 8F1A              Almacena_disparo
 337+ 8F1A
 338+ 8F1A E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F1B F1               pop af
 340+ 8F1C 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F1D
 342+ 8F1D 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F1E E6 01            and 1
 344+ 8F20 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F22              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F22              ; 	Dispara AMADEUS.
 347+ 8F22
 348+ 8F22              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F22              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F22              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F22              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F22
 353+ 8F22 C5               push bc
 354+ 8F23 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F26 2A FD 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F29 A7               and a
 357+ 8F2A ED 42            sbc hl,bc
 358+ 8F2C CC C9 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F2F C1               pop bc
 360+ 8F30 28 54            jr z,4F
 361+ 8F32
 362+ 8F32 2A FD 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F35 23               inc hl
 364+ 8F36 23               inc hl
 365+ 8F37 22 FD 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F3A              ;                                                   ; _ Disparo_(+1).
 367+ 8F3A 18 18            jr 2F
 368+ 8F3C
 369+ 8F3C              ; Dispara una entidad.
 370+ 8F3C
 371+ 8F3C C5           1 push bc
 372+ 8F3D 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F40 2A FB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F43 A7               and a
 375+ 8F44 ED 42            sbc hl,bc
 376+ 8F46 CC C2 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F49 C1               pop bc
 378+ 8F4A 28 3A            jr z,4F
 379+ 8F4C
 380+ 8F4C 2A FB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F4F 23               inc hl
 382+ 8F50 23               inc hl
 383+ 8F51 22 FB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F54              ;                                                   ; _ Disparo_(+1).
 385+ 8F54 CD 00 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F57              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F57              ;
 388+ 8F57              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F57              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F57              ;                                                     Puntero_de_impresion en HL.
 391+ 8F57              ;                                                     Impacto/Dirección en BC.
 392+ 8F57
 393+ 8F57 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F58 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F59 23               inc hl                                          ; _ al siguiente.
 396+ 8F5A A7               and a
 397+ 8F5B 20 C0            jr nz,3B
 398+ 8F5D
 399+ 8F5D 08               ex af,af
 400+ 8F5E ED 73 F2 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F62 F9               ld sp,hl
 402+ 8F63
 403+ 8F63 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F65 F5               push af                                         ; Puntero de impresión.
 405+ 8F66 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F68 C5               push bc                                         ; Control.
 407+ 8F69
 408+ 8F69 ED 7B F2 89      ld sp,(Stack)
 409+ 8F6D
 410+ 8F6D              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F6D
 412+ 8F6D 21 E1 89     	ld hl,Ctrl_1
 413+ 8F70 CB C6        	set 0,(hl)
 414+ 8F72
 415+ 8F72 DD E5        	push ix
 416+ 8F74 E1               pop hl
 417+ 8F75 F5               push af
 418+ 8F76 DD E1            pop ix
 419+ 8F78
 420+ 8F78 CD A0 7F     	call Guarda_foto_registros
 421+ 8F7B
 422+ 8F7B 21 E1 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F7E CB 86        	res 0,(hl)
 424+ 8F80
 425+ 8F80              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F80              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F80
 428+ 8F80 CD C9 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F83 CD C2 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F86
 431+ 8F86 C9           4 ret
 432+ 8F87
 433+ 8F87              ; ----------------------------------------------------------------
 434+ 8F87              ;
 435+ 8F87              ;   4/3/23
 436+ 8F87              ;
 437+ 8F87              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F87              ;   _ al generarse el disparo.
 439+ 8F87              ;
 440+ 8F87              ;       "$80" ..... No se produce colisión.
 441+ 8F87              ;       "$81" ..... Se produce colisión.
 442+ 8F87
 443+ 8F87              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F87              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F87
 446+ 8F87
 447+ 8F87 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F89 E5               push hl                                        ; Puntero de impresión.
 449+ 8F8A
 450+ 8F8A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F8C CD A8 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F8F
 453+ 8F8F 7B               ld a,e
 454+ 8F90 E6 01            and 1
 455+ 8F92 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F94
 457+ 8F94 E1               pop hl
 458+ 8F95 E5               push hl
 459+ 8F96 CD F2 95         call NextScan
 460+ 8F99
 461+ 8F99 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F9A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F9C 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F9E              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F9E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FA0 CD A8 8F         call Bucle_2
 467+ 8FA3
 468+ 8FA3 43           2 ld b,e
 469+ 8FA4 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FA5 FD E1            pop iy
 471+ 8FA7 C9               ret
 472+ 8FA8
 473+ 8FA8               ; ---------- ----------
 474+ 8FA8
 475+ 8FA8 06 02        Bucle_2 ld b,2
 476+ 8FAA FD 7E 00     2 ld a,(iy)
 477+ 8FAD A6               and (hl)
 478+ 8FAE 28 02            jr z,1F
 479+ 8FB0 1E 81            ld e,$81
 480+ 8FB2 23           1 inc hl
 481+ 8FB3 FD 23            inc iy
 482+ 8FB5 10 F3            djnz 2B
 483+ 8FB7 C9               ret
 484+ 8FB8
 485+ 8FB8              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FB8              ;
 487+ 8FB8              ;   11/04/23
 488+ 8FB8              ;
 489+ 8FB8              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FB8              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FB8              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FB8              ;
 493+ 8FB8              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FB8
 495+ 8FB8              Compara_coordenadas_X
 496+ 8FB8
 497+ 8FB8              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FB8              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FB8
 500+ 8FB8              ; Preparamos registros:
 501+ 8FB8
 502+ 8FB8 21 A9 89         ld hl,Filas+6
 503+ 8FBB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FBC 23               inc hl
 505+ 8FBD 23               inc hl
 506+ 8FBE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FBF 43               ld b,e
 508+ 8FC0 21 B7 89         ld hl,Filas+20
 509+ 8FC3 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FC4 21 07 8A         ld hl,Coordenadas_X_Entidad
 511+ 8FC7 CD DB 91         call Guarda_coordenadas_X
 512+ 8FCA
 513+ 8FCA              ; Preparamos registros:
 514+ 8FCA
 515+ 8FCA 21 92 85         ld hl,Amadeus_db+6
 516+ 8FCD 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FCE 23               inc hl
 518+ 8FCF 23               inc hl
 519+ 8FD0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FD1 7B               ld a,e
 521+ 8FD2 08               ex af,af'
 522+ 8FD3 21 A0 85         ld hl,Amadeus_db+20
 523+ 8FD6 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FD7 21 04 8A         ld hl,Coordenadas_X_Amadeus
 525+ 8FDA CD DB 91         call Guarda_coordenadas_X
 526+ 8FDD
 527+ 8FDD              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FDD              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FDD
 530+ 8FDD 04               inc b
 531+ 8FDE 05               dec b
 532+ 8FDF 28 04            jr z,1F
 533+ 8FE1 06 03            ld b,3
 534+ 8FE3 18 02            jr 2F
 535+ 8FE5 06 02        1 ld b,2
 536+ 8FE7 08           2 ex af,af'
 537+ 8FE8 3C               inc a
 538+ 8FE9 3D               dec a
 539+ 8FEA 28 04            jr z,5F
 540+ 8FEC 0E 03            ld c,3
 541+ 8FEE 18 02            jr 6F
 542+ 8FF0 0E 02        5 ld c,2
 543+ 8FF2 79           6 ld a,c
 544+ 8FF3 08               ex af,af'
 545+ 8FF4 11 07 8A         ld de,Coordenadas_X_Entidad
 546+ 8FF7 1A           4 ld a,(de)
 547+ 8FF8 21 04 8A         ld hl,Coordenadas_X_Amadeus
 548+ 8FFB BE           3 cp (hl)
 549+ 8FFC 28 0E            jr z,7F
 550+ 8FFE 23               inc hl
 551+ 8FFF 0D               dec c
 552+ 9000 20 F9            jr nz,3B
 553+ 9002 13               inc de
 554+ 9003 08               ex af,af'
 555+ 9004 4F               ld c,a
 556+ 9005 08               ex af,af'
 557+ 9006 10 EF            djnz 4B
 558+ 9008
 559+ 9008              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 9008
 561+ 9008 CD 1A 92     8 call Limpia_Coordenadas_X
 562+ 900B C9               ret
 563+ 900C
 564+ 900C              7
 565+ 900C 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 900E 32 BC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9011 21 FF 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 9014 CB D6            set 2,(hl)
 569+ 9016 18 F0            jr 8B
 570+ 9018
 571+ 9018              ; -----------------------------------------------------------------------
 572+ 9018              ;
 573+ 9018              ;   17/04/23
 574+ 9018              ;
 575+ 9018
 576+ 9018              Detecta_colision_nave_entidad
 577+ 9018
 578+ 9018              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9018
 580+ 9018 2A A5 89         ld hl,(Posicion_actual)
 581+ 901B CD 57 95         call Calcula_puntero_de_impresion
 582+ 901E
 583+ 901E              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 901E              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 901E
 586+ 901E DD E5            push ix
 587+ 9020 E1               pop hl
 588+ 9021 E5               push hl
 589+ 9022
 590+ 9022              ; ----- ----- -----
 591+ 9022 1E 00            ld e,0                                         ; Indica impacto.
 592+ 9024 06 0A            ld b,10
 593+ 9026 CD 56 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9029 7B               ld a,e
 595+ 902A FE 05            cp 5
 596+ 902C 38 0E            jr c,3F
 597+ 902E
 598+ 902E              ; LLegados a este punto:
 599+ 902E              ;
 600+ 902E              ;   HAY COLISIÓN !!!!!.
 601+ 902E              ;
 602+ 902E              ;   .db (Impacto) de Amadeus a "1".
 603+ 902E              ;   SET el bit3 de (Impacto2).
 604+ 902E              ;
 605+ 902E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 902E
 607+ 902E 21 A5 85         ld hl,Amadeus_db+25
 608+ 9031 36 01            ld (hl),1
 609+ 9033 21 FF 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 9036 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9038 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 903A 18 18            jr 1F
 613+ 903C
 614+ 903C              ; -----
 615+ 903C
 616+ 903C E1           3 pop hl
 617+ 903D CD F2 95         call NextScan
 618+ 9040 E5               push hl
 619+ 9041 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9042 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 9044 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 9046 30 0C            jr nc,1F
 623+ 9048              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9048 10 DC            djnz 2B
 625+ 904A
 626+ 904A              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 904A
 628+ 904A              ; LLegados a este punto:
 629+ 904A              ;
 630+ 904A              ;   NO HAY COLISIÓN !!!!!.
 631+ 904A              ;
 632+ 904A              ;   .db (Impacto) de Amadeus a "0".
 633+ 904A              ;   RES el bit2 de (Impacto2).
 634+ 904A              ;
 635+ 904A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 904A              ;   Lo colocamos a "0".
 637+ 904A
 638+ 904A 21 FF 89         ld hl,Impacto2
 639+ 904D CB 96            res 2,(hl)
 640+ 904F 2A 00 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9052 36 00            ld (hl),0
 642+ 9054
 643+ 9054 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 9055 C9               ret
 645+ 9056
 646+ 9056               ; ---------- ----------
 647+ 9056
 648+ 9056 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9057 3A A4 89         ld a,(Columns)
 650+ 905A 47               ld b,a
 651+ 905B FD 7E 00     2 ld a,(iy)
 652+ 905E BE               cp (hl)
 653+ 905F 28 01            jr z,1F
 654+ 9061
 655+ 9061 1C               inc e
 656+ 9062
 657+ 9062 23           1 inc hl
 658+ 9063 FD 23            inc iy
 659+ 9065 10 F4            djnz 2B
 660+ 9067 C1               pop bc
 661+ 9068 C9               ret
 662+ 9069
 663+ 9069              ; -------------------------------------------------------------------------------------------------------------
 664+ 9069              ;
 665+ 9069              ;   13/03/23
 666+ 9069              ;
 667+ 9069              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9069              ;
 669+ 9069              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9069
 671+ 9069 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 906C 7E               ld a,(hl)
 673+ 906D A7               and a
 674+ 906E C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 906F
 676+ 906F 44               ld b,h
 677+ 9070 4D               ld c,l
 678+ 9071 2A F8 89         ld hl,(Stack_snapshot_disparos)
 679+ 9074 E5               push hl
 680+ 9075 A7               and a
 681+ 9076 ED 42            sbc hl,bc
 682+ 9078 E5               push hl
 683+ 9079 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 907A
 685+ 907A E1               pop hl
 686+ 907B 54               ld d,h
 687+ 907C 5D               ld e,l
 688+ 907D 1B               dec de
 689+ 907E ED B8            lddr                                                ; Limpiamos.
 690+ 9080
 691+ 9080 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 9083 22 F8 89         ld (Stack_snapshot_disparos),hl
 693+ 9086
 694+ 9086 C9               ret
 695+ 9087
 696+ 9087              ; -------------------------------------------------------------------------------------------------------------
 697+ 9087              ;
 698+ 9087              ;   28/03/23
 699+ 9087              ;
 700+ 9087
 701+ 9087 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 908A 2A FD 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 908D
 704+ 908D CD 00 8D     2 call Extrae_address
 705+ 9090 7E               ld a,(hl)
 706+ 9091 A7               and a
 707+ 9092 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 9094
 709+ 9094              ; ----- ----- ----- ----- ----- -----
 710+ 9094
 711+ 9094 C5               push bc
 712+ 9095 CD 51 91         call foto_disparo_a_borrar
 713+ 9098
 714+ 9098              ; Existe colisión con este disparo???
 715+ 9098
 716+ 9098 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 9099 7E               ld a,(hl)
 718+ 909A 2B               dec hl
 719+ 909B E6 01            and 1
 720+ 909D 28 1D            jr z,9F
 721+ 909F
 722+ 909F              ;   En este punto:
 723+ 909F              ;
 724+ 909F              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 909F              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 909F              ;   _con la entidad).
 727+ 909F              ;
 728+ 909F              ;   Disparo_2A defw 0                                ; Control.
 729+ 909F              ;    defw 0                                          ; Puntero objeto.
 730+ 909F              ;    defw 0                                          ; Puntero de impresión.
 731+ 909F              ;    defw 0                                          ; Rutina de impresión.
 732+ 909F
 733+ 909F E5               push hl
 734+ 90A0
 735+ 90A0 06 04            ld b,4
 736+ 90A2 23           19 inc hl
 737+ 90A3 10 FD            djnz 19B
 738+ 90A5
 739+ 90A5 CD 00 8D         call Extrae_address
 740+ 90A8 CD 49 9C         call Genera_coordenadas_disparo
 741+ 90AB
 742+ 90AB              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90AB
 744+ 90AB 21 02 8A         ld hl,Coordenadas_disparo_certero
 745+ 90AE 72               ld (hl),d
 746+ 90AF 23               inc hl
 747+ 90B0 73               ld (hl),e
 748+ 90B1
 749+ 90B1              ; Elimino el disparo de la base de datos.
 750+ 90B1
 751+ 90B1 E1               pop hl
 752+ 90B2 CD D0 91         call Elimina_disparo_de_base_de_datos
 753+ 90B5 21 FF 89         ld hl,Impacto2
 754+ 90B8 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90BA
 756+ 90BA 18 06            jr 11F
 757+ 90BC
 758+ 90BC CD 7A 91     9 call Mueve_disparo
 759+ 90BF CD 51 91         call foto_disparo_a_borrar
 760+ 90C2
 761+ 90C2 C1           11 pop bc
 762+ 90C3 18 04            jr 7F
 763+ 90C5
 764+ 90C5              ; ----- ----- ----- ----- ----- -----
 765+ 90C5
 766+ 90C5 ED 42        1 sbc hl,bc
 767+ 90C7 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90C9 2A FD 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90CC 23               inc hl
 770+ 90CD 23               inc hl
 771+ 90CE 22 FD 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90D1 18 BA            jr 2B
 773+ 90D3 CD C9 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90D6
 775+ 90D6 01 72 85         ld bc,Disparo_11
 776+ 90D9 2A FB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90DC
 778+ 90DC CD 00 8D     5 call Extrae_address
 779+ 90DF 7E               ld a,(hl)
 780+ 90E0 A7               and a
 781+ 90E1 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90E3
 783+ 90E3              ; ----- ----- ----- ----- ----- -----
 784+ 90E3
 785+ 90E3 C5               push bc
 786+ 90E4 CD 51 91         call foto_disparo_a_borrar
 787+ 90E7
 788+ 90E7              ; Existe colisión con este disparo???
 789+ 90E7
 790+ 90E7 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90E8 7E               ld a,(hl)
 792+ 90E9 2B               dec hl
 793+ 90EA E6 01            and 1
 794+ 90EC 28 48            jr z,10F
 795+ 90EE
 796+ 90EE              ; La colisión se produce con Amadeus???
 797+ 90EE              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90EE
 799+ 90EE E5               push hl
 800+ 90EF
 801+ 90EF 06 04            ld b,4
 802+ 90F1 23           16 inc hl
 803+ 90F2 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90F4 CD 00 8D         call Extrae_address
 805+ 90F7 CD 49 9C         call Genera_coordenadas_disparo
 806+ 90FA
 807+ 90FA 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90FB FE 16            cp $16
 809+ 90FD 38 22            jr c,15F
 810+ 90FF
 811+ 90FF              ; (Colisiones en filas 16 y 17).
 812+ 90FF
 813+ 90FF D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9100
 815+ 9100              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9100
 817+ 9100 21 92 85         ld hl,Amadeus_db+6
 818+ 9103 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 9104 23               inc hl
 820+ 9105 23               inc hl
 821+ 9106 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9107 21 A0 85         ld hl,Amadeus_db+20
 823+ 910A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 910B 21 04 8A         ld hl,Coordenadas_X_Amadeus
 825+ 910E CD DB 91         call Guarda_coordenadas_X
 826+ 9111
 827+ 9111 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9112
 829+ 9112              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9112
 831+ 9112 06 03            ld b,3
 832+ 9114 21 04 8A         ld hl,Coordenadas_X_Amadeus
 833+ 9117 7E           18 ld a,(hl)
 834+ 9118 BA               cp d
 835+ 9119 20 03            jr nz,17F
 836+ 911B
 837+ 911B              ; Colisión Amadeus !!!!!!!!!!
 838+ 911B
 839+ 911B E1               pop hl
 840+ 911C 18 09            jr 14F
 841+ 911E
 842+ 911E 23           17 inc hl
 843+ 911F 10 F6            djnz 18B
 844+ 9121
 845+ 9121              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9121              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9121
 848+ 9121 E1           15 pop hl
 849+ 9122 23               inc hl
 850+ 9123 35               dec (hl)
 851+ 9124 2B               dec hl
 852+ 9125 18 0F            jr 10F
 853+ 9127
 854+ 9127              ; -----------------------debug
 855+ 9127
 856+ 9127              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9127              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9127
 859+ 9127 E5           14 push hl
 860+ 9128 CD D0 91         call Elimina_disparo_de_base_de_datos
 861+ 912B 21 FF 89         ld hl,Impacto2
 862+ 912E CB CE            set 1,(hl)
 863+ 9130 CD 1A 92         call Limpia_Coordenadas_X
 864+ 9133
 865+ 9133 E1               pop hl
 866+ 9134 18 06            jr 12F
 867+ 9136
 868+ 9136 CD 7A 91     10 call Mueve_disparo
 869+ 9139 CD 51 91         call foto_disparo_a_borrar
 870+ 913C C1           12 pop bc
 871+ 913D
 872+ 913D 18 04            jr 8F
 873+ 913F
 874+ 913F              ; ----- ----- ----- ----- ----- -----
 875+ 913F
 876+ 913F ED 42        4 sbc hl,bc
 877+ 9141 28 0A            jr z,6F
 878+ 9143
 879+ 9143 2A FB 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9146 23               inc hl
 881+ 9147 23               inc hl
 882+ 9148 22 FB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 914B 18 8F            jr 5B
 884+ 914D
 885+ 914D CD C2 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9150 C9               ret
 887+ 9151
 888+ 9151              ; ------------------------------------------------------------------
 889+ 9151
 890+ 9151              foto_disparo_a_borrar
 891+ 9151
 892+ 9151 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9152 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9153 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9154
 896+ 9154 E5               push hl
 897+ 9155 23               inc hl
 898+ 9156 23               inc hl
 899+ 9157 ED 73 F2 89      ld (Stack),sp
 900+ 915B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 915C FD E1            pop iy
 902+ 915E DD E1            pop ix
 903+ 9160 E1               pop hl
 904+ 9161 ED 7B F2 89      ld sp,(Stack)
 905+ 9165 3A E1 89         ld a,(Ctrl_1)
 906+ 9168 CB C7            set 0,a
 907+ 916A 32 E1 89         ld (Ctrl_1),a
 908+ 916D CD A0 7F         call Guarda_foto_registros
 909+ 9170 3A E1 89         ld a,(Ctrl_1)
 910+ 9173 CB 87            res 0,a
 911+ 9175 32 E1 89         ld (Ctrl_1),a
 912+ 9178 E1               pop hl
 913+ 9179 C9               ret
 914+ 917A
 915+ 917A E5           Mueve_disparo push hl
 916+ 917B 7E               ld a,(hl)
 917+ 917C 06 04            ld b,4
 918+ 917E 23           1 inc hl
 919+ 917F 10 FD            djnz 1B
 920+ 9181
 921+ 9181              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9181
 923+ 9181 CD 00 8D         call Extrae_address
 924+ 9184
 925+ 9184 E6 01            and 1
 926+ 9186 28 2E            jr z,2F
 927+ 9188
 928+ 9188              ; Disparo hacia arriba, (Amadeus).
 929+ 9188
 930+ 9188              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9188              ; _ de la dificultad.
 932+ 9188
 933+ 9188 CD 01 96         call PreviousScan
 934+ 918B CD 01 96         call PreviousScan
 935+ 918E CD 01 96         call PreviousScan
 936+ 9191 CD 01 96         call PreviousScan
 937+ 9194
 938+ 9194              ; Detecta si el disparo de Amadeus sale de pantalla:
 939+ 9194
 940+ 9194 7C               ld a,h
 941+ 9195 FE 40            cp $40
 942+ 9197 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 943+ 9199
 944+ 9199              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 945+ 9199
 946+ 9199 EB               ex de,hl
 947+ 919A 06 04            ld b,4
 948+ 919C 2B           6 dec hl
 949+ 919D 10 FD            djnz 6B
 950+ 919F
 951+ 919F CD D0 91         call Elimina_disparo_de_base_de_datos
 952+ 91A2 E1               pop hl
 953+ 91A3 18 10            jr 7F
 954+ 91A5
 955+ 91A5              ; Se ha desplazado la bala, compruebo colisión.
 956+ 91A5
 957+ 91A5 D5           3 push de
 958+ 91A6 C5               push bc
 959+ 91A7
 960+ 91A7 CD 87 8F         call Comprueba_Colision
 961+ 91AA
 962+ 91AA              ; B="$80", no hay colisión. B="$81", existe colisión.
 963+ 91AA
 964+ 91AA 78               ld a,b
 965+ 91AB
 966+ 91AB C1               pop bc
 967+ 91AC D1               pop de
 968+ 91AD
 969+ 91AD EB               ex de,hl
 970+ 91AE
 971+ 91AE 73               ld (hl),e
 972+ 91AF 23               inc hl
 973+ 91B0 72               ld (hl),d
 974+ 91B1
 975+ 91B1 E1           4 pop hl
 976+ 91B2 23               inc hl
 977+ 91B3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 978+ 91B4 2B               dec hl
 979+ 91B5 C9           7 ret
 980+ 91B6
 981+ 91B6              ; Disparo hacia abajo, (Entidad).
 982+ 91B6
 983+ 91B6              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 984+ 91B6              ;! _ de la dificultad.
 985+ 91B6
 986+ 91B6 CD F2 95     2 call NextScan
 987+ 91B9 CD F2 95         call NextScan
 988+ 91BC CD F2 95         call NextScan
 989+ 91BF              ;    call NextScan
 990+ 91BF
 991+ 91BF              ; Detecta si el disparo de la entidad sale de la pantalla.
 992+ 91BF
 993+ 91BF 7C               ld a,h
 994+ 91C0 FE 58            cp $58
 995+ 91C2 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 996+ 91C4
 997+ 91C4 EB               ex de,hl
 998+ 91C5 06 04            ld b,4
 999+ 91C7 2B           5 dec hl
1000+ 91C8 10 FD            djnz 5B
1001+ 91CA
1002+ 91CA CD D0 91         call Elimina_disparo_de_base_de_datos
1003+ 91CD E1               pop hl
1004+ 91CE 18 E5            jr 7B
1005+ 91D0
1006+ 91D0              ; HL apunta al primer byte de la base de datos del disparo.
1007+ 91D0
1008+ 91D0 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1009+ 91D3 AF               xor a
1010+ 91D4 77               ld (hl),a
1011+ 91D5 54               ld d,h
1012+ 91D6 5D               ld e,l
1013+ 91D7 13               inc de
1014+ 91D8 ED B0            ldir
1015+ 91DA C9               ret
1016+ 91DB
1017+ 91DB              ; -----------------------------------------------------------------
1018+ 91DB              ;
1019+ 91DB              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1020+ 91DB              ;
1021+ 91DB              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1022+ 91DB              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1023+ 91DB              ;
1024+ 91DB              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1025+ 91DB              ;
1026+ 91DB              ;   INPUTS:
1027+ 91DB              ;
1028+ 91DB              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1029+ 91DB              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1030+ 91DB              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1031+ 91DB
1032+ 91DB              ;   MODIFICA: A, HL, DE y C
1033+ 91DB
1034+ 91DB 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1035+ 91DC 79               ld a,c
1036+ 91DD E6 01            and 1
1037+ 91DF 20 03            jr nz,1F
1038+ 91E1 14               inc d
1039+ 91E2 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1040+ 91E4
1041+ 91E4              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1042+ 91E4              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1043+ 91E4
1044+ 91E4 15           1 dec d
1045+ 91E5 23           2 inc hl
1046+ 91E6 72               ld (hl),d
1047+ 91E7
1048+ 91E7 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1049+ 91E8 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1050+ 91E9 C8               ret z
1051+ 91EA
1052+ 91EA AF               xor a
1053+ 91EB 5F               ld e,a
1054+ 91EC 18 ED            jr Guarda_coordenadas_X
1055+ 91EE
1056+ 91EE              ; -----------------------------------------------------------------
1057+ 91EE              ;
1058+ 91EE              ;   12/04/23
1059+ 91EE              ;
1060+ 91EE
1061+ 91EE 3A FF 89     Selector_de_impactos ld a,(Impacto2)
1062+ 91F1 A7               and a
1063+ 91F2 C8               ret z
1064+ 91F3
1065+ 91F3 FE 04            cp 4
1066+ 91F5 20 09            jr nz,1F
1067+ 91F7
1068+ 91F7
1069+ 91F7              ; La colisión se produce por contacto entre Amadeus y una entidad.
1070+ 91F7
1071+ 91F7 CD 18 90         call Detecta_colision_nave_entidad
1072+ 91FA
1073+ 91FA 21 FF 89         ld hl,Impacto2
1074+ 91FD CB 5E            bit 3,(hl)
1075+ 91FF C0               ret nz                                               ; Existe colisión, RET.
1076+ 9200
1077+ 9200              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1078+ 9200              ; Primero analizamos si algún disparo impacta en Amadeus.
1079+ 9200
1080+ 9200 21 FF 89     1 ld hl,Impacto2
1081+ 9203 CB 4E            bit 1,(hl)
1082+ 9205 28 07            jr z,2F
1083+ 9207
1084+ 9207 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1085+ 920A 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1086+ 920C 18 0B            jr 3F
1087+ 920E
1088+ 920E 21 FF 89     2 ld hl,Impacto2
1089+ 9211 CB 46            bit 0,(hl)
1090+ 9213 C8               ret z
1091+ 9214
1092+ 9214              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1093+ 9214
1094+ 9214 21 E1 89         ld hl,Ctrl_1
1095+ 9217 CB D6            set 2,(hl)
1096+ 9219
1097+ 9219 C9           3 ret
1098+ 921A
1099+ 921A              ; -----------------------------------------------------------------
1100+ 921A              ;
1101+ 921A              ;   16/04/23
1102+ 921A              ;
1103+ 921A
1104+ 921A AF           Limpia_Coordenadas_X xor a
1105+ 921B 06 06            ld b,6
1106+ 921D 21 04 8A         ld hl,Coordenadas_X_Amadeus
1107+ 9220 77           1 ld (hl),a
1108+ 9221 23               inc hl
1109+ 9222 10 FC            djnz 1B
1110+ 9224 C9               ret
1111+ 9225
1112+ 9225              ; -----------------------------------------------------------------
1113+ 9225              ;
1114+ 9225              ;   25/04/23
1115+ 9225              ;
1116+ 9225
1117+ 9225              Determina_resultado_comparativa
1118+ 9225
1119+ 9225              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1120+ 9225              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1121+ 9225              ;
1122+ 9225              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1123+ 9225              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1124+ 9225              ;
1125+ 9225              ;   SBC HL,DE
1126+ 9225
1127+ 9225              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1128+ 9225              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1129+ 9225
1130+ 9225              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1131+ 9225              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1132+ 9225
1133+ 9225
1134+ 9225 3A B7 89         ld a,(Cuad_objeto)
1135+ 9228 FE 02            cp 2
1136+ 922A 28 26            jr z,2F
1137+ 922C 38 24            jr c,2F
1138+ 922E
1139+ 922E              ; Cuadrantes 3º y 4º
1140+ 922E
1141+ 922E E6 01            and 1
1142+ 9230 28 10            jr z,4F
1143+ 9232
1144+ 9232              ; Cuadrante 3º
1145+ 9232
1146+ 9232 7C               ld a,h
1147+ 9233 06 00            ld b,0
1148+ 9235
1149+ 9235 CD C0 92         call Compara_cositas_H3
1150+ 9238
1151+ 9238 04               inc b
1152+ 9239 05               dec b
1153+ 923A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1154+ 923B
1155+ 923B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1156+ 923C 06 00            ld b,0
1157+ 923E
1158+ 923E CD D2 92         call Compara_cositas_L3
1159+ 9241 C9               ret
1160+ 9242
1161+ 9242              ; Cuadrante 4º
1162+ 9242
1163+ 9242 7C           4 ld a,h
1164+ 9243 06 00            ld b,0
1165+ 9245
1166+ 9245 CD E4 92         call Compara_cositas_H4
1167+ 9248
1168+ 9248 04               inc b
1169+ 9249 05               dec b
1170+ 924A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1171+ 924B
1172+ 924B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1173+ 924C 06 00            ld b,0
1174+ 924E
1175+ 924E CD FA 92         call Compara_cositas_L4
1176+ 9251 C9               ret
1177+ 9252
1178+ 9252              ; Cuadrantes 1º y 2º.
1179+ 9252
1180+ 9252 28 10        2 jr z,3F
1181+ 9254
1182+ 9254              ; 1er Cuadrante
1183+ 9254
1184+ 9254 7C               ld a,h
1185+ 9255 06 00            ld b,0
1186+ 9257
1187+ 9257 CD 98 92         call Compara_cositas_H1
1188+ 925A
1189+ 925A 04               inc b
1190+ 925B 05               dec b
1191+ 925C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1192+ 925D
1193+ 925D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1194+ 925E 06 00            ld b,0
1195+ 9260
1196+ 9260 CD AE 92         call Compara_cositas_L1
1197+ 9263 C9               ret
1198+ 9264
1199+ 9264
1200+ 9264              ; 2º Cuadrante
1201+ 9264
1202+ 9264 7C           3 ld a,h
1203+ 9265 06 00            ld b,0
1204+ 9267
1205+ 9267 CD 74 92         call Compara_cositas_H2
1206+ 926A
1207+ 926A 04               inc b
1208+ 926B 05               dec b
1209+ 926C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1210+ 926D
1211+ 926D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1212+ 926E 06 00            ld b,0
1213+ 9270
1214+ 9270 CD 86 92         call Compara_cositas_L2
1215+ 9273 C9               ret
1216+ 9274
1217+ 9274 A7           Compara_cositas_H2 and a
1218+ 9275 28 0D            jr z,1F
1219+ 9277              ;    cp $fd
1220+ 9277              ;    jr z,1F
1221+ 9277              ;    cp $fe
1222+ 9277              ;    jr z,1F
1223+ 9277 FE FF            cp $ff
1224+ 9279 28 09            jr z,1F
1225+ 927B FE 01            cp $01
1226+ 927D 28 05            jr z,1F
1227+ 927F FE 02            cp $02
1228+ 9281 28 01            jr z,1F
1229+ 9283 C0               ret nz
1230+ 9284 04           1 inc b
1231+ 9285 C9               ret
1232+ 9286
1233+ 9286 A7           Compara_cositas_L2 and a
1234+ 9287 28 0D            jr z,1F
1235+ 9289              ;    cp $fd
1236+ 9289              ;    jr z,1F
1237+ 9289 FE FE            cp $fe
1238+ 928B 28 09            jr z,1F
1239+ 928D FE FF            cp $ff
1240+ 928F 28 05            jr z,1F
1241+ 9291 FE 01            cp $01
1242+ 9293 28 01            jr z,1F
1243+ 9295              ;    cp $02
1244+ 9295              ;    jr z,1F
1245+ 9295 C0               ret nz
1246+ 9296 04           1 inc b
1247+ 9297 C9               ret
1248+ 9298
1249+ 9298 A7           Compara_cositas_H1 and a
1250+ 9299 28 11            jr z,1F
1251+ 929B              ;    cp $fd
1252+ 929B              ;    jr z,1F
1253+ 929B              ;    cp $fe
1254+ 929B              ;    jr z,1F
1255+ 929B FE FF            cp $ff
1256+ 929D 28 0D            jr z,1F
1257+ 929F FE 01            cp $01
1258+ 92A1 28 09            jr z,1F
1259+ 92A3 FE 02            cp $02
1260+ 92A5 28 05            jr z,1F
1261+ 92A7 FE 03            cp $03
1262+ 92A9 28 01            jr z,1F
1263+ 92AB C0               ret nz
1264+ 92AC 04           1 inc b
1265+ 92AD C9               ret
1266+ 92AE
1267+ 92AE A7           Compara_cositas_L1 and a
1268+ 92AF 28 0D            jr z,1F
1269+ 92B1              ;    cp $fd
1270+ 92B1              ;    jr z,1F
1271+ 92B1              ;    cp $fe
1272+ 92B1              ;    jr z,1F
1273+ 92B1              ;    cp $ff
1274+ 92B1              ;    jr z,1F
1275+ 92B1 FE 01            cp $01
1276+ 92B3 28 09            jr z,1F
1277+ 92B5 FE 02            cp $02
1278+ 92B7 28 05            jr z,1F
1279+ 92B9 FE 03            cp $03
1280+ 92BB 28 01            jr z,1F
1281+ 92BD C0               ret nz
1282+ 92BE 04           1 inc b
1283+ 92BF C9               ret
1284+ 92C0
1285+ 92C0 A7           Compara_cositas_H3 and a
1286+ 92C1 28 0D            jr z,1F
1287+ 92C3              ;    cp $fd
1288+ 92C3              ;    jr z,1F
1289+ 92C3 FE FE            cp $fe
1290+ 92C5 28 09            jr z,1F
1291+ 92C7 FE FF            cp $ff
1292+ 92C9 28 05            jr z,1F
1293+ 92CB FE 01            cp $01
1294+ 92CD 28 01            jr z,1F
1295+ 92CF              ;    cp $02
1296+ 92CF              ;    jr z,1F
1297+ 92CF              ;    cp $03
1298+ 92CF              ;    jr z,1F
1299+ 92CF C0               ret nz
1300+ 92D0 04           1 inc b
1301+ 92D1 C9               ret
1302+ 92D2
1303+ 92D2 A7           Compara_cositas_L3 and a
1304+ 92D3 28 0D            jr z,1F
1305+ 92D5              ;    cp $fd
1306+ 92D5              ;    jr z,1F
1307+ 92D5              ;    cp $fe
1308+ 92D5              ;    jr z,1F
1309+ 92D5              ;    cp $ff
1310+ 92D5              ;    jr z,1F
1311+ 92D5 FE 01            cp $01
1312+ 92D7 28 09            jr z,1F
1313+ 92D9 FE 02            cp $02
1314+ 92DB 28 05            jr z,1F
1315+ 92DD FE 03            cp $03
1316+ 92DF 28 01            jr z,1F
1317+ 92E1 C0               ret nz
1318+ 92E2 04           1 inc b
1319+ 92E3 C9               ret
1320+ 92E4
1321+ 92E4 A7           Compara_cositas_H4 and a
1322+ 92E5 28 11            jr z,1F
1323+ 92E7 FE FD            cp $fd
1324+ 92E9 28 0D            jr z,1F
1325+ 92EB FE FE            cp $fe
1326+ 92ED 28 09            jr z,1F
1327+ 92EF FE FF            cp $ff
1328+ 92F1 28 05            jr z,1F
1329+ 92F3 FE 01            cp $01
1330+ 92F5 28 01            jr z,1F
1331+ 92F7              ;    cp $02
1332+ 92F7              ;    jr z,1F
1333+ 92F7              ;    cp $03
1334+ 92F7              ;    jr z,1F
1335+ 92F7 C0               ret nz
1336+ 92F8 04           1 inc b
1337+ 92F9 C9               ret
1338+ 92FA
1339+ 92FA A7           Compara_cositas_L4 and a
1340+ 92FB 28 0D            jr z,1F
1341+ 92FD              ;    cp $fd
1342+ 92FD              ;    jr z,1F
1343+ 92FD FE FE            cp $fe
1344+ 92FF 28 09            jr z,1F
1345+ 9301 FE FF            cp $ff
1346+ 9303 28 05            jr z,1F
1347+ 9305 FE 01            cp $01
1348+ 9307 28 01            jr z,1F
1349+ 9309              ;    cp $02
1350+ 9309              ;    jr z,1F
1351+ 9309              ;    cp $03
1352+ 9309              ;    jr z,1F
1353+ 9309 C0               ret nz
1354+ 930A 04           1 inc b
1355+ 930B C9               ret
# file closed: Disparo.asm
1246  930C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 930C              ; ******************************************************************************************************************************************************************************************
   2+ 930C              ;
   3+ 930C              ; 01/23
   4+ 930C              ;
   5+ 930C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 930C
   7+ 930C CD E6 95     Draw call Prepara_draw
   8+ 930F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9310 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9311 28 05        	jr z,2F
  11+ 9313
  12+ 9313 3A B7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9316 18 0C        	jr 1F
  14+ 9318 2A B5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 931B 22 A5 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 931E CD AD 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9321              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9321 CD 6C 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9324 3A D1 89     1 ld a,(Ctrl_0)
  20+ 9327 CB 6F        	bit 5,a
  21+ 9329 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 932B
  23+ 932B CD 43 93     	call Comprueba_limite_horizontal
  24+ 932E CD D3 93     	call Comprueba_limite_vertical
  25+ 9331
  26+ 9331              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9331
  28+ 9331 CD 20 95     3 call calcula_CColumnass
  29+ 9334 CD 57 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9337 CD AC 95     	call Define_rutina_de_impresion
  31+ 933A
  32+ 933A 3A D1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 933D CB AF        	res 5,a											; _a ser de utilidad.
  34+ 933F 32 D1 89     	ld (Ctrl_0),a
  35+ 9342
  36+ 9342 C9           	ret
  37+ 9343
  38+ 9343              ; *******************************************************************************************************************************************************************************************
  39+ 9343              ;	21/01/23
  40+ 9343              ;
  41+ 9343              ; 	Comprueba_limite_horizontal.
  42+ 9343              ;
  43+ 9343              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9343              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9343              ;
  46+ 9343              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9343              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9343              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9343              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9343
  51+ 9343
  52+ 9343
  53+ 9343 3A D1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9346 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9348 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 934A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 934C 32 D1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 934F 18 09            jr 6F
  59+ 9351 CB 5F        1 bit 3,a
  60+ 9353 28 0A            jr z,2F
  61+ 9355 E6 F7            and $f7
  62+ 9357 32 D1 89         ld (Ctrl_0),a
  63+ 935A CD AD 94     6 call Inicializacion
  64+ 935D 18 5B            jr 5F
  65+ 935F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9360
  67+ 9360              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9360              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9360
  70+ 9360 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9361 2A DC 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9364 CD B2 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9367 67           	ld h,a
  74+ 9368 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9369 CD B2 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 936C 67           	ld h,a
  77+ 936D A7           	and a
  78+ 936E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9370 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9371 3A B7 89     	ld a,(Cuad_objeto)
  81+ 9374 FE 02        	cp 2
  82+ 9376 38 1E        	jr c,3F
  83+ 9378 28 1C        	jr z,3F
  84+ 937A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 937B 28 23            jr z,7F
  86+ 937D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 937F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9381 E1           	pop hl
  89+ 9382
  90+ 9382              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9382              ; _para indicar con E="2" en caso necesario.
  92+ 9382
  93+ 9382 E5               push hl
  94+ 9383 C5               push bc
  95+ 9384 CD B2 98     	call calcula_tercio
  96+ 9387 FE 01        	cp 1
  97+ 9389 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 938B CD BB 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 938E 28 26            jr z,9F
 100+ 9390 38 24            jr c,9F
 101+ 9392 1E 00        11 ld e,0
 102+ 9394 18 22            jr 8F
 103+ 9396 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 9397 28 07        	jr z, 7F
 105+ 9399 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 939B 1E 00         	ld e,0
 107+ 939D E1           	pop hl
 108+ 939E 18 04        	jr 4F
 109+ 93A0 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93A2 18 15            jr 10F
 111+ 93A4
 112+ 93A4              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93A4              ; _para indicar con E="2" en caso necesario.
 114+ 93A4
 115+ 93A4 E5           4 push hl
 116+ 93A5 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93A6 CD B2 98     	call calcula_tercio
 118+ 93A9 FE 01        	cp 1
 119+ 93AB 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93AD CD BB 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93B0 28 04            jr z,9F
 122+ 93B2 30 02            jr nc,9F
 123+ 93B4 18 02        	jr 8F
 124+ 93B6 1E 02        9 ld e,2
 125+ 93B8 C1           8 pop bc
 126+ 93B9 E1           10 pop hl
 127+ 93BA C9           5 ret
 128+ 93BB
 129+ 93BB              ; --------------------
 130+ 93BB              ;
 131+ 93BB              ; 25/08/22
 132+ 93BB
 133+ 93BB CD B2 98     Comprueba_centro call calcula_tercio
 134+ 93BE 67               ld h,a
 135+ 93BF 08           	ex af,af
 136+ 93C0 FE 02        	cp 2
 137+ 93C2 38 07        	jr c,1F
 138+ 93C4 28 05        	jr z,1F
 139+ 93C6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93C9 18 03        	jr 2F
 141+ 93CB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93CE 08           2 ex af,af
 143+ 93CF A7               and a
 144+ 93D0 ED 42            sbc hl,bc
 145+ 93D2 C9               ret
 146+ 93D3
 147+ 93D3              ; *********************************************************************************************************************************************************************************************
 148+ 93D3              ;
 149+ 93D3              ;   16/8/22
 150+ 93D3              ;
 151+ 93D3              ;	Comprueba_limite_vertical
 152+ 93D3              ;
 153+ 93D3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93D3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93D3              ;
 156+ 93D3
 157+ 93D3 2A A5 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93D6 7D           	ld a,l
 159+ 93D7 E6 1F        	and $1F
 160+ 93D9 57           	ld d,a
 161+ 93DA 3A DE 89     	ld a,(Limite_vertical)
 162+ 93DD BA           	cp d 											; Límite - Posición.
 163+ 93DE 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93DF 3A B7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93E2 CB 47        	bit 0,a
 166+ 93E4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93E6
 168+ 93E6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93E6
 170+ 93E6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93E7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 93E9
 173+ 93E9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 93E9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 93E9
 176+ 93E9 3A A9 89         ld a,(Coordenada_X)
 177+ 93EC 16 0F            ld d,Centro_izquierda
 178+ 93EE A7               and a
 179+ 93EF 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 93F0 28 1E            jr z,3F
 181+ 93F2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 93F4              ;                                                    ; _salimos sin modificar nada.
 183+ 93F4 18 0E            jr 2F
 184+ 93F6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 93F7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 93F9
 187+ 93F9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 93F9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 93F9
 190+ 93F9 3A A9 89         ld a,(Coordenada_X)
 191+ 93FC 16 10            ld d,Centro_derecha
 192+ 93FE A7               and a
 193+ 93FF 92               sub d
 194+ 9400 28 0E            jr z,3F
 195+ 9402 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9404              ;                                                    ; _salimos sin modificar nada.
 197+ 9404 CB 43        2 bit 0,e
 198+ 9406 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9408 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9409 CD 9D 94         call Modificaccionne
 201+ 940C C1           	pop bc
 202+ 940D CD AD 94         call Inicializacion
 203+ 9410 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9411
 205+ 9411              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9411
 207+ 9411 C5           4 push bc
 208+ 9412 01 A4 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9415 0A           	ld a,(bc)
 210+ 9416 3D           	dec a
 211+ 9417 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9418 7D           	ld a,l
 213+ 9419 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 941A CB 47        	bit 0,a
 215+ 941C 28 03        	jr z,5F
 216+ 941E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 941F 18 2E        	jr 7F
 218+ 9421
 219+ 9421              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9421
 221+ 9421 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9422 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9423 3A D1 89     	ld a,(Ctrl_0)
 224+ 9426 CB 4F        	bit 1,a
 225+ 9428 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 942A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 942B
 228+ 942B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 942B
 230+ 942B 1C               inc e
 231+ 942C 1D               dec e
 232+ 942D 20 07            jr nz,12F
 233+ 942F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9430 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9431 22 A5 89     	ld (Posicion_actual),hl
 236+ 9434 18 44        13 jr 9F
 237+ 9436 CB 43        12 bit 0,e
 238+ 9438 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 943A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 943A C1           	pop bc
 241+ 943B 18 D3        	jr 3B
 242+ 943D 80           14 add b
 243+ 943E 6F               ld l,a
 244+ 943F 22 A5 89     	ld (Posicion_actual),hl
 245+ 9442 CD 9D 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9445 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9447 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9449 32 D1 89         ld (Ctrl_0),a
 249+ 944C F1           	pop af
 250+ 944D 18 2B        	jr 9F
 251+ 944F
 252+ 944F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 944F
 254+ 944F F5           7 push af
 255+ 9450 3A D1 89     	ld a,(Ctrl_0)
 256+ 9453 CB 47        	bit 0,a
 257+ 9455 20 1D        	jr nz,8F
 258+ 9457 F1           	pop af
 259+ 9458
 260+ 9458              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9458
 262+ 9458 1C           	inc e
 263+ 9459 1D               dec e
 264+ 945A 20 07            jr nz,10F
 265+ 945C 90           	sub b
 266+ 945D 6F               ld l,a
 267+ 945E 22 A5 89     	ld (Posicion_actual),hl
 268+ 9461 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9463              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9463 CB 43        10 bit 0,e
 271+ 9465 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9467              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9467 C1           	pop bc
 274+ 9468 18 A6        	jr 3B
 275+ 946A 90           16 sub b
 276+ 946B 6F               ld l,a
 277+ 946C 22 A5 89     	ld (Posicion_actual),hl
 278+ 946F CD 9D 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9472 18 06            jr 9F
 280+ 9474 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9476 32 D1 89         ld (Ctrl_0),a
 282+ 9479 F1           	pop af
 283+ 947A C1           9 pop bc
 284+ 947B 1E 00        	ld e,0
 285+ 947D CD AD 94         call Inicializacion
 286+ 9480 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9481 08           	ex af,af
 288+ 9482 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9483 18 8B            jr 3B
 290+ 9485
 291+ 9485              ; --------------------
 292+ 9485
 293+ 9485 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9487 CD 01 96     1 call PreviousScan
 295+ 948A 10 FB            djnz 1B
 296+ 948C 22 A5 89     	ld (Posicion_actual),hl
 297+ 948F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9490 C9           	ret
 299+ 9491
 300+ 9491              ; --------------------
 301+ 9491
 302+ 9491 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9493 CD F2 95     1 call NextScan
 304+ 9496 10 FB            djnz 1B
 305+ 9498 22 A5 89     	ld (Posicion_actual),hl
 306+ 949B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 949C C9           	ret
 308+ 949D
 309+ 949D              ; --------------------
 310+ 949D              ;
 311+ 949D              ;	22/01/23
 312+ 949D              ;
 313+ 949D              ;	E="1". Hemos cambiado de cuadrante.
 314+ 949D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 949D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 949D
 317+ 949D
 318+ 949D              Modificaccionne
 319+ 949D
 320+ 949D 3A B7 89     	ld a,(Cuad_objeto)
 321+ 94A0 FE 02        	cp 2
 322+ 94A2 CC 85 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94A5 DC 85 94         call c,Modifica_Pos_actual
 324+ 94A8 C8           	ret z
 325+ 94A9 CD 91 94         call Modifica_Pos_actual2
 326+ 94AC C9               ret
 327+ 94AD
 328+ 94AD              ; *************************************************************************************************************************************************************************************************
 329+ 94AD              ;
 330+ 94AD              ;	13/8/22
 331+ 94AD              ;
 332+ 94AD              ;	Inicializacion
 333+ 94AD              ;
 334+ 94AD              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94AD              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94AD              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94AD              ;
 338+ 94AD              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94AD              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94AD              ;	_ desaparece/aparece.
 341+ 94AD
 342+ 94AD              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94AD              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94AD              ;
 345+ 94AD              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94AD              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94AD              ; 		   [E] ="0"
 348+ 94AD
 349+ 94AD              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94AD
 351+ 94AD CD B2 98     Inicializacion call calcula_tercio
 352+ 94B0 28 36        	jr z,primit
 353+ 94B2 E6 02        	and 2
 354+ 94B4 20 07        	jr nz,segmit
 355+ 94B6 7D           	ld a,l
 356+ 94B7 FE 7F        	cp $7f
 357+ 94B9 38 2D        	jr c,primit
 358+ 94BB 28 2B        	jr z,primit
 359+ 94BD CD 1A 95     segmit call column
 360+ 94C0 38 13        	jr c,tercuad
 361+ 94C2 3E 04        cuarcuad ld a,4
 362+ 94C4 32 B7 89     	ld (Cuad_objeto),a
 363+ 94C7 21 20 48     	ld hl,$4820
 364+ 94CA 22 DC 89     	ld (Limite_horizontal),hl
 365+ 94CD 21 DE 89     	ld hl,Limite_vertical
 366+ 94D0 36 0D        	ld (hl),$0d
 367+ 94D2 08           	ex af,af
 368+ 94D3 18 3C        	jr 1F
 369+ 94D5              tercuad
 370+ 94D5 3E 03        	ld a,3
 371+ 94D7 32 B7 89     	ld (Cuad_objeto),a
 372+ 94DA 21 20 48     	ld hl,$4820
 373+ 94DD 22 DC 89     	ld (Limite_horizontal),hl
 374+ 94E0 21 DE 89     	ld hl,Limite_vertical
 375+ 94E3 36 12        	ld (hl),$12
 376+ 94E5 08           	ex af,af
 377+ 94E6 18 29        	jr 1F
 378+ 94E8 CD 1A 95     primit call column
 379+ 94EB 38 13        	jr c, primcuad
 380+ 94ED              segcuad
 381+ 94ED 3E 02        	ld a,2
 382+ 94EF 32 B7 89     	ld (Cuad_objeto),a
 383+ 94F2 21 C0 4F     	ld hl,$4fc0
 384+ 94F5 22 DC 89     	ld (Limite_horizontal),hl
 385+ 94F8 21 DE 89     	ld hl,Limite_vertical
 386+ 94FB 36 0D        	ld (hl),$0d
 387+ 94FD 08           	ex af,af
 388+ 94FE 18 11        	jr 1F
 389+ 9500              primcuad
 390+ 9500 3E 01        	ld a,1
 391+ 9502 32 B7 89     	ld (Cuad_objeto),a
 392+ 9505 21 C0 4F     	ld hl,$4fc0
 393+ 9508 22 DC 89     	ld (Limite_horizontal),hl
 394+ 950B 21 DE 89     	ld hl,Limite_vertical
 395+ 950E 36 12        	ld (hl),$12
 396+ 9510 08           	ex af,af
 397+ 9511 CD 1E 9C     1 call Genera_coordenadas
 398+ 9514 21 D1 89     	ld hl,Ctrl_0
 399+ 9517 CB EE        	set 5,(hl)
 400+ 9519 C9           	ret
 401+ 951A
 402+ 951A              ; ------------------------------------------------------------------------------------------------------------------
 403+ 951A
 404+ 951A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 951A              ;
 406+ 951A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 951A
 408+ 951A 7D           column ld a,l
 409+ 951B E6 1F        	and $1f
 410+ 951D FE 10         	cp $10
 411+ 951F C9            	ret
 412+ 9520
 413+ 9520              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9520              ;
 415+ 9520              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9520              ;
 417+ 9520              ; 14/12/22
 418+ 9520              ;
 419+ 9520              ;	Modifica: A y BC.
 420+ 9520
 421+ 9520 3A B7 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9523 E6 01        	and 1
 423+ 9525 28 17        	jr z,1F
 424+ 9527
 425+ 9527              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9527
 427+ 9527 3A A9 89     	ld a,(Coordenada_X)
 428+ 952A 47           	ld b,a
 429+ 952B 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 952C 79           	ld a,c
 431+ 952D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 952E 38 08        	jr c,2F
 433+ 9530 47           	ld b,a
 434+ 9531 79           	ld a,c
 435+ 9532 90           	sub b
 436+ 9533 32 DB 89     	ld (Columnas),a
 437+ 9536 18 1B        	jr 4F
 438+ 9538 79           2 ld a,c
 439+ 9539 32 DB 89     	ld (Columnas),a
 440+ 953C 18 15        	jr 4F
 441+ 953E
 442+ 953E              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 953E
 444+ 953E 3A A9 89     1 ld a,(Coordenada_X)
 445+ 9541 81           	add c
 446+ 9542 3D           	dec a
 447+ 9543 D6 1F        	sub $1f
 448+ 9545 38 08        	jr c,3F
 449+ 9547 47           	ld b,a
 450+ 9548 79           	ld a,c
 451+ 9549 90           	sub b
 452+ 954A 32 DB 89     	ld (Columnas),a
 453+ 954D 18 04        	jr 4F
 454+ 954F 79           3 ld a,c
 455+ 9550 32 DB 89     	ld (Columnas),a
 456+ 9553 D9           4 exx
 457+ 9554 4F           	ld c,a
 458+ 9555 D9           	exx
 459+ 9556 C9            ret
 460+ 9557
 461+ 9557              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9557              ;
 463+ 9557              ; 7/1/23
 464+ 9557              ;
 465+ 9557              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9557              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9557              ;
 468+ 9557              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9557              ;	DESTRUYE: HL,B Y A.
 470+ 9557
 471+ 9557 3A B7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 955A FE 02        	cp 2
 473+ 955C 38 18        	jr c,1F
 474+ 955E 28 16        	jr z,1F
 475+ 9560 E6 01        	and 1
 476+ 9562 28 0D        	jr z,3F
 477+ 9564
 478+ 9564              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9564
 480+ 9564 CD A0 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9567
 482+ 9567 7D           9 ld a,l
 483+ 9568 E6 1F        	and $1f
 484+ 956A 28 2A        	jr z,7F
 485+ 956C 2B           	dec hl
 486+ 956D 10 F8        	djnz 9B
 487+ 956F 18 25        	jr 7F
 488+ 9571
 489+ 9571              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9571
 491+ 9571 2A A5 89     3 ld hl,(Posicion_actual)
 492+ 9574 18 20        	jr 7F
 493+ 9576
 494+ 9576 28 14        1 jr z,2F
 495+ 9578
 496+ 9578              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9578
 498+ 9578 CD A0 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 957B
 500+ 957B 7D           4 ld a,l
 501+ 957C E6 1F        	and $1f
 502+ 957E 28 03        	jr z,6F
 503+ 9580 2B           	dec hl
 504+ 9581 10 F8        	djnz 4B
 505+ 9583 06 0F        6 ld b,15
 506+ 9585 CD 01 96     5 call PreviousScan
 507+ 9588 10 FB        	djnz 5B
 508+ 958A 18 0A        	jr 7F
 509+ 958C
 510+ 958C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 958C
 512+ 958C CD A0 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 958F 06 0F        	ld b,15
 514+ 9591 CD 01 96     8 call PreviousScan
 515+ 9594 10 FB        	djnz 8B
 516+ 9596
 517+ 9596 E5           7 push hl
 518+ 9597 DD E1        	pop ix
 519+ 9599
 520+ 9599 2A A7 89     	ld hl,(Puntero_objeto)
 521+ 959C E5           	push hl
 522+ 959D FD E1        	pop iy
 523+ 959F
 524+ 959F C9           	ret
 525+ 95A0
 526+ 95A0              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95A0              ;
 528+ 95A0              ;	2/1/23
 529+ 95A0              ;
 530+ 95A0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95A0              ;
 532+ 95A0              ;	Tras esta rutina tenemos:
 533+ 95A0              ;
 534+ 95A0              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95A0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95A0              ;
 537+ 95A0              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95A0
 539+ 95A0 2A A5 89     Operandos ld hl,(Posicion_actual)
 540+ 95A3 3A DB 89     	ld a,(Columnas)
 541+ 95A6 3D           	dec a
 542+ 95A7 20 01        	jr nz,1F
 543+ 95A9 3C           	inc a
 544+ 95AA 47           1 ld b,a
 545+ 95AB C9           	ret
 546+ 95AC
 547+ 95AC              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95AC              ;
 549+ 95AC              ;	3/1/23
 550+ 95AC              ;
 551+ 95AC              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95AC              ;
 553+ 95AC              ;	Destruye: A,B,HL y DE.
 554+ 95AC
 555+ 95AC              Define_rutina_de_impresion
 556+ 95AC
 557+ 95AC 3A A4 89     	ld a,(Columns)
 558+ 95AF 47           	ld b,a
 559+ 95B0 3A DB 89     	ld a,(Columnas)
 560+ 95B3 B8           	cp b
 561+ 95B4 20 0D        	jr nz,2f
 562+ 95B6
 563+ 95B6              ;	La entidad se imprime entera.
 564+ 95B6
 565+ 95B6 21 82 96     	ld hl, Indice_entidades_completas
 566+ 95B9 E6 01        	and 1
 567+ 95BB 28 02        	jr z,1F
 568+ 95BD
 569+ 95BD 23           	inc hl
 570+ 95BE 23           	inc hl
 571+ 95BF
 572+ 95BF CD 00 8D     1 call Extrae_address
 573+ 95C2 C9           	ret		;	ret
 574+ 95C3
 575+ 95C3              ;	La entidad no se imprime entera en pantalla.
 576+ 95C3
 577+ 95C3 3A B7 89     2 ld a,(Cuad_objeto)
 578+ 95C6 E6 01        	and 1
 579+ 95C8 28 17        	jr z,3F
 580+ 95CA
 581+ 95CA              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95CA
 583+ 95CA 21 86 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95CD 3A A4 89     4 ld a,(Columns)
 585+ 95D0 E6 01        	and 1
 586+ 95D2 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95D4
 588+ 95D4 23           	inc hl
 589+ 95D5 23           	inc hl
 590+ 95D6
 591+ 95D6 3A DB 89     	ld a,(Columnas)
 592+ 95D9 E6 01        	and 1
 593+ 95DB 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95DD
 595+ 95DD 23           	inc hl
 596+ 95DE 23           	inc hl
 597+ 95DF
 598+ 95DF 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95E1
 600+ 95E1 21 8C 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95E4 18 E7        	jr 4B
 602+ 95E6
 603+ 95E6              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95E6              ;
 605+ 95E6              ;	Prepara_draw
 606+ 95E6              ;
 607+ 95E6              ;	Es una rutina de carga.
 608+ 95E6              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95E6              ;
 610+ 95E6              ;	FUNCIONAMIENTO:
 611+ 95E6              ;
 612+ 95E6              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95E6              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95E6              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95E6              ;
 616+ 95E6              ;	DESTRUYE:
 617+ 95E6              ;
 618+ 95E6              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95E6
 620+ 95E6 21 A3 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 95E9 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 95EA 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 95EB 4E           	ld c,(hl)
 624+ 95EC 2A A5 89     	ld hl,(Posicion_actual)
 625+ 95EF 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 95F1 C9           	ret
 627+ 95F2
 628+ 95F2              ;----------------------------------------------------------------------------------------------------------------
 629+ 95F2              ;
 630+ 95F2              ;	5/08/22
 631+ 95F2              ;
 632+ 95F2              ;   NextScan.
 633+ 95F2              ;
 634+ 95F2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 95F2              ;
 636+ 95F2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 95F2              ;
 638+ 95F2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 95F2              ;
 640+ 95F2              ;       DESTRUIDOS: AF y HL !!!
 641+ 95F2              ;
 642+ 95F2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 95F2              ;
 644+ 95F2
 645+ 95F2 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 95F3 7C               ld a,h
 647+ 95F4 E6 07            and 7
 648+ 95F6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 95F7
 650+ 95F7 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 95F8 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 95FA 6F               ld l,a
 653+ 95FB D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 95FC
 655+ 95FC 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 95FD D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 95FF 67               ld h,a
 658+ 9600 C9               ret
 659+ 9601
 660+ 9601              ;----------------------------------------------------------------------------------------------------------------
 661+ 9601              ;
 662+ 9601              ;	5/08/22
 663+ 9601              ;
 664+ 9601              ;   PreviousScan.
 665+ 9601              ;
 666+ 9601              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 9601              ;
 668+ 9601              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 9601              ;
 670+ 9601              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9601              ;
 672+ 9601              ;       DESTRUIDOS: AF y HL !!!
 673+ 9601              ;
 674+ 9601              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9601              ;
 676+ 9601
 677+ 9601 7C           PreviousScan ld a,h
 678+ 9602 25               dec h               ; Dec H.
 679+ 9603 E6 07            and 7
 680+ 9605 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9606
 682+ 9606 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 9607 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9609 6F               ld l,a
 685+ 960A D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 960B
 687+ 960B 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 960C C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 960E 67               ld h,a
 690+ 960F C9               ret
 691+ 9610
 692+ 9610              ; -----------------------------------------------------------------------------------
 693+ 9610              ;
 694+ 9610              ;	28/2/23
 695+ 9610              ;
 696+ 9610              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9610              ;	Extrae fotos de Album_de_fotos.
 698+ 9610
 699+ 9610 3A ED 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 9613 A7           	and a
 701+ 9614 C8           	ret z
 702+ 9615 ED 73 F2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9619 31 00 70     	ld sp,Album_de_fotos
 704+ 961C
 705+ 961C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 961E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 961F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9620
 709+ 9620 ED 73 F4 89  	ld (Stack_2),sp
 710+ 9624 ED 7B F2 89  	ld sp,(Stack)
 711+ 9628
 712+ 9628              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9628
 714+ 9628 3E CD        	ld a,$cd
 715+ 962A 32 32 96     	ld (Imprime),a
 716+ 962D EB           	ex de,hl
 717+ 962E 22 33 96     	ld (Imprime+1),hl
 718+ 9631 EB           	ex de,hl
 719+ 9632
 720+ 9632              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9632
 722+ 9632 00 00 00     Imprime db 0,0,0
 723+ 9635
 724+ 9635 3A ED 89     	ld a,(Numero_de_malotes)
 725+ 9638 3D           	dec a
 726+ 9639 28 09        	jr z,1F
 727+ 963B 32 ED 89      	ld (Numero_de_malotes),a
 728+ 963E
 729+ 963E ED 7B F4 89   	ld sp,(Stack_2)
 730+ 9642 18 D8        	jr 2B
 731+ 9644
 732+ 9644 AF           1 xor a
 733+ 9645 32 F4 89     	ld (Stack_2),a
 734+ 9648 C9           	ret
 735+ 9649
 736+ 9649              ; -----------------------------------------------------------------------------------
 737+ 9649              ;
 738+ 9649              ;	28/2/23
 739+ 9649              ;
 740+ 9649              ;	Pinta los disparos generados.
 741+ 9649
 742+ 9649              Extrae_foto_disparos
 743+ 9649
 744+ 9649 3A FA 89     	ld a,(Numero_de_disparotes)
 745+ 964C A7           	and a
 746+ 964D C8           	ret z
 747+ 964E ED 73 F2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9652 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9655
 750+ 9655 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9657 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9658 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9659
 754+ 9659 ED 73 F4 89  	ld (Stack_2),sp
 755+ 965D ED 7B F2 89  	ld sp,(Stack)
 756+ 9661
 757+ 9661              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9661
 759+ 9661 3E CD        	ld a,$cd
 760+ 9663 32 6B 96     	ld (Imprime2),a
 761+ 9666 EB           	ex de,hl
 762+ 9667 22 6C 96     	ld (Imprime2+1),hl
 763+ 966A EB           	ex de,hl
 764+ 966B
 765+ 966B              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 966B
 767+ 966B 00 00 00     Imprime2 db 0,0,0
 768+ 966E
 769+ 966E 3A FA 89     	ld a,(Numero_de_disparotes)
 770+ 9671 3D           	dec a
 771+ 9672 28 09        	jr z,1F
 772+ 9674 32 FA 89      	ld (Numero_de_disparotes),a
 773+ 9677
 774+ 9677 ED 7B F4 89  	ld sp,(Stack_2)
 775+ 967B 18 D8        	jr 2B
 776+ 967D
 777+ 967D AF           1 xor a
 778+ 967E 32 F4 89     	ld (Stack_2),a
 779+ 9681 C9           	ret
 780+ 9682
# file closed: Draw_XOR.asm
1247  9682              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9682              ;   índices de Rutinas de impresión.
   2+ 9682
   3+ 9682 92 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9684 BF 96            defw Pinta_Amadeus_3x2
   5+ 9686
   6+ 9686 15 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9688 B5 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 968A 69 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 968C
  10+ 968C 3F 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 968E 43 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9690 F7 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9692
  14+ 9692
  15+ 9692              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9692              ;
  17+ 9692              ;   12/12/22
  18+ 9692              ;
  19+ 9692              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9692              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9692              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9692              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9692              ;
  24+ 9692              ;   Modifica: DE y HL.
  25+ 9692
  26+ 9692 ED 73 F2 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9696 FD F9        	ld sp,iy
  28+ 9698 06 10            ld b,16
  29+ 969A D1           1 pop de
  30+ 969B 7B               ld a,e
  31+ 969C AE               xor (hl)
  32+ 969D 77           	ld (hl),a
  33+ 969E 23           	inc hl
  34+ 969F 7A               ld a,d
  35+ 96A0 AE               xor (hl)
  36+ 96A1 77           	ld (hl),a
  37+ 96A2 2B           	dec hl
  38+ 96A3 24           	inc h
  39+ 96A4 7C               ld a,h
  40+ 96A5 E6 07            and 7
  41+ 96A7 20 0A            jr nz,2F
  42+ 96A9 7D               ld a,l
  43+ 96AA C6 20            add a,$20
  44+ 96AC 6F               ld l,a
  45+ 96AD 38 04            jr c,2F
  46+ 96AF 7C               ld a,h
  47+ 96B0 D6 08            sub 8
  48+ 96B2 67               ld h,a
  49+ 96B3 7C           2 ld a,h
  50+ 96B4 FE 58            cp $58
  51+ 96B6 28 02            jr z,3F
  52+ 96B8 10 E0            djnz 1B
  53+ 96BA ED 7B F2 89  3 ld sp,(Stack)
  54+ 96BE C9           	ret
  55+ 96BF
  56+ 96BF ED 73 F2 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96C3 FD F9        	ld sp,iy
  58+ 96C5 06 08            ld b,8
  59+ 96C7 D1           1 pop de
  60+ 96C8 7B               ld a,e
  61+ 96C9 AE               xor (hl)
  62+ 96CA 77           	ld (hl),a
  63+ 96CB 23           	inc hl
  64+ 96CC 7A               ld a,d
  65+ 96CD AE               xor (hl)
  66+ 96CE 77           	ld (hl),a
  67+ 96CF 23           	inc hl
  68+ 96D0 D1           	pop de
  69+ 96D1 7B               ld a,e
  70+ 96D2 AE               xor (hl)
  71+ 96D3 77           	ld (hl),a
  72+ 96D4 2B           	dec hl
  73+ 96D5 2B           	dec hl
  74+ 96D6 24           	inc h
  75+ 96D7 7C               ld a,h
  76+ 96D8 E6 07            and 7
  77+ 96DA 20 0A            jr nz,2F
  78+ 96DC 7D               ld a,l
  79+ 96DD C6 20            add a,$20
  80+ 96DF 6F               ld l,a
  81+ 96E0 38 04            jr c,2F
  82+ 96E2 7C               ld a,h
  83+ 96E3 D6 08            sub 8
  84+ 96E5 67               ld h,a
  85+ 96E6 7C           2 ld a,h
  86+ 96E7 FE 58            cp $58
  87+ 96E9 28 25            jr z,4F
  88+ 96EB 7A               ld a,d
  89+ 96EC AE               xor (hl)
  90+ 96ED 77               ld (hl),a
  91+ 96EE D1           	pop de
  92+ 96EF 23           	inc hl
  93+ 96F0 7B               ld a,e
  94+ 96F1 AE               xor (hl)
  95+ 96F2 77           	ld (hl),a
  96+ 96F3 23           	inc hl
  97+ 96F4 7A               ld a,d
  98+ 96F5 AE               xor (hl)
  99+ 96F6 77           	ld (hl),a
 100+ 96F7 2B           	dec hl
 101+ 96F8 2B           	dec hl
 102+ 96F9 24           	inc h
 103+ 96FA 7C               ld a,h
 104+ 96FB E6 07            and 7
 105+ 96FD 20 0A            jr nz,3F
 106+ 96FF 7D               ld a,l
 107+ 9700 C6 20            add a,$20
 108+ 9702 6F               ld l,a
 109+ 9703 38 04            jr c,3F
 110+ 9705 7C               ld a,h
 111+ 9706 D6 08            sub 8
 112+ 9708 67               ld h,a
 113+ 9709 7C           3 ld a,h
 114+ 970A FE 58            cp $58
 115+ 970C 28 02            jr z,4F
 116+ 970E 10 B7            djnz 1B
 117+ 9710 ED 7B F2 89  4 ld sp,(Stack)
 118+ 9714 C9           	ret
 119+ 9715
 120+ 9715              ; ---------------------------------------------------
 121+ 9715
 122+ 9715 ED 73 F2 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9719 FD F9        	ld sp,iy
 124+ 971B
 125+ 971B              ; >>>
 126+ 971B
 127+ 971B 06 10            ld b,16
 128+ 971D D1           1 pop de
 129+ 971E 7A           	ld a,d
 130+ 971F AE           	xor (hl)
 131+ 9720 77           	ld (hl),a
 132+ 9721 24           	inc h
 133+ 9722 7C               ld a,h
 134+ 9723 E6 07            and 7
 135+ 9725 20 0C            jr nz,2F
 136+ 9727 7D               ld a,l
 137+ 9728 C6 20            add a,$20
 138+ 972A 6F               ld l,a
 139+ 972B 38 06            jr c,2F
 140+ 972D 7C               ld a,h
 141+ 972E D6 08            sub 8
 142+ 9730 67               ld h,a
 143+ 9731 18 00            jr 2F
 144+ 9733 7C           2 ld a,h
 145+ 9734 FE 58            cp $58
 146+ 9736 28 02            jr z,3F
 147+ 9738 10 E3            djnz 1B
 148+ 973A ED 7B F2 89  3 ld sp,(Stack)
 149+ 973E C9           	ret
 150+ 973F
 151+ 973F ED 73 F2 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9743 FD F9        	ld sp,iy
 153+ 9745
 154+ 9745              ; >>>
 155+ 9745
 156+ 9745 06 10            ld b,16
 157+ 9747 D1           1 pop de
 158+ 9748 7B           	ld a,e
 159+ 9749 AE           	xor (hl)
 160+ 974A 77           	ld (hl),a
 161+ 974B 24           	inc h
 162+ 974C 7C               ld a,h
 163+ 974D E6 07            and 7
 164+ 974F 20 0C            jr nz,2F
 165+ 9751 7D               ld a,l
 166+ 9752 C6 20            add a,$20
 167+ 9754 6F               ld l,a
 168+ 9755 38 06            jr c,2F
 169+ 9757 7C               ld a,h
 170+ 9758 D6 08            sub 8
 171+ 975A 67               ld h,a
 172+ 975B 18 00            jr 2F
 173+ 975D 7C           2 ld a,h
 174+ 975E FE 58            cp $58
 175+ 9760 28 02            jr z,3F
 176+ 9762 10 E3            djnz 1B
 177+ 9764 ED 7B F2 89  3 ld sp,(Stack)
 178+ 9768 C9           	ret
 179+ 9769
 180+ 9769              ; ---------------------------------------------------
 181+ 9769
 182+ 9769 ED 73 F2 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 976D FD F9        	ld sp,iy
 184+ 976F 06 08            ld b,8
 185+ 9771 D1           1 pop de
 186+ 9772 7A           	ld a,d
 187+ 9773 AE           	xor (hl)
 188+ 9774 77           	ld (hl),a
 189+ 9775 23           	inc hl
 190+ 9776 D1           	pop de
 191+ 9777 7B           	ld a,e
 192+ 9778 AE           	xor (hl)
 193+ 9779 77           	ld (hl),a
 194+ 977A 2B           	dec hl
 195+ 977B 24            	inc h
 196+ 977C 7C               ld a,h
 197+ 977D E6 07            and 7
 198+ 977F 20 0A            jr nz,2F
 199+ 9781 7D               ld a,l
 200+ 9782 C6 20            add a,$20
 201+ 9784 6F               ld l,a
 202+ 9785 38 04            jr c,2F
 203+ 9787 7C               ld a,h
 204+ 9788 D6 08            sub 8
 205+ 978A 67               ld h,a
 206+ 978B 7C           2 ld a,h
 207+ 978C FE 58            cp $58
 208+ 978E 28 20            jr z,4F
 209+ 9790 D1               pop de
 210+ 9791 7B           	ld a,e
 211+ 9792 AE           	xor (hl)
 212+ 9793 77           	ld (hl),a
 213+ 9794 23           	inc hl
 214+ 9795 7A           	ld a,d
 215+ 9796 AE           	xor (hl)
 216+ 9797 77           	ld (hl),a
 217+ 9798 2B           	dec hl
 218+ 9799 24           	inc h
 219+ 979A 7C               ld a,h
 220+ 979B E6 07            and 7
 221+ 979D 20 0A            jr nz,3F
 222+ 979F 7D               ld a,l
 223+ 97A0 C6 20            add a,$20
 224+ 97A2 6F               ld l,a
 225+ 97A3 38 04            jr c,3F
 226+ 97A5 7C               ld a,h
 227+ 97A6 D6 08            sub 8
 228+ 97A8 67               ld h,a
 229+ 97A9 7C           3 ld a,h
 230+ 97AA FE 58            cp $58
 231+ 97AC 28 02            jr z,4F
 232+ 97AE 10 C1            djnz 1B
 233+ 97B0 ED 7B F2 89  4 ld sp,(Stack)
 234+ 97B4 C9           	ret
 235+ 97B5
 236+ 97B5 ED 73 F2 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97B9 FD F9        	ld sp,iy
 238+ 97BB 06 08            ld b,8
 239+ 97BD D1           1 pop de
 240+ 97BE D1           	pop de
 241+ 97BF 7B           	ld a,e
 242+ 97C0 AE           	xor (hl)
 243+ 97C1 77           	ld (hl),a
 244+ 97C2 24            	inc h
 245+ 97C3 7C               ld a,h
 246+ 97C4 E6 07            and 7
 247+ 97C6 20 0A            jr nz,2F
 248+ 97C8 7D               ld a,l
 249+ 97C9 C6 20            add a,$20
 250+ 97CB 6F               ld l,a
 251+ 97CC 38 04            jr c,2F
 252+ 97CE 7C               ld a,h
 253+ 97CF D6 08            sub 8
 254+ 97D1 67               ld h,a
 255+ 97D2 7C           2 ld a,h
 256+ 97D3 FE 58            cp $58
 257+ 97D5 28 1B            jr z,4F
 258+ 97D7 D1               pop de
 259+ 97D8 7A           	ld a,d
 260+ 97D9 AE           	xor (hl)
 261+ 97DA 77           	ld (hl),a
 262+ 97DB 24           	inc h
 263+ 97DC 7C               ld a,h
 264+ 97DD E6 07            and 7
 265+ 97DF 20 0A            jr nz,3F
 266+ 97E1 7D               ld a,l
 267+ 97E2 C6 20            add a,$20
 268+ 97E4 6F               ld l,a
 269+ 97E5 38 04            jr c,3F
 270+ 97E7 7C               ld a,h
 271+ 97E8 D6 08            sub 8
 272+ 97EA 67               ld h,a
 273+ 97EB 7C           3 ld a,h
 274+ 97EC FE 58            cp $58
 275+ 97EE 28 02            jr z,4F
 276+ 97F0 10 CB            djnz 1B
 277+ 97F2 ED 7B F2 89  4 ld sp,(Stack)
 278+ 97F6 C9           	ret
 279+ 97F7
 280+ 97F7 ED 73 F2 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97FB FD F9        	ld sp,iy
 282+ 97FD 06 08            ld b,8
 283+ 97FF D1           1 pop de
 284+ 9800 7B           	ld a,e
 285+ 9801 AE           	xor (hl)
 286+ 9802 77           	ld (hl),a
 287+ 9803 23           	inc hl
 288+ 9804 7A           	ld a,d
 289+ 9805 AE           	xor (hl)
 290+ 9806 77           	ld (hl),a
 291+ 9807 2B           	dec hl
 292+ 9808 24             	inc h
 293+ 9809 7C               ld a,h
 294+ 980A E6 07            and 7
 295+ 980C 20 0A            jr nz,2F
 296+ 980E 7D               ld a,l
 297+ 980F C6 20            add a,$20
 298+ 9811 6F               ld l,a
 299+ 9812 38 04            jr c,2F
 300+ 9814 7C               ld a,h
 301+ 9815 D6 08            sub 8
 302+ 9817 67               ld h,a
 303+ 9818 7C           2 ld a,h
 304+ 9819 FE 58            cp $58
 305+ 981B 28 21            jr z,4F
 306+ 981D D1               pop de
 307+ 981E 7A           	ld a,d
 308+ 981F AE           	xor (hl)
 309+ 9820 77           	ld (hl),a
 310+ 9821 23           	inc hl
 311+ 9822 D1               pop de
 312+ 9823 7B           	ld a,e
 313+ 9824 AE           	xor (hl)
 314+ 9825 77           	ld (hl),a
 315+ 9826 2B           	dec hl
 316+ 9827 24           	inc h
 317+ 9828 7C               ld a,h
 318+ 9829 E6 07            and 7
 319+ 982B 20 0A            jr nz,3F
 320+ 982D 7D               ld a,l
 321+ 982E C6 20            add a,$20
 322+ 9830 6F               ld l,a
 323+ 9831 38 04            jr c,3F
 324+ 9833 7C               ld a,h
 325+ 9834 D6 08            sub 8
 326+ 9836 67               ld h,a
 327+ 9837 7C           3 ld a,h
 328+ 9838 FE 58            cp $58
 329+ 983A 28 02            jr z,4F
 330+ 983C 10 C1            djnz 1B
 331+ 983E ED 7B F2 89  4 ld sp,(Stack)
 332+ 9842 C9           	ret
 333+ 9843
 334+ 9843 ED 73 F2 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9847 FD F9        	ld sp,iy
 336+ 9849 06 08            ld b,8
 337+ 984B D1           1 pop de
 338+ 984C 7B           	ld a,e
 339+ 984D AE           	xor (hl)
 340+ 984E 77           	ld (hl),a
 341+ 984F 24            	inc h
 342+ 9850 7C               ld a,h
 343+ 9851 E6 07            and 7
 344+ 9853 20 0A            jr nz,2F
 345+ 9855 7D               ld a,l
 346+ 9856 C6 20            add a,$20
 347+ 9858 6F               ld l,a
 348+ 9859 38 04            jr c,2F
 349+ 985B 7C               ld a,h
 350+ 985C D6 08            sub 8
 351+ 985E 67               ld h,a
 352+ 985F 7C           2 ld a,h
 353+ 9860 FE 58            cp $58
 354+ 9862 28 1C            jr z,4F
 355+ 9864 D1               pop de
 356+ 9865 7A           	ld a,d
 357+ 9866 AE           	xor (hl)
 358+ 9867 77           	ld (hl),a
 359+ 9868 24           	inc h
 360+ 9869 7C               ld a,h
 361+ 986A E6 07            and 7
 362+ 986C 20 0A            jr nz,3F
 363+ 986E 7D               ld a,l
 364+ 986F C6 20            add a,$20
 365+ 9871 6F               ld l,a
 366+ 9872 38 04            jr c,3F
 367+ 9874 7C               ld a,h
 368+ 9875 D6 08            sub 8
 369+ 9877 67               ld h,a
 370+ 9878 7C           3 ld a,h
 371+ 9879 FE 58            cp $58
 372+ 987B 28 03            jr z,4F
 373+ 987D D1               pop de
 374+ 987E 10 CB            djnz 1B
 375+ 9880 ED 7B F2 89  4 ld sp,(Stack)
 376+ 9884 C9           	ret
 377+ 9885
 378+ 9885              ; ---------------------------------------------------
 379+ 9885              ;
 380+ 9885              ;   27/02/23
 381+ 9885              ;
 382+ 9885              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9885              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9885              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9885
 386+ 9885 ED 73 F2 89  Pinta_Disparo ld (Stack),sp
 387+ 9889 FD F9            ld sp,iy
 388+ 988B 06 04            ld b,4
 389+ 988D D1           1 pop de
 390+ 988E 7B               ld a,e
 391+ 988F AE               xor (hl)
 392+ 9890 77               ld (hl),a
 393+ 9891 23               inc hl
 394+ 9892 7A               ld a,d
 395+ 9893 AE               xor (hl)
 396+ 9894 77               ld (hl),a
 397+ 9895 2B               dec hl
 398+ 9896
 399+ 9896 24               inc h
 400+ 9897 7C               ld a,h
 401+ 9898 E6 07            and 7
 402+ 989A 20 0A            jr nz,2F
 403+ 989C 7D               ld a,l
 404+ 989D C6 20            add a,$20
 405+ 989F 6F               ld l,a
 406+ 98A0 38 04            jr c,2F
 407+ 98A2 7C               ld a,h
 408+ 98A3 D6 08            sub 8
 409+ 98A5 67               ld h,a
 410+ 98A6 7C           2 ld a,h
 411+ 98A7 FE 58            cp $58
 412+ 98A9 28 02            jr z,3F
 413+ 98AB
 414+ 98AB 10 E0            djnz 1B
 415+ 98AD ED 7B F2 89  3 ld sp,(Stack)
 416+ 98B1 C9               ret
 417+ 98B2
# file closed: Rutinas_de_impresion_sprites.asm
1248  98B2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98B2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98B2              ;
   3+ 98B2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98B2              ;
   5+ 98B2              ; *****************************************************************************************************************************************************************************************
   6+ 98B2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98B2
   8+ 98B2 7C           calcula_tercio ld a,h
   9+ 98B3 E6 18        	and $18
  10+ 98B5 CB 2F        	sra a
  11+ 98B7 CB 2F        	sra a
  12+ 98B9 CB 2F        	sra a
  13+ 98BB C9           	ret
  14+ 98BC
# file closed: calcula_tercio.asm
1249  98BC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98BC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98BC              ;
   3+ 98BC              ;
   4+ 98BC              ;	CLS.
   5+ 98BC              ;
   6+ 98BC              ;	Limpia la pantalla y define sus atributos.
   7+ 98BC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98BC              ;
   9+ 98BC              ;	COLORES: 0 ..... NEGRO
  10+ 98BC              ;    		 1 ..... AZUL
  11+ 98BC              ; 			 2 ..... ROJO
  12+ 98BC              ;			 3 ..... MAGENTA
  13+ 98BC              ; 			 4 ..... VERDE
  14+ 98BC              ; 			 5 ..... CIAN
  15+ 98BC              ;			 6 ..... AMARILLO
  16+ 98BC              ; 			 7 ..... BLANCO
  17+ 98BC              ;
  18+ 98BC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98BC              ;
  20+ 98BC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98BC
  22+ 98BC
  23+ 98BC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98BF 11 01 40     	LD DE,$4001
  25+ 98C2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98C5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98C7 ED B0        	LDIR
  28+ 98C9 01 FF 02     	LD BC,767
  29+ 98CC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98CD ED B0        	LDIR
  31+ 98CF C9           	ret
  32+ 98D0
# file closed: Cls.asm
1250  98D0              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98D0              ; ******************************************************************************************************************************************************************************************
   2+ 98D0              ;
   3+ 98D0              ;   20/05/23
   4+ 98D0              ;
   5+ 98D0              ;	Recompone_posicion_inicio
   6+ 98D0              ;
   7+ 98D0              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98D0              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98D0              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98D0              ;	_ a una u otra rutina.
  11+ 98D0
  12+ 98D0              Recompone_posicion_inicio
  13+ 98D0
  14+ 98D0 2A B5 89     	ld hl,(Posicion_inicio)
  15+ 98D3 7D           	ld a,l
  16+ 98D4 E6 1F        	and $1f
  17+ 98D6 28 16        	jr z,1F
  18+ 98D8
  19+ 98D8 FE 1F        	cp $1f
  20+ 98DA 28 0D        	jr z,3F
  21+ 98DC
  22+ 98DC 21 DF 89     	ld hl,Ctrl_2
  23+ 98DF CB C6        	set 0,(hl)
  24+ 98E1 2A A7 89     	ld hl,(Puntero_objeto)
  25+ 98E4 22 E2 89     	ld (Repone_puntero_objeto),hl
  26+ 98E7 18 08        	jr 2F
  27+ 98E9
  28+ 98E9 CD 8A 9A     3 call Mov_left
  29+ 98EC 18 03        	jr 2F
  30+ 98EE
  31+ 98EE CD 6C 99     1 call Mov_right
  32+ 98F1 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98F4 22 A7 89     	ld (Puntero_objeto),hl
  34+ 98F7 C9           	ret
  35+ 98F8
  36+ 98F8              ; ******************************************************************************************************************************************************************************************
  37+ 98F8              ;
  38+ 98F8              ;   27/05/23
  39+ 98F8              ;
  40+ 98F8              ;	Mov_down
  41+ 98F8              ;
  42+ 98F8              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98F8              ;
  44+ 98F8              ;
  45+ 98F8              Mov_down
  46+ 98F8
  47+ 98F8 CD 5A 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98FB              ;																	; _ repone (Puntero_objeto).
  49+ 98FB 21 D1 89     	ld hl,Ctrl_0
  50+ 98FE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9900              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9900              ; 																	; _ en el caso de que no lo haya.
  53+ 9900 3A BB 89     	ld a,(Vel_down)
  54+ 9903 47           	ld b,a
  55+ 9904 2A A5 89         ld hl,(Posicion_actual)
  56+ 9907 CD B2 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 990A E6 02        	and 2
  58+ 990C 28 0F        	jr z,1F
  59+ 990E
  60+ 990E              ; Nos encontramos en el último tercio de pantalla.
  61+ 990E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 990E
  63+ 990E 7C           	ld a,h
  64+ 990F FE 57        	cp $57
  65+ 9911 20 0A        	jr nz,1F
  66+ 9913 7D           	ld a,l
  67+ 9914 C6 20        	add $20
  68+ 9916 30 05        	jr nc,1F
  69+ 9918
  70+ 9918              ; ------------------------------
  71+ 9918 CD 08 9C     	call Reaparece_arriba
  72+ 991B              ;	call Reinicio
  73+ 991B              ; ------------------------------
  74+ 991B
  75+ 991B 18 08        	jr 3F
  76+ 991D CD F2 95     1 call NextScan
  77+ 9920 22 A5 89     	ld (Posicion_actual),hl
  78+ 9923 10 E2            djnz 2B
  79+ 9925 CD 1E 9C     3 call Genera_coordenadas
  80+ 9928 C9           	ret
  81+ 9929
  82+ 9929              ; ******************************************************************************************************************************************************************************************
  83+ 9929              ;
  84+ 9929              ;   27/05/23
  85+ 9929              ;
  86+ 9929              ;	Mov_up
  87+ 9929              ;
  88+ 9929              ; 	Mueve el Sprite hacia arriba.
  89+ 9929              ;
  90+ 9929              ;
  91+ 9929              Mov_up
  92+ 9929
  93+ 9929 CD 5A 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 992C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 992C 21 D1 89     	ld hl,Ctrl_0
  96+ 992F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9931              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9931              ; 																		; _ en el caso de que no lo haya.
  99+ 9931 3A BA 89     	ld a,(Vel_up)
 100+ 9934 47           	ld b,a
 101+ 9935 2A A5 89     	ld hl,(Posicion_actual)
 102+ 9938 CD B2 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 993B A7           	and a
 104+ 993C 20 10        	jr nz,1F
 105+ 993E
 106+ 993E              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 993E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 993E
 109+ 993E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 993F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9941 20 0B            jr nz,1F
 112+ 9943 7D               ld a,l
 113+ 9944 D6 20            sub $20
 114+ 9946 30 06            jr nc,1F
 115+ 9948 25               dec h
 116+ 9949
 117+ 9949              ; -----------------------------
 118+ 9949 CD F8 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 994C              ;	call Reinicio
 120+ 994C              ; -----------------------------
 121+ 994C
 122+ 994C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 994E CD 01 96     1 call PreviousScan
 124+ 9951 22 A5 89     	ld (Posicion_actual),hl
 125+ 9954 10 E2            djnz 3B
 126+ 9956 CD 1E 9C     2 call Genera_coordenadas
 127+ 9959 C9           	ret
 128+ 995A
 129+ 995A              ; -----------------------------
 130+ 995A              ;
 131+ 995A              ;	27/5/23
 132+ 995A              ;
 133+ 995A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 995A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 995A              ;
 136+ 995A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 995A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 995A              ;
 139+ 995A              ;	Modifica: A y (Puntero_objeto).
 140+ 995A
 141+ 995A 3A DF 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 995D CB 47        	bit 0,a
 143+ 995F C8           	ret z
 144+ 9960 CB 87        	res 0,a
 145+ 9962 32 DF 89     	ld (Ctrl_2),a
 146+ 9965 2A E2 89     	ld hl,(Repone_puntero_objeto)
 147+ 9968 22 A7 89     	ld (Puntero_objeto),hl
 148+ 996B C9           	ret
 149+ 996C
 150+ 996C              ; ******************************************************************************************************************************************************************************************
 151+ 996C              ;
 152+ 996C              ;	19/10/22
 153+ 996C              ;
 154+ 996C              ;	Mov_right.
 155+ 996C              ;
 156+ 996C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 996C              ;
 158+ 996C
 159+ 996C 21 D1 89     Mov_right ld hl,Ctrl_0
 160+ 996F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9971              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9971              ; 																	; _ en el caso de que no lo haya.
 163+ 9971 3A D1 89     	ld a,(Ctrl_0)
 164+ 9974 CB 77        	bit 6,a
 165+ 9976 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9978
 167+ 9978 CD A6 9B     	call Stop_Amadeus_right
 168+ 997B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 997C 18 4D        	jr 8F
 170+ 997E
 171+ 997E 3A A9 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 9981 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 9983 20 46        	jr nz,8F
 174+ 9985
 175+ 9985 3A AB 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 9988 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 9989 28 40        	jr z,8F
 178+ 998B
 179+ 998B              ; ---------- ---------- ----------
 180+ 998B              ;
 181+ 998B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 998B
 183+ 998B 3A B9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 998E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 9990 28 11        	jr z,1F
 186+ 9992 38 06        	jr c,6F
 187+ 9994 FE 04        	cp 4
 188+ 9996 28 14        	jr z,7F
 189+ 9998 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 999A
 191+ 999A              ; ---------- ---------- ----------
 192+ 999A              ;
 193+ 999A              ; Perfiles de velocidad
 194+ 999A              ;
 195+ 999A
 196+ 999A 3A AB 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 999D FE FE        	cp $fe
 198+ 999F 20 2A        	jr nz,8F
 199+ 99A1 18 10        	jr 3F
 200+ 99A3 3A AB 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99A6 FE FD        	cp $fd
 202+ 99A8 20 21        	jr nz,8F
 203+ 99AA 18 07        	jr 3F
 204+ 99AC 3A AB 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99AF FE FB        	cp $fb
 206+ 99B1 20 18        	jr nz,8F
 207+ 99B3
 208+ 99B3              ; ---------- ---------- ----------
 209+ 99B3
 210+ 99B3              3
 211+ 99B3 CD E6 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99B6              ;	call Reinicio
 213+ 99B6
 214+ 99B6              ; ---------- ---------- ----------
 215+ 99B6              ;
 216+ 99B6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99B6
 218+ 99B6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99B8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99B9 CD D2 99     	call DESPLZ_DER
 221+ 99BC C1           	pop bc
 222+ 99BD 10 F9        	djnz 5B
 223+ 99BF 2A A5 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99C2 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99C3 22 A5 89     	ld (Posicion_actual),hl
 226+ 99C6 CD 1E 9C     	call Genera_coordenadas
 227+ 99C9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99CB
 229+ 99CB              ; ---------- ---------- ----------
 230+ 99CB
 231+ 99CB 2A A5 89     8 ld hl,(Posicion_actual)
 232+ 99CE CD D2 99     	call DESPLZ_DER
 233+ 99D1 C9           2 ret
 234+ 99D2
 235+ 99D2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99D2              ;
 237+ 99D2              ;	22/9/22
 238+ 99D2              ;
 239+ 99D2
 240+ 99D2 CD E1 99     DESPLZ_DER call Desplaza_derecha
 241+ 99D5 CD 2D 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99D8 CD 56 9A         call Ciclo_completo
 243+ 99DB 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99DE CB FE        	set 7,(hl)
 245+ 99E0 C9           	ret
 246+ 99E1
 247+ 99E1              ; ******************************************************************************************************************************************************************************************
 248+ 99E1              ;	15/02/23
 249+ 99E1              ;
 250+ 99E1
 251+ 99E1 3A B9 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99E4 47           	ld b,a
 253+ 99E5 2A B1 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 99E8 23           1 inc hl
 255+ 99E9 23           	inc hl
 256+ 99EA 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 99EC 22 B1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 99EF CD 00 8D     	call Extrae_address
 259+ 99F2 22 A7 89     	ld (Puntero_objeto),hl
 260+ 99F5
 261+ 99F5              ; Modifica (Puntero_DESPLZ_izq).
 262+ 99F5
 263+ 99F5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 99F5              ; Cuántos movimientos hemos hecho ??
 265+ 99F5              ; DE contiene (Puntero_DESPLZ_der).
 266+ 99F5
 267+ 99F5 2A AD 89     7 ld hl,(Indice_Sprite_der)
 268+ 99F8 EB           	ex de,hl
 269+ 99F9 A7           	and a
 270+ 99FA ED 52        	sbc hl,de
 271+ 99FC CB 3D        	srl l
 272+ 99FE 3E 08        6 ld a,8
 273+ 9A00 95           	sub l
 274+ 9A01 30 1E        	jr nc,3F
 275+ 9A03
 276+ 9A03              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A03              ; B="0".
 278+ 9A03
 279+ 9A03 04           4 inc b
 280+ 9A04 3C           	inc a
 281+ 9A05 20 FC        	jr nz,4B
 282+ 9A07 78           	ld a,b
 283+ 9A08 08           	ex af,af
 284+ 9A09 2A AD 89     	ld hl,(Indice_Sprite_der)
 285+ 9A0C 23           5 inc hl
 286+ 9A0D 23           	inc hl
 287+ 9A0E 10 FC        	djnz 5B
 288+ 9A10 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A13 CD 00 8D     	call Extrae_address
 290+ 9A16 22 A7 89     	ld (Puntero_objeto),hl
 291+ 9A19
 292+ 9A19              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A19              ; _(Posicion_actual).
 294+ 9A19
 295+ 9A19 21 A5 89     	ld hl,Posicion_actual
 296+ 9A1C 34           	inc (hl)
 297+ 9A1D 08               ex af,af
 298+ 9A1E 6F           	ld l,a
 299+ 9A1F 18 DD        	jr 6B
 300+ 9A21
 301+ 9A21              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A21
 303+ 9A21 47           3 ld b,a
 304+ 9A22 2A AF 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A25 23           2 inc hl
 306+ 9A26 23           	inc hl
 307+ 9A27 10 FC        	djnz 2B
 308+ 9A29 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A2C C9           8 ret
 310+ 9A2D
 311+ 9A2D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A2D              ;
 313+ 9A2D              ;	24/7/22
 314+ 9A2D              ;
 315+ 9A2D              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A2D              ;
 317+ 9A2D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A2D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A2D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A2D
 321+ 9A2D 3A AB 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A30 A7           	and a
 323+ 9A31 20 1F        	jr nz,1F
 324+ 9A33 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A35 32 AB 89         ld (CTRL_DESPLZ),a
 326+ 9A38
 327+ 9A38 21 A4 89     	ld hl,Columns
 328+ 9A3B 34           	inc (hl)
 329+ 9A3C 3A B7 89     	ld a,(Cuad_objeto)
 330+ 9A3F E6 01        	and 1
 331+ 9A41 28 0F        	jr z,1F
 332+ 9A43 2A A5 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A46 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A47 22 A5 89     	ld (Posicion_actual),hl
 335+ 9A4A CD 1E 9C     	call Genera_coordenadas
 336+ 9A4D CD B2 9B     	call Inc_CTRL_DESPLZ
 337+ 9A50 18 03        	jr 2F
 338+ 9A52 CD B2 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A55 C9           2 ret
 340+ 9A56
 341+ 9A56              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A56              ;
 343+ 9A56              ;	24/7/22
 344+ 9A56              ;
 345+ 9A56              ;	Ciclo_completo.
 346+ 9A56              ;
 347+ 9A56              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A56              ;
 349+ 9A56              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A56              ; 	Decrementamos (Columns).
 351+ 9A56              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A56              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A56
 354+ 9A56
 355+ 9A56 3A AB 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A59 FE FF        	cp $ff
 357+ 9A5B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A5D E6 F0        	and $f0
 359+ 9A5F 20 28        	jr nz,3F
 360+ 9A61
 361+ 9A61              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A61
 363+ 9A61 3A AB 89     	ld a,(CTRL_DESPLZ)
 364+ 9A64 47           	ld b,a
 365+ 9A65 3E F8        	ld a,$f8
 366+ 9A67 80           	add b
 367+ 9A68 32 AB 89     	ld (CTRL_DESPLZ),a
 368+ 9A6B 18 1C        	jr 3F
 369+ 9A6D 21 A4 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A70 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A71 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A72 32 AB 89     	ld (CTRL_DESPLZ),a
 373+ 9A75 3A B7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A78 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A7A 20 0A        	jr nz,2F
 376+ 9A7C 2A A5 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A7F 23           	inc hl
 378+ 9A80 22 A5 89     	ld (Posicion_actual),hl
 379+ 9A83 CD 1E 9C     	call Genera_coordenadas
 380+ 9A86
 381+ 9A86              ; Inicia el puntero de Sprite.
 382+ 9A86
 383+ 9A86 CD 17 8D     2 call Inicia_puntero_objeto_der
 384+ 9A89 C9           3 ret
 385+ 9A8A
 386+ 9A8A              ; ******************************************************************************************************************************************************************************************
 387+ 9A8A              ;
 388+ 9A8A              ;	15/02/23
 389+ 9A8A              ;
 390+ 9A8A              ;	Mov_left.
 391+ 9A8A              ;
 392+ 9A8A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9A8A              ;
 394+ 9A8A 21 D1 89     Mov_left ld hl,Ctrl_0
 395+ 9A8D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9A8F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9A8F              ; 																	; _ en el caso de que no lo haya.
 398+ 9A8F 3A D1 89     	ld a,(Ctrl_0)
 399+ 9A92 CB 77        	bit 6,a
 400+ 9A94 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9A96
 402+ 9A96 CD AC 9B     	call Stop_Amadeus_left
 403+ 9A99 C8           	ret z
 404+ 9A9A 20 4A        	jr nz,8F
 405+ 9A9C
 406+ 9A9C 3A A9 89     11 ld a,(Coordenada_X)
 407+ 9A9F A7           	and a
 408+ 9AA0 20 44        	jr nz,8F
 409+ 9AA2
 410+ 9AA2 3A AB 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9AA5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9AA6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9AA8
 414+ 9AA8              ; ---------- ---------- ----------
 415+ 9AA8
 416+ 9AA8 3A B8 89     	ld a,(Vel_left)
 417+ 9AAB FE 02        	cp 2
 418+ 9AAD 28 0F        	jr z,1F
 419+ 9AAF 38 04        	jr c,6F
 420+ 9AB1 FE 04        	cp 4
 421+ 9AB3 28 12        	jr z,7F
 422+ 9AB5
 423+ 9AB5              ; ---------- ---------- ----------
 424+ 9AB5
 425+ 9AB5 3A AB 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AB8 FE F8        	cp $f8
 427+ 9ABA 20 2A        	jr nz,8F
 428+ 9ABC 18 10        	jr 4F
 429+ 9ABE 3A AB 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AC1 FE F9        	cp $f9
 431+ 9AC3 20 21        	jr nz,8F
 432+ 9AC5 18 07        	jr 4F
 433+ 9AC7 3A AB 89     7 ld a,(CTRL_DESPLZ)
 434+ 9ACA FE FB        	cp $fb
 435+ 9ACC 20 18        	jr nz,8F
 436+ 9ACE
 437+ 9ACE              ; ---------- ---------- ----------
 438+ 9ACE
 439+ 9ACE              4
 440+ 9ACE CD D4 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AD1              ;	call Reinicio
 442+ 9AD1
 443+ 9AD1              ; ---------- ---------- ----------
 444+ 9AD1
 445+ 9AD1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AD3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9AD4
 448+ 9AD4              ;	ld hl,(Indice_Sprite_izq)
 449+ 9AD4              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9AD4
 451+ 9AD4 CD ED 9A     	call DESPLZ_IZQ
 452+ 9AD7 C1           	pop bc
 453+ 9AD8 10 F9        	djnz 5B
 454+ 9ADA 2A A5 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9ADD 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9ADE 22 A5 89     	ld (Posicion_actual),hl
 457+ 9AE1 CD 1E 9C     	call Genera_coordenadas
 458+ 9AE4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9AE6
 460+ 9AE6              ; ---------- ---------- ----------
 461+ 9AE6
 462+ 9AE6              ; Movemos, no hay recolocación.
 463+ 9AE6
 464+ 9AE6 2A A5 89     8 ld hl,(Posicion_actual)
 465+ 9AE9 CD ED 9A     	call DESPLZ_IZQ
 466+ 9AEC C9           2 ret
 467+ 9AED
 468+ 9AED              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9AED              ;
 470+ 9AED              ;	22/9/22
 471+ 9AED
 472+ 9AED              DESPLZ_IZQ
 473+ 9AED
 474+ 9AED CD FC 9A     	call Desplaza_izquierda
 475+ 9AF0 CD 48 9B         call modifica_parametros_1er_DESPLZ
 476+ 9AF3 CD 70 9B     	call Ciclo_completo_2
 477+ 9AF6 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9AF9 CB BE        	res 7,(hl)
 479+ 9AFB C9           	ret
 480+ 9AFC
 481+ 9AFC              Desplaza_izquierda
 482+ 9AFC
 483+ 9AFC 3A B8 89     	ld a,(Vel_left)
 484+ 9AFF 47           	ld b,a
 485+ 9B00 2A B3 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B03 23           1 inc hl
 487+ 9B04 23           	inc hl
 488+ 9B05 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B07 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B0A CD 00 8D     	call Extrae_address
 491+ 9B0D 22 A7 89     	ld (Puntero_objeto),hl
 492+ 9B10
 493+ 9B10              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B10
 495+ 9B10              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B10              ; Cuántos movimientos hemos hecho ??
 497+ 9B10              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B10
 499+ 9B10 2A AF 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B13 EB           	ex de,hl
 501+ 9B14 A7           	and a
 502+ 9B15 ED 52        	sbc hl,de
 503+ 9B17 CB 3D        	srl l
 504+ 9B19 3E 08        6 ld a,8
 505+ 9B1B 95           	sub l
 506+ 9B1C 30 1E        	jr nc,3F
 507+ 9B1E
 508+ 9B1E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B1E              ; B="0".
 510+ 9B1E
 511+ 9B1E 04           4 inc b
 512+ 9B1F 3C           	inc a
 513+ 9B20 20 FC        	jr nz,4B
 514+ 9B22 78           	ld a,b
 515+ 9B23 08           	ex af,af
 516+ 9B24 2A AF 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B27 23           5 inc hl
 518+ 9B28 23           	inc hl
 519+ 9B29 10 FC        	djnz 5B
 520+ 9B2B 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B2E CD 00 8D     	call Extrae_address
 522+ 9B31 22 A7 89     	ld (Puntero_objeto),hl
 523+ 9B34
 524+ 9B34              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B34              ; _(Posicion_actual).
 526+ 9B34
 527+ 9B34 21 A5 89     	ld hl,Posicion_actual
 528+ 9B37 35           	dec (hl)
 529+ 9B38 08           	ex af,af
 530+ 9B39 6F           	ld l,a
 531+ 9B3A 18 DD        	jr 6B
 532+ 9B3C
 533+ 9B3C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B3C
 535+ 9B3C 47           3 ld b,a
 536+ 9B3D 2A AD 89     	ld hl,(Indice_Sprite_der)
 537+ 9B40 23           2 inc hl
 538+ 9B41 23           	inc hl
 539+ 9B42 10 FC        	djnz 2B
 540+ 9B44 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B47 C9           8 ret
 542+ 9B48
 543+ 9B48              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B48              ;
 545+ 9B48              ;	modifica_parametros_1er_DESPLZ
 546+ 9B48              ;
 547+ 9B48              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B48              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B48              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B48
 551+ 9B48 3A AB 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B4B A7           	and a
 553+ 9B4C 20 1E        	jr nz,1F
 554+ 9B4E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B4F 32 AB 89         ld (CTRL_DESPLZ),a
 556+ 9B52 21 A4 89     	ld hl,Columns
 557+ 9B55 34           	inc (hl)
 558+ 9B56 3A B7 89     	ld a,(Cuad_objeto)
 559+ 9B59 E6 01        	and 1
 560+ 9B5B 20 0F        	jr nz,1F
 561+ 9B5D 2A A5 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B60 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B61 22 A5 89     	ld (Posicion_actual),hl
 564+ 9B64 CD 1E 9C     	call Genera_coordenadas
 565+ 9B67 CD C3 9B     	call Dec_CTRL_DESPLZ
 566+ 9B6A 18 03        	jr 2F
 567+ 9B6C CD C3 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B6F C9           2 ret
 569+ 9B70
 570+ 9B70              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B70
 572+ 9B70 3A AB 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B73 FE F7        	cp $f7
 574+ 9B75 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B77 30 2C        	jr nc,3F
 576+ 9B79
 577+ 9B79              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B79
 579+ 9B79 06 00        	ld b,0
 580+ 9B7B 04           4 inc b
 581+ 9B7C 3C           	inc a
 582+ 9B7D FE F7        	cp $f7
 583+ 9B7F 20 FA        	jr nz,4B
 584+ 9B81 3E FF        	ld a,$ff
 585+ 9B83 90           	sub b
 586+ 9B84 32 AB 89     	ld (CTRL_DESPLZ),a
 587+ 9B87 18 1C        	jr 3F
 588+ 9B89
 589+ 9B89              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9B89
 591+ 9B89 21 A4 89     1 ld hl,Columns
 592+ 9B8C 35           	dec (hl)
 593+ 9B8D AF           	xor a
 594+ 9B8E 32 AB 89     	ld (CTRL_DESPLZ),a
 595+ 9B91 3A B7 89     	ld a,(Cuad_objeto)
 596+ 9B94 E6 01        	and 1
 597+ 9B96 28 0A        	jr z,2F
 598+ 9B98 2A A5 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9B9B 2B           	dec hl
 600+ 9B9C 22 A5 89     	ld (Posicion_actual),hl
 601+ 9B9F CD 1E 9C     	call Genera_coordenadas
 602+ 9BA2
 603+ 9BA2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BA2
 605+ 9BA2 CD 2A 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BA5 C9           3 ret
 607+ 9BA6
 608+ 9BA6              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BA6              ;
 610+ 9BA6              ;	19/10/22
 611+ 9BA6              ;
 612+ 9BA6              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BA6              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BA6
 615+ 9BA6 3A A9 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BA9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BAB C9           	ret
 618+ 9BAC
 619+ 9BAC              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BAC              ;
 621+ 9BAC              ;	19/10/22
 622+ 9BAC              ;
 623+ 9BAC              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BAC              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BAC
 626+ 9BAC 3A A9 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BAF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BB1 C9           	ret
 629+ 9BB2
 630+ 9BB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BB2              ;
 632+ 9BB2              ;	24/7/22
 633+ 9BB2              ;
 634+ 9BB2              ;	Inc_CTRL_DESPLZ
 635+ 9BB2              ;
 636+ 9BB2              ;
 637+ 9BB2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BB2
 639+ 9BB2 21 AB 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BB5 3A B9 89     	ld a,(Vel_right)
 641+ 9BB8 A7           	and a
 642+ 9BB9 28 06        	jr z,1F
 643+ 9BBB 47           	ld b,a
 644+ 9BBC 34           3 inc (hl)
 645+ 9BBD 10 FD        	djnz 3B
 646+ 9BBF 18 01        	jr 2F
 647+ 9BC1 34           1 inc (hl)
 648+ 9BC2 C9           2 ret
 649+ 9BC3
 650+ 9BC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BC3              ;
 652+ 9BC3              ;	5/2/23
 653+ 9BC3              ;
 654+ 9BC3              ;	Dec_CTRL_DESPLZ
 655+ 9BC3              ;
 656+ 9BC3              ;
 657+ 9BC3              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BC3
 659+ 9BC3 21 AB 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BC6 3A B8 89     	ld a,(Vel_left)
 661+ 9BC9 A7           	and a
 662+ 9BCA 28 06        	jr z,1F
 663+ 9BCC 47           	ld b,a
 664+ 9BCD 35           3 dec (hl)
 665+ 9BCE 10 FD        	djnz 3B
 666+ 9BD0 18 01        	jr 2F
 667+ 9BD2 35           1 dec (hl)
 668+ 9BD3 C9           2 ret
 669+ 9BD4
 670+ 9BD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BD4
 672+ 9BD4 2A A5 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BD7 01 1F 00     	ld bc,31
 674+ 9BDA A7           	and a
 675+ 9BDB ED 4A        	adc hl,bc
 676+ 9BDD 22 A5 89     	ld (Posicion_actual),hl
 677+ 9BE0 21 D1 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BE3 CB C6        	set 0,(hl)
 679+ 9BE5 C9           	ret
 680+ 9BE6
 681+ 9BE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BE6
 683+ 9BE6 2A A5 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9BE9 01 1F 00     	ld bc,31
 685+ 9BEC A7           	and a
 686+ 9BED ED 42        	sbc hl,bc
 687+ 9BEF 22 A5 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9BF2 21 D1 89     	ld hl,Ctrl_0
 689+ 9BF5 CB CE        	set 1,(hl)
 690+ 9BF7 C9           	ret
 691+ 9BF8
 692+ 9BF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9BF8
 694+ 9BF8 24           Reaparece_abajo inc h
 695+ 9BF9 01 E0 17     	ld bc,$17e0
 696+ 9BFC A7           	and a
 697+ 9BFD ED 4A        	adc hl,bc
 698+ 9BFF 22 A5 89     	ld (Posicion_actual),hl
 699+ 9C02 21 D1 89     	ld hl,Ctrl_0
 700+ 9C05 CB D6        	set 2,(hl)
 701+ 9C07 C9           	ret
 702+ 9C08
 703+ 9C08              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C08
 705+ 9C08 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C0B A7           	and a
 707+ 9C0C ED 42        	sbc hl,bc
 708+ 9C0E 22 A5 89     	ld (Posicion_actual),hl
 709+ 9C11 21 D1 89     	ld hl,Ctrl_0
 710+ 9C14 CB DE        	set 3,(hl)
 711+ 9C16 C9           	ret
 712+ 9C17
 713+ 9C17              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C17
 715+ 9C17 2A B5 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C1A 22 A5 89     	ld (Posicion_actual),hl
 717+ 9C1D C9           	ret
# file closed: Direcciones.asm
1251  9C1E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C1E              ; ------------------------------------------------------------------------
   2+ 9C1E              ;
   3+ 9C1E              ;	02/04/23
   4+ 9C1E              ;
   5+ 9C1E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C1E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C1E              ;
   8+ 9C1E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C1E              ;
  10+ 9C1E              ;	Modifica: A,BC y DE.
  11+ 9C1E
  12+ 9C1E C5           Genera_coordenadas push bc
  13+ 9C1F E5           	push hl
  14+ 9C20 D5           	push de
  15+ 9C21
  16+ 9C21 2A A5 89     	ld hl,(Posicion_actual)
  17+ 9C24
  18+ 9C24 7D           	ld a,l
  19+ 9C25 E6 1F        	and $1f
  20+ 9C27 32 A9 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C2A
  22+ 9C2A CD B2 98     	call calcula_tercio
  23+ 9C2D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C2E
  25+ 9C2E 1E 00        	ld e,0
  26+ 9C30 7D           	ld a,l
  27+ 9C31 E6 E0        	and $e0
  28+ 9C33 28 01        	jr z,1F
  29+ 9C35 04           	inc b
  30+ 9C36
  31+ 9C36 04           1 inc b
  32+ 9C37 05           	dec b
  33+ 9C38 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C3A              ;														; _ , salimos.
  35+ 9C3A 1C           3 inc e
  36+ 9C3B D6 20        	sub 32
  37+ 9C3D 20 FB        	jr nz,3B
  38+ 9C3F 10 F5        	djnz 1B
  39+ 9C41
  40+ 9C41 7B           2 ld a,e
  41+ 9C42 32 AA 89     	ld (Coordenada_y),a
  42+ 9C45
  43+ 9C45 D1           	pop de
  44+ 9C46 E1           	pop hl
  45+ 9C47 C1           	pop bc
  46+ 9C48
  47+ 9C48 C9           	ret
  48+ 9C49
  49+ 9C49              ; ------------------------------------------------------------------------
  50+ 9C49              ;	28/05/23
  51+ 9C49              ;
  52+ 9C49              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C49              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C49              ;
  55+ 9C49              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C49              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C49              ;
  58+ 9C49              ;		DE="$120d"
  59+ 9C49              ;
  60+ 9C49              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C49              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C49              ;
  63+ 9C49              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C49
  65+ 9C49              ;	Modifica: A,BC y DE.
  66+ 9C49
  67+ 9C49
  68+ 9C49              Genera_coordenadas_disparo
  69+ 9C49
  70+ 9C49              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C49
  72+ 9C49 7D           	ld a,l
  73+ 9C4A E6 1F        	and $1f
  74+ 9C4C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C4D CD B2 98     	call calcula_tercio
  76+ 9C50 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C51 1E 00        	ld e,0
  78+ 9C53 7D           	ld a,l
  79+ 9C54 E6 E0        	and $e0
  80+ 9C56 28 01        	jr z,1F
  81+ 9C58 04           	inc b
  82+ 9C59 1C           1 inc e
  83+ 9C5A D6 20        	sub 32
  84+ 9C5C 20 FB        	jr nz,1B
  85+ 9C5E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C60 C9           	ret
  87+ 9C61
# file closed: Genera_coordenadas.asm
1252  9C61              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C61
   2+ 9C61
   3+ 9C61              ;   11/8/22
   4+ 9C61              ;
   5+ 9C61              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C61              ;
   7+ 9C61              ;   Mov_obj.asm
   8+ 9C61              ;
   9+ 9C61              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C61              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C61              ;
  12+ 9C61              ;   Codificación:
  13+ 9C61              ;
  14+ 9C61              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C61
  16+ 9C61              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C61
  18+ 9C61 02 40 00     Arriba db 2,%01000000,0
  19+ 9C64 02 80 00     Abajo db 2,%10000000,0
  20+ 9C67 02 20 00     Derecha db 2,%00100000,0
  21+ 9C6A 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C6D 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C71 60 42 60 40
  22+ 9C75 63
  23+ 9C76 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9C7A 22 A3 80 A0
  24+ 9C7E 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9C82 84 A0 83 A0
  25+ 9C86 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9C8A 80 A3 22 A0
  26+ 9C8E 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9C92 40 60 42 60
  27+ 9C96 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9C9A
  29+ 9C9A 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9C9E 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9CA2 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9CA6 84 00
  32+ 9CA8 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9CAC 84 00
  33+ 9CAE 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9CB2 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9CB6 1F 1F 1F 1F
  35+ 9CBA 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9CBE 1F 1F 1F 1F
  35+ 9CC2 1F
  36+ 9CC3 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CC7 2F 2F 2F 2F
  36+ 9CCB 2F 2F
  37+ 9CCD 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CD1 2F 2F 00
  38+ 9CD4
  39+ 9CD4              ; ----- ----- ----- ----- -----
  40+ 9CD4
  41+ 9CD4 B2 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9CD6 AE 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9CD8 6A 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9CDA 67 9C        Indice_mov_Derecha defw Derecha
  45+ 9CDC 64 9C        Indice_mov_Abajo defw Abajo
  46+ 9CDE 61 9C        Indice_mov_Arriba defw Arriba
  47+ 9CE0 9E 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9CE2 A2 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9CE4 9A 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9CE6 A8 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9CE8 6D 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9CEA              ; ----- ----- ----- ----- -----
  53+ 9CEA
  54+ 9CEA 3A D8 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9CED A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9CEE 28 02            jr z,1F
  57+ 9CF0 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9CF2 3A D9 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9CF5 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9CF7 32 D9 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9CFA              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9CFA 2A D6 89         ld hl,(Puntero_mov)
  63+ 9CFD 7E               ld a,(hl)
  64+ 9CFE 32 D8 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9D01 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9D02 22 D6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9D05
  68+ 9D05 3A DA 89     Decoder ld a,(Repetimos_db)
  69+ 9D08 A7               and a
  70+ 9D09 20 0C            jr nz,12F
  71+ 9D0B 2A D6 89         ld hl,(Puntero_mov)
  72+ 9D0E 7E               ld a,(hl)
  73+ 9D0F A7               and a
  74+ 9D10 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9D12 E6 0F            and $0f
  76+ 9D14 32 DA 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9D17              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9D17 2A D6 89     12 ld hl,(Puntero_mov)
  79+ 9D1A CB 7E            bit 7,(hl)
  80+ 9D1C 28 03            jr z,2F
  81+ 9D1E CD F8 98         call Mov_down
  82+ 9D21 2A D6 89     2 ld hl, (Puntero_mov)
  83+ 9D24 CB 76            bit 6,(hl)
  84+ 9D26 28 03            jr z,3F
  85+ 9D28 CD 29 99         call Mov_up
  86+ 9D2B 2A D6 89     3 ld hl, (Puntero_mov)
  87+ 9D2E CB 6E            bit 5,(hl)
  88+ 9D30 28 03            jr z,4F
  89+ 9D32 CD 6C 99         call Mov_right
  90+ 9D35 2A D6 89     4 ld hl, (Puntero_mov)
  91+ 9D38 CB 66            bit 4,(hl)
  92+ 9D3A 28 03            jr z,5F
  93+ 9D3C CD 8A 9A         call Mov_left
  94+ 9D3F
  95+ 9D3F              ; ---------- --------- --------- ---------- ----------
  96+ 9D3F
  97+ 9D3F 3A DA 89     5 ld a,(Repetimos_db)
  98+ 9D42 A7               and a
  99+ 9D43 28 07            jr z,6F
 100+ 9D45 3D               dec a
 101+ 9D46 32 DA 89         ld (Repetimos_db),a
 102+ 9D49 28 01            jr z,6f
 103+ 9D4B C9           11 ret
 104+ 9D4C 21 D8 89     6 ld hl,Contador_db_mov
 105+ 9D4F 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D50 2A D6 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D53 23               inc hl
 108+ 9D54 22 D6 89         ld (Puntero_mov),hl
 109+ 9D57 18 F2            jr 11B
 110+ 9D59 2A D4 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D5C 3A D9 89         ld a,(Incrementa_puntero)
 112+ 9D5F 47               ld b,a
 113+ 9D60 23           8 inc hl
 114+ 9D61 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D63 5E               ld e,(hl)
 116+ 9D64 23               inc hl
 117+ 9D65 56               ld d,(hl)
 118+ 9D66 EB               ex de,hl
 119+ 9D67 22 D6 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D6A 18 DF            jr 11B
 121+ 9D6C
 122+ 9D6C              ; ---------- --------- --------- ---------- ----------
 123+ 9D6C              ;
 124+ 9D6C              ;   11/8/22
 125+ 9D6C              ;
 126+ 9D6C              ;   Prepara_Puntero_mov
 127+ 9D6C
 128+ 9D6C E5           Prepara_Puntero_mov push hl
 129+ 9D6D D5               push de
 130+ 9D6E 2A D4 89         ld hl,(Puntero_indice_mov)
 131+ 9D71 5E               ld e,(hl)
 132+ 9D72 23               inc hl
 133+ 9D73 56               ld d,(hl)
 134+ 9D74 EB               ex de,hl
 135+ 9D75 22 D6 89         ld (Puntero_mov),hl
 136+ 9D78 D1               pop de
 137+ 9D79 E1               pop hl
 138+ 9D7A C9               ret
 139+ 9D7B
 140+ 9D7B              ; ---------- --------- --------- ---------- ----------
 141+ 9D7B              ;
 142+ 9D7B              ;   11/8/22
 143+ 9D7B              ;
 144+ 9D7B              ;   Reinicia_el_movimiento
 145+ 9D7B
 146+ 9D7B CD 6C 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9D7E AF               xor a
 148+ 9D7F 32 D8 89         ld (Contador_db_mov),a
 149+ 9D82 32 D9 89         ld (Incrementa_puntero),a
 150+ 9D85 C3 EA 9C         jp Movimiento
 151+ 9D88 C9               ret
 152+ 9D89              ; ---------- --------- --------- ---------- ----------
 153+ 9D89
 154+ 9D89
 155+ 9D89
 156+ 9D89
 157+ 9D89
 158+ 9D89
 159+ 9D89
 160+ 9D89
 161+ 9D89
 162+ 9D89
 163+ 9D89
 164+ 9D89
 165+ 9D89
 166+ 9D89
 167+ 9D89
 168+ 9D89
 169+ 9D89
 170+ 9D89
# file closed: Patrones_de_mov.asm
1253  9D89              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9D89              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9D89              ;
   3+ 9D89              ;	3/1/23
   4+ 9D89              ;
   5+ 9D89              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9D89
   7+ 9D89              ;	ADC HL,SP	LD (addr),SP
   8+ 9D89              ;	ADD HL,SP	LD SP,(addr)
   9+ 9D89              ;	ADD IX,SP	LD SP,nn
  10+ 9D89              ; 	ADD IY,SP	LD SP,HL
  11+ 9D89              ;				LD SP,IX
  12+ 9D89              ;	DEC SP		LD SP,IY
  13+ 9D89
  14+ 9D89              ;	EX (SP),HL
  15+ 9D89              ;	EX (SP),IX
  16+ 9D89              ;	EX (SP),IY
  17+ 9D89
  18+ 9D89              ;	INC SP
  19+ 9D89
  20+ 9D89
  21+ 9D89                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 F2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A E1 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A F8 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A F6 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 F8 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 F6 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B F2 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1254  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1255  7FE6
1256  7FE6              	SAVESNA "Pruebas.sna", START
1257  7FE6
1258  7FE6
1259  7FE6
1260  7FE6
# file closed: Banco_de_pruebas.asm
