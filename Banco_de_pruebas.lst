# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 2E 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 4A A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 1B 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 58 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 1F 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 56 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 56 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 59 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 2F 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 FE 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas de entidades.
  83+ 8961              ;
  84+ 8961              ;	18/1/24
  85+ 8961              ;
  86+ 8961
  87+ 8961              Indice_de_cajas_de_entidades
  88+ 8961
  89+ 8961 7F 89        	defw Caja_1
  90+ 8963 8B 89        	defw Caja_2
  91+ 8965 97 89        	defw Caja_3
  92+ 8967 A3 89        	defw Caja_4
  93+ 8969 AF 89        	defw Caja_5
  94+ 896B BB 89        	defw Caja_6
  95+ 896D C7 89        	defw Caja_7
  96+ 896F
  97+ 896F 00 00        	defw 0
  98+ 8971 00 00        	defw 0
  99+ 8973
 100+ 8973              ; -------------------------
 101+ 8973
 102+ 8973              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8973
 104+ 8973              ;	db 0
 105+ 8973
 106+ 8973              ; ---------- ---------- ---------- ---------- ----------
 107+ 8973              ;
 108+ 8973              ;	28/05/24
 109+ 8973              ;
 110+ 8973              ; 	Cada caja tiene 14 bytes !!!
 111+ 8973              ;
 112+ 8973              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8973
 114+ 8973 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8974 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8976 00           	db 0												; (Contador_de_vueltas).
 117+ 8977 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8978 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 897A 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 897C 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897E 00           	db 0												; (Velocidad).
 122+ 897F
 123+ 897F              ; ---------- ---------- ---------- ---------- ----------
 124+ 897F              ;
 125+ 897F              ;	22/01/24
 126+ 897F              ;
 127+ 897F              ; 	Cada caja tiene 12 bytes !!!
 128+ 897F
 129+ 897F 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 8982 00           	db 0												; (Contador_de_vueltas).
 131+ 8983 00           	db 0												; (Impacto).
 132+ 8984 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8986 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8988 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 898A 00           	db 0												; (Velocidad).
 136+ 898B
 137+ 898B              ; ---------- ---------- ---------- ---------- ----------
 138+ 898B
 139+ 898B 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898E 00           	db 0 												; (Contador_de_vueltas).
 141+ 898F 00           	db 0												; (Impacto).
 142+ 8990 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 8992 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8994 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8996 00           	db 0												; (Velocidad).
 146+ 8997
 147+ 8997              ; ---------- ---------- ---------- ---------- ----------
 148+ 8997
 149+ 8997 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 899A 00           	db 0 												; (Contador_de_vueltas).
 151+ 899B 00           	db 0												; (Impacto).
 152+ 899C 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 89A0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 89A2 00           	db 0												; (Velocidad).
 156+ 89A3
 157+ 89A3              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A3
 159+ 89A3 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A6 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A7 00           	db 0												; (Impacto).
 162+ 89A8 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89AA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89AC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AE 00           	db 0												; (Velocidad).
 166+ 89AF
 167+ 89AF              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AF
 169+ 89AF 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89B2 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B3 00           	db 0												; (Impacto).
 172+ 89B4 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89BA 00           	db 0												; (Velocidad).
 176+ 89BB
 177+ 89BB              ; ---------- ---------- ---------- ---------- ----------
 178+ 89BB
 179+ 89BB 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BE 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BF 00           	db 0												; (Impacto).
 182+ 89C0 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89C2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C6 00           	db 0												; (Velocidad).
 186+ 89C7
 187+ 89C7              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C7
 189+ 89C7 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89CA 00           	db 0 												; (Contador_de_vueltas).
 191+ 89CB 00           	db 0												; (Impacto).
 192+ 89CC 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89D0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89D2 00           	db 0												; (Velocidad).
 196+ 89D3
 197+ 89D3              ; -------------------------------------------------------------------------------------
 198+ 89D3              ;
 199+ 89D3              ;	11/1/24
 200+ 89D3              ;
 201+ 89D3              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D3              ;
 203+ 89D3              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D3              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D3              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D3              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D3
 208+ 89D3              Indice_de_definiciones_de_entidades
 209+ 89D3
 210+ 89D3 D7 89        	defw Entidad_1
 211+ 89D5 E4 89        	defw Entidad_2
 212+ 89D7
 213+ 89D7              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D7
 215+ 89D7              ;	BADSAT, (Satélite malvado).
 216+ 89D7
 217+ 89D7 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89DA 02           	db 2												; (Contador_de_vueltas).
 219+ 89DB 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DD 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DF 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89E1 01           	db 1												; (Cuad_objeto).
 223+ 89E2 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E4
 225+ 89E4 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E7 01           	db 1												; (Contador_de_vueltas).
 227+ 89E8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89EA 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89EC 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EE 01           	db 1												; (Cuad_objeto).
 231+ 89EF C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89F1
 233+ 89F1              ; -------------------------------------------------------------------------------------
 234+ 89F1              ;
 235+ 89F1              ;	28/05/24
 236+ 89F1              ;
 237+ 89F1              ;	Definición de Amadeus.
 238+ 89F1              ;
 239+ 89F1              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89F1              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89F1
 242+ 89F1 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F4 00           	db 0												; (Contador_de_vueltas).
 244+ 89F5 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F7 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F9 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89FB 03           	db 3												; (Cuad_objeto).
 248+ 89FC DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  89FE              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FE
   2+ 89FE
   3+ 89FE              ;   07/07/23
   4+ 89FE              ;
   5+ 89FE              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FE              ;
   7+ 89FE              ;   Codificación:
   8+ 89FE              ;
   9+ 89FE              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FE              ;
  11+ 89FE              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FE              ;
  13+ 89FE              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FE              ;
  15+ 89FE              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FE              ;
  17+ 89FE              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FE              ;                               ..... %01000010 Vel_up 4
  19+ 89FE              ;                                               Vel_down 2
  20+ 89FE              ;                               ..... $42
  21+ 89FE              ;
  22+ 89FE              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FE              ;
  24+ 89FE              ;                               ..... %01000010 Vel_left 4
  25+ 89FE              ;                                               Vel_right 2
  26+ 89FE              ;                               ..... $42
  27+ 89FE              ;
  28+ 89FE              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FE              ;
  30+ 89FE              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FE              ;
  32+ 89FE              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FE              ;
  34+ 89FE              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FE              ;                                     $53
  36+ 89FE              ;
  37+ 89FE              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FE              ;
  39+ 89FE              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FE              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FE              ;
  42+ 89FE              ;                       Arriba ..... $81
  43+ 89FE              ;                       Arriba - izquierda ..... $a1
  44+ 89FE              ;                       Arriba - derecha ..... $91
  45+ 89FE              ;
  46+ 89FE              ;                       Abajo ..... $41
  47+ 89FE              ;                       Abajo - izquierda ..... $61
  48+ 89FE              ;                       Abajo - derecha ..... $51
  49+ 89FE              ;
  50+ 89FE              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FE              ;
  52+ 89FE              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FE              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FE              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FE              ;
  56+ 89FE              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FE              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FE              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FE              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FE              ;
  61+ 89FE              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FE              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FE              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FE              ;
  65+ 89FE              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FE              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FE              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FE              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FE
  70+ 89FE              ; ----- ----- ----- ----- -----
  71+ 89FE
  72+ 89FE 2A 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A00 32 8A            defw F_1
  74+ 8A02 3C 8A            defw F_2
  75+ 8A04 46 8A            defw Codo_abajo_derecha
  76+ 8A06 7A 8A            defw Derecha_y_subiendo
  77+ 8A08 84 8A            defw Derecha_y_subiendo_1
  78+ 8A0A 8E 8A            defw F_3
  79+ 8A0C 98 8A            defw F_4
  80+ 8A0E A2 8A            defw Derecha_y_bajando
  81+ 8A10 AC 8A            defw Derecha_y_bajando_1
  82+ 8A12 B6 8A            defw Derecha_y_bajando_2
  83+ 8A14 C0 8A            defw Codo_derecha_abajo
  84+ 8A16 F0 8A            defw Codo_abajo_izq.
  85+ 8A18 24 8B            defw Izquierda_y_subiendo
  86+ 8A1A 2E 8B            defw Izquierda_y_subiendo_1
  87+ 8A1C 38 8B            defw F_5
  88+ 8A1E 42 8B            defw F_6
  89+ 8A20 4C 8B            defw Izquierda_y_bajando
  90+ 8A22 56 8B            defw Izquierda_y_bajando_1
  91+ 8A24 60 8B            defw Izquierda_y_bajando_2
  92+ 8A26 6A 8B            defw Codo_izquierda_abajo
  93+ 8A28 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2A
  95+ 8A2A 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2E 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A32
  98+ 8A32 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A36 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3A 08 00
 100+ 8A3C
 101+ 8A3C 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A40 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A44 0F FE
 103+ 8A46
 104+ 8A46 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A52 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A56 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A62 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A66 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6E 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A72 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A76 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7A
 118+ 8A7A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A82 06 00
 120+ 8A84
 121+ 8A84 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A88 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8C 02 00
 123+ 8A8E
 124+ 8A8E 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A92 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A96 04 00
 126+ 8A98
 127+ 8A98 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9C 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA0 08 00
 129+ 8AA2
 130+ 8AA2 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA6 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAA 02 00
 132+ 8AAC
 133+ 8AAC 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB0 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB4 06 00
 135+ 8AB6
 136+ 8AB6 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABA 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABE 06 00
 138+ 8AC0
 139+ 8AC0              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC0
 141+ 8AC0 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD4 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AEC 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF0
 154+ 8AF0 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B00 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B04 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B08 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0C 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B10 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B14 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B18 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B20 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B24
 168+ 8B24 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B28 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2C 06 00
 170+ 8B2E
 171+ 8B2E 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B32 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B36 02 00
 173+ 8B38
 174+ 8B38 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3C 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B40 04 00
 176+ 8B42
 177+ 8B42 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B46 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4A 08 00
 179+ 8B4C
 180+ 8B4C 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B50 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B54 02 00
 182+ 8B56
 183+ 8B56 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5A 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5E 06 00
 185+ 8B60
 186+ 8B60 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B64 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B68 06 00
 188+ 8B6A
 189+ 8B6A 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B72 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B76 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B82 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B86 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B92 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B96 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9A
 202+ 8B9A
 203+ 8B9A
 204+ 8B9A
 205+ 8B9A
 206+ 8B9A
 207+ 8B9A
 208+ 8B9A
 209+ 8B9A
 210+ 8B9A
# file closed: Patrones_de_mov.asm
 149  8B9A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9A              ; 19/1/24
   2+ 8B9A
   3+ 8B9A              Indice_de_niveles
   4+ 8B9A
   5+ 8B9A A2 8B        	defw Nivel_1
   6+ 8B9C A8 8B        	defw Nivel_2
   7+ 8B9E
   8+ 8B9E              ;	...
   9+ 8B9E              ;	...
  10+ 8B9E              ;	+ Niveles ...
  11+ 8B9E
  12+ 8B9E 00 00        	defw 0
  13+ 8BA0 00 00        	defw 0
  14+ 8BA2
  15+ 8BA2 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BA3 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA7 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA8
  19+ 8BA8 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA9 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB1 01 02
  22+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB7 01 02
  23+ 8BB9
# file closed: Niveles.asm
 150  8BB9
 151  8BB9              ; --------------------------------------------------------------------------------
 152  8BB9              ;
 153  8BB9              ; 12/05/24
 154  8BB9              ;
 155  8BB9              ; Parámetros DRAW.
 156  8BB9              ;
 157  8BB9
 158  8BB9              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BB9
 160  8BB9 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BBA              ;															- Patrón de movimiento.
 162  8BBA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BBB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BBC
 165  8BBC 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BBD              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BBD
 168  8BBD              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BBD              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BBD              ; Ejemplos.
 171  8BBD
 172  8BBD              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BBD              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BBD              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BBD              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BBD              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BBD
 178  8BBD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BBE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BBE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BBE
 182  8BBE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BC0              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BC0
 185  8BC0 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BC2
 187  8BC2              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BC2
 189  8BC2 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BC4              ;														; _palabras que componen el "movimiento_masticado".
 191  8BC4
 192  8BC4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BC4
 194  8BC4 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BC5              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BC5              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BC5              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BC5              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BC5
 200  8BC5 00           Ctrl_2 db 0
 201  8BC6              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BC6              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BC6              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BC6              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BC6              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BC6              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BC6              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BC6              ;
 209  8BC6              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BC6              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BC6              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BC6              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BC6              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BC6              ;														BIT 4, ???
 215  8BC6              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BC6
 217  8BC6 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BC7              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BC7              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BC7              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BC7              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BC7              ;
 223  8BC7              ; 														DESCRIPCIÖN:
 224  8BC7              ;
 225  8BC7              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BC7              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BC7              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BC7              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BC7              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BC7              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BC7              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BC7              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BC7              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BC7              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BC7              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BC7              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BC7              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BC7              ;
 239  8BC7              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BC7              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BC7              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BC7
 243  8BC7              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BC7
 245  8BC7 00           Filas db 0												; Filas. [DRAW]
 246  8BC8 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BC9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BCB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BCD
 250  8BCD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BCD
 252  8BCD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BCE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BCE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BCE
 256  8BCE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BCE
 258  8BCE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BCE              ;
 260  8BCE              ;	COLORES: 0 ..... NEGRO
 261  8BCE              ;    		 1 ..... AZUL
 262  8BCE              ; 			 2 ..... ROJO
 263  8BCE              ;			 3 ..... MAGENTA
 264  8BCE              ; 			 4 ..... VERDE
 265  8BCE              ; 			 5 ..... CIAN
 266  8BCE              ;			 6 ..... AMARILLO
 267  8BCE              ; 			 7 ..... BLANCO
 268  8BCE
 269  8BCE 00 00        Indice_Sprite_der defw 0
 270  8BD0 00 00        Indice_Sprite_izq defw 0
 271  8BD2 00 00        Puntero_DESPLZ_der defw 0
 272  8BD4 00 00        Puntero_DESPLZ_izq defw 0
 273  8BD6
 274  8BD6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8BD8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8BD9 00           Columnas db 0
 277  8BDA 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8BDC              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BDC 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8BDD
 281  8BDD              ; variables de control general.
 282  8BDD
 283  8BDD 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8BDE
 285  8BDE              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8BDE
 287  8BDE              Perfiles_de_velocidad
 288  8BDE
 289  8BDE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8BDF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8BE0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8BE1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8BE2
 294  8BE2              ; Contadores de 16 bits.
 295  8BE2
 296  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8BEA
 301  8BEA              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8BEA
 303  8BEA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8BEC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8BEE 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8BF0              ;
 307  8BF0              ;
 308  8BF0 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8BF1              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8BF1              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8BF1 00           Incrementa_puntero_backup db 0
 312  8BF2 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8BF3              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8BF3 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8BF4 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8BF5 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8BF6              ;
 318  8BF6              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8BF6              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8BF6              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8BF6              ;
 322  8BF6              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8BF6              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8BF6              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8BF6              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8BF6              ;
 327  8BF6              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8BF6              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8BF6              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8BF6
 331  8BF6 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8BF7
 333  8BF7              ;														DESCRIPCIÓN:
 334  8BF7              ;
 335  8BF7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8BF7              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8BF7              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8BF7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8BF7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8BF7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8BF7
 342  8BF7              ;														BIT 3, Recarga de nueva oleada.
 343  8BF7              ;														BIT 4, Recarga de nueva oleada.
 344  8BF7              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8BF7              ;														BIT 6, **** Frame completo.
 346  8BF7              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8BF7
 348  8BF7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8BF9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8BF9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8BF9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8BF9
 353  8BF9              ; Gestión de ENTIDADES y CAJAS.
 354  8BF9
 355  8BF9 00 00        Puntero_store_caja defw 0
 356  8BFB 00 00        Puntero_restore_caja defw 0
 357  8BFD 00 00        Indice_restore_caja defw 0
 358  8BFF
 359  8BFF 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 360  8C00 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 361  8C01 00           Entidades_en_curso db 0									; Entidades en pantalla.
 362  8C02
 363  8C02 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 364  8C04 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 365  8C06              ;														; _ puntero (Indice_entidades).
 366  8C06
 367  8C06              ;---------------------------------------------------------------------------------------------------------------
 368  8C06              ;
 369  8C06              ;	13/10/24
 370  8C06              ;
 371  8C06              ;	Álbumes.
 372  8C06
 373  8C06 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 374  8C08              ;														; _variable para almacenar lo posición del puntero_
 375  8C08              ; 														; _de pila, SP.
 376  8C08 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 377  8C0A              ;														; La utiliza la rutina [Extrae_foto_registros].
 378  8C0A
 379  8C0A              ; Impresión. ----------------------------------------------------------------------------------------------------
 380  8C0A
 381  8C0A 00 00        Album_de_pintado defw 0
 382  8C0C 00 00        Album_de_borrado defw 0
 383  8C0E 00 00        Album_de_pintado_Amadeus defw 0
 384  8C10 00 00        Album_de_borrado_Amadeus defw 0
 385  8C12
 386  8C12 00 00        Album_de_pintado_disparos_Amadeus defw 0
 387  8C14 00 00        Album_de_borrado_disparos_Amadeus defw 0
 388  8C16
 389  8C16 00 00        Album_de_pintado_disparos_Entidades defw 0
 390  8C18 00 00        Album_de_borrado_disparos_Entidades defw 0
 391  8C1A
 392  8C1A
 393  8C1A 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 394  8C1C
 395  8C1C 00           Num_de_bytes_album_de_disparos db 0
 396  8C1D 00           Num_de_bytes_album_de_disparos_borrado db 0
 397  8C1E
 398  8C1E 07           Numero_de_disparos_de_entidades db 7
 399  8C1F
 400  8C1F 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 401  8C20 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 402  8C21
 403  8C21 00 00        Techo_Scanlines_album defw 0
 404  8C23 00 00        Techo_Scanlines_album_2 defw 0
 405  8C25 00           Switch db 0
 406  8C26 00 00        Techo defw 0
 407  8C28 00 00        Scanlines_album_SP defw 0
 408  8C2A 00 89        India_SP defw Tabla_de_pintado
 409  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 410  8C2E
 411  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 412  8C2F              ;
 413  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 414  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 415  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 416  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 417  8C2F              ;																Habilita el borrado/pintado de sprites.
 418  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 419  8C2F              ;																_ a la baja.
 420  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 421  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 422  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 423  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 424  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 425  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 426  8C2F
 427  8C2F 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 428  8C30              ;
 429  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 430  8C30              ;
 431  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 432  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 433  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 434  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 435  8C30              ;
 436  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 437  8C30              ;															_ masticados ya generados.
 438  8C30              ;
 439  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 440  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 441  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 442  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 443  8C30
 444  8C30 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 445  8C31              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 446  8C31              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 447  8C31
 448  8C31              ; Gestión de Disparos.
 449  8C31
 450  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 451  8C33 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 452  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 453  8C36
 454  8C36              ;
 455  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 456  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 457  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 458  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 459  8C36
 460  8C36
 461  8C36
 462  8C36
 463  8C36
 464  8C36
 465  8C36
 466  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 467  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 468  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 469  8C38
 470  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 471  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 472  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 473  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 474  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 475  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 476  8C40
 477  8C40              ;---------------------------------------------------------------------------------------------------------------
 478  8C40
 479  8C40              ; Relojes y temporizaciones.
 480  8C40
 481  8C40 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 482  8C41 05           Clock_explosion_Amadeus db 5
 483  8C42 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 484  8C43
 485  8C43 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 486  8C45 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 487  8C47 00           Numero_rnd_disparos db 0
 488  8C48
 489  8C48 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 490  8C4A 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 491  8C4B              ;																		; Repite la oleada de entidades.
 492  8C4B A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 493  8C4C A0           CLOCK_disparos_de_entidades db $a0
 494  8C4D
 495  8C4D              ;---------------------------------------------------------------------------------------------------------------
 496  8C4D
 497  8C4D              ; Gestión de NIVELES.
 498  8C4D
 499  8C4D 00           Nivel db 0												; Nivel actual del juego.
 500  8C4E 00 00        Puntero_indice_NIVELES defw 0
 501  8C50 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 502  8C52              ; 														; _ que definen el NIVEL.
 503  8C52
 504  8C52              ; ---------------------------------------------------------------------------------------------------------------
 505  8C52
 506  8C52              ; Temporizaciones Shield.
 507  8C52
 508  8C52 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 509  8C56 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 510  8C58 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 511  8C59 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 512  8C5A 00           Shield_3 db 0
 513  8C5B
 514  8C5B 03           Lives db 3
 515  8C5C
 516  8C5C              ; 	INICIO  *************************************************************************************************************************************************************************
 517  8C5C              ;
 518  8C5C              ;	5/1/24
 519  8C5C
 520  8C5C              START
 521  8C5C
 522  8C5C 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 523  8C5F 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 524  8C61 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 525  8C63 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 526  8C65 F3           	DI
 527  8C66
 528  8C66              ; Limpiamos pantalla.
 529  8C66
 530  8C66 3E 07        	ld a,%00000111
 531  8C68 CD C8 94     	call Cls
 532  8C6B CD 14 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 533  8C6E
 534  8C6E              ; INICIALIZACIÓN.
 535  8C6E
 536  8C6E 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 537  8C70 CD 61 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 538  8C73 CD A9 8E     	call Extrae_numero_aleatorio_y_avanza
 539  8C76 6F           	ld l,a
 540  8C77 26 00        	ld h,0
 541  8C79 22 48 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C7C
 543  8C7C CD 91 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 544  8C7F              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 545  8C7F              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 546  8C7F              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 547  8C7F
 548  8C7F              ;	Inicia los álbumes de líneas.
 549  8C7F
 550  8C7F CD 62 90     	call Inicia_albumes_de_lineas
 551  8C82              ;
 552  8C82 CD 72 90     	call Inicia_albumes_de_lineas_Amadeus
 553  8C85 CD 7F 90     	call Inicia_albumes_de_disparos
 554  8C88
 555  8C88 CD DF 92     4 call Inicia_Entidades
 556  8C8B CD 42 93     	call Inicia_Amadeus
 557  8C8E
 558  8C8E              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 559  8C8E              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 560  8C8E              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 561  8C8E
 562  8C8E 11 73 89     	ld de,Amadeus_BOX
 563  8C91 CD 98 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 564  8C94 CD 85 93     	call Limpiamos_bandeja_DRAW
 565  8C97
 566  8C97              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 567  8C97
 568  8C97 06 3C        	ld b,60
 569  8C99 CD 6E 9D     2 call Amadeus_a_izquierda
 570  8C9C 10 FB        	djnz 2B
 571  8C9E
 572  8C9E CD 40 90     	call Genera_datos_de_impresion_Amadeus
 573  8CA1
 574  8CA1              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 575  8CA1
 576  8CA1 CD 9B 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 577  8CA4
 578  8CA4 CD 1F 91     	call Inicia_Shield
 579  8CA7
 580  8CA7 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 581  8CAA 22 21 8C     	ld (Techo_Scanlines_album),hl
 582  8CAD
 583  8CAD 2A 0C 8C     	ld hl,(Album_de_borrado)
 584  8CB0 22 28 8C     	ld (Scanlines_album_SP),hl
 585  8CB3
 586  8CB3 21 00 89     	ld hl,Tabla_de_pintado
 587  8CB6 22 2A 8C     	ld (India_SP),hl
 588  8CB9
 589  8CB9 21 2E 8C     	ld hl,Ctrl_3
 590  8CBC CB C6        	set 0,(hl) 											; Indica Frame completo.
 591  8CBE CB D6        	set 2,(hl)
 592  8CC0 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 593  8CC2
 594  8CC2 FB           	ei 													; Ha de apuntar a $5c3a.
 595  8CC3
 596  8CC3 76           	halt
 597  8CC4
 598  8CC4              ; ------------------------------------
 599  8CC4
 600  8CC4              Main
 601  8CC4              ;
 602  8CC4              ; 07/11/24.
 603  8CC4
 604  8CC4              ; Gestión de disparos.
 605  8CC4
 606  8CC4 CD 7E 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 607  8CC7 CD 61 9F     	call Motor_de_disparos_entidades
 608  8CCA CD F6 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 609  8CCD
 610  8CCD              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 611  8CCD              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 612  8CCD              ; Este hecho lo indica el bit2 de (Impacto2).
 613  8CCD
 614  8CCD CD 93 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 615  8CD0
 616  8CD0              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 617  8CD0
 618  8CD0 21 4C 8C     	ld hl,CLOCK_disparos_de_entidades
 619  8CD3 35           	dec (hl)
 620  8CD4 CC C5 8D     	call z,Autoriza_disparo_de_entidades
 621  8CD7
 622  8CD7 2A 48 8C     	ld hl,(Clock_next_entity)
 623  8CDA ED 4B 78 5C  	ld bc,(FRAMES)
 624  8CDE A7           	and a
 625  8CDF ED 42        	sbc hl,bc
 626  8CE1 20 16        	jr nz,1F
 627  8CE3
 628  8CE3              ; GESTIÓN DE ENTIDADES.
 629  8CE3
 630  8CE3              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 631  8CE3              ; _ (Clock_next_entity) para la siguiente entidad.
 632  8CE3
 633  8CE3              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 634  8CE3              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 635  8CE3              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 636  8CE3
 637  8CE3              ;	di
 638  8CE3              ;	jr $
 639  8CE3              ;	ei
 640  8CE3
 641  8CE3 21 00 8C     	ld hl,Numero_parcial_de_entidades
 642  8CE6 46           	ld b,(hl)
 643  8CE7 3A 01 8C     	ld a,(Entidades_en_curso)									; Entidades que hay en pantalla.
 644  8CEA B8           	cp b
 645  8CEB 28 0C        	jr z,1F
 646  8CED 30 0A        	jr nc,1F
 647  8CEF
 648  8CEF              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 649  8CEF
 650  8CEF 3C           	inc a
 651  8CF0 32 01 8C     	ld (Entidades_en_curso),a
 652  8CF3
 653  8CF3              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 654  8CF3
 655  8CF3 CD A9 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 656  8CF6 CD C5 8E     	call Define_Clock_next_entity
 657  8CF9
 658  8CF9 3A 01 8C     1 ld a,(Entidades_en_curso)
 659  8CFC A7           	and a
 660  8CFD CA 70 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 661  8D00 47           	ld b,a												; No hay entidades que gestionar.
 662  8D01
 663  8D01              ; ( Código que ejecutamos con cada entidad: ).
 664  8D01
 665  8D01              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 666  8D01              ;
 667  8D01              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 668  8D01
 669  8D01 21 00 89     	ld hl,Tabla_de_pintado
 670  8D04 22 2A 8C     	ld (India_SP),hl
 671  8D07
 672  8D07 21 2E 8C     	ld hl,Ctrl_3
 673  8D0A CB D6        	set 2,(hl)
 674  8D0C CD 53 8E     	call Change
 675  8D0F
 676  8D0F C5           2 push bc 												; Nº de entidades en curso.
 677  8D10
 678  8D10 CD EC 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 679  8D13 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 680  8D17
 681  8D17              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 682  8D17
 683  8D17              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 684  8D17              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 685  8D17
 686  8D17 3A 35 8C     	ld a,(Impacto2)
 687  8D1A CB 5F        	bit 3,a
 688  8D1C C4 8D A1     	call nz,Compara_con_coordenadas_de_disparo
 689  8D1F
 690  8D1F 3A BD 8B     	ld a,(Impacto)
 691  8D22 CB 4F        	bit 1,a
 692  8D24 C4 FC 91     	call nz,Genera_explosion
 693  8D27 20 2A        	jr nz,Gestiona_siguiente_entidad
 694  8D29
 695  8D29 3A BD 8B     	ld a,(Impacto)
 696  8D2C A7           	and a
 697  8D2D 28 0C        	jr z,3F
 698  8D2F
 699  8D2F              ; IMPACTO en entidad por colisión con Amadeus.
 700  8D2F
 701  8D2F              ; 5/7/24
 702  8D2F              ; Nota importante:
 703  8D2F              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 704  8D2F              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 705  8D2F              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 706  8D2F
 707  8D2F 3A 77 89     	ld a,(Impacto_Amadeus)
 708  8D32 A7           	and a
 709  8D33 C4 FC 91     	call nz,Genera_explosion
 710  8D36 20 1B        	jr nz,Gestiona_siguiente_entidad
 711  8D38
 712  8D38              ; Falsa colisión !!!
 713  8D38
 714  8D38 32 BD 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 715  8D3B
 716  8D3B              ; -------------------------------------------
 717  8D3B
 718  8D3B CD 09 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 719  8D3E CD 31 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 720  8D41 CD F9 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 721  8D44 CD 08 95     	call Genera_datos_de_impresion
 722  8D47 CD A8 93     	call Decrementa_Contador_de_mov_masticados
 723  8D4A
 724  8D4A              ; -------------------------------------------
 725  8D4A
 726  8D4A              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 727  8D4A
 728  8D4A 2A BE 8B     	ld hl,(Puntero_de_impresion)
 729  8D4D CD DC 94     	call Genera_coordenadas
 730  8D50
 731  8D50              ; TODO: Generamos disparo ???
 732  8D50
 733  8D50              ;	ld a,(Permiso_de_disparo_Entidades)
 734  8D50              ;	and a
 735  8D50              ;	call nz,Entidad_genera_disparo_si_procede
 736  8D50
 737  8D50 CD 11 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 738  8D53
 739  8D53              Gestiona_siguiente_entidad
 740  8D53
 741  8D53 CD 7A 93      	call Store_Restore_cajas
 742  8D56 C1           	pop bc
 743  8D57 10 B6        	djnz 2B
 744  8D59
 745  8D59              ; Hemos gestionado todas las entidades.
 746  8D59              ; ----- ----- -----
 747  8D59
 748  8D59 CD 1D 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 749  8D5C CD 34 8F     	call Ordena_tabla_de_impresion
 750  8D5F CD 9B 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 751  8D62
 752  8D62 CD DA 8E     	call Borra_diferencia
 753  8D65
 754  8D65 3A 2E 8C     	ld a,(Ctrl_3)
 755  8D68 CB 5F        	bit 3,a
 756  8D6A 20 04        	jr nz,Gestion_de_Amadeus
 757  8D6C
 758  8D6C EB           	ex de,hl
 759  8D6D 71           	ld (hl),c
 760  8D6E 2C           	inc l
 761  8D6F 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 762  8D70
 763  8D70              ;! GESTIONA AMADEUS !!!!!!!!!!
 764  8D70
 765  8D70              Gestion_de_Amadeus
 766  8D70
 767  8D70 21 2E 8C     	ld hl,Ctrl_3
 768  8D73 CB 76        	bit 6,(hl)
 769  8D75 28 13        	jr z,Amadeus_vivo
 770  8D77
 771  8D77              ; Amadeus ha sido destruido.
 772  8D77              ; Decrementa (Temp_new_live).
 773  8D77
 774  8D77 21 42 8C     	ld hl,Temp_new_live
 775  8D7A 35           	dec (hl)
 776  8D7B 20 26        	jr nz,End_frame
 777  8D7D
 778  8D7D              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 779  8D7D
 780  8D7D 21 5B 8C     	ld hl,Lives
 781  8D80 35           	dec (hl)
 782  8D81
 783  8D81              ;! Fin del juego
 784  8D81
 785  8D81 F3           	di
 786  8D82 28 FE        	jr z,$
 787  8D84 FB           	ei
 788  8D85
 789  8D85              ; Nueva nave.
 790  8D85
 791  8D85 CD F7 8D     	call Reinicia_Amadeus
 792  8D88 18 19        	jr End_frame
 793  8D8A
 794  8D8A              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 795  8D8A
 796  8D8A              Amadeus_vivo
 797  8D8A
 798  8D8A 3A 77 89     	ld a,(Impacto_Amadeus)
 799  8D8D A7           	and a
 800  8D8E C4 2C 92     	call nz, Genera_explosion_Amadeus
 801  8D91 20 10        	jr nz, End_frame
 802  8D93
 803  8D93 CD D9 91     	call Teclado
 804  8D96 21 2E 8C     	ld hl,Ctrl_3
 805  8D99
 806  8D99 CB 6E        	bit 5,(hl)
 807  8D9B 28 06        	jr z,End_frame
 808  8D9D
 809  8D9D              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 810  8D9D
 811  8D9D CD 6E 8E     	call Change_Amadeus
 812  8DA0 CD 40 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 813  8DA3
 814  8DA3              End_frame
 815  8DA3
 816  8DA3              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 817  8DA3              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 818  8DA3
 819  8DA3 CD B8 A0     	call Genera_datos_de_impresion_disparos_Entidades
 820  8DA6 CD 7C A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 821  8DA9 CD D2 A1     	call Calcula_bytes_pintado_disparos
 822  8DAC CD DF A1     	call Limpia_album_de_pintado_disparos_entidades
 823  8DAF
 824  8DAF              ; ------------ ------------- --------------
 825  8DAF
 826  8DAF 2A 0C 8C     	ld hl,(Album_de_borrado)
 827  8DB2 22 28 8C     	ld (Scanlines_album_SP),hl
 828  8DB5
 829  8DB5 21 2E 8C     	ld hl,Ctrl_3
 830  8DB8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 831  8DBA CB 9E        	res 3,(hl)
 832  8DBC CB A6        	res 4,(hl)
 833  8DBE
 834  8DBE AF           	xor a
 835  8DBF D3 FE        	out ($fe),a
 836  8DC1
 837  8DC1 76           	halt
 838  8DC2
 839  8DC2              ; ----------------------------------------
 840  8DC2
 841  8DC2              ;	ld a,(Ctrl_1) 										; Existe Loop?
 842  8DC2              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 843  8DC2 CA C4 8C     	jp z,Main
 844  8DC5
 845  8DC5              ;------------------------------------------
 846  8DC5              ;
 847  8DC5              ;	07/11/24
 848  8DC5
 849  8DC5              Autoriza_disparo_de_entidades
 850  8DC5
 851  8DC5 3E 01        	ld a,1
 852  8DC7 32 20 8C     	ld (Permiso_de_disparo_Entidades),a
 853  8DCA
 854  8DCA 3A 4B 8C     	ld a,(Repone_CLOCK_disparos)
 855  8DCD FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 856  8DCF 38 02        	jr c,1F
 857  8DD1
 858  8DD1              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 859  8DD1              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 860  8DD1              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 861  8DD1
 862  8DD1 D6 03        	sub 3
 863  8DD3
 864  8DD3 32 4B 8C     1 ld (Repone_CLOCK_disparos),a
 865  8DD6 32 4C 8C     	ld (CLOCK_disparos_de_entidades),a
 866  8DD9
 867  8DD9 C9           	ret
 868  8DDA
 869  8DDA              ;------------------------------------------
 870  8DDA              ;
 871  8DDA              ;	14/09/24
 872  8DDA              ;
 873  8DDA              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 874  8DDA
 875  8DDA              Entidad_genera_disparo_si_procede
 876  8DDA
 877  8DDA 2A 45 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 878  8DDD CB 06        	rlc (hl)
 879  8DDF
 880  8DDF DC 08 A1     	call c,Genera_disparo_de_entidad_maldosa
 881  8DE2
 882  8DE2 C9           	ret
 883  8DE3
 884  8DE3              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 885  8DE3              ;
 886  8DE3              ;	30/09/24
 887  8DE3
 888  8DE3              Actuaiza_sp_de_disparos_de_entidades
 889  8DE3
 890  8DE3 2A 45 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 891  8DE6 23           	inc hl
 892  8DE7 22 45 8C     	ld (Puntero_num_aleatorios_disparos),hl
 893  8DEA
 894  8DEA 11 FD 88     	ld de,Numeros_aleatorios+7
 895  8DED 7B           	ld a,e
 896  8DEE 95           	sub l
 897  8DEF C0           	ret nz
 898  8DF0
 899  8DF0 21 F6 88     1 ld hl,Numeros_aleatorios
 900  8DF3 22 45 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 901  8DF6 C9           	ret
 902  8DF7
 903  8DF7              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 904  8DF7              ;
 905  8DF7              ;	24/07/24
 906  8DF7
 907  8DF7              Reinicia_Amadeus
 908  8DF7
 909  8DF7              ;	Reinicia posición y estado.
 910  8DF7
 911  8DF7 21 CF 50     	ld hl,$50cf
 912  8DFA 22 78 89     	ld (p.imp.amadeus),hl
 913  8DFD 21 F0 E0     	ld hl,$e0f0
 914  8E00 22 7A 89     	ld (Pamm_Amadeus),hl
 915  8E03 21 3D 00     	ld hl,$003d
 916  8E06 22 7C 89     	ld (Comm_Amadeus),hl
 917  8E09
 918  8E09              ;	limpiamos el álbum de borrado.
 919  8E09
 920  8E09 2A 10 8C     	ld hl,(Album_de_borrado_Amadeus)
 921  8E0C
 922  8E0C AF           	xor a
 923  8E0D 77           	ld (hl),a
 924  8E0E
 925  8E0E E5           	push hl
 926  8E0F D1           	pop de
 927  8E10 13           	inc de
 928  8E11
 929  8E11 01 23 00     	ld bc,35
 930  8E14 ED B0        	ldir
 931  8E16
 932  8E16 CD 40 90     	call Genera_datos_de_impresion_Amadeus
 933  8E19
 934  8E19              ;	Reinicia temporizaciones.
 935  8E19
 936  8E19 CD 1F 91     	call Inicia_Shield
 937  8E1C
 938  8E1C 3E 5A        	ld a,90
 939  8E1E 32 58 8C     	ld (Shield),a
 940  8E21
 941  8E21 3E 64        	ld a,100
 942  8E23 32 42 8C     	ld (Temp_new_live),a
 943  8E26
 944  8E26              ; 	Restauramos el FLAG: Amadeus vivo.
 945  8E26
 946  8E26 21 2E 8C     	ld hl,Ctrl_3
 947  8E29 CB B6        	res 6,(hl)
 948  8E2B
 949  8E2B              ;	Fuerza la impresión de la nave en el siguiente frame.
 950  8E2B
 951  8E2B 21 2E 8C      	ld hl,Ctrl_3
 952  8E2E CB EE        	set 5,(hl)
 953  8E30
 954  8E30 C9           	ret
 955  8E31
 956  8E31              ; --------------------------------------------------------------------------------------------------------------
 957  8E31              ;
 958  8E31              ;	7/11/24
 959  8E31
 960  8E31              Ajusta_velocidad_entidad
 961  8E31
 962  8E31 3A C4 8B     	ld a,(Velocidad)
 963  8E34 A7           	and a
 964  8E35 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 965  8E36              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 966  8E36              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 967  8E36
 968  8E36
 969  8E36              ; Incrementa (Contador_de_vueltas)x2.
 970  8E36              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 971  8E36
 972  8E36              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 973  8E36              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 974  8E36              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 975  8E36              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 976  8E36              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 977  8E36
 978  8E36
 979  8E36 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 980  8E38 32 C4 8B     	ld (Velocidad),a
 981  8E3B E6 10        	and $10
 982  8E3D C8           	ret z
 983  8E3E
 984  8E3E              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 985  8E3E
 986  8E3E 3A BC 8B     	ld a,(Contador_de_vueltas)
 987  8E41 CB 2F        	sra a
 988  8E43 CB 2F        	sra a
 989  8E45 32 C4 8B     	ld (Velocidad),a
 990  8E48
 991  8E48 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 992  8E4B 23           	inc hl
 993  8E4C 23           	inc hl
 994  8E4D 23           	inc hl
 995  8E4E 23           	inc hl
 996  8E4F 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 997  8E52
 998  8E52 C9           	ret
 999  8E53
1000  8E53              ; --------------------------------------------------------------------------------------------------------------
1001  8E53              ;
1002  8E53              ;	25/08/24
1003  8E53
1004  8E53              Change
1005  8E53
1006  8E53 3A 25 8C     	ld a,(Switch)
1007  8E56 EE 01        	xor 1
1008  8E58 32 25 8C     	ld (Switch),a
1009  8E5B 2A 0A 8C     	ld hl,(Album_de_pintado)
1010  8E5E ED 5B 0C 8C  	ld de,(Album_de_borrado)
1011  8E62 EB           	ex de,hl
1012  8E63 22 0A 8C     	ld (Album_de_pintado),hl
1013  8E66 22 28 8C     	ld (Scanlines_album_SP),hl
1014  8E69 ED 53 0C 8C  	ld (Album_de_borrado),de
1015  8E6D C9           	ret
1016  8E6E
1017  8E6E              Change_Amadeus
1018  8E6E
1019  8E6E 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1020  8E71 ED 5B 10 8C  	ld de,(Album_de_borrado_Amadeus)
1021  8E75 EB           	ex de,hl
1022  8E76 22 0E 8C     	ld (Album_de_pintado_Amadeus),hl
1023  8E79 ED 53 10 8C  	ld (Album_de_borrado_Amadeus),de
1024  8E7D C9           	ret
1025  8E7E
1026  8E7E              Change_Disparos
1027  8E7E
1028  8E7E              ; Álbumes de Amadeus.
1029  8E7E
1030  8E7E 2A 12 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1031  8E81 ED 5B 14 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1032  8E85 EB           	ex de,hl
1033  8E86 22 12 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1034  8E89 ED 53 14 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1035  8E8D CD C7 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1036  8E90
1037  8E90              ; Álbumes de entidades.
1038  8E90
1039  8E90 2A 16 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1040  8E93 ED 5B 18 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1041  8E97 EB           	ex de,hl
1042  8E98 22 16 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1043  8E9B ED 53 18 8C  	ld (Album_de_borrado_disparos_Entidades),de
1044  8E9F 22 1A 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1045  8EA2
1046  8EA2 3A 1C 8C     	ld a,(Num_de_bytes_album_de_disparos)
1047  8EA5 32 1D 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1048  8EA8
1049  8EA8 C9           	ret
1050  8EA9
1051  8EA9              ; ------------------------------------
1052  8EA9              ;
1053  8EA9              ; 1/05/24
1054  8EA9
1055  8EA9              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1056  8EA9              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1057  8EA9
1058  8EA9              ;	DESTRUYE: HL,DE,A
1059  8EA9              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1060  8EA9
1061  8EA9              ;	Variables implicadas: (RND_SP).
1062  8EA9
1063  8EA9              Extrae_numero_aleatorio_y_avanza
1064  8EA9
1065  8EA9 21 00 89     	ld hl,Tabla_de_pintado
1066  8EAC EB           	ex de,hl
1067  8EAD 2A 43 8C     	ld hl,(RND_SP)
1068  8EB0 EB           	ex de,hl
1069  8EB1 A7           	and a
1070  8EB2 ED 52        	sbc hl,de
1071  8EB4
1072  8EB4 2A 43 8C     	ld hl,(RND_SP)
1073  8EB7 20 06        	jr nz,1F
1074  8EB9
1075  8EB9              ; Sitúa HL al principio de la tabla de nº aleatorios.
1076  8EB9
1077  8EB9 21 F6 88     	ld hl,Numeros_aleatorios
1078  8EBC 22 43 8C     	ld (RND_SP),HL
1079  8EBF
1080  8EBF              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1081  8EBF
1082  8EBF 7E           1 ld a,(hl)
1083  8EC0 23           	inc hl
1084  8EC1 22 43 8C     	ld (RND_SP),hl
1085  8EC4 C9           	ret
1086  8EC5
1087  8EC5              ; ------------------------------------
1088  8EC5              ;
1089  8EC5              ; 1/05/24
1090  8EC5
1091  8EC5              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1092  8EC5              ; (1 a 4 segundos).
1093  8EC5              ; Actualizamos (Clock_next_entity) con A.
1094  8EC5
1095  8EC5              ;	DESTRUYE: A y B.
1096  8EC5              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1097  8EC5              ;			 Actualiza (Clock_next_entity) con A.
1098  8EC5
1099  8EC5              ;	Variables implicadas: (Clock_next_entity).
1100  8EC5
1101  8EC5              ; Notas:
1102  8EC5
1103  8EC5              ; 	$32 1 seg.
1104  8EC5              ; 	$64 2 seg.
1105  8EC5              ; 	$96 3 seg.
1106  8EC5              ; 	$c8 4 seg.
1107  8EC5              ; 	$fa 5 seg.
1108  8EC5
1109  8EC5              ; $ffff 1310,7 seg, 22 minutos.
1110  8EC5
1111  8EC5              ;	$0100  5 seg. aproximadamente.
1112  8EC5              ;	$0200 10 seg. aproximadamente.
1113  8EC5              ;	$0300 15 seg. aproximadamente.
1114  8EC5              ;	$0400 20 seg. aproximadamente.
1115  8EC5              ;	$0500 25 seg. aproximadamente.
1116  8EC5              ;	$0600 30 seg. aproximadamente.
1117  8EC5
1118  8EC5              Define_Clock_next_entity
1119  8EC5
1120  8EC5 FE 34        	cp $34
1121  8EC7 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1122  8EC9
1123  8EC9              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1124  8EC9
1125  8EC9 4F           3 ld c,a
1126  8ECA 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1127  8ECC 2A 78 5C     	ld hl,(FRAMES)
1128  8ECF A7           	and a
1129  8ED0 ED 4A        	adc hl,bc
1130  8ED2 22 48 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1131  8ED5 C9           	ret
1132  8ED6
1133  8ED6 3E 34        1 ld a,$34
1134  8ED8 18 EF        	jr 3B
1135  8EDA
1136  8EDA              ; ------------------------------------
1137  8EDA              ;
1138  8EDA              ; 18/03/24
1139  8EDA
1140  8EDA              Borra_diferencia
1141  8EDA
1142  8EDA ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1143  8EDE
1144  8EDE 3A 25 8C     	ld a,(Switch)
1145  8EE1 A7           	and a
1146  8EE2 28 08        	jr z,2F
1147  8EE4
1148  8EE4 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1149  8EE7 11 23 8C     	ld de,Techo_Scanlines_album_2
1150  8EEA 18 06        	jr 3F
1151  8EEC
1152  8EEC 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1153  8EEF 11 21 8C     	ld de,Techo_Scanlines_album
1154  8EF2
1155  8EF2              ; Diferencia.
1156  8EF2
1157  8EF2 ED 42        3 sbc hl,bc
1158  8EF4
1159  8EF4 C8           	ret z
1160  8EF5 D8           	ret c
1161  8EF6
1162  8EF6              ; Nuevo techo, (más bajo que el anterior).
1163  8EF6              ; Fijamos nuevo techo y borramos bytes sobrantes.
1164  8EF6
1165  8EF6 EB           	ex de,hl
1166  8EF7
1167  8EF7 71           	ld (hl),c
1168  8EF8 2C           	inc l
1169  8EF9 70           	ld (hl),b
1170  8EFA
1171  8EFA AF           	xor a
1172  8EFB 43           	ld b,e
1173  8EFC
1174  8EFC 2A 28 8C     	ld hl,(Scanlines_album_SP)
1175  8EFF
1176  8EFF 77           1 ld (hl),a
1177  8F00 23           	inc hl
1178  8F01 10 FC        	djnz 1B
1179  8F03
1180  8F03              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1181  8F03
1182  8F03 21 2E 8C     	ld hl,Ctrl_3
1183  8F06 CB DE        	set 3,(hl)
1184  8F08
1185  8F08 C9           	ret
1186  8F09
1187  8F09              ; --------------------------------------------------------------------------------------------------------------
1188  8F09              ;
1189  8F09              ;	26/3/24
1190  8F09
1191  8F09              Recauda_informacion_de_entidad_en_curso
1192  8F09
1193  8F09              ; Almacena la Coordenada Y de la entidad en curso.
1194  8F09
1195  8F09              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1196  8F09
1197  8F09 3A BB 8B     	ld a,(Coordenada_y)
1198  8F0C 2A 2A 8C     	ld hl,(India_SP)
1199  8F0F 77           	ld (hl),a
1200  8F10 2C           	inc l
1201  8F11
1202  8F11              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1203  8F11
1204  8F11 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
1205  8F15
1206  8F15 73           	ld (hl),e
1207  8F16 2C           	inc l
1208  8F17 72           	ld (hl),d
1209  8F18 2C           	inc l
1210  8F19
1211  8F19 22 2A 8C     	ld (India_SP),hl
1212  8F1C
1213  8F1C C9           	ret
1214  8F1D
1215  8F1D              ; --------------------------------------------------------------------------------------------------------------
1216  8F1D              ;
1217  8F1D              ;	27/03/24
1218  8F1D              ;
1219  8F1D
1220  8F1D              Inicializa_India_y_limpia_Tabla_de_impresion
1221  8F1D
1222  8F1D 2A 2A 8C     	ld hl,(India_SP)
1223  8F20 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1224  8F23
1225  8F23 79           	ld a,c
1226  8F24 95           	sub l
1227  8F25 28 06        	jr z,2F
1228  8F27 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1229  8F28              ;														; _ y pasamos a inicializar (India_SP).
1230  8F28 AF           	xor a
1231  8F29
1232  8F29 77           1 ld (hl),a
1233  8F2A 2C           	inc l
1234  8F2B 10 FC        	djnz 1B												; Limpia Tabla.
1235  8F2D
1236  8F2D 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1237  8F30 22 2A 8C     	ld (India_SP),hl
1238  8F33
1239  8F33 C9           	ret
1240  8F34
1241  8F34              ; --------------------------------------------------------------------------------------------------------------
1242  8F34              ;
1243  8F34              ;	31/3/24
1244  8F34
1245  8F34              Ordena_tabla_de_impresion
1246  8F34
1247  8F34              ; 5794 T/states.
1248  8F34              ; 6278 T/states.
1249  8F34              ; 5310 T/states.
1250  8F34
1251  8F34              ; Inicializamos punteros (India_SP) e (India_2_SP).
1252  8F34              ; Inicializamos contador de comparaciones, [C].
1253  8F34              ; Cargamos los registros A y B para efectuar comparación.
1254  8F34
1255  8F34 FD 2E 00     	ld iyl,0
1256  8F37
1257  8F37 3A 01 8C     	ld a,(Entidades_en_curso)
1258  8F3A FE 04        	cp 4 	;	4
1259  8F3C D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1260  8F3D
1261  8F3D 3D           	dec a
1262  8F3E 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1263  8F3F 51           	ld d,c 										; Copia de respaldo.
1264  8F40
1265  8F40 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1266  8F41
1267  8F41 21 03 89     	ld hl,Tabla_de_pintado+3
1268  8F44 46           	ld b,(hl)
1269  8F45 22 2C 8C     	ld (India_2_SP),hl
1270  8F48
1271  8F48 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1272  8F49 DC 71 8F     	call c, Avanza_India_2_SP
1273  8F4C CC 71 8F     	call z, Avanza_India_2_SP
1274  8F4F
1275  8F4F FD 2D        	dec iyl
1276  8F51 28 18        	jr z,2F
1277  8F53
1278  8F53
1279  8F53              ; --------------------------------------------------------------------------------------------------------------
1280  8F53              ;
1281  8F53              ;	7/4/24
1282  8F53
1283  8F53              Trueque
1284  8F53
1285  8F53              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1286  8F53              ;  			A contiene en nº de fila de (India_SP).
1287  8F53              ;			HL contiene (India_2_SP).
1288  8F53
1289  8F53 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1290  8F54 E5           	push hl										; Preservo (India_2_SP).
1291  8F55
1292  8F55 ED 5B 2A 8C  	ld de,(India_SP)
1293  8F59 EB           	ex de,hl
1294  8F5A 70           	ld (hl),b
1295  8F5B 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1296  8F5C
1297  8F5C CD 9D 8F     	call Intercambia_1_byte
1298  8F5F CD 9D 8F     	call Intercambia_1_byte
1299  8F62
1300  8F62
1301  8F62              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1302  8F62              ; Recuperamos (India_2_SP) en HL.
1303  8F62
1304  8F62 2A 2A 8C     	ld hl,(India_SP)
1305  8F65 7E           	ld a,(hl)
1306  8F66
1307  8F66 E1           	pop hl
1308  8F67 D1           	pop de
1309  8F68
1310  8F68              ; --------------------------------------------------------------------------------------------------------------
1311  8F68
1312  8F68 CD 71 8F     	call Avanza_India_2_SP
1313  8F6B
1314  8F6B 14           2 inc d
1315  8F6C 15           	dec d
1316  8F6D C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1317  8F6E 18 D8        	jr 1B
1318  8F70
1319  8F70 C9           	ret
1320  8F71
1321  8F71              ; ----- ----- ----- ----- -----
1322  8F71
1323  8F71              Avanza_India_2_SP
1324  8F71
1325  8F71 0D           	dec c
1326  8F72 28 0A        	jr z,Avanza_punteros_indios
1327  8F74
1328  8F74 FD 2C        	inc iyl
1329  8F76
1330  8F76 2C           	inc l
1331  8F77 2C           	inc l
1332  8F78 2C           	inc l
1333  8F79
1334  8F79 46           	ld b,(hl)
1335  8F7A 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1336  8F7D
1337  8F7D C9           	ret
1338  8F7E
1339  8F7E              ; ----- ----- ----- ----- -----
1340  8F7E
1341  8F7E              Avanza_punteros_indios
1342  8F7E
1343  8F7E 15           	dec d
1344  8F7F 28 15        	jr z,Prepara_salida
1345  8F81
1346  8F81 4A           	ld c,d
1347  8F82
1348  8F82 2A 2A 8C     	ld hl,(India_SP)
1349  8F85 2C           	inc l
1350  8F86 2C           	inc l
1351  8F87 2C           	inc l
1352  8F88 7E           	ld a,(hl)
1353  8F89 22 2A 8C     	ld (India_SP),hl
1354  8F8C
1355  8F8C 2C           	inc l
1356  8F8D 2C           	inc l
1357  8F8E 2C           	inc l
1358  8F8F 46           	ld b,(hl)
1359  8F90 22 2C 8C     	ld (India_2_SP),hl
1360  8F93
1361  8F93 FD 2C        	inc iyl
1362  8F95
1363  8F95 C9           	ret
1364  8F96
1365  8F96              Prepara_salida
1366  8F96
1367  8F96 21 00 89     	ld hl,Tabla_de_pintado
1368  8F99 22 2A 8C     	ld (India_SP),hl
1369  8F9C C9           	ret
1370  8F9D
1371  8F9D
1372  8F9D 2C           Intercambia_1_byte inc l
1373  8F9E 1C           	inc e
1374  8F9F 46           	ld b,(hl)
1375  8FA0 1A           	ld a,(de)
1376  8FA1 EB           	ex de,hl
1377  8FA2 70           	ld (hl),b
1378  8FA3 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1379  8FA4 C9           	ret
1380  8FA5
1381  8FA5              ; -----------------------------------------------------------------------------------
1382  8FA5              ;
1383  8FA5              ;	20/01/24
1384  8FA5              ;
1385  8FA5              ;
1386  8FA5
1387  8FA5              Construye_movimientos_masticados_entidad
1388  8FA5
1389  8FA5 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1390  8FA8 E5           	push hl
1391  8FA9 CD EC 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1392  8FAC              ;															; _ el (Contador_de_mov_masticados).
1393  8FAC CD B7 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1394  8FAF              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1395  8FAF CD F4 99     	call Recompone_posicion_inicio
1396  8FB2
1397  8FB2 CD 24 97     1 call Draw
1398  8FB5 CD D1 8F     	call Guarda_movimiento_masticado
1399  8FB8
1400  8FB8 CD A1 9D     	call Movimiento
1401  8FBB
1402  8FBB 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1403  8FBE CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1404  8FC0 28 F0        	jr z,1B
1405  8FC2
1406  8FC2              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1407  8FC2              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1408  8FC2
1409  8FC2 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1410  8FC3 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1411  8FC6
1412  8FC6              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1413  8FC6
1414  8FC6 CD 05 9F     	call Situa_en_contador_general_de_mov_masticados
1415  8FC9
1416  8FC9              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1417  8FC9              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1418  8FC9
1419  8FC9 ED 4B C2 8B  	ld bc,(Contador_de_mov_masticados)
1420  8FCD
1421  8FCD 71           	ld (hl),c
1422  8FCE 23           	inc hl
1423  8FCF 70           	ld (hl),b
1424  8FD0
1425  8FD0 C9           	ret
1426  8FD1
1427  8FD1              ; -----------------------------------------------------------------------------------
1428  8FD1              ;
1429  8FD1              ;	28/12/23
1430  8FD1              ;
1431  8FD1              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1432  8FD1              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1433  8FD1
1434  8FD1              Guarda_movimiento_masticado
1435  8FD1
1436  8FD1 ED 73 06 8C  	ld (Stack),sp
1437  8FD5 ED 7B C0 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1438  8FD9
1439  8FD9 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1440  8FDB FD E5            push iy 												; Pushea Puntero_objeto.
1441  8FDD
1442  8FDD ED 7B 06 8C      ld sp,(Stack)
1443  8FE1
1444  8FE1 2A C2 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1445  8FE4 23           	inc hl
1446  8FE5 22 C2 8B     	ld (Contador_de_mov_masticados),hl
1447  8FE8
1448  8FE8 CD EC 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1449  8FEB              ;															; _ el (Contador_de_mov_masticados).
1450  8FEB C9               ret
1451  8FEC
1452  8FEC              ; --------------------------------------------------------------------------------------------------------------
1453  8FEC              ;
1454  8FEC              ;	12/1/24
1455  8FEC              ;
1456  8FEC              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1457  8FEC
1458  8FEC              Actualiza_Puntero_de_almacen_de_mov_masticados
1459  8FEC
1460  8FEC 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1461  8FEF 01 04 00     	ld bc,4
1462  8FF2 A7           	and a
1463  8FF3 ED 4A        	adc hl,bc
1464  8FF5 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1465  8FF8 C9           	ret
1466  8FF9
1467  8FF9              ; --------------------------------------------------------------------------------------------------------------
1468  8FF9              ;
1469  8FF9              ;	24/03/24
1470  8FF9              ;
1471  8FF9              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1472  8FF9              ;
1473  8FF9              ;	IX contiene el puntero de impresión.
1474  8FF9              ;	DE contiene (Puntero_objeto).
1475  8FF9
1476  8FF9
1477  8FF9              Cargamos_registros_con_mov_masticado
1478  8FF9
1479  8FF9 ED 73 06 8C  	ld (Stack),sp
1480  8FFD ED 7B C0 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1481  9001
1482  9001 D1           	pop de 															; DE contiene Puntero_objeto
1483  9002 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1484  9004
1485  9004 ED 73 C0 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1486  9008 ED 7B 06 8C  	ld sp,(Stack)
1487  900C
1488  900C 7B           	ld a,e
1489  900D 82           	add d															; Comprueba si ya no hay datos en el almacén.
1490  900E
1491  900E CC B0 93     	call z,Reinicia_entidad_maliciosa
1492  9011
1493  9011 C9           	ret
1494  9012
1495  9012              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1496  9012              ;
1497  9012              ;	22/7/24
1498  9012
1499  9012              Cargamos_registros_con_explosion
1500  9012
1501  9012
1502  9012 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1503  9015 CD B1 90     	call Extrae_address
1504  9018
1505  9018 5D           	ld e,l
1506  9019 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1507  901A
1508  901A DD 2A BE 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1509  901E
1510  901E C9           	ret
1511  901F
1512  901F
1513  901F              Cargamos_registros_con_explosion_Amadeus
1514  901F
1515  901F 2A 7A 89     	ld hl,(Pamm_Amadeus)
1516  9022 CD B1 90     	call Extrae_address
1517  9025
1518  9025 5D           	ld e,l
1519  9026 54           	ld d,h
1520  9027
1521  9027 DD 2A 78 89  	ld ix,(p.imp.amadeus)
1522  902B
1523  902B C9           	ret
1524  902C
1525  902C              ; --------------------------------------------------------------------------------------------------------------
1526  902C              ;
1527  902C              ;	17/06/24
1528  902C              ;
1529  902C              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1530  902C              ;
1531  902C              ;	IX contiene el puntero de impresión.
1532  902C              ;	DE contiene (Puntero_objeto).
1533  902C
1534  902C
1535  902C              Cargamos_registros_con_mov_masticado_Amadeus
1536  902C
1537  902C ED 73 06 8C  	ld (Stack),sp
1538  9030 ED 7B 7A 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1539  9034 D1           	pop de 															; DE contiene Puntero_objeto
1540  9035 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1541  9037 DD 22 78 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1542  903B ED 7B 06 8C  	ld sp,(Stack)
1543  903F C9           	ret
1544  9040
1545  9040              ; ---------------------------------------------------------------------------------------------------------------------
1546  9040              ;
1547  9040              ;	18/6/24
1548  9040              ;
1549  9040              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1550  9040
1551  9040              Genera_datos_de_impresion_Amadeus
1552  9040
1553  9040 3A 77 89     	ld a,(Impacto_Amadeus)
1554  9043 A7           	and a
1555  9044 20 03        	jr nz,1F
1556  9046
1557  9046              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1558  9046              ; _apuntando a la correspondiente explosión.
1559  9046
1560  9046 CD 2C 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1561  9049
1562  9049 DD 7D        1 ld a,ixl
1563  904B E6 1F        	and $1f
1564  904D 32 74 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1565  9050
1566  9050 2A 28 8C     	ld hl,(Scanlines_album_SP)
1567  9053 E5           	push hl
1568  9054
1569  9054 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1570  9057 22 28 8C     	ld (Scanlines_album_SP),hl
1571  905A
1572  905A CD 08 95     	call Genera_datos_de_impresion
1573  905D
1574  905D E1           	pop hl
1575  905E 22 28 8C     	ld (Scanlines_album_SP),hl
1576  9061
1577  9061 C9           	ret
1578  9062
1579  9062              ; ---------------------------------------------------------------------------------------------------------------------
1580  9062              ;
1581  9062              ;	13/03/24
1582  9062              ;
1583  9062              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1584  9062
1585  9062              Inicia_albumes_de_lineas
1586  9062
1587  9062 21 00 80     	ld hl,Scanlines_album
1588  9065 22 0A 8C     	ld (Album_de_pintado),hl
1589  9068 22 28 8C     	ld (Scanlines_album_SP),hl
1590  906B
1591  906B 21 1A 81     	ld hl,Scanlines_album_2
1592  906E 22 0C 8C     	ld (Album_de_borrado),hl
1593  9071
1594  9071 C9           	ret
1595  9072
1596  9072              Inicia_albumes_de_lineas_Amadeus
1597  9072
1598  9072 21 34 82     	ld hl,Amadeus_scanlines_album
1599  9075 22 0E 8C     	ld (Album_de_pintado_Amadeus),hl
1600  9078 21 58 82     	ld hl,Amadeus_scanlines_album_2
1601  907B 22 10 8C     	ld (Album_de_borrado_Amadeus),hl
1602  907E
1603  907E C9           	ret
1604  907F
1605  907F              Inicia_albumes_de_disparos
1606  907F
1607  907F 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1608  9082 22 12 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1609  9085 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1610  9088 22 14 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1611  908B
1612  908B 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1613  908E 22 16 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1614  9091 22 1A 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1615  9094
1616  9094 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1617  9097 22 18 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1618  909A
1619  909A C9           	ret
1620  909B
1621  909B              ; ---------------------------------------------------------------------------------------------------------------------
1622  909B              ;
1623  909B              ; 8/1/23
1624  909B              ;
1625  909B              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1626  909B              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1627  909B              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1628  909B
1629  909B              ; Destruye HL y DE !!!!!
1630  909B
1631  909B              Inicia_punteros_de_cajas
1632  909B
1633  909B 21 61 89     	ld hl,Indice_de_cajas_de_entidades
1634  909E CD B1 90         call Extrae_address
1635  90A1 22 F9 8B         ld (Puntero_store_caja),hl
1636  90A4 21 63 89     	ld hl,Indice_de_cajas_de_entidades+2
1637  90A7 22 FD 8B     	ld (Indice_restore_caja),hl
1638  90AA CD B1 90     	call Extrae_address
1639  90AD 22 FB 8B     	ld (Puntero_restore_caja),hl
1640  90B0 C9               ret
1641  90B1
1642  90B1              ; *************************************************************************************************************************************************************
1643  90B1
1644  90B1              ;
1645  90B1              ; 20/10/22
1646  90B1              ;
1647  90B1              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1648  90B1              ;
1649  90B1              ; Destruye el puntero y DE !!!!!
1650  90B1
1651  90B1 5E           Extrae_address ld e,(hl)
1652  90B2 23           	inc hl
1653  90B3 56           	ld d,(hl)
1654  90B4 2B           	dec hl
1655  90B5 EB           	ex de,hl
1656  90B6 C9           	ret
1657  90B7
1658  90B7              ; *************************************************************************************************************************************************************
1659  90B7              ;
1660  90B7              ;	20/1/24
1661  90B7              ;
1662  90B7              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1663  90B7              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1664  90B7              ;
1665  90B7              ;   Destruye HL y BC !!!!!,
1666  90B7              ;
1667  90B7              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1668  90B7              ;					"0" ..... Izquierda.
1669  90B7
1670  90B7              Inicia_Puntero_objeto
1671  90B7
1672  90B7 3A D8 8B     	ld a,(Cuad_objeto)
1673  90BA E6 01        	and 1
1674  90BC F5           	push af
1675  90BD CC D9 90     	call z,Inicia_puntero_objeto_izq
1676  90C0 F1           	pop af
1677  90C1 C8           	ret z
1678  90C2 CD C6 90     	call Inicia_puntero_objeto_der
1679  90C5 C9           	ret
1680  90C6
1681  90C6              ; Arrancamos desde la parte izquierda de la pantalla.
1682  90C6              ; Iniciamos (Indice_Sprite_der).
1683  90C6
1684  90C6 2A CE 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1685  90C9 22 D2 8B     	ld (Puntero_DESPLZ_der),hl
1686  90CC CD B1 90     	call Extrae_address
1687  90CF 22 CB 8B     	ld (Puntero_objeto),hl
1688  90D2
1689  90D2 2A D0 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1690  90D5 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
1691  90D8 C9           	ret
1692  90D9
1693  90D9              ; Arrancamos desde la parte derecha de la pantalla.
1694  90D9              ; Iniciamos (Indice_Sprite_izq).
1695  90D9
1696  90D9 2A D0 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1697  90DC 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
1698  90DF CD B1 90     	call Extrae_address
1699  90E2 22 CB 8B     	ld (Puntero_objeto),hl
1700  90E5
1701  90E5 2A CE 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1702  90E8 22 D2 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1703  90EB C9           	ret
1704  90EC
1705  90EC              ; **************************************************************************************************
1706  90EC              ;
1707  90EC              ;	06/07/24
1708  90EC              ;
1709  90EC              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1710  90EC
1711  90EC              Restore_entidad
1712  90EC
1713  90EC 2A F9 8B     	ld hl,(Puntero_store_caja)
1714  90EF 7E           	ld a,(hl)
1715  90F0 A7           	and a
1716  90F1 CC FF 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1717  90F4 28 F6        	jr z,Restore_entidad
1718  90F6
1719  90F6 11 B9 8B     	ld de,Bandeja_DRAW
1720  90F9 01 0C 00     	ld bc,12
1721  90FC ED B0        	ldir
1722  90FE C9           	ret
1723  90FF
1724  90FF              ; **************************************************************************************************
1725  90FF              ;
1726  90FF              ;	08/05/23
1727  90FF              ;
1728  90FF              ;	Incrementamos los dos punteros de entidades. (+1).
1729  90FF
1730  90FF              Incrementa_punteros_de_cajas
1731  90FF
1732  90FF 2A FB 8B     	ld hl,(Puntero_restore_caja)
1733  9102 22 F9 8B     	ld (Puntero_store_caja),hl
1734  9105 2A FD 8B     	ld hl,(Indice_restore_caja)
1735  9108 23           	inc hl
1736  9109 23           	inc hl
1737  910A 22 FD 8B     	ld (Indice_restore_caja),hl
1738  910D CD B1 90         call Extrae_address
1739  9110 22 FB 8B         ld (Puntero_restore_caja),hl
1740  9113 C9               ret
1741  9114
1742  9114              ; -----------------------------------------------------------
1743  9114
1744  9114              ; Teclado.
1745  9114
1746  9114 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1747  9116 DB FE        	in a,($fe)
1748  9118 E6 01        	and $01
1749  911A 28 02        	jr z,1f
1750  911C 18 F6        	jr Pulsa_ENTER
1751  911E C9           1 ret
1752  911F
1753  911F              ; **************************************************************************************************
1754  911F              ;
1755  911F              ; Temporización.
1756  911F
1757  911F              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1758  911F              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1759  911F              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1760  911F              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1761  911F
1762  911F              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1763  911F              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1764  911F              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1765  911F
1766  911F              ; A partir de $4f61 no hace falta DELAY.
1767  911F
1768  911F              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1769  911F
1770  911F              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1771  911F              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1772  911F              ;	LD A,B
1773  911F              ;	AND A
1774  911F              ;	JR NZ,wait
1775  911F              ;	RET
1776  911F
1777  911F              ; ---------------------------------------------------------------------------------------------------------------
1778  911F              ;
1779  911F              ;	13/07/24
1780  911F              ;
1781  911F
1782  911F              Inicia_Shield
1783  911F
1784  911F 21 52 8C     	ld hl,Datos_Shield
1785  9122 22 56 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1786  9125
1787  9125 7E           	ld a,(hl)
1788  9126 32 59 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1789  9129
1790  9129 3E 01        	ld a,1
1791  912B 32 5A 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1792  912E
1793  912E C9           	ret
1794  912F
1795  912F              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1796  912F              ;
1797  912F              ;	4/6/24
1798  912F              ;
1799  912F              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1800  912F              ;
1801  912F              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1802  912F              ;
1803  912F
1804  912F              Actualiza_pantalla
1805  912F
1806  912F 3E 02        	ld a,2
1807  9131 D3 FE        	out ($fe),a
1808  9133
1809  9133 3A 2E 8C     	ld a,(Ctrl_3)
1810  9136 CB 57        	bit 2,a
1811  9138 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1812  913A
1813  913A              Borrando_entidades
1814  913A
1815  913A 2A 28 8C     	ld hl,(Scanlines_album_SP)
1816  913D CD B1 90     	call Extrae_address
1817  9140 24           	inc h
1818  9141 25           	dec h
1819  9142 28 05        	jr z,Pintando_entidades
1820  9144 CD 01 96     	call Pinta_Sprites
1821  9147 18 F1        	jr Borrando_entidades
1822  9149
1823  9149              Pintando_entidades
1824  9149
1825  9149 2A 2A 8C     	ld hl,(India_SP)
1826  914C 2C           	inc l
1827  914D CD B1 90     	call Extrae_address
1828  9150 24           	inc h
1829  9151 25           	dec h
1830  9152 28 0E        	jr z,Ejecuta_escudo
1831  9154 1C           	inc e
1832  9155 1C           	inc e
1833  9156 ED 53 2A 8C  	ld (India_SP),de
1834  915A CD B1 90     	call Extrae_address
1835  915D CD 01 96     	call Pinta_Sprites
1836  9160 18 E7        	jr Pintando_entidades
1837  9162
1838  9162              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1839  9162
1840  9162              Ejecuta_escudo
1841  9162
1842  9162 3A 58 8C     	ld a,(Shield)
1843  9165 A7           	and a
1844  9166 20 2F        	jr nz,Aplica_Shield
1845  9168
1846  9168              Borrando_Amadeus
1847  9168
1848  9168 21 2E 8C     	ld hl,Ctrl_3
1849  916B CB 6E        	bit 5,(hl)
1850  916D 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1851  916F
1852  916F 2A 10 8C     	ld hl,(Album_de_borrado_Amadeus)
1853  9172 CD B1 90     	call Extrae_address
1854  9175 24           	inc h
1855  9176 25           	dec h
1856  9177 28 03        	jr z,Pintando_Amadeus
1857  9179 CD 01 96     	call Pinta_Sprites
1858  917C
1859  917C              Pintando_Amadeus
1860  917C
1861  917C 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1862  917F CD B1 90     	call Extrae_address
1863  9182 24           	inc h
1864  9183 25           	dec h
1865  9184 28 03        	jr z,1F
1866  9186 CD 01 96     	call Pinta_Sprites
1867  9189
1868  9189              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1869  9189
1870  9189 21 2E 8C     1 ld hl,Ctrl_3
1871  918C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1872  918E CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1873  9190 CB AE        	res 5,(hl)
1874  9192
1875  9192 3E 01        	ld a,1												; Borde azul.
1876  9194 D3 FE        	out ($fe),a
1877  9196
1878  9196 C9           	ret
1879  9197
1880  9197              Aplica_Shield
1881  9197
1882  9197              ;	Bit 1 "1" (Shield_3) Sólo borra.
1883  9197              ;		  "0"     ""     Borra/Pinta.
1884  9197              ;	Bit 2    ""  RET.	 No borra, no pinta.
1885  9197
1886  9197 21 5A 8C     	ld hl,Shield_3
1887  919A
1888  919A CB 5E        	bit 3,(hl)
1889  919C 20 DE        	jr nz,Pintando_Amadeus
1890  919E
1891  919E CB 56        	bit 2,(hl)
1892  91A0 20 E7        	jr nz,1B
1893  91A2
1894  91A2 CB 4E        	bit 1,(hl)
1895  91A4 C4 AB 91     	call nz,Borra_Amadeus_shield
1896  91A7
1897  91A7 28 BF        	jr z,Borrando_Amadeus
1898  91A9 18 DE        	jr 1B
1899  91AB
1900  91AB              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1901  91AB
1902  91AB              Borra_Amadeus_shield
1903  91AB
1904  91AB 3A 2E 8C     	ld a,(Ctrl_3)
1905  91AE CB 6F        	bit 5,a
1906  91B0 28 08        	jr z,1F
1907  91B2
1908  91B2 2A 10 8C     	ld hl,(Album_de_borrado_Amadeus)
1909  91B5 CD B1 90     	call Extrae_address
1910  91B8 18 06        	jr 2F
1911  91BA
1912  91BA 2A 0E 8C     1 ld hl,(Album_de_pintado_Amadeus)
1913  91BD CD B1 90     	call Extrae_address
1914  91C0
1915  91C0 CD 01 96     2 call Pinta_Sprites
1916  91C3
1917  91C3 AF           	xor a
1918  91C4 3C           	inc a											; Asegura NZ en la salida de la rutina.
1919  91C5
1920  91C5 C9           	ret
1921  91C6
1922  91C6              Pinta_Amadeus_shield
1923  91C6
1924  91C6 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1925  91C9 CD B1 90     	call Extrae_address
1926  91CC CD 01 96     	call Pinta_Sprites
1927  91CF
1928  91CF AF           	xor a
1929  91D0 3C           	inc a											; Asegura NZ en la salida de la rutina.
1930  91D1
1931  91D1 C9           	ret
1932  91D2
1933  91D2              Borra_Pinta_Amadeus_shield
1934  91D2
1935  91D2 CD AB 91     	call Borra_Amadeus_shield
1936  91D5 CD C6 91     	call Pinta_Amadeus_shield
1937  91D8 C9           	ret
1938  91D9
1939  91D9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1940  91D9              ;
1941  91D9              ;	19/6/24
1942  91D9              ;
1943  91D9
1944  91D9              Teclado
1945  91D9
1946  91D9              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1947  91D9
1948  91D9 3E F7        	ld a,$f7												; "5" para disparar.
1949  91DB DB FE        	in a,($fe)
1950  91DD E6 10        	and $10
1951  91DF
1952  91DF CC 9B A2     	call z,Genera_disparo_Amadeus
1953  91E2
1954  91E2 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1955  91E4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1956  91E6 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1957  91E8 CC 6E 9D         call z,Amadeus_a_izquierda
1958  91EB
1959  91EB 3E F7        	ld a,$f7
1960  91ED DB FE        	in a,($fe)
1961  91EF E6 01        	and $01
1962  91F1 C8           	ret z
1963  91F2
1964  91F2 3E F7        	ld a,$f7
1965  91F4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1966  91F6 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1967  91F8 CC 86 9D     	call z,Amadeus_a_derecha
1968  91FB
1969  91FB C9           	ret
1970  91FC
1971  91FC              ; ------------------------------------------------------------------------------------------------------------------------
1972  91FC              ;
1973  91FC              ;	06/07/24
1974  91FC              ;
1975  91FC
1976  91FC              Genera_explosion
1977  91FC
1978  91FC 21 40 8C     	ld hl,Clock_explosion
1979  91FF 35           	dec (hl)
1980  9200 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1981  9202
1982  9202              Borra_entidad_colisionada
1983  9202
1984  9202 CD 09 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1985  9205 CD 12 90     	call Cargamos_registros_con_explosion
1986  9208 CD 08 95     	call Genera_datos_de_impresion
1987  920B
1988  920B AF           	xor a
1989  920C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1990  920D
1991  920D C9           	ret
1992  920E
1993  920E              Siguiente_frame_explosion
1994  920E
1995  920E 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1996  9210
1997  9210              ; Avanza Frame de explosión.
1998  9210
1999  9210 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2000  9213 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2001  9216
2002  9216 79           	ld a,c
2003  9217 95           	sub l
2004  9218 20 0B        	jr nz,1F
2005  921A
2006  921A              ; Fín de la entidad !!!!!!!!!!!!!
2007  921A
2008  921A 21 00 8C     	ld hl,Numero_parcial_de_entidades
2009  921D 35           	dec (hl)
2010  921E 23           	inc hl
2011  921F 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2012  9220
2013  9220 CD 85 93     	call Limpiamos_bandeja_DRAW
2014  9223 18 DD        	jr Borra_entidad_colisionada
2015  9225
2016  9225 23           1 inc hl
2017  9226 23           	inc hl
2018  9227 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2019  922A 18 D6        	jr Borra_entidad_colisionada
2020  922C
2021  922C              ; ----- ----- ----- ----- -----
2022  922C
2023  922C              Genera_explosion_Amadeus
2024  922C
2025  922C 21 41 8C     	ld hl,Clock_explosion_Amadeus
2026  922F 35           	dec (hl)
2027  9230 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2028  9232
2029  9232              Borra_Amadeus_impactado
2030  9232
2031  9232 CD 6E 8E     	call Change_Amadeus
2032  9235 CD 1F 90     	call Cargamos_registros_con_explosion_Amadeus
2033  9238 CD 40 90     	call Genera_datos_de_impresion_Amadeus
2034  923B
2035  923B 21 2E 8C     	ld hl,Ctrl_3
2036  923E CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2037  9240
2038  9240 AF           	xor a
2039  9241 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2040  9242
2041  9242 C9           	ret
2042  9243
2043  9243              Siguiente_frame_explosion_Amadeus
2044  9243
2045  9243 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2046  9245
2047  9245              ; Avanza Frame de explosión.
2048  9245
2049  9245 2A 7A 89     	ld hl,(Pamm_Amadeus)
2050  9248 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2051  924B
2052  924B 79           	ld a,c
2053  924C 95           	sub l
2054  924D 20 0B        	jr nz,1F
2055  924F
2056  924F              ; Fín de Amadeus !!!!!!!!!!!!!
2057  924F              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2058  924F
2059  924F AF           	xor a
2060  9250 32 77 89     	ld (Impacto_Amadeus),a
2061  9253 21 2E 8C     	ld hl,Ctrl_3
2062  9256 CB F6        	set 6,(hl)
2063  9258
2064  9258 18 D8        	jr Borra_Amadeus_impactado
2065  925A
2066  925A 23           1 inc hl
2067  925B 23           	inc hl
2068  925C 22 7A 89     	ld (Pamm_Amadeus),hl
2069  925F 18 D1        	jr Borra_Amadeus_impactado
2070  9261
2071  9261              ; ---------------------------------------------------------------
2072  9261
2073  9261              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9261              ; ******************************************************************************************************************************************************************************************
   2+ 9261              ;
   3+ 9261              ;   21/04/24
   4+ 9261              ;
   5+ 9261              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9261              ;   (XOR) bit a bit.
   7+ 9261              ;
   8+ 9261              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9261
  10+ 9261              Derivando_RND
  11+ 9261
  12+ 9261 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9264
  14+ 9264 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9266 C5               push bc
  16+ 9267              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9267 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 926A              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 926A
  20+ 926A A7           6 and a                                 ; Carry a "0".
  21+ 926B CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 926D 30 02            jr nc,1F
  23+ 926F
  24+ 926F CB C1            set 0,c
  25+ 9271
  26+ 9271 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9272 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9274 5F               ld e,a
  29+ 9275
  30+ 9275 7A               ld a,d
  31+ 9276 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9278 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 927A
  34+ 927A CB 3F            srl a
  35+ 927C
  36+ 927C AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 927D
  38+ 927D 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 927E 28 04            jr z,4F
  40+ 9280
  41+ 9280 CB FF            set 7,a
  42+ 9282 18 02            jr 5F
  43+ 9284
  44+ 9284 CB BF        4 res 7,a
  45+ 9286
  46+ 9286 CB 21        5 sla c
  47+ 9288 10 E0            djnz 6B
  48+ 928A
  49+ 928A 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 928B
  51+ 928B 77               ld (hl),a
  52+ 928C 23               inc hl
  53+ 928D C1               pop bc
  54+ 928E 10 D4            djnz 3B
  55+ 9290
  56+ 9290 C9               ret
  57+ 9291
  58+ 9291
  59+ 9291
# file closed: RND_Derivando.asm
2074  9291              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9291              ;---------------------------------------------------------------------------------------------------------------
   2+ 9291              ;
   3+ 9291              ;   8/3/24
   4+ 9291              ;
   5+ 9291              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9291              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9291              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9291              ;	_ de la 1ª entidad del Nivel.
   9+ 9291              ;
  10+ 9291              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9291
  12+ 9291              ;	MODIFICA: HL,DE y A.
  13+ 9291              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9291
  15+ 9291              Inicializa_Nivel
  16+ 9291
  17+ 9291              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  18+ 9291
  19+ 9291 21 9A 8B     	ld hl,Indice_de_niveles
  20+ 9294 22 4E 8C     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  21+ 9297 CD B1 90     	call Extrae_address
  22+ 929A 1C           	inc e
  23+ 929B 1C           	inc e
  24+ 929C ED 53 4E 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
  25+ 92A0
  26+ 92A0 7E           	ld a,(hl)
  27+ 92A1 32 FF 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  28+ 92A4
  29+ 92A4              ;! Las velocidades no deben de estar aquí pues pueden variar según el tipo de entidad.
  30+ 92A4
  31+ 92A4 2C           	inc l
  32+ 92A5 CD B2 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel. Introduce los perfiles de velocidad en la Bandeja DRAW.
  33+ 92A8
  34+ 92A8 22 50 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  35+ 92AB
  36+ 92AB CD BB 92     	call Situa_Puntero_indice_mov			 	 ; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en la coreografía correcta.
  37+ 92AE
  38+ 92AE              ;	di
  39+ 92AE              ;	jr $
  40+ 92AE              ;	ei
  41+ 92AE
  42+ 92AE CD CC 92     	call Situa_Puntero_de_almacen_de_mov_masticados					; Sitúa (Puntero_de_almacen_de_mov_masticados) en el almacén adecuado según el (Tipo) de entidad.
  43+ 92B1
  44+ 92B1 C9           	ret
  45+ 92B2
  46+ 92B2              ; ----------------------
  47+ 92B2
  48+ 92B2 11 DE 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  49+ 92B5 01 04 00     	ld bc,4
  50+ 92B8 ED B0        	ldir
  51+ 92BA C9           	ret
  52+ 92BB
  53+ 92BB 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  54+ 92BC CD 56 94         call Calcula_salto_en_BC
  55+ 92BF 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  56+ 92C2 A7               and a
  57+ 92C3 ED 4A            adc hl,bc
  58+ 92C5 CD B1 90         call Extrae_address
  59+ 92C8 22 EA 8B         ld (Puntero_indice_mov),hl
  60+ 92CB C9               ret
  61+ 92CC
  62+ 92CC 3A B9 8B     Situa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  63+ 92CF CD 56 94     	call Calcula_salto_en_BC
  64+ 92D2 21 C0 DD     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  65+ 92D5 A7               and a
  66+ 92D6 ED 4A            adc hl,bc
  67+ 92D8 CD B1 90         call Extrae_address
  68+ 92DB 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  69+ 92DE C9           	ret
  70+ 92DF
  71+ 92DF              ;---------------------------------------------------------------------------------------------------------------
  72+ 92DF              ;
  73+ 92DF              ;   5/1/24
  74+ 92DF              ;
  75+ 92DF              ;	Destruye A,BC,HL,DE
  76+ 92DF
  77+ 92DF              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  78+ 92DF              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  79+ 92DF
  80+ 92DF              Inicia_Entidades
  81+ 92DF
  82+ 92DF              ; Preparamos los punteros de las cajas de entidades:
  83+ 92DF
  84+ 92DF CD 9B 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  85+ 92E2              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  86+ 92E2 CD A1 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  87+ 92E5
  88+ 92E5 2A 50 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  89+ 92E8
  90+ 92E8 22 50 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  91+ 92EB
  92+ 92EB CD 04 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  93+ 92EE
  94+ 92EE 2A 50 8C     	ld hl,(Datos_de_nivel)
  95+ 92F1
  96+ 92F1              ; En este punto:
  97+ 92F1              ;
  98+ 92F1              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  99+ 92F1              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 100+ 92F1
 101+ 92F1 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
 102+ 92F2
 103+ 92F2 7E           	ld a,(hl)
 104+ 92F3 CD 70 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 105+ 92F6
 106+ 92F6 CD 6B 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 107+ 92F9
 108+ 92F9              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 109+ 92F9
 110+ 92F9 CD 26 94     	call Busca_mov_masticados_segun_tipo
 111+ 92FC
 112+ 92FC A7           	and a
 113+ 92FD 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 114+ 92FF
 115+ 92FF              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 116+ 92FF
 117+ 92FF              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 118+ 92FF              ;	_ de este tipo de entidad.
 119+ 92FF
 120+ 92FF CD 05 9F     	call Situa_en_contador_general_de_mov_masticados
 121+ 9302 CD 12 9F     	call Transfiere_datos_de_contadores
 122+ 9305
 123+ 9305 18 06        	jr 4F
 124+ 9307
 125+ 9307 CD A5 8F     3 call Construye_movimientos_masticados_entidad
 126+ 930A
 127+ 930A              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 128+ 930A              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 129+ 930A              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 130+ 930A              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 131+ 930A              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 132+ 930A
 133+ 930A CD E4 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 134+ 930D              ;																; _ Mov_masticados ya generados.
 135+ 930D
 136+ 930D CD F9 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 137+ 9310
 138+ 9310 DD E5        	push ix
 139+ 9312 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 140+ 9313
 141+ 9313 D5           	push de
 142+ 9314 CD DC 94     	call Genera_coordenadas
 143+ 9317
 144+ 9317 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 145+ 931B CD 09 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 146+ 931E D1           	pop de
 147+ 931F
 148+ 931F CD 08 95     	call Genera_datos_de_impresion
 149+ 9322              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 150+ 9322              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 151+ 9322              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 152+ 9322              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 153+ 9322
 154+ 9322 CD A8 93     	call Decrementa_Contador_de_mov_masticados
 155+ 9325
 156+ 9325              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 157+ 9325
 158+ 9325 ED 5B F9 8B  	ld de,(Puntero_store_caja)
 159+ 9329 CD 98 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 160+ 932C
 161+ 932C CD 85 93     	call Limpiamos_bandeja_DRAW
 162+ 932F CD FF 90     	call Incrementa_punteros_de_cajas
 163+ 9332
 164+ 9332              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 165+ 9332              ; _ entidad del Nivel.
 166+ 9332
 167+ 9332 3A 2F 8C     	ld a,(Ctrl_4)
 168+ 9335 E6 F0        	and $f0
 169+ 9337 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 170+ 933A
 171+ 933A              ; Siguiente entidad del Nivel.
 172+ 933A
 173+ 933A 2A 50 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 174+ 933D 23           	inc hl 														; _ entidad del Nivel.
 175+ 933E
 176+ 933E C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 177+ 933F
 178+ 933F 10 A7        	djnz 2B
 179+ 9341
 180+ 9341 C9           	ret
 181+ 9342
 182+ 9342              ; -------------------------------------------------------------------------------------------------------------------
 183+ 9342              ;
 184+ 9342              ;	27/5/24
 185+ 9342              ;
 186+ 9342              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 187+ 9342              ;
 188+ 9342
 189+ 9342              ; 	Cargamos la definición de Amadeus en DRAW.
 190+ 9342              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 191+ 9342
 192+ 9342 21 F1 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 193+ 9345 CD 6B 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 194+ 9348
 195+ 9348
 196+ 9348              Construye_movimientos_masticados_Amadeus
 197+ 9348
 198+ 9348 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 199+ 934B CD EC 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 200+ 934E              ;															; _ el (Contador_de_mov_masticados).
 201+ 934E CD B7 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 202+ 9351              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 203+ 9351
 204+ 9351              ; Generamos movimientos masticados de Amadeus.
 205+ 9351
 206+ 9351 06 79        	ld b,121												; $0079, 121d.
 207+ 9353
 208+ 9353 C5           1 push bc
 209+ 9354 CD 24 97     	call Draw
 210+ 9357 CD D1 8F     	call Guarda_movimiento_masticado
 211+ 935A
 212+ 935A CD 98 9A     	call Mov_right
 213+ 935D CD 98 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 214+ 9360
 215+ 9360 C1           	pop bc
 216+ 9361 10 F0        	djnz 1B
 217+ 9363
 218+ 9363              ; Todos los movimientos masticados de Amadeus se han creado.
 219+ 9363
 220+ 9363              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 221+ 9363              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 222+ 9363
 223+ 9363 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 224+ 9366 01 08 00     	ld bc,8
 225+ 9369 A7           	and a
 226+ 936A ED 42        	sbc hl,bc
 227+ 936C 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 228+ 936F
 229+ 936F C9           	ret
 230+ 9370
 231+ 9370              ; ---------------------------------------------------------------------
 232+ 9370              ;
 233+ 9370              ;	10/02/24
 234+ 9370              ;
 235+ 9370              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 236+ 9370              ;
 237+ 9370              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 238+ 9370
 239+ 9370              Definicion_segun_tipo
 240+ 9370
 241+ 9370 CD 56 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 242+ 9373 21 D3 89     	ld hl,Indice_de_definiciones_de_entidades
 243+ 9376 CD 61 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 244+ 9379 C9           	ret
 245+ 937A
 246+ 937A              ; ---------------------------------------------------------------------
 247+ 937A              ;
 248+ 937A              ;	6/7/24
 249+ 937A
 250+ 937A
 251+ 937A              Store_Restore_cajas
 252+ 937A
 253+ 937A ED 5B F9 8B  	ld de,(Puntero_store_caja)
 254+ 937E CD 98 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 255+ 9381 CD FF 90     	call Incrementa_punteros_de_cajas
 256+ 9384 C9           	ret
 257+ 9385
 258+ 9385              ; ---------------------------------------------------------------------
 259+ 9385              ;
 260+ 9385              ;	23/6/24
 261+ 9385              ;
 262+ 9385              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 263+ 9385              ;
 264+ 9385              ;	MODIFY: HL
 265+ 9385
 266+ 9385              Limpiamos_bandeja_DRAW
 267+ 9385
 268+ 9385 ED 73 06 8C  	ld (Stack),sp
 269+ 9389 31 DE 8B     	ld sp,Vel_left
 270+ 938C
 271+ 938C AF           	xor a
 272+ 938D 67           	ld h,a
 273+ 938E 6F           	ld l,a
 274+ 938F
 275+ 938F E5           	push hl
 276+ 9390 E5           	push hl
 277+ 9391 E5           	push hl
 278+ 9392 E5           	push hl
 279+ 9393 E5           	push hl
 280+ 9394 E5           	push hl
 281+ 9395 E5           	push hl
 282+ 9396 E5           	push hl
 283+ 9397 E5           	push hl
 284+ 9398 E5           	push hl
 285+ 9399 E5           	push hl
 286+ 939A E5           	push hl
 287+ 939B E5           	push hl
 288+ 939C E5           	push hl
 289+ 939D E5           	push hl
 290+ 939E E5           	push hl
 291+ 939F E5           	push hl
 292+ 93A0 E5           	push hl
 293+ 93A1
 294+ 93A1 33           	inc sp
 295+ 93A2
 296+ 93A2 E5           	push hl
 297+ 93A3 ED 7B 06 8C  	ld sp,(Stack)
 298+ 93A7
 299+ 93A7 C9           	ret
 300+ 93A8
 301+ 93A8              ; ---------------------------------------------------------------------
 302+ 93A8              ;
 303+ 93A8              ;	24/03/24
 304+ 93A8
 305+ 93A8 2A C2 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 306+ 93AB 2B           	dec hl
 307+ 93AC 22 C2 8B     	ld (Contador_de_mov_masticados),hl
 308+ 93AF C9           	ret
 309+ 93B0
 310+ 93B0              ; ---------------------------------------------------------------------
 311+ 93B0              ;
 312+ 93B0              ;	7/11/24
 313+ 93B0
 314+ 93B0              Reinicia_entidad_maliciosa
 315+ 93B0
 316+ 93B0              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 317+ 93B0
 318+ 93B0 CD 05 9F     	call Situa_en_contador_general_de_mov_masticados
 319+ 93B3 CD 12 9F     	call Transfiere_datos_de_contadores
 320+ 93B6
 321+ 93B6              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 322+ 93B6
 323+ 93B6 3A B9 8B     	ld a,(Tipo)
 324+ 93B9 CD 70 93     	call Definicion_segun_tipo
 325+ 93BC
 326+ 93BC E5           	push hl
 327+ 93BD DD E1        	pop ix
 328+ 93BF
 329+ 93BF DD 6E 0B     	ld l,(ix+11)
 330+ 93C2 DD 66 0C     	ld h,(ix+12)
 331+ 93C5
 332+ 93C5 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 333+ 93C8
 334+ 93C8 CD F9 8F     	call Cargamos_registros_con_mov_masticado
 335+ 93CB
 336+ 93CB              ; Incrementa (Contador_de_vueltas)x2.
 337+ 93CB              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 338+ 93CB
 339+ 93CB              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 340+ 93CB              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 341+ 93CB              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 342+ 93CB              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 343+ 93CB              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 344+ 93CB
 345+ 93CB 21 BC 8B     	ld hl,Contador_de_vueltas
 346+ 93CE CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 347+ 93D0
 348+ 93D0 7E           	ld a,(hl)
 349+ 93D1 CB 2F        	sra a
 350+ 93D3 CB 2F        	sra a
 351+ 93D5
 352+ 93D5 32 C4 8B     	ld (Velocidad),a
 353+ 93D8
 354+ 93D8 3E 40        	ld a,$40
 355+ 93DA BE           	cp (hl)
 356+ 93DB C0           	ret nz
 357+ 93DC
 358+ 93DC              ; Límitador.
 359+ 93DC
 360+ 93DC              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 361+ 93DC
 362+ 93DC CB 2E        	sra (hl)
 363+ 93DE 21 C4 8B     	ld hl,Velocidad
 364+ 93E1 CB 2E        	sra (hl)
 365+ 93E3
 366+ 93E3 C9           	ret
 367+ 93E4
 368+ 93E4              ; ---------------------------------------------------------------------
 369+ 93E4              ;
 370+ 93E4              ;	22/01/24
 371+ 93E4
 372+ 93E4 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 373+ 93E7 CB 46        	bit 0,(hl)
 374+ 93E9 20 0D        	jr nz,1F
 375+ 93EB CB 4E        	bit 1,(hl)
 376+ 93ED 20 0C        	jr nz,2F
 377+ 93EF CB 56        	bit 2,(hl)
 378+ 93F1 20 0B        	jr nz,3F
 379+ 93F3 CB 5E        	bit 3,(hl)
 380+ 93F5 20 0A        	jr nz,4F
 381+ 93F7 C9           	ret
 382+ 93F8
 383+ 93F8 CB E6        1 set 4,(hl)
 384+ 93FA C9           	ret
 385+ 93FB CB EE        2 set 5,(hl)
 386+ 93FD C9           	ret
 387+ 93FE CB F6        3 set 6,(hl)
 388+ 9400 C9           	ret
 389+ 9401 CB FE        4 set 7,(hl)
 390+ 9403 C9           	ret
 391+ 9404
 392+ 9404              ; ---------------------------------------------------------------------
 393+ 9404              ;
 394+ 9404              ;	23/01/24
 395+ 9404              ;
 396+ 9404              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 397+ 9404              ;
 398+ 9404              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 399+ 9404              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 400+ 9404              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 401+ 9404              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 402+ 9404
 403+ 9404              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 404+ 9404
 405+ 9404 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 406+ 9405 3D           	dec a
 407+ 9406 20 06        	jr nz,1F
 408+ 9408
 409+ 9408              ; --- Tipo_1
 410+ 9408
 411+ 9408 21 2F 8C     	ld hl,Ctrl_4
 412+ 940B CB C6        	set 0,(hl)
 413+ 940D C9           	ret
 414+ 940E
 415+ 940E 3D           1 dec a
 416+ 940F 20 06        	jr nz,2F
 417+ 9411
 418+ 9411              ; --- Tipo_2
 419+ 9411
 420+ 9411 21 2F 8C     	ld hl,Ctrl_4
 421+ 9414 CB CE        	set 1,(hl)
 422+ 9416 C9           	ret
 423+ 9417
 424+ 9417 3D           2 dec a
 425+ 9418 20 06        	jr nz,3F
 426+ 941A
 427+ 941A              ; --- Tipo_3
 428+ 941A
 429+ 941A 21 2F 8C     	ld hl,Ctrl_4
 430+ 941D CB D6        	set 2,(hl)
 431+ 941F C9           	ret
 432+ 9420
 433+ 9420              ; --- Tipo_3
 434+ 9420
 435+ 9420 21 2F 8C     3 ld hl,Ctrl_4
 436+ 9423 CB D6        	set 2,(hl)
 437+ 9425 C9           	ret
 438+ 9426
 439+ 9426              ; ---------------------------------------------------------------------
 440+ 9426              ;
 441+ 9426              ;	22/01/24
 442+ 9426
 443+ 9426 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 444+ 9429 CB 46        	bit 0,(hl)
 445+ 942B 20 0E        	jr nz,1F
 446+ 942D
 447+ 942D CB 4E        	bit 1,(hl)
 448+ 942F 20 10        	jr nz,2F
 449+ 9431
 450+ 9431 CB 56        	bit 2,(hl)
 451+ 9433 20 12        	jr nz,3F
 452+ 9435
 453+ 9435 CB 5E        	bit 3,(hl)
 454+ 9437 20 14        	jr nz,4F
 455+ 9439 18 19        	jr 6F
 456+ 943B
 457+ 943B              ; Entidad_de_Tipo_1.
 458+ 943B
 459+ 943B CB 66        1 bit 4,(hl)
 460+ 943D 28 15        	jr z,6F
 461+ 943F 18 10        	jr 5F
 462+ 9441
 463+ 9441              ; Entidad_de_Tipo_2.
 464+ 9441
 465+ 9441 CB 6E        2 bit 5,(hl)
 466+ 9443 28 0F        	jr z,6F
 467+ 9445 18 0A        	jr 5F
 468+ 9447
 469+ 9447              ; Entidad_de_Tipo_3.
 470+ 9447
 471+ 9447 CB 76        3 bit 6,(hl)
 472+ 9449 28 09        	jr z,6F
 473+ 944B 18 04        	jr 5F
 474+ 944D
 475+ 944D              ; Entidad_de_Tipo_4.
 476+ 944D
 477+ 944D CB 7E        4 bit 7,(hl)
 478+ 944F 28 03        	jr z,6F
 479+ 9451
 480+ 9451              ; Esta entidad TIENE MOV_MASTICADOS.
 481+ 9451
 482+ 9451 AF           5 xor a
 483+ 9452 3C           	inc a
 484+ 9453 C9           	ret
 485+ 9454
 486+ 9454              ; Esta entidad NO TIENE MOV_MASTICADOS.
 487+ 9454
 488+ 9454 AF           6 xor a
 489+ 9455 C9           	ret
 490+ 9456
 491+ 9456              ;	------------------------------------------------------------------------------------
 492+ 9456              ;
 493+ 9456              ;	09/11/24
 494+ 9456              ;
 495+ 9456              ;	INPUTS:	A contiene el (Tipo) de entidad.
 496+ 9456              ;
 497+ 9456              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 498+ 9456              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 499+ 9456
 500+ 9456 A7           Calcula_salto_en_BC and a
 501+ 9457 28 04        	jr z,1F
 502+ 9459 CB 27        	sla a
 503+ 945B D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 504+ 945D 4F           1 ld c,a
 505+ 945E 06 00        	ld b,0
 506+ 9460 C9           	ret
 507+ 9461
 508+ 9461              ; ------------------------------------------------------------------
 509+ 9461              ;
 510+ 9461              ;	19/1/24
 511+ 9461              ;
 512+ 9461              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 513+ 9461              ;	Actualiza (Datos_de_entidad) con esa dirección.
 514+ 9461
 515+ 9461 A7           Situa_en_datos_de_definicion and a
 516+ 9462 ED 4A        	adc hl,bc
 517+ 9464 CD B1 90     	call Extrae_address
 518+ 9467 22 04 8C         ld (Datos_de_entidad),hl
 519+ 946A C9           	ret
 520+ 946B
 521+ 946B              ; ------------------------------------------------------------------
 522+ 946B
 523+ 946B              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 524+ 946B              ; 	inc de
 525+ 946B              ; 	inc de
 526+ 946B              ; 	ex de,hl
 527+ 946B              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 528+ 946B              ; 	ret
 529+ 946B
 530+ 946B              ; ----------------------------------------------------------------------------------------------------------
 531+ 946B              ;
 532+ 946B              ;	24/6/24
 533+ 946B              ;
 534+ 946B              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 535+ 946B              ;	_ de entidad.
 536+ 946B              ;
 537+ 946B              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 538+ 946B              ;
 539+ 946B              ;
 540+ 946B              ;	MODIFICA: HL,DE y BC
 541+ 946B
 542+ 946B
 543+ 946B              Definicion_de_entidad_a_bandeja_DRAW
 544+ 946B
 545+ 946B 11 B9 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 546+ 946E 7E           	ld a,(hl) 									; Volcamos Tipo.
 547+ 946F 12           	ld (de),a
 548+ 9470 23           	inc hl
 549+ 9471              ;
 550+ 9471 11 C7 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 551+ 9474 01 02 00     	ld bc,2
 552+ 9477 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 553+ 9479              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 554+ 9479 11 BC 8B     	ld de,Contador_de_vueltas
 555+ 947C 7E           	ld a,(hl)
 556+ 947D 12           	ld (de),a
 557+ 947E 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 558+ 947F
 559+ 947F 11 CE 8B     	ld de,Indice_Sprite_der
 560+ 9482 01 04 00     	ld bc,4
 561+ 9485 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 562+ 9487
 563+ 9487 11 D6 8B     	ld de,Posicion_inicio
 564+ 948A 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 565+ 948D ED B0        	ldir 									; Vuelco (Frames_explosion).
 566+ 948F
 567+ 948F 11 C0 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 568+ 9492 01 02 00     	ld bc,2
 569+ 9495 ED B0        	ldir
 570+ 9497
 571+ 9497 C9           	ret
 572+ 9498
 573+ 9498              ; ----------------------------------------------------------------------------------------------------------
 574+ 9498              ;
 575+ 9498              ;	1/8/24
 576+ 9498              ;
 577+ 9498
 578+ 9498              Parametros_de_bandeja_DRAW_a_caja
 579+ 9498
 580+ 9498 21 B9 8B     	ld hl,Bandeja_DRAW
 581+ 949B 01 0C 00     	ld bc,12
 582+ 949E ED B0        	ldir
 583+ 94A0 C9           	ret
 584+ 94A1
 585+ 94A1              ;---------------------------------------------------------------------------------------------------------------
 586+ 94A1              ;
 587+ 94A1              ;	5/1/24
 588+ 94A1              ;
 589+ 94A1              ;	INICIALIZA (Numero_parcial_de_entidades).
 590+ 94A1              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 591+ 94A1              ;
 592+ 94A1              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 593+ 94A1              ;
 594+ 94A1              ;	(Numero_parcial_de_entidades)="7".
 595+ 94A1              ;
 596+ 94A1              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 597+ 94A1              ;
 598+ 94A1              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 599+ 94A1              ;
 600+ 94A1              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 601+ 94A1              ;	MODIFICA: A y B.
 602+ 94A1              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 603+ 94A1
 604+ 94A1              Inicializa_Numero_parcial_de_entidades
 605+ 94A1
 606+ 94A1              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 607+ 94A1
 608+ 94A1 3A FF 8B     	ld a,(Numero_de_entidades)
 609+ 94A4 A7           	and a
 610+ 94A5
 611+ 94A5              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 612+ 94A5              ;	jr z,$
 613+ 94A5              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 614+ 94A5
 615+ 94A5 20 03        	jr nz,3F
 616+ 94A7
 617+ 94A7              ; ---------- ---------- ----------
 618+ 94A7
 619+ 94A7              ;! RESET para pruebas. Omitir esta línea en modo normal.
 620+ 94A7              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 621+ 94A7
 622+ 94A7 CD 91 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 623+ 94AA
 624+ 94AA              ; ---------- ---------- ----------
 625+ 94AA
 626+ 94AA 3A FF 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 627+ 94AD FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 628+ 94AF 38 08        	jr c,1F
 629+ 94B1
 630+ 94B1              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 631+ 94B1              ; Actualizamos variables.
 632+ 94B1
 633+ 94B1 3E 07        	ld a,7
 634+ 94B3 32 00 8C     	ld (Numero_parcial_de_entidades),a
 635+ 94B6 47           	ld b,a
 636+ 94B7 18 04        	jr 2F
 637+ 94B9
 638+ 94B9              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 639+ 94B9              ; (Numero_de_entidades)="0".
 640+ 94B9
 641+ 94B9 32 00 8C     1 ld (Numero_parcial_de_entidades),a
 642+ 94BC 47           	ld b,a
 643+ 94BD C9           2 ret
 644+ 94BE
# file closed: Rutinas_de_inicio_y_niveles.asm
2075  94BE              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94BE              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94BE              ;
   3+ 94BE              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94BE              ;
   5+ 94BE              ; *****************************************************************************************************************************************************************************************
   6+ 94BE              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94BE
   8+ 94BE 7C           calcula_tercio ld a,h
   9+ 94BF E6 18        	and $18
  10+ 94C1 CB 2F        	sra a
  11+ 94C3 CB 2F        	sra a
  12+ 94C5 CB 2F        	sra a
  13+ 94C7 C9           	ret
  14+ 94C8
# file closed: calcula_tercio.asm
2076  94C8              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94C8              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94C8              ;
   3+ 94C8              ;
   4+ 94C8              ;	CLS.
   5+ 94C8              ;
   6+ 94C8              ;	Limpia la pantalla y define sus atributos.
   7+ 94C8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94C8              ;
   9+ 94C8              ;	COLORES: 0 ..... NEGRO
  10+ 94C8              ;    		 1 ..... AZUL
  11+ 94C8              ; 			 2 ..... ROJO
  12+ 94C8              ;			 3 ..... MAGENTA
  13+ 94C8              ; 			 4 ..... VERDE
  14+ 94C8              ; 			 5 ..... CIAN
  15+ 94C8              ;			 6 ..... AMARILLO
  16+ 94C8              ; 			 7 ..... BLANCO
  17+ 94C8              ;
  18+ 94C8              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94C8              ;
  20+ 94C8              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94C8
  22+ 94C8
  23+ 94C8 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94CB 11 01 40     	LD DE,$4001
  25+ 94CE 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D1 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94D3 ED B0        	LDIR
  28+ 94D5 01 FF 02     	LD BC,767
  29+ 94D8 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94D9 ED B0        	LDIR
  31+ 94DB C9           	ret
  32+ 94DC
# file closed: Cls.asm
2077  94DC              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94DC              ; ------------------------------------------------------------------------
   2+ 94DC              ;
   3+ 94DC              ;	30/1/24
   4+ 94DC              ;
   5+ 94DC              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94DC              ;	Fila superior "0", Columna izquierda "0".
   7+ 94DC              ;
   8+ 94DC              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94DC              ;
  10+ 94DC              ;	Modifica: A,BC y DE.
  11+ 94DC
  12+ 94DC 7D           Genera_coordenadas ld a,l
  13+ 94DD E6 1F        	and $1f
  14+ 94DF 32 BA 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94E2
  16+ 94E2 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94E3 FE 40        	cp $40
  18+ 94E5 38 1C        	jr c,4F
  19+ 94E7
  20+ 94E7 CD BE 94     	call calcula_tercio
  21+ 94EA 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94EB
  23+ 94EB 1E 00        	ld e,0
  24+ 94ED 7D           	ld a,l
  25+ 94EE E6 E0        	and $e0
  26+ 94F0 28 01        	jr z,1F
  27+ 94F2 04           	inc b
  28+ 94F3
  29+ 94F3 04           1 inc b
  30+ 94F4 05           	dec b
  31+ 94F5 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94F7              ;														; _ , salimos.
  33+ 94F7 1C           3 inc e
  34+ 94F8 D6 20        	sub 32
  35+ 94FA 20 FB        	jr nz,3B
  36+ 94FC 10 F5        	djnz 1B
  37+ 94FE
  38+ 94FE 7B           2 ld a,e
  39+ 94FF 32 BB 8B     	ld (Coordenada_y),a
  40+ 9502 C9           	ret
  41+ 9503
  42+ 9503 AF           4 xor a
  43+ 9504 32 BB 8B     	ld (Coordenada_y),a
  44+ 9507 C9           	ret
  45+ 9508
# file closed: Genera_coordenadas.asm
2078  9508              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9508              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9508              ;
   3+ 9508              ;	20/09/24
   4+ 9508              ;
   5+ 9508              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9508              ;   DE contiene Puntero_objeto.
   7+ 9508              ;   IX contiene el Puntero de impresión.
   8+ 9508
   9+ 9508              Genera_datos_de_impresion
  10+ 9508
  11+ 9508 ED 73 06 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 950C
  13+ 950C 31 C0 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 950F DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9511
  16+ 9511 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 9514
  18+ 9514 3E 05            ld a,5
  19+ 9516 85               add l
  20+ 9517 6F               ld l,a
  21+ 9518
  22+ 9518 F9               ld sp,hl
  23+ 9519 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 951C
  25+ 951C 21 00 00         ld hl,0
  26+ 951F
  27+ 951F DD E5            push ix
  28+ 9521 3B               dec sp
  29+ 9522 ED 7A            adc hl,sp
  30+ 9524 D5               push de
  31+ 9525
  32+ 9525              ; Recuperamos SP.
  33+ 9525
  34+ 9525 ED 7B 06 8C      ld sp,(Stack)
  35+ 9529
  36+ 9529 E5               push hl
  37+ 952A F1               pop af
  38+ 952B 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 952C
  40+ 952C              ; Tenemos el encabezado listo.
  41+ 952C              ; Preparamos registros para generar los scanlines.
  42+ 952C
  43+ 952C DD E5            push ix
  44+ 952E E1               pop hl                                          ; 1er scanline en HL.
  45+ 952F
  46+ 952F ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 9533
  48+ 9533              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9533              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9533
  51+ 9533 7C               ld a,h
  52+ 9534 FE 50            cp $50
  53+ 9536 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9538
  55+ 9538 20 05            jr nz,2F
  56+ 953A
  57+ 953A 7D               ld a,l
  58+ 953B FE E0            cp $e0
  59+ 953D 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 953F
  61+ 953F 7D           2 ld a,l
  62+ 9540 FE C0            cp $c0
  63+ 9542 D2 D8 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9545
  65+ 9545              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9545
  67+ 9545 CD D6 99         call NextScan
  68+ 9548 EB               ex de,hl
  69+ 9549
  70+ 9549 73               ld (hl),e
  71+ 954A 23               inc hl
  72+ 954B 72               ld (hl),d
  73+ 954C 23               inc hl
  74+ 954D
  75+ 954D EB               ex de,hl
  76+ 954E
  77+ 954E CD D6 99         call NextScan
  78+ 9551 EB               ex de,hl
  79+ 9552
  80+ 9552 73               ld (hl),e
  81+ 9553 23               inc hl
  82+ 9554 72               ld (hl),d
  83+ 9555 23               inc hl
  84+ 9556
  85+ 9556 EB               ex de,hl
  86+ 9557
  87+ 9557 CD D6 99         call NextScan
  88+ 955A EB               ex de,hl
  89+ 955B
  90+ 955B 73               ld (hl),e
  91+ 955C 23               inc hl
  92+ 955D 72               ld (hl),d
  93+ 955E 23               inc hl
  94+ 955F
  95+ 955F EB               ex de,hl
  96+ 9560
  97+ 9560 CD D6 99         call NextScan
  98+ 9563 EB               ex de,hl
  99+ 9564
 100+ 9564 73               ld (hl),e
 101+ 9565 23               inc hl
 102+ 9566 72               ld (hl),d
 103+ 9567 23               inc hl
 104+ 9568
 105+ 9568 EB               ex de,hl
 106+ 9569
 107+ 9569 CD D6 99         call NextScan
 108+ 956C EB               ex de,hl
 109+ 956D
 110+ 956D 73               ld (hl),e
 111+ 956E 23               inc hl
 112+ 956F 72               ld (hl),d
 113+ 9570 23               inc hl
 114+ 9571
 115+ 9571 EB               ex de,hl
 116+ 9572
 117+ 9572 CD D6 99         call NextScan
 118+ 9575 EB               ex de,hl
 119+ 9576
 120+ 9576 73               ld (hl),e
 121+ 9577 23               inc hl
 122+ 9578 72               ld (hl),d
 123+ 9579 23               inc hl
 124+ 957A
 125+ 957A EB               ex de,hl
 126+ 957B
 127+ 957B CD D6 99         call NextScan
 128+ 957E EB               ex de,hl
 129+ 957F
 130+ 957F 73               ld (hl),e
 131+ 9580 23               inc hl
 132+ 9581 72               ld (hl),d
 133+ 9582 23               inc hl
 134+ 9583
 135+ 9583 EB               ex de,hl
 136+ 9584
 137+ 9584 CD D6 99         call NextScan
 138+ 9587 EB               ex de,hl
 139+ 9588
 140+ 9588 73               ld (hl),e
 141+ 9589 23               inc hl
 142+ 958A 72               ld (hl),d
 143+ 958B 23               inc hl
 144+ 958C
 145+ 958C EB               ex de,hl
 146+ 958D
 147+ 958D CD D6 99         call NextScan
 148+ 9590 EB               ex de,hl
 149+ 9591
 150+ 9591 73               ld (hl),e
 151+ 9592 23               inc hl
 152+ 9593 72               ld (hl),d
 153+ 9594 23               inc hl
 154+ 9595
 155+ 9595 EB               ex de,hl
 156+ 9596
 157+ 9596 CD D6 99         call NextScan
 158+ 9599 EB               ex de,hl
 159+ 959A
 160+ 959A 73               ld (hl),e
 161+ 959B 23               inc hl
 162+ 959C 72               ld (hl),d
 163+ 959D 23               inc hl
 164+ 959E
 165+ 959E EB               ex de,hl
 166+ 959F
 167+ 959F CD D6 99         call NextScan
 168+ 95A2 EB               ex de,hl
 169+ 95A3
 170+ 95A3 73               ld (hl),e
 171+ 95A4 23               inc hl
 172+ 95A5 72               ld (hl),d
 173+ 95A6 23               inc hl
 174+ 95A7
 175+ 95A7 EB               ex de,hl
 176+ 95A8
 177+ 95A8 CD D6 99         call NextScan
 178+ 95AB EB               ex de,hl
 179+ 95AC
 180+ 95AC 73               ld (hl),e
 181+ 95AD 23               inc hl
 182+ 95AE 72               ld (hl),d
 183+ 95AF 23               inc hl
 184+ 95B0
 185+ 95B0 EB               ex de,hl
 186+ 95B1
 187+ 95B1 CD D6 99         call NextScan
 188+ 95B4 EB               ex de,hl
 189+ 95B5
 190+ 95B5 73               ld (hl),e
 191+ 95B6 23               inc hl
 192+ 95B7 72               ld (hl),d
 193+ 95B8 23               inc hl
 194+ 95B9
 195+ 95B9 EB               ex de,hl
 196+ 95BA
 197+ 95BA CD D6 99         call NextScan
 198+ 95BD EB               ex de,hl
 199+ 95BE
 200+ 95BE 73               ld (hl),e
 201+ 95BF 23               inc hl
 202+ 95C0 72               ld (hl),d
 203+ 95C1 23               inc hl
 204+ 95C2
 205+ 95C2 EB               ex de,hl
 206+ 95C3
 207+ 95C3 CD D6 99         call NextScan
 208+ 95C6 EB               ex de,hl
 209+ 95C7
 210+ 95C7              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95C7              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95C7              ;   _ generar sus scanlines.
 213+ 95C7
 214+ 95C7              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95C7
 216+ 95C7 73               ld (hl),e
 217+ 95C8 23               inc hl
 218+ 95C9 72               ld (hl),d
 219+ 95CA 23               inc hl
 220+ 95CB
 221+ 95CB              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95CB
 223+ 95CB 22 28 8C         ld (Scanlines_album_SP),hl
 224+ 95CE
 225+ 95CE EB               ex de,hl
 226+ 95CF
 227+ 95CF              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95CF
 229+ 95CF              ;    call NextScan
 230+ 95CF              ;    call NextScan
 231+ 95CF
 232+ 95CF 22 33 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D2
 234+ 95D2              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D2
 236+ 95D2 08               ex af,af
 237+ 95D3
 238+ 95D3 F5               push af
 239+ 95D4 E1               pop hl
 240+ 95D5
 241+ 95D5 36 10            ld (hl),16
 242+ 95D7
 243+ 95D7 C9               ret
 244+ 95D8
 245+ 95D8              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95D8
 247+ 95D8              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95D8
 249+ 95D8 3E 57            ld a,$57
 250+ 95DA 94               sub h
 251+ 95DB 47               ld b,a
 252+ 95DC
 253+ 95DC 3E DF            ld a,$df
 254+ 95DE BD               cp l
 255+ 95DF 38 04            jr c,1F
 256+ 95E1
 257+ 95E1 3E 08            ld a,8
 258+ 95E3 80               add b
 259+ 95E4 47               ld b,a
 260+ 95E5
 261+ 95E5              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95E5              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95E5
 264+ 95E5 48           1 ld c,b
 265+ 95E6 0C               inc c
 266+ 95E7
 267+ 95E7 04               inc b
 268+ 95E8 05               dec b
 269+ 95E9 20 02            jr nz,3F
 270+ 95EB
 271+ 95EB 18 0B            jr 6F
 272+ 95ED
 273+ 95ED CD D6 99     3 call NextScan
 274+ 95F0 EB               ex de,hl
 275+ 95F1
 276+ 95F1 73               ld (hl),e
 277+ 95F2 23               inc hl
 278+ 95F3 72               ld (hl),d
 279+ 95F4 23               inc hl
 280+ 95F5
 281+ 95F5 EB               ex de,hl
 282+ 95F6 10 F5            djnz 3B
 283+ 95F8
 284+ 95F8 ED 53 28 8C  6 ld (Scanlines_album_SP),de
 285+ 95FC
 286+ 95FC 08           5 ex af,af
 287+ 95FD F5               push af
 288+ 95FE E1               pop hl
 289+ 95FF
 290+ 95FF 71               ld (hl),c
 291+ 9600
 292+ 9600 C9               ret
 293+ 9601
# file closed: Genera_datos_de_impresion.asm
2079  9601              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9601              ; -----------------------------------------------------------------------------
   2+ 9601              ;
   3+ 9601              ;   11/03/24
   4+ 9601              ;
   5+ 9601
   6+ 9601              Pinta_Sprites
   7+ 9601
   8+ 9601              ;    ld hl,(Scanlines_album_SP)
   9+ 9601              ;    call Extrae_address
  10+ 9601
  11+ 9601              ;    inc h
  12+ 9601              ;    dec h
  13+ 9601              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9601
  15+ 9601 ED 73 06 8C      ld (Stack),sp
  16+ 9605
  17+ 9605 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9606              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9606 2C               inc l
  20+ 9607 2C               inc l
  21+ 9608
  22+ 9608 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9609
  24+ 9609 2C               inc l
  25+ 960A F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 960B
  27+ 960B              ;   Seleccionamos rutina de impresión:
  28+ 960B
  29+ 960B 3E 10            ld a,16
  30+ 960D B8               cp b
  31+ 960E C2 0A 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9611
  33+ 9611              ;   Rutinas:
  34+ 9611
  35+ 9611              Pinta_rapido    ;   1520 t/states.
  36+ 9611
  37+ 9611 E1               pop hl
  38+ 9612
  39+ 9612 1A               ld a,(de)
  40+ 9613 AE               xor (hl)
  41+ 9614 77               ld (hl),a
  42+ 9615 2C               inc l
  43+ 9616 1C               inc e
  44+ 9617 1A               ld a,(de)
  45+ 9618 AE               xor (hl)
  46+ 9619 77               ld (hl),a
  47+ 961A 2C               inc l
  48+ 961B 1C               inc e
  49+ 961C 1A               ld a,(de)
  50+ 961D AE               xor (hl)
  51+ 961E 77               ld (hl),a
  52+ 961F 13               inc de
  53+ 9620
  54+ 9620 E1               pop hl
  55+ 9621
  56+ 9621 1A               ld a,(de)
  57+ 9622 AE               xor (hl)
  58+ 9623 77               ld (hl),a
  59+ 9624 2C               inc l
  60+ 9625 1C               inc e
  61+ 9626 1A               ld a,(de)
  62+ 9627 AE               xor (hl)
  63+ 9628 77               ld (hl),a
  64+ 9629 2C               inc l
  65+ 962A 1C               inc e
  66+ 962B 1A               ld a,(de)
  67+ 962C AE               xor (hl)
  68+ 962D 77               ld (hl),a
  69+ 962E 13               inc de
  70+ 962F
  71+ 962F E1               pop hl
  72+ 9630
  73+ 9630 1A               ld a,(de)
  74+ 9631 AE               xor (hl)
  75+ 9632 77               ld (hl),a
  76+ 9633 2C               inc l
  77+ 9634 1C               inc e
  78+ 9635 1A               ld a,(de)
  79+ 9636 AE               xor (hl)
  80+ 9637 77               ld (hl),a
  81+ 9638 2C               inc l
  82+ 9639 1C               inc e
  83+ 963A 1A               ld a,(de)
  84+ 963B AE               xor (hl)
  85+ 963C 77               ld (hl),a
  86+ 963D 13               inc de
  87+ 963E
  88+ 963E E1               pop hl
  89+ 963F
  90+ 963F 1A               ld a,(de)
  91+ 9640 AE               xor (hl)
  92+ 9641 77               ld (hl),a
  93+ 9642 2C               inc l
  94+ 9643 1C               inc e
  95+ 9644 1A               ld a,(de)
  96+ 9645 AE               xor (hl)
  97+ 9646 77               ld (hl),a
  98+ 9647 2C               inc l
  99+ 9648 1C               inc e
 100+ 9649 1A               ld a,(de)
 101+ 964A AE               xor (hl)
 102+ 964B 77               ld (hl),a
 103+ 964C 13               inc de
 104+ 964D
 105+ 964D E1               pop hl
 106+ 964E
 107+ 964E 1A               ld a,(de)
 108+ 964F AE               xor (hl)
 109+ 9650 77               ld (hl),a
 110+ 9651 2C               inc l
 111+ 9652 1C               inc e
 112+ 9653 1A               ld a,(de)
 113+ 9654 AE               xor (hl)
 114+ 9655 77               ld (hl),a
 115+ 9656 2C               inc l
 116+ 9657 1C               inc e
 117+ 9658 1A               ld a,(de)
 118+ 9659 AE               xor (hl)
 119+ 965A 77               ld (hl),a
 120+ 965B 13               inc de
 121+ 965C
 122+ 965C E1               pop hl
 123+ 965D
 124+ 965D 1A               ld a,(de)
 125+ 965E AE               xor (hl)
 126+ 965F 77               ld (hl),a
 127+ 9660 2C               inc l
 128+ 9661 1C               inc e
 129+ 9662 1A               ld a,(de)
 130+ 9663 AE               xor (hl)
 131+ 9664 77               ld (hl),a
 132+ 9665 2C               inc l
 133+ 9666 1C               inc e
 134+ 9667 1A               ld a,(de)
 135+ 9668 AE               xor (hl)
 136+ 9669 77               ld (hl),a
 137+ 966A 13               inc de
 138+ 966B
 139+ 966B E1               pop hl
 140+ 966C
 141+ 966C 1A               ld a,(de)
 142+ 966D AE               xor (hl)
 143+ 966E 77               ld (hl),a
 144+ 966F 2C               inc l
 145+ 9670 1C               inc e
 146+ 9671 1A               ld a,(de)
 147+ 9672 AE               xor (hl)
 148+ 9673 77               ld (hl),a
 149+ 9674 2C               inc l
 150+ 9675 1C               inc e
 151+ 9676 1A               ld a,(de)
 152+ 9677 AE               xor (hl)
 153+ 9678 77               ld (hl),a
 154+ 9679 13               inc de
 155+ 967A
 156+ 967A E1               pop hl
 157+ 967B
 158+ 967B 1A               ld a,(de)
 159+ 967C AE               xor (hl)
 160+ 967D 77               ld (hl),a
 161+ 967E 2C               inc l
 162+ 967F 1C               inc e
 163+ 9680 1A               ld a,(de)
 164+ 9681 AE               xor (hl)
 165+ 9682 77               ld (hl),a
 166+ 9683 2C               inc l
 167+ 9684 1C               inc e
 168+ 9685 1A               ld a,(de)
 169+ 9686 AE               xor (hl)
 170+ 9687 77               ld (hl),a
 171+ 9688 13               inc de
 172+ 9689
 173+ 9689 E1               pop hl
 174+ 968A
 175+ 968A 1A               ld a,(de)
 176+ 968B AE               xor (hl)
 177+ 968C 77               ld (hl),a
 178+ 968D 2C               inc l
 179+ 968E 1C               inc e
 180+ 968F 1A               ld a,(de)
 181+ 9690 AE               xor (hl)
 182+ 9691 77               ld (hl),a
 183+ 9692 2C               inc l
 184+ 9693 1C               inc e
 185+ 9694 1A               ld a,(de)
 186+ 9695 AE               xor (hl)
 187+ 9696 77               ld (hl),a
 188+ 9697 13               inc de
 189+ 9698
 190+ 9698 E1               pop hl
 191+ 9699
 192+ 9699 1A               ld a,(de)
 193+ 969A AE               xor (hl)
 194+ 969B 77               ld (hl),a
 195+ 969C 2C               inc l
 196+ 969D 1C               inc e
 197+ 969E 1A               ld a,(de)
 198+ 969F AE               xor (hl)
 199+ 96A0 77               ld (hl),a
 200+ 96A1 2C               inc l
 201+ 96A2 1C               inc e
 202+ 96A3 1A               ld a,(de)
 203+ 96A4 AE               xor (hl)
 204+ 96A5 77               ld (hl),a
 205+ 96A6 13               inc de
 206+ 96A7
 207+ 96A7 E1               pop hl
 208+ 96A8
 209+ 96A8 1A               ld a,(de)
 210+ 96A9 AE               xor (hl)
 211+ 96AA 77               ld (hl),a
 212+ 96AB 2C               inc l
 213+ 96AC 1C               inc e
 214+ 96AD 1A               ld a,(de)
 215+ 96AE AE               xor (hl)
 216+ 96AF 77               ld (hl),a
 217+ 96B0 2C               inc l
 218+ 96B1 1C               inc e
 219+ 96B2 1A               ld a,(de)
 220+ 96B3 AE               xor (hl)
 221+ 96B4 77               ld (hl),a
 222+ 96B5 13               inc de
 223+ 96B6
 224+ 96B6 E1               pop hl
 225+ 96B7
 226+ 96B7 1A               ld a,(de)
 227+ 96B8 AE               xor (hl)
 228+ 96B9 77               ld (hl),a
 229+ 96BA 2C               inc l
 230+ 96BB 1C               inc e
 231+ 96BC 1A               ld a,(de)
 232+ 96BD AE               xor (hl)
 233+ 96BE 77               ld (hl),a
 234+ 96BF 2C               inc l
 235+ 96C0 1C               inc e
 236+ 96C1 1A               ld a,(de)
 237+ 96C2 AE               xor (hl)
 238+ 96C3 77               ld (hl),a
 239+ 96C4 13               inc de
 240+ 96C5
 241+ 96C5 E1               pop hl
 242+ 96C6
 243+ 96C6 1A               ld a,(de)
 244+ 96C7 AE               xor (hl)
 245+ 96C8 77               ld (hl),a
 246+ 96C9 2C               inc l
 247+ 96CA 1C               inc e
 248+ 96CB 1A               ld a,(de)
 249+ 96CC AE               xor (hl)
 250+ 96CD 77               ld (hl),a
 251+ 96CE 2C               inc l
 252+ 96CF 1C               inc e
 253+ 96D0 1A               ld a,(de)
 254+ 96D1 AE               xor (hl)
 255+ 96D2 77               ld (hl),a
 256+ 96D3 13               inc de
 257+ 96D4
 258+ 96D4 E1               pop hl
 259+ 96D5
 260+ 96D5 1A               ld a,(de)
 261+ 96D6 AE               xor (hl)
 262+ 96D7 77               ld (hl),a
 263+ 96D8 2C               inc l
 264+ 96D9 1C               inc e
 265+ 96DA 1A               ld a,(de)
 266+ 96DB AE               xor (hl)
 267+ 96DC 77               ld (hl),a
 268+ 96DD 2C               inc l
 269+ 96DE 1C               inc e
 270+ 96DF 1A               ld a,(de)
 271+ 96E0 AE               xor (hl)
 272+ 96E1 77               ld (hl),a
 273+ 96E2 13               inc de
 274+ 96E3
 275+ 96E3 E1               pop hl
 276+ 96E4
 277+ 96E4 1A               ld a,(de)
 278+ 96E5 AE               xor (hl)
 279+ 96E6 77               ld (hl),a
 280+ 96E7 2C               inc l
 281+ 96E8 1C               inc e
 282+ 96E9 1A               ld a,(de)
 283+ 96EA AE               xor (hl)
 284+ 96EB 77               ld (hl),a
 285+ 96EC 2C               inc l
 286+ 96ED 1C               inc e
 287+ 96EE 1A               ld a,(de)
 288+ 96EF AE               xor (hl)
 289+ 96F0 77               ld (hl),a
 290+ 96F1 13               inc de
 291+ 96F2
 292+ 96F2 E1               pop hl
 293+ 96F3
 294+ 96F3 1A               ld a,(de)
 295+ 96F4 AE               xor (hl)
 296+ 96F5 77               ld (hl),a
 297+ 96F6 2C               inc l
 298+ 96F7 1C               inc e
 299+ 96F8 1A               ld a,(de)
 300+ 96F9 AE               xor (hl)
 301+ 96FA 77               ld (hl),a
 302+ 96FB 2C               inc l
 303+ 96FC 1C               inc e
 304+ 96FD 1A               ld a,(de)
 305+ 96FE AE               xor (hl)
 306+ 96FF 77               ld (hl),a
 307+ 9700 13               inc de
 308+ 9701
 309+ 9701 ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 9705 ED 7B 06 8C      ld sp,(Stack)
 311+ 9709 C9               ret
 312+ 970A
 313+ 970A              Pinta_lento
 314+ 970A
 315+ 970A E1           1 pop hl
 316+ 970B
 317+ 970B 1A               ld a,(de)
 318+ 970C AE               xor (hl)
 319+ 970D 77               ld (hl),a
 320+ 970E 2C               inc l
 321+ 970F 1C               inc e
 322+ 9710 1A               ld a,(de)
 323+ 9711 AE               xor (hl)
 324+ 9712 77               ld (hl),a
 325+ 9713 2C               inc l
 326+ 9714 1C               inc e
 327+ 9715 1A               ld a,(de)
 328+ 9716 AE               xor (hl)
 329+ 9717 77               ld (hl),a
 330+ 9718 13               inc de
 331+ 9719
 332+ 9719 10 EF            djnz 1B
 333+ 971B
 334+ 971B ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 971F ED 7B 06 8C      ld sp,(Stack)
 336+ 9723 C9               ret
# file closed: Pinta_Sprites.asm
2080  9724              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9724              ; ******************************************************************************************************************************************************************************************
   2+ 9724              ;
   3+ 9724              ; 26/06/23
   4+ 9724              ;
   5+ 9724              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9724
   7+ 9724              Draw
   8+ 9724
   9+ 9724 CD CA 99     	call Prepara_draw
  10+ 9727 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9728 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9729 28 05        	jr z,2F
  13+ 972B
  14+ 972B 3A D8 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 972E 18 0C        	jr 1F
  16+ 9730
  17+ 9730 2A D6 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9733 22 C9 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9736 CD C2 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9739              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9739
  22+ 9739 CD 69 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 973C
  24+ 973C 3A C6 8B     1 ld a,(Ctrl_0)
  25+ 973F CB 6F        	bit 5,a
  26+ 9741 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9743
  28+ 9743 CD 58 97     	call Comprueba_limite_horizontal
  29+ 9746 CD E8 97     	call Comprueba_limite_vertical
  30+ 9749
  31+ 9749              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9749              ; -----------------------
  33+ 9749              ; -----------------------
  34+ 9749              ; -----------------------
  35+ 9749
  36+ 9749 CD 3E 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 974C CD 75 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 974F
  39+ 974F 3A C6 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9752 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9754 32 C6 8B     	ld (Ctrl_0),a
  42+ 9757
  43+ 9757 C9           	ret
  44+ 9758
  45+ 9758              ; *******************************************************************************************************************************************************************************************
  46+ 9758              ;	21/01/23
  47+ 9758              ;
  48+ 9758              ; 	Comprueba_limite_horizontal.
  49+ 9758              ;
  50+ 9758              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9758              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9758              ;
  53+ 9758              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9758              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9758              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9758              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9758
  58+ 9758
  59+ 9758
  60+ 9758 3A C6 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 975B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 975D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 975F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9761 32 C6 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9764 18 09            jr 6F
  66+ 9766 CB 5F        1 bit 3,a
  67+ 9768 28 0A            jr z,2F
  68+ 976A E6 F7            and $f7
  69+ 976C 32 C6 8B         ld (Ctrl_0),a
  70+ 976F CD C2 98     6 call Inicializacion
  71+ 9772 18 5B            jr 5F
  72+ 9774 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9775
  74+ 9775              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9775              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9775
  77+ 9775 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9776 2A DA 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9779 CD BE 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 977C 67           	ld h,a
  81+ 977D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 977E CD BE 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9781 67           	ld h,a
  84+ 9782 A7           	and a
  85+ 9783 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9785 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9786 3A D8 8B     	ld a,(Cuad_objeto)
  88+ 9789 FE 02        	cp 2
  89+ 978B 38 1E        	jr c,3F
  90+ 978D 28 1C        	jr z,3F
  91+ 978F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9790 28 23            jr z,7F
  93+ 9792 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9794 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9796 E1           	pop hl
  96+ 9797
  97+ 9797              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9797              ; _para indicar con E="2" en caso necesario.
  99+ 9797
 100+ 9797 E5               push hl
 101+ 9798 C5               push bc
 102+ 9799 CD BE 94     	call calcula_tercio
 103+ 979C FE 01        	cp 1
 104+ 979E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A0 CD D0 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A3 28 26            jr z,9F
 107+ 97A5 38 24            jr c,9F
 108+ 97A7 1E 00        11 ld e,0
 109+ 97A9 18 22            jr 8F
 110+ 97AB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97AC 28 07        	jr z, 7F
 112+ 97AE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B0 1E 00         	ld e,0
 114+ 97B2 E1           	pop hl
 115+ 97B3 18 04        	jr 4F
 116+ 97B5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97B7 18 15            jr 10F
 118+ 97B9
 119+ 97B9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97B9              ; _para indicar con E="2" en caso necesario.
 121+ 97B9
 122+ 97B9 E5           4 push hl
 123+ 97BA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97BB CD BE 94     	call calcula_tercio
 125+ 97BE FE 01        	cp 1
 126+ 97C0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C2 CD D0 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C5 28 04            jr z,9F
 129+ 97C7 30 02            jr nc,9F
 130+ 97C9 18 02        	jr 8F
 131+ 97CB 1E 02        9 ld e,2
 132+ 97CD C1           8 pop bc
 133+ 97CE E1           10 pop hl
 134+ 97CF C9           5 ret
 135+ 97D0
 136+ 97D0              ; --------------------
 137+ 97D0              ;
 138+ 97D0              ; 25/08/22
 139+ 97D0
 140+ 97D0 CD BE 94     Comprueba_centro call calcula_tercio
 141+ 97D3 67               ld h,a
 142+ 97D4 08           	ex af,af
 143+ 97D5 FE 02        	cp 2
 144+ 97D7 38 07        	jr c,1F
 145+ 97D9 28 05        	jr z,1F
 146+ 97DB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97DE 18 03        	jr 2F
 148+ 97E0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E3 08           2 ex af,af
 150+ 97E4 A7               and a
 151+ 97E5 ED 42            sbc hl,bc
 152+ 97E7 C9               ret
 153+ 97E8
 154+ 97E8              ; *********************************************************************************************************************************************************************************************
 155+ 97E8              ;
 156+ 97E8              ;   16/8/22
 157+ 97E8              ;
 158+ 97E8              ;	Comprueba_limite_vertical
 159+ 97E8              ;
 160+ 97E8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E8              ;
 163+ 97E8
 164+ 97E8 2A C9 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97EB 7D           	ld a,l
 166+ 97EC E6 1F        	and $1F
 167+ 97EE 57           	ld d,a
 168+ 97EF 3A DC 8B     	ld a,(Limite_vertical)
 169+ 97F2 BA           	cp d 											; Límite - Posición.
 170+ 97F3 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F4 3A D8 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97F7 CB 47        	bit 0,a
 173+ 97F9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97FB
 175+ 97FB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97FB
 177+ 97FB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97FC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97FE
 180+ 97FE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97FE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97FE
 183+ 97FE 3A BA 8B         ld a,(Coordenada_X)
 184+ 9801 16 0F            ld d,Centro_izquierda
 185+ 9803 A7               and a
 186+ 9804 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9805 28 1E            jr z,3F
 188+ 9807 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9809              ;                                                    ; _salimos sin modificar nada.
 190+ 9809 18 0E            jr 2F
 191+ 980B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 980C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 980E
 194+ 980E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 980E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 980E
 197+ 980E 3A BA 8B         ld a,(Coordenada_X)
 198+ 9811 16 10            ld d,Centro_derecha
 199+ 9813 A7               and a
 200+ 9814 92               sub d
 201+ 9815 28 0E            jr z,3F
 202+ 9817 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9819              ;                                                    ; _salimos sin modificar nada.
 204+ 9819 CB 43        2 bit 0,e
 205+ 981B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 981D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 981E CD B2 98         call Modificaccionne
 208+ 9821 C1           	pop bc
 209+ 9822 CD C2 98         call Inicializacion
 210+ 9825 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9826
 212+ 9826              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9826
 214+ 9826 C5           4 push bc
 215+ 9827 01 C8 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 982A 0A           	ld a,(bc)
 217+ 982B 3D           	dec a
 218+ 982C 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 982D 7D           	ld a,l
 220+ 982E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 982F CB 47        	bit 0,a
 222+ 9831 28 03        	jr z,5F
 223+ 9833 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9834 18 2E        	jr 7F
 225+ 9836
 226+ 9836              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9836
 228+ 9836 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9837 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9838 3A C6 8B     	ld a,(Ctrl_0)
 231+ 983B CB 4F        	bit 1,a
 232+ 983D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 983F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9840
 235+ 9840              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9840
 237+ 9840 1C               inc e
 238+ 9841 1D               dec e
 239+ 9842 20 07            jr nz,12F
 240+ 9844 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9845 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9846 22 C9 8B     	ld (Posicion_actual),hl
 243+ 9849 18 44        13 jr 9F
 244+ 984B CB 43        12 bit 0,e
 245+ 984D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 984F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 984F C1           	pop bc
 248+ 9850 18 D3        	jr 3B
 249+ 9852 80           14 add b
 250+ 9853 6F               ld l,a
 251+ 9854 22 C9 8B     	ld (Posicion_actual),hl
 252+ 9857 CD B2 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 985A 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 985C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 985E 32 C6 8B         ld (Ctrl_0),a
 256+ 9861 F1           	pop af
 257+ 9862 18 2B        	jr 9F
 258+ 9864
 259+ 9864              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9864
 261+ 9864 F5           7 push af
 262+ 9865 3A C6 8B     	ld a,(Ctrl_0)
 263+ 9868 CB 47        	bit 0,a
 264+ 986A 20 1D        	jr nz,8F
 265+ 986C F1           	pop af
 266+ 986D
 267+ 986D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 986D
 269+ 986D 1C           	inc e
 270+ 986E 1D               dec e
 271+ 986F 20 07            jr nz,10F
 272+ 9871 90           	sub b
 273+ 9872 6F               ld l,a
 274+ 9873 22 C9 8B     	ld (Posicion_actual),hl
 275+ 9876 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9878              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9878 CB 43        10 bit 0,e
 278+ 987A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 987C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 987C C1           	pop bc
 281+ 987D 18 A6        	jr 3B
 282+ 987F 90           16 sub b
 283+ 9880 6F               ld l,a
 284+ 9881 22 C9 8B     	ld (Posicion_actual),hl
 285+ 9884 CD B2 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9887 18 06            jr 9F
 287+ 9889 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 988B 32 C6 8B         ld (Ctrl_0),a
 289+ 988E F1           	pop af
 290+ 988F C1           9 pop bc
 291+ 9890 1E 00        	ld e,0
 292+ 9892 CD C2 98         call Inicializacion
 293+ 9895 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9896 08           	ex af,af
 295+ 9897 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9898 18 8B            jr 3B
 297+ 989A
 298+ 989A              ; --------------------
 299+ 989A
 300+ 989A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 989C CD E5 99     1 call PreviousScan
 302+ 989F 10 FB            djnz 1B
 303+ 98A1 22 C9 8B     	ld (Posicion_actual),hl
 304+ 98A4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A5 C9           	ret
 306+ 98A6
 307+ 98A6              ; --------------------
 308+ 98A6
 309+ 98A6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A8 CD D6 99     1 call NextScan
 311+ 98AB 10 FB            djnz 1B
 312+ 98AD 22 C9 8B     	ld (Posicion_actual),hl
 313+ 98B0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B1 C9           	ret
 315+ 98B2
 316+ 98B2              ; --------------------
 317+ 98B2              ;
 318+ 98B2              ;	22/01/23
 319+ 98B2              ;
 320+ 98B2              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B2
 324+ 98B2
 325+ 98B2              Modificaccionne
 326+ 98B2
 327+ 98B2 3A D8 8B     	ld a,(Cuad_objeto)
 328+ 98B5 FE 02        	cp 2
 329+ 98B7 CC 9A 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98BA DC 9A 98         call c,Modifica_Pos_actual
 331+ 98BD C8           	ret z
 332+ 98BE CD A6 98         call Modifica_Pos_actual2
 333+ 98C1 C9               ret
 334+ 98C2
 335+ 98C2              ; *************************************************************************************************************************************************************************************************
 336+ 98C2              ;
 337+ 98C2              ;	13/8/22
 338+ 98C2              ;
 339+ 98C2              ;	Inicializacion
 340+ 98C2              ;
 341+ 98C2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C2              ;
 345+ 98C2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C2              ;	_ desaparece/aparece.
 348+ 98C2
 349+ 98C2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C2              ;
 352+ 98C2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C2              ; 		   [E] ="0"
 355+ 98C2
 356+ 98C2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C2
 358+ 98C2 CD BE 94     Inicializacion call calcula_tercio
 359+ 98C5 28 36        	jr z,primit
 360+ 98C7 E6 02        	and 2
 361+ 98C9 20 07        	jr nz,segmit
 362+ 98CB 7D           	ld a,l
 363+ 98CC FE 7F        	cp $7f
 364+ 98CE 38 2D        	jr c,primit
 365+ 98D0 28 2B        	jr z,primit
 366+ 98D2 CD 38 99     segmit call column
 367+ 98D5 38 13        	jr c,tercuad
 368+ 98D7 3E 04        cuarcuad ld a,4
 369+ 98D9 32 D8 8B     	ld (Cuad_objeto),a
 370+ 98DC 21 20 48     	ld hl,$4820
 371+ 98DF 22 DA 8B     	ld (Limite_horizontal),hl
 372+ 98E2 21 DC 8B     	ld hl,Limite_vertical
 373+ 98E5 36 0D        	ld (hl),$0d
 374+ 98E7 08           	ex af,af
 375+ 98E8 18 3C        	jr 1F
 376+ 98EA              tercuad
 377+ 98EA 3E 03        	ld a,3
 378+ 98EC 32 D8 8B     	ld (Cuad_objeto),a
 379+ 98EF 21 20 48     	ld hl,$4820
 380+ 98F2 22 DA 8B     	ld (Limite_horizontal),hl
 381+ 98F5 21 DC 8B     	ld hl,Limite_vertical
 382+ 98F8 36 12        	ld (hl),$12
 383+ 98FA 08           	ex af,af
 384+ 98FB 18 29        	jr 1F
 385+ 98FD CD 38 99     primit call column
 386+ 9900 38 13        	jr c, primcuad
 387+ 9902              segcuad
 388+ 9902 3E 02        	ld a,2
 389+ 9904 32 D8 8B     	ld (Cuad_objeto),a
 390+ 9907 21 C0 4F     	ld hl,$4fc0
 391+ 990A 22 DA 8B     	ld (Limite_horizontal),hl
 392+ 990D 21 DC 8B     	ld hl,Limite_vertical
 393+ 9910 36 0D        	ld (hl),$0d
 394+ 9912 08           	ex af,af
 395+ 9913 18 11        	jr 1F
 396+ 9915              primcuad
 397+ 9915 3E 01        	ld a,1
 398+ 9917 32 D8 8B     	ld (Cuad_objeto),a
 399+ 991A 21 C0 4F     	ld hl,$4fc0
 400+ 991D 22 DA 8B     	ld (Limite_horizontal),hl
 401+ 9920 21 DC 8B     	ld hl,Limite_vertical
 402+ 9923 36 12        	ld (hl),$12
 403+ 9925 08           	ex af,af
 404+ 9926
 405+ 9926 C5           1 push bc
 406+ 9927 E5           	push hl
 407+ 9928 D5           	push de
 408+ 9929
 409+ 9929 2A C9 8B     	ld hl,(Posicion_actual)
 410+ 992C CD DC 94     	call Genera_coordenadas
 411+ 992F
 412+ 992F D1           	pop de
 413+ 9930 E1           	pop hl
 414+ 9931 C1           	pop bc
 415+ 9932
 416+ 9932 21 C6 8B     	ld hl,Ctrl_0
 417+ 9935 CB EE        	set 5,(hl)
 418+ 9937 C9           	ret
 419+ 9938
 420+ 9938              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9938
 422+ 9938              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9938              ;
 424+ 9938              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9938
 426+ 9938 7D           column ld a,l
 427+ 9939 E6 1F        	and $1f
 428+ 993B FE 10         	cp $10
 429+ 993D C9            	ret
 430+ 993E
 431+ 993E              ; --------------------------------------------------------------------------------------------------------------------
 432+ 993E              ;
 433+ 993E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 993E              ;
 435+ 993E              ; 14/12/22
 436+ 993E              ;
 437+ 993E              ;	Modifica: A y BC.
 438+ 993E
 439+ 993E 3A D8 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9941 E6 01        	and 1
 441+ 9943 28 17        	jr z,1F
 442+ 9945
 443+ 9945              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9945
 445+ 9945 3A BA 8B     	ld a,(Coordenada_X)
 446+ 9948 47           	ld b,a
 447+ 9949 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 994A 79           	ld a,c
 449+ 994B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 994C 38 08        	jr c,2F
 451+ 994E 47           	ld b,a
 452+ 994F 79           	ld a,c
 453+ 9950 90           	sub b
 454+ 9951 32 D9 8B     	ld (Columnas),a
 455+ 9954 18 1B        	jr 4F
 456+ 9956 79           2 ld a,c
 457+ 9957 32 D9 8B     	ld (Columnas),a
 458+ 995A 18 15        	jr 4F
 459+ 995C
 460+ 995C              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 995C
 462+ 995C 3A BA 8B     1 ld a,(Coordenada_X)
 463+ 995F 81           	add c
 464+ 9960 3D           	dec a
 465+ 9961 D6 1F        	sub $1f
 466+ 9963 38 08        	jr c,3F
 467+ 9965 47           	ld b,a
 468+ 9966 79           	ld a,c
 469+ 9967 90           	sub b
 470+ 9968 32 D9 8B     	ld (Columnas),a
 471+ 996B 18 04        	jr 4F
 472+ 996D 79           3 ld a,c
 473+ 996E 32 D9 8B     	ld (Columnas),a
 474+ 9971 D9           4 exx
 475+ 9972 4F           	ld c,a
 476+ 9973 D9           	exx
 477+ 9974 C9            ret
 478+ 9975
 479+ 9975              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9975              ;
 481+ 9975              ;   19/7/23
 482+ 9975              ;
 483+ 9975              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9975              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9975              ;
 486+ 9975              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9975              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9975              ;
 489+ 9975              ;	DESTRUYE: HL,B Y A.
 490+ 9975
 491+ 9975 3A D8 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9978 FE 02        	cp 2
 493+ 997A 38 18        	jr c,1F
 494+ 997C 28 16        	jr z,1F
 495+ 997E E6 01        	and 1
 496+ 9980 28 0D        	jr z,3F
 497+ 9982
 498+ 9982              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9982
 500+ 9982 CD BE 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9985
 502+ 9985 7D           9 ld a,l
 503+ 9986 E6 1F        	and $1f
 504+ 9988 28 2A        	jr z,7F
 505+ 998A 2B           	dec hl
 506+ 998B 10 F8        	djnz 9B
 507+ 998D 18 25        	jr 7F
 508+ 998F
 509+ 998F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 998F
 511+ 998F 2A C9 8B     3 ld hl,(Posicion_actual)
 512+ 9992 18 20        	jr 7F
 513+ 9994
 514+ 9994 28 14        1 jr z,2F
 515+ 9996
 516+ 9996              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9996
 518+ 9996 CD BE 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9999
 520+ 9999 7D           4 ld a,l
 521+ 999A E6 1F        	and $1f
 522+ 999C 28 03        	jr z,6F
 523+ 999E 2B           	dec hl
 524+ 999F 10 F8        	djnz 4B
 525+ 99A1 06 0F        6 ld b,15
 526+ 99A3 CD E5 99     5 call PreviousScan
 527+ 99A6 10 FB        	djnz 5B
 528+ 99A8 18 0A        	jr 7F
 529+ 99AA
 530+ 99AA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99AA
 532+ 99AA CD BE 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99AD 06 0F        	ld b,15
 534+ 99AF CD E5 99     8 call PreviousScan
 535+ 99B2 10 FB        	djnz 8B
 536+ 99B4
 537+ 99B4 E5           7 push hl
 538+ 99B5 DD E1        	pop ix
 539+ 99B7
 540+ 99B7 2A CB 8B     	ld hl,(Puntero_objeto)
 541+ 99BA E5           	push hl
 542+ 99BB FD E1        	pop iy
 543+ 99BD
 544+ 99BD C9           	ret
 545+ 99BE
 546+ 99BE              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99BE              ;
 548+ 99BE              ;	2/1/23
 549+ 99BE              ;
 550+ 99BE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99BE              ;
 552+ 99BE              ;	Tras esta rutina tenemos:
 553+ 99BE              ;
 554+ 99BE              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99BE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99BE              ;
 557+ 99BE              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99BE
 559+ 99BE 2A C9 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C1 3A D9 8B     	ld a,(Columnas)
 561+ 99C4 3D           	dec a
 562+ 99C5 20 01        	jr nz,1F
 563+ 99C7 3C           	inc a
 564+ 99C8 47           1 ld b,a
 565+ 99C9 C9           	ret
 566+ 99CA
 567+ 99CA              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99CA              ;
 569+ 99CA              ;	Prepara_draw
 570+ 99CA              ;
 571+ 99CA              ;	Es una rutina de carga.
 572+ 99CA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99CA              ;
 574+ 99CA              ;	FUNCIONAMIENTO:
 575+ 99CA              ;
 576+ 99CA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99CA              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99CA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99CA              ;
 580+ 99CA              ;	DESTRUYE:
 581+ 99CA              ;
 582+ 99CA              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99CA
 584+ 99CA 21 C7 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99CD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99CE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99CF 4E           	ld c,(hl)
 588+ 99D0 2A C9 8B     	ld hl,(Posicion_actual)
 589+ 99D3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D5 C9           	ret
 591+ 99D6
 592+ 99D6              ;----------------------------------------------------------------------------------------------------------------
 593+ 99D6              ;
 594+ 99D6              ;	5/08/22
 595+ 99D6              ;
 596+ 99D6              ;   NextScan.
 597+ 99D6              ;
 598+ 99D6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99D6              ;
 600+ 99D6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99D6              ;
 602+ 99D6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99D6              ;
 604+ 99D6              ;       DESTRUIDOS: AF y HL !!!
 605+ 99D6              ;
 606+ 99D6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99D6              ;
 608+ 99D6
 609+ 99D6 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99D7 7C               ld a,h
 611+ 99D8 E6 07            and 7
 612+ 99DA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99DB
 614+ 99DB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99DC C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99DE 6F               ld l,a
 617+ 99DF D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E0
 619+ 99E0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E3 67               ld h,a
 622+ 99E4 C9               ret
 623+ 99E5
 624+ 99E5              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E5              ;
 626+ 99E5              ;	5/08/22
 627+ 99E5              ;
 628+ 99E5              ;   PreviousScan.
 629+ 99E5              ;
 630+ 99E5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E5              ;
 632+ 99E5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E5              ;
 634+ 99E5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E5              ;
 636+ 99E5              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E5              ;
 638+ 99E5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E5              ;
 640+ 99E5
 641+ 99E5 7C           PreviousScan ld a,h
 642+ 99E6 25               dec h               ; Dec H.
 643+ 99E7 E6 07            and 7
 644+ 99E9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99EA
 646+ 99EA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99EB D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99ED 6F               ld l,a
 649+ 99EE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99EF
 651+ 99EF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F2 67               ld h,a
 654+ 99F3 C9               ret
 655+ 99F4
 656+ 99F4
 657+ 99F4
 658+ 99F4
 659+ 99F4
 660+ 99F4
 661+ 99F4
 662+ 99F4
 663+ 99F4
 664+ 99F4
 665+ 99F4
 666+ 99F4
# file closed: Draw_XOR.asm
2081  99F4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F4
   2+ 99F4              ; ******************************************************************************************************************************************************************************************
   3+ 99F4              ;
   4+ 99F4              ;   20/05/23
   5+ 99F4              ;
   6+ 99F4              ;	Recompone_posicion_inicio
   7+ 99F4              ;
   8+ 99F4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F4              ;	_ a una u otra rutina.
  12+ 99F4
  13+ 99F4              Recompone_posicion_inicio
  14+ 99F4
  15+ 99F4 2A D6 8B     	ld hl,(Posicion_inicio)
  16+ 99F7 7D           	ld a,l
  17+ 99F8 E6 1F        	and $1f
  18+ 99FA 28 16        	jr z,1F
  19+ 99FC
  20+ 99FC FE 1F        	cp $1f
  21+ 99FE 28 0D        	jr z,3F
  22+ 9A00
  23+ 9A00 21 C5 8B     	ld hl,Ctrl_2
  24+ 9A03 CB C6        	set 0,(hl)
  25+ 9A05 2A CB 8B     	ld hl,(Puntero_objeto)
  26+ 9A08 22 F7 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A0B 18 08        	jr 2F
  28+ 9A0D
  29+ 9A0D CD BB 9B     3 call Mov_left
  30+ 9A10 18 03        	jr 2F
  31+ 9A12
  32+ 9A12 CD 98 9A     1 call Mov_right
  33+ 9A15 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A18 22 CB 8B     	ld (Puntero_objeto),hl
  35+ 9A1B C9           	ret
  36+ 9A1C
  37+ 9A1C              ; ******************************************************************************************************************************************************************************************
  38+ 9A1C              ;
  39+ 9A1C              ;   27/05/23
  40+ 9A1C              ;
  41+ 9A1C              ;	Mov_down
  42+ 9A1C              ;
  43+ 9A1C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A1C              ;
  45+ 9A1C              ;
  46+ 9A1C              Mov_down
  47+ 9A1C
  48+ 9A1C CD 86 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A1F              ;																	; _ repone (Puntero_objeto).
  50+ 9A1F 21 C6 8B     	ld hl,Ctrl_0
  51+ 9A22 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A24              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A24              ; 																	; _ en el caso de que no lo haya.
  54+ 9A24 3A E1 8B     	ld a,(Vel_down)
  55+ 9A27 47           	ld b,a
  56+ 9A28 2A C9 8B         ld hl,(Posicion_actual)
  57+ 9A2B CD BE 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A2E E6 02        	and 2
  59+ 9A30 28 17        	jr z,1F
  60+ 9A32
  61+ 9A32              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A32              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A32
  64+ 9A32 7C           	ld a,h
  65+ 9A33 FE 57        	cp $57
  66+ 9A35 20 12        	jr nz,1F
  67+ 9A37
  68+ 9A37 7D           	ld a,l
  69+ 9A38 C6 20        	add $20
  70+ 9A3A 30 0D        	jr nc,1F
  71+ 9A3C
  72+ 9A3C              ; ------------------------------
  73+ 9A3C              ;
  74+ 9A3C              ;	12/01/24
  75+ 9A3C
  76+ 9A3C              ;	call Reaparece_arriba
  77+ 9A3C CD 48 9D     	call Reinicio
  78+ 9A3F
  79+ 9A3F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A3F
  81+ 9A3F 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 9A42 CB CF        	set 1,a
  83+ 9A44 32 2E 8C     	ld (Ctrl_3),a
  84+ 9A47
  85+ 9A47 18 08        	jr 3F
  86+ 9A49              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A49              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A49              ; ------------------------------
  89+ 9A49
  90+ 9A49 CD D6 99     1 call NextScan
  91+ 9A4C 22 C9 8B     	ld (Posicion_actual),hl
  92+ 9A4F 10 DA            djnz 2B
  93+ 9A51 CD DC 94     3 call Genera_coordenadas
  94+ 9A54 C9           	ret
  95+ 9A55
  96+ 9A55              ; ******************************************************************************************************************************************************************************************
  97+ 9A55              ;
  98+ 9A55              ;   27/05/23
  99+ 9A55              ;
 100+ 9A55              ;	Mov_up
 101+ 9A55              ;
 102+ 9A55              ; 	Mueve el Sprite hacia arriba.
 103+ 9A55              ;
 104+ 9A55              ;
 105+ 9A55              Mov_up
 106+ 9A55
 107+ 9A55 CD 86 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A58              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A58 21 C6 8B     	ld hl,Ctrl_0
 110+ 9A5B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A5D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A5D              ; 																		; _ en el caso de que no lo haya.
 113+ 9A5D 3A E0 8B     	ld a,(Vel_up)
 114+ 9A60 47           	ld b,a
 115+ 9A61 2A C9 8B     	ld hl,(Posicion_actual)
 116+ 9A64 CD BE 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A67 A7           	and a
 118+ 9A68 20 10        	jr nz,1F
 119+ 9A6A
 120+ 9A6A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A6A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A6A
 123+ 9A6A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A6B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A6D 20 0B            jr nz,1F
 126+ 9A6F 7D               ld a,l
 127+ 9A70 D6 20            sub $20
 128+ 9A72 30 06            jr nc,1F
 129+ 9A74 25               dec h
 130+ 9A75
 131+ 9A75              ; -----------------------------
 132+ 9A75 CD 29 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A78              ;	call Reinicio
 134+ 9A78              ; -----------------------------
 135+ 9A78
 136+ 9A78 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A7A CD E5 99     1 call PreviousScan
 138+ 9A7D 22 C9 8B     	ld (Posicion_actual),hl
 139+ 9A80 10 E2            djnz 3B
 140+ 9A82 CD DC 94     2 call Genera_coordenadas
 141+ 9A85 C9           	ret
 142+ 9A86
 143+ 9A86              ; -----------------------------
 144+ 9A86              ;
 145+ 9A86              ;	27/5/23
 146+ 9A86              ;
 147+ 9A86              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A86              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A86              ;
 150+ 9A86              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A86              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A86              ;
 153+ 9A86              ;	Modifica: A y (Puntero_objeto).
 154+ 9A86
 155+ 9A86 3A C5 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A89 CB 47        	bit 0,a
 157+ 9A8B C8           	ret z
 158+ 9A8C CB 87        	res 0,a
 159+ 9A8E 32 C5 8B     	ld (Ctrl_2),a
 160+ 9A91 2A F7 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A94 22 CB 8B     	ld (Puntero_objeto),hl
 162+ 9A97 C9           	ret
 163+ 9A98
 164+ 9A98              ; ******************************************************************************************************************************************************************************************
 165+ 9A98              ;
 166+ 9A98              ;	19/10/22
 167+ 9A98              ;
 168+ 9A98              ;	Mov_right.
 169+ 9A98              ;
 170+ 9A98              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A98              ;
 172+ 9A98
 173+ 9A98 3A C6 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A9B CB 77        	bit 6,a
 175+ 9A9D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A9F
 177+ 9A9F CD D7 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA3
 180+ 9AA3 21 C6 8B     	ld hl,Ctrl_0
 181+ 9AA6 CB E6        	set 4,(hl)
 182+ 9AA8 18 52        	jr 8F
 183+ 9AAA
 184+ 9AAA 21 C6 8B     10 ld hl,Ctrl_0
 185+ 9AAD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AAF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AAF              ; 																	; _ en el caso de que no lo haya.
 188+ 9AAF 3A BA 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB4 20 46        	jr nz,8F
 191+ 9AB6
 192+ 9AB6 3A CD 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AB9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9ABA 28 40        	jr z,8F
 195+ 9ABC
 196+ 9ABC              ; ---------- ---------- ----------
 197+ 9ABC              ;
 198+ 9ABC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ABC
 200+ 9ABC 3A DF 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ABF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC1 28 11        	jr z,1F
 203+ 9AC3 38 06        	jr c,6F
 204+ 9AC5 FE 04        	cp 4
 205+ 9AC7 28 14        	jr z,7F
 206+ 9AC9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ACB
 208+ 9ACB              ; ---------- ---------- ----------
 209+ 9ACB              ;
 210+ 9ACB              ; Perfiles de velocidad
 211+ 9ACB              ;
 212+ 9ACB
 213+ 9ACB 3A CD 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ACE FE FE        	cp $fe
 215+ 9AD0 20 2A        	jr nz,8F
 216+ 9AD2 18 10        	jr 3F
 217+ 9AD4 3A CD 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AD7 FE FD        	cp $fd
 219+ 9AD9 20 21        	jr nz,8F
 220+ 9ADB 18 07        	jr 3F
 221+ 9ADD 3A CD 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE0 FE FB        	cp $fb
 223+ 9AE2 20 18        	jr nz,8F
 224+ 9AE4
 225+ 9AE4              ; ---------- ---------- ----------
 226+ 9AE4
 227+ 9AE4              3
 228+ 9AE4 CD 17 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AE7              ;	call Reinicio
 230+ 9AE7
 231+ 9AE7              ; ---------- ---------- ----------
 232+ 9AE7              ;
 233+ 9AE7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AE7
 235+ 9AE7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AE9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AEA CD 03 9B     	call DESPLZ_DER
 238+ 9AED C1           	pop bc
 239+ 9AEE 10 F9        	djnz 5B
 240+ 9AF0 2A C9 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF4 22 C9 8B     	ld (Posicion_actual),hl
 243+ 9AF7 CD DC 94     	call Genera_coordenadas
 244+ 9AFA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AFC
 246+ 9AFC              ; ---------- ---------- ----------
 247+ 9AFC
 248+ 9AFC 2A C9 8B     8 ld hl,(Posicion_actual)
 249+ 9AFF CD 03 9B     	call DESPLZ_DER
 250+ 9B02 C9           2 ret
 251+ 9B03
 252+ 9B03              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B03              ;
 254+ 9B03              ;	22/9/22
 255+ 9B03              ;
 256+ 9B03
 257+ 9B03 CD 12 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B06 CD 5E 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B09 CD 87 9B         call Ciclo_completo
 260+ 9B0C 21 C6 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B0F CB FE        	set 7,(hl)
 262+ 9B11 C9           	ret
 263+ 9B12
 264+ 9B12              ; ******************************************************************************************************************************************************************************************
 265+ 9B12              ;	15/02/23
 266+ 9B12              ;
 267+ 9B12
 268+ 9B12 3A DF 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B15 47           	ld b,a
 270+ 9B16 2A D2 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B19 23           1 inc hl
 272+ 9B1A 23           	inc hl
 273+ 9B1B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B1D 22 D2 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B20 CD B1 90     	call Extrae_address
 276+ 9B23 22 CB 8B     	ld (Puntero_objeto),hl
 277+ 9B26
 278+ 9B26              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B26
 280+ 9B26              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B26              ; Cuántos movimientos hemos hecho ??
 282+ 9B26              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B26
 284+ 9B26 2A CE 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B29 EB           	ex de,hl
 286+ 9B2A A7           	and a
 287+ 9B2B ED 52        	sbc hl,de
 288+ 9B2D CB 3D        	srl l
 289+ 9B2F 3E 08        6 ld a,8
 290+ 9B31 95           	sub l
 291+ 9B32 30 1E        	jr nc,3F
 292+ 9B34
 293+ 9B34              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B34              ; B="0".
 295+ 9B34
 296+ 9B34 04           4 inc b
 297+ 9B35 3C           	inc a
 298+ 9B36 20 FC        	jr nz,4B
 299+ 9B38 78           	ld a,b
 300+ 9B39 08           	ex af,af
 301+ 9B3A 2A CE 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B3D 23           5 inc hl
 303+ 9B3E 23           	inc hl
 304+ 9B3F 10 FC        	djnz 5B
 305+ 9B41 22 D2 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B44 CD B1 90     	call Extrae_address
 307+ 9B47 22 CB 8B     	ld (Puntero_objeto),hl
 308+ 9B4A
 309+ 9B4A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B4A              ; _(Posicion_actual).
 311+ 9B4A
 312+ 9B4A 21 C9 8B     	ld hl,Posicion_actual
 313+ 9B4D 34           	inc (hl)
 314+ 9B4E 08               ex af,af
 315+ 9B4F 6F           	ld l,a
 316+ 9B50 18 DD        	jr 6B
 317+ 9B52
 318+ 9B52              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B52
 320+ 9B52 47           3 ld b,a
 321+ 9B53 2A D0 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B56 23           2 inc hl
 323+ 9B57 23           	inc hl
 324+ 9B58 10 FC        	djnz 2B
 325+ 9B5A 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B5D C9           8 ret
 327+ 9B5E
 328+ 9B5E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B5E              ;
 330+ 9B5E              ;	24/7/22
 331+ 9B5E              ;
 332+ 9B5E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B5E              ;
 334+ 9B5E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B5E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B5E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B5E
 338+ 9B5E 3A CD 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B61 A7           	and a
 340+ 9B62 20 1F        	jr nz,1F
 341+ 9B64 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B66 32 CD 8B         ld (CTRL_DESPLZ),a
 343+ 9B69
 344+ 9B69 21 C8 8B     	ld hl,Columns
 345+ 9B6C 34           	inc (hl)
 346+ 9B6D 3A D8 8B     	ld a,(Cuad_objeto)
 347+ 9B70 E6 01        	and 1
 348+ 9B72 28 0F        	jr z,1F
 349+ 9B74 2A C9 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B77 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B78 22 C9 8B     	ld (Posicion_actual),hl
 352+ 9B7B CD DC 94     	call Genera_coordenadas
 353+ 9B7E CD E3 9C     	call Inc_CTRL_DESPLZ
 354+ 9B81 18 03        	jr 2F
 355+ 9B83 CD E3 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B86 C9           2 ret
 357+ 9B87
 358+ 9B87              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B87              ;
 360+ 9B87              ;	24/7/22
 361+ 9B87              ;
 362+ 9B87              ;	Ciclo_completo.
 363+ 9B87              ;
 364+ 9B87              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B87              ;
 366+ 9B87              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B87              ; 	Decrementamos (Columns).
 368+ 9B87              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B87              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B87
 371+ 9B87
 372+ 9B87 3A CD 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B8A FE FF        	cp $ff
 374+ 9B8C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B8E E6 F0        	and $f0
 376+ 9B90 20 28        	jr nz,3F
 377+ 9B92
 378+ 9B92              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B92
 380+ 9B92 3A CD 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B95 47           	ld b,a
 382+ 9B96 3E F8        	ld a,$f8
 383+ 9B98 80           	add b
 384+ 9B99 32 CD 8B     	ld (CTRL_DESPLZ),a
 385+ 9B9C 18 1C        	jr 3F
 386+ 9B9E 21 C8 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA3 32 CD 8B     	ld (CTRL_DESPLZ),a
 390+ 9BA6 3A D8 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BA9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BAB 20 0A        	jr nz,2F
 393+ 9BAD 2A C9 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB0 23           	inc hl
 395+ 9BB1 22 C9 8B     	ld (Posicion_actual),hl
 396+ 9BB4 CD DC 94     	call Genera_coordenadas
 397+ 9BB7
 398+ 9BB7              ; Inicia el puntero de Sprite.
 399+ 9BB7
 400+ 9BB7 CD C6 90     2 call Inicia_puntero_objeto_der
 401+ 9BBA C9           3 ret
 402+ 9BBB
 403+ 9BBB              ; ******************************************************************************************************************************************************************************************
 404+ 9BBB              ;
 405+ 9BBB              ;	15/02/23
 406+ 9BBB              ;
 407+ 9BBB              ;	Mov_left.
 408+ 9BBB              ;
 409+ 9BBB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BBB              ;
 411+ 9BBB              Mov_left
 412+ 9BBB
 413+ 9BBB 21 C6 8B     	ld hl,Ctrl_0
 414+ 9BBE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC0              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC0 3A C6 8B     	ld a,(Ctrl_0)
 418+ 9BC3 CB 77        	bit 6,a
 419+ 9BC5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BC7
 421+ 9BC7 CD DD 9C     	call Stop_Amadeus_left
 422+ 9BCA C8           	ret z
 423+ 9BCB 20 4A        	jr nz,8F
 424+ 9BCD
 425+ 9BCD 3A BA 8B     11 ld a,(Coordenada_X)
 426+ 9BD0 A7           	and a
 427+ 9BD1 20 44        	jr nz,8F
 428+ 9BD3
 429+ 9BD3 3A CD 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BD6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BD7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BD9
 433+ 9BD9              ; ---------- ---------- ----------
 434+ 9BD9
 435+ 9BD9 3A DE 8B     	ld a,(Vel_left)
 436+ 9BDC FE 02        	cp 2
 437+ 9BDE 28 0F        	jr z,1F
 438+ 9BE0 38 04        	jr c,6F
 439+ 9BE2 FE 04        	cp 4
 440+ 9BE4 28 12        	jr z,7F
 441+ 9BE6
 442+ 9BE6              ; ---------- ---------- ----------
 443+ 9BE6
 444+ 9BE6 3A CD 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BE9 FE F8        	cp $f8
 446+ 9BEB 20 2A        	jr nz,8F
 447+ 9BED 18 10        	jr 4F
 448+ 9BEF 3A CD 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BF2 FE F9        	cp $f9
 450+ 9BF4 20 21        	jr nz,8F
 451+ 9BF6 18 07        	jr 4F
 452+ 9BF8 3A CD 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BFB FE FB        	cp $fb
 454+ 9BFD 20 18        	jr nz,8F
 455+ 9BFF
 456+ 9BFF              ; ---------- ---------- ----------
 457+ 9BFF
 458+ 9BFF              4
 459+ 9BFF CD 05 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C02              ;	call Reinicio
 461+ 9C02
 462+ 9C02              ; ---------- ---------- ----------
 463+ 9C02
 464+ 9C02 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C04 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C05
 467+ 9C05              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C05              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C05
 470+ 9C05 CD 1E 9C     	call DESPLZ_IZQ
 471+ 9C08 C1           	pop bc
 472+ 9C09 10 F9        	djnz 5B
 473+ 9C0B 2A C9 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C0E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C0F 22 C9 8B     	ld (Posicion_actual),hl
 476+ 9C12 CD DC 94     	call Genera_coordenadas
 477+ 9C15 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C17
 479+ 9C17              ; ---------- ---------- ----------
 480+ 9C17
 481+ 9C17              ; Movemos, no hay recolocación.
 482+ 9C17
 483+ 9C17 2A C9 8B     8 ld hl,(Posicion_actual)
 484+ 9C1A CD 1E 9C     	call DESPLZ_IZQ
 485+ 9C1D C9           2 ret
 486+ 9C1E
 487+ 9C1E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C1E              ;
 489+ 9C1E              ;	22/9/22
 490+ 9C1E
 491+ 9C1E              DESPLZ_IZQ
 492+ 9C1E
 493+ 9C1E CD 2D 9C     	call Desplaza_izquierda
 494+ 9C21 CD 79 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C24 CD A1 9C     	call Ciclo_completo_2
 496+ 9C27 21 C6 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C2A CB BE        	res 7,(hl)
 498+ 9C2C C9           	ret
 499+ 9C2D
 500+ 9C2D              Desplaza_izquierda
 501+ 9C2D
 502+ 9C2D 3A DE 8B     	ld a,(Vel_left)
 503+ 9C30 47           	ld b,a
 504+ 9C31 2A D4 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C34 23           1 inc hl
 506+ 9C35 23           	inc hl
 507+ 9C36 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C38 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C3B CD B1 90     	call Extrae_address
 510+ 9C3E 22 CB 8B     	ld (Puntero_objeto),hl
 511+ 9C41
 512+ 9C41              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C41
 514+ 9C41              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C41              ; Cuántos movimientos hemos hecho ??
 516+ 9C41              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C41
 518+ 9C41 2A D0 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C44 EB           	ex de,hl
 520+ 9C45 A7           	and a
 521+ 9C46 ED 52        	sbc hl,de
 522+ 9C48 CB 3D        	srl l
 523+ 9C4A 3E 08        6 ld a,8
 524+ 9C4C 95           	sub l
 525+ 9C4D 30 1E        	jr nc,3F
 526+ 9C4F
 527+ 9C4F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C4F              ; B="0".
 529+ 9C4F
 530+ 9C4F 04           4 inc b
 531+ 9C50 3C           	inc a
 532+ 9C51 20 FC        	jr nz,4B
 533+ 9C53 78           	ld a,b
 534+ 9C54 08           	ex af,af
 535+ 9C55 2A D0 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C58 23           5 inc hl
 537+ 9C59 23           	inc hl
 538+ 9C5A 10 FC        	djnz 5B
 539+ 9C5C 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C5F CD B1 90     	call Extrae_address
 541+ 9C62 22 CB 8B     	ld (Puntero_objeto),hl
 542+ 9C65
 543+ 9C65              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C65              ; _(Posicion_actual).
 545+ 9C65
 546+ 9C65 21 C9 8B     	ld hl,Posicion_actual
 547+ 9C68 35           	dec (hl)
 548+ 9C69 08           	ex af,af
 549+ 9C6A 6F           	ld l,a
 550+ 9C6B 18 DD        	jr 6B
 551+ 9C6D
 552+ 9C6D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C6D
 554+ 9C6D 47           3 ld b,a
 555+ 9C6E 2A CE 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C71 23           2 inc hl
 557+ 9C72 23           	inc hl
 558+ 9C73 10 FC        	djnz 2B
 559+ 9C75 22 D2 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C78 C9           8 ret
 561+ 9C79
 562+ 9C79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C79              ;
 564+ 9C79              ;	modifica_parametros_1er_DESPLZ
 565+ 9C79              ;
 566+ 9C79              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C79              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C79              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C79
 570+ 9C79 3A CD 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C7C A7           	and a
 572+ 9C7D 20 1E        	jr nz,1F
 573+ 9C7F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C80 32 CD 8B         ld (CTRL_DESPLZ),a
 575+ 9C83 21 C8 8B     	ld hl,Columns
 576+ 9C86 34           	inc (hl)
 577+ 9C87 3A D8 8B     	ld a,(Cuad_objeto)
 578+ 9C8A E6 01        	and 1
 579+ 9C8C 20 0F        	jr nz,1F
 580+ 9C8E 2A C9 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C91 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C92 22 C9 8B     	ld (Posicion_actual),hl
 583+ 9C95 CD DC 94     	call Genera_coordenadas
 584+ 9C98 CD F4 9C     	call Dec_CTRL_DESPLZ
 585+ 9C9B 18 03        	jr 2F
 586+ 9C9D CD F4 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA0 C9           2 ret
 588+ 9CA1
 589+ 9CA1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA1
 591+ 9CA1 3A CD 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA4 FE F7        	cp $f7
 593+ 9CA6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA8 30 2C        	jr nc,3F
 595+ 9CAA
 596+ 9CAA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CAA
 598+ 9CAA 06 00        	ld b,0
 599+ 9CAC 04           4 inc b
 600+ 9CAD 3C           	inc a
 601+ 9CAE FE F7        	cp $f7
 602+ 9CB0 20 FA        	jr nz,4B
 603+ 9CB2 3E FF        	ld a,$ff
 604+ 9CB4 90           	sub b
 605+ 9CB5 32 CD 8B     	ld (CTRL_DESPLZ),a
 606+ 9CB8 18 1C        	jr 3F
 607+ 9CBA
 608+ 9CBA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CBA
 610+ 9CBA 21 C8 8B     1 ld hl,Columns
 611+ 9CBD 35           	dec (hl)
 612+ 9CBE AF           	xor a
 613+ 9CBF 32 CD 8B     	ld (CTRL_DESPLZ),a
 614+ 9CC2 3A D8 8B     	ld a,(Cuad_objeto)
 615+ 9CC5 E6 01        	and 1
 616+ 9CC7 28 0A        	jr z,2F
 617+ 9CC9 2A C9 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CCC 2B           	dec hl
 619+ 9CCD 22 C9 8B     	ld (Posicion_actual),hl
 620+ 9CD0 CD DC 94     	call Genera_coordenadas
 621+ 9CD3
 622+ 9CD3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD3
 624+ 9CD3 CD D9 90     2 call Inicia_puntero_objeto_izq
 625+ 9CD6 C9           3 ret
 626+ 9CD7
 627+ 9CD7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CD7              ;
 629+ 9CD7              ;	19/10/22
 630+ 9CD7              ;
 631+ 9CD7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CD7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CD7
 634+ 9CD7 3A BA 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CDA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CDC C9           	ret
 637+ 9CDD
 638+ 9CDD              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CDD              ;
 640+ 9CDD              ;	19/10/22
 641+ 9CDD              ;
 642+ 9CDD              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CDD              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CDD
 645+ 9CDD 3A BA 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE2 C9           	ret
 648+ 9CE3
 649+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE3              ;
 651+ 9CE3              ;	24/7/22
 652+ 9CE3              ;
 653+ 9CE3              ;	Inc_CTRL_DESPLZ
 654+ 9CE3              ;
 655+ 9CE3              ;
 656+ 9CE3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE3
 658+ 9CE3 21 CD 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CE6 3A DF 8B     	ld a,(Vel_right)
 660+ 9CE9 A7           	and a
 661+ 9CEA 28 06        	jr z,1F
 662+ 9CEC 47           	ld b,a
 663+ 9CED 34           3 inc (hl)
 664+ 9CEE 10 FD        	djnz 3B
 665+ 9CF0 18 01        	jr 2F
 666+ 9CF2 34           1 inc (hl)
 667+ 9CF3 C9           2 ret
 668+ 9CF4
 669+ 9CF4              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF4              ;
 671+ 9CF4              ;	5/2/23
 672+ 9CF4              ;
 673+ 9CF4              ;	Dec_CTRL_DESPLZ
 674+ 9CF4              ;
 675+ 9CF4              ;
 676+ 9CF4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF4
 678+ 9CF4 21 CD 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CF7 3A DE 8B     	ld a,(Vel_left)
 680+ 9CFA A7           	and a
 681+ 9CFB 28 06        	jr z,1F
 682+ 9CFD 47           	ld b,a
 683+ 9CFE 35           3 dec (hl)
 684+ 9CFF 10 FD        	djnz 3B
 685+ 9D01 18 01        	jr 2F
 686+ 9D03 35           1 dec (hl)
 687+ 9D04 C9           2 ret
 688+ 9D05
 689+ 9D05              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D05
 691+ 9D05 2A C9 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D08 01 1F 00     	ld bc,31
 693+ 9D0B A7           	and a
 694+ 9D0C ED 4A        	adc hl,bc
 695+ 9D0E 22 C9 8B     	ld (Posicion_actual),hl
 696+ 9D11 21 C6 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D14 CB C6        	set 0,(hl)
 698+ 9D16 C9           	ret
 699+ 9D17
 700+ 9D17              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D17
 702+ 9D17 2A C9 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D1A 01 1F 00     	ld bc,31
 704+ 9D1D A7           	and a
 705+ 9D1E ED 42        	sbc hl,bc
 706+ 9D20 22 C9 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D23 21 C6 8B     	ld hl,Ctrl_0
 708+ 9D26 CB CE        	set 1,(hl)
 709+ 9D28 C9           	ret
 710+ 9D29
 711+ 9D29              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D29
 713+ 9D29 24           Reaparece_abajo inc h
 714+ 9D2A 01 E0 17     	ld bc,$17e0
 715+ 9D2D A7           	and a
 716+ 9D2E ED 4A        	adc hl,bc
 717+ 9D30 22 C9 8B     	ld (Posicion_actual),hl
 718+ 9D33 21 C6 8B     	ld hl,Ctrl_0
 719+ 9D36 CB D6        	set 2,(hl)
 720+ 9D38 C9           	ret
 721+ 9D39
 722+ 9D39              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D39
 724+ 9D39 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D3C A7           	and a
 726+ 9D3D ED 42        	sbc hl,bc
 727+ 9D3F 22 C9 8B     	ld (Posicion_actual),hl
 728+ 9D42 21 C6 8B     	ld hl,Ctrl_0
 729+ 9D45 CB DE        	set 3,(hl)
 730+ 9D47 C9           	ret
 731+ 9D48
 732+ 9D48              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D48              ;
 734+ 9D48              ;	15/07/23
 735+ 9D48
 736+ 9D48              Reinicio
 737+ 9D48
 738+ 9D48              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D48
 740+ 9D48 AF           	xor a
 741+ 9D49 21 EE 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D4C CD 6A 9D     	call Limpia_contenido_hl
 743+ 9D4F
 744+ 9D4F 21 C9 8B     	ld hl,Posicion_actual
 745+ 9D52 CD 6A 9D     	call Limpia_contenido_hl
 746+ 9D55
 747+ 9D55 CD BB 92     	call Situa_Puntero_indice_mov
 748+ 9D58 CD 69 9E     	call Inicia_Puntero_mov
 749+ 9D5B
 750+ 9D5B 21 F0 8B     	ld hl,Incrementa_puntero
 751+ 9D5E 06 05        	ld b,5
 752+ 9D60 77           1 ld (hl),a
 753+ 9D61 23           	inc hl
 754+ 9D62 10 FC        	djnz 1B
 755+ 9D64
 756+ 9D64 21 C5 8B     	ld hl,Ctrl_2
 757+ 9D67 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D69
 759+ 9D69 C9           	ret
 760+ 9D6A
 761+ 9D6A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D6B 23           	inc hl
 763+ 9D6C 77           	ld (hl),a
 764+ 9D6D C9           	ret
 765+ 9D6E
 766+ 9D6E              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D6E              ;
 768+ 9D6E              ;	18/6/24
 769+ 9D6E              ;
 770+ 9D6E
 771+ 9D6E              Amadeus_a_izquierda
 772+ 9D6E
 773+ 9D6E              ;	Actualiza contador de movimientos.
 774+ 9D6E
 775+ 9D6E 21 7C 89     	ld hl,Comm_Amadeus
 776+ 9D71 35           	dec (hl)
 777+ 9D72 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D74
 779+ 9D74 2A 7A 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D77 2B           	dec hl
 781+ 9D78 2B           	dec hl
 782+ 9D79 2B           	dec hl
 783+ 9D7A 2B           	dec hl
 784+ 9D7B 22 7A 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D7E
 786+ 9D7E 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D81 CB EE        	set 5,(hl)
 788+ 9D83
 789+ 9D83 C9           	ret
 790+ 9D84
 791+ 9D84 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D85 C9           	ret
 793+ 9D86
 794+ 9D86
 795+ 9D86              Amadeus_a_derecha
 796+ 9D86
 797+ 9D86              ;	Actualiza contador de movimientos.
 798+ 9D86
 799+ 9D86 21 7C 89     	ld hl,Comm_Amadeus
 800+ 9D89 34           	inc (hl)
 801+ 9D8A 3E 7A        	ld a,$7a
 802+ 9D8C BE           	cp (hl)
 803+ 9D8D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D8F
 805+ 9D8F 2A 7A 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D92 23           	inc hl
 807+ 9D93 23           	inc hl
 808+ 9D94 23           	inc hl
 809+ 9D95 23           	inc hl
 810+ 9D96 22 7A 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D99
 812+ 9D99 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D9C CB EE        	set 5,(hl)
 814+ 9D9E C9           	ret
 815+ 9D9F
 816+ 9D9F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA0 C9           	ret
# file closed: Direcciones.asm
2082  9DA1              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA1              ; ----- ----- ----- ----- -----
   2+ 9DA1              ;
   3+ 9DA1              ;   28/12/23
   4+ 9DA1
   5+ 9DA1              Movimiento
   6+ 9DA1
   7+ 9DA1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA1
   9+ 9DA1 3A C5 8B         ld a,(Ctrl_2)
  10+ 9DA4 CB 57            bit 2,a
  11+ 9DA6 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA8
  13+ 9DA8 2A EC 8B         ld hl,(Puntero_mov)
  14+ 9DAB 7E               ld a,(hl)
  15+ 9DAC
  16+ 9DAC              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DAC
  18+ 9DAC              Inicia_desplazamiento.
  19+ 9DAC
  20+ 9DAC              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DAC
  22+ 9DAC CD 9F 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DAF
  24+ 9DAF              ; Iniciamos (Repetimos_mov).
  25+ 9DAF
  26+ 9DAF 7E               ld a,(hl)
  27+ 9DB0 E6 0F            and $0f
  28+ 9DB2 32 F2 8B         ld (Repetimos_desplazamiento),a
  29+ 9DB5 32 F3 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB8
  31+ 9DB8              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB8
  33+ 9DB8 23               inc hl
  34+ 9DB9 7E               ld a,(hl)
  35+ 9DBA 32 F5 8B         ld (Cola_de_desplazamiento),a
  36+ 9DBD 2B               dec hl
  37+ 9DBE
  38+ 9DBE 21 C5 8B         ld hl,Ctrl_2
  39+ 9DC1 CB D6            set 2,(hl)
  40+ 9DC3
  41+ 9DC3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC3
  44+ 9DC3              Desplazamiento_iniciado
  45+ 9DC3
  46+ 9DC3 CD 73 9E         call Aplica_desplazamiento
  47+ 9DC6
  48+ 9DC6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DC6
  50+ 9DC6 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9DC9 CB 4F            bit 1,a
  52+ 9DCB C0               ret nz
  53+ 9DCC
  54+ 9DCC 21 F2 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DCF 35               dec (hl)
  56+ 9DD0 C0               ret nz
  57+ 9DD1
  58+ 9DD1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD1              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD1              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD1
  62+ 9DD1 3A F5 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD4 A7               and a
  64+ 9DD5 CC C8 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD8 28 30            jr z,Reinicia_el_movimiento
  66+ 9DDA
  67+ 9DDA FE FF            cp $ff
  68+ 9DDC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DDE
  70+ 9DDE FE FE            cp $fe
  71+ 9DE0 CC 4D 9E         call z,Fijamos_bucle
  72+ 9DE3 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE5
  74+ 9DE5 FE FD            cp $fd
  75+ 9DE7 20 11            jr nz,1F
  76+ 9DE9
  77+ 9DE9              ; ---
  78+ 9DE9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DE9
  80+ 9DE9 3A C5 8B         ld a,(Ctrl_2)
  81+ 9DEC CB 5F            bit 3,a
  82+ 9DEE 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF0
  84+ 9DF0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF0
  86+ 9DF0 21 C5 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF5
  89+ 9DF5 CD 5E 9E         call Inicia_Repetimos_movimiento
  90+ 9DF8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DFA              ; ---
  92+ 9DFA
  93+ 9DFA FE 01        1 cp 1
  94+ 9DFC CA 37 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DFF
  96+ 9DFF 3D               dec a
  97+ 9E00 32 F5 8B         ld (Cola_de_desplazamiento),a
  98+ 9E03
  99+ 9E03 3A F3 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E06 32 F2 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E09              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E09 C9               ret
 103+ 9E0A
 104+ 9E0A              Reinicia_el_movimiento
 105+ 9E0A
 106+ 9E0A 3A C5 8B         ld a,(Ctrl_2)
 107+ 9E0D CB 5F            bit 3,a
 108+ 9E0F 28 1B            jr z,2F
 109+ 9E11
 110+ 9E11              ; (Cola_de_desplazamiento)="254".
 111+ 9E11
 112+ 9E11 21 F4 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E14 35               dec (hl)
 114+ 9E15 20 15            jr nz,2F
 115+ 9E17
 116+ 9E17              ; Fin de las repeticiones del último movimiento.
 117+ 9E17
 118+ 9E17 21 C5 8B         ld hl,Ctrl_2
 119+ 9E1A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E1C
 121+ 9E1C 2A EC 8B         ld hl,(Puntero_mov)
 122+ 9E1F 23               inc hl
 123+ 9E20 23               inc hl
 124+ 9E21 23               inc hl
 125+ 9E22 22 EC 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E25              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E25 7E               ld a,(hl)
 128+ 9E26 32 F5 8B         ld (Cola_de_desplazamiento),a
 129+ 9E29
 130+ 9E29 C3 D1 9D         jp Cola
 131+ 9E2C
 132+ 9E2C CD 69 9E     2 call Inicia_Puntero_mov
 133+ 9E2F
 134+ 9E2F 21 C5 8B         ld hl,Ctrl_2
 135+ 9E32 CB 96            res 2,(hl)
 136+ 9E34
 137+ 9E34 C3 A1 9D         jp Movimiento
 138+ 9E37
 139+ 9E37              Siguiente_desplazamiento
 140+ 9E37
 141+ 9E37              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E37              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E37
 144+ 9E37 21 C5 8B         ld hl,Ctrl_2
 145+ 9E3A CB 96            res 2,(hl)
 146+ 9E3C
 147+ 9E3C 2A EC 8B         ld hl,(Puntero_mov)
 148+ 9E3F 23               inc hl
 149+ 9E40 23               inc hl
 150+ 9E41 22 EC 8B         ld (Puntero_mov),hl
 151+ 9E44
 152+ 9E44 7E               ld a,(hl)
 153+ 9E45 A7               and a
 154+ 9E46 CC C8 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E49 CA 0A 9E         jp z,Reinicia_el_movimiento
 156+ 9E4C
 157+ 9E4C C9               ret
 158+ 9E4D
 159+ 9E4D              ; Subrutinas -----------------------------------------
 160+ 9E4D              ; ---------- --------- --------- ---------- ----------
 161+ 9E4D              ;
 162+ 9E4D              ;   24/07/23
 163+ 9E4D              ;
 164+ 9E4D              ;   Fijamos_bucle
 165+ 9E4D              ;
 166+ 9E4D              ;
 167+ 9E4D
 168+ 9E4D              Fijamos_bucle
 169+ 9E4D
 170+ 9E4D 3A F0 8B         ld a,(Incrementa_puntero)
 171+ 9E50 3C               inc a
 172+ 9E51 32 F1 8B         ld (Incrementa_puntero_backup),a
 173+ 9E54
 174+ 9E54 CD C8 9E         call Incrementa_Puntero_indice_mov
 175+ 9E57 2A EA 8B         ld hl,(Puntero_indice_mov)
 176+ 9E5A 22 EE 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E5D C9               ret
 178+ 9E5E
 179+ 9E5E              ; ---------- --------- --------- ---------- ----------
 180+ 9E5E              ;
 181+ 9E5E              ;   07/7/23
 182+ 9E5E              ;
 183+ 9E5E              ;   Inicia_Repetimos_movimiento
 184+ 9E5E              ;
 185+ 9E5E              ;
 186+ 9E5E
 187+ 9E5E              Inicia_Repetimos_movimiento
 188+ 9E5E
 189+ 9E5E              ; Iniciamos (Repetimos_movimiento).
 190+ 9E5E
 191+ 9E5E DD 2A EC 8B      ld ix,(Puntero_mov)
 192+ 9E62 DD 7E 02         ld a,(ix+2)
 193+ 9E65 32 F4 8B         ld (Repetimos_movimiento),a
 194+ 9E68
 195+ 9E68 C9               ret
 196+ 9E69
 197+ 9E69              ; ---------- --------- --------- ---------- ----------
 198+ 9E69              ;
 199+ 9E69              ;   26/6/23
 200+ 9E69              ;
 201+ 9E69              ;   Inicia_Puntero_mov
 202+ 9E69              ;
 203+ 9E69              ;
 204+ 9E69
 205+ 9E69 2A EA 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E6C CD B1 90         call Extrae_address
 207+ 9E6F 22 EC 8B         ld (Puntero_mov),hl
 208+ 9E72 C9               ret
 209+ 9E73
 210+ 9E73              ; ---------- --------- --------- ---------- ----------
 211+ 9E73              ;
 212+ 9E73              ;   27/06/23
 213+ 9E73              ;
 214+ 9E73              ;   Aplica_movimiento.
 215+ 9E73
 216+ 9E73              Aplica_desplazamiento
 217+ 9E73
 218+ 9E73              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E73
 220+ 9E73 2A EC 8B         ld hl, (Puntero_mov)
 221+ 9E76
 222+ 9E76 7E               ld a,(hl)
 223+ 9E77 E6 F0            and $f0
 224+ 9E79 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E7A
 226+ 9E7A CB 7E            bit 7,(hl)
 227+ 9E7C 28 03            jr z,1F
 228+ 9E7E CD 55 9A         call Mov_up
 229+ 9E81 2A EC 8B     1 ld hl, (Puntero_mov)
 230+ 9E84 CB 76            bit 6,(hl)
 231+ 9E86 28 03            jr z,2F
 232+ 9E88 CD 1C 9A         call Mov_down
 233+ 9E8B
 234+ 9E8B              ; Se ha aplicado reinicio ???
 235+ 9E8B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E8B
 237+ 9E8B              ;    ld a,(Ctrl_3)
 238+ 9E8B              ;    bit 1,a
 239+ 9E8B              ;    ret nz
 240+ 9E8B
 241+ 9E8B 2A EC 8B     2 ld hl, (Puntero_mov)
 242+ 9E8E CB 6E            bit 5,(hl)
 243+ 9E90 28 03            jr z,3F
 244+ 9E92 CD BB 9B         call Mov_left
 245+ 9E95 2A EC 8B     3 ld hl, (Puntero_mov)
 246+ 9E98 CB 66            bit 4,(hl)
 247+ 9E9A C8               ret z
 248+ 9E9B CD 98 9A         call Mov_right
 249+ 9E9E C9               ret
 250+ 9E9F
 251+ 9E9F              ; ---------- --------- --------- ---------- ----------
 252+ 9E9F              ;
 253+ 9E9F              ;   26/06/23
 254+ 9E9F              ;
 255+ 9E9F              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E9F
 257+ 9E9F              Ajusta_velocidad_desplazamiento
 258+ 9E9F
 259+ 9E9F              ; 1er byte de la cadena de movimiento.
 260+ 9E9F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E9F
 262+ 9E9F CD BD 9E         call Extrae_nibble_alto
 263+ 9EA2
 264+ 9EA2 32 E0 8B         ld (Vel_up),a
 265+ 9EA5 79               ld a,c
 266+ 9EA6 E6 0F            and $0f
 267+ 9EA8 32 E1 8B         ld (Vel_down),a
 268+ 9EAB
 269+ 9EAB              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EAB              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EAB
 272+ 9EAB 23               inc hl
 273+ 9EAC CD BD 9E         call Extrae_nibble_alto
 274+ 9EAF
 275+ 9EAF 32 DE 8B         ld (Vel_left),a
 276+ 9EB2 79               ld a,c
 277+ 9EB3 E6 0F            and $0f
 278+ 9EB5 32 DF 8B         ld (Vel_right),a
 279+ 9EB8
 280+ 9EB8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB8
 282+ 9EB8 23               inc hl
 283+ 9EB9 22 EC 8B         ld (Puntero_mov),hl
 284+ 9EBC C9               ret
 285+ 9EBD
 286+ 9EBD 06 04        Extrae_nibble_alto ld b,4
 287+ 9EBF 7E               ld a,(hl)
 288+ 9EC0 4F               ld c,a
 289+ 9EC1 E6 F0            and $f0
 290+ 9EC3 CB 3F        1 srl a
 291+ 9EC5 10 FC            djnz 1B
 292+ 9EC7 C9               ret
 293+ 9EC8
 294+ 9EC8              ; ---------- --------- --------- ---------- ----------
 295+ 9EC8              ;
 296+ 9EC8              ;   5/7/23
 297+ 9EC8              ;
 298+ 9EC8              ;   Incrementa_Puntero_indice_mov
 299+ 9EC8
 300+ 9EC8              Incrementa_Puntero_indice_mov
 301+ 9EC8
 302+ 9EC8 21 F0 8B         ld hl,Incrementa_puntero
 303+ 9ECB 34               inc (hl)
 304+ 9ECC
 305+ 9ECC 2A EA 8B         ld hl,(Puntero_indice_mov)
 306+ 9ECF 01 02 00         ld bc,2
 307+ 9ED2 A7               and a
 308+ 9ED3 09               add hl,bc
 309+ 9ED4 22 EA 8B         ld (Puntero_indice_mov),hl
 310+ 9ED7
 311+ 9ED7 7E               ld a,(hl)
 312+ 9ED8 A7               and a
 313+ 9ED9
 314+ 9ED9              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ED9
 316+ 9ED9              ;    jr z,$
 317+ 9ED9
 318+ 9ED9              ;! Reinicia el Patrón de movimiento.
 319+ 9ED9
 320+ 9ED9 CC DE 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EDC
 322+ 9EDC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EDD
 324+ 9EDD C9               ret
 325+ 9EDE
 326+ 9EDE              ; ---------- --------- --------- ---------- ----------
 327+ 9EDE              ;
 328+ 9EDE              ;   15/01/24
 329+ 9EDE              ;
 330+ 9EDE              ;   Inicializa_Puntero_indice_mov
 331+ 9EDE
 332+ 9EDE              Inicializa_Puntero_indice_mov_2
 333+ 9EDE
 334+ 9EDE              ; Existe etiqueta de bucle principal???
 335+ 9EDE
 336+ 9EDE 2A EE 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE1 24               inc h
 338+ 9EE2 25               dec h
 339+ 9EE3 28 05            jr z,2F
 340+ 9EE5
 341+ 9EE5 22 EA 8B         ld (Puntero_indice_mov),hl
 342+ 9EE8 18 14            jr 3F
 343+ 9EEA
 344+ 9EEA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EEA
 346+ 9EEA 3A F0 8B     2 ld a,(Incrementa_puntero)
 347+ 9EED 47               ld b,a
 348+ 9EEE
 349+ 9EEE 2A EA 8B         ld hl,(Puntero_indice_mov)
 350+ 9EF1 2B           1 dec hl
 351+ 9EF2 2B               dec hl
 352+ 9EF3 10 FC            djnz 1B
 353+ 9EF5 22 EA 8B         ld (Puntero_indice_mov),hl
 354+ 9EF8
 355+ 9EF8 AF               xor a
 356+ 9EF9 32 F0 8B         ld (Incrementa_puntero),a
 357+ 9EFC 18 06            jr 4F
 358+ 9EFE
 359+ 9EFE 3A F1 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F01 32 F0 8B         ld (Incrementa_puntero),a
 361+ 9F04 C9           4 ret
 362+ 9F05
 363+ 9F05              ; ----------------------------------------------------------------------
 364+ 9F05              ;
 365+ 9F05              ;   30/01/24
 366+ 9F05              ;
 367+ 9F05              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F05
 369+ 9F05 3A B9 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F08 CD 56 94         call Calcula_salto_en_BC
 371+ 9F0B 21 E2 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F0E A7               and a
 373+ 9F0F ED 4A            adc hl,bc
 374+ 9F11 C9               ret
 375+ 9F12
 376+ 9F12              ; ----------------------------------------------------------------------
 377+ 9F12              ;
 378+ 9F12              ;   30/01/24
 379+ 9F12              ;
 380+ 9F12              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F12              ;
 382+ 9F12              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F12
 384+ 9F12 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F13 23               inc hl
 386+ 9F14 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F15 69               ld l,c
 388+ 9F16 60               ld h,b
 389+ 9F17 22 C2 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F1A C9               ret
 391+ 9F1B
# file closed: Movimiento.asm
2083  9F1B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F1B              ; --------------------------------------------------------------------------------------
   2+ 9F1B              ;
   3+ 9F1B              ;   25/10/24
   4+ 9F1B              ;
   5+ 9F1B
   6+ 9F1B              Pinta_disparos_Entidades
   7+ 9F1B
   8+ 9F1B ED 73 06 8C      ld (Stack),sp
   9+ 9F1F ED 7B 18 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F23
  11+ 9F23 3E 02            ld a,2
  12+ 9F25 08               ex af,af
  13+ 9F26
  14+ 9F26 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F28              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F28              ;                                     _ No encontraría "0".
  17+ 9F28 FD E1        4 pop iy
  18+ 9F2A D1               pop de                          ; 1er .db IYL
  19+ 9F2B              ;                                   ; 2º  .db IYH
  20+ 9F2B              ;                                   ; 3er .db E.
  21+ 9F2B              ;   Album vacío ???
  22+ 9F2B
  23+ 9F2B FD 7D            ld a,iyl
  24+ 9F2D FD 84            add iyh
  25+ 9F2F 83               add e
  26+ 9F30 28 1F            jr z,1F
  27+ 9F32
  28+ 9F32              ;   Imprime album, (contiene datos).
  29+ 9F32
  30+ 9F32 3B               dec sp
  31+ 9F33
  32+ 9F33 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F34
  34+ 9F34              ; Imprime el 1er scanline del disparo.
  35+ 9F34
  36+ 9F34 FD 7D            ld a,iyl
  37+ 9F36 AE               xor (hl)
  38+ 9F37 77               ld (hl),a
  39+ 9F38
  40+ 9F38 2C               inc l
  41+ 9F39
  42+ 9F39 FD 7C            ld a,iyh
  43+ 9F3B AE               xor (hl)
  44+ 9F3C 77               ld (hl),a
  45+ 9F3D
  46+ 9F3D 2C               inc l
  47+ 9F3E
  48+ 9F3E 7B               ld a,e
  49+ 9F3F AE               xor (hl)
  50+ 9F40 77               ld (hl),a
  51+ 9F41
  52+ 9F41              ; Imprime el 2º scanline del disparo.
  53+ 9F41
  54+ 9F41 E1               pop hl
  55+ 9F42
  56+ 9F42 FD 7D            ld a,iyl
  57+ 9F44 AE               xor (hl)
  58+ 9F45 77               ld (hl),a
  59+ 9F46
  60+ 9F46 2C               inc l
  61+ 9F47
  62+ 9F47 FD 7C            ld a,iyh
  63+ 9F49 AE               xor (hl)
  64+ 9F4A 77               ld (hl),a
  65+ 9F4B
  66+ 9F4B 2C               inc l
  67+ 9F4C
  68+ 9F4C 7B               ld a,e
  69+ 9F4D AE               xor (hl)
  70+ 9F4E 77               ld (hl),a
  71+ 9F4F
  72+ 9F4F 10 D7            djnz 4B
  73+ 9F51
  74+ 9F51 08           1 ex af,af
  75+ 9F52 3D               dec a
  76+ 9F53 20 05            jr nz,2F
  77+ 9F55
  78+ 9F55 ED 7B 06 8C      ld sp,(Stack)
  79+ 9F59 C9               ret
  80+ 9F5A
  81+ 9F5A ED 7B 16 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F5E 08               ex af,af
  83+ 9F5F 18 C5            jr 3B
  84+ 9F61
  85+ 9F61              ; --------------------------------------------------------------------------------------
  86+ 9F61              ;
  87+ 9F61              ;   30/10/24
  88+ 9F61              ;
  89+ 9F61
  90+ 9F61              Motor_de_disparos_entidades
  91+ 9F61
  92+ 9F61 3A 1E 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F64 FE 07            cp 7
  94+ 9F66 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F67
  96+ 9F67 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F69 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F6C
  99+ 9F6C CD B1 90     1 call Extrae_address
 100+ 9F6F 1C               inc e
 101+ 9F70 1C               inc e
 102+ 9F71 ED 53 31 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F75
 104+ 9F75               ; Caja vacía ???
 105+ 9F75
 106+ 9F75 2D               dec l
 107+ 9F76 7E               ld a,(hl)
 108+ 9F77 A7               and a
 109+ 9F78 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F7A
 111+ 9F7A              ; --- Trabajamos con caja:
 112+ 9F7A
 113+ 9F7A 2C               inc l
 114+ 9F7B
 115+ 9F7B              ; --- Existe posibilidad de impacto ???
 116+ 9F7B
 117+ 9F7B CB 46            bit 0,(hl)
 118+ 9F7D C4 BD 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F80 20 37            jr nz,3F
 120+ 9F82
 121+ 9F82 CD 44 A0         call Rota_disparo_si_procede
 122+ 9F85
 123+ 9F85              ; ------------------------------------------------------------
 124+ 9F85
 125+ 9F85 2D               dec l
 126+ 9F86 2D               dec l
 127+ 9F87
 128+ 9F87 CD B1 90         call Extrae_address
 129+ 9F8A
 130+ 9F8A              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F8A              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F8A
 133+ 9F8A 3A 30 8C         ld a,(Ctrl_5)
 134+ 9F8D CB 57            bit 2,a
 135+ 9F8F 28 09            jr z,4F
 136+ 9F91
 137+ 9F91 CB 97            res 2,a
 138+ 9F93 32 30 8C         ld (Ctrl_5),a
 139+ 9F96 2C               inc l
 140+ 9F97 2C               inc l
 141+ 9F98 18 0C            jr 5F
 142+ 9F9A
 143+ 9F9A CB 5F        4 bit 3,a
 144+ 9F9C 28 08            jr z,5F
 145+ 9F9E
 146+ 9F9E CB 9F            res 3,a
 147+ 9FA0 32 30 8C         ld (Ctrl_5),a
 148+ 9FA3 2D               dec l
 149+ 9FA4 2D               dec l
 150+ 9FA5 2D               dec l
 151+ 9FA6
 152+ 9FA6              ; ---------------------------------------------------------------------
 153+ 9FA6
 154+ 9FA6              ;! Velocidad del disparo de entidades.
 155+ 9FA6
 156+ 9FA6 CD D6 99     5 call NextScan
 157+ 9FA9 CD D6 99         call NextScan
 158+ 9FAC
 159+ 9FAC              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FAC
 161+ 9FAC CD 21 A0         call Fin_de_disparo_de_entidad
 162+ 9FAF
 163+ 9FAF EB               ex de,hl
 164+ 9FB0
 165+ 9FB0 73               ld (hl),e
 166+ 9FB1 23               inc hl
 167+ 9FB2 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FB3
 169+ 9FB3 2A 31 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FB6 18 02            jr 2F
 171+ 9FB8
 172+ 9FB8 C9               ret
 173+ 9FB9
 174+ 9FB9 EB           3 ex de,hl
 175+ 9FBA 10 B0        2 djnz 1B
 176+ 9FBC
 177+ 9FBC C9               ret
 178+ 9FBD
 179+ 9FBD              ; ------------- ------------- ------------
 180+ 9FBD              ;
 181+ 9FBD              ;   1/11/24
 182+ 9FBD
 183+ 9FBD              Comprueba_impacto_con_Amadeus
 184+ 9FBD
 185+ 9FBD              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FBD              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FBD
 188+ 9FBD              ;   Modificamos registros, así que guardamos ...
 189+ 9FBD
 190+ 9FBD C5               push bc
 191+ 9FBE E5               push hl
 192+ 9FBF D5               push de
 193+ 9FC0
 194+ 9FC0 2D               dec l
 195+ 9FC1 2D               dec l
 196+ 9FC2
 197+ 9FC2 CD B1 90         call Extrae_address
 198+ 9FC5
 199+ 9FC5 3A 74 89         ld a,(CX_Amadeus)
 200+ 9FC8 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FC9
 202+ 9FC9 7D               ld a,l
 203+ 9FCA E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FCC
 205+ 9FCC 06 03            ld b,3
 206+ 9FCE
 207+ 9FCE B9           1 cp c
 208+ 9FCF 28 15            jr z,Coincidencia
 209+ 9FD1 0C               inc c
 210+ 9FD2 10 FA            djnz 1B
 211+ 9FD4
 212+ 9FD4 0D               dec c
 213+ 9FD5 0D               dec c
 214+ 9FD6 0D               dec c
 215+ 9FD7
 216+ 9FD7 3C               inc a
 217+ 9FD8 B9               cp c
 218+ 9FD9 28 0B            jr z,Coincidencia
 219+ 9FDB
 220+ 9FDB 3C               inc a
 221+ 9FDC B9               cp c
 222+ 9FDD 28 07            jr z,Coincidencia
 223+ 9FDF
 224+ 9FDF D1           2 pop de
 225+ 9FE0 E1               pop hl
 226+ 9FE1 C1               pop bc
 227+ 9FE2
 228+ 9FE2              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FE2
 230+ 9FE2 CB 86            res 0,(hl)
 231+ 9FE4 AF               xor a                       ; Z before RET.
 232+ 9FE5 C9               ret
 233+ 9FE6
 234+ 9FE6              Coincidencia
 235+ 9FE6
 236+ 9FE6              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FE6              ;   Existe posibilidad de impacto.
 238+ 9FE6              ;   Vamos a averiguarlo ...
 239+ 9FE6
 240+ 9FE6 1D               dec e
 241+ 9FE7 1D               dec e
 242+ 9FE8 1D               dec e
 243+ 9FE9
 244+ 9FE9              ; DE en Puntero_objeto del disparo.
 245+ 9FE9              ; HL en Puntero_de_impresión del disparo.
 246+ 9FE9
 247+ 9FE9              ; Comparador:
 248+ 9FE9
 249+ 9FE9 06 03            ld b,3
 250+ 9FEB
 251+ 9FEB 1A           3 ld a,(de)
 252+ 9FEC 4F               ld c,a
 253+ 9FED A6               and (hl)
 254+ 9FEE B9               cp c
 255+ 9FEF 20 06            jr nz,Amadeus_impactado
 256+ 9FF1
 257+ 9FF1 2C               inc l
 258+ 9FF2 1C               inc e
 259+ 9FF3
 260+ 9FF3 10 F6            djnz 3B
 261+ 9FF5
 262+ 9FF5 18 E8            jr 2B
 263+ 9FF7
 264+ 9FF7              Amadeus_impactado
 265+ 9FF7
 266+ 9FF7              ; Borramos disparo.
 267+ 9FF7
 268+ 9FF7 D1               pop de
 269+ 9FF8 E1               pop hl
 270+ 9FF9
 271+ 9FF9 E5               push hl
 272+ 9FFA D5               push de
 273+ 9FFB
 274+ 9FFB CD AF A0         call Borra_6_bytes
 275+ 9FFE
 276+ 9FFE 21 1E 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A001 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A002
 279+ A002              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A002
 281+ A002 21 77 89         ld hl,Impacto_Amadeus
 282+ A005 36 01            ld (hl),1
 283+ A007
 284+ A007              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A007              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A007
 287+ A007 3A 78 89         ld a,(p.imp.amadeus)
 288+ A00A FE DE            cp $de
 289+ A00C 20 04            jr nz,1F
 290+ A00E
 291+ A00E 3D               dec a
 292+ A00F 32 78 89         ld (p.imp.amadeus),a
 293+ A012
 294+ A012              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A012
 296+ A012 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A015 21 7A 89         ld hl,Pamm_Amadeus
 298+ A018
 299+ A018 73               ld (hl),e
 300+ A019 23               inc hl
 301+ A01A 72               ld (hl),d
 302+ A01B
 303+ A01B D1               pop de
 304+ A01C E1               pop hl
 305+ A01D C1               pop bc
 306+ A01E
 307+ A01E AF               xor a
 308+ A01F 3C               inc a               ; NZ before RET.
 309+ A020 C9               ret
 310+ A021
 311+ A021              ; ------------- ------------- ------------
 312+ A021              ;
 313+ A021              ;   31/10/24
 314+ A021
 315+ A021              Fin_de_disparo_de_entidad
 316+ A021
 317+ A021              ; Estamos en zona de Amadeus ??
 318+ A021
 319+ A021 7C               ld a,h
 320+ A022 FE 54            cp $54
 321+ A024 38 0D            jr c,1F
 322+ A026
 323+ A026 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A027
 325+ A027 5D               ld e,l
 326+ A028 54               ld d,h
 327+ A029
 328+ A029 21 E0 57         ld hl,$57e0
 329+ A02C ED 52            sbc hl,de
 330+ A02E
 331+ A02E 38 6F            jr c,Elimina_disparo_entidad
 332+ A030
 333+ A030 6B               ld l,e
 334+ A031 62               ld h,d
 335+ A032
 336+ A032 D1               pop de
 337+ A033
 338+ A033 7C           1 ld a,h
 339+ A034 FE 50            cp $50
 340+ A036 D8               ret c
 341+ A037
 342+ A037 7D               ld a,l
 343+ A038 FE C0            cp $c0
 344+ A03A D8               ret c
 345+ A03B
 346+ A03B              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A03B              ; Así podremos comprobar si hay colisión más adelante.
 348+ A03B
 349+ A03B 1C               inc e
 350+ A03C 1C               inc e
 351+ A03D
 352+ A03D EB               ex de,hl
 353+ A03E CB C6            set 0,(hl)
 354+ A040 EB               ex de,hl
 355+ A041
 356+ A041 1D               dec e
 357+ A042 1D               dec e
 358+ A043
 359+ A043 C9               ret
 360+ A044
 361+ A044              ; ----------------------------------------------------------
 362+ A044              ;
 363+ A044              ;   08/10/24
 364+ A044
 365+ A044              ;   Estructura de un disparo de entidades.
 366+ A044
 367+ A044              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A044              ; 	defw 0											; Puntero de impresión.
 369+ A044              ;	defw 0											; Control.
 370+ A044
 371+ A044              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A044              ;   _de la entidad en el momento de disparar.
 373+ A044
 374+ A044              ;   El byte alto muestra la siguiente información:
 375+ A044              ;
 376+ A044              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A044              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A044              ;
 379+ A044              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A044              ;
 381+ A044              ;                        10xx ..... Izquierda.
 382+ A044              ;                        01xx ..... Derecha.
 383+ A044              ;                        00xx ..... Recto.
 384+ A044
 385+ A044              Rota_disparo_si_procede
 386+ A044
 387+ A044              ;   Nos situamos en el byte alto de (Control).
 388+ A044
 389+ A044 CB 76            bit 6,(hl)
 390+ A046 20 2D            jr nz,Rota_a_derecha
 391+ A048 CB 7E            bit 7,(hl)
 392+ A04A C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A04B
 394+ A04B              Rota_a_izq
 395+ A04B
 396+ A04B E5               push hl
 397+ A04C
 398+ A04C 7D               ld a,l
 399+ A04D D6 05            sub 5
 400+ A04F 6F               ld l,a
 401+ A050
 402+ A050 E5               push hl
 403+ A051 FD E1            pop iy
 404+ A053
 405+ A053 A7               and a
 406+ A054
 407+ A054 FD CB 02 16      rl (iy+02)
 408+ A058 FD CB 01 16      rl (iy+01)
 409+ A05C FD CB 00 16      rl (iy+00)
 410+ A060
 411+ A060 30 3B            jr nc,Exit
 412+ A062
 413+ A062              ; Desplazamiento completo hasta Carry.
 414+ A062              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A062
 416+ A062 FD 36 02 03      ld (iy+02),$03
 417+ A066 FD 36 01 00      ld (iy+01),$00
 418+ A06A FD 36 00 00      ld (iy+00),$00
 419+ A06E
 420+ A06E 21 30 8C         ld hl,Ctrl_5
 421+ A071 CB DE            set 3,(hl)
 422+ A073
 423+ A073 18 28            jr Exit
 424+ A075
 425+ A075              Rota_a_derecha
 426+ A075
 427+ A075 E5               push hl
 428+ A076
 429+ A076 7D               ld a,l
 430+ A077 D6 05            sub 5
 431+ A079 6F               ld l,a
 432+ A07A
 433+ A07A E5               push hl
 434+ A07B FD E1            pop iy
 435+ A07D
 436+ A07D A7               and a
 437+ A07E
 438+ A07E FD CB 00 1E      rr (iy+00)
 439+ A082 FD CB 01 1E      rr (iy+01)
 440+ A086 FD CB 02 1E      rr (iy+02)
 441+ A08A
 442+ A08A 30 11            jr nc,Exit
 443+ A08C
 444+ A08C              ; Desplazamiento completo hasta Carry.
 445+ A08C              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A08C
 447+ A08C FD 36 00 01      ld (iy+00),$01
 448+ A090 FD 36 01 80      ld (iy+01),$80
 449+ A094 FD 36 02 00      ld (iy+02),$00
 450+ A098
 451+ A098 21 30 8C         ld hl,Ctrl_5
 452+ A09B CB D6            set 2,(hl)
 453+ A09D
 454+ A09D E1           Exit pop hl
 455+ A09E C9               ret
 456+ A09F
 457+ A09F              ; ------------ ----------- ------------
 458+ A09F              ;
 459+ A09F              ;   25/9/24
 460+ A09F
 461+ A09F              Elimina_disparo_entidad
 462+ A09F
 463+ A09F 21 1E 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0A2 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0A3
 466+ A0A3 E1               pop hl
 467+ A0A4 E5               push hl
 468+ A0A5
 469+ A0A5 2C               inc l
 470+ A0A6 2C               inc l
 471+ A0A7
 472+ A0A7 CD AF A0         call Borra_6_bytes
 473+ A0AA
 474+ A0AA D1               pop de
 475+ A0AB
 476+ A0AB 21 00 00         ld hl,0
 477+ A0AE
 478+ A0AE C9               ret
 479+ A0AF
 480+ A0AF              ; ----- ----- ----- ----- -----
 481+ A0AF
 482+ A0AF              Borra_6_bytes
 483+ A0AF
 484+ A0AF 16 06            ld d,6                                                    ; Contador
 485+ A0B1 AF               xor a                                                     ; Borrador
 486+ A0B2 77           1 ld (hl),a
 487+ A0B3 2D               dec l
 488+ A0B4 15               dec d
 489+ A0B5 20 FB            jr nz,1B
 490+ A0B7
 491+ A0B7 C9               ret
 492+ A0B8
 493+ A0B8              ; --------------------------------------------------------------------------------------
 494+ A0B8              ;
 495+ A0B8              ;   12/10/24
 496+ A0B8              ;
 497+ A0B8
 498+ A0B8              Genera_datos_de_impresion_disparos_Entidades
 499+ A0B8
 500+ A0B8 3E 07            ld a,7
 501+ A0BA 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0BB
 503+ A0BB              ; ---------------
 504+ A0BB
 505+ A0BB              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0BB
 507+ A0BB 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0BE
 509+ A0BE CD B1 90     1 call Extrae_address
 510+ A0C1
 511+ A0C1 13               inc de
 512+ A0C2 13               inc de
 513+ A0C3
 514+ A0C3 ED 53 31 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0C7
 516+ A0C7 2D               dec l
 517+ A0C8 7E               ld a,(hl)
 518+ A0C9 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0CA 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0CC
 521+ A0CC              ; ----- ----- ----- -----
 522+ A0CC
 523+ A0CC 2D               dec l
 524+ A0CD CD B1 90         call Extrae_address
 525+ A0D0 E5               push hl
 526+ A0D1
 527+ A0D1 1D               dec e
 528+ A0D2
 529+ A0D2 EB               ex de,hl
 530+ A0D3
 531+ A0D3 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0D4 2D               dec l
 533+ A0D5 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0D6 2D               dec l
 535+ A0D7 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0D8
 537+ A0D8 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0D9
 539+ A0D9              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0D9
 541+ A0D9 FD 2A 1A 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0DD FD 73 00         ld (iy+0),e
 543+ A0E0 FD 70 01         ld (iy+1),b
 544+ A0E3 FD 71 02         ld (iy+2),c
 545+ A0E6
 546+ A0E6 FD 75 03         ld (iy+3),l
 547+ A0E9 FD 74 04         ld (iy+4),h
 548+ A0EC
 549+ A0EC CD D6 99         call NextScan
 550+ A0EF
 551+ A0EF FD 75 05         ld (iy+5),l
 552+ A0F2 FD 74 06         ld (iy+6),h
 553+ A0F5
 554+ A0F5 FD E5            push iy
 555+ A0F7 E1               pop hl
 556+ A0F8
 557+ A0F8 3E 07            ld a,7
 558+ A0FA 85               add l
 559+ A0FB 6F               ld l,a
 560+ A0FC
 561+ A0FC 22 1A 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A0FF
 563+ A0FF              ; ----- ----- ----- -----
 564+ A0FF
 565+ A0FF              Situa_en_siguiente_caja
 566+ A0FF
 567+ A0FF 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A100 3D               dec a
 569+ A101 C8               ret z
 570+ A102
 571+ A102 08               ex af,af
 572+ A103 2A 31 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A106 18 B6            jr 1B
 574+ A108
 575+ A108              ; --------------------------------------------------------------------------------------
 576+ A108              ;
 577+ A108              ;   12/10/24
 578+ A108              ;
 579+ A108
 580+ A108              Genera_disparo_de_entidad_maldosa
 581+ A108
 582+ A108              ;   Estructura de un disparo de entidades.
 583+ A108
 584+ A108              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A108              ; 	defw 0											; Puntero de impresión.
 586+ A108              ;	defw 0											; Control.
 587+ A108
 588+ A108              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A108              ;   _de la entidad en el momento de disparar.
 590+ A108
 591+ A108              ;   El byte de control muestra la siguiente información:
 592+ A108
 593+ A108              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A108              ;
 595+ A108              ;                        10xx ..... Izquierda.
 596+ A108              ;                        01xx ..... Derecha.
 597+ A108              ;                        00xx ..... Recto.
 598+ A108
 599+ A108              ;*  Exclusiones.
 600+ A108
 601+ A108              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A108              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A108
 604+ A108 3A 1E 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A10B A7               and a
 606+ A10C C8               ret z
 607+ A10D
 608+ A10D 3A BB 8B         ld a,(Coordenada_y)
 609+ A110 A7               and a
 610+ A111 C8               ret z
 611+ A112
 612+ A112 3D               dec a
 613+ A113 C8               ret z
 614+ A114
 615+ A114 FE 10            cp 16
 616+ A116 D0               ret nc
 617+ A117
 618+ A117              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A117              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A117              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A117
 622+ A117 21 20 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A11A 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A11B
 625+ A11B              ;   Decrementa el numero de disparos de entidades.
 626+ A11B
 627+ A11B 21 1E 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A11E 35               dec (hl)
 629+ A11F
 630+ A11F 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A122
 632+ A122 CD B1 90     1 call Extrae_address
 633+ A125
 634+ A125 13               inc de
 635+ A126 13               inc de
 636+ A127
 637+ A127 ED 53 31 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A12B
 639+ A12B              ;   Comprobamos si la caja está vacía.
 640+ A12B
 641+ A12B 2D               dec l
 642+ A12C 7E               ld a,(hl)
 643+ A12D A7               and a
 644+ A12E 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A130 2C               inc l
 646+ A131
 647+ A131              ;   Caja vacía, vamos a generar un disparo.
 648+ A131              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A131
 650+ A131 CD 52 A1         call Genera_byte_inclinacion
 651+ A134
 652+ A134 7E               ld a,(hl)
 653+ A135 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A136
 655+ A136 2D               dec l
 656+ A137
 657+ A137 CD 6E A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A13A
 659+ A13A 70               ld (hl),b
 660+ A13B 2D               dec l
 661+ A13C 71               ld (hl),c
 662+ A13D
 663+ A13D 2D               dec l
 664+ A13E
 665+ A13E              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A13E
 667+ A13E FD 7E 02         ld a,(iy+02)
 668+ A141 77               ld (hl),a
 669+ A142 2D               dec l
 670+ A143
 671+ A143 FD 7E 01         ld a,(iy+01)
 672+ A146 77               ld (hl),a
 673+ A147 2D               dec l
 674+ A148
 675+ A148 FD 7E 00         ld a,(iy+00)
 676+ A14B 77               ld (hl),a
 677+ A14C
 678+ A14C C9               ret
 679+ A14D
 680+ A14D              ;   --- --- ---
 681+ A14D
 682+ A14D              Situa_en_siguiente_disparo
 683+ A14D
 684+ A14D 2A 31 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A150 18 D0            jr 1B
 686+ A152
 687+ A152              ; --------------------------------------------------------------------------------------
 688+ A152              ;
 689+ A152              ;   09/10/24
 690+ A152              ;
 691+ A152
 692+ A152              Genera_byte_inclinacion
 693+ A152
 694+ A152              ; Determina tendencia del disparo.
 695+ A152
 696+ A152 3A 74 89         ld a,(CX_Amadeus)
 697+ A155 47               ld b,a
 698+ A156 3A BA 8B         ld a,(Coordenada_X)
 699+ A159 90               sub b
 700+ A15A 38 07            jr c,Disparo_a_derecha
 701+ A15C
 702+ A15C FE 06        Disparo_a_izquierda cp 6
 703+ A15E
 704+ A15E D8               ret c
 705+ A15F C8               ret z
 706+ A160
 707+ A160 CB FE            set 7,(hl)
 708+ A162 C9               ret
 709+ A163
 710+ A163 47           Disparo_a_derecha ld b,a
 711+ A164 3E FF            ld a,$ff
 712+ A166 90               sub b
 713+ A167
 714+ A167 FE 05            cp 5
 715+ A169
 716+ A169 D8               ret c
 717+ A16A C8               ret z
 718+ A16B
 719+ A16B CB F6            set 6,(hl)
 720+ A16D C9               ret
 721+ A16E
 722+ A16E              ; --------------------------------------------------------------------------------------
 723+ A16E              ;
 724+ A16E              ;   09/10/24
 725+ A16E              ;
 726+ A16E
 727+ A16E              Modifica_puntero_de_impresion
 728+ A16E
 729+ A16E              ;   Puntero de impresión del disparo en BC.
 730+ A16E
 731+ A16E E5               push hl
 732+ A16F
 733+ A16F 2A 33 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A172 CD D6 99         call NextScan
 735+ A175
 736+ A175 4D               ld c,l
 737+ A176 44               ld b,h
 738+ A177
 739+ A177 E1               pop hl
 740+ A178
 741+ A178 08               ex af,af
 742+ A179 CB 77            bit 6,a
 743+ A17B 28 06            jr z,1F
 744+ A17D
 745+ A17D FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A181 0C               inc c
 747+ A182 C9               ret
 748+ A183
 749+ A183 CB 7F        1 bit 7,a
 750+ A185 28 F6            jr z,2B
 751+ A187
 752+ A187 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A18B 0D               dec c
 754+ A18C
 755+ A18C C9               ret
 756+ A18D
 757+ A18D              ; --------------------------------------------------------------------------------------
 758+ A18D              ;
 759+ A18D              ;   31/08/24
 760+ A18D              ;
 761+ A18D
 762+ A18D              Compara_con_coordenadas_de_disparo
 763+ A18D
 764+ A18D 3A BB 8B         ld a,(Coordenada_y)
 765+ A190 47               ld b,a
 766+ A191 3A 38 8C         ld a,(Coordenadas_disparo_certero)
 767+ A194 90               sub b
 768+ A195
 769+ A195              ; A = "0" ok
 770+ A195              ; A = "1" ok
 771+ A195
 772+ A195 28 08            jr z,Comprueba_coordenada_X
 773+ A197 3D               dec a
 774+ A198 28 05            jr z,Comprueba_coordenada_X
 775+ A19A
 776+ A19A              ; A = "$ff" ok
 777+ A19A
 778+ A19A FE FE            cp $fe
 779+ A19C 28 01            jr z,Comprueba_coordenada_X
 780+ A19E
 781+ A19E C9               ret
 782+ A19F
 783+ A19F              Comprueba_coordenada_X
 784+ A19F
 785+ A19F 3A BA 8B         ld a,(Coordenada_X)
 786+ A1A2 47               ld b,a
 787+ A1A3 21 39 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1A6 7E               ld a,(hl)
 789+ A1A7 90               sub b
 790+ A1A8
 791+ A1A8              ; A = "0" ok
 792+ A1A8              ; A = "1" ok
 793+ A1A8
 794+ A1A8 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1AA 3D               dec a
 796+ A1AB 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1AD
 798+ A1AD              ; A = "2" ok
 799+ A1AD
 800+ A1AD 3D               dec a
 801+ A1AE 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1B0
 803+ A1B0              ; A = "$ff"
 804+ A1B0
 805+ A1B0 FE FD            cp $fd
 806+ A1B2 C0               ret nz
 807+ A1B3
 808+ A1B3              Activa_Impacto_en_entidad
 809+ A1B3
 810+ A1B3              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1B3
 812+ A1B3 3E 02            ld a,2
 813+ A1B5 32 BD 8B         ld (Impacto),a
 814+ A1B8
 815+ A1B8              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1B8
 817+ A1B8 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1BB 21 C0 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1BE
 820+ A1BE 73               ld (hl),e
 821+ A1BF 23               inc hl
 822+ A1C0 72               ld (hl),d
 823+ A1C1
 824+ A1C1              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1C1
 826+ A1C1 21 35 8C         ld hl,Impacto2
 827+ A1C4 CB 9E            res 3,(hl)
 828+ A1C6
 829+ A1C6 C9               ret
 830+ A1C7
 831+ A1C7              ; --------------------------------------------------------------------------------------
 832+ A1C7              ;
 833+ A1C7              ;   13/10/24
 834+ A1C7              ;
 835+ A1C7
 836+ A1C7              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1C7
 838+ A1C7              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1C7
 840+ A1C7 2A 12 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1CA 06 06            ld b,6
 842+ A1CC AF               xor a
 843+ A1CD 77           1 ld (hl),a
 844+ A1CE 2C               inc l
 845+ A1CF 10 FC            djnz 1B
 846+ A1D1
 847+ A1D1 C9               ret
 848+ A1D2
 849+ A1D2              ; --------------------------------------------------------------------------------------
 850+ A1D2              ;
 851+ A1D2              ;   29/09/24
 852+ A1D2              ;
 853+ A1D2
 854+ A1D2              Calcula_bytes_pintado_disparos
 855+ A1D2
 856+ A1D2 2A 16 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1D5 45               ld b,l
 858+ A1D6 2A 1A 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1D9 7D               ld a,l
 860+ A1DA
 861+ A1DA 90               sub b
 862+ A1DB 32 1C 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1DE
 864+ A1DE C9               ret
 865+ A1DF
 866+ A1DF              ; --------------------------------------------------------------------------------------
 867+ A1DF              ;
 868+ A1DF              ;   26/10/24
 869+ A1DF              ;
 870+ A1DF              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1DF              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1DF              ;   _disparos que el álbum del FRAME actual).
 873+ A1DF
 874+ A1DF              Limpia_album_de_pintado_disparos_entidades
 875+ A1DF
 876+ A1DF 21 1D 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1E2 7E               ld a,(hl)
 878+ A1E3 2D               dec l
 879+ A1E4 46               ld b,(hl)
 880+ A1E5 90               sub b
 881+ A1E6
 882+ A1E6 D8               ret c
 883+ A1E7 C8               ret z
 884+ A1E8
 885+ A1E8 F5               push af
 886+ A1E9 80               add b
 887+ A1EA 77               ld (hl),a
 888+ A1EB F1               pop af
 889+ A1EC
 890+ A1EC              ; Clean.
 891+ A1EC
 892+ A1EC 47           2 ld b,a
 893+ A1ED AF               xor a
 894+ A1EE 2A 1A 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1F1 77           1 ld (hl),a
 896+ A1F2 23               inc hl
 897+ A1F3 10 FC            djnz 1B
 898+ A1F5
 899+ A1F5 C9               ret
 900+ A1F6
 901+ A1F6              ; --------------------------------------------------------------------------------------
 902+ A1F6              ;
 903+ A1F6              ;   29/09/24
 904+ A1F6              ;
 905+ A1F6
 906+ A1F6              Motor_Disparos_Amadeus
 907+ A1F6
 908+ A1F6 21 26 89         ld hl,Disparo_Amad+1
 909+ A1F9
 910+ A1F9 34               inc (hl)
 911+ A1FA 35               dec (hl)
 912+ A1FB
 913+ A1FB C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1FC
 915+ A1FC              ;   Esta caja contiene un disparo.
 916+ A1FC
 917+ A1FC CD 03 A2         call Consulta_Impacto
 918+ A1FF CC 1C A2         call z,Mueve_disparo_Amadeus
 919+ A202
 920+ A202 C9               ret
 921+ A203
 922+ A203              ; ----------------------
 923+ A203              ;
 924+ A203              ;
 925+ A203              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A203              ;
 927+ A203              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A203
 929+ A203
 930+ A203              Consulta_Impacto
 931+ A203
 932+ A203              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A203              ;   _sea lo más coherente posible.
 934+ A203
 935+ A203 E5               push hl
 936+ A204 2B               dec hl
 937+ A205 CD F8 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A208 E1               pop hl
 939+ A209 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A20A
 941+ A20A C8               ret z
 942+ A20B
 943+ A20B 3A 35 8C         ld a,(Impacto2)
 944+ A20E CB DF            set 3,a
 945+ A210 32 35 8C         ld (Impacto2),a
 946+ A213
 947+ A213 E5               push hl
 948+ A214 CD E5 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A217 E1               pop hl
 950+ A218 CD 35 A2         call Elimina_disparo_Amadeus
 951+ A21B
 952+ A21B C9               ret
 953+ A21C
 954+ A21C              ; ----------------------
 955+ A21C              ;
 956+ A21C              ;
 957+ A21C              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A21C
 959+ A21C              Mueve_disparo_Amadeus
 960+ A21C
 961+ A21C CD B1 90         call Extrae_address
 962+ A21F
 963+ A21F CD E5 99         call PreviousScan
 964+ A222 CD E5 99         call PreviousScan
 965+ A225 CD E5 99         call PreviousScan
 966+ A228 CD E5 99         call PreviousScan
 967+ A22B
 968+ A22B              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A22B
 970+ A22B 7C               ld a,h
 971+ A22C D6 40            sub $40
 972+ A22E EB               ex de,hl
 973+ A22F 38 04            jr c,Elimina_disparo_Amadeus
 974+ A231
 975+ A231               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A231
 977+ A231 73               ld (hl),e
 978+ A232 23               inc hl
 979+ A233 72               ld (hl),d
 980+ A234
 981+ A234 C9               ret
 982+ A235
 983+ A235              ; ----------------------
 984+ A235              ;
 985+ A235              ;   29/9/24
 986+ A235
 987+ A235              Elimina_disparo_Amadeus
 988+ A235
 989+ A235              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A235              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A235
 992+ A235              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A235              ;   	defw 0											; Puntero de impresión.
 994+ A235
 995+ A235 2B               dec hl
 996+ A236 2B               dec hl
 997+ A237
 998+ A237 AF               xor a
 999+ A238 77               ld (hl),a
1000+ A239 23               inc hl
1001+ A23A 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A23B
1003+ A23B 23               inc hl
1004+ A23C 77               ld (hl),a
1005+ A23D 23               inc hl
1006+ A23E 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A23F
1008+ A23F 3E 01            ld a,1
1009+ A241 32 1F 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A244
1011+ A244 CD C7 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A247
1013+ A247 AF               xor a
1014+ A248 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A249
1016+ A249 C9               ret
1017+ A24A
1018+ A24A              ; --------------------------------------------------------------------------------------
1019+ A24A              ;
1020+ A24A              ;   13/10/24
1021+ A24A              ;
1022+ A24A
1023+ A24A              Pinta_disparos_Amadeus
1024+ A24A
1025+ A24A 06 02            ld b,2
1026+ A24C ED 73 06 8C      ld (Stack),sp
1027+ A250 ED 7B 14 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A254 D1           3 pop de
1029+ A255 14               inc d
1030+ A256 15               dec d
1031+ A257 28 1C            jr z,1F
1032+ A259 E1               pop hl
1033+ A25A
1034+ A25A              Imprime_scanlines_en_pantalla
1035+ A25A
1036+ A25A              ; 1er scanline
1037+ A25A
1038+ A25A 1A               ld a,(de)
1039+ A25B AE               xor (hl)
1040+ A25C 77               ld (hl),a
1041+ A25D
1042+ A25D 1C               inc e
1043+ A25E 2C               inc l
1044+ A25F
1045+ A25F 1A               ld a,(de)
1046+ A260 AE               xor (hl)
1047+ A261 77               ld (hl),a
1048+ A262
1049+ A262 1D               dec e
1050+ A263 E1               pop hl
1051+ A264
1052+ A264              ; 2º scanline
1053+ A264
1054+ A264 1A               ld a,(de)
1055+ A265 AE               xor (hl)
1056+ A266 77               ld (hl),a
1057+ A267
1058+ A267 1C               inc e
1059+ A268 2C               inc l
1060+ A269
1061+ A269 1A               ld a,(de)
1062+ A26A AE               xor (hl)
1063+ A26B 77               ld (hl),a
1064+ A26C
1065+ A26C 1D               dec e
1066+ A26D
1067+ A26D 18 06            jr 1F
1068+ A26F
1069+ A26F ED 7B 12 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A273 18 DF            jr 3B
1071+ A275 10 F8        1 djnz 2B
1072+ A277 ED 7B 06 8C      ld sp,(Stack)
1073+ A27B C9               ret
1074+ A27C
1075+ A27C              ; --------------------------------------------------------------------------------------
1076+ A27C              ;
1077+ A27C              ;   13/10/24
1078+ A27C              ;
1079+ A27C              ;   Modifica: HL,BC y DE.
1080+ A27C
1081+ A27C
1082+ A27C              Genera_datos_de_impresion_disparos_Amadeus
1083+ A27C
1084+ A27C ED 73 06 8C      ld (Stack),sp
1085+ A280 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A283 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A284
1088+ A284 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A285 15               dec d
1090+ A286
1091+ A286 28 0E            jr z,Salida
1092+ A288
1093+ A288              Genera_scanlines_de_disparo_Amadeus
1094+ A288
1095+ A288 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A289              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A289 ED 7B 12 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A28D
1099+ A28D C1               pop bc
1100+ A28E C1               pop bc
1101+ A28F C1               pop bc
1102+ A290
1103+ A290 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A291 CD E5 99         call PreviousScan
1105+ A294 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A295 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A296
1108+ A296              Salida
1109+ A296
1110+ A296 ED 7B 06 8C      ld sp,(Stack)
1111+ A29A
1112+ A29A C9               ret
1113+ A29B
1114+ A29B              ; --------------------------------------------------------------------------------------
1115+ A29B              ;
1116+ A29B              ;   12/09/24
1117+ A29B              ;
1118+ A29B
1119+ A29B              Genera_disparo_Amadeus
1120+ A29B
1121+ A29B              ;*  Exclusiones.
1122+ A29B
1123+ A29B 3A 1F 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A29E A7               and a
1125+ A29F C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2A0
1127+ A2A0 3D               dec a
1128+ A2A1 32 1F 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2A4
1130+ A2A4              Define_puntero_objeto_disparo
1131+ A2A4
1132+ A2A4              ;   Inicializamos contador.
1133+ A2A4
1134+ A2A4 06 00            ld b,0
1135+ A2A6
1136+ A2A6 2A 78 89         ld hl,(p.imp.amadeus)
1137+ A2A9 2C               inc l
1138+ A2AA
1139+ A2AA 3E 80            ld a,$80
1140+ A2AC BE               cp (hl)
1141+ A2AD 28 0D            jr z,1F
1142+ A2AF
1143+ A2AF 04               inc b
1144+ A2B0
1145+ A2B0 3E 60            ld a,$60
1146+ A2B2 BE               cp (hl)
1147+ A2B3 28 07            jr z,1F
1148+ A2B5
1149+ A2B5
1150+ A2B5 04               inc b
1151+ A2B6
1152+ A2B6 3E 18            ld a,$18
1153+ A2B8 BE               cp (hl)
1154+ A2B9 28 01            jr z,1F
1155+ A2BB
1156+ A2BB 04               inc b
1157+ A2BC
1158+ A2BC              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2BC
1160+ A2BC              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2BC
1162+ A2BC CD E5 99     1 call PreviousScan
1163+ A2BF
1164+ A2BF 78               ld a,b
1165+ A2C0 CB 3F            srl a
1166+ A2C2 28 03            jr z,4F
1167+ A2C4
1168+ A2C4              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2C4 E5               push hl
1170+ A2C5 18 02            jr 5F
1171+ A2C7 2D           4 dec l
1172+ A2C8 E5               push hl
1173+ A2C9              ; ---
1174+ A2C9
1175+ A2C9              ;   Calcula el Puntero_objeto del disparo.
1176+ A2C9
1177+ A2C9 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2CC 04               inc b
1179+ A2CD 05               dec b
1180+ A2CE 28 04            jr z,2F
1181+ A2D0
1182+ A2D0              ;   Nos desplazamos por el índice de disparos.
1183+ A2D0
1184+ A2D0 2C           3 inc l
1185+ A2D1 2C               inc l
1186+ A2D2 10 FC            djnz 3B
1187+ A2D4
1188+ A2D4              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2D4 CD B1 90     2 call Extrae_address
1190+ A2D7 E5               push hl
1191+ A2D8              ; ---
1192+ A2D8
1193+ A2D8              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2D8              ; HL en el 1er .db de la caja.
1195+ A2D8
1196+ A2D8 21 25 89         ld hl,Disparo_Amad
1197+ A2DB
1198+ A2DB 06 02            ld b,2
1199+ A2DD
1200+ A2DD D1           6 pop de
1201+ A2DE 73               ld (hl),e
1202+ A2DF 23               inc hl
1203+ A2E0 72               ld (hl),d
1204+ A2E1 23               inc hl
1205+ A2E2
1206+ A2E2 10 F9            djnz 6B
1207+ A2E4
1208+ A2E4 C9               ret
1209+ A2E5
1210+ A2E5              Genera_coordenadas_de_disparo_Amadeus
1211+ A2E5
1212+ A2E5              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2E5              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2E5              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2E5
1216+ A2E5 CD B1 90         call Extrae_address
1217+ A2E8 CD DC 94         call Genera_coordenadas
1218+ A2EB
1219+ A2EB 3D               dec a
1220+ A2EC
1221+ A2EC 21 38 8C         ld hl,Coordenadas_disparo_certero
1222+ A2EF 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2F0 23               inc hl
1224+ A2F1 3A BA 8B         ld a,(Coordenada_X)
1225+ A2F4 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2F5
1227+ A2F5 AF               xor a
1228+ A2F6 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2F7
1230+ A2F7 C9               ret
1231+ A2F8
1232+ A2F8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2F8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2F8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2F8
1236+ A2F8              ; ----------------------------------------------
1237+ A2F8              ;
1238+ A2F8              ;   27/08/24
1239+ A2F8              ;
1240+ A2F8              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2F8              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2F8
1243+ A2F8              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2F8
1245+ A2F8              Extraccion_de_datos
1246+ A2F8
1247+ A2F8 13               inc de
1248+ A2F9 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2FA
1250+ A2FA 5E               ld e,(hl)
1251+ A2FB 23               inc hl
1252+ A2FC 56               ld d,(hl)
1253+ A2FD
1254+ A2FD 23               inc hl
1255+ A2FE
1256+ A2FE 4E               ld c,(hl)
1257+ A2FF 23               inc hl
1258+ A300 46               ld b,(hl)
1259+ A301
1260+ A301 C5               push bc
1261+ A302 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A303
1263+ A303              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A303
1265+ A303 CD E5 99         call PreviousScan
1266+ A306 CD E5 99         call PreviousScan
1267+ A309
1268+ A309              Detecta_impacto_
1269+ A309
1270+ A309 1A               ld a,(de)
1271+ A30A A6               and (hl)
1272+ A30B C0               ret nz
1273+ A30C
1274+ A30C 13               inc de
1275+ A30D 23               inc hl
1276+ A30E
1277+ A30E 1A               ld a,(de)
1278+ A30F A6               and (hl)
1279+ A310 C9               ret
1280+ A311
1281+ A311              ; -------------------------------------------------------------------------------------------------------------
1282+ A311              ;
1283+ A311              ;   8/8/24
1284+ A311              ;
1285+ A311              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A311              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A311              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A311              ;
1289+ A311              ;   MODIFICA: HL,DE,BC y A.
1290+ A311              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A311              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A311
1293+ A311              Colision_Entidad_Amadeus
1294+ A311
1295+ A311              ; Posible contacto de entidad con Amadeus. ?????
1296+ A311
1297+ A311              ; Exclusiones:
1298+ A311
1299+ A311 3A 58 8C         ld a,(Shield)
1300+ A314 A7               and a
1301+ A315 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A316
1303+ A316 21 2E 8C         ld hl,Ctrl_3
1304+ A319 CB 76            bit 6,(hl)
1305+ A31B C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A31C
1307+ A31C 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A31F CB 56            bit 2,(hl)
1309+ A321 C0               ret nz
1310+ A322
1311+ A322 3A BB 8B     	ld a,(Coordenada_y)
1312+ A325 FE 14        	cp $14
1313+ A327 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A328
1315+ A328 3A 77 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A32B A7               and a
1317+ A32C C0               ret nz
1318+ A32D
1319+ A32D              Genera_coordenadas_X
1320+ A32D
1321+ A32D              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A32D              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A32D
1324+ A32D              ;   Limpiamos almacenes.
1325+ A32D
1326+ A32D              ;    call Limpia_Coordenadas_X
1327+ A32D
1328+ A32D              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A32D
1330+ A32D 21 3A 8C         ld hl,Coordenadas_X_Entidad
1331+ A330 3A BA 8B         ld a,(Coordenada_X)
1332+ A333 CD 55 A3         call Guarda_coordenadas_X
1333+ A336
1334+ A336              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A336
1336+ A336 3A 74 89         ld a,(CX_Amadeus)
1337+ A339 CD 55 A3         call Guarda_coordenadas_X
1338+ A33C CD 69 A3         call Compara_coordenadas_X
1339+ A33F C0               ret nz
1340+ A340
1341+ A340 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A342 32 BD 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A345
1344+ A345 2A F9 8B         ld hl,(Puntero_store_caja)
1345+ A348 2C               inc l
1346+ A349 2C               inc l
1347+ A34A 2C               inc l
1348+ A34B 2C               inc l
1349+ A34C 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A34F
1351+ A34F 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A352 CB D6            set 2,(hl)
1353+ A354
1354+ A354 C9               ret
1355+ A355
1356+ A355               ; ----- ----- ----- ----- -----
1357+ A355
1358+ A355 77           Guarda_coordenadas_X ld (hl),a
1359+ A356 3C               inc a
1360+ A357 2C               inc l
1361+ A358 77               ld (hl),a
1362+ A359 3C               inc a
1363+ A35A 2C               inc l
1364+ A35B 77               ld (hl),a
1365+ A35C 2C               inc l
1366+ A35D C9               ret
1367+ A35E
1368+ A35E AF           Limpia_Coordenadas_X xor a
1369+ A35F 06 06            ld b,6
1370+ A361 21 3D 8C         ld hl,Coordenadas_X_Amadeus
1371+ A364 77           1 ld (hl),a
1372+ A365 23               inc hl
1373+ A366 10 FC            djnz 1B
1374+ A368 C9               ret
1375+ A369
1376+ A369              ; ----- ----- ----- ----- -----
1377+ A369
1378+ A369              Compara_coordenadas_X
1379+ A369
1380+ A369 DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
1381+ A36D DD 7E 00         ld a,(ix+0)
1382+ A370 CD 7E A3         call Comparando
1383+ A373 C8               ret z
1384+ A374
1385+ A374 3C               inc a
1386+ A375 CD 8D A3         call Comparando_1
1387+ A378 C8               ret z
1388+ A379
1389+ A379 3C               inc a
1390+ A37A CD 8D A3         call Comparando_1
1391+ A37D C9               ret
1392+ A37E
1393+ A37E              ; ----- ----- ----- ----- -----
1394+ A37E              ;
1395+ A37E              ;   4/12/23
1396+ A37E              ;
1397+ A37E              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A37E
1399+ A37E              Comparando
1400+ A37E
1401+ A37E DD 2C            inc ixl
1402+ A380 DD 2C            inc ixl
1403+ A382 DD 2C            inc ixl
1404+ A384
1405+ A384 DD 46 00         ld b,(ix+0)
1406+ A387 DD 4E 01         ld c,(ix+1)
1407+ A38A DD 56 02         ld d,(ix+2)
1408+ A38D
1409+ A38D B8           Comparando_1 cp b
1410+ A38E C8               ret z
1411+ A38F B9               cp c
1412+ A390 C8               ret z
1413+ A391 BA               cp d
1414+ A392 C9               ret
1415+ A393
1416+ A393              ; -----------------------------------------------------------------------
1417+ A393              ;
1418+ A393              ;   04/7/24
1419+ A393              ;
1420+ A393
1421+ A393              Detecta_colision_nave_entidad
1422+ A393
1423+ A393              ; Exclusiones:
1424+ A393
1425+ A393              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A393
1427+ A393 21 35 8C     	ld hl,Impacto2
1428+ A396 CB 56        	bit 2,(hl)
1429+ A398 C8           	ret z
1430+ A399
1431+ A399              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A399
1433+ A399 2A 7A 89         ld hl,(Pamm_Amadeus)
1434+ A39C CD B1 90         call Extrae_address
1435+ A39F 54               ld d,h
1436+ A3A0 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A3A1
1438+ A3A1 2A 78 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A3A4 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A3A6 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A3A9
1442+ A3A9 C5           1 push bc
1443+ A3AA 06 03            ld b,3
1444+ A3AC E5               push hl
1445+ A3AD
1446+ A3AD              ; .db
1447+ A3AD
1448+ A3AD 1A           3 ld a,(de)
1449+ A3AE A7               and a
1450+ A3AF 20 03            jr nz,4F
1451+ A3B1
1452+ A3B1 2C               inc l
1453+ A3B2 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A3B4
1455+ A3B4 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A3B6 28 04            jr z,2F
1457+ A3B8
1458+ A3B8              ; Impacto.
1459+ A3B8 FD 2D            dec iyl
1460+ A3BA 28 22            jr z,5F
1461+ A3BC
1462+ A3BC 1C           2 inc e
1463+ A3BD 10 EE            djnz 3B
1464+ A3BF
1465+ A3BF E1               pop hl
1466+ A3C0
1467+ A3C0              ; Hay salto de línea en el puntero de impresión ???
1468+ A3C0
1469+ A3C0 7C               ld a,h
1470+ A3C1 D6 57            sub $57
1471+ A3C3 20 0A            jr nz,6F
1472+ A3C5
1473+ A3C5              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3C5
1475+ A3C5 2A 78 89         ld hl,(p.imp.amadeus)
1476+ A3C8 3E 20            ld a,$20
1477+ A3CA A7               and a
1478+ A3CB 85               add l
1479+ A3CC 6F               ld l,a
1480+ A3CD 18 01            jr 7F
1481+ A3CF
1482+ A3CF 24           6 inc h
1483+ A3D0
1484+ A3D0 C1           7 pop bc
1485+ A3D1 10 D6            djnz 1B
1486+ A3D3
1487+ A3D3              ;   Fin de la comparativa.
1488+ A3D3
1489+ A3D3              ;   NO HAY COLISIÓN !!!!!.
1490+ A3D3              ;
1491+ A3D3              ;   .db (Impacto) de Amadeus a "0".
1492+ A3D3              ;   RES el bit2 de (Impacto2).
1493+ A3D3              ;
1494+ A3D3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3D3              ;   Lo colocamos a "0".
1496+ A3D3
1497+ A3D3 21 35 8C         ld hl,Impacto2
1498+ A3D6 CB 96            res 2,(hl)
1499+ A3D8 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3DB 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3DD C9               ret
1502+ A3DE
1503+ A3DE              ;   COLISIÓN !!!!!.
1504+ A3DE              ;
1505+ A3DE              ;   .db (Impacto) de Amadeus a "1".
1506+ A3DE              ;   SET el bit3 de (Impacto2).
1507+ A3DE              ;
1508+ A3DE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3DE
1510+ A3DE E1           5 pop hl
1511+ A3DF C1               pop bc
1512+ A3E0
1513+ A3E0 21 77 89         ld hl,Impacto_Amadeus
1514+ A3E3 36 01            ld (hl),1
1515+ A3E5 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3E8 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3EA
1518+ A3EA 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3ED 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3F0
1521+ A3F0 23               inc hl
1522+ A3F1 23               inc hl
1523+ A3F2 23               inc hl
1524+ A3F3
1525+ A3F3 73               ld (hl),e
1526+ A3F4 23               inc hl
1527+ A3F5 72               ld (hl),d
1528+ A3F6
1529+ A3F6              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3F6
1531+ A3F6 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3F9 21 7A 89         ld hl,Pamm_Amadeus
1533+ A3FC
1534+ A3FC 73               ld (hl),e
1535+ A3FD 23               inc hl
1536+ A3FE 72               ld (hl),d
1537+ A3FF
1538+ A3FF C9               ret
1539+ A400
1540+ A400
1541+ A400
# file closed: Disparo.asm
2084  A400
2085  A400              	SAVESNA "Pruebas.sna", START
2086  A400
2087  A400
2088  A400
2089  A400
# file closed: Banco_de_pruebas.asm
